

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Oct 17 08:17:42 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	intentry,global,class=CODE,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	dabs	1,0x7E,2
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020D                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  0FE4                     	;# 
   204  0FE5                     	;# 
   205  0FE6                     	;# 
   206  0FE7                     	;# 
   207  0FE8                     	;# 
   208  0FE9                     	;# 
   209  0FEA                     	;# 
   210  0FEB                     	;# 
   211  0FED                     	;# 
   212  0FEE                     	;# 
   213  0FEF                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  011D                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  018E                     	;# 
   266  0191                     	;# 
   267  0191                     	;# 
   268  0192                     	;# 
   269  0193                     	;# 
   270  0193                     	;# 
   271  0194                     	;# 
   272  0195                     	;# 
   273  0196                     	;# 
   274  0197                     	;# 
   275  0199                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  020D                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0298                     	;# 
   308  0298                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  0394                     	;# 
   312  0395                     	;# 
   313  0396                     	;# 
   314  0FE4                     	;# 
   315  0FE5                     	;# 
   316  0FE6                     	;# 
   317  0FE7                     	;# 
   318  0FE8                     	;# 
   319  0FE9                     	;# 
   320  0FEA                     	;# 
   321  0FEB                     	;# 
   322  0FED                     	;# 
   323  0FEE                     	;# 
   324  0FEF                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  0116                     	;# 
   372  0117                     	;# 
   373  011D                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  018E                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0197                     	;# 
   386  0199                     	;# 
   387  019A                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020D                     	;# 
   398  0210                     	;# 
   399  0211                     	;# 
   400  0211                     	;# 
   401  0212                     	;# 
   402  0212                     	;# 
   403  0213                     	;# 
   404  0213                     	;# 
   405  0214                     	;# 
   406  0214                     	;# 
   407  0215                     	;# 
   408  0215                     	;# 
   409  0215                     	;# 
   410  0216                     	;# 
   411  0216                     	;# 
   412  0217                     	;# 
   413  0217                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0298                     	;# 
   419  0298                     	;# 
   420  0299                     	;# 
   421  029A                     	;# 
   422  0394                     	;# 
   423  0395                     	;# 
   424  0396                     	;# 
   425  0FE4                     	;# 
   426  0FE5                     	;# 
   427  0FE6                     	;# 
   428  0FE7                     	;# 
   429  0FE8                     	;# 
   430  0FE9                     	;# 
   431  0FEA                     	;# 
   432  0FEB                     	;# 
   433  0FED                     	;# 
   434  0FEE                     	;# 
   435  0FEF                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  0090                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0116                     	;# 
   483  0117                     	;# 
   484  011D                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  018E                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0197                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019F                     	;# 
   508  020D                     	;# 
   509  0210                     	;# 
   510  0211                     	;# 
   511  0211                     	;# 
   512  0212                     	;# 
   513  0212                     	;# 
   514  0213                     	;# 
   515  0213                     	;# 
   516  0214                     	;# 
   517  0214                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0216                     	;# 
   522  0216                     	;# 
   523  0217                     	;# 
   524  0217                     	;# 
   525  0291                     	;# 
   526  0291                     	;# 
   527  0292                     	;# 
   528  0293                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  0394                     	;# 
   534  0395                     	;# 
   535  0396                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  011D                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0197                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019D                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  020D                     	;# 
   620  0210                     	;# 
   621  0211                     	;# 
   622  0211                     	;# 
   623  0212                     	;# 
   624  0212                     	;# 
   625  0213                     	;# 
   626  0213                     	;# 
   627  0214                     	;# 
   628  0214                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0216                     	;# 
   633  0216                     	;# 
   634  0217                     	;# 
   635  0217                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  0394                     	;# 
   645  0395                     	;# 
   646  0396                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  011D                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0194                     	;# 
   716  0195                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020D                     	;# 
   731  0210                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  0394                     	;# 
   756  0395                     	;# 
   757  0396                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  0000                     	;# 
   770  0001                     	;# 
   771  0002                     	;# 
   772  0003                     	;# 
   773  0004                     	;# 
   774  0005                     	;# 
   775  0006                     	;# 
   776  0007                     	;# 
   777  0008                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  000D                     	;# 
   783  000E                     	;# 
   784  0010                     	;# 
   785  0011                     	;# 
   786  0012                     	;# 
   787  0015                     	;# 
   788  0016                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001C                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  0090                     	;# 
   800  0091                     	;# 
   801  0092                     	;# 
   802  0095                     	;# 
   803  0096                     	;# 
   804  0097                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  009B                     	;# 
   808  009B                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009E                     	;# 
   812  010C                     	;# 
   813  010D                     	;# 
   814  010E                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  011D                     	;# 
   818  018C                     	;# 
   819  018D                     	;# 
   820  018E                     	;# 
   821  0191                     	;# 
   822  0191                     	;# 
   823  0192                     	;# 
   824  0193                     	;# 
   825  0193                     	;# 
   826  0194                     	;# 
   827  0195                     	;# 
   828  0196                     	;# 
   829  0197                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019C                     	;# 
   837  019C                     	;# 
   838  019D                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  020D                     	;# 
   842  0210                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0213                     	;# 
   849  0214                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0216                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0217                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0298                     	;# 
   863  0298                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  0394                     	;# 
   867  0395                     	;# 
   868  0396                     	;# 
   869  0FE4                     	;# 
   870  0FE5                     	;# 
   871  0FE6                     	;# 
   872  0FE7                     	;# 
   873  0FE8                     	;# 
   874  0FE9                     	;# 
   875  0FEA                     	;# 
   876  0FEB                     	;# 
   877  0FED                     	;# 
   878  0FEE                     	;# 
   879  0FEF                     	;# 
   880  0000                     	;# 
   881  0001                     	;# 
   882  0002                     	;# 
   883  0003                     	;# 
   884  0004                     	;# 
   885  0005                     	;# 
   886  0006                     	;# 
   887  0007                     	;# 
   888  0008                     	;# 
   889  0009                     	;# 
   890  000A                     	;# 
   891  000B                     	;# 
   892  000C                     	;# 
   893  000D                     	;# 
   894  000E                     	;# 
   895  0010                     	;# 
   896  0011                     	;# 
   897  0012                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  008C                     	;# 
   908  008D                     	;# 
   909  008E                     	;# 
   910  0090                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0095                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0099                     	;# 
   917  009A                     	;# 
   918  009B                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  0116                     	;# 
   927  0117                     	;# 
   928  011D                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  018E                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0197                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020D                     	;# 
   953  0210                     	;# 
   954  0211                     	;# 
   955  0211                     	;# 
   956  0212                     	;# 
   957  0212                     	;# 
   958  0213                     	;# 
   959  0213                     	;# 
   960  0214                     	;# 
   961  0214                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0216                     	;# 
   966  0216                     	;# 
   967  0217                     	;# 
   968  0217                     	;# 
   969  0291                     	;# 
   970  0291                     	;# 
   971  0292                     	;# 
   972  0293                     	;# 
   973  0298                     	;# 
   974  0298                     	;# 
   975  0299                     	;# 
   976  029A                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0FE4                     	;# 
   981  0FE5                     	;# 
   982  0FE6                     	;# 
   983  0FE7                     	;# 
   984  0FE8                     	;# 
   985  0FE9                     	;# 
   986  0FEA                     	;# 
   987  0FEB                     	;# 
   988  0FED                     	;# 
   989  0FEE                     	;# 
   990  0FEF                     	;# 
   991  0000                     	;# 
   992  0001                     	;# 
   993  0002                     	;# 
   994  0003                     	;# 
   995  0004                     	;# 
   996  0005                     	;# 
   997  0006                     	;# 
   998  0007                     	;# 
   999  0008                     	;# 
  1000  0009                     	;# 
  1001  000A                     	;# 
  1002  000B                     	;# 
  1003  000C                     	;# 
  1004  000D                     	;# 
  1005  000E                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0015                     	;# 
  1010  0016                     	;# 
  1011  0016                     	;# 
  1012  0017                     	;# 
  1013  0018                     	;# 
  1014  0019                     	;# 
  1015  001A                     	;# 
  1016  001B                     	;# 
  1017  001C                     	;# 
  1018  008C                     	;# 
  1019  008D                     	;# 
  1020  008E                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0097                     	;# 
  1027  0099                     	;# 
  1028  009A                     	;# 
  1029  009B                     	;# 
  1030  009B                     	;# 
  1031  009C                     	;# 
  1032  009D                     	;# 
  1033  009E                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  0116                     	;# 
  1038  0117                     	;# 
  1039  011D                     	;# 
  1040  018C                     	;# 
  1041  018D                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0197                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019C                     	;# 
  1059  019C                     	;# 
  1060  019D                     	;# 
  1061  019E                     	;# 
  1062  019F                     	;# 
  1063  020D                     	;# 
  1064  0210                     	;# 
  1065  0211                     	;# 
  1066  0211                     	;# 
  1067  0212                     	;# 
  1068  0212                     	;# 
  1069  0213                     	;# 
  1070  0213                     	;# 
  1071  0214                     	;# 
  1072  0214                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  0291                     	;# 
  1081  0291                     	;# 
  1082  0292                     	;# 
  1083  0293                     	;# 
  1084  0298                     	;# 
  1085  0298                     	;# 
  1086  0299                     	;# 
  1087  029A                     	;# 
  1088  0394                     	;# 
  1089  0395                     	;# 
  1090  0396                     	;# 
  1091  0FE4                     	;# 
  1092  0FE5                     	;# 
  1093  0FE6                     	;# 
  1094  0FE7                     	;# 
  1095  0FE8                     	;# 
  1096  0FE9                     	;# 
  1097  0FEA                     	;# 
  1098  0FEB                     	;# 
  1099  0FED                     	;# 
  1100  0FEE                     	;# 
  1101  0FEF                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0008                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  0010                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  008C                     	;# 
  1130  008D                     	;# 
  1131  008E                     	;# 
  1132  0090                     	;# 
  1133  0091                     	;# 
  1134  0092                     	;# 
  1135  0095                     	;# 
  1136  0096                     	;# 
  1137  0097                     	;# 
  1138  0099                     	;# 
  1139  009A                     	;# 
  1140  009B                     	;# 
  1141  009B                     	;# 
  1142  009C                     	;# 
  1143  009D                     	;# 
  1144  009E                     	;# 
  1145  010C                     	;# 
  1146  010D                     	;# 
  1147  010E                     	;# 
  1148  0116                     	;# 
  1149  0117                     	;# 
  1150  011D                     	;# 
  1151  018C                     	;# 
  1152  018D                     	;# 
  1153  018E                     	;# 
  1154  0191                     	;# 
  1155  0191                     	;# 
  1156  0192                     	;# 
  1157  0193                     	;# 
  1158  0193                     	;# 
  1159  0194                     	;# 
  1160  0195                     	;# 
  1161  0196                     	;# 
  1162  0197                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019B                     	;# 
  1168  019B                     	;# 
  1169  019C                     	;# 
  1170  019C                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019F                     	;# 
  1174  020D                     	;# 
  1175  0210                     	;# 
  1176  0211                     	;# 
  1177  0211                     	;# 
  1178  0212                     	;# 
  1179  0212                     	;# 
  1180  0213                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0215                     	;# 
  1187  0216                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0217                     	;# 
  1191  0291                     	;# 
  1192  0291                     	;# 
  1193  0292                     	;# 
  1194  0293                     	;# 
  1195  0298                     	;# 
  1196  0298                     	;# 
  1197  0299                     	;# 
  1198  029A                     	;# 
  1199  0394                     	;# 
  1200  0395                     	;# 
  1201  0396                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE9                     	;# 
  1208  0FEA                     	;# 
  1209  0FEB                     	;# 
  1210  0FED                     	;# 
  1211  0FEE                     	;# 
  1212  0FEF                     	;# 
  1213  0000                     	;# 
  1214  0001                     	;# 
  1215  0002                     	;# 
  1216  0003                     	;# 
  1217  0004                     	;# 
  1218  0005                     	;# 
  1219  0006                     	;# 
  1220  0007                     	;# 
  1221  0008                     	;# 
  1222  0009                     	;# 
  1223  000A                     	;# 
  1224  000B                     	;# 
  1225  000C                     	;# 
  1226  000D                     	;# 
  1227  000E                     	;# 
  1228  0010                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001B                     	;# 
  1239  001C                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0095                     	;# 
  1247  0096                     	;# 
  1248  0097                     	;# 
  1249  0099                     	;# 
  1250  009A                     	;# 
  1251  009B                     	;# 
  1252  009B                     	;# 
  1253  009C                     	;# 
  1254  009D                     	;# 
  1255  009E                     	;# 
  1256  010C                     	;# 
  1257  010D                     	;# 
  1258  010E                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  011D                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  018E                     	;# 
  1265  0191                     	;# 
  1266  0191                     	;# 
  1267  0192                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0197                     	;# 
  1274  0199                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019C                     	;# 
  1281  019C                     	;# 
  1282  019D                     	;# 
  1283  019E                     	;# 
  1284  019F                     	;# 
  1285  020D                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0213                     	;# 
  1293  0214                     	;# 
  1294  0214                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0298                     	;# 
  1307  0298                     	;# 
  1308  0299                     	;# 
  1309  029A                     	;# 
  1310  0394                     	;# 
  1311  0395                     	;# 
  1312  0396                     	;# 
  1313  0FE4                     	;# 
  1314  0FE5                     	;# 
  1315  0FE6                     	;# 
  1316  0FE7                     	;# 
  1317  0FE8                     	;# 
  1318  0FE9                     	;# 
  1319  0FEA                     	;# 
  1320  0FEB                     	;# 
  1321  0FED                     	;# 
  1322  0FEE                     	;# 
  1323  0FEF                     	;# 
  1324  0000                     	;# 
  1325  0001                     	;# 
  1326  0002                     	;# 
  1327  0003                     	;# 
  1328  0004                     	;# 
  1329  0005                     	;# 
  1330  0006                     	;# 
  1331  0007                     	;# 
  1332  0008                     	;# 
  1333  0009                     	;# 
  1334  000A                     	;# 
  1335  000B                     	;# 
  1336  000C                     	;# 
  1337  000D                     	;# 
  1338  000E                     	;# 
  1339  0010                     	;# 
  1340  0011                     	;# 
  1341  0012                     	;# 
  1342  0015                     	;# 
  1343  0016                     	;# 
  1344  0016                     	;# 
  1345  0017                     	;# 
  1346  0018                     	;# 
  1347  0019                     	;# 
  1348  001A                     	;# 
  1349  001B                     	;# 
  1350  001C                     	;# 
  1351  008C                     	;# 
  1352  008D                     	;# 
  1353  008E                     	;# 
  1354  0090                     	;# 
  1355  0091                     	;# 
  1356  0092                     	;# 
  1357  0095                     	;# 
  1358  0096                     	;# 
  1359  0097                     	;# 
  1360  0099                     	;# 
  1361  009A                     	;# 
  1362  009B                     	;# 
  1363  009B                     	;# 
  1364  009C                     	;# 
  1365  009D                     	;# 
  1366  009E                     	;# 
  1367  010C                     	;# 
  1368  010D                     	;# 
  1369  010E                     	;# 
  1370  0116                     	;# 
  1371  0117                     	;# 
  1372  011D                     	;# 
  1373  018C                     	;# 
  1374  018D                     	;# 
  1375  018E                     	;# 
  1376  0191                     	;# 
  1377  0191                     	;# 
  1378  0192                     	;# 
  1379  0193                     	;# 
  1380  0193                     	;# 
  1381  0194                     	;# 
  1382  0195                     	;# 
  1383  0196                     	;# 
  1384  0197                     	;# 
  1385  0199                     	;# 
  1386  019A                     	;# 
  1387  019B                     	;# 
  1388  019B                     	;# 
  1389  019B                     	;# 
  1390  019B                     	;# 
  1391  019C                     	;# 
  1392  019C                     	;# 
  1393  019D                     	;# 
  1394  019E                     	;# 
  1395  019F                     	;# 
  1396  020D                     	;# 
  1397  0210                     	;# 
  1398  0211                     	;# 
  1399  0211                     	;# 
  1400  0212                     	;# 
  1401  0212                     	;# 
  1402  0213                     	;# 
  1403  0213                     	;# 
  1404  0214                     	;# 
  1405  0214                     	;# 
  1406  0215                     	;# 
  1407  0215                     	;# 
  1408  0215                     	;# 
  1409  0216                     	;# 
  1410  0216                     	;# 
  1411  0217                     	;# 
  1412  0217                     	;# 
  1413  0291                     	;# 
  1414  0291                     	;# 
  1415  0292                     	;# 
  1416  0293                     	;# 
  1417  0298                     	;# 
  1418  0298                     	;# 
  1419  0299                     	;# 
  1420  029A                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0015                     	;# 
  1454  0016                     	;# 
  1455  0016                     	;# 
  1456  0017                     	;# 
  1457  0018                     	;# 
  1458  0019                     	;# 
  1459  001A                     	;# 
  1460  001B                     	;# 
  1461  001C                     	;# 
  1462  008C                     	;# 
  1463  008D                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0095                     	;# 
  1469  0096                     	;# 
  1470  0097                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0116                     	;# 
  1482  0117                     	;# 
  1483  011D                     	;# 
  1484  018C                     	;# 
  1485  018D                     	;# 
  1486  018E                     	;# 
  1487  0191                     	;# 
  1488  0191                     	;# 
  1489  0192                     	;# 
  1490  0193                     	;# 
  1491  0193                     	;# 
  1492  0194                     	;# 
  1493  0195                     	;# 
  1494  0196                     	;# 
  1495  0197                     	;# 
  1496  0199                     	;# 
  1497  019A                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019E                     	;# 
  1506  019F                     	;# 
  1507  020D                     	;# 
  1508  0210                     	;# 
  1509  0211                     	;# 
  1510  0211                     	;# 
  1511  0212                     	;# 
  1512  0212                     	;# 
  1513  0213                     	;# 
  1514  0213                     	;# 
  1515  0214                     	;# 
  1516  0214                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0216                     	;# 
  1521  0216                     	;# 
  1522  0217                     	;# 
  1523  0217                     	;# 
  1524  0291                     	;# 
  1525  0291                     	;# 
  1526  0292                     	;# 
  1527  0293                     	;# 
  1528  0298                     	;# 
  1529  0298                     	;# 
  1530  0299                     	;# 
  1531  029A                     	;# 
  1532  0394                     	;# 
  1533  0395                     	;# 
  1534  0396                     	;# 
  1535  0FE4                     	;# 
  1536  0FE5                     	;# 
  1537  0FE6                     	;# 
  1538  0FE7                     	;# 
  1539  0FE8                     	;# 
  1540  0FE9                     	;# 
  1541  0FEA                     	;# 
  1542  0FEB                     	;# 
  1543  0FED                     	;# 
  1544  0FEE                     	;# 
  1545  0FEF                     	;# 
  1546  0000                     	;# 
  1547  0001                     	;# 
  1548  0002                     	;# 
  1549  0003                     	;# 
  1550  0004                     	;# 
  1551  0005                     	;# 
  1552  0006                     	;# 
  1553  0007                     	;# 
  1554  0008                     	;# 
  1555  0009                     	;# 
  1556  000A                     	;# 
  1557  000B                     	;# 
  1558  000C                     	;# 
  1559  000D                     	;# 
  1560  000E                     	;# 
  1561  0010                     	;# 
  1562  0011                     	;# 
  1563  0012                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  001A                     	;# 
  1571  001B                     	;# 
  1572  001C                     	;# 
  1573  008C                     	;# 
  1574  008D                     	;# 
  1575  008E                     	;# 
  1576  0090                     	;# 
  1577  0091                     	;# 
  1578  0092                     	;# 
  1579  0095                     	;# 
  1580  0096                     	;# 
  1581  0097                     	;# 
  1582  0099                     	;# 
  1583  009A                     	;# 
  1584  009B                     	;# 
  1585  009B                     	;# 
  1586  009C                     	;# 
  1587  009D                     	;# 
  1588  009E                     	;# 
  1589  010C                     	;# 
  1590  010D                     	;# 
  1591  010E                     	;# 
  1592  0116                     	;# 
  1593  0117                     	;# 
  1594  011D                     	;# 
  1595  018C                     	;# 
  1596  018D                     	;# 
  1597  018E                     	;# 
  1598  0191                     	;# 
  1599  0191                     	;# 
  1600  0192                     	;# 
  1601  0193                     	;# 
  1602  0193                     	;# 
  1603  0194                     	;# 
  1604  0195                     	;# 
  1605  0196                     	;# 
  1606  0197                     	;# 
  1607  0199                     	;# 
  1608  019A                     	;# 
  1609  019B                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019C                     	;# 
  1614  019C                     	;# 
  1615  019D                     	;# 
  1616  019E                     	;# 
  1617  019F                     	;# 
  1618  020D                     	;# 
  1619  0210                     	;# 
  1620  0211                     	;# 
  1621  0211                     	;# 
  1622  0212                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0213                     	;# 
  1626  0214                     	;# 
  1627  0214                     	;# 
  1628  0215                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0216                     	;# 
  1632  0216                     	;# 
  1633  0217                     	;# 
  1634  0217                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0298                     	;# 
  1640  0298                     	;# 
  1641  0299                     	;# 
  1642  029A                     	;# 
  1643  0394                     	;# 
  1644  0395                     	;# 
  1645  0396                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEB                     	;# 
  1654  0FED                     	;# 
  1655  0FEE                     	;# 
  1656  0FEF                     	;# 
  1657  0000                     	;# 
  1658  0001                     	;# 
  1659  0002                     	;# 
  1660  0003                     	;# 
  1661  0004                     	;# 
  1662  0005                     	;# 
  1663  0006                     	;# 
  1664  0007                     	;# 
  1665  0008                     	;# 
  1666  0009                     	;# 
  1667  000A                     	;# 
  1668  000B                     	;# 
  1669  000C                     	;# 
  1670  000D                     	;# 
  1671  000E                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0015                     	;# 
  1676  0016                     	;# 
  1677  0016                     	;# 
  1678  0017                     	;# 
  1679  0018                     	;# 
  1680  0019                     	;# 
  1681  001A                     	;# 
  1682  001B                     	;# 
  1683  001C                     	;# 
  1684  008C                     	;# 
  1685  008D                     	;# 
  1686  008E                     	;# 
  1687  0090                     	;# 
  1688  0091                     	;# 
  1689  0092                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0099                     	;# 
  1694  009A                     	;# 
  1695  009B                     	;# 
  1696  009B                     	;# 
  1697  009C                     	;# 
  1698  009D                     	;# 
  1699  009E                     	;# 
  1700  010C                     	;# 
  1701  010D                     	;# 
  1702  010E                     	;# 
  1703  0116                     	;# 
  1704  0117                     	;# 
  1705  011D                     	;# 
  1706  018C                     	;# 
  1707  018D                     	;# 
  1708  018E                     	;# 
  1709  0191                     	;# 
  1710  0191                     	;# 
  1711  0192                     	;# 
  1712  0193                     	;# 
  1713  0193                     	;# 
  1714  0194                     	;# 
  1715  0195                     	;# 
  1716  0196                     	;# 
  1717  0197                     	;# 
  1718  0199                     	;# 
  1719  019A                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019B                     	;# 
  1724  019C                     	;# 
  1725  019C                     	;# 
  1726  019D                     	;# 
  1727  019E                     	;# 
  1728  019F                     	;# 
  1729  020D                     	;# 
  1730  0210                     	;# 
  1731  0211                     	;# 
  1732  0211                     	;# 
  1733  0212                     	;# 
  1734  0212                     	;# 
  1735  0213                     	;# 
  1736  0213                     	;# 
  1737  0214                     	;# 
  1738  0214                     	;# 
  1739  0215                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0291                     	;# 
  1747  0291                     	;# 
  1748  0292                     	;# 
  1749  0293                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  029A                     	;# 
  1754  0394                     	;# 
  1755  0395                     	;# 
  1756  0396                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0015                     	;# 
  1787  0016                     	;# 
  1788  0016                     	;# 
  1789  0017                     	;# 
  1790  0018                     	;# 
  1791  0019                     	;# 
  1792  001A                     	;# 
  1793  001B                     	;# 
  1794  001C                     	;# 
  1795  008C                     	;# 
  1796  008D                     	;# 
  1797  008E                     	;# 
  1798  0090                     	;# 
  1799  0091                     	;# 
  1800  0092                     	;# 
  1801  0095                     	;# 
  1802  0096                     	;# 
  1803  0097                     	;# 
  1804  0099                     	;# 
  1805  009A                     	;# 
  1806  009B                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  010C                     	;# 
  1812  010D                     	;# 
  1813  010E                     	;# 
  1814  0116                     	;# 
  1815  0117                     	;# 
  1816  011D                     	;# 
  1817  018C                     	;# 
  1818  018D                     	;# 
  1819  018E                     	;# 
  1820  0191                     	;# 
  1821  0191                     	;# 
  1822  0192                     	;# 
  1823  0193                     	;# 
  1824  0193                     	;# 
  1825  0194                     	;# 
  1826  0195                     	;# 
  1827  0196                     	;# 
  1828  0197                     	;# 
  1829  0199                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019C                     	;# 
  1836  019C                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  020D                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0212                     	;# 
  1846  0213                     	;# 
  1847  0213                     	;# 
  1848  0214                     	;# 
  1849  0214                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0216                     	;# 
  1854  0216                     	;# 
  1855  0217                     	;# 
  1856  0217                     	;# 
  1857  0291                     	;# 
  1858  0291                     	;# 
  1859  0292                     	;# 
  1860  0293                     	;# 
  1861  0298                     	;# 
  1862  0298                     	;# 
  1863  0299                     	;# 
  1864  029A                     	;# 
  1865  0394                     	;# 
  1866  0395                     	;# 
  1867  0396                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEF                     	;# 
  1879  0000                     	;# 
  1880  0001                     	;# 
  1881  0002                     	;# 
  1882  0003                     	;# 
  1883  0004                     	;# 
  1884  0005                     	;# 
  1885  0006                     	;# 
  1886  0007                     	;# 
  1887  0008                     	;# 
  1888  0009                     	;# 
  1889  000A                     	;# 
  1890  000B                     	;# 
  1891  000C                     	;# 
  1892  000D                     	;# 
  1893  000E                     	;# 
  1894  0010                     	;# 
  1895  0011                     	;# 
  1896  0012                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  008C                     	;# 
  1907  008D                     	;# 
  1908  008E                     	;# 
  1909  0090                     	;# 
  1910  0091                     	;# 
  1911  0092                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0097                     	;# 
  1915  0099                     	;# 
  1916  009A                     	;# 
  1917  009B                     	;# 
  1918  009B                     	;# 
  1919  009C                     	;# 
  1920  009D                     	;# 
  1921  009E                     	;# 
  1922  010C                     	;# 
  1923  010D                     	;# 
  1924  010E                     	;# 
  1925  0116                     	;# 
  1926  0117                     	;# 
  1927  011D                     	;# 
  1928  018C                     	;# 
  1929  018D                     	;# 
  1930  018E                     	;# 
  1931  0191                     	;# 
  1932  0191                     	;# 
  1933  0192                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0194                     	;# 
  1937  0195                     	;# 
  1938  0196                     	;# 
  1939  0197                     	;# 
  1940  0199                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019C                     	;# 
  1947  019C                     	;# 
  1948  019D                     	;# 
  1949  019E                     	;# 
  1950  019F                     	;# 
  1951  020D                     	;# 
  1952  0210                     	;# 
  1953  0211                     	;# 
  1954  0211                     	;# 
  1955  0212                     	;# 
  1956  0212                     	;# 
  1957  0213                     	;# 
  1958  0213                     	;# 
  1959  0214                     	;# 
  1960  0214                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0215                     	;# 
  1964  0216                     	;# 
  1965  0216                     	;# 
  1966  0217                     	;# 
  1967  0217                     	;# 
  1968  0291                     	;# 
  1969  0291                     	;# 
  1970  0292                     	;# 
  1971  0293                     	;# 
  1972  0298                     	;# 
  1973  0298                     	;# 
  1974  0299                     	;# 
  1975  029A                     	;# 
  1976  0394                     	;# 
  1977  0395                     	;# 
  1978  0396                     	;# 
  1979  0FE4                     	;# 
  1980  0FE5                     	;# 
  1981  0FE6                     	;# 
  1982  0FE7                     	;# 
  1983  0FE8                     	;# 
  1984  0FE9                     	;# 
  1985  0FEA                     	;# 
  1986  0FEB                     	;# 
  1987  0FED                     	;# 
  1988  0FEE                     	;# 
  1989  0FEF                     	;# 
  1990                           
  1991                           	psect	idataBANK2
  1992  09D2                     __pidataBANK2:	
  1993                           
  1994                           ;initializer for __product
  1995  09D2  3463               	retlw	99
  1996  09D3  3402               	retlw	2
  1997  09D4  3400               	retlw	0
  1998  09D5  3400               	retlw	0
  1999  09D6  3400               	retlw	0
  2000  09D7  3400               	retlw	0
  2001  09D8  3400               	retlw	0
  2002  09D9  3400               	retlw	0
  2003  09DA  3400               	retlw	0
  2004  09DB  3400               	retlw	0
  2005  09DC  3400               	retlw	0
  2006  09DD  3400               	retlw	0
  2007  09DE  34FF               	retlw	255
  2008  09DF  34FF               	retlw	255
  2009  09E0  34FF               	retlw	255
  2010  09E1  3400               	retlw	0
  2011  09E2  3400               	retlw	0
  2012  09E3  3400               	retlw	0
  2013  09E4  3400               	retlw	0
  2014  09E5  3400               	retlw	0
  2015  09E6  3400               	retlw	0
  2016  09E7  3400               	retlw	0
  2017  09E8  3400               	retlw	0
  2018  09E9  3400               	retlw	0
  2019  09EA  3400               	retlw	0
  2020  09EB  3400               	retlw	0
  2021  09EC  3400               	retlw	0
  2022  09ED  3400               	retlw	0
  2023  09EE  3400               	retlw	0
  2024  09EF  3400               	retlw	0
  2025  09F0  3400               	retlw	0
  2026  09F1  3400               	retlw	0
  2027                           
  2028                           	psect	nvCOMMON
  2029  007B                     __pnvCOMMON:	
  2030  007B                     _Timer0:	
  2031  007B                     	ds	1
  2032                           
  2033                           	psect	nvBANK0
  2034  006C                     __pnvBANK0:	
  2035  006C                     _myMain:	
  2036  006C                     	ds	1
  2037  006D                     _product:	
  2038  006D                     	ds	1
  2039  006E                     _Memory:	
  2040  006E                     	ds	1
  2041  000C                     _PORTA	set	12
  2042  000D                     _PORTB	set	13
  2043  000E                     _PORTC	set	14
  2044  0015                     _TMR0	set	21
  2045  005F                     _GIE	set	95
  2046  005C                     _INTE	set	92
  2047  0059                     _INTF	set	89
  2048  005B                     _IOCIE	set	91
  2049  0058                     _IOCIF	set	88
  2050  005E                     _PEIE	set	94
  2051  0060                     _RA0	set	96
  2052  0063                     _RA3	set	99
  2053  0064                     _RA4	set	100
  2054  0066                     _RA6	set	102
  2055  0067                     _RA7	set	103
  2056  0069                     _RB1	set	105
  2057  006B                     _RB3	set	107
  2058  006C                     _RB4	set	108
  2059  006D                     _RB5	set	109
  2060  0075                     _RC5	set	117
  2061  0077                     _RC7	set	119
  2062  005D                     _TMR0IE	set	93
  2063  005A                     _TMR0IF	set	90
  2064  009D                     _ADCON0	set	157
  2065  009E                     _ADCON1	set	158
  2066  009C                     _ADRESH	set	156
  2067  009B                     _ADRESL	set	155
  2068  0095                     _OPTION_REG	set	149
  2069  0099                     _OSCCON	set	153
  2070  008C                     _TRISA	set	140
  2071  008D                     _TRISB	set	141
  2072  008E                     _TRISC	set	142
  2073  04E9                     _GO_nDONE	set	1257
  2074  0117                     _FVRCON	set	279
  2075  010C                     _LATA	set	268
  2076  010D                     _LATB	set	269
  2077  010E                     _LATC	set	270
  2078  018C                     _ANSELA	set	396
  2079  018D                     _ANSELB	set	397
  2080  018E                     _ANSELC	set	398
  2081  0192                     _PMADRH	set	402
  2082  0191                     _PMADRL	set	401
  2083  0196                     _PMCON2	set	406
  2084  0194                     _PMDATH	set	404
  2085  0193                     _PMDATL	set	403
  2086  0CAE                     _CFGS	set	3246
  2087  0CAC                     _FREE	set	3244
  2088  0CAD                     _LWLO	set	3245
  2089  0CA8                     _RD	set	3240
  2090  0CA9                     _WR	set	3241
  2091  0CAA                     _WREN	set	3242
  2092  1068                     _WPUB0	set	4200
  2093  1069                     _WPUB1	set	4201
  2094  106A                     _WPUB2	set	4202
  2095  0396                     _IOCBF	set	918
  2096  0395                     _IOCBN	set	917
  2097  0394                     _IOCBP	set	916
  2098  1CB2                     _IOCBF2	set	7346
  2099                           
  2100                           ; #config settings
  2101  0000                     
  2102                           	psect	cinit
  2103  0018                     start_initialization:	
  2104  0018                     __initialization:	
  2105                           
  2106                           ; Clear objects allocated to COMMON
  2107  0018  01F8               	clrf	__pbssCOMMON& (0+127)
  2108  0019  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2109  001A  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2110                           
  2111                           ; Clear objects allocated to BANK0
  2112  001B  3056               	movlw	low __pbssBANK0
  2113  001C  0084               	movwf	4
  2114  001D  3000               	movlw	high __pbssBANK0
  2115  001E  0085               	movwf	5
  2116  001F  3016               	movlw	22
  2117  0020  3197  2781  3180   	fcall	clear_ram0
  2118                           
  2119                           ; Clear objects allocated to BANK1
  2120  0023  30A0               	movlw	low __pbssBANK1
  2121  0024  0084               	movwf	4
  2122  0025  3000               	movlw	high __pbssBANK1
  2123  0026  0085               	movwf	5
  2124  0027  304D               	movlw	77
  2125  0028  3197  2781  3180   	fcall	clear_ram0
  2126                           
  2127                           ; Clear objects allocated to BANK2
  2128  002B  3020               	movlw	low __pbssBANK2
  2129  002C  0084               	movwf	4
  2130  002D  3001               	movlw	high __pbssBANK2
  2131  002E  0085               	movwf	5
  2132  002F  3025               	movlw	37
  2133  0030  3197  2781  3180   	fcall	clear_ram0
  2134                           
  2135                           ; Initialize objects allocated to BANK2
  2136  0033  30D2               	movlw	low __pidataBANK2
  2137  0034  0084               	movwf	4
  2138  0035  3089               	movlw	(high __pidataBANK2)| (0+128)
  2139  0036  0085               	movwf	5
  2140  0037  3045               	movlw	low __pdataBANK2
  2141  0038  0086               	movwf	6
  2142  0039  3001               	movlw	high __pdataBANK2
  2143  003A  0087               	movwf	7
  2144  003B  3020               	movlw	32
  2145  003C  3197  277B         	fcall	init_ram
  2146  003E                     end_of_initialization:	
  2147                           ;End of C runtime variable initialization code
  2148                           
  2149  003E                     __end_of__initialization:	
  2150  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2151  003F  0020               	movlb	0
  2152  0040  318D  2D34         	ljmp	_main	;jump to C main() function
  2153                           
  2154                           	psect	bssCOMMON
  2155  0078                     __pbssCOMMON:	
  2156  0078                     _DimmerLights11:	
  2157  0078                     	ds	1
  2158  0079                     _DimmerLightsIntr:	
  2159  0079                     	ds	1
  2160  007A                     _DimmerLightsIntrIOC:	
  2161  007A                     	ds	1
  2162                           
  2163                           	psect	bssBANK0
  2164  0056                     __pbssBANK0:	
  2165  0056                     _Buz:	
  2166  0056                     	ds	1
  2167  0057                     _DelayOff:	
  2168  0057                     	ds	1
  2169  0058                     _Dimmer:	
  2170  0058                     	ds	1
  2171  0059                     _DimmerLights:	
  2172  0059                     	ds	1
  2173  005A                     _LED:	
  2174  005A                     	ds	1
  2175  005B                     _PF:	
  2176  005B                     	ds	1
  2177  005C                     _Sw:	
  2178  005C                     	ds	1
  2179  005D                     _VarErrLED:	
  2180  005D                     	ds	4
  2181  0061                     _VarLED1:	
  2182  0061                     	ds	4
  2183  0065                     _VarLED2:	
  2184  0065                     	ds	4
  2185  0069                     _Dimmer1:	
  2186  0069                     	ds	3
  2187                           
  2188                           	psect	bssBANK1
  2189  00A0                     __pbssBANK1:	
  2190  00A0                     __myMain:	
  2191  00A0                     	ds	20
  2192  00B4                     _DimmerLights1:	
  2193  00B4                     	ds	15
  2194  00C3                     _Buz1:	
  2195  00C3                     	ds	12
  2196  00CF                     _Sw1:	
  2197  00CF                     	ds	9
  2198  00D8                     _PF1:	
  2199  00D8                     	ds	8
  2200  00E0                     _VarTimer0:	
  2201  00E0                     	ds	8
  2202  00E8                     _DlySw1:	
  2203  00E8                     	ds	5
  2204                           
  2205                           	psect	bssBANK2
  2206  0120                     __pbssBANK2:	
  2207  0120                     _VarMemory:	
  2208  0120                     	ds	37
  2209                           
  2210                           	psect	dataBANK2
  2211  0145                     __pdataBANK2:	
  2212  0145                     __product:	
  2213  0145                     	ds	32
  2214                           
  2215                           	psect	clrtext
  2216  1781                     clear_ram0:	
  2217                           ;	Called with FSR0 containing the base address, and
  2218                           ;	WREG with the size to clear
  2219                           
  2220  1781  0064               	clrwdt	;clear the watchdog before getting into this loop
  2221  1782                     clrloop0:	
  2222  1782  0180               	clrf	0	;clear RAM location pointed to by FSR
  2223  1783  3101               	addfsr 0,1
  2224  1784  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2225  1785  2F82               	goto	clrloop0	;have we reached the end yet?
  2226  1786  3400               	retlw	0	;all done for this memory range, return
  2227                           
  2228                           	psect	inittext
  2229  177B                     init_ram:	
  2230  177B  00FE               	movwf	126
  2231  177C                     initloop:	
  2232  177C  0012               	moviw fsr0++
  2233  177D  001E               	movwi fsr1++
  2234  177E  0BFE               	decfsz	126,f
  2235  177F  2F7C               	goto	initloop
  2236  1780  3400               	retlw	0
  2237                           
  2238                           	psect	cstackCOMMON
  2239  0070                     __pcstackCOMMON:	
  2240  0070                     ?_DlyOff_Initialization:	
  2241  0070                     ?_DlyOff_Main:	
  2242                           ; 0 bytes @ 0x0
  2243                           
  2244  0070                     ?_setDimmerLights_Initialization:	
  2245                           ; 0 bytes @ 0x0
  2246                           
  2247  0070                     ?_Dimmer_Initialization:	
  2248                           ; 0 bytes @ 0x0
  2249                           
  2250  0070                     ?_setMemory_GO:	
  2251                           ; 0 bytes @ 0x0
  2252                           
  2253  0070                     ?_setDimmerLights_Main:	
  2254                           ; 0 bytes @ 0x0
  2255                           
  2256  0070                     ?_setDimmerLights_ERROR:	
  2257                           ; 0 bytes @ 0x0
  2258                           
  2259  0070                     ?_setLED_Initialization:	
  2260                           ; 0 bytes @ 0x0
  2261                           
  2262  0070                     ?_setLED_Main:	
  2263                           ; 0 bytes @ 0x0
  2264                           
  2265  0070                     ?_Fosc_Set:	
  2266                           ; 0 bytes @ 0x0
  2267                           
  2268  0070                     ?_IO_Set:	
  2269                           ; 0 bytes @ 0x0
  2270                           
  2271  0070                     ?_TMR0_Set:	
  2272                           ; 0 bytes @ 0x0
  2273                           
  2274  0070                     ?_ADC_Set:	
  2275                           ; 0 bytes @ 0x0
  2276                           
  2277  0070                     ?_INT_Set:	
  2278                           ; 0 bytes @ 0x0
  2279                           
  2280  0070                     ?_IOC_Set:	
  2281                           ; 0 bytes @ 0x0
  2282                           
  2283  0070                     ?_IOC_ISR:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ?_TMR0_ISR:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_INT_ISR:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ??_INT_ISR:	
  2293                           ; 0 bytes @ 0x0
  2294                           
  2295  0070                     ?_Flash_Memory_Write:	
  2296                           ; 0 bytes @ 0x0
  2297                           
  2298  0070                     ?_Flash_Memory_Modify:	
  2299                           ; 0 bytes @ 0x0
  2300                           
  2301  0070                     ?_setPowerFault_Initialization:	
  2302                           ; 0 bytes @ 0x0
  2303                           
  2304  0070                     ?_setPowerFault_Main:	
  2305                           ; 0 bytes @ 0x0
  2306                           
  2307  0070                     ?_setPowerFault_Exceptions:	
  2308                           ; 0 bytes @ 0x0
  2309                           
  2310  0070                     ?_setSw_Enable:	
  2311                           ; 0 bytes @ 0x0
  2312                           
  2313  0070                     ?_setSw_Initialization:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ?_setSw_Main:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ?_Sw_DimmerOnFunc:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_Sw_DimmerAdjFunc:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ?_Sw_DimmerOffFunc:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_myMain_Initialization:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ?_my_Main:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_my_TestPointCleared:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ?_Buzzer_Initialization:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_Buzzer_Main:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ?_DelayOffPointSelect:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_DelayOff_Initialization:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ?_DelayOff_Main:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_DimmerIntrIOCPointSelect:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ??_DimmerIntrIOCPointSelect:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ?_DimmerIntrPointSelect:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ??_DimmerIntrPointSelect:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ?_setDimmerLights_IntrControl:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?_DimmerLightsPointSelect:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ?_DimmerLights_Initialization:	
  2374                           ; 0 bytes @ 0x0
  2375                           
  2376  0070                     ?_DimmerLights_Close:	
  2377                           ; 0 bytes @ 0x0
  2378                           
  2379  0070                     ?_DimmerLights_Main:	
  2380                           ; 0 bytes @ 0x0
  2381                           
  2382  0070                     ?_DimmerLights_Exceptions:	
  2383                           ; 0 bytes @ 0x0
  2384                           
  2385  0070                     ?_LedPointSelect:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ?_LED_Initialization:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ?_LED_Main:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_Mcu_Initialization:	
  2395                           ; 0 bytes @ 0x0
  2396                           
  2397  0070                     ?_ISR:	
  2398                           ; 0 bytes @ 0x0
  2399                           
  2400  0070                     ?_setDimmerReClock:	
  2401                           ; 0 bytes @ 0x0
  2402                           
  2403  0070                     ?_Flash_Memory_Initialization:	
  2404                           ; 0 bytes @ 0x0
  2405                           
  2406  0070                     ?_Flash_Memory_Main:	
  2407                           ; 0 bytes @ 0x0
  2408                           
  2409  0070                     ?_Flash_Memory_Unlock:	
  2410                           ; 0 bytes @ 0x0
  2411                           
  2412  0070                     ?_Flash_Memory_Erasing:	
  2413                           ; 0 bytes @ 0x0
  2414                           
  2415  0070                     ?_PowerFault_Initialization:	
  2416                           ; 0 bytes @ 0x0
  2417                           
  2418  0070                     ?_PowerFault_Main:	
  2419                           ; 0 bytes @ 0x0
  2420                           
  2421  0070                     ?_getPowerFault_AD:	
  2422                           ; 0 bytes @ 0x0
  2423                           
  2424  0070                     ?_TouchPower:	
  2425                           ; 0 bytes @ 0x0
  2426                           
  2427  0070                     ?_SwPointSelect:	
  2428                           ; 0 bytes @ 0x0
  2429                           
  2430  0070                     ?_Switch_Initialization:	
  2431                           ; 0 bytes @ 0x0
  2432                           
  2433  0070                     ?_Switch_Main:	
  2434                           ; 0 bytes @ 0x0
  2435                           
  2436  0070                     ?_DelayTimejudge:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ?_getDimmerLights_StatusFlag:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_Flash_Memory_Read:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_setPercentValue:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x0
  2450  0070                     	ds	1
  2451  0071                     DimmerIntrIOCPointSelect@lights:	
  2452  0071                     DimmerIntrPointSelect@lights:	
  2453                           ; 1 bytes @ 0x1
  2454                           
  2455                           
  2456                           ; 1 bytes @ 0x1
  2457  0071                     	ds	1
  2458  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2459  0072                     ??_setDimmerLights_IntrControl:	
  2460                           ; 0 bytes @ 0x2
  2461                           
  2462  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2463                           ; 0 bytes @ 0x2
  2464                           
  2465                           
  2466                           ; 1 bytes @ 0x2
  2467  0072                     	ds	1
  2468  0073                     ??_IOC_ISR:	
  2469  0073                     ??_setDimmerReClock:	
  2470                           ; 0 bytes @ 0x3
  2471                           
  2472                           
  2473                           ; 0 bytes @ 0x3
  2474  0073                     	ds	3
  2475  0076                     setDimmerLights_IntrControl@lights:	
  2476                           
  2477                           ; 1 bytes @ 0x6
  2478  0076                     	ds	1
  2479  0077                     ??_TMR0_ISR:	
  2480  0077                     ??_ISR:	
  2481                           ; 0 bytes @ 0x7
  2482                           
  2483                           
  2484                           ; 0 bytes @ 0x7
  2485  0077                     	ds	1
  2486                           
  2487                           	psect	cstackBANK0
  2488  0020                     __pcstackBANK0:	
  2489  0020                     ??_DelayTimejudge:	
  2490  0020                     ??_Dimmer_Initialization:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0020                     ??_getDimmerLights_StatusFlag:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0020                     ??_setMemory_GO:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0020                     ??_Fosc_Set:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0020                     ??_IO_Set:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0020                     ??_TMR0_Set:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0020                     ??_ADC_Set:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0020                     ??_INT_Set:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0020                     ??_IOC_Set:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0020                     ??_Flash_Memory_Read:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0020                     ??_Flash_Memory_Write:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0020                     ??_setPowerFault_Initialization:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0020                     ??_myMain_Initialization:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0020                     ??_my_TestPointCleared:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0020                     ??_Buzzer_Initialization:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0020                     ??_Buzzer_Main:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0020                     ??_DelayOffPointSelect:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0020                     ??_DimmerLightsPointSelect:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0020                     ??_LedPointSelect:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0020                     ??_Flash_Memory_Unlock:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0020                     ??_Flash_Memory_Erasing:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0020                     ??_TouchPower:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0020                     ??_SwPointSelect:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0020                     ?_getAD:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0020                     ?___awdiv:	
  2563                           ; 2 bytes @ 0x0
  2564                           
  2565  0020                     ?___ftpack:	
  2566                           ; 2 bytes @ 0x0
  2567                           
  2568  0020                     getDimmerLights_StatusFlag@Status:	
  2569                           ; 3 bytes @ 0x0
  2570                           
  2571  0020                     getAD@adcon1:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0020                     ___awdiv@divisor:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0020                     ___ftpack@arg:	
  2578                           ; 2 bytes @ 0x0
  2579                           
  2580                           
  2581                           ; 3 bytes @ 0x0
  2582  0020                     	ds	1
  2583  0021                     ??_Mcu_Initialization:	
  2584  0021                     ??_PowerFault_Initialization:	
  2585                           ; 0 bytes @ 0x1
  2586                           
  2587  0021                     DelayOffPointSelect@sw:	
  2588                           ; 0 bytes @ 0x1
  2589                           
  2590  0021                     DelayTimejudge@value:	
  2591                           ; 1 bytes @ 0x1
  2592                           
  2593  0021                     DimmerLightsPointSelect@lights:	
  2594                           ; 1 bytes @ 0x1
  2595                           
  2596  0021                     LedPointSelect@led:	
  2597                           ; 1 bytes @ 0x1
  2598                           
  2599  0021                     Flash_Memory_Read@i:	
  2600                           ; 1 bytes @ 0x1
  2601                           
  2602  0021                     Flash_Memory_Write@i:	
  2603                           ; 1 bytes @ 0x1
  2604                           
  2605  0021                     SwPointSelect@sw:	
  2606                           ; 1 bytes @ 0x1
  2607                           
  2608                           
  2609                           ; 1 bytes @ 0x1
  2610  0021                     	ds	1
  2611  0022                     ??_DlyOff_Initialization:	
  2612  0022                     ?_setSw_Status:	
  2613                           ; 0 bytes @ 0x2
  2614                           
  2615  0022                     ?_setDimmerLights_Trigger:	
  2616                           ; 0 bytes @ 0x2
  2617                           
  2618  0022                     ?_setDimmerLights_Switch:	
  2619                           ; 0 bytes @ 0x2
  2620                           
  2621  0022                     ??_setDimmerLights_Initialization:	
  2622                           ; 0 bytes @ 0x2
  2623                           
  2624  0022                     ?_setDimmerLights_Adj:	
  2625                           ; 0 bytes @ 0x2
  2626                           
  2627  0022                     ?_setDimmerLights_TriggerERROR:	
  2628                           ; 0 bytes @ 0x2
  2629                           
  2630  0022                     ?_setLED:	
  2631                           ; 0 bytes @ 0x2
  2632                           
  2633  0022                     ??_setLED_Main:	
  2634                           ; 0 bytes @ 0x2
  2635                           
  2636  0022                     ??_setSw_Enable:	
  2637                           ; 0 bytes @ 0x2
  2638                           
  2639  0022                     ?_setDimmerLights_AdjGo:	
  2640                           ; 0 bytes @ 0x2
  2641                           
  2642  0022                     ?_setDimmerLights_TriggerAdj:	
  2643                           ; 0 bytes @ 0x2
  2644                           
  2645  0022                     DlyOff_Initialization@sw:	
  2646                           ; 0 bytes @ 0x2
  2647                           
  2648  0022                     DelayTimejudge@i:	
  2649                           ; 1 bytes @ 0x2
  2650                           
  2651  0022                     setDimmerLights_TriggerERROR@command:	
  2652                           ; 1 bytes @ 0x2
  2653                           
  2654  0022                     setDimmerLights_Adj@status:	
  2655                           ; 1 bytes @ 0x2
  2656                           
  2657  0022                     setDimmerLights_Switch@command:	
  2658                           ; 1 bytes @ 0x2
  2659                           
  2660  0022                     setDimmerLights_AdjGo@command:	
  2661                           ; 1 bytes @ 0x2
  2662                           
  2663  0022                     setDimmerLights_Trigger@command:	
  2664                           ; 1 bytes @ 0x2
  2665                           
  2666  0022                     setDimmerLights_TriggerAdj@command:	
  2667                           ; 1 bytes @ 0x2
  2668                           
  2669  0022                     setLED@command:	
  2670                           ; 1 bytes @ 0x2
  2671                           
  2672  0022                     Flash_Memory_Read@address:	
  2673                           ; 1 bytes @ 0x2
  2674                           
  2675  0022                     setMemory_GO@command:	
  2676                           ; 1 bytes @ 0x2
  2677                           
  2678  0022                     setSw_Enable@command:	
  2679                           ; 1 bytes @ 0x2
  2680                           
  2681  0022                     setSw_Status@command:	
  2682                           ; 1 bytes @ 0x2
  2683                           
  2684  0022                     ___awdiv@dividend:	
  2685                           ; 1 bytes @ 0x2
  2686                           
  2687                           
  2688                           ; 2 bytes @ 0x2
  2689  0022                     	ds	1
  2690  0023                     ??_setSw_Status:	
  2691  0023                     ??_setDimmerLights_Trigger:	
  2692                           ; 0 bytes @ 0x3
  2693                           
  2694  0023                     ??_setDimmerLights_Switch:	
  2695                           ; 0 bytes @ 0x3
  2696                           
  2697  0023                     ??_setDimmerLights_Adj:	
  2698                           ; 0 bytes @ 0x3
  2699                           
  2700  0023                     ??_setDimmerLights_TriggerERROR:	
  2701                           ; 0 bytes @ 0x3
  2702                           
  2703  0023                     ??_setLED:	
  2704                           ; 0 bytes @ 0x3
  2705                           
  2706  0023                     ??_DelayOff_Initialization:	
  2707                           ; 0 bytes @ 0x3
  2708                           
  2709  0023                     ?_setDelayOff_GO:	
  2710                           ; 0 bytes @ 0x3
  2711                           
  2712  0023                     ??_DimmerLights_Close:	
  2713                           ; 0 bytes @ 0x3
  2714                           
  2715  0023                     ??_setDimmerLights_AdjGo:	
  2716                           ; 0 bytes @ 0x3
  2717                           
  2718  0023                     ??_setDimmerLights_TriggerAdj:	
  2719                           ; 0 bytes @ 0x3
  2720                           
  2721  0023                     ??_getAD:	
  2722                           ; 0 bytes @ 0x3
  2723                           
  2724  0023                     setDelayOff_GO@command:	
  2725                           ; 0 bytes @ 0x3
  2726                           
  2727  0023                     setDimmerLights_Initialization@lights:	
  2728                           ; 1 bytes @ 0x3
  2729                           
  2730  0023                     setDimmerLights_TriggerERROR@lights:	
  2731                           ; 1 bytes @ 0x3
  2732                           
  2733  0023                     setDimmerLights_Switch@lights:	
  2734                           ; 1 bytes @ 0x3
  2735                           
  2736  0023                     setDimmerLights_AdjGo@lights:	
  2737                           ; 1 bytes @ 0x3
  2738                           
  2739  0023                     setDimmerLights_Trigger@lights:	
  2740                           ; 1 bytes @ 0x3
  2741                           
  2742  0023                     setDimmerLights_TriggerAdj@lights:	
  2743                           ; 1 bytes @ 0x3
  2744                           
  2745  0023                     setLED@led:	
  2746                           ; 1 bytes @ 0x3
  2747                           
  2748  0023                     getAD@adcon0:	
  2749                           ; 1 bytes @ 0x3
  2750                           
  2751  0023                     Flash_Memory_Read@ret:	
  2752                           ; 1 bytes @ 0x3
  2753                           
  2754  0023                     setSw_Status@sw:	
  2755                           ; 1 bytes @ 0x3
  2756                           
  2757  0023                     ___ftpack@exp:	
  2758                           ; 1 bytes @ 0x3
  2759                           
  2760                           
  2761                           ; 1 bytes @ 0x3
  2762  0023                     	ds	1
  2763  0024                     ?_setDimmerLights:	
  2764  0024                     ??_setDimmerLights_ERROR:	
  2765                           ; 0 bytes @ 0x4
  2766                           
  2767  0024                     ??_setLED_Initialization:	
  2768                           ; 0 bytes @ 0x4
  2769                           
  2770  0024                     ??_Flash_Memory_Modify:	
  2771                           ; 0 bytes @ 0x4
  2772                           
  2773  0024                     ??_setSw_Initialization:	
  2774                           ; 0 bytes @ 0x4
  2775                           
  2776  0024                     ??_Sw_DimmerAdjFunc:	
  2777                           ; 0 bytes @ 0x4
  2778                           
  2779  0024                     ??_DimmerLights_Initialization:	
  2780                           ; 0 bytes @ 0x4
  2781                           
  2782  0024                     ??_getPowerFault_AD:	
  2783                           ; 0 bytes @ 0x4
  2784                           
  2785  0024                     ??___awdiv:	
  2786                           ; 0 bytes @ 0x4
  2787                           
  2788  0024                     setDelayOff_GO@value:	
  2789                           ; 0 bytes @ 0x4
  2790                           
  2791  0024                     setDimmerLights@status:	
  2792                           ; 1 bytes @ 0x4
  2793                           
  2794  0024                     setDimmerLights_Adj@lights:	
  2795                           ; 1 bytes @ 0x4
  2796                           
  2797  0024                     setLED_Initialization@led:	
  2798                           ; 1 bytes @ 0x4
  2799                           
  2800  0024                     setLED_Main@led:	
  2801                           ; 1 bytes @ 0x4
  2802                           
  2803  0024                     setSw_Initialization@sw:	
  2804                           ; 1 bytes @ 0x4
  2805                           
  2806  0024                     Sw_DimmerAdjFunc@Idle:	
  2807                           ; 1 bytes @ 0x4
  2808                           
  2809  0024                     ___ftpack@sign:	
  2810                           ; 1 bytes @ 0x4
  2811                           
  2812                           
  2813                           ; 1 bytes @ 0x4
  2814  0024                     	ds	1
  2815  0025                     ??_setDimmerLights:	
  2816  0025                     ??___ftpack:	
  2817                           ; 0 bytes @ 0x5
  2818                           
  2819  0025                     ??_setDelayOff_GO:	
  2820                           ; 0 bytes @ 0x5
  2821                           
  2822  0025                     ??_LED_Initialization:	
  2823                           ; 0 bytes @ 0x5
  2824                           
  2825  0025                     ??_LED_Main:	
  2826                           ; 0 bytes @ 0x5
  2827                           
  2828  0025                     ??_Switch_Initialization:	
  2829                           ; 0 bytes @ 0x5
  2830                           
  2831  0025                     setDimmerLights_ERROR@lights:	
  2832                           ; 0 bytes @ 0x5
  2833                           
  2834  0025                     Sw_DimmerAdjFunc@sw:	
  2835                           ; 1 bytes @ 0x5
  2836                           
  2837  0025                     ___awdiv@counter:	
  2838                           ; 1 bytes @ 0x5
  2839                           
  2840                           
  2841                           ; 1 bytes @ 0x5
  2842  0025                     	ds	1
  2843  0026                     setDimmerLights@lights:	
  2844  0026                     Flash_Memory_Modify@i:	
  2845                           ; 1 bytes @ 0x6
  2846                           
  2847  0026                     ___awdiv@sign:	
  2848                           ; 1 bytes @ 0x6
  2849                           
  2850                           
  2851                           ; 1 bytes @ 0x6
  2852  0026                     	ds	1
  2853  0027                     ??_Flash_Memory_Main:	
  2854  0027                     setDelayOff_GO@sw:	
  2855                           ; 0 bytes @ 0x7
  2856                           
  2857  0027                     ___awdiv@quotient:	
  2858                           ; 1 bytes @ 0x7
  2859                           
  2860                           
  2861                           ; 2 bytes @ 0x7
  2862  0027                     	ds	1
  2863  0028                     ??_Sw_DimmerOffFunc:	
  2864  0028                     ?___awtoft:	
  2865                           ; 0 bytes @ 0x8
  2866                           
  2867  0028                     getPowerFault_AD@channel:	
  2868                           ; 3 bytes @ 0x8
  2869                           
  2870  0028                     ___awtoft@c:	
  2871                           ; 1 bytes @ 0x8
  2872                           
  2873                           
  2874                           ; 2 bytes @ 0x8
  2875  0028                     	ds	1
  2876  0029                     ?_setBuz:	
  2877  0029                     setBuz@time:	
  2878                           ; 0 bytes @ 0x9
  2879                           
  2880                           
  2881                           ; 2 bytes @ 0x9
  2882  0029                     	ds	1
  2883  002A                     Sw_DimmerOffFunc@sw:	
  2884                           
  2885                           ; 1 bytes @ 0xA
  2886  002A                     	ds	1
  2887  002B                     ??_setBuz:	
  2888  002B                     ??___awtoft:	
  2889                           ; 0 bytes @ 0xB
  2890                           
  2891                           
  2892                           ; 0 bytes @ 0xB
  2893  002B                     	ds	1
  2894  002C                     setBuz@count:	
  2895                           
  2896                           ; 1 bytes @ 0xC
  2897  002C                     	ds	1
  2898  002D                     ??_DlyOff_Main:	
  2899  002D                     ??_setDimmerLights_Main:	
  2900                           ; 0 bytes @ 0xD
  2901                           
  2902  002D                     ??_Sw_DimmerOnFunc:	
  2903                           ; 0 bytes @ 0xD
  2904                           
  2905  002D                     ??_my_Main:	
  2906                           ; 0 bytes @ 0xD
  2907                           
  2908  002D                     ??_DimmerLights_Exceptions:	
  2909                           ; 0 bytes @ 0xD
  2910                           
  2911  002D                     setDimmerLights_Main@clear:	
  2912                           ; 0 bytes @ 0xD
  2913                           
  2914  002D                     DimmerLights_Exceptions@status:	
  2915                           ; 1 bytes @ 0xD
  2916                           
  2917  002D                     Sw_DimmerOnFunc@Idle:	
  2918                           ; 1 bytes @ 0xD
  2919                           
  2920  002D                     ___awtoft@sign:	
  2921                           ; 1 bytes @ 0xD
  2922                           
  2923                           
  2924                           ; 1 bytes @ 0xD
  2925  002D                     	ds	1
  2926  002E                     ??_setPowerFault_Exceptions:	
  2927  002E                     ?___ftdiv:	
  2928                           ; 0 bytes @ 0xE
  2929                           
  2930  002E                     setDimmerLights_Main@lights:	
  2931                           ; 3 bytes @ 0xE
  2932                           
  2933  002E                     Sw_DimmerOnFunc@sw:	
  2934                           ; 1 bytes @ 0xE
  2935                           
  2936  002E                     ___ftdiv@f2:	
  2937                           ; 1 bytes @ 0xE
  2938                           
  2939                           
  2940                           ; 3 bytes @ 0xE
  2941  002E                     	ds	1
  2942  002F                     ??_setSw_Main:	
  2943  002F                     ??_DimmerLights_Main:	
  2944                           ; 0 bytes @ 0xF
  2945                           
  2946  002F                     DlyOff_Main@sw:	
  2947                           ; 0 bytes @ 0xF
  2948                           
  2949  002F                     setPowerFault_Exceptions@command:	
  2950                           ; 1 bytes @ 0xF
  2951                           
  2952                           
  2953                           ; 1 bytes @ 0xF
  2954  002F                     	ds	1
  2955  0030                     ??_setPowerFault_Main:	
  2956  0030                     ??_DelayOff_Main:	
  2957                           ; 0 bytes @ 0x10
  2958                           
  2959                           
  2960                           ; 0 bytes @ 0x10
  2961  0030                     	ds	1
  2962  0031                     _setSw_Main$3897:	
  2963  0031                     ___ftdiv@f1:	
  2964                           ; 1 bytes @ 0x11
  2965                           
  2966                           
  2967                           ; 3 bytes @ 0x11
  2968  0031                     	ds	1
  2969  0032                     ??_PowerFault_Main:	
  2970  0032                     setSw_Main@sw:	
  2971                           ; 0 bytes @ 0x12
  2972                           
  2973                           
  2974                           ; 1 bytes @ 0x12
  2975  0032                     	ds	1
  2976  0033                     ??_Switch_Main:	
  2977                           
  2978                           ; 0 bytes @ 0x13
  2979  0033                     	ds	1
  2980  0034                     ??___ftdiv:	
  2981                           
  2982                           ; 0 bytes @ 0x14
  2983  0034                     	ds	4
  2984  0038                     ___ftdiv@cntr:	
  2985                           
  2986                           ; 1 bytes @ 0x18
  2987  0038                     	ds	1
  2988  0039                     ___ftdiv@f3:	
  2989                           
  2990                           ; 3 bytes @ 0x19
  2991  0039                     	ds	3
  2992  003C                     ___ftdiv@exp:	
  2993                           
  2994                           ; 1 bytes @ 0x1C
  2995  003C                     	ds	1
  2996  003D                     ___ftdiv@sign:	
  2997                           
  2998                           ; 1 bytes @ 0x1D
  2999  003D                     	ds	1
  3000  003E                     ?___fttol:	
  3001  003E                     ___fttol@f1:	
  3002                           ; 4 bytes @ 0x1E
  3003                           
  3004                           
  3005                           ; 3 bytes @ 0x1E
  3006  003E                     	ds	4
  3007  0042                     ??___fttol:	
  3008                           
  3009                           ; 0 bytes @ 0x22
  3010  0042                     	ds	4
  3011  0046                     ___fttol@sign1:	
  3012                           
  3013                           ; 1 bytes @ 0x26
  3014  0046                     	ds	1
  3015  0047                     ___fttol@lval:	
  3016                           
  3017                           ; 4 bytes @ 0x27
  3018  0047                     	ds	4
  3019  004B                     ___fttol@exp1:	
  3020                           
  3021                           ; 1 bytes @ 0x2B
  3022  004B                     	ds	1
  3023  004C                     ??_setPercentValue:	
  3024  004C                     setPercentValue@value:	
  3025                           ; 0 bytes @ 0x2C
  3026                           
  3027                           
  3028                           ; 1 bytes @ 0x2C
  3029  004C                     	ds	1
  3030  004D                     setPercentValue@i:	
  3031                           
  3032                           ; 3 bytes @ 0x2D
  3033  004D                     	ds	3
  3034  0050                     ??_Flash_Memory_Initialization:	
  3035                           
  3036                           ; 0 bytes @ 0x30
  3037  0050                     	ds	1
  3038  0051                     Flash_Memory_Initialization@i:	
  3039                           
  3040                           ; 1 bytes @ 0x31
  3041  0051                     	ds	1
  3042  0052                     ?_main:	
  3043  0052                     main@argc:	
  3044                           ; 2 bytes @ 0x32
  3045                           
  3046                           
  3047                           ; 2 bytes @ 0x32
  3048  0052                     	ds	2
  3049  0054                     main@argv:	
  3050                           
  3051                           ; 2 bytes @ 0x34
  3052  0054                     	ds	2
  3053  0056                     ??_main:	
  3054                           
  3055                           	psect	maintext
  3056  0D34                     __pmaintext:	
  3057                           ; 0 bytes @ 0x36
  3058 ;;
  3059 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3060 ;;
  3061 ;; *************** function _main *****************
  3062 ;; Defined at:
  3063 ;;		line 7 in file "../src/main_B1.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  argc            2   50[BANK0 ] int 
  3066 ;;  argv            2   52[BANK0 ] PTR PTR unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2   50[BANK0 ] int 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 17F/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;Total ram usage:        4 bytes
  3083 ;; Hardware stack levels required when called:   12
  3084 ;; This function calls:
  3085 ;;		_Buzzer_Initialization
  3086 ;;		_Buzzer_Main
  3087 ;;		_DelayOff_Initialization
  3088 ;;		_DelayOff_Main
  3089 ;;		_DimmerLights_Initialization
  3090 ;;		_DimmerLights_Main
  3091 ;;		_Flash_Memory_Initialization
  3092 ;;		_Flash_Memory_Main
  3093 ;;		_LED_Initialization
  3094 ;;		_LED_Main
  3095 ;;		_Mcu_Initialization
  3096 ;;		_PowerFault_Initialization
  3097 ;;		_PowerFault_Main
  3098 ;;		_Switch_Initialization
  3099 ;;		_Switch_Main
  3100 ;;		_getPowerFault_AD
  3101 ;;		_myMain_Initialization
  3102 ;;		_my_Main
  3103 ;;		_my_TestPointCleared
  3104 ;; This function is called by:
  3105 ;;		Startup code after reset
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _main
  3111  0D34                     _main:	
  3112                           
  3113                           ;main_B1.c: 9: myMain_Initialization();
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3117  0D34  3188  20F9  318D   	fcall	_myMain_Initialization
  3118                           
  3119                           ;main_B1.c: 10: Mcu_Initialization();
  3120  0D37  3189  2136  318D   	fcall	_Mcu_Initialization
  3121                           
  3122                           ;main_B1.c: 11: Flash_Memory_Initialization();
  3123  0D3A  3182  22CF  318D   	fcall	_Flash_Memory_Initialization
  3124                           
  3125                           ;main_B1.c: 12: LED_Initialization();
  3126  0D3D  3188  2021  318D   	fcall	_LED_Initialization
  3127                           
  3128                           ;main_B1.c: 13: Buzzer_Initialization();
  3129  0D40  3197  27C0  318D   	fcall	_Buzzer_Initialization
  3130                           
  3131                           ;main_B1.c: 15: ;;
  3132                           ;main_B1.c: 16: ;;
  3133                           ;main_B1.c: 17: ;;
  3134                           ;main_B1.c: 18: PowerFault_Initialization();
  3135  0D43  3197  2754  318D   	fcall	_PowerFault_Initialization
  3136                           
  3137                           ;main_B1.c: 19: DelayOff_Initialization();
  3138  0D46  3197  275A  318D   	fcall	_DelayOff_Initialization
  3139                           
  3140                           ;main_B1.c: 21: DimmerLights_Initialization();
  3141  0D49  3188  2009  318D   	fcall	_DimmerLights_Initialization
  3142                           
  3143                           ;main_B1.c: 22: ;;
  3144                           ;main_B1.c: 23: ;;
  3145                           ;main_B1.c: 24: ;;
  3146                           ;main_B1.c: 25: Switch_Initialization();
  3147  0D4C  3188  2000  318D   	fcall	_Switch_Initialization
  3148                           
  3149                           ;main_B1.c: 26: ;;
  3150                           ;main_B1.c: 27: __nop();
  3151  0D4F  0000               	nop
  3152  0D50                     l4788:	
  3153                           ;main_B1.c: 28: ;;
  3154                           ;main_B1.c: 31: while (1) {
  3155                           
  3156                           
  3157                           ;main_B1.c: 33: if (myMain->PowerON) {
  3158  0D50  0020               	movlb	0	; select bank0
  3159  0D51  086C               	movf	_myMain,w
  3160  0D52  0086               	movwf	6
  3161  0D53  0187               	clrf	7
  3162  0D54  1C01               	btfss	1,0
  3163  0D55  2D5A               	goto	l4792
  3164                           
  3165                           ;main_B1.c: 35: ;;
  3166                           ;main_B1.c: 39: ;;
  3167                           ;main_B1.c: 43: ;;
  3168                           ;main_B1.c: 47: getPowerFault_AD(0x11);
  3169  0D56  3011               	movlw	17
  3170  0D57  318B  23E2  318D   	fcall	_getPowerFault_AD
  3171  0D5A                     l4792:	
  3172                           
  3173                           ;main_B1.c: 58: }
  3174                           ;main_B1.c: 61: if (myMain->T0_Timerout) {
  3175  0D5A  0020               	movlb	0	; select bank0
  3176  0D5B  086C               	movf	_myMain,w
  3177  0D5C  0086               	movwf	6
  3178  0D5D  0187               	clrf	7
  3179  0D5E  1C81               	btfss	1,1
  3180  0D5F  2D50               	goto	l4788
  3181                           
  3182                           ;main_B1.c: 62: myMain->T0_Timerout = 0;
  3183  0D60  086C               	movf	_myMain,w
  3184  0D61  0086               	movwf	6
  3185  0D62  0187               	clrf	7
  3186  0D63  1081               	bcf	1,1
  3187                           
  3188                           ;main_B1.c: 63: my_Main();
  3189  0D64  318E  26DD  318D   	fcall	_my_Main
  3190                           
  3191                           ;main_B1.c: 64: my_TestPointCleared();
  3192  0D67  3188  20E9  318D   	fcall	_my_TestPointCleared
  3193                           
  3194                           ;main_B1.c: 65: ;;
  3195                           ;main_B1.c: 66: ;;
  3196                           ;main_B1.c: 67: ;;
  3197                           ;main_B1.c: 68: if (myMain->PowerON) {
  3198  0D6A  0020               	movlb	0	; select bank0
  3199  0D6B  086C               	movf	_myMain,w
  3200  0D6C  0086               	movwf	6
  3201  0D6D  0187               	clrf	7
  3202  0D6E  1C01               	btfss	1,0
  3203  0D6F  2D50               	goto	l4788
  3204                           
  3205                           ;main_B1.c: 69: Flash_Memory_Main();
  3206  0D70  318C  245F  318D   	fcall	_Flash_Memory_Main
  3207                           
  3208                           ;main_B1.c: 71: LED_Main();
  3209  0D73  3188  202D  318D   	fcall	_LED_Main
  3210                           
  3211                           ;main_B1.c: 72: Buzzer_Main();
  3212  0D76  3185  2539  318D   	fcall	_Buzzer_Main
  3213                           
  3214                           ;main_B1.c: 74: ;;
  3215                           ;main_B1.c: 75: ;;
  3216                           ;main_B1.c: 76: ;;
  3217                           ;main_B1.c: 77: PowerFault_Main();
  3218  0D79  3197  2757  318D   	fcall	_PowerFault_Main
  3219                           
  3220                           ;main_B1.c: 79: ;;
  3221                           ;main_B1.c: 80: DimmerLights_Main();
  3222  0D7C  3197  2795  318D   	fcall	_DimmerLights_Main
  3223                           
  3224                           ;main_B1.c: 81: Switch_Main();
  3225  0D7F  3197  2766  318D   	fcall	_Switch_Main
  3226                           
  3227                           ;main_B1.c: 82: ;;
  3228                           ;main_B1.c: 83: ;;
  3229                           ;main_B1.c: 85: ;;
  3230                           ;main_B1.c: 86: DelayOff_Main();
  3231  0D82  3197  275E  318D   	fcall	_DelayOff_Main
  3232                           
  3233                           ;main_B1.c: 87: ;;
  3234  0D85  2D50               	goto	l4788
  3235  0D86                     __end_of_main:	
  3236                           ;main_B1.c: 88: }
  3237                           ;main_B1.c: 89: }
  3238                           ;main_B1.c: 107: }
  3239                           ;main_B1.c: 108: return (0);
  3240                           ;	Return value of _main is never used
  3241                           
  3242                           
  3243                           	psect	text1
  3244  08E9                     __ptext1:	
  3245 ;; *************** function _my_TestPointCleared *****************
  3246 ;; Defined at:
  3247 ;;		line 206 in file "../src/main_B1.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;		None               void
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    5
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _my_TestPointCleared
  3277  08E9                     _my_TestPointCleared:	
  3278                           
  3279                           ;main_B1.c: 207: myMain->pcount1 = 0;
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in _my_TestPointCleared: [wregfsr1]
  3283  08E9  0020               	movlb	0	; select bank0
  3284  08EA  086C               	movf	_myMain,w
  3285  08EB  3E10               	addlw	16
  3286  08EC  0086               	movwf	6
  3287  08ED  0187               	clrf	7
  3288  08EE  3000               	movlw	0
  3289  08EF  3FC0               	movwi [0]fsr1
  3290  08F0  3FC1               	movwi [1]fsr1
  3291                           
  3292                           ;main_B1.c: 208: myMain->pcount2 = 0;
  3293  08F1  086C               	movf	_myMain,w
  3294  08F2  3E12               	addlw	18
  3295  08F3  0086               	movwf	6
  3296  08F4  0187               	clrf	7
  3297  08F5  3000               	movlw	0
  3298  08F6  3FC0               	movwi [0]fsr1
  3299  08F7  3FC1               	movwi [1]fsr1
  3300  08F8  0008               	return
  3301  08F9                     __end_of_my_TestPointCleared:	
  3302                           
  3303                           	psect	text2
  3304  0EDD                     __ptext2:	
  3305 ;; *************** function _my_Main *****************
  3306 ;; Defined at:
  3307 ;;		line 125 in file "../src/main_B1.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    7
  3328 ;; This function calls:
  3329 ;;		_setBuz
  3330 ;;		_setSw_Enable
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _my_Main
  3338  0EDD                     _my_Main:	
  3339                           
  3340                           ;main_B1.c: 127: if (myMain->PowerON == 0) {
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3344  0EDD  0020               	movlb	0	; select bank0
  3345  0EDE  086C               	movf	_myMain,w
  3346  0EDF  0086               	movwf	6
  3347  0EE0  0187               	clrf	7
  3348  0EE1  1801               	btfsc	1,0
  3349  0EE2  2F11               	goto	l4626
  3350                           
  3351                           ;main_B1.c: 128: myMain->PowerCount++;
  3352  0EE3  0A6C               	incf	_myMain,w
  3353  0EE4  0086               	movwf	6
  3354  0EE5  0187               	clrf	7
  3355  0EE6  3001               	movlw	1
  3356  0EE7  0781               	addwf	1,f
  3357  0EE8  3141               	addfsr 1,1
  3358  0EE9  1803               	skipnc
  3359  0EEA  0A81               	incf	1,f
  3360                           
  3361                           ;main_B1.c: 129: if (myMain->PowerCount == 150)
  3362  0EEB  0A6C               	incf	_myMain,w
  3363  0EEC  0086               	movwf	6
  3364  0EED  0187               	clrf	7
  3365  0EEE  3F40               	moviw [0]fsr1
  3366  0EEF  3A96               	xorlw	150
  3367  0EF0  1D03               	skipz
  3368  0EF1  2EF4               	goto	u3975
  3369  0EF2  3F41               	moviw [1]fsr1
  3370  0EF3  3A00               	xorlw	0
  3371  0EF4                     u3975:	
  3372  0EF4  1D03               	skipz
  3373  0EF5  0008               	return
  3374                           
  3375                           ;main_B1.c: 130: {
  3376                           ;main_B1.c: 131: myMain->PowerCount = 0;
  3377  0EF6  0A6C               	incf	_myMain,w
  3378  0EF7  0086               	movwf	6
  3379  0EF8  0187               	clrf	7
  3380  0EF9  3000               	movlw	0
  3381  0EFA  3FC0               	movwi [0]fsr1
  3382  0EFB  3FC1               	movwi [1]fsr1
  3383                           
  3384                           ;main_B1.c: 132: myMain->PowerON = 1;
  3385  0EFC  086C               	movf	_myMain,w
  3386  0EFD  0086               	movwf	6
  3387  0EFE  0187               	clrf	7
  3388  0EFF  1401               	bsf	1,0
  3389                           
  3390                           ;main_B1.c: 135: ;;
  3391                           ;main_B1.c: 139: ;;
  3392                           ;main_B1.c: 145: setBuz(3, 50);
  3393  0F00  3032               	movlw	50
  3394  0F01  00A9               	movwf	setBuz@time
  3395  0F02  3000               	movlw	0
  3396  0F03  00AA               	movwf	setBuz@time+1
  3397  0F04  3003               	movlw	3
  3398  0F05  3186  265D  318E   	fcall	_setBuz
  3399                           
  3400                           ;main_B1.c: 146: myMain->SelfTest = 1;
  3401  0F08  0020               	movlb	0	; select bank0
  3402  0F09  086C               	movf	_myMain,w
  3403  0F0A  0086               	movwf	6
  3404  0F0B  0187               	clrf	7
  3405  0F0C  1701               	bsf	1,6
  3406                           
  3407                           ;main_B1.c: 148: setSw_Enable(1);
  3408  0F0D  3001               	movlw	1
  3409  0F0E  3188  206F         	fcall	_setSw_Enable
  3410                           
  3411                           ;main_B1.c: 155: }
  3412                           ;main_B1.c: 156: } else {
  3413  0F10  0008               	return
  3414  0F11                     l4626:	
  3415                           
  3416                           ;main_B1.c: 164: myMain->Count1++;
  3417  0F11  0020               	movlb	0	; select bank0
  3418  0F12  086C               	movf	_myMain,w
  3419  0F13  3E05               	addlw	5
  3420  0F14  0086               	movwf	6
  3421  0F15  0187               	clrf	7
  3422  0F16  3001               	movlw	1
  3423  0F17  0781               	addwf	1,f
  3424  0F18  3141               	addfsr 1,1
  3425  0F19  1803               	skipnc
  3426  0F1A  0A81               	incf	1,f
  3427                           
  3428                           ;main_B1.c: 165: if (myMain->Count1 == 100)
  3429  0F1B  086C               	movf	_myMain,w
  3430  0F1C  3E05               	addlw	5
  3431  0F1D  0086               	movwf	6
  3432  0F1E  0187               	clrf	7
  3433  0F1F  3F40               	moviw [0]fsr1
  3434  0F20  3A64               	xorlw	100
  3435  0F21  1D03               	skipz
  3436  0F22  2F25               	goto	u3985
  3437  0F23  3F41               	moviw [1]fsr1
  3438  0F24  3A00               	xorlw	0
  3439  0F25                     u3985:	
  3440  0F25  1D03               	skipz
  3441  0F26  0008               	return
  3442                           
  3443                           ;main_B1.c: 166: {
  3444                           ;main_B1.c: 167: myMain->Count1 = 0;
  3445  0F27  086C               	movf	_myMain,w
  3446  0F28  3E05               	addlw	5
  3447  0F29  0086               	movwf	6
  3448  0F2A  0187               	clrf	7
  3449  0F2B  3000               	movlw	0
  3450  0F2C  3FC0               	movwi [0]fsr1
  3451  0F2D  3FC1               	movwi [1]fsr1
  3452                           
  3453                           ;main_B1.c: 180: if (myMain->Flag) {
  3454  0F2E  086C               	movf	_myMain,w
  3455  0F2F  0086               	movwf	6
  3456  0F30  0187               	clrf	7
  3457  0F31  1D81               	btfss	1,3
  3458  0F32  2F38               	goto	l4634
  3459                           
  3460                           ;main_B1.c: 181: myMain->Flag = 0;
  3461  0F33  086C               	movf	_myMain,w
  3462  0F34  0086               	movwf	6
  3463  0F35  0187               	clrf	7
  3464  0F36  1181               	bcf	1,3
  3465                           
  3466                           ;main_B1.c: 190: } else {
  3467  0F37  0008               	return
  3468  0F38                     l4634:	
  3469                           
  3470                           ;main_B1.c: 191: myMain->Flag = 1;
  3471  0F38  086C               	movf	_myMain,w
  3472  0F39  0086               	movwf	6
  3473  0F3A  0187               	clrf	7
  3474  0F3B  1581               	bsf	1,3
  3475  0F3C  0008               	return
  3476  0F3D                     __end_of_my_Main:	
  3477                           
  3478                           	psect	text3
  3479  08F9                     __ptext3:	
  3480 ;; *************** function _myMain_Initialization *****************
  3481 ;; Defined at:
  3482 ;;		line 113 in file "../src/main_B1.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		wreg, fsr1l, fsr1h
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    5
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _myMain_Initialization
  3512  08F9                     _myMain_Initialization:	
  3513                           
  3514                           ;main_B1.c: 115: product = &_product;
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3518  08F9  3045               	movlw	__product& (0+255)
  3519  08FA  0020               	movlb	0	; select bank0
  3520  08FB  00A0               	movwf	??_myMain_Initialization
  3521  08FC  0820               	movf	??_myMain_Initialization,w
  3522  08FD  00ED               	movwf	_product
  3523                           
  3524                           ;main_B1.c: 116: product->Data[20] = 209;
  3525  08FE  30D1               	movlw	209
  3526  08FF  00A0               	movwf	??_myMain_Initialization
  3527  0900  086D               	movf	_product,w
  3528  0901  3E14               	addlw	20
  3529  0902  0086               	movwf	6
  3530  0903  3001               	movlw	1	; select bank2/3
  3531  0904  0087               	movwf	7
  3532  0905  0820               	movf	??_myMain_Initialization,w
  3533  0906  0081               	movwf	1
  3534                           
  3535                           ;main_B1.c: 119: myMain = &_myMain;
  3536  0907  30A0               	movlw	__myMain& (0+255)
  3537  0908  00A0               	movwf	??_myMain_Initialization
  3538  0909  0820               	movf	??_myMain_Initialization,w
  3539  090A  00EC               	movwf	_myMain
  3540  090B  0008               	return
  3541  090C                     __end_of_myMain_Initialization:	
  3542                           
  3543                           	psect	text4
  3544  0BE2                     __ptext4:	
  3545 ;; *************** function _getPowerFault_AD *****************
  3546 ;; Defined at:
  3547 ;;		line 49 in file "../src/PowerFault_B1.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  channel         1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  channel         1    8[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;		None               void
  3554 ;; Registers used:
  3555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;Total ram usage:        5 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    6
  3568 ;; This function calls:
  3569 ;;		_getAD
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _getPowerFault_AD
  3577  0BE2                     _getPowerFault_AD:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _getPowerFault_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3581                           ;getPowerFault_AD@channel stored from wreg
  3582  0BE2  0020               	movlb	0	; select bank0
  3583  0BE3  00A8               	movwf	getPowerFault_AD@channel
  3584                           
  3585                           ;PowerFault_B1.c: 51: if(PF->ADtoGO)
  3586  0BE4  085B               	movf	_PF,w
  3587  0BE5  0086               	movwf	6
  3588  0BE6  0187               	clrf	7
  3589  0BE7  1D81               	btfss	1,3
  3590  0BE8  0008               	return
  3591                           
  3592                           ;PowerFault_B1.c: 52: {
  3593                           ;PowerFault_B1.c: 53: PF->ADRES=getAD(channel,0xf0);
  3594  0BE9  30F0               	movlw	240
  3595  0BEA  00A4               	movwf	??_getPowerFault_AD
  3596  0BEB  0824               	movf	??_getPowerFault_AD,w
  3597  0BEC  00A0               	movwf	getAD@adcon1
  3598  0BED  0828               	movf	getPowerFault_AD@channel,w
  3599  0BEE  3189  2120  318B   	fcall	_getAD
  3600  0BF1  0020               	movlb	0	; select bank0
  3601  0BF2  085B               	movf	_PF,w
  3602  0BF3  3E06               	addlw	6
  3603  0BF4  0086               	movwf	6
  3604  0BF5  0187               	clrf	7
  3605  0BF6  0820               	movf	?_getAD,w
  3606  0BF7  3FC0               	movwi [0]fsr1
  3607  0BF8  0821               	movf	?_getAD+1,w
  3608  0BF9  3FC1               	movwi [1]fsr1
  3609                           
  3610                           ;PowerFault_B1.c: 54: if(PF->AD < PF->ADRES)
  3611  0BFA  085B               	movf	_PF,w
  3612  0BFB  3E06               	addlw	6
  3613  0BFC  0086               	movwf	6
  3614  0BFD  0187               	clrf	7
  3615  0BFE  3F40               	moviw [0]fsr1
  3616  0BFF  00A4               	movwf	??_getPowerFault_AD
  3617  0C00  3F41               	moviw [1]fsr1
  3618  0C01  00A5               	movwf	??_getPowerFault_AD+1
  3619  0C02  085B               	movf	_PF,w
  3620  0C03  3E04               	addlw	4
  3621  0C04  0086               	movwf	6
  3622  0C05  0187               	clrf	7
  3623  0C06  3F40               	moviw [0]fsr1
  3624  0C07  00A6               	movwf	??_getPowerFault_AD+2
  3625  0C08  3F41               	moviw [1]fsr1
  3626  0C09  00A7               	movwf	??_getPowerFault_AD+3
  3627  0C0A  0825               	movf	??_getPowerFault_AD+1,w
  3628  0C0B  0227               	subwf	??_getPowerFault_AD+3,w
  3629  0C0C  1D03               	skipz
  3630  0C0D  2C10               	goto	u3955
  3631  0C0E  0824               	movf	??_getPowerFault_AD,w
  3632  0C0F  0226               	subwf	??_getPowerFault_AD+2,w
  3633  0C10                     u3955:	
  3634  0C10  1803               	skipnc
  3635  0C11  0008               	return
  3636                           
  3637                           ;PowerFault_B1.c: 55: {
  3638                           ;PowerFault_B1.c: 56: PF->AD=PF->ADRES;
  3639  0C12  085B               	movf	_PF,w
  3640  0C13  3E06               	addlw	6
  3641  0C14  0086               	movwf	6
  3642  0C15  0187               	clrf	7
  3643  0C16  085B               	movf	_PF,w
  3644  0C17  3E04               	addlw	4
  3645  0C18  0084               	movwf	4
  3646  0C19  0185               	clrf	5
  3647  0C1A  3F40               	moviw [0]fsr1
  3648  0C1B  3F80               	movwi [0]fsr0
  3649  0C1C  3F41               	moviw [1]fsr1
  3650  0C1D  3F81               	movwi [1]fsr0
  3651  0C1E  0008               	return
  3652  0C1F                     __end_of_getPowerFault_AD:	
  3653                           
  3654                           	psect	text5
  3655  0920                     __ptext5:	
  3656 ;; *************** function _getAD *****************
  3657 ;; Defined at:
  3658 ;;		line 342 in file "../src/MCU_B1.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  adcon0          1    wreg     unsigned char 
  3661 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  adcon0          1    3[BANK0 ] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  2    0[BANK0 ] int 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3673 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;Total ram usage:        4 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    5
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_getPowerFault_AD
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _getAD
  3689  0920                     _getAD:	
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _getAD: [wreg+status,2+status,0]
  3693                           ;getAD@adcon0 stored from wreg
  3694  0920  0020               	movlb	0	; select bank0
  3695  0921  00A3               	movwf	getAD@adcon0
  3696                           
  3697                           ;MCU_B1.c: 343: ADCON0 = adcon0;
  3698  0922  0823               	movf	getAD@adcon0,w
  3699  0923  0021               	movlb	1	; select bank1
  3700  0924  009D               	movwf	29	;volatile
  3701                           
  3702                           ;MCU_B1.c: 344: ADCON1 = adcon1;
  3703  0925  0020               	movlb	0	; select bank0
  3704  0926  0820               	movf	getAD@adcon1,w
  3705  0927  0021               	movlb	1	; select bank1
  3706  0928  009E               	movwf	30	;volatile
  3707                           
  3708                           ;MCU_B1.c: 345: GO_nDONE = 1;
  3709  0929  149D               	bsf	29,1	;volatile
  3710  092A                     l881:	
  3711                           ;MCU_B1.c: 346: while (GO_nDONE == 1);
  3712                           
  3713  092A  189D               	btfsc	29,1	;volatile
  3714  092B  292A               	goto	l881
  3715                           
  3716                           ;MCU_B1.c: 347: return ((ADRESH*256)+ADRESL);
  3717  092C  081C               	movf	28,w	;volatile
  3718  092D  0020               	movlb	0	; select bank0
  3719  092E  01A1               	clrf	?_getAD+1
  3720  092F  07A1               	addwf	?_getAD+1,f
  3721  0930  0021               	movlb	1	; select bank1
  3722  0931  081B               	movf	27,w	;volatile
  3723  0932  0020               	movlb	0	; select bank0
  3724  0933  01A0               	clrf	?_getAD
  3725  0934  07A0               	addwf	?_getAD,f
  3726  0935  0008               	return
  3727  0936                     __end_of_getAD:	
  3728                           
  3729                           	psect	text6
  3730  1766                     __ptext6:	
  3731 ;; *************** function _Switch_Main *****************
  3732 ;; Defined at:
  3733 ;;		line 61 in file "../src/Switch_B1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    9
  3754 ;; This function calls:
  3755 ;;		_setSw_Main
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _Switch_Main
  3763  1766                     _Switch_Main:	
  3764                           
  3765                           ;Switch_B1.c: 63: setSw_Main(1);
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _Switch_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3769  1766  3001               	movlw	1
  3770  1767  3181  21C0         	fcall	_setSw_Main
  3771  1769  0008               	return
  3772  176A                     __end_of_Switch_Main:	
  3773                           
  3774                           	psect	text7
  3775  01C0                     __ptext7:	
  3776 ;; *************** function _setSw_Main *****************
  3777 ;; Defined at:
  3778 ;;		line 111 in file "../src/Switch_B1.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  sw              1    wreg     unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  sw              1   18[BANK0 ] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;		None               void
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;Total ram usage:        4 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    8
  3799 ;; This function calls:
  3800 ;;		_SwPointSelect
  3801 ;;		_Sw_DimmerAdjFunc
  3802 ;;		_Sw_DimmerOffFunc
  3803 ;;		_Sw_DimmerOnFunc
  3804 ;;		_setBuz
  3805 ;; This function is called by:
  3806 ;;		_Switch_Main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _setSw_Main
  3812  01C0                     _setSw_Main:	
  3813                           
  3814                           ;incstack = 0
  3815                           ; Regs used in _setSw_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3816                           ;setSw_Main@sw stored from wreg
  3817  01C0  0020               	movlb	0	; select bank0
  3818  01C1  00B2               	movwf	setSw_Main@sw
  3819                           
  3820                           ;Switch_B1.c: 112: SwPointSelect(sw);
  3821  01C2  0832               	movf	setSw_Main@sw,w
  3822  01C3  3197  27F5  3181   	fcall	_SwPointSelect
  3823                           
  3824                           ;Switch_B1.c: 113: if (Sw->Enable == 1) {
  3825  01C6  0020               	movlb	0	; select bank0
  3826  01C7  085C               	movf	_Sw,w
  3827  01C8  0086               	movwf	6
  3828  01C9  0187               	clrf	7
  3829  01CA  1C01               	btfss	1,0
  3830  01CB  0008               	return
  3831                           
  3832                           ;Switch_B1.c: 133: Sw->Touch = (RA6 == 1 || RA4 == 1 || RA0 == 1 || RB1 == 1) ? 1 : 0;
  3833  01CC  01B1               	clrf	_setSw_Main$3897
  3834  01CD  0AB1               	incf	_setSw_Main$3897,f
  3835  01CE  1F0C               	btfss	12,6	;volatile
  3836  01CF  1A0C               	btfsc	12,4	;volatile
  3837  01D0  29D5               	goto	l4358
  3838  01D1  1C0C               	btfss	12,0	;volatile
  3839  01D2  188D               	btfsc	13,1	;volatile
  3840  01D3  29D5               	goto	l4358
  3841  01D4  01B1               	clrf	_setSw_Main$3897
  3842  01D5                     l4358:	
  3843  01D5  085C               	movf	_Sw,w
  3844  01D6  0086               	movwf	6
  3845  01D7  0187               	clrf	7
  3846  01D8  0831               	movf	_setSw_Main$3897,w
  3847  01D9  1081               	bcf	1,1
  3848  01DA  1D03               	skipz
  3849  01DB  1481               	bsf	1,1
  3850                           
  3851                           ;Switch_B1.c: 135: if (Sw->Touch == 1) {
  3852  01DC  085C               	movf	_Sw,w
  3853  01DD  0086               	movwf	6
  3854  01DE  0187               	clrf	7
  3855  01DF  1C81               	btfss	1,1
  3856  01E0  2A8C               	goto	l4402
  3857                           
  3858                           ;Switch_B1.c: 136: if (Sw->Debounce == 0) {
  3859  01E1  085C               	movf	_Sw,w
  3860  01E2  0086               	movwf	6
  3861  01E3  0187               	clrf	7
  3862  01E4  1901               	btfsc	1,2
  3863  01E5  2A03               	goto	l4374
  3864                           
  3865                           ;Switch_B1.c: 137: Sw->DebounceTime++;
  3866  01E6  3001               	movlw	1
  3867  01E7  00AF               	movwf	??_setSw_Main
  3868  01E8  085C               	movf	_Sw,w
  3869  01E9  3E02               	addlw	2
  3870  01EA  0086               	movwf	6
  3871  01EB  0187               	clrf	7
  3872  01EC  082F               	movf	??_setSw_Main,w
  3873  01ED  0781               	addwf	1,f
  3874                           
  3875                           ;Switch_B1.c: 138: if (Sw->DebounceTime >= 5) {
  3876  01EE  085C               	movf	_Sw,w
  3877  01EF  3E02               	addlw	2
  3878  01F0  0086               	movwf	6
  3879  01F1  0187               	clrf	7
  3880  01F2  3005               	movlw	5
  3881  01F3  0201               	subwf	1,w
  3882  01F4  1C03               	skipc
  3883  01F5  0008               	return
  3884                           
  3885                           ;Switch_B1.c: 139: Sw->DebounceTime = 0;
  3886  01F6  085C               	movf	_Sw,w
  3887  01F7  3E02               	addlw	2
  3888  01F8  0086               	movwf	6
  3889  01F9  0187               	clrf	7
  3890  01FA  0181               	clrf	1
  3891                           
  3892                           ;Switch_B1.c: 140: Sw->Debounce = 1;
  3893  01FB  085C               	movf	_Sw,w
  3894  01FC  0086               	movwf	6
  3895  01FD  0187               	clrf	7
  3896  01FE  1501               	bsf	1,2
  3897                           
  3898                           ;Switch_B1.c: 143: Sw_DimmerOnFunc(sw);
  3899  01FF  0832               	movf	setSw_Main@sw,w
  3900  0200  318B  233F         	fcall	_Sw_DimmerOnFunc
  3901                           
  3902                           ;Switch_B1.c: 145: }
  3903                           ;Switch_B1.c: 146: } else {
  3904  0202  0008               	return
  3905  0203                     l4374:	
  3906                           
  3907                           ;Switch_B1.c: 147: if (Sw->Hold1 == 0) {
  3908  0203  0020               	movlb	0	; select bank0
  3909  0204  085C               	movf	_Sw,w
  3910  0205  0086               	movwf	6
  3911  0206  0187               	clrf	7
  3912  0207  1981               	btfsc	1,3
  3913  0208  2A2C               	goto	l4384
  3914                           
  3915                           ;Switch_B1.c: 148: Sw->Hold1Time++;
  3916  0209  085C               	movf	_Sw,w
  3917  020A  3E03               	addlw	3
  3918  020B  0086               	movwf	6
  3919  020C  0187               	clrf	7
  3920  020D  3001               	movlw	1
  3921  020E  0781               	addwf	1,f
  3922  020F  3141               	addfsr 1,1
  3923  0210  1803               	skipnc
  3924  0211  0A81               	incf	1,f
  3925                           
  3926                           ;Switch_B1.c: 149: if (Sw->Hold1Time >= 150) {
  3927  0212  085C               	movf	_Sw,w
  3928  0213  3E03               	addlw	3
  3929  0214  0086               	movwf	6
  3930  0215  0187               	clrf	7
  3931  0216  3F40               	moviw [0]fsr1
  3932  0217  00AF               	movwf	??_setSw_Main
  3933  0218  3F41               	moviw [1]fsr1
  3934  0219  00B0               	movwf	??_setSw_Main+1
  3935  021A  3000               	movlw	0
  3936  021B  0230               	subwf	??_setSw_Main+1,w
  3937  021C  3096               	movlw	150
  3938  021D  1903               	skipnz
  3939  021E  022F               	subwf	??_setSw_Main,w
  3940  021F  1C03               	skipc
  3941  0220  0008               	return
  3942                           
  3943                           ;Switch_B1.c: 150: Sw->Hold1Time = 0;
  3944  0221  085C               	movf	_Sw,w
  3945  0222  3E03               	addlw	3
  3946  0223  0086               	movwf	6
  3947  0224  0187               	clrf	7
  3948  0225  3000               	movlw	0
  3949  0226  3FC0               	movwi [0]fsr1
  3950  0227  3FC1               	movwi [1]fsr1
  3951                           
  3952                           ;Switch_B1.c: 153: Sw_DimmerAdjFunc(sw);
  3953  0228  0832               	movf	setSw_Main@sw,w
  3954  0229  318A  2214         	fcall	_Sw_DimmerAdjFunc
  3955                           
  3956                           ;Switch_B1.c: 156: }
  3957                           ;Switch_B1.c: 157: } else {
  3958  022B  0008               	return
  3959  022C                     l4384:	
  3960                           
  3961                           ;Switch_B1.c: 158: if (Sw->Hold2 == 0) {
  3962  022C  0020               	movlb	0	; select bank0
  3963  022D  085C               	movf	_Sw,w
  3964  022E  0086               	movwf	6
  3965  022F  0187               	clrf	7
  3966  0230  1A01               	btfsc	1,4
  3967  0231  2A62               	goto	l4394
  3968                           
  3969                           ;Switch_B1.c: 159: Sw->Hold2Time++;
  3970  0232  085C               	movf	_Sw,w
  3971  0233  3E05               	addlw	5
  3972  0234  0086               	movwf	6
  3973  0235  0187               	clrf	7
  3974  0236  3001               	movlw	1
  3975  0237  0781               	addwf	1,f
  3976  0238  3141               	addfsr 1,1
  3977  0239  1803               	skipnc
  3978  023A  0A81               	incf	1,f
  3979                           
  3980                           ;Switch_B1.c: 160: if (Sw->Hold2Time >= 150) {
  3981  023B  085C               	movf	_Sw,w
  3982  023C  3E05               	addlw	5
  3983  023D  0086               	movwf	6
  3984  023E  0187               	clrf	7
  3985  023F  3F40               	moviw [0]fsr1
  3986  0240  00AF               	movwf	??_setSw_Main
  3987  0241  3F41               	moviw [1]fsr1
  3988  0242  00B0               	movwf	??_setSw_Main+1
  3989  0243  3000               	movlw	0
  3990  0244  0230               	subwf	??_setSw_Main+1,w
  3991  0245  3096               	movlw	150
  3992  0246  1903               	skipnz
  3993  0247  022F               	subwf	??_setSw_Main,w
  3994  0248  1C03               	skipc
  3995  0249  0008               	return
  3996                           
  3997                           ;Switch_B1.c: 161: Sw->Hold2Time = 0;
  3998  024A  085C               	movf	_Sw,w
  3999  024B  3E05               	addlw	5
  4000  024C  0086               	movwf	6
  4001  024D  0187               	clrf	7
  4002  024E  3000               	movlw	0
  4003  024F  3FC0               	movwi [0]fsr1
  4004  0250  3FC1               	movwi [1]fsr1
  4005                           
  4006                           ;Switch_B1.c: 162: Sw->Hold2 = 1;
  4007  0251  085C               	movf	_Sw,w
  4008  0252  0086               	movwf	6
  4009  0253  0187               	clrf	7
  4010  0254  1601               	bsf	1,4
  4011                           
  4012                           ;Switch_B1.c: 167: if (myMain->First == 1) {
  4013  0255  086C               	movf	_myMain,w
  4014  0256  0086               	movwf	6
  4015  0257  0187               	clrf	7
  4016  0258  1F81               	btfss	1,7
  4017  0259  0008               	return
  4018                           
  4019                           ;Switch_B1.c: 168: setBuz(2, 100);
  4020  025A  3064               	movlw	100
  4021  025B  00A9               	movwf	setBuz@time
  4022  025C  3000               	movlw	0
  4023  025D  00AA               	movwf	setBuz@time+1
  4024  025E  3002               	movlw	2
  4025  025F  3186  265D         	fcall	_setBuz
  4026                           
  4027                           ;Switch_B1.c: 169: }
  4028                           ;Switch_B1.c: 171: }
  4029                           ;Switch_B1.c: 172: } else {
  4030  0261  0008               	return
  4031  0262                     l4394:	
  4032                           
  4033                           ;Switch_B1.c: 173: if (Sw->Hold3 == 0) {
  4034  0262  0020               	movlb	0	; select bank0
  4035  0263  085C               	movf	_Sw,w
  4036  0264  0086               	movwf	6
  4037  0265  0187               	clrf	7
  4038  0266  1A81               	btfsc	1,5
  4039  0267  0008               	return
  4040                           
  4041                           ;Switch_B1.c: 174: Sw->Hold3Time++;
  4042  0268  085C               	movf	_Sw,w
  4043  0269  3E07               	addlw	7
  4044  026A  0086               	movwf	6
  4045  026B  0187               	clrf	7
  4046  026C  3001               	movlw	1
  4047  026D  0781               	addwf	1,f
  4048  026E  3141               	addfsr 1,1
  4049  026F  1803               	skipnc
  4050  0270  0A81               	incf	1,f
  4051                           
  4052                           ;Switch_B1.c: 175: if (Sw->Hold3Time >= 300) {
  4053  0271  085C               	movf	_Sw,w
  4054  0272  3E07               	addlw	7
  4055  0273  0086               	movwf	6
  4056  0274  0187               	clrf	7
  4057  0275  3F40               	moviw [0]fsr1
  4058  0276  00AF               	movwf	??_setSw_Main
  4059  0277  3F41               	moviw [1]fsr1
  4060  0278  00B0               	movwf	??_setSw_Main+1
  4061  0279  3001               	movlw	1
  4062  027A  0230               	subwf	??_setSw_Main+1,w
  4063  027B  302C               	movlw	44
  4064  027C  1903               	skipnz
  4065  027D  022F               	subwf	??_setSw_Main,w
  4066  027E  1C03               	skipc
  4067  027F  0008               	return
  4068                           
  4069                           ;Switch_B1.c: 176: Sw->Hold3Time = 0;
  4070  0280  085C               	movf	_Sw,w
  4071  0281  3E07               	addlw	7
  4072  0282  0086               	movwf	6
  4073  0283  0187               	clrf	7
  4074  0284  3000               	movlw	0
  4075  0285  3FC0               	movwi [0]fsr1
  4076  0286  3FC1               	movwi [1]fsr1
  4077                           
  4078                           ;Switch_B1.c: 177: Sw->Hold3 = 1;
  4079  0287  085C               	movf	_Sw,w
  4080  0288  0086               	movwf	6
  4081  0289  0187               	clrf	7
  4082  028A  1681               	bsf	1,5
  4083                           
  4084                           ;Switch_B1.c: 183: }
  4085                           ;Switch_B1.c: 184: }
  4086                           ;Switch_B1.c: 185: }
  4087                           ;Switch_B1.c: 186: }
  4088                           ;Switch_B1.c: 187: }
  4089                           ;Switch_B1.c: 188: } else {
  4090  028B  0008               	return
  4091  028C                     l4402:	
  4092                           
  4093                           ;Switch_B1.c: 189: if (Sw->Debounce == 1) {
  4094  028C  085C               	movf	_Sw,w
  4095  028D  0086               	movwf	6
  4096  028E  0187               	clrf	7
  4097  028F  1D01               	btfss	1,2
  4098  0290  0008               	return
  4099                           
  4100                           ;Switch_B1.c: 190: Sw->DebounceTime++;
  4101  0291  3001               	movlw	1
  4102  0292  00AF               	movwf	??_setSw_Main
  4103  0293  085C               	movf	_Sw,w
  4104  0294  3E02               	addlw	2
  4105  0295  0086               	movwf	6
  4106  0296  0187               	clrf	7
  4107  0297  082F               	movf	??_setSw_Main,w
  4108  0298  0781               	addwf	1,f
  4109                           
  4110                           ;Switch_B1.c: 191: if (Sw->DebounceTime >= 5) {
  4111  0299  085C               	movf	_Sw,w
  4112  029A  3E02               	addlw	2
  4113  029B  0086               	movwf	6
  4114  029C  0187               	clrf	7
  4115  029D  3005               	movlw	5
  4116  029E  0201               	subwf	1,w
  4117  029F  1C03               	skipc
  4118  02A0  0008               	return
  4119                           
  4120                           ;Switch_B1.c: 192: Sw->DebounceTime = 0;
  4121  02A1  085C               	movf	_Sw,w
  4122  02A2  3E02               	addlw	2
  4123  02A3  0086               	movwf	6
  4124  02A4  0187               	clrf	7
  4125  02A5  0181               	clrf	1
  4126                           
  4127                           ;Switch_B1.c: 193: Sw->Debounce = 0;
  4128  02A6  085C               	movf	_Sw,w
  4129  02A7  0086               	movwf	6
  4130  02A8  0187               	clrf	7
  4131  02A9  1101               	bcf	1,2
  4132                           
  4133                           ;Switch_B1.c: 194: Sw->Hold1Time = 0;
  4134  02AA  085C               	movf	_Sw,w
  4135  02AB  3E03               	addlw	3
  4136  02AC  0086               	movwf	6
  4137  02AD  0187               	clrf	7
  4138  02AE  3000               	movlw	0
  4139  02AF  3FC0               	movwi [0]fsr1
  4140  02B0  3FC1               	movwi [1]fsr1
  4141                           
  4142                           ;Switch_B1.c: 195: Sw->Hold1 = 0;
  4143  02B1  085C               	movf	_Sw,w
  4144  02B2  0086               	movwf	6
  4145  02B3  0187               	clrf	7
  4146  02B4  1181               	bcf	1,3
  4147                           
  4148                           ;Switch_B1.c: 196: Sw->Hold2Time = 0;
  4149  02B5  085C               	movf	_Sw,w
  4150  02B6  3E05               	addlw	5
  4151  02B7  0086               	movwf	6
  4152  02B8  0187               	clrf	7
  4153  02B9  3000               	movlw	0
  4154  02BA  3FC0               	movwi [0]fsr1
  4155  02BB  3FC1               	movwi [1]fsr1
  4156                           
  4157                           ;Switch_B1.c: 197: Sw->Hold2 = 0;
  4158  02BC  085C               	movf	_Sw,w
  4159  02BD  0086               	movwf	6
  4160  02BE  0187               	clrf	7
  4161  02BF  1201               	bcf	1,4
  4162                           
  4163                           ;Switch_B1.c: 198: Sw->Hold3Time = 0;
  4164  02C0  085C               	movf	_Sw,w
  4165  02C1  3E07               	addlw	7
  4166  02C2  0086               	movwf	6
  4167  02C3  0187               	clrf	7
  4168  02C4  3000               	movlw	0
  4169  02C5  3FC0               	movwi [0]fsr1
  4170  02C6  3FC1               	movwi [1]fsr1
  4171                           
  4172                           ;Switch_B1.c: 199: Sw->Hold3 = 0;
  4173  02C7  085C               	movf	_Sw,w
  4174  02C8  0086               	movwf	6
  4175  02C9  0187               	clrf	7
  4176  02CA  1281               	bcf	1,5
  4177                           
  4178                           ;Switch_B1.c: 201: Sw_DimmerOffFunc(sw);
  4179  02CB  0832               	movf	setSw_Main@sw,w
  4180  02CC  318C  24EA         	fcall	_Sw_DimmerOffFunc
  4181  02CE  0008               	return
  4182  02CF                     __end_of_setSw_Main:	
  4183                           
  4184                           	psect	text8
  4185  0B3F                     __ptext8:	
  4186 ;; *************** function _Sw_DimmerOnFunc *****************
  4187 ;; Defined at:
  4188 ;;		line 213 in file "../src/Switch_B1.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  sw              1    wreg     unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  sw              1   14[BANK0 ] unsigned char 
  4193 ;;  Idle            1   13[BANK0 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    7
  4210 ;; This function calls:
  4211 ;;		_setBuz
  4212 ;;		_setDimmerLights_Switch
  4213 ;;		_setDimmerLights_Trigger
  4214 ;; This function is called by:
  4215 ;;		_setSw_Main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _Sw_DimmerOnFunc
  4221  0B3F                     _Sw_DimmerOnFunc:	
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4225                           ;Sw_DimmerOnFunc@sw stored from wreg
  4226  0B3F  0020               	movlb	0	; select bank0
  4227  0B40  00AE               	movwf	Sw_DimmerOnFunc@sw
  4228                           
  4229                           ;Switch_B1.c: 214: char Idle = 1;
  4230  0B41  01AD               	clrf	Sw_DimmerOnFunc@Idle
  4231  0B42  0AAD               	incf	Sw_DimmerOnFunc@Idle,f
  4232                           
  4233                           ;Switch_B1.c: 235: if (Idle == 1) {
  4234  0B43  082D               	movf	Sw_DimmerOnFunc@Idle,w
  4235  0B44  3A01               	xorlw	1
  4236  0B45  1D03               	skipz
  4237  0B46  0008               	return
  4238                           
  4239                           ;Switch_B1.c: 236: Sw->Flag = 1;
  4240  0B47  085C               	movf	_Sw,w
  4241  0B48  0086               	movwf	6
  4242  0B49  0187               	clrf	7
  4243  0B4A  1781               	bsf	1,7
  4244                           
  4245                           ;Switch_B1.c: 237: setBuz(1, 100);
  4246  0B4B  3064               	movlw	100
  4247  0B4C  00A9               	movwf	setBuz@time
  4248  0B4D  3000               	movlw	0
  4249  0B4E  00AA               	movwf	setBuz@time+1
  4250  0B4F  3001               	movlw	1
  4251  0B50  3186  265D  318B   	fcall	_setBuz
  4252                           
  4253                           ;Switch_B1.c: 238: if (Sw->Status == 0) {
  4254  0B53  0020               	movlb	0	; select bank0
  4255  0B54  085C               	movf	_Sw,w
  4256  0B55  0086               	movwf	6
  4257  0B56  0187               	clrf	7
  4258  0B57  1B01               	btfsc	1,6
  4259  0B58  2B6A               	goto	l3860
  4260                           
  4261                           ;Switch_B1.c: 239: Sw->Status = 1;
  4262  0B59  085C               	movf	_Sw,w
  4263  0B5A  0086               	movwf	6
  4264  0B5B  0187               	clrf	7
  4265  0B5C  1701               	bsf	1,6
  4266                           
  4267                           ;Switch_B1.c: 240: ;;
  4268                           ;Switch_B1.c: 242: setDimmerLights_Trigger(sw, 1);
  4269  0B5D  01A2               	clrf	setDimmerLights_Trigger@command
  4270  0B5E  0AA2               	incf	setDimmerLights_Trigger@command,f
  4271  0B5F  082E               	movf	Sw_DimmerOnFunc@sw,w
  4272  0B60  3188  208C  318B   	fcall	_setDimmerLights_Trigger
  4273                           
  4274                           ;Switch_B1.c: 243: setDimmerLights_Switch(sw, 1);
  4275  0B63  0020               	movlb	0	; select bank0
  4276  0B64  01A2               	clrf	setDimmerLights_Switch@command
  4277  0B65  0AA2               	incf	setDimmerLights_Switch@command,f
  4278  0B66  082E               	movf	Sw_DimmerOnFunc@sw,w
  4279  0B67  3188  207D         	fcall	_setDimmerLights_Switch
  4280                           
  4281                           ;Switch_B1.c: 245: ;;
  4282                           ;Switch_B1.c: 246: ;;
  4283                           ;Switch_B1.c: 248: } else {
  4284  0B69  0008               	return
  4285  0B6A                     l3860:	
  4286                           
  4287                           ;Switch_B1.c: 249: Sw->Status = 0;
  4288  0B6A  0020               	movlb	0	; select bank0
  4289  0B6B  085C               	movf	_Sw,w
  4290  0B6C  0086               	movwf	6
  4291  0B6D  0187               	clrf	7
  4292  0B6E  1301               	bcf	1,6
  4293                           
  4294                           ;Switch_B1.c: 250: ;;
  4295  0B6F  0008               	return
  4296  0B70                     __end_of_Sw_DimmerOnFunc:	
  4297                           
  4298                           	psect	text9
  4299  0CEA                     __ptext9:	
  4300 ;; *************** function _Sw_DimmerOffFunc *****************
  4301 ;; Defined at:
  4302 ;;		line 256 in file "../src/Switch_B1.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  sw              1    wreg     unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  sw              1   10[BANK0 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        3 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    7
  4323 ;; This function calls:
  4324 ;;		_setDelayOff_GO
  4325 ;;		_setDimmerLights_AdjGo
  4326 ;;		_setDimmerLights_Switch
  4327 ;;		_setDimmerLights_Trigger
  4328 ;;		_setDimmerLights_TriggerAdj
  4329 ;; This function is called by:
  4330 ;;		_setSw_Main
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           
  4335                           ;psect for function _Sw_DimmerOffFunc
  4336  0CEA                     _Sw_DimmerOffFunc:	
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _Sw_DimmerOffFunc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4340                           ;Sw_DimmerOffFunc@sw stored from wreg
  4341  0CEA  0020               	movlb	0	; select bank0
  4342  0CEB  00AA               	movwf	Sw_DimmerOffFunc@sw
  4343                           
  4344                           ;Switch_B1.c: 257: if (Sw->Flag == 1) {
  4345  0CEC  085C               	movf	_Sw,w
  4346  0CED  0086               	movwf	6
  4347  0CEE  0187               	clrf	7
  4348  0CEF  1F81               	btfss	1,7
  4349  0CF0  0008               	return
  4350                           
  4351                           ;Switch_B1.c: 258: Sw->Flag = 0;
  4352  0CF1  085C               	movf	_Sw,w
  4353  0CF2  0086               	movwf	6
  4354  0CF3  0187               	clrf	7
  4355  0CF4  1381               	bcf	1,7
  4356                           
  4357                           ;Switch_B1.c: 259: if (Sw->Status == 1) {
  4358  0CF5  085C               	movf	_Sw,w
  4359  0CF6  0086               	movwf	6
  4360  0CF7  0187               	clrf	7
  4361  0CF8  1F01               	btfss	1,6
  4362  0CF9  2D21               	goto	l3888
  4363                           
  4364                           ;Switch_B1.c: 260: if (Sw->Adj == 1) {
  4365  0CFA  0A5C               	incf	_Sw,w
  4366  0CFB  0086               	movwf	6
  4367  0CFC  0187               	clrf	7
  4368  0CFD  1C01               	btfss	1,0
  4369  0CFE  0008               	return
  4370                           
  4371                           ;Switch_B1.c: 261: Sw->Adj = 0;
  4372  0CFF  0A5C               	incf	_Sw,w
  4373  0D00  0086               	movwf	6
  4374  0D01  0187               	clrf	7
  4375  0D02  1001               	bcf	1,0
  4376                           
  4377                           ;Switch_B1.c: 262: setDimmerLights_TriggerAdj(sw, 1);
  4378  0D03  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4379  0D04  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4380  0D05  082A               	movf	Sw_DimmerOffFunc@sw,w
  4381  0D06  3188  20AA  318C   	fcall	_setDimmerLights_TriggerAdj
  4382                           
  4383                           ;Switch_B1.c: 263: setDimmerLights_AdjGo(sw, 0);
  4384  0D09  0020               	movlb	0	; select bank0
  4385  0D0A  01A2               	clrf	setDimmerLights_AdjGo@command
  4386  0D0B  082A               	movf	Sw_DimmerOffFunc@sw,w
  4387  0D0C  3188  209B         	fcall	_setDimmerLights_AdjGo
  4388                           
  4389                           ;Switch_B1.c: 265: product->Data[17]=product->Data[26 + sw];
  4390  0D0E  0020               	movlb	0	; select bank0
  4391  0D0F  082A               	movf	Sw_DimmerOffFunc@sw,w
  4392  0D10  3E1A               	addlw	26
  4393  0D11  076D               	addwf	_product,w
  4394  0D12  00A8               	movwf	??_Sw_DimmerOffFunc
  4395  0D13  0828               	movf	??_Sw_DimmerOffFunc,w
  4396  0D14  0086               	movwf	6
  4397  0D15  3001               	movlw	1	; select bank2/3
  4398  0D16  0087               	movwf	7
  4399  0D17  0801               	movf	1,w
  4400  0D18  00A9               	movwf	??_Sw_DimmerOffFunc+1
  4401  0D19  086D               	movf	_product,w
  4402  0D1A  3E11               	addlw	17
  4403  0D1B  0086               	movwf	6
  4404  0D1C  3001               	movlw	1	; select bank2/3
  4405  0D1D  0087               	movwf	7
  4406  0D1E  0829               	movf	??_Sw_DimmerOffFunc+1,w
  4407  0D1F  0081               	movwf	1
  4408                           
  4409                           ;Switch_B1.c: 269: }
  4410                           ;Switch_B1.c: 270: } else {
  4411                           
  4412                           ;Switch_B1.c: 266: ;;
  4413                           ;Switch_B1.c: 267: ;;
  4414  0D20  0008               	return
  4415  0D21                     l3888:	
  4416                           
  4417                           ;Switch_B1.c: 271: setDimmerLights_Trigger(sw, 1);
  4418  0D21  01A2               	clrf	setDimmerLights_Trigger@command
  4419  0D22  0AA2               	incf	setDimmerLights_Trigger@command,f
  4420  0D23  082A               	movf	Sw_DimmerOffFunc@sw,w
  4421  0D24  3188  208C  318C   	fcall	_setDimmerLights_Trigger
  4422                           
  4423                           ;Switch_B1.c: 272: setDimmerLights_Switch(sw, 0);
  4424  0D27  0020               	movlb	0	; select bank0
  4425  0D28  01A2               	clrf	setDimmerLights_Switch@command
  4426  0D29  082A               	movf	Sw_DimmerOffFunc@sw,w
  4427  0D2A  3188  207D  318C   	fcall	_setDimmerLights_Switch
  4428                           
  4429                           ;Switch_B1.c: 274: setDelayOff_GO(sw, 0, 0);
  4430  0D2D  0020               	movlb	0	; select bank0
  4431  0D2E  01A3               	clrf	setDelayOff_GO@command
  4432  0D2F  01A4               	clrf	setDelayOff_GO@value
  4433  0D30  082A               	movf	Sw_DimmerOffFunc@sw,w
  4434  0D31  318E  2684         	fcall	_setDelayOff_GO
  4435                           
  4436                           ;Switch_B1.c: 275: ;;
  4437                           ;Switch_B1.c: 276: ;;
  4438  0D33  0008               	return
  4439  0D34                     __end_of_Sw_DimmerOffFunc:	
  4440                           
  4441                           	psect	text10
  4442  0E84                     __ptext10:	
  4443 ;; *************** function _setDelayOff_GO *****************
  4444 ;; Defined at:
  4445 ;;		line 85 in file "../src/DelayOff_B1.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  sw              1    wreg     unsigned char 
  4448 ;;  command         1    3[BANK0 ] unsigned char 
  4449 ;;  value           1    4[BANK0 ] unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  sw              1    7[BANK0 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;		None               void
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;Total ram usage:        5 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    6
  4468 ;; This function calls:
  4469 ;;		_DelayOffPointSelect
  4470 ;;		_DelayTimejudge
  4471 ;; This function is called by:
  4472 ;;		_Sw_DimmerOffFunc
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _setDelayOff_GO
  4478  0E84                     _setDelayOff_GO:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _setDelayOff_GO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4482                           ;setDelayOff_GO@sw stored from wreg
  4483  0E84  0020               	movlb	0	; select bank0
  4484  0E85  00A7               	movwf	setDelayOff_GO@sw
  4485                           
  4486                           ;DelayOff_B1.c: 86: DelayOffPointSelect(sw);
  4487  0E86  0827               	movf	setDelayOff_GO@sw,w
  4488  0E87  3197  27D4  318E   	fcall	_DelayOffPointSelect
  4489                           
  4490                           ;DelayOff_B1.c: 87: if (DelayOff->Enable) {
  4491  0E8A  0020               	movlb	0	; select bank0
  4492  0E8B  0857               	movf	_DelayOff,w
  4493  0E8C  0086               	movwf	6
  4494  0E8D  0187               	clrf	7
  4495  0E8E  1C01               	btfss	1,0
  4496  0E8F  0008               	return
  4497                           
  4498                           ;DelayOff_B1.c: 88: DelayOff->GO = command;
  4499  0E90  0857               	movf	_DelayOff,w
  4500  0E91  0086               	movwf	6
  4501  0E92  0187               	clrf	7
  4502  0E93  0823               	movf	setDelayOff_GO@command,w
  4503  0E94  1081               	bcf	1,1
  4504  0E95  1D03               	skipz
  4505  0E96  1481               	bsf	1,1
  4506                           
  4507                           ;DelayOff_B1.c: 89: if (command == 1) {
  4508  0E97  0823               	movf	setDelayOff_GO@command,w
  4509  0E98  3A01               	xorlw	1
  4510  0E99  1D03               	skipz
  4511  0E9A  2EC4               	goto	l3634
  4512                           
  4513                           ;DelayOff_B1.c: 90: DelayOff->Value = DelayTimejudge(value);
  4514  0E9B  0824               	movf	setDelayOff_GO@value,w
  4515  0E9C  318A  22B4  318E   	fcall	_DelayTimejudge
  4516  0E9F  0020               	movlb	0	; select bank0
  4517  0EA0  00A5               	movwf	??_setDelayOff_GO
  4518  0EA1  0A57               	incf	_DelayOff,w
  4519  0EA2  0086               	movwf	6
  4520  0EA3  0187               	clrf	7
  4521  0EA4  0825               	movf	??_setDelayOff_GO,w
  4522  0EA5  0081               	movwf	1
  4523                           
  4524                           ;DelayOff_B1.c: 91: if (((value % 16) == 5 || !(value % 16)) && value <= 0x25) {
  4525  0EA6  300F               	movlw	15
  4526  0EA7  0524               	andwf	setDelayOff_GO@value,w
  4527  0EA8  00A5               	movwf	??_setDelayOff_GO
  4528  0EA9  0825               	movf	??_setDelayOff_GO,w
  4529  0EAA  3A05               	xorlw	5
  4530  0EAB  1903               	skipnz
  4531  0EAC  2EB1               	goto	l3628
  4532  0EAD  0824               	movf	setDelayOff_GO@value,w
  4533  0EAE  390F               	andlw	15
  4534  0EAF  1D03               	btfss	3,2
  4535  0EB0  2EB7               	goto	l3632
  4536  0EB1                     l3628:	
  4537  0EB1  3026               	movlw	38
  4538  0EB2  0224               	subwf	setDelayOff_GO@value,w
  4539  0EB3  1803               	skipnc
  4540  0EB4  2EB7               	goto	l3632
  4541                           
  4542                           ;DelayOff_B1.c: 92: product->Data[26 + sw]=value;
  4543  0EB5  0824               	movf	setDelayOff_GO@value,w
  4544  0EB6  2EB8               	goto	L1
  4545  0EB7                     l3632:	
  4546                           ;DelayOff_B1.c: 93: } else {
  4547                           
  4548                           
  4549                           ;DelayOff_B1.c: 94: product->Data[26 + sw]=0x05;
  4550  0EB7  3005               	movlw	5
  4551  0EB8                     L1:	
  4552  0EB8  00A5               	movwf	??_setDelayOff_GO
  4553  0EB9  0827               	movf	setDelayOff_GO@sw,w
  4554  0EBA  3E1A               	addlw	26
  4555  0EBB  076D               	addwf	_product,w
  4556  0EBC  00A6               	movwf	??_setDelayOff_GO+1
  4557  0EBD  0826               	movf	??_setDelayOff_GO+1,w
  4558  0EBE  0086               	movwf	6
  4559  0EBF  3001               	movlw	1	; select bank2/3
  4560  0EC0  0087               	movwf	7
  4561  0EC1  0825               	movf	??_setDelayOff_GO,w
  4562  0EC2  0081               	movwf	1
  4563                           
  4564                           ;DelayOff_B1.c: 95: }
  4565                           ;DelayOff_B1.c: 96: } else if (command == 0) {
  4566  0EC3  2ED0               	goto	l3638
  4567  0EC4                     l3634:	
  4568  0EC4  08A3               	movf	setDelayOff_GO@command,f
  4569  0EC5  1D03               	skipz
  4570  0EC6  2ED0               	goto	l3638
  4571                           
  4572                           ;DelayOff_B1.c: 97: product->Data[sw + 26]=0;
  4573  0EC7  0827               	movf	setDelayOff_GO@sw,w
  4574  0EC8  3E1A               	addlw	26
  4575  0EC9  076D               	addwf	_product,w
  4576  0ECA  00A5               	movwf	??_setDelayOff_GO
  4577  0ECB  0825               	movf	??_setDelayOff_GO,w
  4578  0ECC  0086               	movwf	6
  4579  0ECD  3001               	movlw	1	; select bank2/3
  4580  0ECE  0087               	movwf	7
  4581  0ECF  0181               	clrf	1
  4582  0ED0                     l3638:	
  4583                           
  4584                           ;DelayOff_B1.c: 98: }
  4585                           ;DelayOff_B1.c: 99: DelayOff->SecondTime = 0;
  4586  0ED0  0857               	movf	_DelayOff,w
  4587  0ED1  3E02               	addlw	2
  4588  0ED2  0086               	movwf	6
  4589  0ED3  0187               	clrf	7
  4590  0ED4  3000               	movlw	0
  4591  0ED5  3FC0               	movwi [0]fsr1
  4592  0ED6  3FC1               	movwi [1]fsr1
  4593                           
  4594                           ;DelayOff_B1.c: 100: DelayOff->MinuteTime = 0;
  4595  0ED7  0857               	movf	_DelayOff,w
  4596  0ED8  3E04               	addlw	4
  4597  0ED9  0086               	movwf	6
  4598  0EDA  0187               	clrf	7
  4599  0EDB  0181               	clrf	1
  4600  0EDC  0008               	return
  4601  0EDD                     __end_of_setDelayOff_GO:	
  4602                           
  4603                           	psect	text11
  4604  0AB4                     __ptext11:	
  4605 ;; *************** function _DelayTimejudge *****************
  4606 ;; Defined at:
  4607 ;;		line 105 in file "../src/DelayOff_B1.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  value           1    wreg     unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  value           1    1[BANK0 ] unsigned char 
  4612 ;;  i               1    2[BANK0 ] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      unsigned char 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;Total ram usage:        3 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    5
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_setDelayOff_GO
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           
  4637                           ;psect for function _DelayTimejudge
  4638  0AB4                     _DelayTimejudge:	
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in _DelayTimejudge: [wreg-fsr0h+status,2+status,0]
  4642                           ;DelayTimejudge@value stored from wreg
  4643  0AB4  0020               	movlb	0	; select bank0
  4644  0AB5  00A1               	movwf	DelayTimejudge@value
  4645                           
  4646                           ;DelayOff_B1.c: 106: char i = 5;
  4647  0AB6  3005               	movlw	5
  4648  0AB7  00A0               	movwf	??_DelayTimejudge
  4649  0AB8  0820               	movf	??_DelayTimejudge,w
  4650  0AB9  00A2               	movwf	DelayTimejudge@i
  4651                           
  4652                           ;DelayOff_B1.c: 107: switch (value) {
  4653  0ABA  2ACA               	goto	l3574
  4654  0ABB                     l3560:	
  4655                           ;DelayOff_B1.c: 108: case 0x05:
  4656                           
  4657                           
  4658                           ;DelayOff_B1.c: 109: i = 5;
  4659  0ABB  3005               	movlw	5
  4660  0ABC  2AC6               	goto	L6
  4661  0ABD                     l3562:	
  4662                           ;DelayOff_B1.c: 111: case 0x10:
  4663                           
  4664                           ;DelayOff_B1.c: 110: break;
  4665                           
  4666                           
  4667                           ;DelayOff_B1.c: 112: i = 10;
  4668  0ABD  300A               	movlw	10
  4669  0ABE  2AC6               	goto	L6
  4670  0ABF                     l3564:	
  4671                           ;DelayOff_B1.c: 114: case 0x15:
  4672                           
  4673                           ;DelayOff_B1.c: 113: break;
  4674                           
  4675                           
  4676                           ;DelayOff_B1.c: 115: i = 15;
  4677  0ABF  300F               	movlw	15
  4678  0AC0  2AC6               	goto	L6
  4679  0AC1                     l3566:	
  4680                           ;DelayOff_B1.c: 117: case 0x20:
  4681                           
  4682                           ;DelayOff_B1.c: 116: break;
  4683                           
  4684                           
  4685                           ;DelayOff_B1.c: 118: i = 20;
  4686  0AC1  3014               	movlw	20
  4687  0AC2  2AC6               	goto	L6
  4688  0AC3                     l3568:	
  4689                           ;DelayOff_B1.c: 120: case 0x25:
  4690                           
  4691                           ;DelayOff_B1.c: 119: break;
  4692                           
  4693                           
  4694                           ;DelayOff_B1.c: 121: i = 25;
  4695  0AC3  3019               	movlw	25
  4696  0AC4  2AC6               	goto	L6
  4697  0AC5                     l3570:	
  4698                           ;DelayOff_B1.c: 123: case 0x30:
  4699                           
  4700                           ;DelayOff_B1.c: 122: break;
  4701                           
  4702                           
  4703                           ;DelayOff_B1.c: 124: i = 30;
  4704  0AC5  301E               	movlw	30
  4705  0AC6                     L6:	
  4706  0AC6  00A0               	movwf	??_DelayTimejudge
  4707  0AC7  0820               	movf	??_DelayTimejudge,w
  4708  0AC8  00A2               	movwf	DelayTimejudge@i
  4709                           
  4710                           ;DelayOff_B1.c: 126: }
  4711                           
  4712                           ;DelayOff_B1.c: 125: break;
  4713  0AC9  2ADE               	goto	l3576
  4714  0ACA                     l3574:	
  4715  0ACA  0821               	movf	DelayTimejudge@value,w
  4716                           
  4717                           ; Switch size 1, requested type "space"
  4718                           ; Number of cases is 6, Range of values is 5 to 48
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte           19    10 (average)
  4722                           ; direct_byte           97     9 (fixed)
  4723                           ; jumptable            263     9 (fixed)
  4724                           ;	Chosen strategy is simple_byte
  4725  0ACB  3A05               	xorlw	5	; case 5
  4726  0ACC  1903               	skipnz
  4727  0ACD  2ABB               	goto	l3560
  4728  0ACE  3A15               	xorlw	21	; case 16
  4729  0ACF  1903               	skipnz
  4730  0AD0  2ABD               	goto	l3562
  4731  0AD1  3A05               	xorlw	5	; case 21
  4732  0AD2  1903               	skipnz
  4733  0AD3  2ABF               	goto	l3564
  4734  0AD4  3A35               	xorlw	53	; case 32
  4735  0AD5  1903               	skipnz
  4736  0AD6  2AC1               	goto	l3566
  4737  0AD7  3A05               	xorlw	5	; case 37
  4738  0AD8  1903               	skipnz
  4739  0AD9  2AC3               	goto	l3568
  4740  0ADA  3A15               	xorlw	21	; case 48
  4741  0ADB  1903               	skipnz
  4742  0ADC  2AC5               	goto	l3570
  4743  0ADD  2ADE               	goto	l3576
  4744  0ADE                     l3576:	
  4745                           
  4746                           ;DelayOff_B1.c: 127: return i;
  4747  0ADE  0822               	movf	DelayTimejudge@i,w
  4748  0ADF  0008               	return
  4749  0AE0                     __end_of_DelayTimejudge:	
  4750                           
  4751                           	psect	text12
  4752  0A14                     __ptext12:	
  4753 ;; *************** function _Sw_DimmerAdjFunc *****************
  4754 ;; Defined at:
  4755 ;;		line 283 in file "../src/Switch_B1.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  sw              1    wreg     unsigned char 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  sw              1    5[BANK0 ] unsigned char 
  4760 ;;  Idle            1    4[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;		None               void
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;Total ram usage:        2 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    7
  4777 ;; This function calls:
  4778 ;;		_setDimmerLights_AdjGo
  4779 ;;		_setDimmerLights_TriggerAdj
  4780 ;; This function is called by:
  4781 ;;		_setSw_Main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function _Sw_DimmerAdjFunc
  4787  0A14                     _Sw_DimmerAdjFunc:	
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4791                           ;Sw_DimmerAdjFunc@sw stored from wreg
  4792  0A14  0020               	movlb	0	; select bank0
  4793  0A15  00A5               	movwf	Sw_DimmerAdjFunc@sw
  4794                           
  4795                           ;Switch_B1.c: 284: char Idle = 1;
  4796  0A16  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  4797  0A17  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  4798                           
  4799                           ;Switch_B1.c: 304: if (Idle == 1) {
  4800  0A18  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  4801  0A19  3A01               	xorlw	1
  4802  0A1A  1D03               	skipz
  4803  0A1B  0008               	return
  4804                           
  4805                           ;Switch_B1.c: 305: if (Sw->Flag == 1) {
  4806  0A1C  085C               	movf	_Sw,w
  4807  0A1D  0086               	movwf	6
  4808  0A1E  0187               	clrf	7
  4809  0A1F  1F81               	btfss	1,7
  4810  0A20  0008               	return
  4811                           
  4812                           ;Switch_B1.c: 306: Sw->Hold1 = 1;
  4813  0A21  085C               	movf	_Sw,w
  4814  0A22  0086               	movwf	6
  4815  0A23  0187               	clrf	7
  4816  0A24  1581               	bsf	1,3
  4817                           
  4818                           ;Switch_B1.c: 307: Sw->Adj = 1;
  4819  0A25  0A5C               	incf	_Sw,w
  4820  0A26  0086               	movwf	6
  4821  0A27  0187               	clrf	7
  4822  0A28  1401               	bsf	1,0
  4823                           
  4824                           ;Switch_B1.c: 308: Sw->Status = 1;
  4825  0A29  085C               	movf	_Sw,w
  4826  0A2A  0086               	movwf	6
  4827  0A2B  0187               	clrf	7
  4828  0A2C  1701               	bsf	1,6
  4829                           
  4830                           ;Switch_B1.c: 309: ;;
  4831                           ;Switch_B1.c: 311: setDimmerLights_TriggerAdj(sw, 1);
  4832  0A2D  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4833  0A2E  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4834  0A2F  0825               	movf	Sw_DimmerAdjFunc@sw,w
  4835  0A30  3188  20AA  318A   	fcall	_setDimmerLights_TriggerAdj
  4836                           
  4837                           ;Switch_B1.c: 312: setDimmerLights_AdjGo(sw, 1);
  4838  0A33  0020               	movlb	0	; select bank0
  4839  0A34  01A2               	clrf	setDimmerLights_AdjGo@command
  4840  0A35  0AA2               	incf	setDimmerLights_AdjGo@command,f
  4841  0A36  0825               	movf	Sw_DimmerAdjFunc@sw,w
  4842  0A37  3188  209B         	fcall	_setDimmerLights_AdjGo
  4843  0A39  0008               	return
  4844  0A3A                     __end_of_Sw_DimmerAdjFunc:	
  4845                           
  4846                           	psect	text13
  4847  08AA                     __ptext13:	
  4848 ;; *************** function _setDimmerLights_TriggerAdj *****************
  4849 ;; Defined at:
  4850 ;;		line 711 in file "../src/Dimmer_B1.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  lights          1    wreg     unsigned char 
  4853 ;;  command         1    2[BANK0 ] unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  lights          1    3[BANK0 ] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;		None               void
  4858 ;; Registers used:
  4859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4865 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;Total ram usage:        2 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    6
  4872 ;; This function calls:
  4873 ;;		_DimmerLightsPointSelect
  4874 ;; This function is called by:
  4875 ;;		_Sw_DimmerOffFunc
  4876 ;;		_Sw_DimmerAdjFunc
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _setDimmerLights_TriggerAdj
  4882  08AA                     _setDimmerLights_TriggerAdj:	
  4883                           
  4884                           ;incstack = 0
  4885                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4886                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  4887  08AA  0020               	movlb	0	; select bank0
  4888  08AB  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  4889                           
  4890                           ;Dimmer_B1.c: 713: DimmerLightsPointSelect(lights);
  4891  08AC  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  4892  08AD  3197  27EA         	fcall	_DimmerLightsPointSelect
  4893                           
  4894                           ;Dimmer_B1.c: 714: DimmerLights->TriggerAdj = command;
  4895  08AF  0020               	movlb	0	; select bank0
  4896  08B0  0859               	movf	_DimmerLights,w
  4897  08B1  3E08               	addlw	8
  4898  08B2  0086               	movwf	6
  4899  08B3  0187               	clrf	7
  4900  08B4  0822               	movf	setDimmerLights_TriggerAdj@command,w
  4901  08B5  1201               	bcf	1,4
  4902  08B6  1D03               	skipz
  4903  08B7  1601               	bsf	1,4
  4904  08B8  0008               	return
  4905  08B9                     __end_of_setDimmerLights_TriggerAdj:	
  4906                           
  4907                           	psect	text14
  4908  089B                     __ptext14:	
  4909 ;; *************** function _setDimmerLights_AdjGo *****************
  4910 ;; Defined at:
  4911 ;;		line 699 in file "../src/Dimmer_B1.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  lights          1    wreg     unsigned char 
  4914 ;;  command         1    2[BANK0 ] unsigned char 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  lights          1    3[BANK0 ] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;Total ram usage:        2 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    6
  4933 ;; This function calls:
  4934 ;;		_DimmerLightsPointSelect
  4935 ;; This function is called by:
  4936 ;;		_Sw_DimmerOffFunc
  4937 ;;		_Sw_DimmerAdjFunc
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _setDimmerLights_AdjGo
  4943  089B                     _setDimmerLights_AdjGo:	
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4947                           ;setDimmerLights_AdjGo@lights stored from wreg
  4948  089B  0020               	movlb	0	; select bank0
  4949  089C  00A3               	movwf	setDimmerLights_AdjGo@lights
  4950                           
  4951                           ;Dimmer_B1.c: 701: DimmerLightsPointSelect(lights);
  4952  089D  0823               	movf	setDimmerLights_AdjGo@lights,w
  4953  089E  3197  27EA         	fcall	_DimmerLightsPointSelect
  4954                           
  4955                           ;Dimmer_B1.c: 702: DimmerLights->AdjGo = command;
  4956  08A0  0020               	movlb	0	; select bank0
  4957  08A1  0859               	movf	_DimmerLights,w
  4958  08A2  3E08               	addlw	8
  4959  08A3  0086               	movwf	6
  4960  08A4  0187               	clrf	7
  4961  08A5  0822               	movf	setDimmerLights_AdjGo@command,w
  4962  08A6  1181               	bcf	1,3
  4963  08A7  1D03               	skipz
  4964  08A8  1581               	bsf	1,3
  4965  08A9  0008               	return
  4966  08AA                     __end_of_setDimmerLights_AdjGo:	
  4967                           
  4968                           	psect	text15
  4969  0800                     __ptext15:	
  4970 ;; *************** function _Switch_Initialization *****************
  4971 ;; Defined at:
  4972 ;;		line 37 in file "../src/Switch_B1.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;		None               void
  4979 ;; Registers used:
  4980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;Total ram usage:        0 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    8
  4993 ;; This function calls:
  4994 ;;		_TouchPower
  4995 ;;		_setSw_Initialization
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           
  5002                           ;psect for function _Switch_Initialization
  5003  0800                     _Switch_Initialization:	
  5004                           
  5005                           ;Switch_B1.c: 38: TouchPower();
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5009  0800  3197  276A  3188   	fcall	_TouchPower
  5010                           
  5011                           ;Switch_B1.c: 40: WPUB1 = 0;
  5012  0803  0024               	movlb	4	; select bank4
  5013  0804  108D               	bcf	13,1	;volatile
  5014                           
  5015                           ;Switch_B1.c: 49: setSw_Initialization(1);
  5016  0805  3001               	movlw	1
  5017  0806  3188  20D9         	fcall	_setSw_Initialization
  5018  0808  0008               	return
  5019  0809                     __end_of_Switch_Initialization:	
  5020                           
  5021                           	psect	text16
  5022  08D9                     __ptext16:	
  5023 ;; *************** function _setSw_Initialization *****************
  5024 ;; Defined at:
  5025 ;;		line 77 in file "../src/Switch_B1.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  sw              1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  sw              1    4[BANK0 ] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    7
  5046 ;; This function calls:
  5047 ;;		_setLED
  5048 ;; This function is called by:
  5049 ;;		_Switch_Initialization
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _setSw_Initialization
  5055  08D9                     _setSw_Initialization:	
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5059                           ;setSw_Initialization@sw stored from wreg
  5060  08D9  0020               	movlb	0	; select bank0
  5061  08DA  00A4               	movwf	setSw_Initialization@sw
  5062                           
  5063                           ;Switch_B1.c: 78: setLED(sw, 1);
  5064  08DB  01A2               	clrf	setLED@command
  5065  08DC  0AA2               	incf	setLED@command,f
  5066  08DD  0824               	movf	setSw_Initialization@sw,w
  5067  08DE  3187  27A4  3188   	fcall	_setLED
  5068                           
  5069                           ;Switch_B1.c: 80: setLED(sw + 1, 1);
  5070  08E1  0020               	movlb	0	; select bank0
  5071  08E2  01A2               	clrf	setLED@command
  5072  08E3  0AA2               	incf	setLED@command,f
  5073  08E4  0824               	movf	setSw_Initialization@sw,w
  5074  08E5  3E01               	addlw	1
  5075  08E6  3187  27A4         	fcall	_setLED
  5076  08E8  0008               	return
  5077  08E9                     __end_of_setSw_Initialization:	
  5078                           
  5079                           	psect	text17
  5080  176A                     __ptext17:	
  5081 ;; *************** function _TouchPower *****************
  5082 ;; Defined at:
  5083 ;;		line 10 in file "../src/Switch_B1.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		None
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    5
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_Switch_Initialization
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _TouchPower
  5113  176A                     _TouchPower:	
  5114  176A                     l1456:	
  5115                           ;Switch_B1.c: 11: while (RC5 == 0)
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _TouchPower: []
  5119                           
  5120  176A  0020               	movlb	0	; select bank0
  5121  176B  1A8E               	btfsc	14,5	;volatile
  5122  176C  0008               	return
  5123                           
  5124                           ;Switch_B1.c: 12: RC5 = 1;
  5125  176D  168E               	bsf	14,5	;volatile
  5126  176E  2F6A               	goto	l1456
  5127  176F                     __end_of_TouchPower:	
  5128                           
  5129                           	psect	text18
  5130  1757                     __ptext18:	
  5131 ;; *************** function _PowerFault_Main *****************
  5132 ;; Defined at:
  5133 ;;		line 22 in file "../src/PowerFault_B1.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;		None               void
  5140 ;; Registers used:
  5141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:   11
  5154 ;; This function calls:
  5155 ;;		_setPowerFault_Main
  5156 ;; This function is called by:
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _PowerFault_Main
  5163  1757                     _PowerFault_Main:	
  5164                           
  5165                           ;PowerFault_B1.c: 25: setPowerFault_Main();
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in _PowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5169  1757  3183  23B4         	fcall	_setPowerFault_Main
  5170  1759  0008               	return
  5171  175A                     __end_of_PowerFault_Main:	
  5172                           
  5173                           	psect	text19
  5174  03B4                     __ptext19:	
  5175 ;; *************** function _setPowerFault_Main *****************
  5176 ;; Defined at:
  5177 ;;		line 61 in file "../src/PowerFault_B1.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;		None               void
  5184 ;; Registers used:
  5185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   10
  5198 ;; This function calls:
  5199 ;;		_setPowerFault_Exceptions
  5200 ;; This function is called by:
  5201 ;;		_PowerFault_Main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _setPowerFault_Main
  5207  03B4                     _setPowerFault_Main:	
  5208                           
  5209                           ;PowerFault_B1.c: 63: if(PF->Enable)
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5213  03B4  0020               	movlb	0	; select bank0
  5214  03B5  085B               	movf	_PF,w
  5215  03B6  0086               	movwf	6
  5216  03B7  0187               	clrf	7
  5217  03B8  1C01               	btfss	1,0
  5218  03B9  0008               	return
  5219                           
  5220                           ;PowerFault_B1.c: 64: {
  5221                           ;PowerFault_B1.c: 65: if(PF->ADtoGO == 0)
  5222  03BA  085B               	movf	_PF,w
  5223  03BB  0086               	movwf	6
  5224  03BC  0187               	clrf	7
  5225  03BD  1981               	btfsc	1,3
  5226  03BE  2BE7               	goto	l4302
  5227                           
  5228                           ;PowerFault_B1.c: 66: {
  5229                           ;PowerFault_B1.c: 67: PF->Time++;
  5230  03BF  085B               	movf	_PF,w
  5231  03C0  3E02               	addlw	2
  5232  03C1  0086               	movwf	6
  5233  03C2  0187               	clrf	7
  5234  03C3  3001               	movlw	1
  5235  03C4  0781               	addwf	1,f
  5236  03C5  3141               	addfsr 1,1
  5237  03C6  1803               	skipnc
  5238  03C7  0A81               	incf	1,f
  5239                           
  5240                           ;PowerFault_B1.c: 69: {
  5241                           ;PowerFault_B1.c: 70: if(1 && 1)
  5242  03C8  085B               	movf	_PF,w
  5243  03C9  3E02               	addlw	2
  5244  03CA  0086               	movwf	6
  5245  03CB  0187               	clrf	7
  5246  03CC  3F40               	moviw [0]fsr1
  5247  03CD  00B0               	movwf	??_setPowerFault_Main
  5248  03CE  3F41               	moviw [1]fsr1
  5249  03CF  00B1               	movwf	??_setPowerFault_Main+1
  5250  03D0  3002               	movlw	2
  5251  03D1  0231               	subwf	??_setPowerFault_Main+1,w
  5252  03D2  30BC               	movlw	188
  5253  03D3  1903               	skipnz
  5254  03D4  0230               	subwf	??_setPowerFault_Main,w
  5255  03D5  1C03               	skipc
  5256  03D6  0008               	return
  5257                           
  5258                           ;PowerFault_B1.c: 71: {
  5259                           ;PowerFault_B1.c: 72: PF->Time=0;
  5260  03D7  085B               	movf	_PF,w
  5261  03D8  3E02               	addlw	2
  5262  03D9  0086               	movwf	6
  5263  03DA  0187               	clrf	7
  5264  03DB  3000               	movlw	0
  5265  03DC  3FC0               	movwi [0]fsr1
  5266  03DD  3FC1               	movwi [1]fsr1
  5267                           
  5268                           ;PowerFault_B1.c: 73: PF->ADtoGO=1;
  5269  03DE  085B               	movf	_PF,w
  5270  03DF  0086               	movwf	6
  5271  03E0  0187               	clrf	7
  5272  03E1  1581               	bsf	1,3
  5273                           
  5274                           ;PowerFault_B1.c: 74: PF->Safe=0;
  5275  03E2  085B               	movf	_PF,w
  5276  03E3  0086               	movwf	6
  5277  03E4  0187               	clrf	7
  5278  03E5  1101               	bcf	1,2
  5279                           
  5280                           ;PowerFault_B1.c: 75: }
  5281  03E6  0008               	return
  5282  03E7                     l4302:	
  5283                           ;PowerFault_B1.c: 79: }
  5284                           ;PowerFault_B1.c: 80: }
  5285                           ;PowerFault_B1.c: 81: }
  5286                           
  5287                           ;PowerFault_B1.c: 76: else
  5288                           ;PowerFault_B1.c: 77: {
  5289                           ;PowerFault_B1.c: 78: PF->Time=700;
  5290                           
  5291                           
  5292                           ;PowerFault_B1.c: 82: else
  5293                           ;PowerFault_B1.c: 83: {
  5294                           ;PowerFault_B1.c: 84: PF->Time++;
  5295  03E7  085B               	movf	_PF,w
  5296  03E8  3E02               	addlw	2
  5297  03E9  0086               	movwf	6
  5298  03EA  0187               	clrf	7
  5299  03EB  3001               	movlw	1
  5300  03EC  0781               	addwf	1,f
  5301  03ED  3141               	addfsr 1,1
  5302  03EE  1803               	skipnc
  5303  03EF  0A81               	incf	1,f
  5304                           
  5305                           ;PowerFault_B1.c: 85: if(PF->Time >= 2)
  5306  03F0  085B               	movf	_PF,w
  5307  03F1  3E02               	addlw	2
  5308  03F2  0086               	movwf	6
  5309  03F3  0187               	clrf	7
  5310  03F4  3F40               	moviw [0]fsr1
  5311  03F5  00B0               	movwf	??_setPowerFault_Main
  5312  03F6  3F41               	moviw [1]fsr1
  5313  03F7  00B1               	movwf	??_setPowerFault_Main+1
  5314  03F8  3000               	movlw	0
  5315  03F9  0231               	subwf	??_setPowerFault_Main+1,w
  5316  03FA  3002               	movlw	2
  5317  03FB  1903               	skipnz
  5318  03FC  0230               	subwf	??_setPowerFault_Main,w
  5319  03FD  1C03               	skipc
  5320  03FE  0008               	return
  5321                           
  5322                           ;PowerFault_B1.c: 86: {
  5323                           ;PowerFault_B1.c: 87: PF->Time=0;
  5324  03FF  085B               	movf	_PF,w
  5325  0400  3E02               	addlw	2
  5326  0401  0086               	movwf	6
  5327  0402  0187               	clrf	7
  5328  0403  3000               	movlw	0
  5329  0404  3FC0               	movwi [0]fsr1
  5330  0405  3FC1               	movwi [1]fsr1
  5331                           
  5332                           ;PowerFault_B1.c: 88: PF->ADtoGO=0;
  5333  0406  085B               	movf	_PF,w
  5334  0407  0086               	movwf	6
  5335  0408  0187               	clrf	7
  5336  0409  1181               	bcf	1,3
  5337                           
  5338                           ;PowerFault_B1.c: 90: if(PF->ERROR)
  5339  040A  085B               	movf	_PF,w
  5340  040B  0086               	movwf	6
  5341  040C  0187               	clrf	7
  5342  040D  1C81               	btfss	1,1
  5343  040E  2C44               	goto	l4322
  5344                           
  5345                           ;PowerFault_B1.c: 91: {
  5346                           ;PowerFault_B1.c: 92: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  5347  040F  085B               	movf	_PF,w
  5348  0410  3E04               	addlw	4
  5349  0411  0086               	movwf	6
  5350  0412  0187               	clrf	7
  5351  0413  3F40               	moviw [0]fsr1
  5352  0414  00B0               	movwf	??_setPowerFault_Main
  5353  0415  3F41               	moviw [1]fsr1
  5354  0416  00B1               	movwf	??_setPowerFault_Main+1
  5355  0417  3001               	movlw	1
  5356  0418  0231               	subwf	??_setPowerFault_Main+1,w
  5357  0419  3091               	movlw	145
  5358  041A  1903               	skipnz
  5359  041B  0230               	subwf	??_setPowerFault_Main,w
  5360  041C  1803               	skipnc
  5361  041D  2C79               	goto	l4334
  5362  041E  085B               	movf	_PF,w
  5363  041F  3E04               	addlw	4
  5364  0420  0086               	movwf	6
  5365  0421  0187               	clrf	7
  5366  0422  3F40               	moviw [0]fsr1
  5367  0423  00B0               	movwf	??_setPowerFault_Main
  5368  0424  3F41               	moviw [1]fsr1
  5369  0425  00B1               	movwf	??_setPowerFault_Main+1
  5370  0426  3000               	movlw	0
  5371  0427  0231               	subwf	??_setPowerFault_Main+1,w
  5372  0428  30C8               	movlw	200
  5373  0429  1903               	skipnz
  5374  042A  0230               	subwf	??_setPowerFault_Main,w
  5375  042B  1C03               	skipc
  5376  042C  2C79               	goto	l4334
  5377                           
  5378                           ;PowerFault_B1.c: 93: {
  5379                           ;PowerFault_B1.c: 94: PF->Count++;
  5380  042D  3001               	movlw	1
  5381  042E  00B0               	movwf	??_setPowerFault_Main
  5382  042F  0A5B               	incf	_PF,w
  5383  0430  0086               	movwf	6
  5384  0431  0187               	clrf	7
  5385  0432  0830               	movf	??_setPowerFault_Main,w
  5386  0433  0781               	addwf	1,f
  5387                           
  5388                           ;PowerFault_B1.c: 95: if(PF->Count > 1)
  5389  0434  0A5B               	incf	_PF,w
  5390  0435  0086               	movwf	6
  5391  0436  0187               	clrf	7
  5392  0437  3002               	movlw	2
  5393  0438  0201               	subwf	1,w
  5394  0439  1C03               	skipc
  5395  043A  2C7E               	goto	l4336
  5396                           
  5397                           ;PowerFault_B1.c: 96: {
  5398                           ;PowerFault_B1.c: 97: PF->Count=0;
  5399  043B  0A5B               	incf	_PF,w
  5400  043C  0086               	movwf	6
  5401  043D  0187               	clrf	7
  5402  043E  0181               	clrf	1
  5403                           
  5404                           ;PowerFault_B1.c: 98: setPowerFault_Exceptions(0);
  5405  043F  3000               	movlw	0
  5406  0440  318B  2370  3183   	fcall	_setPowerFault_Exceptions
  5407                           
  5408                           ;PowerFault_B1.c: 99: }
  5409                           ;PowerFault_B1.c: 100: }
  5410  0443  2C7E               	goto	l4336
  5411  0444                     l4322:	
  5412                           ;PowerFault_B1.c: 104: }
  5413                           ;PowerFault_B1.c: 105: }
  5414                           
  5415                           ;PowerFault_B1.c: 101: else
  5416                           ;PowerFault_B1.c: 102: {
  5417                           ;PowerFault_B1.c: 103: PF->Count=0;
  5418                           
  5419                           
  5420                           ;PowerFault_B1.c: 106: else
  5421                           ;PowerFault_B1.c: 107: {
  5422                           ;PowerFault_B1.c: 108: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  5423  0444  085B               	movf	_PF,w
  5424  0445  3E04               	addlw	4
  5425  0446  0086               	movwf	6
  5426  0447  0187               	clrf	7
  5427  0448  3F40               	moviw [0]fsr1
  5428  0449  00B0               	movwf	??_setPowerFault_Main
  5429  044A  3F41               	moviw [1]fsr1
  5430  044B  00B1               	movwf	??_setPowerFault_Main+1
  5431  044C  3001               	movlw	1
  5432  044D  0231               	subwf	??_setPowerFault_Main+1,w
  5433  044E  3090               	movlw	144
  5434  044F  1903               	skipnz
  5435  0450  0230               	subwf	??_setPowerFault_Main,w
  5436  0451  1803               	skipnc
  5437  0452  2C62               	goto	l4326
  5438  0453  085B               	movf	_PF,w
  5439  0454  3E04               	addlw	4
  5440  0455  0086               	movwf	6
  5441  0456  0187               	clrf	7
  5442  0457  3F40               	moviw [0]fsr1
  5443  0458  00B0               	movwf	??_setPowerFault_Main
  5444  0459  3F41               	moviw [1]fsr1
  5445  045A  00B1               	movwf	??_setPowerFault_Main+1
  5446  045B  3000               	movlw	0
  5447  045C  0231               	subwf	??_setPowerFault_Main+1,w
  5448  045D  30D3               	movlw	211
  5449  045E  1903               	skipnz
  5450  045F  0230               	subwf	??_setPowerFault_Main,w
  5451  0460  1803               	skipnc
  5452  0461  2C79               	goto	l4334
  5453  0462                     l4326:	
  5454                           
  5455                           ;PowerFault_B1.c: 109: {
  5456                           ;PowerFault_B1.c: 110: PF->Count++;
  5457  0462  3001               	movlw	1
  5458  0463  00B0               	movwf	??_setPowerFault_Main
  5459  0464  0A5B               	incf	_PF,w
  5460  0465  0086               	movwf	6
  5461  0466  0187               	clrf	7
  5462  0467  0830               	movf	??_setPowerFault_Main,w
  5463  0468  0781               	addwf	1,f
  5464                           
  5465                           ;PowerFault_B1.c: 111: if(PF->Count > 1)
  5466  0469  0A5B               	incf	_PF,w
  5467  046A  0086               	movwf	6
  5468  046B  0187               	clrf	7
  5469  046C  3002               	movlw	2
  5470  046D  0201               	subwf	1,w
  5471  046E  1C03               	skipc
  5472  046F  2C7E               	goto	l4336
  5473                           
  5474                           ;PowerFault_B1.c: 112: {
  5475                           ;PowerFault_B1.c: 113: PF->Count=0;
  5476  0470  0A5B               	incf	_PF,w
  5477  0471  0086               	movwf	6
  5478  0472  0187               	clrf	7
  5479  0473  0181               	clrf	1
  5480                           
  5481                           ;PowerFault_B1.c: 114: setPowerFault_Exceptions(1);
  5482  0474  3001               	movlw	1
  5483  0475  318B  2370  3183   	fcall	_setPowerFault_Exceptions
  5484                           
  5485                           ;PowerFault_B1.c: 115: }
  5486                           ;PowerFault_B1.c: 116: }
  5487  0478  2C7E               	goto	l4336
  5488  0479                     l4334:	
  5489                           
  5490                           ;PowerFault_B1.c: 117: else
  5491                           ;PowerFault_B1.c: 118: {
  5492                           ;PowerFault_B1.c: 119: PF->Count=0;
  5493  0479  0020               	movlb	0	; select bank0
  5494  047A  0A5B               	incf	_PF,w
  5495  047B  0086               	movwf	6
  5496  047C  0187               	clrf	7
  5497  047D  0181               	clrf	1
  5498  047E                     l4336:	
  5499                           
  5500                           ;PowerFault_B1.c: 120: }
  5501                           ;PowerFault_B1.c: 122: }
  5502                           ;PowerFault_B1.c: 123: if(PF->ERROR == 0)
  5503  047E  0020               	movlb	0	; select bank0
  5504  047F  085B               	movf	_PF,w
  5505  0480  0086               	movwf	6
  5506  0481  0187               	clrf	7
  5507  0482  1881               	btfsc	1,1
  5508  0483  2C88               	goto	l1194
  5509                           
  5510                           ;PowerFault_B1.c: 124: {
  5511                           ;PowerFault_B1.c: 125: PF->Safe=1;
  5512  0484  085B               	movf	_PF,w
  5513  0485  0086               	movwf	6
  5514  0486  0187               	clrf	7
  5515  0487  1501               	bsf	1,2
  5516  0488                     l1194:	
  5517                           
  5518                           ;PowerFault_B1.c: 126: }
  5519                           ;PowerFault_B1.c: 127: PF->AD=0;
  5520  0488  085B               	movf	_PF,w
  5521  0489  3E04               	addlw	4
  5522  048A  0086               	movwf	6
  5523  048B  0187               	clrf	7
  5524  048C  3000               	movlw	0
  5525  048D  3FC0               	movwi [0]fsr1
  5526  048E  3FC1               	movwi [1]fsr1
  5527  048F  0008               	return
  5528  0490                     __end_of_setPowerFault_Main:	
  5529                           
  5530                           	psect	text20
  5531  0B70                     __ptext20:	
  5532 ;; *************** function _setPowerFault_Exceptions *****************
  5533 ;; Defined at:
  5534 ;;		line 133 in file "../src/PowerFault_B1.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  command         1    wreg     unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  command         1   15[BANK0 ] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;		None               void
  5541 ;; Registers used:
  5542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    9
  5555 ;; This function calls:
  5556 ;;		_DimmerLights_Exceptions
  5557 ;;		_setLED
  5558 ;;		_setSw_Enable
  5559 ;; This function is called by:
  5560 ;;		_setPowerFault_Main
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _setPowerFault_Exceptions
  5566  0B70                     _setPowerFault_Exceptions:	
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _setPowerFault_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5570                           ;setPowerFault_Exceptions@command stored from wreg
  5571  0B70  0020               	movlb	0	; select bank0
  5572  0B71  00AF               	movwf	setPowerFault_Exceptions@command
  5573                           
  5574                           ;PowerFault_B1.c: 135: PF->ERROR=command;
  5575  0B72  085B               	movf	_PF,w
  5576  0B73  0086               	movwf	6
  5577  0B74  0187               	clrf	7
  5578  0B75  082F               	movf	setPowerFault_Exceptions@command,w
  5579  0B76  1081               	bcf	1,1
  5580  0B77  1D03               	skipz
  5581  0B78  1481               	bsf	1,1
  5582                           
  5583                           ;PowerFault_B1.c: 136: PF->Safe=(~command) & 0x01;
  5584  0B79  092F               	comf	setPowerFault_Exceptions@command,w
  5585  0B7A  3901               	andlw	1
  5586  0B7B  00AE               	movwf	??_setPowerFault_Exceptions
  5587  0B7C  085B               	movf	_PF,w
  5588  0B7D  0086               	movwf	6
  5589  0B7E  0187               	clrf	7
  5590  0B7F  0DAE               	rlf	??_setPowerFault_Exceptions,f
  5591  0B80  0DAE               	rlf	??_setPowerFault_Exceptions,f
  5592  0B81  0801               	movf	1,w
  5593  0B82  062E               	xorwf	??_setPowerFault_Exceptions,w
  5594  0B83  39FB               	andlw	-5
  5595  0B84  062E               	xorwf	??_setPowerFault_Exceptions,w
  5596  0B85  0081               	movwf	1
  5597                           
  5598                           ;PowerFault_B1.c: 137: if(command == 1)
  5599  0B86  082F               	movf	setPowerFault_Exceptions@command,w
  5600  0B87  3A01               	xorlw	1
  5601  0B88  1D03               	skipz
  5602  0B89  2B95               	goto	l1198
  5603                           
  5604                           ;PowerFault_B1.c: 138: {
  5605                           ;PowerFault_B1.c: 139: DimmerLights_Exceptions(3);
  5606  0B8A  3003               	movlw	3
  5607  0B8B  318E  262F  318B   	fcall	_DimmerLights_Exceptions
  5608                           
  5609                           ;PowerFault_B1.c: 141: setLED(2,1);
  5610  0B8E  0020               	movlb	0	; select bank0
  5611  0B8F  01A2               	clrf	setLED@command
  5612  0B90  0AA2               	incf	setLED@command,f
  5613  0B91  3002               	movlw	2
  5614  0B92  3187  27A4  318B   	fcall	_setLED
  5615  0B95                     l1198:	
  5616                           
  5617                           ;PowerFault_B1.c: 143: }
  5618                           ;PowerFault_B1.c: 144: setLED(99,command+10);
  5619  0B95  0020               	movlb	0	; select bank0
  5620  0B96  082F               	movf	setPowerFault_Exceptions@command,w
  5621  0B97  3E0A               	addlw	10
  5622  0B98  00AE               	movwf	??_setPowerFault_Exceptions
  5623  0B99  082E               	movf	??_setPowerFault_Exceptions,w
  5624  0B9A  00A2               	movwf	setLED@command
  5625  0B9B  3063               	movlw	99
  5626  0B9C  3187  27A4  318B   	fcall	_setLED
  5627                           
  5628                           ;PowerFault_B1.c: 146: setSw_Enable((~command) & 0x01);
  5629  0B9F  0020               	movlb	0	; select bank0
  5630  0BA0  092F               	comf	setPowerFault_Exceptions@command,w
  5631  0BA1  3901               	andlw	1
  5632  0BA2  3188  206F         	fcall	_setSw_Enable
  5633  0BA4  0008               	return
  5634  0BA5                     __end_of_setPowerFault_Exceptions:	
  5635                           
  5636                           	psect	text21
  5637  086F                     __ptext21:	
  5638 ;; *************** function _setSw_Enable *****************
  5639 ;; Defined at:
  5640 ;;		line 85 in file "../src/Switch_B1.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  command         1    wreg     unsigned char 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  command         1    2[BANK0 ] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;		None               void
  5647 ;; Registers used:
  5648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:        1 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    6
  5661 ;; This function calls:
  5662 ;;		_SwPointSelect
  5663 ;; This function is called by:
  5664 ;;		_setPowerFault_Exceptions
  5665 ;;		_my_Main
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _setSw_Enable
  5671  086F                     _setSw_Enable:	
  5672                           
  5673                           ;incstack = 0
  5674                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5675                           ;setSw_Enable@command stored from wreg
  5676  086F  0020               	movlb	0	; select bank0
  5677  0870  00A2               	movwf	setSw_Enable@command
  5678                           
  5679                           ;Switch_B1.c: 88: SwPointSelect(1);
  5680  0871  3001               	movlw	1
  5681  0872  3197  27F5         	fcall	_SwPointSelect
  5682                           
  5683                           ;Switch_B1.c: 89: Sw->Enable = command;
  5684  0874  0020               	movlb	0	; select bank0
  5685  0875  085C               	movf	_Sw,w
  5686  0876  0086               	movwf	6
  5687  0877  0187               	clrf	7
  5688  0878  0822               	movf	setSw_Enable@command,w
  5689  0879  1001               	bcf	1,0
  5690  087A  1D03               	skipz
  5691  087B  1401               	bsf	1,0
  5692  087C  0008               	return
  5693  087D                     __end_of_setSw_Enable:	
  5694                           
  5695                           	psect	text22
  5696  0E2F                     __ptext22:	
  5697 ;; *************** function _DimmerLights_Exceptions *****************
  5698 ;; Defined at:
  5699 ;;		line 513 in file "../src/Dimmer_B1.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  status          1    wreg     unsigned char 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  status          1   13[BANK0 ] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;Total ram usage:        1 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    8
  5720 ;; This function calls:
  5721 ;;		_getDimmerLights_StatusFlag
  5722 ;;		_setBuz
  5723 ;;		_setDimmerLights_ERROR
  5724 ;;		_setDimmerLights_TriggerERROR
  5725 ;; This function is called by:
  5726 ;;		_setPowerFault_Exceptions
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _DimmerLights_Exceptions
  5732  0E2F                     _DimmerLights_Exceptions:	
  5733                           
  5734                           ;incstack = 0
  5735                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5736                           ;DimmerLights_Exceptions@status stored from wreg
  5737  0E2F  0020               	movlb	0	; select bank0
  5738  0E30  00AD               	movwf	DimmerLights_Exceptions@status
  5739                           
  5740                           ;Dimmer_B1.c: 514: if (status == 1) {
  5741  0E31  082D               	movf	DimmerLights_Exceptions@status,w
  5742  0E32  3A01               	xorlw	1
  5743  0E33  1D03               	skipz
  5744  0E34  2E45               	goto	l3658
  5745                           
  5746                           ;Dimmer_B1.c: 515: if (getDimmerLights_StatusFlag() == 1) {
  5747  0E35  3197  27CA  318E   	fcall	_getDimmerLights_StatusFlag
  5748  0E38  3A01               	xorlw	1
  5749  0E39  1D03               	skipz
  5750  0E3A  2E5D               	goto	l3664
  5751                           
  5752                           ;Dimmer_B1.c: 516: setBuz(10, 300);
  5753  0E3B  302C               	movlw	44
  5754  0E3C  0020               	movlb	0	; select bank0
  5755  0E3D  00A9               	movwf	setBuz@time
  5756  0E3E  3001               	movlw	1
  5757  0E3F  00AA               	movwf	setBuz@time+1
  5758  0E40  300A               	movlw	10
  5759  0E41  3186  265D  318E   	fcall	_setBuz
  5760  0E44  2E5D               	goto	l3664
  5761  0E45                     l3658:	
  5762                           ;Dimmer_B1.c: 528: } else if (status == 2)
  5763                           
  5764                           ;Dimmer_B1.c: 517: }
  5765                           ;Dimmer_B1.c: 520: setDimmerLights_ERROR(1);
  5766                           
  5767  0E45  0020               	movlb	0	; select bank0
  5768  0E46  082D               	movf	DimmerLights_Exceptions@status,w
  5769  0E47  3A02               	xorlw	2
  5770  0E48  1D03               	skipz
  5771  0E49  2E58               	goto	l3662
  5772                           
  5773                           ;Dimmer_B1.c: 529: {
  5774                           ;Dimmer_B1.c: 530: setBuz(5, 300);
  5775  0E4A  302C               	movlw	44
  5776  0E4B  00A9               	movwf	setBuz@time
  5777  0E4C  3001               	movlw	1
  5778  0E4D  00AA               	movwf	setBuz@time+1
  5779  0E4E  3005               	movlw	5
  5780  0E4F  3186  265D  318E   	fcall	_setBuz
  5781                           
  5782                           ;Dimmer_B1.c: 531: setDimmerLights_ERROR(Dimmer->Load);
  5783  0E52  0020               	movlb	0	; select bank0
  5784  0E53  0A58               	incf	_Dimmer,w
  5785  0E54  0086               	movwf	6
  5786  0E55  0187               	clrf	7
  5787  0E56  0801               	movf	1,w
  5788  0E57  2E5E               	goto	L7
  5789  0E58                     l3662:	
  5790                           ;Dimmer_B1.c: 532: } else if (status == 3)
  5791                           
  5792  0E58  0020               	movlb	0	; select bank0
  5793  0E59  082D               	movf	DimmerLights_Exceptions@status,w
  5794  0E5A  3A03               	xorlw	3
  5795  0E5B  1D03               	skipz
  5796  0E5C  2E61               	goto	l481
  5797  0E5D                     l3664:	
  5798                           
  5799                           ;Dimmer_B1.c: 533: {
  5800                           ;Dimmer_B1.c: 535: setDimmerLights_ERROR(1);
  5801  0E5D  3001               	movlw	1
  5802  0E5E                     L7:	
  5803  0E5E  318C  241F  318E   	fcall	_setDimmerLights_ERROR
  5804  0E61                     l481:	
  5805                           
  5806                           ;Dimmer_B1.c: 543: }
  5807                           ;Dimmer_B1.c: 546: setDimmerLights_TriggerERROR(1, 0);
  5808  0E61  0020               	movlb	0	; select bank0
  5809  0E62  01A2               	clrf	setDimmerLights_TriggerERROR@command
  5810  0E63  3001               	movlw	1
  5811  0E64  318A  223A  318E   	fcall	_setDimmerLights_TriggerERROR
  5812                           
  5813                           ;Dimmer_B1.c: 555: if (myMain->SelfTest == 0) {
  5814  0E67  0020               	movlb	0	; select bank0
  5815  0E68  086C               	movf	_myMain,w
  5816  0E69  0086               	movwf	6
  5817  0E6A  0187               	clrf	7
  5818  0E6B  1B01               	btfsc	1,6
  5819  0E6C  0008               	return
  5820                           
  5821                           ;Dimmer_B1.c: 556: myMain->i = 0;
  5822  0E6D  086C               	movf	_myMain,w
  5823  0E6E  3E0E               	addlw	14
  5824  0E6F  0086               	movwf	6
  5825  0E70  0187               	clrf	7
  5826  0E71  1001               	bcf	1,0
  5827                           
  5828                           ;Dimmer_B1.c: 557: myMain->j = 0;
  5829  0E72  086C               	movf	_myMain,w
  5830  0E73  3E0E               	addlw	14
  5831  0E74  0086               	movwf	6
  5832  0E75  0187               	clrf	7
  5833  0E76  1081               	bcf	1,1
  5834                           
  5835                           ;Dimmer_B1.c: 558: myMain->k = 1;
  5836  0E77  086C               	movf	_myMain,w
  5837  0E78  3E0E               	addlw	14
  5838  0E79  0086               	movwf	6
  5839  0E7A  0187               	clrf	7
  5840  0E7B  1501               	bsf	1,2
  5841                           
  5842                           ;Dimmer_B1.c: 559: myMain->Count2 = 0;
  5843  0E7C  086C               	movf	_myMain,w
  5844  0E7D  3E07               	addlw	7
  5845  0E7E  0086               	movwf	6
  5846  0E7F  0187               	clrf	7
  5847  0E80  3000               	movlw	0
  5848  0E81  3FC0               	movwi [0]fsr1
  5849  0E82  3FC1               	movwi [1]fsr1
  5850  0E83  0008               	return
  5851  0E84                     __end_of_DimmerLights_Exceptions:	
  5852                           
  5853                           	psect	text23
  5854  0A3A                     __ptext23:	
  5855 ;; *************** function _setDimmerLights_TriggerERROR *****************
  5856 ;; Defined at:
  5857 ;;		line 582 in file "../src/Dimmer_B1.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  lights          1    wreg     unsigned char 
  5860 ;;  command         1    2[BANK0 ] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  lights          1    3[BANK0 ] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;		None               void
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        2 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    6
  5879 ;; This function calls:
  5880 ;;		_DimmerLightsPointSelect
  5881 ;; This function is called by:
  5882 ;;		_DimmerLights_Exceptions
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _setDimmerLights_TriggerERROR
  5888  0A3A                     _setDimmerLights_TriggerERROR:	
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  5892                           ;setDimmerLights_TriggerERROR@lights stored from wreg
  5893  0A3A  0020               	movlb	0	; select bank0
  5894  0A3B  00A3               	movwf	setDimmerLights_TriggerERROR@lights
  5895                           
  5896                           ;Dimmer_B1.c: 584: DimmerLightsPointSelect(lights);
  5897  0A3C  0823               	movf	setDimmerLights_TriggerERROR@lights,w
  5898  0A3D  3197  27EA         	fcall	_DimmerLightsPointSelect
  5899                           
  5900                           ;Dimmer_B1.c: 585: DimmerLights->Trigger = command;
  5901  0A3F  0020               	movlb	0	; select bank0
  5902  0A40  0859               	movf	_DimmerLights,w
  5903  0A41  3E08               	addlw	8
  5904  0A42  0086               	movwf	6
  5905  0A43  0187               	clrf	7
  5906  0A44  0822               	movf	setDimmerLights_TriggerERROR@command,w
  5907  0A45  1101               	bcf	1,2
  5908  0A46  1D03               	skipz
  5909  0A47  1501               	bsf	1,2
  5910                           
  5911                           ;Dimmer_B1.c: 586: DimmerLights->Switch = command;
  5912  0A48  0859               	movf	_DimmerLights,w
  5913  0A49  3E08               	addlw	8
  5914  0A4A  0086               	movwf	6
  5915  0A4B  0187               	clrf	7
  5916  0A4C  0822               	movf	setDimmerLights_TriggerERROR@command,w
  5917  0A4D  1081               	bcf	1,1
  5918  0A4E  1D03               	skipz
  5919  0A4F  1481               	bsf	1,1
  5920                           
  5921                           ;Dimmer_B1.c: 587: DimmerLights->TriggerAdj = command;
  5922  0A50  0859               	movf	_DimmerLights,w
  5923  0A51  3E08               	addlw	8
  5924  0A52  0086               	movwf	6
  5925  0A53  0187               	clrf	7
  5926  0A54  0822               	movf	setDimmerLights_TriggerERROR@command,w
  5927  0A55  1201               	bcf	1,4
  5928  0A56  1D03               	skipz
  5929  0A57  1601               	bsf	1,4
  5930                           
  5931                           ;Dimmer_B1.c: 588: DimmerLights->AdjGo = command;
  5932  0A58  0859               	movf	_DimmerLights,w
  5933  0A59  3E08               	addlw	8
  5934  0A5A  0086               	movwf	6
  5935  0A5B  0187               	clrf	7
  5936  0A5C  0822               	movf	setDimmerLights_TriggerERROR@command,w
  5937  0A5D  1181               	bcf	1,3
  5938  0A5E  1D03               	skipz
  5939  0A5F  1581               	bsf	1,3
  5940  0A60  0008               	return
  5941  0A61                     __end_of_setDimmerLights_TriggerERROR:	
  5942                           
  5943                           	psect	text24
  5944  0C1F                     __ptext24:	
  5945 ;; *************** function _setDimmerLights_ERROR *****************
  5946 ;; Defined at:
  5947 ;;		line 564 in file "../src/Dimmer_B1.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  lights          1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  lights          1    5[BANK0 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;		None               void
  5954 ;; Registers used:
  5955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;Total ram usage:        2 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    7
  5968 ;; This function calls:
  5969 ;;		_DimmerLightsPointSelect
  5970 ;;		_setLED
  5971 ;;		_setSw_Status
  5972 ;; This function is called by:
  5973 ;;		_DimmerLights_Exceptions
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           
  5978                           ;psect for function _setDimmerLights_ERROR
  5979  0C1F                     _setDimmerLights_ERROR:	
  5980                           
  5981                           ;incstack = 0
  5982                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5983                           ;setDimmerLights_ERROR@lights stored from wreg
  5984  0C1F  0020               	movlb	0	; select bank0
  5985  0C20  00A5               	movwf	setDimmerLights_ERROR@lights
  5986                           
  5987                           ;Dimmer_B1.c: 565: DimmerLightsPointSelect(lights);
  5988  0C21  0825               	movf	setDimmerLights_ERROR@lights,w
  5989  0C22  3197  27EA  318C   	fcall	_DimmerLightsPointSelect
  5990                           
  5991                           ;Dimmer_B1.c: 566: if (DimmerLights->Status == 1) {
  5992  0C25  0020               	movlb	0	; select bank0
  5993  0C26  0859               	movf	_DimmerLights,w
  5994  0C27  0086               	movwf	6
  5995  0C28  0187               	clrf	7
  5996  0C29  1E81               	btfss	1,5
  5997  0C2A  0008               	return
  5998                           
  5999                           ;Dimmer_B1.c: 568: DimmerLights->Signal = 0;
  6000  0C2B  0859               	movf	_DimmerLights,w
  6001  0C2C  0086               	movwf	6
  6002  0C2D  0187               	clrf	7
  6003  0C2E  1081               	bcf	1,1
  6004                           
  6005                           ;Dimmer_B1.c: 569: DimmerLights->AdjFlag = 0;
  6006  0C2F  0859               	movf	_DimmerLights,w
  6007  0C30  0086               	movwf	6
  6008  0C31  0187               	clrf	7
  6009  0C32  1181               	bcf	1,3
  6010                           
  6011                           ;Dimmer_B1.c: 570: DimmerLights->AdjStatus = 0;
  6012  0C33  0859               	movf	_DimmerLights,w
  6013  0C34  0086               	movwf	6
  6014  0C35  0187               	clrf	7
  6015  0C36  1201               	bcf	1,4
  6016                           
  6017                           ;Dimmer_B1.c: 571: DimmerLights->StatusFlag = 0;
  6018  0C37  0859               	movf	_DimmerLights,w
  6019  0C38  0086               	movwf	6
  6020  0C39  0187               	clrf	7
  6021  0C3A  1301               	bcf	1,6
  6022                           
  6023                           ;Dimmer_B1.c: 572: DimmerLights->DimmingTimeValue = 7;
  6024  0C3B  3007               	movlw	7
  6025  0C3C  00A4               	movwf	??_setDimmerLights_ERROR
  6026  0C3D  0859               	movf	_DimmerLights,w
  6027  0C3E  3E02               	addlw	2
  6028  0C3F  0086               	movwf	6
  6029  0C40  0187               	clrf	7
  6030  0C41  0824               	movf	??_setDimmerLights_ERROR,w
  6031  0C42  0081               	movwf	1
  6032                           
  6033                           ;Dimmer_B1.c: 573: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  6034  0C43  0859               	movf	_DimmerLights,w
  6035  0C44  3E06               	addlw	6
  6036  0C45  0086               	movwf	6
  6037  0C46  0187               	clrf	7
  6038  0C47  0801               	movf	1,w
  6039  0C48  00A4               	movwf	??_setDimmerLights_ERROR
  6040  0C49  0859               	movf	_DimmerLights,w
  6041  0C4A  3E04               	addlw	4
  6042  0C4B  0086               	movwf	6
  6043  0C4C  0187               	clrf	7
  6044  0C4D  0824               	movf	??_setDimmerLights_ERROR,w
  6045  0C4E  0081               	movwf	1
  6046                           
  6047                           ;Dimmer_B1.c: 574: Dimmer->Detect = 1;
  6048  0C4F  0858               	movf	_Dimmer,w
  6049  0C50  0086               	movwf	6
  6050  0C51  0187               	clrf	7
  6051  0C52  1401               	bsf	1,0
  6052                           
  6053                           ;Dimmer_B1.c: 575: ;;
  6054                           ;Dimmer_B1.c: 576: setLED(lights, 1);
  6055  0C53  01A2               	clrf	setLED@command
  6056  0C54  0AA2               	incf	setLED@command,f
  6057  0C55  0825               	movf	setDimmerLights_ERROR@lights,w
  6058  0C56  3187  27A4  318C   	fcall	_setLED
  6059                           
  6060                           ;Dimmer_B1.c: 577: setSw_Status(lights, 0);
  6061  0C59  0020               	movlb	0	; select bank0
  6062  0C5A  01A2               	clrf	setSw_Status@command
  6063  0C5B  0825               	movf	setDimmerLights_ERROR@lights,w
  6064  0C5C  3188  2053         	fcall	_setSw_Status
  6065  0C5E  0008               	return
  6066  0C5F                     __end_of_setDimmerLights_ERROR:	
  6067                           ;Dimmer_B1.c: 578: ;;
  6068                           
  6069                           
  6070                           	psect	text25
  6071  1754                     __ptext25:	
  6072 ;; *************** function _PowerFault_Initialization *****************
  6073 ;; Defined at:
  6074 ;;		line 15 in file "../src/PowerFault_B1.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;		None               void
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    6
  6095 ;; This function calls:
  6096 ;;		_setPowerFault_Initialization
  6097 ;; This function is called by:
  6098 ;;		_main
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _PowerFault_Initialization
  6104  1754                     _PowerFault_Initialization:	
  6105                           
  6106                           ;PowerFault_B1.c: 18: setPowerFault_Initialization();
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6110  1754  3188  2061         	fcall	_setPowerFault_Initialization
  6111  1756  0008               	return
  6112  1757                     __end_of_PowerFault_Initialization:	
  6113                           
  6114                           	psect	text26
  6115  0861                     __ptext26:	
  6116 ;; *************** function _setPowerFault_Initialization *****************
  6117 ;; Defined at:
  6118 ;;		line 29 in file "../src/PowerFault_B1.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;		None               void
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        1 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    5
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_PowerFault_Initialization
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _setPowerFault_Initialization
  6148  0861                     _setPowerFault_Initialization:	
  6149                           
  6150                           ;PowerFault_B1.c: 31: PF=&PF1;
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in _setPowerFault_Initialization: [wregfsr1]
  6154  0861  30D8               	movlw	_PF1& (0+255)
  6155  0862  0020               	movlb	0	; select bank0
  6156  0863  00A0               	movwf	??_setPowerFault_Initialization
  6157  0864  0820               	movf	??_setPowerFault_Initialization,w
  6158  0865  00DB               	movwf	_PF
  6159                           
  6160                           ;PowerFault_B1.c: 32: PF->Enable=1;
  6161  0866  085B               	movf	_PF,w
  6162  0867  0086               	movwf	6
  6163  0868  0187               	clrf	7
  6164  0869  1401               	bsf	1,0
  6165                           
  6166                           ;PowerFault_B1.c: 33: PF->Safe=1;
  6167  086A  085B               	movf	_PF,w
  6168  086B  0086               	movwf	6
  6169  086C  0187               	clrf	7
  6170  086D  1501               	bsf	1,2
  6171  086E  0008               	return
  6172  086F                     __end_of_setPowerFault_Initialization:	
  6173                           
  6174                           	psect	text27
  6175  0936                     __ptext27:	
  6176 ;; *************** function _Mcu_Initialization *****************
  6177 ;; Defined at:
  6178 ;;		line 30 in file "../src/MCU_B1.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;Total ram usage:        1 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    6
  6199 ;; This function calls:
  6200 ;;		_ADC_Set
  6201 ;;		_Fosc_Set
  6202 ;;		_INT_Set
  6203 ;;		_IOC_Set
  6204 ;;		_IO_Set
  6205 ;;		_TMR0_Set
  6206 ;; This function is called by:
  6207 ;;		_main
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function _Mcu_Initialization
  6213  0936                     _Mcu_Initialization:	
  6214                           
  6215                           ;MCU_B1.c: 32: Fosc_Set();
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6219  0936  3197  2762  3189   	fcall	_Fosc_Set
  6220                           
  6221                           ;MCU_B1.c: 34: IO_Set();
  6222  0939  3189  214D  3189   	fcall	_IO_Set
  6223                           
  6224                           ;MCU_B1.c: 36: TMR0_Set();
  6225  093C  3188  2046  3189   	fcall	_TMR0_Set
  6226                           
  6227                           ;MCU_B1.c: 38: ;;
  6228                           ;MCU_B1.c: 40: ADC_Set();
  6229  093F  3197  279C  3189   	fcall	_ADC_Set
  6230                           
  6231                           ;MCU_B1.c: 44: INT_Set();
  6232  0942  3197  2775  3189   	fcall	_INT_Set
  6233                           
  6234                           ;MCU_B1.c: 46: IOC_Set();
  6235  0945  3188  2039         	fcall	_IOC_Set
  6236                           
  6237                           ;MCU_B1.c: 48: ;;
  6238                           ;MCU_B1.c: 50: ;;
  6239                           ;MCU_B1.c: 52: Memory=&VarMemory;
  6240  0947  3020               	movlw	_VarMemory& (0+255)
  6241  0948  0020               	movlb	0	; select bank0
  6242  0949  00A1               	movwf	??_Mcu_Initialization
  6243  094A  0821               	movf	??_Mcu_Initialization,w
  6244  094B  00EE               	movwf	_Memory
  6245  094C  0008               	return
  6246  094D                     __end_of_Mcu_Initialization:	
  6247                           
  6248                           	psect	text28
  6249  0846                     __ptext28:	
  6250 ;; *************** function _TMR0_Set *****************
  6251 ;; Defined at:
  6252 ;;		line 128 in file "../src/MCU_B1.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;		None
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;		None               void
  6259 ;; Registers used:
  6260 ;;		wreg, status,2
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;Total ram usage:        1 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    5
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_Mcu_Initialization
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           
  6281                           ;psect for function _TMR0_Set
  6282  0846                     _TMR0_Set:	
  6283                           
  6284                           ;MCU_B1.c: 129: Timer0 = &VarTimer0;
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in _TMR0_Set: [wreg+status,2]
  6288  0846  30E0               	movlw	_VarTimer0& (0+255)
  6289  0847  0020               	movlb	0	; select bank0
  6290  0848  00A0               	movwf	??_TMR0_Set
  6291  0849  0820               	movf	??_TMR0_Set,w
  6292  084A  00FB               	movwf	_Timer0
  6293                           
  6294                           ;MCU_B1.c: 130: OPTION_REG = 0x00;
  6295  084B  0021               	movlb	1	; select bank1
  6296  084C  0195               	clrf	21	;volatile
  6297                           
  6298                           ;MCU_B1.c: 131: TMR0 = (256-190);
  6299  084D  3042               	movlw	66
  6300  084E  0020               	movlb	0	; select bank0
  6301  084F  0095               	movwf	21	;volatile
  6302                           
  6303                           ;MCU_B1.c: 132: TMR0IE = 1;
  6304  0850  168B               	bsf	11,5	;volatile
  6305                           
  6306                           ;MCU_B1.c: 133: GIE = 1;
  6307  0851  178B               	bsf	11,7	;volatile
  6308  0852  0008               	return
  6309  0853                     __end_of_TMR0_Set:	
  6310                           
  6311                           	psect	text29
  6312  094D                     __ptext29:	
  6313 ;; *************** function _IO_Set *****************
  6314 ;; Defined at:
  6315 ;;		line 62 in file "../src/MCU_B1.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;		None               void
  6322 ;; Registers used:
  6323 ;;		wreg, status,2
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;Total ram usage:        0 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    5
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_Mcu_Initialization
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           
  6344                           ;psect for function _IO_Set
  6345  094D                     _IO_Set:	
  6346                           
  6347                           ;MCU_B1.c: 90: TRISA = 0b01110111;;
  6348                           
  6349                           ;incstack = 0
  6350                           ; Regs used in _IO_Set: [wreg+status,2]
  6351  094D  3077               	movlw	119
  6352  094E  0021               	movlb	1	; select bank1
  6353  094F  008C               	movwf	12	;volatile
  6354                           
  6355                           ;MCU_B1.c: 91: TRISB = 0b00000111;;
  6356  0950  3007               	movlw	7
  6357  0951  008D               	movwf	13	;volatile
  6358                           
  6359                           ;MCU_B1.c: 92: TRISC = 0b00001100;;
  6360  0952  300C               	movlw	12
  6361  0953  008E               	movwf	14	;volatile
  6362                           
  6363                           ;MCU_B1.c: 93: LATA = 0b00000000;;
  6364  0954  0022               	movlb	2	; select bank2
  6365  0955  018C               	clrf	12	;volatile
  6366                           
  6367                           ;MCU_B1.c: 94: LATB = 0b00000010;;
  6368  0956  3002               	movlw	2
  6369  0957  008D               	movwf	13	;volatile
  6370                           
  6371                           ;MCU_B1.c: 95: LATC = 0b00000000;;
  6372  0958  018E               	clrf	14	;volatile
  6373                           
  6374                           ;MCU_B1.c: 96: ANSELA = 0b00100010;;
  6375  0959  3022               	movlw	34
  6376  095A  0023               	movlb	3	; select bank3
  6377  095B  008C               	movwf	12	;volatile
  6378                           
  6379                           ;MCU_B1.c: 97: ANSELB = 0b00000000;;
  6380  095C  018D               	clrf	13	;volatile
  6381                           
  6382                           ;MCU_B1.c: 98: ANSELC = 0b00000000;;
  6383  095D  018E               	clrf	14	;volatile
  6384                           
  6385                           ;MCU_B1.c: 99: PORTA = 0b01110111;;
  6386  095E  3077               	movlw	119
  6387  095F  0020               	movlb	0	; select bank0
  6388  0960  008C               	movwf	12	;volatile
  6389                           
  6390                           ;MCU_B1.c: 100: PORTB = 0b00000111;;
  6391  0961  3007               	movlw	7
  6392  0962  008D               	movwf	13	;volatile
  6393                           
  6394                           ;MCU_B1.c: 101: PORTC = 0b00001100;;
  6395  0963  300C               	movlw	12
  6396  0964  008E               	movwf	14	;volatile
  6397  0965  0008               	return
  6398  0966                     __end_of_IO_Set:	
  6399                           
  6400                           	psect	text30
  6401  0839                     __ptext30:	
  6402 ;; *************** function _IOC_Set *****************
  6403 ;; Defined at:
  6404 ;;		line 269 in file "../src/MCU_B1.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		wreg, status,2
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    5
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_Mcu_Initialization
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _IOC_Set
  6434  0839                     _IOC_Set:	
  6435                           
  6436                           ;MCU_B1.c: 270: WPUB2 = 0;
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in _IOC_Set: [wreg+status,2]
  6440  0839  0024               	movlb	4	; select bank4
  6441  083A  110D               	bcf	13,2	;volatile
  6442                           
  6443                           ;MCU_B1.c: 272: IOCBP = 0b00000100;
  6444  083B  3004               	movlw	4
  6445  083C  0027               	movlb	7	; select bank7
  6446  083D  0094               	movwf	20	;volatile
  6447                           
  6448                           ;MCU_B1.c: 273: IOCBN = 0b00000100;
  6449  083E  3004               	movlw	4
  6450  083F  0095               	movwf	21	;volatile
  6451                           
  6452                           ;MCU_B1.c: 288: IOCBF = 0b00000000;
  6453  0840  0196               	clrf	22	;volatile
  6454                           
  6455                           ;MCU_B1.c: 290: IOCIE = 1;
  6456  0841  158B               	bsf	11,3	;volatile
  6457                           
  6458                           ;MCU_B1.c: 291: IOCIF = 0;
  6459  0842  100B               	bcf	11,0	;volatile
  6460                           
  6461                           ;MCU_B1.c: 292: PEIE = 1;
  6462  0843  170B               	bsf	11,6	;volatile
  6463                           
  6464                           ;MCU_B1.c: 293: GIE = 1;
  6465  0844  178B               	bsf	11,7	;volatile
  6466  0845  0008               	return
  6467  0846                     __end_of_IOC_Set:	
  6468                           
  6469                           	psect	text31
  6470  1775                     __ptext31:	
  6471 ;; *************** function _INT_Set *****************
  6472 ;; Defined at:
  6473 ;;		line 242 in file "../src/MCU_B1.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;		None               void
  6480 ;; Registers used:
  6481 ;;		None
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    5
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_Mcu_Initialization
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function _INT_Set
  6503  1775                     _INT_Set:	
  6504                           
  6505                           ;MCU_B1.c: 243: WPUB0 = 0;
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _INT_Set: []
  6509  1775  0024               	movlb	4	; select bank4
  6510  1776  100D               	bcf	13,0	;volatile
  6511                           
  6512                           ;MCU_B1.c: 244: INTE = 0;
  6513  1777  120B               	bcf	11,4	;volatile
  6514                           
  6515                           ;MCU_B1.c: 245: PEIE = 1;
  6516  1778  170B               	bsf	11,6	;volatile
  6517                           
  6518                           ;MCU_B1.c: 246: GIE = 1;
  6519  1779  178B               	bsf	11,7	;volatile
  6520  177A  0008               	return
  6521  177B                     __end_of_INT_Set:	
  6522                           
  6523                           	psect	text32
  6524  1762                     __ptext32:	
  6525 ;; *************** function _Fosc_Set *****************
  6526 ;; Defined at:
  6527 ;;		line 58 in file "../src/MCU_B1.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;		None               void
  6534 ;; Registers used:
  6535 ;;		wreg
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    5
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_Mcu_Initialization
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function _Fosc_Set
  6557  1762                     _Fosc_Set:	
  6558                           
  6559                           ;MCU_B1.c: 59: OSCCON = 0x78;
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in _Fosc_Set: [wreg]
  6563  1762  3078               	movlw	120
  6564  1763  0021               	movlb	1	; select bank1
  6565  1764  0099               	movwf	25	;volatile
  6566  1765  0008               	return
  6567  1766                     __end_of_Fosc_Set:	
  6568                           
  6569                           	psect	text33
  6570  179C                     __ptext33:	
  6571 ;; *************** function _ADC_Set *****************
  6572 ;; Defined at:
  6573 ;;		line 315 in file "../src/MCU_B1.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;		None               void
  6580 ;; Registers used:
  6581 ;;		wreg
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    5
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_Mcu_Initialization
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _ADC_Set
  6603  179C                     _ADC_Set:	
  6604                           
  6605                           ;MCU_B1.c: 316: ADCON1 = 0xf2;
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _ADC_Set: [wreg]
  6609  179C  30F2               	movlw	242
  6610  179D  0021               	movlb	1	; select bank1
  6611  179E  009E               	movwf	30	;volatile
  6612                           
  6613                           ;MCU_B1.c: 317: FVRCON = 0xc0;
  6614  179F  30C0               	movlw	192
  6615  17A0  0022               	movlb	2	; select bank2
  6616  17A1  0097               	movwf	23	;volatile
  6617  17A2  0008               	return
  6618  17A3                     __end_of_ADC_Set:	
  6619                           
  6620                           	psect	text34
  6621  082D                     __ptext34:	
  6622 ;; *************** function _LED_Main *****************
  6623 ;; Defined at:
  6624 ;;		line 51 in file "../src/LED_B1.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    7
  6645 ;; This function calls:
  6646 ;;		_setLED_Main
  6647 ;; This function is called by:
  6648 ;;		_main
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function _LED_Main
  6654  082D                     _LED_Main:	
  6655                           
  6656                           ;LED_B1.c: 54: setLED_Main(1);
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6660  082D  3001               	movlw	1
  6661  082E  318B  23A5  3188   	fcall	_setLED_Main
  6662                           
  6663                           ;LED_B1.c: 57: setLED_Main(2);
  6664  0831  3002               	movlw	2
  6665  0832  318B  23A5  3188   	fcall	_setLED_Main
  6666                           
  6667                           ;LED_B1.c: 63: setLED_Main(99);
  6668  0835  3063               	movlw	99
  6669  0836  318B  23A5         	fcall	_setLED_Main
  6670  0838  0008               	return
  6671  0839                     __end_of_LED_Main:	
  6672                           
  6673                           	psect	text35
  6674  0BA5                     __ptext35:	
  6675 ;; *************** function _setLED_Main *****************
  6676 ;; Defined at:
  6677 ;;		line 215 in file "../src/LED_B1.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  led             1    wreg     unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  led             1    4[BANK0 ] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;		None               void
  6684 ;; Registers used:
  6685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;Total ram usage:        3 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    6
  6698 ;; This function calls:
  6699 ;;		_LedPointSelect
  6700 ;; This function is called by:
  6701 ;;		_LED_Main
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           
  6706                           ;psect for function _setLED_Main
  6707  0BA5                     _setLED_Main:	
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6711                           ;setLED_Main@led stored from wreg
  6712  0BA5  0020               	movlb	0	; select bank0
  6713  0BA6  00A4               	movwf	setLED_Main@led
  6714                           
  6715                           ;LED_B1.c: 217: LedPointSelect(led);
  6716  0BA7  0824               	movf	setLED_Main@led,w
  6717  0BA8  3189  21B5  318B   	fcall	_LedPointSelect
  6718                           
  6719                           ;LED_B1.c: 218: if(LED->GO)
  6720  0BAB  0020               	movlb	0	; select bank0
  6721  0BAC  085A               	movf	_LED,w
  6722  0BAD  0086               	movwf	6
  6723  0BAE  0187               	clrf	7
  6724  0BAF  1C81               	btfss	1,1
  6725  0BB0  0008               	return
  6726                           
  6727                           ;LED_B1.c: 219: {
  6728                           ;LED_B1.c: 220: LED->Time++;
  6729  0BB1  0A5A               	incf	_LED,w
  6730  0BB2  0086               	movwf	6
  6731  0BB3  0187               	clrf	7
  6732  0BB4  3001               	movlw	1
  6733  0BB5  0781               	addwf	1,f
  6734  0BB6  3141               	addfsr 1,1
  6735  0BB7  1803               	skipnc
  6736  0BB8  0A81               	incf	1,f
  6737                           
  6738                           ;LED_B1.c: 221: if(LED->Time >= 500/10)
  6739  0BB9  0A5A               	incf	_LED,w
  6740  0BBA  0086               	movwf	6
  6741  0BBB  0187               	clrf	7
  6742  0BBC  3F40               	moviw [0]fsr1
  6743  0BBD  00A2               	movwf	??_setLED_Main
  6744  0BBE  3F41               	moviw [1]fsr1
  6745  0BBF  00A3               	movwf	??_setLED_Main+1
  6746  0BC0  3000               	movlw	0
  6747  0BC1  0223               	subwf	??_setLED_Main+1,w
  6748  0BC2  3032               	movlw	50
  6749  0BC3  1903               	skipnz
  6750  0BC4  0222               	subwf	??_setLED_Main,w
  6751  0BC5  1C03               	skipc
  6752  0BC6  0008               	return
  6753                           
  6754                           ;LED_B1.c: 222: {
  6755                           ;LED_B1.c: 223: LED->Time=0;
  6756  0BC7  0A5A               	incf	_LED,w
  6757  0BC8  0086               	movwf	6
  6758  0BC9  0187               	clrf	7
  6759  0BCA  3000               	movlw	0
  6760  0BCB  3FC0               	movwi [0]fsr1
  6761  0BCC  3FC1               	movwi [1]fsr1
  6762                           
  6763                           ;LED_B1.c: 225: if(led == 1)
  6764  0BCD  0824               	movf	setLED_Main@led,w
  6765  0BCE  3A01               	xorlw	1
  6766  0BCF  1D03               	skipz
  6767  0BD0  2BD4               	goto	l4192
  6768                           
  6769                           ;LED_B1.c: 226: {
  6770                           ;LED_B1.c: 227: RA3=~RA3;
  6771  0BD1  3008               	movlw	8
  6772  0BD2  068C               	xorwf	12,f
  6773                           
  6774                           ;LED_B1.c: 228: }
  6775  0BD3  0008               	return
  6776  0BD4                     l4192:	
  6777                           
  6778                           ;LED_B1.c: 231: else if(led == 2)
  6779  0BD4  0824               	movf	setLED_Main@led,w
  6780  0BD5  3A02               	xorlw	2
  6781  0BD6  1D03               	skipz
  6782  0BD7  2BDB               	goto	l4196
  6783                           
  6784                           ;LED_B1.c: 232: {
  6785                           ;LED_B1.c: 233: RC7=~RC7;
  6786  0BD8  3080               	movlw	128
  6787  0BD9  068E               	xorwf	14,f
  6788                           
  6789                           ;LED_B1.c: 234: }
  6790  0BDA  0008               	return
  6791  0BDB                     l4196:	
  6792                           
  6793                           ;LED_B1.c: 243: else if(led == 99)
  6794  0BDB  0824               	movf	setLED_Main@led,w
  6795  0BDC  3A63               	xorlw	99
  6796  0BDD  1D03               	skipz
  6797  0BDE  0008               	return
  6798                           
  6799                           ;LED_B1.c: 244: {
  6800                           ;LED_B1.c: 245: RB5=~RB5;
  6801  0BDF  3020               	movlw	32
  6802  0BE0  068D               	xorwf	13,f
  6803  0BE1  0008               	return
  6804  0BE2                     __end_of_setLED_Main:	
  6805                           
  6806                           	psect	text36
  6807  0821                     __ptext36:	
  6808 ;; *************** function _LED_Initialization *****************
  6809 ;; Defined at:
  6810 ;;		line 35 in file "../src/LED_B1.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;		None               void
  6817 ;; Registers used:
  6818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    8
  6831 ;; This function calls:
  6832 ;;		_setLED_Initialization
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           
  6839                           ;psect for function _LED_Initialization
  6840  0821                     _LED_Initialization:	
  6841                           
  6842                           ;LED_B1.c: 38: setLED_Initialization(1);
  6843                           
  6844                           ;incstack = 0
  6845                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6846  0821  3001               	movlw	1
  6847  0822  3188  20C9  3188   	fcall	_setLED_Initialization
  6848                           
  6849                           ;LED_B1.c: 41: setLED_Initialization(2);
  6850  0825  3002               	movlw	2
  6851  0826  3188  20C9  3188   	fcall	_setLED_Initialization
  6852                           
  6853                           ;LED_B1.c: 47: setLED_Initialization(99);
  6854  0829  3063               	movlw	99
  6855  082A  3188  20C9         	fcall	_setLED_Initialization
  6856  082C  0008               	return
  6857  082D                     __end_of_LED_Initialization:	
  6858                           
  6859                           	psect	text37
  6860  08C9                     __ptext37:	
  6861 ;; *************** function _setLED_Initialization *****************
  6862 ;; Defined at:
  6863 ;;		line 67 in file "../src/LED_B1.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  led             1    wreg     unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  led             1    4[BANK0 ] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;		None               void
  6870 ;; Registers used:
  6871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;Total ram usage:        1 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    7
  6884 ;; This function calls:
  6885 ;;		_LedPointSelect
  6886 ;;		_setLED
  6887 ;; This function is called by:
  6888 ;;		_LED_Initialization
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           
  6893                           ;psect for function _setLED_Initialization
  6894  08C9                     _setLED_Initialization:	
  6895                           
  6896                           ;incstack = 0
  6897                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6898                           ;setLED_Initialization@led stored from wreg
  6899  08C9  0020               	movlb	0	; select bank0
  6900  08CA  00A4               	movwf	setLED_Initialization@led
  6901                           
  6902                           ;LED_B1.c: 69: LedPointSelect(led);
  6903  08CB  0824               	movf	setLED_Initialization@led,w
  6904  08CC  3189  21B5  3188   	fcall	_LedPointSelect
  6905                           
  6906                           ;LED_B1.c: 70: LED->Enable=1;
  6907  08CF  0020               	movlb	0	; select bank0
  6908  08D0  085A               	movf	_LED,w
  6909  08D1  0086               	movwf	6
  6910  08D2  0187               	clrf	7
  6911  08D3  1401               	bsf	1,0
  6912                           
  6913                           ;LED_B1.c: 71: setLED(led,0);
  6914  08D4  01A2               	clrf	setLED@command
  6915  08D5  0824               	movf	setLED_Initialization@led,w
  6916  08D6  3187  27A4         	fcall	_setLED
  6917  08D8  0008               	return
  6918  08D9                     __end_of_setLED_Initialization:	
  6919                           
  6920                           	psect	text38
  6921  0C5F                     __ptext38:	
  6922 ;; *************** function _Flash_Memory_Main *****************
  6923 ;; Defined at:
  6924 ;;		line 786 in file "../src/MCU_B1.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;		None               void
  6931 ;; Registers used:
  6932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;Total ram usage:        0 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    8
  6945 ;; This function calls:
  6946 ;;		_Flash_Memory_Modify
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _Flash_Memory_Main
  6954  0C5F                     _Flash_Memory_Main:	
  6955                           
  6956                           ;MCU_B1.c: 787: if (Memory->GO == 1) {
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6960  0C5F  0020               	movlb	0	; select bank0
  6961  0C60  086E               	movf	_Memory,w
  6962  0C61  3E24               	addlw	36
  6963  0C62  0086               	movwf	6
  6964  0C63  3001               	movlw	1	; select bank2/3
  6965  0C64  0087               	movwf	7
  6966  0C65  1C81               	btfss	1,1
  6967  0C66  0008               	return
  6968                           
  6969                           ;MCU_B1.c: 788: if (Memory->Modify == 1) {
  6970  0C67  086E               	movf	_Memory,w
  6971  0C68  3E24               	addlw	36
  6972  0C69  0086               	movwf	6
  6973  0C6A  3001               	movlw	1	; select bank2/3
  6974  0C6B  0087               	movwf	7
  6975  0C6C  1C01               	btfss	1,0
  6976  0C6D  2C9C               	goto	l4582
  6977                           
  6978                           ;MCU_B1.c: 789: Memory->Time++;
  6979  0C6E  086E               	movf	_Memory,w
  6980  0C6F  3E22               	addlw	34
  6981  0C70  0086               	movwf	6
  6982  0C71  3001               	movlw	1	; select bank2/3
  6983  0C72  0087               	movwf	7
  6984  0C73  3001               	movlw	1
  6985  0C74  0781               	addwf	1,f
  6986  0C75  3141               	addfsr 1,1
  6987  0C76  1803               	skipnc
  6988  0C77  0A81               	incf	1,f
  6989                           
  6990                           ;MCU_B1.c: 790: if (Memory->Time == 25)
  6991  0C78  086E               	movf	_Memory,w
  6992  0C79  3E22               	addlw	34
  6993  0C7A  0086               	movwf	6
  6994  0C7B  3001               	movlw	1	; select bank2/3
  6995  0C7C  0087               	movwf	7
  6996  0C7D  3F40               	moviw [0]fsr1
  6997  0C7E  3A19               	xorlw	25
  6998  0C7F  1D03               	skipz
  6999  0C80  2C83               	goto	u3935
  7000  0C81  3F41               	moviw [1]fsr1
  7001  0C82  3A00               	xorlw	0
  7002  0C83                     u3935:	
  7003  0C83  1D03               	skipz
  7004  0C84  0008               	return
  7005                           
  7006                           ;MCU_B1.c: 791: {
  7007                           ;MCU_B1.c: 792: Memory->Time = 0;
  7008  0C85  086E               	movf	_Memory,w
  7009  0C86  3E22               	addlw	34
  7010  0C87  0086               	movwf	6
  7011  0C88  3001               	movlw	1	; select bank2/3
  7012  0C89  0087               	movwf	7
  7013  0C8A  3000               	movlw	0
  7014  0C8B  3FC0               	movwi [0]fsr1
  7015  0C8C  3FC1               	movwi [1]fsr1
  7016                           
  7017                           ;MCU_B1.c: 793: Memory->Modify = 0;
  7018  0C8D  086E               	movf	_Memory,w
  7019  0C8E  3E24               	addlw	36
  7020  0C8F  0086               	movwf	6
  7021  0C90  3001               	movlw	1	; select bank2/3
  7022  0C91  0087               	movwf	7
  7023  0C92  1001               	bcf	1,0
  7024                           
  7025                           ;MCU_B1.c: 794: Memory->GO = 0;
  7026  0C93  086E               	movf	_Memory,w
  7027  0C94  3E24               	addlw	36
  7028  0C95  0086               	movwf	6
  7029  0C96  3001               	movlw	1	; select bank2/3
  7030  0C97  0087               	movwf	7
  7031  0C98  1081               	bcf	1,1
  7032                           
  7033                           ;MCU_B1.c: 795: Flash_Memory_Modify();
  7034  0C99  3187  2741         	fcall	_Flash_Memory_Modify
  7035                           
  7036                           ;MCU_B1.c: 796: }
  7037                           ;MCU_B1.c: 797: } else {
  7038  0C9B  0008               	return
  7039  0C9C                     l4582:	
  7040                           
  7041                           ;MCU_B1.c: 798: Memory->GO = 0;
  7042  0C9C  0020               	movlb	0	; select bank0
  7043  0C9D  086E               	movf	_Memory,w
  7044  0C9E  3E24               	addlw	36
  7045  0C9F  0086               	movwf	6
  7046  0CA0  3001               	movlw	1	; select bank2/3
  7047  0CA1  0087               	movwf	7
  7048  0CA2  1081               	bcf	1,1
  7049  0CA3  0008               	return
  7050  0CA4                     __end_of_Flash_Memory_Main:	
  7051                           
  7052                           	psect	text39
  7053  0741                     __ptext39:	
  7054 ;; *************** function _Flash_Memory_Modify *****************
  7055 ;; Defined at:
  7056 ;;		line 855 in file "../src/MCU_B1.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  i               1    6[BANK0 ] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;		None               void
  7063 ;; Registers used:
  7064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7074 ;;Total ram usage:        3 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    7
  7077 ;; This function calls:
  7078 ;;		_Flash_Memory_Erasing
  7079 ;;		_Flash_Memory_Read
  7080 ;;		_Flash_Memory_Write
  7081 ;; This function is called by:
  7082 ;;		_Flash_Memory_Main
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function _Flash_Memory_Modify
  7088  0741                     _Flash_Memory_Modify:	
  7089                           
  7090                           ;MCU_B1.c: 856: char i = 0;
  7091                           
  7092                           ;incstack = 0
  7093                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7094  0741  0020               	movlb	0	; select bank0
  7095  0742  01A6               	clrf	Flash_Memory_Modify@i
  7096                           
  7097                           ;MCU_B1.c: 857: for (i = 0; i < 32; i++) {
  7098  0743  01A6               	clrf	Flash_Memory_Modify@i
  7099  0744  3020               	movlw	32
  7100  0745  0226               	subwf	Flash_Memory_Modify@i,w
  7101  0746  1803               	btfsc	3,0
  7102  0747  2F5F               	goto	l4272
  7103  0748                     l4266:	
  7104                           
  7105                           ;MCU_B1.c: 858: Memory->Data[i] = Flash_Memory_Read(i);
  7106  0748  0826               	movf	Flash_Memory_Modify@i,w
  7107  0749  3189  2180  3187   	fcall	_Flash_Memory_Read
  7108  074C  0020               	movlb	0	; select bank0
  7109  074D  00A4               	movwf	??_Flash_Memory_Modify
  7110  074E  0826               	movf	Flash_Memory_Modify@i,w
  7111  074F  076E               	addwf	_Memory,w
  7112  0750  00A5               	movwf	??_Flash_Memory_Modify+1
  7113  0751  0825               	movf	??_Flash_Memory_Modify+1,w
  7114  0752  0086               	movwf	6
  7115  0753  3001               	movlw	1	; select bank2/3
  7116  0754  0087               	movwf	7
  7117  0755  0824               	movf	??_Flash_Memory_Modify,w
  7118  0756  0081               	movwf	1
  7119  0757  3001               	movlw	1
  7120  0758  00A4               	movwf	??_Flash_Memory_Modify
  7121  0759  0824               	movf	??_Flash_Memory_Modify,w
  7122  075A  07A6               	addwf	Flash_Memory_Modify@i,f
  7123  075B  3020               	movlw	32
  7124  075C  0226               	subwf	Flash_Memory_Modify@i,w
  7125  075D  1C03               	skipc
  7126  075E  2F48               	goto	l4266
  7127  075F                     l4272:	
  7128                           
  7129                           ;MCU_B1.c: 859: }
  7130                           ;MCU_B1.c: 860: Memory->Data[0]=product->Data[12];
  7131  075F  086D               	movf	_product,w
  7132  0760  3E0C               	addlw	12
  7133  0761  0086               	movwf	6
  7134  0762  3001               	movlw	1	; select bank2/3
  7135  0763  0087               	movwf	7
  7136  0764  0801               	movf	1,w
  7137  0765  00A4               	movwf	??_Flash_Memory_Modify
  7138  0766  086E               	movf	_Memory,w
  7139  0767  0086               	movwf	6
  7140  0768  3001               	movlw	1	; select bank2/3
  7141  0769  0087               	movwf	7
  7142  076A  0824               	movf	??_Flash_Memory_Modify,w
  7143  076B  0081               	movwf	1
  7144                           
  7145                           ;MCU_B1.c: 861: Memory->Data[1]=product->Data[13];
  7146  076C  086D               	movf	_product,w
  7147  076D  3E0D               	addlw	13
  7148  076E  0086               	movwf	6
  7149  076F  3001               	movlw	1	; select bank2/3
  7150  0770  0087               	movwf	7
  7151  0771  0801               	movf	1,w
  7152  0772  00A4               	movwf	??_Flash_Memory_Modify
  7153  0773  0A6E               	incf	_Memory,w
  7154  0774  0086               	movwf	6
  7155  0775  3001               	movlw	1	; select bank2/3
  7156  0776  0087               	movwf	7
  7157  0777  0824               	movf	??_Flash_Memory_Modify,w
  7158  0778  0081               	movwf	1
  7159                           
  7160                           ;MCU_B1.c: 862: Memory->Data[2]=product->Data[14];
  7161  0779  086D               	movf	_product,w
  7162  077A  3E0E               	addlw	14
  7163  077B  0086               	movwf	6
  7164  077C  3001               	movlw	1	; select bank2/3
  7165  077D  0087               	movwf	7
  7166  077E  0801               	movf	1,w
  7167  077F  00A4               	movwf	??_Flash_Memory_Modify
  7168  0780  086E               	movf	_Memory,w
  7169  0781  3E02               	addlw	2
  7170  0782  0086               	movwf	6
  7171  0783  3001               	movlw	1	; select bank2/3
  7172  0784  0087               	movwf	7
  7173  0785  0824               	movf	??_Flash_Memory_Modify,w
  7174  0786  0081               	movwf	1
  7175                           
  7176                           ;MCU_B1.c: 868: if (Memory->LoopSave == 1) {
  7177  0787  086E               	movf	_Memory,w
  7178  0788  3E24               	addlw	36
  7179  0789  0086               	movwf	6
  7180  078A  3001               	movlw	1	; select bank2/3
  7181  078B  0087               	movwf	7
  7182  078C  1D01               	btfss	1,2
  7183  078D  2F9C               	goto	l4276
  7184                           
  7185                           ;MCU_B1.c: 869: Memory->LoopSave = 0;
  7186  078E  086E               	movf	_Memory,w
  7187  078F  3E24               	addlw	36
  7188  0790  0086               	movwf	6
  7189  0791  3001               	movlw	1	; select bank2/3
  7190  0792  0087               	movwf	7
  7191  0793  1101               	bcf	1,2
  7192                           
  7193                           ;MCU_B1.c: 870: myMain->FirstOpen = 0;
  7194  0794  086C               	movf	_myMain,w
  7195  0795  0086               	movwf	6
  7196  0796  0187               	clrf	7
  7197  0797  1281               	bcf	1,5
  7198                           
  7199                           ;MCU_B1.c: 871: myMain->First = 0;
  7200  0798  086C               	movf	_myMain,w
  7201  0799  0086               	movwf	6
  7202  079A  0187               	clrf	7
  7203  079B  1381               	bcf	1,7
  7204  079C                     l4276:	
  7205                           
  7206                           ;MCU_B1.c: 873: }
  7207                           ;MCU_B1.c: 874: GIE = 0;
  7208  079C  138B               	bcf	11,7	;volatile
  7209                           
  7210                           ;MCU_B1.c: 875: Flash_Memory_Erasing();
  7211  079D  3188  2015  3187   	fcall	_Flash_Memory_Erasing
  7212                           
  7213                           ;MCU_B1.c: 876: Flash_Memory_Write();
  7214  07A0  318B  230E         	fcall	_Flash_Memory_Write
  7215                           
  7216                           ;MCU_B1.c: 877: GIE = 1;
  7217  07A2  178B               	bsf	11,7	;volatile
  7218  07A3  0008               	return
  7219  07A4                     __end_of_Flash_Memory_Modify:	
  7220                           
  7221                           	psect	text40
  7222  0815                     __ptext40:	
  7223 ;; *************** function _Flash_Memory_Erasing *****************
  7224 ;; Defined at:
  7225 ;;		line 844 in file "../src/MCU_B1.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;		None               void
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0, pclath, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;Total ram usage:        0 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    6
  7246 ;; This function calls:
  7247 ;;		_Flash_Memory_Unlock
  7248 ;; This function is called by:
  7249 ;;		_Flash_Memory_Modify
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _Flash_Memory_Erasing
  7255  0815                     _Flash_Memory_Erasing:	
  7256                           
  7257                           ;MCU_B1.c: 845: CFGS = 0;
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  7261  0815  0023               	movlb	3	; select bank3
  7262  0816  1315               	bcf	21,6	;volatile
  7263                           
  7264                           ;MCU_B1.c: 846: PMADRH = 0x30;
  7265  0817  3030               	movlw	48
  7266  0818  0092               	movwf	18	;volatile
  7267                           
  7268                           ;MCU_B1.c: 847: PMADRL = 0x00;
  7269  0819  0191               	clrf	17	;volatile
  7270                           
  7271                           ;MCU_B1.c: 848: FREE = 1;
  7272  081A  1615               	bsf	21,4	;volatile
  7273                           
  7274                           ;MCU_B1.c: 849: WREN = 1;
  7275  081B  1515               	bsf	21,2	;volatile
  7276                           
  7277                           ;MCU_B1.c: 850: Flash_Memory_Unlock();
  7278  081C  3197  27A3         	fcall	_Flash_Memory_Unlock
  7279                           
  7280                           ;MCU_B1.c: 851: WREN = 0;
  7281  081E  0023               	movlb	3	; select bank3
  7282  081F  1115               	bcf	21,2	;volatile
  7283  0820  0008               	return
  7284  0821                     __end_of_Flash_Memory_Erasing:	
  7285                           
  7286                           	psect	text41
  7287  02CF                     __ptext41:	
  7288 ;; *************** function _Flash_Memory_Initialization *****************
  7289 ;; Defined at:
  7290 ;;		line 745 in file "../src/MCU_B1.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  i               1   49[BANK0 ] unsigned char 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;		None               void
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        2 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    8
  7311 ;; This function calls:
  7312 ;;		_Flash_Memory_Read
  7313 ;;		_Flash_Memory_Write
  7314 ;;		_setPercentValue
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _Flash_Memory_Initialization
  7322  02CF                     _Flash_Memory_Initialization:	
  7323                           
  7324                           ;MCU_B1.c: 746: char i = 0;
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7328  02CF  0020               	movlb	0	; select bank0
  7329  02D0  01D1               	clrf	Flash_Memory_Initialization@i
  7330                           
  7331                           ;MCU_B1.c: 747: if (Flash_Memory_Read(31) == 0xaa) {
  7332  02D1  301F               	movlw	31
  7333  02D2  3189  2180  3182   	fcall	_Flash_Memory_Read
  7334  02D5  3AAA               	xorlw	170
  7335  02D6  1D03               	skipz
  7336  02D7  2B46               	goto	l4538
  7337                           
  7338                           ;MCU_B1.c: 748: product->Data[12] = Flash_Memory_Read(0);
  7339  02D8  3000               	movlw	0
  7340  02D9  3189  2180  3182   	fcall	_Flash_Memory_Read
  7341  02DC  0020               	movlb	0	; select bank0
  7342  02DD  00D0               	movwf	??_Flash_Memory_Initialization
  7343  02DE  086D               	movf	_product,w
  7344  02DF  3E0C               	addlw	12
  7345  02E0  0086               	movwf	6
  7346  02E1  3001               	movlw	1	; select bank2/3
  7347  02E2  0087               	movwf	7
  7348  02E3  0850               	movf	??_Flash_Memory_Initialization,w
  7349  02E4  0081               	movwf	1
  7350                           
  7351                           ;MCU_B1.c: 749: product->Data[13] = Flash_Memory_Read(1);
  7352  02E5  3001               	movlw	1
  7353  02E6  3189  2180  3182   	fcall	_Flash_Memory_Read
  7354  02E9  0020               	movlb	0	; select bank0
  7355  02EA  00D0               	movwf	??_Flash_Memory_Initialization
  7356  02EB  086D               	movf	_product,w
  7357  02EC  3E0D               	addlw	13
  7358  02ED  0086               	movwf	6
  7359  02EE  3001               	movlw	1	; select bank2/3
  7360  02EF  0087               	movwf	7
  7361  02F0  0850               	movf	??_Flash_Memory_Initialization,w
  7362  02F1  0081               	movwf	1
  7363                           
  7364                           ;MCU_B1.c: 750: product->Data[14] = Flash_Memory_Read(2);
  7365  02F2  3002               	movlw	2
  7366  02F3  3189  2180  3182   	fcall	_Flash_Memory_Read
  7367  02F6  0020               	movlb	0	; select bank0
  7368  02F7  00D0               	movwf	??_Flash_Memory_Initialization
  7369  02F8  086D               	movf	_product,w
  7370  02F9  3E0E               	addlw	14
  7371  02FA  0086               	movwf	6
  7372  02FB  3001               	movlw	1	; select bank2/3
  7373  02FC  0087               	movwf	7
  7374  02FD  0850               	movf	??_Flash_Memory_Initialization,w
  7375  02FE  0081               	movwf	1
  7376                           
  7377                           ;MCU_B1.c: 756: i = setPercentValue(((char)((100-60)*0.8)));
  7378  02FF  3020               	movlw	32
  7379  0300  318C  24A4  3182   	fcall	_setPercentValue
  7380  0303  0020               	movlb	0	; select bank0
  7381  0304  00D0               	movwf	??_Flash_Memory_Initialization
  7382  0305  0850               	movf	??_Flash_Memory_Initialization,w
  7383  0306  00D1               	movwf	Flash_Memory_Initialization@i
  7384                           
  7385                           ;MCU_B1.c: 757: product->Data[21] = i;
  7386  0307  0851               	movf	Flash_Memory_Initialization@i,w
  7387  0308  00D0               	movwf	??_Flash_Memory_Initialization
  7388  0309  086D               	movf	_product,w
  7389  030A  3E15               	addlw	21
  7390  030B  0086               	movwf	6
  7391  030C  3001               	movlw	1	; select bank2/3
  7392  030D  0087               	movwf	7
  7393  030E  0850               	movf	??_Flash_Memory_Initialization,w
  7394  030F  0081               	movwf	1
  7395                           
  7396                           ;MCU_B1.c: 758: product->Data[22] = i;
  7397  0310  0851               	movf	Flash_Memory_Initialization@i,w
  7398  0311  00D0               	movwf	??_Flash_Memory_Initialization
  7399  0312  086D               	movf	_product,w
  7400  0313  3E16               	addlw	22
  7401  0314  0086               	movwf	6
  7402  0315  3001               	movlw	1	; select bank2/3
  7403  0316  0087               	movwf	7
  7404  0317  0850               	movf	??_Flash_Memory_Initialization,w
  7405  0318  0081               	movwf	1
  7406                           
  7407                           ;MCU_B1.c: 759: product->Data[23] = i;
  7408  0319  0851               	movf	Flash_Memory_Initialization@i,w
  7409  031A  00D0               	movwf	??_Flash_Memory_Initialization
  7410  031B  086D               	movf	_product,w
  7411  031C  3E17               	addlw	23
  7412  031D  0086               	movwf	6
  7413  031E  3001               	movlw	1	; select bank2/3
  7414  031F  0087               	movwf	7
  7415  0320  0850               	movf	??_Flash_Memory_Initialization,w
  7416  0321  0081               	movwf	1
  7417                           
  7418                           ;MCU_B1.c: 761: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  7419  0322  086D               	movf	_product,w
  7420  0323  3E0C               	addlw	12
  7421  0324  0086               	movwf	6
  7422  0325  3001               	movlw	1	; select bank2/3
  7423  0326  0087               	movwf	7
  7424  0327  0801               	movf	1,w
  7425  0328  3AFF               	xorlw	255
  7426  0329  1D03               	skipz
  7427  032A  0008               	return
  7428  032B  086D               	movf	_product,w
  7429  032C  3E0D               	addlw	13
  7430  032D  0086               	movwf	6
  7431  032E  3001               	movlw	1	; select bank2/3
  7432  032F  0087               	movwf	7
  7433  0330  0801               	movf	1,w
  7434  0331  3AFF               	xorlw	255
  7435  0332  1D03               	skipz
  7436  0333  0008               	return
  7437  0334  086D               	movf	_product,w
  7438  0335  3E0E               	addlw	14
  7439  0336  0086               	movwf	6
  7440  0337  3001               	movlw	1	; select bank2/3
  7441  0338  0087               	movwf	7
  7442  0339  0801               	movf	1,w
  7443  033A  3AFF               	xorlw	255
  7444  033B  1D03               	skipz
  7445  033C  0008               	return
  7446                           
  7447                           ;MCU_B1.c: 762: myMain->FirstOpen = 1;
  7448  033D  086C               	movf	_myMain,w
  7449  033E  0086               	movwf	6
  7450  033F  0187               	clrf	7
  7451  0340  1681               	bsf	1,5
  7452                           
  7453                           ;MCU_B1.c: 763: myMain->First = 1;
  7454  0341  086C               	movf	_myMain,w
  7455  0342  0086               	movwf	6
  7456  0343  0187               	clrf	7
  7457  0344  1781               	bsf	1,7
  7458                           
  7459                           ;MCU_B1.c: 764: }
  7460                           ;MCU_B1.c: 765: } else {
  7461  0345  0008               	return
  7462  0346                     l4538:	
  7463                           
  7464                           ;MCU_B1.c: 766: i = setPercentValue(((char)((100-60)*0.8)));
  7465  0346  3020               	movlw	32
  7466  0347  318C  24A4  3182   	fcall	_setPercentValue
  7467  034A  0020               	movlb	0	; select bank0
  7468  034B  00D0               	movwf	??_Flash_Memory_Initialization
  7469  034C  0850               	movf	??_Flash_Memory_Initialization,w
  7470  034D  00D1               	movwf	Flash_Memory_Initialization@i
  7471                           
  7472                           ;MCU_B1.c: 767: Memory->Data[0]=0xff;
  7473  034E  30FF               	movlw	255
  7474  034F  00D0               	movwf	??_Flash_Memory_Initialization
  7475  0350  086E               	movf	_Memory,w
  7476  0351  0086               	movwf	6
  7477  0352  3001               	movlw	1	; select bank2/3
  7478  0353  0087               	movwf	7
  7479  0354  0850               	movf	??_Flash_Memory_Initialization,w
  7480  0355  0081               	movwf	1
  7481                           
  7482                           ;MCU_B1.c: 768: Memory->Data[1]=0xff;
  7483  0356  30FF               	movlw	255
  7484  0357  00D0               	movwf	??_Flash_Memory_Initialization
  7485  0358  0A6E               	incf	_Memory,w
  7486  0359  0086               	movwf	6
  7487  035A  3001               	movlw	1	; select bank2/3
  7488  035B  0087               	movwf	7
  7489  035C  0850               	movf	??_Flash_Memory_Initialization,w
  7490  035D  0081               	movwf	1
  7491                           
  7492                           ;MCU_B1.c: 769: Memory->Data[2]=0xff;
  7493  035E  30FF               	movlw	255
  7494  035F  00D0               	movwf	??_Flash_Memory_Initialization
  7495  0360  086E               	movf	_Memory,w
  7496  0361  3E02               	addlw	2
  7497  0362  0086               	movwf	6
  7498  0363  3001               	movlw	1	; select bank2/3
  7499  0364  0087               	movwf	7
  7500  0365  0850               	movf	??_Flash_Memory_Initialization,w
  7501  0366  0081               	movwf	1
  7502                           
  7503                           ;MCU_B1.c: 770: Memory->Data[3]=0xff;
  7504  0367  30FF               	movlw	255
  7505  0368  00D0               	movwf	??_Flash_Memory_Initialization
  7506  0369  086E               	movf	_Memory,w
  7507  036A  3E03               	addlw	3
  7508  036B  0086               	movwf	6
  7509  036C  3001               	movlw	1	; select bank2/3
  7510  036D  0087               	movwf	7
  7511  036E  0850               	movf	??_Flash_Memory_Initialization,w
  7512  036F  0081               	movwf	1
  7513                           
  7514                           ;MCU_B1.c: 771: Memory->Data[4]=0xff;
  7515  0370  30FF               	movlw	255
  7516  0371  00D0               	movwf	??_Flash_Memory_Initialization
  7517  0372  086E               	movf	_Memory,w
  7518  0373  3E04               	addlw	4
  7519  0374  0086               	movwf	6
  7520  0375  3001               	movlw	1	; select bank2/3
  7521  0376  0087               	movwf	7
  7522  0377  0850               	movf	??_Flash_Memory_Initialization,w
  7523  0378  0081               	movwf	1
  7524                           
  7525                           ;MCU_B1.c: 772: Memory->Data[5]=0xff;
  7526  0379  30FF               	movlw	255
  7527  037A  00D0               	movwf	??_Flash_Memory_Initialization
  7528  037B  086E               	movf	_Memory,w
  7529  037C  3E05               	addlw	5
  7530  037D  0086               	movwf	6
  7531  037E  3001               	movlw	1	; select bank2/3
  7532  037F  0087               	movwf	7
  7533  0380  0850               	movf	??_Flash_Memory_Initialization,w
  7534  0381  0081               	movwf	1
  7535                           
  7536                           ;MCU_B1.c: 773: Memory->Data[31]=0xaa;
  7537  0382  30AA               	movlw	170
  7538  0383  00D0               	movwf	??_Flash_Memory_Initialization
  7539  0384  086E               	movf	_Memory,w
  7540  0385  3E1F               	addlw	31
  7541  0386  0086               	movwf	6
  7542  0387  3001               	movlw	1	; select bank2/3
  7543  0388  0087               	movwf	7
  7544  0389  0850               	movf	??_Flash_Memory_Initialization,w
  7545  038A  0081               	movwf	1
  7546                           
  7547                           ;MCU_B1.c: 774: product->Data[21] = i;
  7548  038B  0851               	movf	Flash_Memory_Initialization@i,w
  7549  038C  00D0               	movwf	??_Flash_Memory_Initialization
  7550  038D  086D               	movf	_product,w
  7551  038E  3E15               	addlw	21
  7552  038F  0086               	movwf	6
  7553  0390  3001               	movlw	1	; select bank2/3
  7554  0391  0087               	movwf	7
  7555  0392  0850               	movf	??_Flash_Memory_Initialization,w
  7556  0393  0081               	movwf	1
  7557                           
  7558                           ;MCU_B1.c: 775: product->Data[22] = i;
  7559  0394  0851               	movf	Flash_Memory_Initialization@i,w
  7560  0395  00D0               	movwf	??_Flash_Memory_Initialization
  7561  0396  086D               	movf	_product,w
  7562  0397  3E16               	addlw	22
  7563  0398  0086               	movwf	6
  7564  0399  3001               	movlw	1	; select bank2/3
  7565  039A  0087               	movwf	7
  7566  039B  0850               	movf	??_Flash_Memory_Initialization,w
  7567  039C  0081               	movwf	1
  7568                           
  7569                           ;MCU_B1.c: 776: product->Data[23] = i;
  7570  039D  0851               	movf	Flash_Memory_Initialization@i,w
  7571  039E  00D0               	movwf	??_Flash_Memory_Initialization
  7572  039F  086D               	movf	_product,w
  7573  03A0  3E17               	addlw	23
  7574  03A1  0086               	movwf	6
  7575  03A2  3001               	movlw	1	; select bank2/3
  7576  03A3  0087               	movwf	7
  7577  03A4  0850               	movf	??_Flash_Memory_Initialization,w
  7578  03A5  0081               	movwf	1
  7579                           
  7580                           ;MCU_B1.c: 777: GIE = 0;
  7581  03A6  138B               	bcf	11,7	;volatile
  7582                           
  7583                           ;MCU_B1.c: 778: Flash_Memory_Write();
  7584  03A7  318B  230E         	fcall	_Flash_Memory_Write
  7585                           
  7586                           ;MCU_B1.c: 779: GIE = 1;
  7587  03A9  178B               	bsf	11,7	;volatile
  7588                           
  7589                           ;MCU_B1.c: 780: myMain->FirstOpen = 1;
  7590  03AA  0020               	movlb	0	; select bank0
  7591  03AB  086C               	movf	_myMain,w
  7592  03AC  0086               	movwf	6
  7593  03AD  0187               	clrf	7
  7594  03AE  1681               	bsf	1,5
  7595                           
  7596                           ;MCU_B1.c: 781: myMain->First = 1;
  7597  03AF  086C               	movf	_myMain,w
  7598  03B0  0086               	movwf	6
  7599  03B1  0187               	clrf	7
  7600  03B2  1781               	bsf	1,7
  7601  03B3  0008               	return
  7602  03B4                     __end_of_Flash_Memory_Initialization:	
  7603                           
  7604                           	psect	text42
  7605  0CA4                     __ptext42:	
  7606 ;; *************** function _setPercentValue *****************
  7607 ;; Defined at:
  7608 ;;		line 768 in file "../src/Dimmer_B1.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  value           1    wreg     unsigned char 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  value           1   44[BANK0 ] unsigned char 
  7613 ;;  i               3   45[BANK0 ] float 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      unsigned char 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0, pclath, cstack
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;Total ram usage:        4 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    7
  7630 ;; This function calls:
  7631 ;;		___awtoft
  7632 ;;		___ftdiv
  7633 ;;		___fttol
  7634 ;; This function is called by:
  7635 ;;		_Flash_Memory_Initialization
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           
  7640                           ;psect for function _setPercentValue
  7641  0CA4                     _setPercentValue:	
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  7645                           ;setPercentValue@value stored from wreg
  7646  0CA4  0020               	movlb	0	; select bank0
  7647  0CA5  00CC               	movwf	setPercentValue@value
  7648                           
  7649                           ;Dimmer_B1.c: 770: float i = ((char)((100-25)*0.8)) - ((char)((100-60)*0.8));
  7650  0CA6  3000               	movlw	0
  7651  0CA7  00CD               	movwf	setPercentValue@i
  7652  0CA8  30E0               	movlw	224
  7653  0CA9  00CE               	movwf	setPercentValue@i+1
  7654  0CAA  3041               	movlw	65
  7655  0CAB  00CF               	movwf	setPercentValue@i+2
  7656                           
  7657                           ;Dimmer_B1.c: 771: i /= 100;
  7658  0CAC  3000               	movlw	0
  7659  0CAD  00AE               	movwf	___ftdiv@f2
  7660  0CAE  30C8               	movlw	200
  7661  0CAF  00AF               	movwf	___ftdiv@f2+1
  7662  0CB0  3042               	movlw	66
  7663  0CB1  00B0               	movwf	___ftdiv@f2+2
  7664  0CB2  084D               	movf	setPercentValue@i,w
  7665  0CB3  00B1               	movwf	___ftdiv@f1
  7666  0CB4  084E               	movf	setPercentValue@i+1,w
  7667  0CB5  00B2               	movwf	___ftdiv@f1+1
  7668  0CB6  084F               	movf	setPercentValue@i+2,w
  7669  0CB7  00B3               	movwf	___ftdiv@f1+2
  7670  0CB8  3184  2490  318C   	fcall	___ftdiv
  7671  0CBB  0020               	movlb	0	; select bank0
  7672  0CBC  082E               	movf	?___ftdiv,w
  7673  0CBD  00CD               	movwf	setPercentValue@i
  7674  0CBE  082F               	movf	?___ftdiv+1,w
  7675  0CBF  00CE               	movwf	setPercentValue@i+1
  7676  0CC0  0830               	movf	?___ftdiv+2,w
  7677  0CC1  00CF               	movwf	setPercentValue@i+2
  7678                           
  7679                           ;Dimmer_B1.c: 772: return (100 - (char) ((value - ((char)((100-60)*0.8))) / i));
  7680  0CC2  084C               	movf	setPercentValue@value,w
  7681  0CC3  3EE0               	addlw	224
  7682  0CC4  00A8               	movwf	___awtoft@c
  7683  0CC5  30FF               	movlw	255
  7684  0CC6  1803               	skipnc
  7685  0CC7  3000               	movlw	0
  7686  0CC8  00A9               	movwf	___awtoft@c+1
  7687  0CC9  3189  21F2  318C   	fcall	___awtoft
  7688  0CCC  0020               	movlb	0	; select bank0
  7689  0CCD  0828               	movf	?___awtoft,w
  7690  0CCE  00B1               	movwf	___ftdiv@f1
  7691  0CCF  0829               	movf	?___awtoft+1,w
  7692  0CD0  00B2               	movwf	___ftdiv@f1+1
  7693  0CD1  082A               	movf	?___awtoft+2,w
  7694  0CD2  00B3               	movwf	___ftdiv@f1+2
  7695  0CD3  084D               	movf	setPercentValue@i,w
  7696  0CD4  00AE               	movwf	___ftdiv@f2
  7697  0CD5  084E               	movf	setPercentValue@i+1,w
  7698  0CD6  00AF               	movwf	___ftdiv@f2+1
  7699  0CD7  084F               	movf	setPercentValue@i+2,w
  7700  0CD8  00B0               	movwf	___ftdiv@f2+2
  7701  0CD9  3184  2490  318C   	fcall	___ftdiv
  7702  0CDC  0020               	movlb	0	; select bank0
  7703  0CDD  082E               	movf	?___ftdiv,w
  7704  0CDE  00BE               	movwf	___fttol@f1
  7705  0CDF  082F               	movf	?___ftdiv+1,w
  7706  0CE0  00BF               	movwf	___fttol@f1+1
  7707  0CE1  0830               	movf	?___ftdiv+2,w
  7708  0CE2  00C0               	movwf	___fttol@f1+2
  7709  0CE3  3185  25D6         	fcall	___fttol
  7710  0CE5  0020               	movlb	0	; select bank0
  7711  0CE6  033E               	decf	?___fttol,w
  7712  0CE7  3AFF               	xorlw	255
  7713  0CE8  3E64               	addlw	100
  7714  0CE9  0008               	return
  7715  0CEA                     __end_of_setPercentValue:	
  7716                           
  7717                           	psect	text43
  7718  05D6                     __ptext43:	
  7719 ;; *************** function ___fttol *****************
  7720 ;; Defined at:
  7721 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  f1              3   30[BANK0 ] float 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  lval            4   39[BANK0 ] unsigned long 
  7726 ;;  exp1            1   43[BANK0 ] unsigned char 
  7727 ;;  sign1           1   38[BANK0 ] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  4   30[BANK0 ] long 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;Total ram usage:       14 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    5
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_setPercentValue
  7748 ;;		_getPercentValue
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function ___fttol
  7754  05D6                     ___fttol:	
  7755                           
  7756                           ;incstack = 0
  7757                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7758  05D6  0020               	movlb	0	; select bank0
  7759  05D7  083E               	movf	___fttol@f1,w
  7760  05D8  00C2               	movwf	??___fttol
  7761  05D9  083F               	movf	___fttol@f1+1,w
  7762  05DA  00C3               	movwf	??___fttol+1
  7763  05DB  0840               	movf	___fttol@f1+2,w
  7764  05DC  00C4               	movwf	??___fttol+2
  7765  05DD  1003               	clrc
  7766  05DE  0D43               	rlf	??___fttol+1,w
  7767  05DF  0D44               	rlf	??___fttol+2,w
  7768  05E0  00C5               	movwf	??___fttol+3
  7769  05E1  0845               	movf	??___fttol+3,w
  7770  05E2  00CB               	movwf	___fttol@exp1
  7771  05E3  08CB               	movf	___fttol@exp1,f
  7772  05E4  1D03               	skipz
  7773  05E5  2DEF               	goto	l3952
  7774  05E6  3000               	movlw	0
  7775  05E7  00C1               	movwf	?___fttol+3
  7776  05E8  3000               	movlw	0
  7777  05E9  00C0               	movwf	?___fttol+2
  7778  05EA  3000               	movlw	0
  7779  05EB  00BF               	movwf	?___fttol+1
  7780  05EC  3000               	movlw	0
  7781  05ED  00BE               	movwf	?___fttol
  7782  05EE  0008               	return
  7783  05EF                     l3952:	
  7784  05EF  083E               	movf	___fttol@f1,w
  7785  05F0  00C2               	movwf	??___fttol
  7786  05F1  083F               	movf	___fttol@f1+1,w
  7787  05F2  00C3               	movwf	??___fttol+1
  7788  05F3  0840               	movf	___fttol@f1+2,w
  7789  05F4  00C4               	movwf	??___fttol+2
  7790  05F5  3017               	movlw	23
  7791  05F6                     u2915:	
  7792  05F6  36C4               	lsrf	??___fttol+2,f
  7793  05F7  0CC3               	rrf	??___fttol+1,f
  7794  05F8  0CC2               	rrf	??___fttol,f
  7795  05F9  0B89               	decfsz	9,f
  7796  05FA  2DF6               	goto	u2915
  7797  05FB  0842               	movf	??___fttol,w
  7798  05FC  00C5               	movwf	??___fttol+3
  7799  05FD  0845               	movf	??___fttol+3,w
  7800  05FE  00C6               	movwf	___fttol@sign1
  7801  05FF  17BF               	bsf	___fttol@f1+1,7
  7802  0600  30FF               	movlw	255
  7803  0601  05BE               	andwf	___fttol@f1,f
  7804  0602  30FF               	movlw	255
  7805  0603  05BF               	andwf	___fttol@f1+1,f
  7806  0604  3000               	movlw	0
  7807  0605  05C0               	andwf	___fttol@f1+2,f
  7808  0606  083E               	movf	___fttol@f1,w
  7809  0607  00C7               	movwf	___fttol@lval
  7810  0608  083F               	movf	___fttol@f1+1,w
  7811  0609  00C8               	movwf	___fttol@lval+1
  7812  060A  0840               	movf	___fttol@f1+2,w
  7813  060B  00C9               	movwf	___fttol@lval+2
  7814  060C  01CA               	clrf	___fttol@lval+3
  7815  060D  308E               	movlw	142
  7816  060E  02CB               	subwf	___fttol@exp1,f
  7817  060F  1FCB               	btfss	___fttol@exp1,7
  7818  0610  2E2D               	goto	l3972
  7819  0611  084B               	movf	___fttol@exp1,w
  7820  0612  3A80               	xorlw	128
  7821  0613  3E8F               	addlw	143
  7822  0614  1803               	skipnc
  7823  0615  2E1F               	goto	l3970
  7824  0616  3000               	movlw	0
  7825  0617  00C1               	movwf	?___fttol+3
  7826  0618  3000               	movlw	0
  7827  0619  00C0               	movwf	?___fttol+2
  7828  061A  3000               	movlw	0
  7829  061B  00BF               	movwf	?___fttol+1
  7830  061C  3000               	movlw	0
  7831  061D  00BE               	movwf	?___fttol
  7832  061E  0008               	return
  7833  061F                     l3970:	
  7834  061F  3001               	movlw	1
  7835  0620                     u2945:	
  7836  0620  36CA               	lsrf	___fttol@lval+3,f
  7837  0621  0CC9               	rrf	___fttol@lval+2,f
  7838  0622  0CC8               	rrf	___fttol@lval+1,f
  7839  0623  0CC7               	rrf	___fttol@lval,f
  7840  0624  0B89               	decfsz	9,f
  7841  0625  2E20               	goto	u2945
  7842  0626  3001               	movlw	1
  7843  0627  00C2               	movwf	??___fttol
  7844  0628  0842               	movf	??___fttol,w
  7845  0629  07CB               	addwf	___fttol@exp1,f
  7846  062A  1903               	btfsc	3,2
  7847  062B  2E46               	goto	l3982
  7848  062C  2E1F               	goto	l3970
  7849  062D                     l3972:	
  7850  062D  3018               	movlw	24
  7851  062E  024B               	subwf	___fttol@exp1,w
  7852  062F  1C03               	skipc
  7853  0630  2E43               	goto	l3980
  7854  0631  3000               	movlw	0
  7855  0632  00C1               	movwf	?___fttol+3
  7856  0633  3000               	movlw	0
  7857  0634  00C0               	movwf	?___fttol+2
  7858  0635  3000               	movlw	0
  7859  0636  00BF               	movwf	?___fttol+1
  7860  0637  3000               	movlw	0
  7861  0638  00BE               	movwf	?___fttol
  7862  0639  0008               	return
  7863  063A                     l3978:	
  7864  063A  3001               	movlw	1
  7865  063B                     u2975:	
  7866  063B  35C7               	lslf	___fttol@lval,f
  7867  063C  0DC8               	rlf	___fttol@lval+1,f
  7868  063D  0DC9               	rlf	___fttol@lval+2,f
  7869  063E  0DCA               	rlf	___fttol@lval+3,f
  7870  063F  0B89               	decfsz	9,f
  7871  0640  2E3B               	goto	u2975
  7872  0641  3001               	movlw	1
  7873  0642  02CB               	subwf	___fttol@exp1,f
  7874  0643                     l3980:	
  7875  0643  08CB               	movf	___fttol@exp1,f
  7876  0644  1D03               	skipz
  7877  0645  2E3A               	goto	l3978
  7878  0646                     l3982:	
  7879  0646  0846               	movf	___fttol@sign1,w
  7880  0647  1903               	btfsc	3,2
  7881  0648  2E54               	goto	l3986
  7882  0649  09C7               	comf	___fttol@lval,f
  7883  064A  09C8               	comf	___fttol@lval+1,f
  7884  064B  09C9               	comf	___fttol@lval+2,f
  7885  064C  09CA               	comf	___fttol@lval+3,f
  7886  064D  0AC7               	incf	___fttol@lval,f
  7887  064E  1903               	skipnz
  7888  064F  0AC8               	incf	___fttol@lval+1,f
  7889  0650  1903               	skipnz
  7890  0651  0AC9               	incf	___fttol@lval+2,f
  7891  0652  1903               	skipnz
  7892  0653  0ACA               	incf	___fttol@lval+3,f
  7893  0654                     l3986:	
  7894  0654  084A               	movf	___fttol@lval+3,w
  7895  0655  00C1               	movwf	?___fttol+3
  7896  0656  0849               	movf	___fttol@lval+2,w
  7897  0657  00C0               	movwf	?___fttol+2
  7898  0658  0848               	movf	___fttol@lval+1,w
  7899  0659  00BF               	movwf	?___fttol+1
  7900  065A  0847               	movf	___fttol@lval,w
  7901  065B  00BE               	movwf	?___fttol
  7902  065C  0008               	return
  7903  065D                     __end_of___fttol:	
  7904                           
  7905                           	psect	text44
  7906  0490                     __ptext44:	
  7907 ;; *************** function ___ftdiv *****************
  7908 ;; Defined at:
  7909 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  f2              3   14[BANK0 ] float 
  7912 ;;  f1              3   17[BANK0 ] float 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  f3              3   25[BANK0 ] float 
  7915 ;;  sign            1   29[BANK0 ] unsigned char 
  7916 ;;  exp             1   28[BANK0 ] unsigned char 
  7917 ;;  cntr            1   24[BANK0 ] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  3   14[BANK0 ] float 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;Total ram usage:       16 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    6
  7934 ;; This function calls:
  7935 ;;		___ftpack
  7936 ;; This function is called by:
  7937 ;;		_setPercentValue
  7938 ;;		_getPercentValue
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           
  7943                           ;psect for function ___ftdiv
  7944  0490                     ___ftdiv:	
  7945                           
  7946                           ;incstack = 0
  7947                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7948  0490  0020               	movlb	0	; select bank0
  7949  0491  0831               	movf	___ftdiv@f1,w
  7950  0492  00B4               	movwf	??___ftdiv
  7951  0493  0832               	movf	___ftdiv@f1+1,w
  7952  0494  00B5               	movwf	??___ftdiv+1
  7953  0495  0833               	movf	___ftdiv@f1+2,w
  7954  0496  00B6               	movwf	??___ftdiv+2
  7955  0497  1003               	clrc
  7956  0498  0D35               	rlf	??___ftdiv+1,w
  7957  0499  0D36               	rlf	??___ftdiv+2,w
  7958  049A  00B7               	movwf	??___ftdiv+3
  7959  049B  0837               	movf	??___ftdiv+3,w
  7960  049C  00BC               	movwf	___ftdiv@exp
  7961  049D  08BC               	movf	___ftdiv@exp,f
  7962  049E  1D03               	skipz
  7963  049F  2CA7               	goto	l3910
  7964  04A0  3000               	movlw	0
  7965  04A1  00AE               	movwf	?___ftdiv
  7966  04A2  3000               	movlw	0
  7967  04A3  00AF               	movwf	?___ftdiv+1
  7968  04A4  3000               	movlw	0
  7969  04A5  00B0               	movwf	?___ftdiv+2
  7970  04A6  0008               	return
  7971  04A7                     l3910:	
  7972  04A7  082E               	movf	___ftdiv@f2,w
  7973  04A8  00B4               	movwf	??___ftdiv
  7974  04A9  082F               	movf	___ftdiv@f2+1,w
  7975  04AA  00B5               	movwf	??___ftdiv+1
  7976  04AB  0830               	movf	___ftdiv@f2+2,w
  7977  04AC  00B6               	movwf	??___ftdiv+2
  7978  04AD  1003               	clrc
  7979  04AE  0D35               	rlf	??___ftdiv+1,w
  7980  04AF  0D36               	rlf	??___ftdiv+2,w
  7981  04B0  00B7               	movwf	??___ftdiv+3
  7982  04B1  0837               	movf	??___ftdiv+3,w
  7983  04B2  00BD               	movwf	___ftdiv@sign
  7984  04B3  08BD               	movf	___ftdiv@sign,f
  7985  04B4  1D03               	skipz
  7986  04B5  2CBD               	goto	l3916
  7987  04B6  3000               	movlw	0
  7988  04B7  00AE               	movwf	?___ftdiv
  7989  04B8  3000               	movlw	0
  7990  04B9  00AF               	movwf	?___ftdiv+1
  7991  04BA  3000               	movlw	0
  7992  04BB  00B0               	movwf	?___ftdiv+2
  7993  04BC  0008               	return
  7994  04BD                     l3916:	
  7995  04BD  3000               	movlw	0
  7996  04BE  00B9               	movwf	___ftdiv@f3
  7997  04BF  3000               	movlw	0
  7998  04C0  00BA               	movwf	___ftdiv@f3+1
  7999  04C1  3000               	movlw	0
  8000  04C2  00BB               	movwf	___ftdiv@f3+2
  8001  04C3  3089               	movlw	137
  8002  04C4  073D               	addwf	___ftdiv@sign,w
  8003  04C5  00B4               	movwf	??___ftdiv
  8004  04C6  0834               	movf	??___ftdiv,w
  8005  04C7  02BC               	subwf	___ftdiv@exp,f
  8006  04C8  0831               	movf	___ftdiv@f1,w
  8007  04C9  00B4               	movwf	??___ftdiv
  8008  04CA  0832               	movf	___ftdiv@f1+1,w
  8009  04CB  00B5               	movwf	??___ftdiv+1
  8010  04CC  0833               	movf	___ftdiv@f1+2,w
  8011  04CD  00B6               	movwf	??___ftdiv+2
  8012  04CE  3010               	movlw	16
  8013  04CF                     u2845:	
  8014  04CF  36B6               	lsrf	??___ftdiv+2,f
  8015  04D0  0CB5               	rrf	??___ftdiv+1,f
  8016  04D1  0CB4               	rrf	??___ftdiv,f
  8017  04D2  0B89               	decfsz	9,f
  8018  04D3  2CCF               	goto	u2845
  8019  04D4  0834               	movf	??___ftdiv,w
  8020  04D5  00B7               	movwf	??___ftdiv+3
  8021  04D6  0837               	movf	??___ftdiv+3,w
  8022  04D7  00BD               	movwf	___ftdiv@sign
  8023  04D8  082E               	movf	___ftdiv@f2,w
  8024  04D9  00B4               	movwf	??___ftdiv
  8025  04DA  082F               	movf	___ftdiv@f2+1,w
  8026  04DB  00B5               	movwf	??___ftdiv+1
  8027  04DC  0830               	movf	___ftdiv@f2+2,w
  8028  04DD  00B6               	movwf	??___ftdiv+2
  8029  04DE  3010               	movlw	16
  8030  04DF                     u2855:	
  8031  04DF  36B6               	lsrf	??___ftdiv+2,f
  8032  04E0  0CB5               	rrf	??___ftdiv+1,f
  8033  04E1  0CB4               	rrf	??___ftdiv,f
  8034  04E2  0B89               	decfsz	9,f
  8035  04E3  2CDF               	goto	u2855
  8036  04E4  0834               	movf	??___ftdiv,w
  8037  04E5  00B7               	movwf	??___ftdiv+3
  8038  04E6  0837               	movf	??___ftdiv+3,w
  8039  04E7  06BD               	xorwf	___ftdiv@sign,f
  8040  04E8  3080               	movlw	128
  8041  04E9  00B4               	movwf	??___ftdiv
  8042  04EA  0834               	movf	??___ftdiv,w
  8043  04EB  05BD               	andwf	___ftdiv@sign,f
  8044  04EC  17B2               	bsf	___ftdiv@f1+1,7
  8045  04ED  30FF               	movlw	255
  8046  04EE  05B1               	andwf	___ftdiv@f1,f
  8047  04EF  30FF               	movlw	255
  8048  04F0  05B2               	andwf	___ftdiv@f1+1,f
  8049  04F1  3000               	movlw	0
  8050  04F2  05B3               	andwf	___ftdiv@f1+2,f
  8051  04F3  17AF               	bsf	___ftdiv@f2+1,7
  8052  04F4  30FF               	movlw	255
  8053  04F5  05AE               	andwf	___ftdiv@f2,f
  8054  04F6  30FF               	movlw	255
  8055  04F7  05AF               	andwf	___ftdiv@f2+1,f
  8056  04F8  3000               	movlw	0
  8057  04F9  05B0               	andwf	___ftdiv@f2+2,f
  8058  04FA  3018               	movlw	24
  8059  04FB  00B4               	movwf	??___ftdiv
  8060  04FC  0834               	movf	??___ftdiv,w
  8061  04FD  00B8               	movwf	___ftdiv@cntr
  8062  04FE                     l3930:	
  8063  04FE  3001               	movlw	1
  8064  04FF                     u2865:	
  8065  04FF  35B9               	lslf	___ftdiv@f3,f
  8066  0500  0DBA               	rlf	___ftdiv@f3+1,f
  8067  0501  0DBB               	rlf	___ftdiv@f3+2,f
  8068  0502  0B89               	decfsz	9,f
  8069  0503  2CFF               	goto	u2865
  8070  0504  0830               	movf	___ftdiv@f2+2,w
  8071  0505  0233               	subwf	___ftdiv@f1+2,w
  8072  0506  1D03               	skipz
  8073  0507  2D0E               	goto	u2875
  8074  0508  082F               	movf	___ftdiv@f2+1,w
  8075  0509  0232               	subwf	___ftdiv@f1+1,w
  8076  050A  1D03               	skipz
  8077  050B  2D0E               	goto	u2875
  8078  050C  082E               	movf	___ftdiv@f2,w
  8079  050D  0231               	subwf	___ftdiv@f1,w
  8080  050E                     u2875:	
  8081  050E  1C03               	skipc
  8082  050F  2D17               	goto	l3938
  8083  0510  082E               	movf	___ftdiv@f2,w
  8084  0511  02B1               	subwf	___ftdiv@f1,f
  8085  0512  082F               	movf	___ftdiv@f2+1,w
  8086  0513  3BB2               	subwfb	___ftdiv@f1+1,f
  8087  0514  0830               	movf	___ftdiv@f2+2,w
  8088  0515  3BB3               	subwfb	___ftdiv@f1+2,f
  8089  0516  1439               	bsf	___ftdiv@f3,0
  8090  0517                     l3938:	
  8091  0517  3001               	movlw	1
  8092  0518                     u2885:	
  8093  0518  35B1               	lslf	___ftdiv@f1,f
  8094  0519  0DB2               	rlf	___ftdiv@f1+1,f
  8095  051A  0DB3               	rlf	___ftdiv@f1+2,f
  8096  051B  0B89               	decfsz	9,f
  8097  051C  2D18               	goto	u2885
  8098  051D  3001               	movlw	1
  8099  051E  02B8               	subwf	___ftdiv@cntr,f
  8100  051F  1D03               	btfss	3,2
  8101  0520  2CFE               	goto	l3930
  8102  0521  0839               	movf	___ftdiv@f3,w
  8103  0522  00A0               	movwf	___ftpack@arg
  8104  0523  083A               	movf	___ftdiv@f3+1,w
  8105  0524  00A1               	movwf	___ftpack@arg+1
  8106  0525  083B               	movf	___ftdiv@f3+2,w
  8107  0526  00A2               	movwf	___ftpack@arg+2
  8108  0527  083C               	movf	___ftdiv@exp,w
  8109  0528  00B4               	movwf	??___ftdiv
  8110  0529  0834               	movf	??___ftdiv,w
  8111  052A  00A3               	movwf	___ftpack@exp
  8112  052B  083D               	movf	___ftdiv@sign,w
  8113  052C  00B5               	movwf	??___ftdiv+1
  8114  052D  0835               	movf	??___ftdiv+1,w
  8115  052E  00A4               	movwf	___ftpack@sign
  8116  052F  318F  273D         	fcall	___ftpack
  8117  0531  0020               	movlb	0	; select bank0
  8118  0532  0820               	movf	?___ftpack,w
  8119  0533  00AE               	movwf	?___ftdiv
  8120  0534  0821               	movf	?___ftpack+1,w
  8121  0535  00AF               	movwf	?___ftdiv+1
  8122  0536  0822               	movf	?___ftpack+2,w
  8123  0537  00B0               	movwf	?___ftdiv+2
  8124  0538  0008               	return
  8125  0539                     __end_of___ftdiv:	
  8126                           
  8127                           	psect	text45
  8128  09F2                     __ptext45:	
  8129 ;; *************** function ___awtoft *****************
  8130 ;; Defined at:
  8131 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;  c               2    8[BANK0 ] int 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  sign            1   13[BANK0 ] unsigned char 
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  3    8[BANK0 ] float 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2, status,0, pclath, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8145 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;Total ram usage:        6 bytes
  8150 ;; Hardware stack levels used:    1
  8151 ;; Hardware stack levels required when called:    6
  8152 ;; This function calls:
  8153 ;;		___ftpack
  8154 ;; This function is called by:
  8155 ;;		_setPercentValue
  8156 ;;		_getPercentValue
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function ___awtoft
  8162  09F2                     ___awtoft:	
  8163                           
  8164                           ;incstack = 0
  8165                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8166  09F2  0020               	movlb	0	; select bank0
  8167  09F3  01AD               	clrf	___awtoft@sign
  8168  09F4  1FA9               	btfss	___awtoft@c+1,7
  8169  09F5  29FD               	goto	l3900
  8170  09F6  09A8               	comf	___awtoft@c,f
  8171  09F7  09A9               	comf	___awtoft@c+1,f
  8172  09F8  0AA8               	incf	___awtoft@c,f
  8173  09F9  1903               	skipnz
  8174  09FA  0AA9               	incf	___awtoft@c+1,f
  8175  09FB  01AD               	clrf	___awtoft@sign
  8176  09FC  0AAD               	incf	___awtoft@sign,f
  8177  09FD                     l3900:	
  8178  09FD  0828               	movf	___awtoft@c,w
  8179  09FE  00A0               	movwf	___ftpack@arg
  8180  09FF  0829               	movf	___awtoft@c+1,w
  8181  0A00  00A1               	movwf	___ftpack@arg+1
  8182  0A01  01A2               	clrf	___ftpack@arg+2
  8183  0A02  308E               	movlw	142
  8184  0A03  00AB               	movwf	??___awtoft
  8185  0A04  082B               	movf	??___awtoft,w
  8186  0A05  00A3               	movwf	___ftpack@exp
  8187  0A06  082D               	movf	___awtoft@sign,w
  8188  0A07  00AC               	movwf	??___awtoft+1
  8189  0A08  082C               	movf	??___awtoft+1,w
  8190  0A09  00A4               	movwf	___ftpack@sign
  8191  0A0A  318F  273D         	fcall	___ftpack
  8192  0A0C  0020               	movlb	0	; select bank0
  8193  0A0D  0820               	movf	?___ftpack,w
  8194  0A0E  00A8               	movwf	?___awtoft
  8195  0A0F  0821               	movf	?___ftpack+1,w
  8196  0A10  00A9               	movwf	?___awtoft+1
  8197  0A11  0822               	movf	?___ftpack+2,w
  8198  0A12  00AA               	movwf	?___awtoft+2
  8199  0A13  0008               	return
  8200  0A14                     __end_of___awtoft:	
  8201                           
  8202                           	psect	text46
  8203  0F3D                     __ptext46:	
  8204 ;; *************** function ___ftpack *****************
  8205 ;; Defined at:
  8206 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  arg             3    0[BANK0 ] unsigned um
  8209 ;;  exp             1    3[BANK0 ] unsigned char 
  8210 ;;  sign            1    4[BANK0 ] unsigned char 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  3    0[BANK0 ] float 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        8 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    5
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		___awtoft
  8233 ;;		___ftdiv
  8234 ;;		___ftmul
  8235 ;;		___ftadd
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           
  8240                           ;psect for function ___ftpack
  8241  0F3D                     ___ftpack:	
  8242                           
  8243                           ;incstack = 0
  8244                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8245  0F3D  0020               	movlb	0	; select bank0
  8246  0F3E  0823               	movf	___ftpack@exp,w
  8247  0F3F  1903               	btfsc	3,2
  8248  0F40  2F46               	goto	l3694
  8249  0F41  0822               	movf	___ftpack@arg+2,w
  8250  0F42  0421               	iorwf	___ftpack@arg+1,w
  8251  0F43  0420               	iorwf	___ftpack@arg,w
  8252  0F44  1D03               	skipz
  8253  0F45  2F57               	goto	l3700
  8254  0F46                     l3694:	
  8255  0F46  3000               	movlw	0
  8256  0F47  00A0               	movwf	?___ftpack
  8257  0F48  3000               	movlw	0
  8258  0F49  00A1               	movwf	?___ftpack+1
  8259  0F4A  3000               	movlw	0
  8260  0F4B  00A2               	movwf	?___ftpack+2
  8261  0F4C  0008               	return
  8262  0F4D                     l3698:	
  8263  0F4D  3001               	movlw	1
  8264  0F4E  00A5               	movwf	??___ftpack
  8265  0F4F  0825               	movf	??___ftpack,w
  8266  0F50  07A3               	addwf	___ftpack@exp,f
  8267  0F51  3001               	movlw	1
  8268  0F52                     u2555:	
  8269  0F52  36A2               	lsrf	___ftpack@arg+2,f
  8270  0F53  0CA1               	rrf	___ftpack@arg+1,f
  8271  0F54  0CA0               	rrf	___ftpack@arg,f
  8272  0F55  0B89               	decfsz	9,f
  8273  0F56  2F52               	goto	u2555
  8274  0F57                     l3700:	
  8275  0F57  30FE               	movlw	254
  8276  0F58  0522               	andwf	___ftpack@arg+2,w
  8277  0F59  1903               	btfsc	3,2
  8278  0F5A  2F70               	goto	l1864
  8279  0F5B  2F4D               	goto	l3698
  8280  0F5C                     l3702:	
  8281  0F5C  3001               	movlw	1
  8282  0F5D  00A5               	movwf	??___ftpack
  8283  0F5E  0825               	movf	??___ftpack,w
  8284  0F5F  07A3               	addwf	___ftpack@exp,f
  8285  0F60  3001               	movlw	1
  8286  0F61  07A0               	addwf	___ftpack@arg,f
  8287  0F62  3000               	movlw	0
  8288  0F63  1803               	skipnc
  8289  0F64  3001               	movlw	1
  8290  0F65  07A1               	addwf	___ftpack@arg+1,f
  8291  0F66  3000               	movlw	0
  8292  0F67  1803               	skipnc
  8293  0F68  3001               	movlw	1
  8294  0F69  07A2               	addwf	___ftpack@arg+2,f
  8295  0F6A  3001               	movlw	1
  8296  0F6B                     u2575:	
  8297  0F6B  36A2               	lsrf	___ftpack@arg+2,f
  8298  0F6C  0CA1               	rrf	___ftpack@arg+1,f
  8299  0F6D  0CA0               	rrf	___ftpack@arg,f
  8300  0F6E  0B89               	decfsz	9,f
  8301  0F6F  2F6B               	goto	u2575
  8302  0F70                     l1864:	
  8303  0F70  30FF               	movlw	255
  8304  0F71  0522               	andwf	___ftpack@arg+2,w
  8305  0F72  1903               	btfsc	3,2
  8306  0F73  2F7D               	goto	l3710
  8307  0F74  2F5C               	goto	l3702
  8308  0F75                     l3708:	
  8309  0F75  3001               	movlw	1
  8310  0F76  02A3               	subwf	___ftpack@exp,f
  8311  0F77  3001               	movlw	1
  8312  0F78                     u2595:	
  8313  0F78  35A0               	lslf	___ftpack@arg,f
  8314  0F79  0DA1               	rlf	___ftpack@arg+1,f
  8315  0F7A  0DA2               	rlf	___ftpack@arg+2,f
  8316  0F7B  0B89               	decfsz	9,f
  8317  0F7C  2F78               	goto	u2595
  8318  0F7D                     l3710:	
  8319  0F7D  1FA1               	btfss	___ftpack@arg+1,7
  8320  0F7E  2F75               	goto	l3708
  8321  0F7F  1823               	btfsc	___ftpack@exp,0
  8322  0F80  2F87               	goto	l1870
  8323  0F81  30FF               	movlw	255
  8324  0F82  05A0               	andwf	___ftpack@arg,f
  8325  0F83  307F               	movlw	127
  8326  0F84  05A1               	andwf	___ftpack@arg+1,f
  8327  0F85  30FF               	movlw	255
  8328  0F86  05A2               	andwf	___ftpack@arg+2,f
  8329  0F87                     l1870:	
  8330  0F87  1003               	clrc
  8331  0F88  0CA3               	rrf	___ftpack@exp,f
  8332  0F89  0823               	movf	___ftpack@exp,w
  8333  0F8A  00A5               	movwf	??___ftpack
  8334  0F8B  01A6               	clrf	??___ftpack+1
  8335  0F8C  01A7               	clrf	??___ftpack+2
  8336  0F8D  3010               	movlw	16
  8337  0F8E                     u2625:	
  8338  0F8E  35A5               	lslf	??___ftpack,f
  8339  0F8F  0DA6               	rlf	??___ftpack+1,f
  8340  0F90  0DA7               	rlf	??___ftpack+2,f
  8341  0F91  0B89               	decfsz	9,f
  8342  0F92  2F8E               	goto	u2625
  8343  0F93  0825               	movf	??___ftpack,w
  8344  0F94  04A0               	iorwf	___ftpack@arg,f
  8345  0F95  0826               	movf	??___ftpack+1,w
  8346  0F96  04A1               	iorwf	___ftpack@arg+1,f
  8347  0F97  0827               	movf	??___ftpack+2,w
  8348  0F98  04A2               	iorwf	___ftpack@arg+2,f
  8349  0F99  0824               	movf	___ftpack@sign,w
  8350  0F9A  1903               	btfsc	3,2
  8351  0F9B  0008               	return
  8352  0F9C  17A2               	bsf	___ftpack@arg+2,7
  8353  0F9D  0008               	return
  8354  0F9E                     __end_of___ftpack:	
  8355                           
  8356                           	psect	text47
  8357  0B0E                     __ptext47:	
  8358 ;; *************** function _Flash_Memory_Write *****************
  8359 ;; Defined at:
  8360 ;;		line 825 in file "../src/MCU_B1.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  i               1    1[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;		None               void
  8367 ;; Registers used:
  8368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:        2 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    6
  8381 ;; This function calls:
  8382 ;;		_Flash_Memory_Unlock
  8383 ;; This function is called by:
  8384 ;;		_Flash_Memory_Initialization
  8385 ;;		_Flash_Memory_Modify
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           
  8390                           ;psect for function _Flash_Memory_Write
  8391  0B0E                     _Flash_Memory_Write:	
  8392                           
  8393                           ;MCU_B1.c: 826: char i = 0;
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8397  0B0E  0020               	movlb	0	; select bank0
  8398  0B0F  01A1               	clrf	Flash_Memory_Write@i
  8399                           
  8400                           ;MCU_B1.c: 827: CFGS = 0;
  8401  0B10  0023               	movlb	3	; select bank3
  8402  0B11  1315               	bcf	21,6	;volatile
  8403                           
  8404                           ;MCU_B1.c: 828: PMADRH = 0x30;
  8405  0B12  3030               	movlw	48
  8406  0B13  0092               	movwf	18	;volatile
  8407                           
  8408                           ;MCU_B1.c: 829: PMDATH = 0;
  8409  0B14  0194               	clrf	20	;volatile
  8410                           
  8411                           ;MCU_B1.c: 830: FREE = 0;
  8412  0B15  1215               	bcf	21,4	;volatile
  8413                           
  8414                           ;MCU_B1.c: 831: LWLO = 1;
  8415  0B16  1695               	bsf	21,5	;volatile
  8416                           
  8417                           ;MCU_B1.c: 832: WREN = 1;
  8418  0B17  1515               	bsf	21,2	;volatile
  8419                           
  8420                           ;MCU_B1.c: 833: for (i = 0; i < 32; i++) {
  8421  0B18  0020               	movlb	0	; select bank0
  8422  0B19  01A1               	clrf	Flash_Memory_Write@i
  8423  0B1A  3020               	movlw	32
  8424  0B1B  0221               	subwf	Flash_Memory_Write@i,w
  8425  0B1C  1803               	btfsc	3,0
  8426  0B1D  2B38               	goto	l907
  8427  0B1E                     l3808:	
  8428                           
  8429                           ;MCU_B1.c: 834: PMADRL = i;
  8430  0B1E  0821               	movf	Flash_Memory_Write@i,w
  8431  0B1F  0023               	movlb	3	; select bank3
  8432  0B20  0091               	movwf	17	;volatile
  8433                           
  8434                           ;MCU_B1.c: 835: PMDATL = Memory->Data[i];
  8435  0B21  0020               	movlb	0	; select bank0
  8436  0B22  0821               	movf	Flash_Memory_Write@i,w
  8437  0B23  076E               	addwf	_Memory,w
  8438  0B24  00A0               	movwf	??_Flash_Memory_Write
  8439  0B25  0820               	movf	??_Flash_Memory_Write,w
  8440  0B26  0086               	movwf	6
  8441  0B27  3001               	movlw	1	; select bank2/3
  8442  0B28  0087               	movwf	7
  8443  0B29  0801               	movf	1,w
  8444  0B2A  0023               	movlb	3	; select bank3
  8445  0B2B  0093               	movwf	19	;volatile
  8446                           
  8447                           ;MCU_B1.c: 836: Flash_Memory_Unlock();
  8448  0B2C  3197  27A3  318B   	fcall	_Flash_Memory_Unlock
  8449  0B2F  3001               	movlw	1
  8450  0B30  0020               	movlb	0	; select bank0
  8451  0B31  00A0               	movwf	??_Flash_Memory_Write
  8452  0B32  0820               	movf	??_Flash_Memory_Write,w
  8453  0B33  07A1               	addwf	Flash_Memory_Write@i,f
  8454  0B34  3020               	movlw	32
  8455  0B35  0221               	subwf	Flash_Memory_Write@i,w
  8456  0B36  1C03               	skipc
  8457  0B37  2B1E               	goto	l3808
  8458  0B38                     l907:	
  8459                           
  8460                           ;MCU_B1.c: 837: }
  8461                           ;MCU_B1.c: 838: LWLO = 0;
  8462  0B38  0023               	movlb	3	; select bank3
  8463  0B39  1295               	bcf	21,5	;volatile
  8464                           
  8465                           ;MCU_B1.c: 839: Flash_Memory_Unlock();
  8466  0B3A  3197  27A3         	fcall	_Flash_Memory_Unlock
  8467                           
  8468                           ;MCU_B1.c: 840: WREN = 0;
  8469  0B3C  0023               	movlb	3	; select bank3
  8470  0B3D  1115               	bcf	21,2	;volatile
  8471  0B3E  0008               	return
  8472  0B3F                     __end_of_Flash_Memory_Write:	
  8473                           
  8474                           	psect	text48
  8475  17A3                     __ptext48:	
  8476 ;; *************** function _Flash_Memory_Unlock *****************
  8477 ;; Defined at:
  8478 ;;		line 804 in file "../src/MCU_B1.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;		None               void
  8485 ;; Registers used:
  8486 ;;		wreg
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;Total ram usage:        0 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    5
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_Flash_Memory_Write
  8503 ;;		_Flash_Memory_Erasing
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function _Flash_Memory_Unlock
  8509  17A3                     _Flash_Memory_Unlock:	
  8510                           
  8511                           ;MCU_B1.c: 805: PMCON2 = 0x55;
  8512                           
  8513                           ;incstack = 0
  8514                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  8515  17A3  3055               	movlw	85
  8516  17A4  0023               	movlb	3	; select bank3
  8517  17A5  0096               	movwf	22	;volatile
  8518                           
  8519                           ;MCU_B1.c: 806: PMCON2 = 0xaa;
  8520  17A6  30AA               	movlw	170
  8521  17A7  0096               	movwf	22	;volatile
  8522                           
  8523                           ;MCU_B1.c: 807: WR = 1;
  8524  17A8  1495               	bsf	21,1	;volatile
  8525                           
  8526                           ;MCU_B1.c: 808: __nop();
  8527  17A9  0000               	nop
  8528                           
  8529                           ;MCU_B1.c: 809: __nop();
  8530  17AA  0000               	nop
  8531  17AB  0008               	return
  8532  17AC                     __end_of_Flash_Memory_Unlock:	
  8533                           
  8534                           	psect	text49
  8535  0980                     __ptext49:	
  8536 ;; *************** function _Flash_Memory_Read *****************
  8537 ;; Defined at:
  8538 ;;		line 813 in file "../src/MCU_B1.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  address         1    wreg     unsigned char 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  address         1    2[BANK0 ] unsigned char 
  8543 ;;  ret             1    3[BANK0 ] unsigned char 
  8544 ;;  i               1    1[BANK0 ] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      unsigned char 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;Total ram usage:        4 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    5
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_Flash_Memory_Initialization
  8565 ;;		_Flash_Memory_Modify
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           
  8570                           ;psect for function _Flash_Memory_Read
  8571  0980                     _Flash_Memory_Read:	
  8572                           
  8573                           ;incstack = 0
  8574                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  8575                           ;Flash_Memory_Read@address stored from wreg
  8576  0980  0020               	movlb	0	; select bank0
  8577  0981  00A2               	movwf	Flash_Memory_Read@address
  8578                           
  8579                           ;MCU_B1.c: 814: char i = 0, ret = 0;
  8580  0982  01A1               	clrf	Flash_Memory_Read@i
  8581  0983  01A3               	clrf	Flash_Memory_Read@ret
  8582                           
  8583                           ;MCU_B1.c: 815: PMADRH = 0x30;
  8584  0984  3030               	movlw	48
  8585  0985  0023               	movlb	3	; select bank3
  8586  0986  0092               	movwf	18	;volatile
  8587                           
  8588                           ;MCU_B1.c: 816: PMADRL = address;
  8589  0987  0020               	movlb	0	; select bank0
  8590  0988  0822               	movf	Flash_Memory_Read@address,w
  8591  0989  0023               	movlb	3	; select bank3
  8592  098A  0091               	movwf	17	;volatile
  8593                           
  8594                           ;MCU_B1.c: 817: CFGS = 0;
  8595  098B  1315               	bcf	21,6	;volatile
  8596                           
  8597                           ;MCU_B1.c: 818: RD = 1;
  8598  098C  1415               	bsf	21,0	;volatile
  8599                           
  8600                           ;MCU_B1.c: 819: i = PMDATH;
  8601  098D  0814               	movf	20,w	;volatile
  8602  098E  0020               	movlb	0	; select bank0
  8603  098F  00A0               	movwf	??_Flash_Memory_Read
  8604  0990  0820               	movf	??_Flash_Memory_Read,w
  8605  0991  00A1               	movwf	Flash_Memory_Read@i
  8606                           
  8607                           ;MCU_B1.c: 820: ret = PMDATL;
  8608  0992  0023               	movlb	3	; select bank3
  8609  0993  0813               	movf	19,w	;volatile
  8610  0994  0020               	movlb	0	; select bank0
  8611  0995  00A0               	movwf	??_Flash_Memory_Read
  8612  0996  0820               	movf	??_Flash_Memory_Read,w
  8613  0997  00A3               	movwf	Flash_Memory_Read@ret
  8614                           
  8615                           ;MCU_B1.c: 821: return ret;
  8616  0998  0823               	movf	Flash_Memory_Read@ret,w
  8617  0999  0008               	return
  8618  099A                     __end_of_Flash_Memory_Read:	
  8619                           
  8620                           	psect	text50
  8621  1795                     __ptext50:	
  8622 ;; *************** function _DimmerLights_Main *****************
  8623 ;; Defined at:
  8624 ;;		line 407 in file "../src/Dimmer_B1.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;		None               void
  8631 ;; Registers used:
  8632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    9
  8645 ;; This function calls:
  8646 ;;		_DimmerLights_Close
  8647 ;;		_setDimmerLights_Main
  8648 ;; This function is called by:
  8649 ;;		_main
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           
  8654                           ;psect for function _DimmerLights_Main
  8655  1795                     _DimmerLights_Main:	
  8656                           
  8657                           ;Dimmer_B1.c: 410: setDimmerLights_Main(1);
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8661  1795  3001               	movlw	1
  8662  1796  318D  25DA  3197   	fcall	_setDimmerLights_Main
  8663                           
  8664                           ;Dimmer_B1.c: 421: DimmerLights_Close();
  8665  1799  3189  210C         	fcall	_DimmerLights_Close
  8666  179B  0008               	return
  8667  179C                     __end_of_DimmerLights_Main:	
  8668                           
  8669                           	psect	text51
  8670  0DDA                     __ptext51:	
  8671 ;; *************** function _setDimmerLights_Main *****************
  8672 ;; Defined at:
  8673 ;;		line 425 in file "../src/Dimmer_B1.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  lights          1    wreg     unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  lights          1   14[BANK0 ] unsigned char 
  8678 ;;  clear           1   13[BANK0 ] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;		None               void
  8681 ;; Registers used:
  8682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;Total ram usage:        2 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    8
  8695 ;; This function calls:
  8696 ;;		_DimmerLightsPointSelect
  8697 ;;		_setBuz
  8698 ;;		_setDimmerLights
  8699 ;;		_setDimmerLights_Adj
  8700 ;; This function is called by:
  8701 ;;		_DimmerLights_Main
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           
  8706                           ;psect for function _setDimmerLights_Main
  8707  0DDA                     _setDimmerLights_Main:	
  8708                           
  8709                           ;incstack = 0
  8710                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8711                           ;setDimmerLights_Main@lights stored from wreg
  8712  0DDA  0020               	movlb	0	; select bank0
  8713  0DDB  00AE               	movwf	setDimmerLights_Main@lights
  8714                           
  8715                           ;Dimmer_B1.c: 426: char clear = 1;
  8716  0DDC  01AD               	clrf	setDimmerLights_Main@clear
  8717  0DDD  0AAD               	incf	setDimmerLights_Main@clear,f
  8718                           
  8719                           ;Dimmer_B1.c: 427: DimmerLightsPointSelect(lights);
  8720  0DDE  082E               	movf	setDimmerLights_Main@lights,w
  8721  0DDF  3197  27EA  318D   	fcall	_DimmerLightsPointSelect
  8722                           
  8723                           ;Dimmer_B1.c: 447: if (DimmerLights->Trigger == 1) {
  8724  0DE2  0020               	movlb	0	; select bank0
  8725  0DE3  0859               	movf	_DimmerLights,w
  8726  0DE4  3E08               	addlw	8
  8727  0DE5  0086               	movwf	6
  8728  0DE6  0187               	clrf	7
  8729  0DE7  1D01               	btfss	1,2
  8730  0DE8  2E04               	goto	l4154
  8731                           
  8732                           ;Dimmer_B1.c: 448: if (clear == 1) {
  8733  0DE9  082D               	movf	setDimmerLights_Main@clear,w
  8734  0DEA  3A01               	xorlw	1
  8735  0DEB  1D03               	skipz
  8736  0DEC  0008               	return
  8737                           
  8738                           ;Dimmer_B1.c: 449: DimmerLights->Trigger = 0;
  8739  0DED  0859               	movf	_DimmerLights,w
  8740  0DEE  3E08               	addlw	8
  8741  0DEF  0086               	movwf	6
  8742  0DF0  0187               	clrf	7
  8743  0DF1  1101               	bcf	1,2
  8744                           
  8745                           ;Dimmer_B1.c: 450: if (DimmerLights->Switch == 1) {
  8746  0DF2  0859               	movf	_DimmerLights,w
  8747  0DF3  3E08               	addlw	8
  8748  0DF4  0086               	movwf	6
  8749  0DF5  0187               	clrf	7
  8750  0DF6  1C81               	btfss	1,1
  8751  0DF7  2DFE               	goto	l4152
  8752                           
  8753                           ;Dimmer_B1.c: 451: setDimmerLights(lights, 1);
  8754  0DF8  01A4               	clrf	setDimmerLights@status
  8755  0DF9  0AA4               	incf	setDimmerLights@status,f
  8756  0DFA  082E               	movf	setDimmerLights_Main@lights,w
  8757  0DFB  3186  26D1         	fcall	_setDimmerLights
  8758                           
  8759                           ;Dimmer_B1.c: 452: } else {
  8760  0DFD  0008               	return
  8761  0DFE                     l4152:	
  8762                           
  8763                           ;Dimmer_B1.c: 453: setDimmerLights(lights, 0);
  8764  0DFE  0020               	movlb	0	; select bank0
  8765  0DFF  01A4               	clrf	setDimmerLights@status
  8766  0E00  082E               	movf	setDimmerLights_Main@lights,w
  8767  0E01  3186  26D1         	fcall	_setDimmerLights
  8768                           
  8769                           ;Dimmer_B1.c: 454: }
  8770                           ;Dimmer_B1.c: 458: }
  8771                           ;Dimmer_B1.c: 459: } else {
  8772  0E03  0008               	return
  8773  0E04                     l4154:	
  8774                           
  8775                           ;Dimmer_B1.c: 460: if (DimmerLights->TriggerAdj == 1) {
  8776  0E04  0020               	movlb	0	; select bank0
  8777  0E05  0859               	movf	_DimmerLights,w
  8778  0E06  3E08               	addlw	8
  8779  0E07  0086               	movwf	6
  8780  0E08  0187               	clrf	7
  8781  0E09  1E01               	btfss	1,4
  8782  0E0A  0008               	return
  8783                           
  8784                           ;Dimmer_B1.c: 461: if (clear == 1) {
  8785  0E0B  082D               	movf	setDimmerLights_Main@clear,w
  8786  0E0C  3A01               	xorlw	1
  8787  0E0D  1D03               	skipz
  8788  0E0E  0008               	return
  8789                           
  8790                           ;Dimmer_B1.c: 462: DimmerLights->TriggerAdj = 0;
  8791  0E0F  0859               	movf	_DimmerLights,w
  8792  0E10  3E08               	addlw	8
  8793  0E11  0086               	movwf	6
  8794  0E12  0187               	clrf	7
  8795  0E13  1201               	bcf	1,4
  8796                           
  8797                           ;Dimmer_B1.c: 463: if (DimmerLights->AdjGo == 1) {
  8798  0E14  0859               	movf	_DimmerLights,w
  8799  0E15  3E08               	addlw	8
  8800  0E16  0086               	movwf	6
  8801  0E17  0187               	clrf	7
  8802  0E18  1D81               	btfss	1,3
  8803  0E19  2E29               	goto	l4162
  8804                           
  8805                           ;Dimmer_B1.c: 464: setDimmerLights_Adj(lights, 1);
  8806  0E1A  01A2               	clrf	setDimmerLights_Adj@status
  8807  0E1B  0AA2               	incf	setDimmerLights_Adj@status,f
  8808  0E1C  082E               	movf	setDimmerLights_Main@lights,w
  8809  0E1D  318A  22E0  318D   	fcall	_setDimmerLights_Adj
  8810                           
  8811                           ;Dimmer_B1.c: 465: setBuz(1, 100);
  8812  0E20  3064               	movlw	100
  8813  0E21  0020               	movlb	0	; select bank0
  8814  0E22  00A9               	movwf	setBuz@time
  8815  0E23  3000               	movlw	0
  8816  0E24  00AA               	movwf	setBuz@time+1
  8817  0E25  3001               	movlw	1
  8818  0E26  3186  265D         	fcall	_setBuz
  8819                           
  8820                           ;Dimmer_B1.c: 466: } else {
  8821  0E28  0008               	return
  8822  0E29                     l4162:	
  8823                           
  8824                           ;Dimmer_B1.c: 467: setDimmerLights_Adj(lights, 0);
  8825  0E29  0020               	movlb	0	; select bank0
  8826  0E2A  01A2               	clrf	setDimmerLights_Adj@status
  8827  0E2B  082E               	movf	setDimmerLights_Main@lights,w
  8828  0E2C  318A  22E0         	fcall	_setDimmerLights_Adj
  8829  0E2E  0008               	return
  8830  0E2F                     __end_of_setDimmerLights_Main:	
  8831                           
  8832                           	psect	text52
  8833  0AE0                     __ptext52:	
  8834 ;; *************** function _setDimmerLights_Adj *****************
  8835 ;; Defined at:
  8836 ;;		line 646 in file "../src/Dimmer_B1.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  lights          1    wreg     unsigned char 
  8839 ;;  status          1    2[BANK0 ] unsigned char 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  lights          1    4[BANK0 ] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;		None               void
  8844 ;; Registers used:
  8845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8851 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;Total ram usage:        3 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    6
  8858 ;; This function calls:
  8859 ;;		_DimmerLightsPointSelect
  8860 ;; This function is called by:
  8861 ;;		_setDimmerLights_Main
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _setDimmerLights_Adj
  8867  0AE0                     _setDimmerLights_Adj:	
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8871                           ;setDimmerLights_Adj@lights stored from wreg
  8872  0AE0  0020               	movlb	0	; select bank0
  8873  0AE1  00A4               	movwf	setDimmerLights_Adj@lights
  8874                           
  8875                           ;Dimmer_B1.c: 647: DimmerLightsPointSelect(lights);
  8876  0AE2  0824               	movf	setDimmerLights_Adj@lights,w
  8877  0AE3  3197  27EA  318A   	fcall	_DimmerLightsPointSelect
  8878                           
  8879                           ;Dimmer_B1.c: 648: if (status == 1) {
  8880  0AE6  0020               	movlb	0	; select bank0
  8881  0AE7  0822               	movf	setDimmerLights_Adj@status,w
  8882  0AE8  3A01               	xorlw	1
  8883  0AE9  1D03               	skipz
  8884  0AEA  2AF4               	goto	l3766
  8885                           
  8886                           ;Dimmer_B1.c: 649: DimmerLights->AdjFlag = 1;
  8887  0AEB  0859               	movf	_DimmerLights,w
  8888  0AEC  0086               	movwf	6
  8889  0AED  0187               	clrf	7
  8890  0AEE  1581               	bsf	1,3
  8891                           
  8892                           ;Dimmer_B1.c: 650: DimmerLights->Signal = 1;
  8893  0AEF  0859               	movf	_DimmerLights,w
  8894  0AF0  0086               	movwf	6
  8895  0AF1  0187               	clrf	7
  8896  0AF2  1481               	bsf	1,1
  8897                           
  8898                           ;Dimmer_B1.c: 651: } else {
  8899  0AF3  0008               	return
  8900  0AF4                     l3766:	
  8901                           
  8902                           ;Dimmer_B1.c: 652: if (DimmerLights->AdjFlag == 1) {
  8903  0AF4  0859               	movf	_DimmerLights,w
  8904  0AF5  0086               	movwf	6
  8905  0AF6  0187               	clrf	7
  8906  0AF7  1D81               	btfss	1,3
  8907  0AF8  0008               	return
  8908                           
  8909                           ;Dimmer_B1.c: 654: DimmerLights->Signal = 0;
  8910  0AF9  0859               	movf	_DimmerLights,w
  8911  0AFA  0086               	movwf	6
  8912  0AFB  0187               	clrf	7
  8913  0AFC  1081               	bcf	1,1
  8914                           
  8915                           ;Dimmer_B1.c: 655: DimmerLights->AdjFlag = 0;
  8916  0AFD  0859               	movf	_DimmerLights,w
  8917  0AFE  0086               	movwf	6
  8918  0AFF  0187               	clrf	7
  8919  0B00  1181               	bcf	1,3
  8920                           
  8921                           ;Dimmer_B1.c: 656: ;;
  8922                           ;Dimmer_B1.c: 657: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  8923  0B01  0859               	movf	_DimmerLights,w
  8924  0B02  3E04               	addlw	4
  8925  0B03  0086               	movwf	6
  8926  0B04  0187               	clrf	7
  8927  0B05  0801               	movf	1,w
  8928  0B06  00A3               	movwf	??_setDimmerLights_Adj
  8929  0B07  0859               	movf	_DimmerLights,w
  8930  0B08  3E05               	addlw	5
  8931  0B09  0086               	movwf	6
  8932  0B0A  0187               	clrf	7
  8933  0B0B  0823               	movf	??_setDimmerLights_Adj,w
  8934  0B0C  0081               	movwf	1
  8935                           
  8936                           ;Dimmer_B1.c: 665: ;;
  8937                           ;Dimmer_B1.c: 666: ;;
  8938  0B0D  0008               	return
  8939  0B0E                     __end_of_setDimmerLights_Adj:	
  8940                           
  8941                           	psect	text53
  8942  06D1                     __ptext53:	
  8943 ;; *************** function _setDimmerLights *****************
  8944 ;; Defined at:
  8945 ;;		line 593 in file "../src/Dimmer_B1.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  lights          1    wreg     unsigned char 
  8948 ;;  status          1    4[BANK0 ] unsigned char 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  lights          1    6[BANK0 ] unsigned char 
  8951 ;; Return value:  Size  Location     Type
  8952 ;;		None               void
  8953 ;; Registers used:
  8954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8960 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;Total ram usage:        3 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    7
  8967 ;; This function calls:
  8968 ;;		_DimmerLightsPointSelect
  8969 ;;		_setLED
  8970 ;;		_setMemory_GO
  8971 ;; This function is called by:
  8972 ;;		_setDimmerLights_Main
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function _setDimmerLights
  8978  06D1                     _setDimmerLights:	
  8979                           
  8980                           ;incstack = 0
  8981                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8982                           ;setDimmerLights@lights stored from wreg
  8983  06D1  0020               	movlb	0	; select bank0
  8984  06D2  00A6               	movwf	setDimmerLights@lights
  8985                           
  8986                           ;Dimmer_B1.c: 594: DimmerLightsPointSelect(lights);
  8987  06D3  0826               	movf	setDimmerLights@lights,w
  8988  06D4  3197  27EA  3186   	fcall	_DimmerLightsPointSelect
  8989                           
  8990                           ;Dimmer_B1.c: 595: Dimmer->Load = lights;
  8991  06D7  0020               	movlb	0	; select bank0
  8992  06D8  0826               	movf	setDimmerLights@lights,w
  8993  06D9  00A5               	movwf	??_setDimmerLights
  8994  06DA  0A58               	incf	_Dimmer,w
  8995  06DB  0086               	movwf	6
  8996  06DC  0187               	clrf	7
  8997  06DD  0825               	movf	??_setDimmerLights,w
  8998  06DE  0081               	movwf	1
  8999                           
  9000                           ;Dimmer_B1.c: 596: if (status == 1) {
  9001  06DF  0824               	movf	setDimmerLights@status,w
  9002  06E0  3A01               	xorlw	1
  9003  06E1  1D03               	skipz
  9004  06E2  2F1C               	goto	l3758
  9005                           
  9006                           ;Dimmer_B1.c: 597: DimmerLights->Status = 1;
  9007  06E3  0859               	movf	_DimmerLights,w
  9008  06E4  0086               	movwf	6
  9009  06E5  0187               	clrf	7
  9010  06E6  1681               	bsf	1,5
  9011                           
  9012                           ;Dimmer_B1.c: 598: setLED(lights, 0);
  9013  06E7  01A2               	clrf	setLED@command
  9014  06E8  0826               	movf	setDimmerLights@lights,w
  9015  06E9  3187  27A4  3186   	fcall	_setLED
  9016                           
  9017                           ;Dimmer_B1.c: 599: RC7=!0;
  9018  06EC  0020               	movlb	0	; select bank0
  9019  06ED  178E               	bsf	14,7	;volatile
  9020                           
  9021                           ;Dimmer_B1.c: 600: ;;
  9022                           ;Dimmer_B1.c: 602: DimmerLights->Signal = 1;
  9023  06EE  0859               	movf	_DimmerLights,w
  9024  06EF  0086               	movwf	6
  9025  06F0  0187               	clrf	7
  9026  06F1  1481               	bsf	1,1
  9027                           
  9028                           ;Dimmer_B1.c: 603: DimmerLights->DimmingTimeValue = 7;
  9029  06F2  3007               	movlw	7
  9030  06F3  00A5               	movwf	??_setDimmerLights
  9031  06F4  0859               	movf	_DimmerLights,w
  9032  06F5  3E02               	addlw	2
  9033  06F6  0086               	movwf	6
  9034  06F7  0187               	clrf	7
  9035  06F8  0825               	movf	??_setDimmerLights,w
  9036  06F9  0081               	movwf	1
  9037                           
  9038                           ;Dimmer_B1.c: 605: if (DimmerLights->StatusFlag == 0) {
  9039  06FA  0859               	movf	_DimmerLights,w
  9040  06FB  0086               	movwf	6
  9041  06FC  0187               	clrf	7
  9042  06FD  1B01               	btfsc	1,6
  9043  06FE  0008               	return
  9044                           
  9045                           ;Dimmer_B1.c: 606: DimmerLights->StatusFlag = 1;
  9046  06FF  0859               	movf	_DimmerLights,w
  9047  0700  0086               	movwf	6
  9048  0701  0187               	clrf	7
  9049  0702  1701               	bsf	1,6
  9050                           
  9051                           ;Dimmer_B1.c: 607: ;;
  9052                           ;Dimmer_B1.c: 608: setMemory_GO(0);
  9053  0703  3000               	movlw	0
  9054  0704  3189  219A         	fcall	_setMemory_GO
  9055                           
  9056                           ;Dimmer_B1.c: 611: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9057  0706  0020               	movlb	0	; select bank0
  9058  0707  0859               	movf	_DimmerLights,w
  9059  0708  3E05               	addlw	5
  9060  0709  0086               	movwf	6
  9061  070A  0187               	clrf	7
  9062  070B  0801               	movf	1,w
  9063  070C  00A5               	movwf	??_setDimmerLights
  9064  070D  0859               	movf	_DimmerLights,w
  9065  070E  3E04               	addlw	4
  9066  070F  0086               	movwf	6
  9067  0710  0187               	clrf	7
  9068  0711  0825               	movf	??_setDimmerLights,w
  9069  0712  0081               	movwf	1
  9070                           
  9071                           ;Dimmer_B1.c: 615: DimmerLights->DimmingValue = ((char)((100-60)*0.8));
  9072  0713  3020               	movlw	32
  9073  0714  00A5               	movwf	??_setDimmerLights
  9074  0715  0859               	movf	_DimmerLights,w
  9075  0716  3E04               	addlw	4
  9076  0717  0086               	movwf	6
  9077  0718  0187               	clrf	7
  9078  0719  0825               	movf	??_setDimmerLights,w
  9079  071A  0081               	movwf	1
  9080                           
  9081                           ;Dimmer_B1.c: 617: }
  9082                           ;Dimmer_B1.c: 618: } else {
  9083  071B  0008               	return
  9084  071C                     l3758:	
  9085                           
  9086                           ;Dimmer_B1.c: 619: DimmerLights->Status = 0;
  9087  071C  0859               	movf	_DimmerLights,w
  9088  071D  0086               	movwf	6
  9089  071E  0187               	clrf	7
  9090  071F  1281               	bcf	1,5
  9091                           
  9092                           ;Dimmer_B1.c: 621: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9093  0720  0859               	movf	_DimmerLights,w
  9094  0721  3E06               	addlw	6
  9095  0722  0086               	movwf	6
  9096  0723  0187               	clrf	7
  9097  0724  0801               	movf	1,w
  9098  0725  00A5               	movwf	??_setDimmerLights
  9099  0726  0859               	movf	_DimmerLights,w
  9100  0727  3E04               	addlw	4
  9101  0728  0086               	movwf	6
  9102  0729  0187               	clrf	7
  9103  072A  0825               	movf	??_setDimmerLights,w
  9104  072B  0081               	movwf	1
  9105                           
  9106                           ;Dimmer_B1.c: 628: DimmerLights->Signal = 1;
  9107  072C  0859               	movf	_DimmerLights,w
  9108  072D  0086               	movwf	6
  9109  072E  0187               	clrf	7
  9110  072F  1481               	bsf	1,1
  9111                           
  9112                           ;Dimmer_B1.c: 629: DimmerLights->AdjFlag = 0;
  9113  0730  0859               	movf	_DimmerLights,w
  9114  0731  0086               	movwf	6
  9115  0732  0187               	clrf	7
  9116  0733  1181               	bcf	1,3
  9117                           
  9118                           ;Dimmer_B1.c: 630: DimmerLights->AdjStatus = 0;
  9119  0734  0859               	movf	_DimmerLights,w
  9120  0735  0086               	movwf	6
  9121  0736  0187               	clrf	7
  9122  0737  1201               	bcf	1,4
  9123                           
  9124                           ;Dimmer_B1.c: 631: DimmerLights->DimmingTimeValue = 7;
  9125  0738  3007               	movlw	7
  9126  0739  00A5               	movwf	??_setDimmerLights
  9127  073A  0859               	movf	_DimmerLights,w
  9128  073B  3E02               	addlw	2
  9129  073C  0086               	movwf	6
  9130  073D  0187               	clrf	7
  9131  073E  0825               	movf	??_setDimmerLights,w
  9132  073F  0081               	movwf	1
  9133  0740  0008               	return
  9134  0741                     __end_of_setDimmerLights:	
  9135                           
  9136                           	psect	text54
  9137  07A4                     __ptext54:	
  9138 ;; *************** function _setLED *****************
  9139 ;; Defined at:
  9140 ;;		line 74 in file "../src/LED_B1.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  led             1    wreg     unsigned char 
  9143 ;;  command         1    2[BANK0 ] unsigned char 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  led             1    3[BANK0 ] unsigned char 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;		None               void
  9148 ;; Registers used:
  9149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9155 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;Total ram usage:        2 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    6
  9162 ;; This function calls:
  9163 ;;		_LedPointSelect
  9164 ;; This function is called by:
  9165 ;;		_setDimmerLights_ERROR
  9166 ;;		_setDimmerLights
  9167 ;;		_setLED_Initialization
  9168 ;;		_setPowerFault_Exceptions
  9169 ;;		_setSw_Initialization
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           
  9174                           ;psect for function _setLED
  9175  07A4                     _setLED:	
  9176                           
  9177                           ;incstack = 0
  9178                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9179                           ;setLED@led stored from wreg
  9180  07A4  0020               	movlb	0	; select bank0
  9181  07A5  00A3               	movwf	setLED@led
  9182                           
  9183                           ;LED_B1.c: 76: LedPointSelect(led);
  9184  07A6  0823               	movf	setLED@led,w
  9185  07A7  3189  21B5  3187   	fcall	_LedPointSelect
  9186                           
  9187                           ;LED_B1.c: 77: if(command == 0)
  9188  07AA  0020               	movlb	0	; select bank0
  9189  07AB  08A2               	movf	setLED@command,f
  9190  07AC  1D03               	skipz
  9191  07AD  2FC0               	goto	l3456
  9192                           
  9193                           ;LED_B1.c: 78: {
  9194                           ;LED_B1.c: 80: if(led == 1)
  9195  07AE  0823               	movf	setLED@led,w
  9196  07AF  3A01               	xorlw	1
  9197  07B0  1D03               	skipz
  9198  07B1  2FB4               	goto	l3448
  9199                           
  9200                           ;LED_B1.c: 81: {
  9201                           ;LED_B1.c: 85: RA3=1;
  9202  07B2  158C               	bsf	12,3	;volatile
  9203                           
  9204                           ;LED_B1.c: 87: }
  9205  07B3  0008               	return
  9206  07B4                     l3448:	
  9207                           
  9208                           ;LED_B1.c: 90: else if(led == 2)
  9209  07B4  0823               	movf	setLED@led,w
  9210  07B5  3A02               	xorlw	2
  9211  07B6  1D03               	skipz
  9212  07B7  2FBA               	goto	l3452
  9213                           
  9214                           ;LED_B1.c: 91: {
  9215                           ;LED_B1.c: 95: RC7=1;
  9216  07B8  178E               	bsf	14,7	;volatile
  9217                           
  9218                           ;LED_B1.c: 97: }
  9219  07B9  0008               	return
  9220  07BA                     l3452:	
  9221                           
  9222                           ;LED_B1.c: 110: else if(led == 99)
  9223  07BA  0823               	movf	setLED@led,w
  9224  07BB  3A63               	xorlw	99
  9225  07BC  1D03               	skipz
  9226  07BD  0008               	return
  9227                           
  9228                           ;LED_B1.c: 111: {
  9229                           ;LED_B1.c: 115: RB5=1;
  9230  07BE  168D               	bsf	13,5	;volatile
  9231                           
  9232                           ;LED_B1.c: 117: }
  9233                           ;LED_B1.c: 119: }
  9234  07BF  0008               	return
  9235  07C0                     l3456:	
  9236                           
  9237                           ;LED_B1.c: 120: else if(command == 1)
  9238  07C0  0822               	movf	setLED@command,w
  9239  07C1  3A01               	xorlw	1
  9240  07C2  1D03               	skipz
  9241  07C3  2FD6               	goto	l3470
  9242                           
  9243                           ;LED_B1.c: 121: {
  9244                           ;LED_B1.c: 123: if(led == 1)
  9245  07C4  0823               	movf	setLED@led,w
  9246  07C5  3A01               	xorlw	1
  9247  07C6  1D03               	skipz
  9248  07C7  2FCA               	goto	l3462
  9249                           
  9250                           ;LED_B1.c: 124: {
  9251                           ;LED_B1.c: 128: RA3=0;
  9252  07C8  118C               	bcf	12,3	;volatile
  9253                           
  9254                           ;LED_B1.c: 130: }
  9255  07C9  0008               	return
  9256  07CA                     l3462:	
  9257                           
  9258                           ;LED_B1.c: 133: else if(led == 2)
  9259  07CA  0823               	movf	setLED@led,w
  9260  07CB  3A02               	xorlw	2
  9261  07CC  1D03               	skipz
  9262  07CD  2FD0               	goto	l3466
  9263                           
  9264                           ;LED_B1.c: 134: {
  9265                           ;LED_B1.c: 138: RC7=0;
  9266  07CE  138E               	bcf	14,7	;volatile
  9267                           
  9268                           ;LED_B1.c: 140: }
  9269  07CF  0008               	return
  9270  07D0                     l3466:	
  9271                           
  9272                           ;LED_B1.c: 153: else if(led == 99)
  9273  07D0  0823               	movf	setLED@led,w
  9274  07D1  3A63               	xorlw	99
  9275  07D2  1D03               	skipz
  9276  07D3  0008               	return
  9277                           
  9278                           ;LED_B1.c: 154: {
  9279                           ;LED_B1.c: 158: RB5=0;
  9280  07D4  128D               	bcf	13,5	;volatile
  9281                           
  9282                           ;LED_B1.c: 160: }
  9283                           ;LED_B1.c: 162: }
  9284  07D5  0008               	return
  9285  07D6                     l3470:	
  9286                           
  9287                           ;LED_B1.c: 163: else if(command == 10)
  9288  07D6  0822               	movf	setLED@command,w
  9289  07D7  3A0A               	xorlw	10
  9290  07D8  1D03               	skipz
  9291  07D9  2FF6               	goto	l3486
  9292                           
  9293                           ;LED_B1.c: 164: {
  9294                           ;LED_B1.c: 165: LED->GO=0;
  9295  07DA  085A               	movf	_LED,w
  9296  07DB  0086               	movwf	6
  9297  07DC  0187               	clrf	7
  9298  07DD  1081               	bcf	1,1
  9299                           
  9300                           ;LED_B1.c: 166: LED->Time=0;
  9301  07DE  0A5A               	incf	_LED,w
  9302  07DF  0086               	movwf	6
  9303  07E0  0187               	clrf	7
  9304  07E1  3000               	movlw	0
  9305  07E2  3FC0               	movwi [0]fsr1
  9306  07E3  3FC1               	movwi [1]fsr1
  9307                           
  9308                           ;LED_B1.c: 168: if(led == 1)
  9309  07E4  0823               	movf	setLED@led,w
  9310  07E5  3A01               	xorlw	1
  9311  07E6  1D03               	skipz
  9312  07E7  2FEA               	goto	l3478
  9313                           
  9314                           ;LED_B1.c: 169: {
  9315                           ;LED_B1.c: 173: RA3=1;
  9316  07E8  158C               	bsf	12,3	;volatile
  9317                           
  9318                           ;LED_B1.c: 175: }
  9319  07E9  0008               	return
  9320  07EA                     l3478:	
  9321                           
  9322                           ;LED_B1.c: 178: else if(led == 2)
  9323  07EA  0823               	movf	setLED@led,w
  9324  07EB  3A02               	xorlw	2
  9325  07EC  1D03               	skipz
  9326  07ED  2FF0               	goto	l3482
  9327                           
  9328                           ;LED_B1.c: 179: {
  9329                           ;LED_B1.c: 183: RC7=1;
  9330  07EE  178E               	bsf	14,7	;volatile
  9331                           
  9332                           ;LED_B1.c: 185: }
  9333  07EF  0008               	return
  9334  07F0                     l3482:	
  9335                           
  9336                           ;LED_B1.c: 198: else if(led == 99)
  9337  07F0  0823               	movf	setLED@led,w
  9338  07F1  3A63               	xorlw	99
  9339  07F2  1D03               	skipz
  9340  07F3  0008               	return
  9341                           
  9342                           ;LED_B1.c: 199: {
  9343                           ;LED_B1.c: 203: RB5=1;
  9344  07F4  168D               	bsf	13,5	;volatile
  9345                           
  9346                           ;LED_B1.c: 205: }
  9347                           ;LED_B1.c: 207: }
  9348  07F5  0008               	return
  9349  07F6                     l3486:	
  9350                           
  9351                           ;LED_B1.c: 208: else if(command == 11)
  9352  07F6  0822               	movf	setLED@command,w
  9353  07F7  3A0B               	xorlw	11
  9354  07F8  1D03               	skipz
  9355  07F9  0008               	return
  9356                           
  9357                           ;LED_B1.c: 209: {
  9358                           ;LED_B1.c: 210: LED->GO=1;
  9359  07FA  085A               	movf	_LED,w
  9360  07FB  0086               	movwf	6
  9361  07FC  0187               	clrf	7
  9362  07FD  1481               	bsf	1,1
  9363  07FE  0008               	return
  9364  07FF                     __end_of_setLED:	
  9365                           
  9366                           	psect	text55
  9367  09B5                     __ptext55:	
  9368 ;; *************** function _LedPointSelect *****************
  9369 ;; Defined at:
  9370 ;;		line 7 in file "../src/LED_B1.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  led             1    wreg     unsigned char 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  led             1    1[BANK0 ] unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;		None               void
  9377 ;; Registers used:
  9378 ;;		wreg
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;Total ram usage:        2 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:    5
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_setLED_Initialization
  9395 ;;		_setLED
  9396 ;;		_setLED_Main
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _LedPointSelect
  9402  09B5                     _LedPointSelect:	
  9403                           
  9404                           ;incstack = 0
  9405                           ; Regs used in _LedPointSelect: [wreg]
  9406                           ;LedPointSelect@led stored from wreg
  9407  09B5  0020               	movlb	0	; select bank0
  9408  09B6  00A1               	movwf	LedPointSelect@led
  9409                           
  9410                           ;LED_B1.c: 10: if(led == 1)
  9411  09B7  0821               	movf	LedPointSelect@led,w
  9412  09B8  3A01               	xorlw	1
  9413  09B9  1D03               	skipz
  9414  09BA  29C0               	goto	l3420
  9415                           
  9416                           ;LED_B1.c: 11: {
  9417                           ;LED_B1.c: 12: LED=&VarLED1;
  9418  09BB  3061               	movlw	_VarLED1& (0+255)
  9419  09BC  00A0               	movwf	??_LedPointSelect
  9420  09BD  0820               	movf	??_LedPointSelect,w
  9421  09BE  00DA               	movwf	_LED
  9422                           
  9423                           ;LED_B1.c: 13: }
  9424  09BF  0008               	return
  9425  09C0                     l3420:	
  9426                           
  9427                           ;LED_B1.c: 16: else if(led == 2)
  9428  09C0  0821               	movf	LedPointSelect@led,w
  9429  09C1  3A02               	xorlw	2
  9430  09C2  1D03               	skipz
  9431  09C3  29C9               	goto	l3424
  9432                           
  9433                           ;LED_B1.c: 17: {
  9434                           ;LED_B1.c: 18: LED=&VarLED2;
  9435  09C4  3065               	movlw	_VarLED2& (0+255)
  9436  09C5  00A0               	movwf	??_LedPointSelect
  9437  09C6  0820               	movf	??_LedPointSelect,w
  9438  09C7  00DA               	movwf	_LED
  9439                           
  9440                           ;LED_B1.c: 19: }
  9441  09C8  0008               	return
  9442  09C9                     l3424:	
  9443                           
  9444                           ;LED_B1.c: 28: else if(led == 99)
  9445  09C9  0821               	movf	LedPointSelect@led,w
  9446  09CA  3A63               	xorlw	99
  9447  09CB  1D03               	skipz
  9448  09CC  0008               	return
  9449                           
  9450                           ;LED_B1.c: 29: {
  9451                           ;LED_B1.c: 30: LED=&VarErrLED;
  9452  09CD  305D               	movlw	_VarErrLED& (0+255)
  9453  09CE  00A0               	movwf	??_LedPointSelect
  9454  09CF  0820               	movf	??_LedPointSelect,w
  9455  09D0  00DA               	movwf	_LED
  9456  09D1  0008               	return
  9457  09D2                     __end_of_LedPointSelect:	
  9458                           
  9459                           	psect	text56
  9460  090C                     __ptext56:	
  9461 ;; *************** function _DimmerLights_Close *****************
  9462 ;; Defined at:
  9463 ;;		line 396 in file "../src/Dimmer_B1.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;		None               void
  9470 ;; Registers used:
  9471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    6
  9484 ;; This function calls:
  9485 ;;		_getDimmerLights_StatusFlag
  9486 ;;		_setMemory_GO
  9487 ;; This function is called by:
  9488 ;;		_DimmerLights_Main
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           
  9493                           ;psect for function _DimmerLights_Close
  9494  090C                     _DimmerLights_Close:	
  9495                           
  9496                           ;Dimmer_B1.c: 397: if (Dimmer->Detect == 1) {
  9497                           
  9498                           ;incstack = 0
  9499                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9500  090C  0020               	movlb	0	; select bank0
  9501  090D  0858               	movf	_Dimmer,w
  9502  090E  0086               	movwf	6
  9503  090F  0187               	clrf	7
  9504  0910  1C01               	btfss	1,0
  9505  0911  0008               	return
  9506                           
  9507                           ;Dimmer_B1.c: 398: Dimmer->Detect = 0;
  9508  0912  0858               	movf	_Dimmer,w
  9509  0913  0086               	movwf	6
  9510  0914  0187               	clrf	7
  9511  0915  1001               	bcf	1,0
  9512                           
  9513                           ;Dimmer_B1.c: 399: if (getDimmerLights_StatusFlag() == 0) {
  9514  0916  3197  27CA  3189   	fcall	_getDimmerLights_StatusFlag
  9515  0919  3800               	iorlw	0
  9516  091A  1D03               	skipz
  9517  091B  0008               	return
  9518                           
  9519                           ;Dimmer_B1.c: 400: ;;
  9520                           ;Dimmer_B1.c: 401: setMemory_GO(1);
  9521  091C  3001               	movlw	1
  9522  091D  3189  219A         	fcall	_setMemory_GO
  9523  091F  0008               	return
  9524  0920                     __end_of_DimmerLights_Close:	
  9525                           
  9526                           	psect	text57
  9527  099A                     __ptext57:	
  9528 ;; *************** function _setMemory_GO *****************
  9529 ;; Defined at:
  9530 ;;		line 882 in file "../src/MCU_B1.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  command         1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  command         1    2[BANK0 ] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;		None               void
  9537 ;; Registers used:
  9538 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;Total ram usage:        3 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    5
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_DimmerLights_Close
  9555 ;;		_setDimmerLights
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           
  9560                           ;psect for function _setMemory_GO
  9561  099A                     _setMemory_GO:	
  9562                           
  9563                           ;incstack = 0
  9564                           ; Regs used in _setMemory_GO: [wreg+fsr1l+fsr1h+status,2+status,0]
  9565                           ;setMemory_GO@command stored from wreg
  9566  099A  0020               	movlb	0	; select bank0
  9567  099B  00A2               	movwf	setMemory_GO@command
  9568                           
  9569                           ;MCU_B1.c: 883: Memory->GO = command;
  9570  099C  086E               	movf	_Memory,w
  9571  099D  3E24               	addlw	36
  9572  099E  0086               	movwf	6
  9573  099F  3001               	movlw	1	; select bank2/3
  9574  09A0  0087               	movwf	7
  9575  09A1  0822               	movf	setMemory_GO@command,w
  9576  09A2  1081               	bcf	1,1
  9577  09A3  1D03               	skipz
  9578  09A4  1481               	bsf	1,1
  9579                           
  9580                           ;MCU_B1.c: 884: if (command == 0) {
  9581  09A5  08A2               	movf	setMemory_GO@command,f
  9582  09A6  1D03               	skipz
  9583  09A7  0008               	return
  9584                           
  9585                           ;MCU_B1.c: 885: Memory->Time = command;
  9586  09A8  0822               	movf	setMemory_GO@command,w
  9587  09A9  00A0               	movwf	??_setMemory_GO
  9588  09AA  01A1               	clrf	??_setMemory_GO+1
  9589  09AB  086E               	movf	_Memory,w
  9590  09AC  3E22               	addlw	34
  9591  09AD  0086               	movwf	6
  9592  09AE  3001               	movlw	1	; select bank2/3
  9593  09AF  0087               	movwf	7
  9594  09B0  0820               	movf	??_setMemory_GO,w
  9595  09B1  3FC0               	movwi [0]fsr1
  9596  09B2  0821               	movf	??_setMemory_GO+1,w
  9597  09B3  3FC1               	movwi [1]fsr1
  9598  09B4  0008               	return
  9599  09B5                     __end_of_setMemory_GO:	
  9600                           
  9601                           	psect	text58
  9602  17CA                     __ptext58:	
  9603 ;; *************** function _getDimmerLights_StatusFlag *****************
  9604 ;; Defined at:
  9605 ;;		line 475 in file "../src/Dimmer_B1.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  Status          1    0[BANK0 ] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      unsigned char 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;Total ram usage:        1 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    5
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_DimmerLights_Close
  9630 ;;		_DimmerLights_Exceptions
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           
  9635                           ;psect for function _getDimmerLights_StatusFlag
  9636  17CA                     _getDimmerLights_StatusFlag:	
  9637                           
  9638                           ;Dimmer_B1.c: 476: char Status = 0;
  9639                           
  9640                           ;incstack = 0
  9641                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
  9642  17CA  0020               	movlb	0	; select bank0
  9643  17CB  01A0               	clrf	getDimmerLights_StatusFlag@Status
  9644                           
  9645                           ;Dimmer_B1.c: 487: Status = (DimmerLights1.StatusFlag == 1) ? 1 : 0;
  9646  17CC  3000               	movlw	0
  9647  17CD  0021               	movlb	1	; select bank1
  9648  17CE  1B34               	btfsc	_DimmerLights1^(0+128),6
  9649  17CF  3001               	movlw	1
  9650  17D0  0020               	movlb	0	; select bank0
  9651  17D1  00A0               	movwf	getDimmerLights_StatusFlag@Status
  9652                           
  9653                           ;Dimmer_B1.c: 490: return Status;
  9654  17D2  0820               	movf	getDimmerLights_StatusFlag@Status,w
  9655  17D3  0008               	return
  9656  17D4                     __end_of_getDimmerLights_StatusFlag:	
  9657                           
  9658                           	psect	text59
  9659  0809                     __ptext59:	
  9660 ;; *************** function _DimmerLights_Initialization *****************
  9661 ;; Defined at:
  9662 ;;		line 334 in file "../src/Dimmer_B1.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;		None               void
  9669 ;; Registers used:
  9670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;Total ram usage:        1 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    7
  9683 ;; This function calls:
  9684 ;;		_Dimmer_Initialization
  9685 ;;		_setDimmerLights_Initialization
  9686 ;; This function is called by:
  9687 ;;		_main
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           
  9692                           ;psect for function _DimmerLights_Initialization
  9693  0809                     _DimmerLights_Initialization:	
  9694                           
  9695                           ;Dimmer_B1.c: 337: DimmerLights11 = &DimmerLights1;
  9696                           
  9697                           ;incstack = 0
  9698                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9699  0809  30B4               	movlw	_DimmerLights1& (0+255)
  9700  080A  0020               	movlb	0	; select bank0
  9701  080B  00A4               	movwf	??_DimmerLights_Initialization
  9702  080C  0824               	movf	??_DimmerLights_Initialization,w
  9703  080D  00F8               	movwf	_DimmerLights11
  9704                           
  9705                           ;Dimmer_B1.c: 338: setDimmerLights_Initialization(1);
  9706  080E  3001               	movlw	1
  9707  080F  318A  2261  3188   	fcall	_setDimmerLights_Initialization
  9708                           
  9709                           ;Dimmer_B1.c: 352: Dimmer_Initialization();
  9710  0812  3197  276F         	fcall	_Dimmer_Initialization
  9711  0814  0008               	return
  9712  0815                     __end_of_DimmerLights_Initialization:	
  9713                           
  9714                           	psect	text60
  9715  0A61                     __ptext60:	
  9716 ;; *************** function _setDimmerLights_Initialization *****************
  9717 ;; Defined at:
  9718 ;;		line 357 in file "../src/Dimmer_B1.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;  lights          1    wreg     unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  lights          1    3[BANK0 ] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:        2 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    6
  9739 ;; This function calls:
  9740 ;;		_DimmerLightsPointSelect
  9741 ;; This function is called by:
  9742 ;;		_DimmerLights_Initialization
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _setDimmerLights_Initialization
  9748  0A61                     _setDimmerLights_Initialization:	
  9749                           
  9750                           ;incstack = 0
  9751                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9752                           ;setDimmerLights_Initialization@lights stored from wreg
  9753  0A61  0020               	movlb	0	; select bank0
  9754  0A62  00A3               	movwf	setDimmerLights_Initialization@lights
  9755                           
  9756                           ;Dimmer_B1.c: 359: DimmerLightsPointSelect(lights);
  9757  0A63  0823               	movf	setDimmerLights_Initialization@lights,w
  9758  0A64  3197  27EA         	fcall	_DimmerLightsPointSelect
  9759                           
  9760                           ;Dimmer_B1.c: 360: DimmerLights->Clear = 1;
  9761  0A66  0020               	movlb	0	; select bank0
  9762  0A67  0859               	movf	_DimmerLights,w
  9763  0A68  3E09               	addlw	9
  9764  0A69  0086               	movwf	6
  9765  0A6A  0187               	clrf	7
  9766  0A6B  1501               	bsf	1,2
  9767                           
  9768                           ;Dimmer_B1.c: 366: DimmerLights->MaxmumValue = ((char)((100-60)*0.8));
  9769  0A6C  3020               	movlw	32
  9770  0A6D  00A2               	movwf	??_setDimmerLights_Initialization
  9771  0A6E  0859               	movf	_DimmerLights,w
  9772  0A6F  3E05               	addlw	5
  9773  0A70  0086               	movwf	6
  9774  0A71  0187               	clrf	7
  9775  0A72  0822               	movf	??_setDimmerLights_Initialization,w
  9776  0A73  0081               	movwf	1
  9777                           
  9778                           ;Dimmer_B1.c: 367: DimmerLights->MinimumValue = ((char)((100-25)*0.8));
  9779  0A74  303C               	movlw	60
  9780  0A75  00A2               	movwf	??_setDimmerLights_Initialization
  9781  0A76  0859               	movf	_DimmerLights,w
  9782  0A77  3E06               	addlw	6
  9783  0A78  0086               	movwf	6
  9784  0A79  0187               	clrf	7
  9785  0A7A  0822               	movf	??_setDimmerLights_Initialization,w
  9786  0A7B  0081               	movwf	1
  9787                           
  9788                           ;Dimmer_B1.c: 377: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9789  0A7C  0859               	movf	_DimmerLights,w
  9790  0A7D  3E06               	addlw	6
  9791  0A7E  0086               	movwf	6
  9792  0A7F  0187               	clrf	7
  9793  0A80  0801               	movf	1,w
  9794  0A81  00A2               	movwf	??_setDimmerLights_Initialization
  9795  0A82  0859               	movf	_DimmerLights,w
  9796  0A83  3E04               	addlw	4
  9797  0A84  0086               	movwf	6
  9798  0A85  0187               	clrf	7
  9799  0A86  0822               	movf	??_setDimmerLights_Initialization,w
  9800  0A87  0081               	movwf	1
  9801  0A88  0008               	return
  9802  0A89                     __end_of_setDimmerLights_Initialization:	
  9803                           
  9804                           	psect	text61
  9805  176F                     __ptext61:	
  9806 ;; *************** function _Dimmer_Initialization *****************
  9807 ;; Defined at:
  9808 ;;		line 786 in file "../src/Dimmer_B1.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;		None
  9813 ;; Return value:  Size  Location     Type
  9814 ;;		None               void
  9815 ;; Registers used:
  9816 ;;		wreg
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;Total ram usage:        1 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    5
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_DimmerLights_Initialization
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _Dimmer_Initialization
  9838  176F                     _Dimmer_Initialization:	
  9839                           
  9840                           ;Dimmer_B1.c: 788: Dimmer = &Dimmer1;
  9841                           
  9842                           ;incstack = 0
  9843                           ; Regs used in _Dimmer_Initialization: [wreg]
  9844  176F  3069               	movlw	_Dimmer1& (0+255)
  9845  1770  0020               	movlb	0	; select bank0
  9846  1771  00A0               	movwf	??_Dimmer_Initialization
  9847  1772  0820               	movf	??_Dimmer_Initialization,w
  9848  1773  00D8               	movwf	_Dimmer
  9849  1774  0008               	return
  9850  1775                     __end_of_Dimmer_Initialization:	
  9851                           
  9852                           	psect	text62
  9853  175E                     __ptext62:	
  9854 ;; *************** function _DelayOff_Main *****************
  9855 ;; Defined at:
  9856 ;;		line 41 in file "../src/DelayOff_B1.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;		None               void
  9863 ;; Registers used:
  9864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;Total ram usage:        0 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:    8
  9877 ;; This function calls:
  9878 ;;		_DlyOff_Main
  9879 ;; This function is called by:
  9880 ;;		_main
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           
  9885                           ;psect for function _DelayOff_Main
  9886  175E                     _DelayOff_Main:	
  9887                           
  9888                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9892  175E  3001               	movlw	1
  9893  175F  318F  279E         	fcall	_DlyOff_Main
  9894  1761  0008               	return
  9895  1762                     __end_of_DelayOff_Main:	
  9896                           
  9897                           	psect	text63
  9898  0F9E                     __ptext63:	
  9899 ;; *************** function _DlyOff_Main *****************
  9900 ;; Defined at:
  9901 ;;		line 62 in file "../src/DelayOff_B1.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  sw              1    wreg     unsigned char 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  sw              1   15[BANK0 ] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;		None               void
  9908 ;; Registers used:
  9909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;Total ram usage:        3 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    7
  9922 ;; This function calls:
  9923 ;;		_DelayOffPointSelect
  9924 ;;		_setBuz
  9925 ;;		_setDimmerLights_Switch
  9926 ;;		_setDimmerLights_Trigger
  9927 ;;		_setSw_Status
  9928 ;; This function is called by:
  9929 ;;		_DelayOff_Main
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _DlyOff_Main
  9935  0F9E                     _DlyOff_Main:	
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9939                           ;DlyOff_Main@sw stored from wreg
  9940  0F9E  0020               	movlb	0	; select bank0
  9941  0F9F  00AF               	movwf	DlyOff_Main@sw
  9942                           
  9943                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
  9944  0FA0  082F               	movf	DlyOff_Main@sw,w
  9945  0FA1  3197  27D4  318F   	fcall	_DelayOffPointSelect
  9946                           
  9947                           ;DelayOff_B1.c: 64: if (DelayOff->GO) {
  9948  0FA4  0020               	movlb	0	; select bank0
  9949  0FA5  0857               	movf	_DelayOff,w
  9950  0FA6  0086               	movwf	6
  9951  0FA7  0187               	clrf	7
  9952  0FA8  1C81               	btfss	1,1
  9953  0FA9  0008               	return
  9954                           
  9955                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
  9956  0FAA  0857               	movf	_DelayOff,w
  9957  0FAB  3E02               	addlw	2
  9958  0FAC  0086               	movwf	6
  9959  0FAD  0187               	clrf	7
  9960  0FAE  3001               	movlw	1
  9961  0FAF  0781               	addwf	1,f
  9962  0FB0  3141               	addfsr 1,1
  9963  0FB1  1803               	skipnc
  9964  0FB2  0A81               	incf	1,f
  9965                           
  9966                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 5600) {
  9967  0FB3  0857               	movf	_DelayOff,w
  9968  0FB4  3E02               	addlw	2
  9969  0FB5  0086               	movwf	6
  9970  0FB6  0187               	clrf	7
  9971  0FB7  3F40               	moviw [0]fsr1
  9972  0FB8  00AD               	movwf	??_DlyOff_Main
  9973  0FB9  3F41               	moviw [1]fsr1
  9974  0FBA  00AE               	movwf	??_DlyOff_Main+1
  9975  0FBB  3015               	movlw	21
  9976  0FBC  022E               	subwf	??_DlyOff_Main+1,w
  9977  0FBD  30E0               	movlw	224
  9978  0FBE  1903               	skipnz
  9979  0FBF  022D               	subwf	??_DlyOff_Main,w
  9980  0FC0  1C03               	skipc
  9981  0FC1  0008               	return
  9982                           
  9983                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
  9984  0FC2  0857               	movf	_DelayOff,w
  9985  0FC3  3E02               	addlw	2
  9986  0FC4  0086               	movwf	6
  9987  0FC5  0187               	clrf	7
  9988  0FC6  3000               	movlw	0
  9989  0FC7  3FC0               	movwi [0]fsr1
  9990  0FC8  3FC1               	movwi [1]fsr1
  9991                           
  9992                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
  9993  0FC9  3001               	movlw	1
  9994  0FCA  00AD               	movwf	??_DlyOff_Main
  9995  0FCB  0857               	movf	_DelayOff,w
  9996  0FCC  3E04               	addlw	4
  9997  0FCD  0086               	movwf	6
  9998  0FCE  0187               	clrf	7
  9999  0FCF  082D               	movf	??_DlyOff_Main,w
 10000  0FD0  0781               	addwf	1,f
 10001                           
 10002                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 10003  0FD1  0857               	movf	_DelayOff,w
 10004  0FD2  3E04               	addlw	4
 10005  0FD3  0086               	movwf	6
 10006  0FD4  0187               	clrf	7
 10007  0FD5  0A57               	incf	_DelayOff,w
 10008  0FD6  0084               	movwf	4
 10009  0FD7  0185               	clrf	5
 10010  0FD8  0800               	movf	0,w
 10011  0FD9  0201               	subwf	1,w
 10012  0FDA  1C03               	skipc
 10013  0FDB  0008               	return
 10014                           
 10015                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 10016  0FDC  0857               	movf	_DelayOff,w
 10017  0FDD  3E04               	addlw	4
 10018  0FDE  0086               	movwf	6
 10019  0FDF  0187               	clrf	7
 10020  0FE0  0181               	clrf	1
 10021                           
 10022                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 10023  0FE1  0857               	movf	_DelayOff,w
 10024  0FE2  0086               	movwf	6
 10025  0FE3  0187               	clrf	7
 10026  0FE4  1081               	bcf	1,1
 10027                           
 10028                           ;DelayOff_B1.c: 72: setSw_Status(sw, 0);
 10029  0FE5  01A2               	clrf	setSw_Status@command
 10030  0FE6  082F               	movf	DlyOff_Main@sw,w
 10031  0FE7  3188  2053  318F   	fcall	_setSw_Status
 10032                           
 10033                           ;DelayOff_B1.c: 73: ;;
 10034                           ;DelayOff_B1.c: 74: ;;
 10035                           ;DelayOff_B1.c: 75: setDimmerLights_Trigger(sw, 1);
 10036  0FEA  0020               	movlb	0	; select bank0
 10037  0FEB  01A2               	clrf	setDimmerLights_Trigger@command
 10038  0FEC  0AA2               	incf	setDimmerLights_Trigger@command,f
 10039  0FED  082F               	movf	DlyOff_Main@sw,w
 10040  0FEE  3188  208C  318F   	fcall	_setDimmerLights_Trigger
 10041                           
 10042                           ;DelayOff_B1.c: 76: setDimmerLights_Switch(sw, 0);
 10043  0FF1  0020               	movlb	0	; select bank0
 10044  0FF2  01A2               	clrf	setDimmerLights_Switch@command
 10045  0FF3  082F               	movf	DlyOff_Main@sw,w
 10046  0FF4  3188  207D  318F   	fcall	_setDimmerLights_Switch
 10047                           
 10048                           ;DelayOff_B1.c: 77: ;;
 10049                           ;DelayOff_B1.c: 78: setBuz(1, 100);
 10050  0FF7  3064               	movlw	100
 10051  0FF8  0020               	movlb	0	; select bank0
 10052  0FF9  00A9               	movwf	setBuz@time
 10053  0FFA  3000               	movlw	0
 10054  0FFB  00AA               	movwf	setBuz@time+1
 10055  0FFC  3001               	movlw	1
 10056  0FFD  3186  265D         	fcall	_setBuz
 10057  0FFF  0008               	return
 10058  1000                     __end_of_DlyOff_Main:	
 10059                           
 10060                           	psect	text64
 10061  0853                     __ptext64:	
 10062 ;; *************** function _setSw_Status *****************
 10063 ;; Defined at:
 10064 ;;		line 105 in file "../src/Switch_B1.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  sw              1    wreg     unsigned char 
 10067 ;;  command         1    2[BANK0 ] unsigned char 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;  sw              1    3[BANK0 ] unsigned char 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;		None               void
 10072 ;; Registers used:
 10073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10079 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;Total ram usage:        2 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    6
 10086 ;; This function calls:
 10087 ;;		_SwPointSelect
 10088 ;; This function is called by:
 10089 ;;		_DlyOff_Main
 10090 ;;		_setDimmerLights_ERROR
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _setSw_Status
 10096  0853                     _setSw_Status:	
 10097                           
 10098                           ;incstack = 0
 10099                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10100                           ;setSw_Status@sw stored from wreg
 10101  0853  0020               	movlb	0	; select bank0
 10102  0854  00A3               	movwf	setSw_Status@sw
 10103                           
 10104                           ;Switch_B1.c: 106: SwPointSelect(sw);
 10105  0855  0823               	movf	setSw_Status@sw,w
 10106  0856  3197  27F5         	fcall	_SwPointSelect
 10107                           
 10108                           ;Switch_B1.c: 107: Sw->Status = command;
 10109  0858  0020               	movlb	0	; select bank0
 10110  0859  085C               	movf	_Sw,w
 10111  085A  0086               	movwf	6
 10112  085B  0187               	clrf	7
 10113  085C  0822               	movf	setSw_Status@command,w
 10114  085D  1301               	bcf	1,6
 10115  085E  1D03               	skipz
 10116  085F  1701               	bsf	1,6
 10117  0860  0008               	return
 10118  0861                     __end_of_setSw_Status:	
 10119                           
 10120                           	psect	text65
 10121  17F5                     __ptext65:	
 10122 ;; *************** function _SwPointSelect *****************
 10123 ;; Defined at:
 10124 ;;		line 17 in file "../src/Switch_B1.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  sw              1    wreg     unsigned char 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  sw              1    1[BANK0 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;		None               void
 10131 ;; Registers used:
 10132 ;;		wreg
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;Total ram usage:        2 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    5
 10145 ;; This function calls:
 10146 ;;		Nothing
 10147 ;; This function is called by:
 10148 ;;		_setSw_Enable
 10149 ;;		_setSw_Status
 10150 ;;		_setSw_Main
 10151 ;;		_Sw_Detect
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _SwPointSelect
 10157  17F5                     _SwPointSelect:	
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _SwPointSelect: [wreg]
 10161                           ;SwPointSelect@sw stored from wreg
 10162  17F5  0020               	movlb	0	; select bank0
 10163  17F6  00A1               	movwf	SwPointSelect@sw
 10164                           
 10165                           ;Switch_B1.c: 20: if (sw == 1) {
 10166  17F7  0821               	movf	SwPointSelect@sw,w
 10167  17F8  3A01               	xorlw	1
 10168  17F9  1D03               	skipz
 10169  17FA  0008               	return
 10170                           
 10171                           ;Switch_B1.c: 21: Sw = &Sw1;
 10172  17FB  30CF               	movlw	_Sw1& (0+255)
 10173  17FC  00A0               	movwf	??_SwPointSelect
 10174  17FD  0820               	movf	??_SwPointSelect,w
 10175  17FE  00DC               	movwf	_Sw
 10176  17FF  0008               	return
 10177  1800                     __end_of_SwPointSelect:	
 10178                           
 10179                           	psect	text66
 10180  088C                     __ptext66:	
 10181 ;; *************** function _setDimmerLights_Trigger *****************
 10182 ;; Defined at:
 10183 ;;		line 705 in file "../src/Dimmer_B1.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  lights          1    wreg     unsigned char 
 10186 ;;  command         1    2[BANK0 ] unsigned char 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  lights          1    3[BANK0 ] unsigned char 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;		None               void
 10191 ;; Registers used:
 10192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;Total ram usage:        2 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:    6
 10205 ;; This function calls:
 10206 ;;		_DimmerLightsPointSelect
 10207 ;; This function is called by:
 10208 ;;		_DlyOff_Main
 10209 ;;		_Sw_DimmerOnFunc
 10210 ;;		_Sw_DimmerOffFunc
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           
 10215                           ;psect for function _setDimmerLights_Trigger
 10216  088C                     _setDimmerLights_Trigger:	
 10217                           
 10218                           ;incstack = 0
 10219                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10220                           ;setDimmerLights_Trigger@lights stored from wreg
 10221  088C  0020               	movlb	0	; select bank0
 10222  088D  00A3               	movwf	setDimmerLights_Trigger@lights
 10223                           
 10224                           ;Dimmer_B1.c: 707: DimmerLightsPointSelect(lights);
 10225  088E  0823               	movf	setDimmerLights_Trigger@lights,w
 10226  088F  3197  27EA         	fcall	_DimmerLightsPointSelect
 10227                           
 10228                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = command;
 10229  0891  0020               	movlb	0	; select bank0
 10230  0892  0859               	movf	_DimmerLights,w
 10231  0893  3E08               	addlw	8
 10232  0894  0086               	movwf	6
 10233  0895  0187               	clrf	7
 10234  0896  0822               	movf	setDimmerLights_Trigger@command,w
 10235  0897  1101               	bcf	1,2
 10236  0898  1D03               	skipz
 10237  0899  1501               	bsf	1,2
 10238  089A  0008               	return
 10239  089B                     __end_of_setDimmerLights_Trigger:	
 10240                           
 10241                           	psect	text67
 10242  087D                     __ptext67:	
 10243 ;; *************** function _setDimmerLights_Switch *****************
 10244 ;; Defined at:
 10245 ;;		line 693 in file "../src/Dimmer_B1.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  lights          1    wreg     unsigned char 
 10248 ;;  command         1    2[BANK0 ] unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  lights          1    3[BANK0 ] unsigned char 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;		None               void
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10260 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;Total ram usage:        2 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    6
 10267 ;; This function calls:
 10268 ;;		_DimmerLightsPointSelect
 10269 ;; This function is called by:
 10270 ;;		_DlyOff_Main
 10271 ;;		_Sw_DimmerOnFunc
 10272 ;;		_Sw_DimmerOffFunc
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           
 10277                           ;psect for function _setDimmerLights_Switch
 10278  087D                     _setDimmerLights_Switch:	
 10279                           
 10280                           ;incstack = 0
 10281                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10282                           ;setDimmerLights_Switch@lights stored from wreg
 10283  087D  0020               	movlb	0	; select bank0
 10284  087E  00A3               	movwf	setDimmerLights_Switch@lights
 10285                           
 10286                           ;Dimmer_B1.c: 695: DimmerLightsPointSelect(lights);
 10287  087F  0823               	movf	setDimmerLights_Switch@lights,w
 10288  0880  3197  27EA         	fcall	_DimmerLightsPointSelect
 10289                           
 10290                           ;Dimmer_B1.c: 696: DimmerLights->Switch = command;
 10291  0882  0020               	movlb	0	; select bank0
 10292  0883  0859               	movf	_DimmerLights,w
 10293  0884  3E08               	addlw	8
 10294  0885  0086               	movwf	6
 10295  0886  0187               	clrf	7
 10296  0887  0822               	movf	setDimmerLights_Switch@command,w
 10297  0888  1081               	bcf	1,1
 10298  0889  1D03               	skipz
 10299  088A  1481               	bsf	1,1
 10300  088B  0008               	return
 10301  088C                     __end_of_setDimmerLights_Switch:	
 10302                           
 10303                           	psect	text68
 10304  17EA                     __ptext68:	
 10305 ;; *************** function _DimmerLightsPointSelect *****************
 10306 ;; Defined at:
 10307 ;;		line 315 in file "../src/Dimmer_B1.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  lights          1    wreg     unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  lights          1    1[BANK0 ] unsigned char 
 10312 ;; Return value:  Size  Location     Type
 10313 ;;		None               void
 10314 ;; Registers used:
 10315 ;;		wreg
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;Total ram usage:        2 bytes
 10326 ;; Hardware stack levels used:    1
 10327 ;; Hardware stack levels required when called:    5
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_setDimmerLights_Initialization
 10332 ;;		_setDimmerLights_Main
 10333 ;;		_setDimmerLights_ERROR
 10334 ;;		_setDimmerLights_TriggerERROR
 10335 ;;		_setDimmerLights
 10336 ;;		_setDimmerLights_Adj
 10337 ;;		_setDimmerLights_Switch
 10338 ;;		_setDimmerLights_AdjGo
 10339 ;;		_setDimmerLights_Trigger
 10340 ;;		_setDimmerLights_TriggerAdj
 10341 ;;		_setDimmerLights_GO
 10342 ;;		_setDimmerLights_AdjRF
 10343 ;;		_setDimmerLights_MaxmumValue
 10344 ;;		_setDimmerLights_Clear
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function _DimmerLightsPointSelect
 10350  17EA                     _DimmerLightsPointSelect:	
 10351                           
 10352                           ;incstack = 0
 10353                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 10354                           ;DimmerLightsPointSelect@lights stored from wreg
 10355  17EA  0020               	movlb	0	; select bank0
 10356  17EB  00A1               	movwf	DimmerLightsPointSelect@lights
 10357                           
 10358                           ;Dimmer_B1.c: 317: if (lights == 1) {
 10359  17EC  0821               	movf	DimmerLightsPointSelect@lights,w
 10360  17ED  3A01               	xorlw	1
 10361  17EE  1D03               	skipz
 10362  17EF  0008               	return
 10363                           
 10364                           ;Dimmer_B1.c: 318: DimmerLights = &DimmerLights1;
 10365  17F0  30B4               	movlw	_DimmerLights1& (0+255)
 10366  17F1  00A0               	movwf	??_DimmerLightsPointSelect
 10367  17F2  0820               	movf	??_DimmerLightsPointSelect,w
 10368  17F3  00D9               	movwf	_DimmerLights
 10369  17F4  0008               	return
 10370  17F5                     __end_of_DimmerLightsPointSelect:	
 10371                           
 10372                           	psect	text69
 10373  065D                     __ptext69:	
 10374 ;; *************** function _setBuz *****************
 10375 ;; Defined at:
 10376 ;;		line 30 in file "../src/Buzzer_B1.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  count           1    wreg     unsigned char 
 10379 ;;  time            2    9[BANK0 ] int 
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;  count           1   12[BANK0 ] unsigned char 
 10382 ;; Return value:  Size  Location     Type
 10383 ;;		None               void
 10384 ;; Registers used:
 10385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;Total ram usage:        4 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:    6
 10398 ;; This function calls:
 10399 ;;		___awdiv
 10400 ;; This function is called by:
 10401 ;;		_DlyOff_Main
 10402 ;;		_setDimmerLights_Main
 10403 ;;		_DimmerLights_Exceptions
 10404 ;;		_setSw_Main
 10405 ;;		_Sw_DimmerOnFunc
 10406 ;;		_my_Main
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           
 10411                           ;psect for function _setBuz
 10412  065D                     _setBuz:	
 10413                           
 10414                           ;incstack = 0
 10415                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10416                           ;setBuz@count stored from wreg
 10417  065D  0020               	movlb	0	; select bank0
 10418  065E  00AC               	movwf	setBuz@count
 10419                           
 10420                           ;Buzzer_B1.c: 31: Buz = &Buz1;
 10421  065F  30C3               	movlw	_Buz1& (0+255)
 10422  0660  00AB               	movwf	??_setBuz
 10423  0661  082B               	movf	??_setBuz,w
 10424  0662  00D6               	movwf	_Buz
 10425                           
 10426                           ;Buzzer_B1.c: 32: time /= 10;
 10427  0663  300A               	movlw	10
 10428  0664  00A0               	movwf	___awdiv@divisor
 10429  0665  3000               	movlw	0
 10430  0666  00A1               	movwf	___awdiv@divisor+1
 10431  0667  082A               	movf	setBuz@time+1,w
 10432  0668  01A3               	clrf	___awdiv@dividend+1
 10433  0669  07A3               	addwf	___awdiv@dividend+1,f
 10434  066A  0829               	movf	setBuz@time,w
 10435  066B  01A2               	clrf	___awdiv@dividend
 10436  066C  07A2               	addwf	___awdiv@dividend,f
 10437  066D  318D  2586  3186   	fcall	___awdiv
 10438  0670  0020               	movlb	0	; select bank0
 10439  0671  0821               	movf	?___awdiv+1,w
 10440  0672  01AA               	clrf	setBuz@time+1
 10441  0673  07AA               	addwf	setBuz@time+1,f
 10442  0674  0820               	movf	?___awdiv,w
 10443  0675  01A9               	clrf	setBuz@time
 10444  0676  07A9               	addwf	setBuz@time,f
 10445                           
 10446                           ;Buzzer_B1.c: 33: if (Buz->Enable == 1) {
 10447  0677  0856               	movf	_Buz,w
 10448  0678  0086               	movwf	6
 10449  0679  0187               	clrf	7
 10450  067A  1C01               	btfss	1,0
 10451  067B  0008               	return
 10452                           
 10453                           ;Buzzer_B1.c: 34: if (Buz->GO == 0) {
 10454  067C  0856               	movf	_Buz,w
 10455  067D  0086               	movwf	6
 10456  067E  0187               	clrf	7
 10457  067F  1881               	btfsc	1,1
 10458  0680  2E9D               	goto	l3546
 10459                           
 10460                           ;Buzzer_B1.c: 35: Buz->GO = 1;
 10461  0681  0856               	movf	_Buz,w
 10462  0682  0086               	movwf	6
 10463  0683  0187               	clrf	7
 10464  0684  1481               	bsf	1,1
 10465                           
 10466                           ;Buzzer_B1.c: 36: Buz->Counter = 0;
 10467  0685  0A56               	incf	_Buz,w
 10468  0686  0086               	movwf	6
 10469  0687  0187               	clrf	7
 10470  0688  3000               	movlw	0
 10471  0689  3FC0               	movwi [0]fsr1
 10472  068A  3FC1               	movwi [1]fsr1
 10473                           
 10474                           ;Buzzer_B1.c: 37: Buz->Count = count;
 10475  068B  082C               	movf	setBuz@count,w
 10476  068C  00AB               	movwf	??_setBuz
 10477  068D  0856               	movf	_Buz,w
 10478  068E  3E03               	addlw	3
 10479  068F  0086               	movwf	6
 10480  0690  0187               	clrf	7
 10481  0691  082B               	movf	??_setBuz,w
 10482  0692  0081               	movwf	1
 10483                           
 10484                           ;Buzzer_B1.c: 38: Buz->TimeValue = time;
 10485  0693  0856               	movf	_Buz,w
 10486  0694  3E06               	addlw	6
 10487  0695  0086               	movwf	6
 10488  0696  0187               	clrf	7
 10489  0697  0829               	movf	setBuz@time,w
 10490  0698  3FC0               	movwi [0]fsr1
 10491  0699  082A               	movf	setBuz@time+1,w
 10492  069A  3FC1               	movwi [1]fsr1
 10493                           
 10494                           ;Buzzer_B1.c: 39: RB3 = 1;
 10495  069B  158D               	bsf	13,3	;volatile
 10496                           
 10497                           ;Buzzer_B1.c: 40: } else {
 10498  069C  0008               	return
 10499  069D                     l3546:	
 10500                           
 10501                           ;Buzzer_B1.c: 41: if (Buz->BufferStatus1 == 0) {
 10502  069D  0856               	movf	_Buz,w
 10503  069E  0086               	movwf	6
 10504  069F  0187               	clrf	7
 10505  06A0  1981               	btfsc	1,3
 10506  06A1  2EB7               	goto	l3550
 10507                           
 10508                           ;Buzzer_B1.c: 42: Buz->BufferStatus1 = 1;
 10509  06A2  0856               	movf	_Buz,w
 10510  06A3  0086               	movwf	6
 10511  06A4  0187               	clrf	7
 10512  06A5  1581               	bsf	1,3
 10513                           
 10514                           ;Buzzer_B1.c: 43: Buz->CountBuffer1 = count;
 10515  06A6  082C               	movf	setBuz@count,w
 10516  06A7  00AB               	movwf	??_setBuz
 10517  06A8  0856               	movf	_Buz,w
 10518  06A9  3E04               	addlw	4
 10519  06AA  0086               	movwf	6
 10520  06AB  0187               	clrf	7
 10521  06AC  082B               	movf	??_setBuz,w
 10522  06AD  0081               	movwf	1
 10523                           
 10524                           ;Buzzer_B1.c: 44: Buz->TimeValueBuffer1 = time;
 10525  06AE  0856               	movf	_Buz,w
 10526  06AF  3E08               	addlw	8
 10527  06B0  0086               	movwf	6
 10528  06B1  0187               	clrf	7
 10529  06B2  0829               	movf	setBuz@time,w
 10530  06B3  3FC0               	movwi [0]fsr1
 10531  06B4  082A               	movf	setBuz@time+1,w
 10532  06B5  3FC1               	movwi [1]fsr1
 10533                           
 10534                           ;Buzzer_B1.c: 45: } else if (Buz->BufferStatus2 == 0) {
 10535  06B6  0008               	return
 10536  06B7                     l3550:	
 10537  06B7  0856               	movf	_Buz,w
 10538  06B8  0086               	movwf	6
 10539  06B9  0187               	clrf	7
 10540  06BA  1A01               	btfsc	1,4
 10541  06BB  0008               	return
 10542                           
 10543                           ;Buzzer_B1.c: 46: Buz->BufferStatus2 = 1;
 10544  06BC  0856               	movf	_Buz,w
 10545  06BD  0086               	movwf	6
 10546  06BE  0187               	clrf	7
 10547  06BF  1601               	bsf	1,4
 10548                           
 10549                           ;Buzzer_B1.c: 47: Buz->CountBuffer2 = count;
 10550  06C0  082C               	movf	setBuz@count,w
 10551  06C1  00AB               	movwf	??_setBuz
 10552  06C2  0856               	movf	_Buz,w
 10553  06C3  3E05               	addlw	5
 10554  06C4  0086               	movwf	6
 10555  06C5  0187               	clrf	7
 10556  06C6  082B               	movf	??_setBuz,w
 10557  06C7  0081               	movwf	1
 10558                           
 10559                           ;Buzzer_B1.c: 48: Buz->TimeValueBuffer2 = time;
 10560  06C8  0856               	movf	_Buz,w
 10561  06C9  3E0A               	addlw	10
 10562  06CA  0086               	movwf	6
 10563  06CB  0187               	clrf	7
 10564  06CC  0829               	movf	setBuz@time,w
 10565  06CD  3FC0               	movwi [0]fsr1
 10566  06CE  082A               	movf	setBuz@time+1,w
 10567  06CF  3FC1               	movwi [1]fsr1
 10568  06D0  0008               	return
 10569  06D1                     __end_of_setBuz:	
 10570                           
 10571                           	psect	text70
 10572  0D86                     __ptext70:	
 10573 ;; *************** function ___awdiv *****************
 10574 ;; Defined at:
 10575 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;  divisor         2    0[BANK0 ] int 
 10578 ;;  dividend        2    2[BANK0 ] int 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  quotient        2    7[BANK0 ] int 
 10581 ;;  sign            1    6[BANK0 ] unsigned char 
 10582 ;;  counter         1    5[BANK0 ] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2    0[BANK0 ] int 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:        9 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    5
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_setBuz
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function ___awdiv
 10608  0D86                     ___awdiv:	
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10612  0D86  0020               	movlb	0	; select bank0
 10613  0D87  01A6               	clrf	___awdiv@sign
 10614  0D88  1FA1               	btfss	___awdiv@divisor+1,7
 10615  0D89  2D91               	goto	l3498
 10616  0D8A  09A0               	comf	___awdiv@divisor,f
 10617  0D8B  09A1               	comf	___awdiv@divisor+1,f
 10618  0D8C  0AA0               	incf	___awdiv@divisor,f
 10619  0D8D  1903               	skipnz
 10620  0D8E  0AA1               	incf	___awdiv@divisor+1,f
 10621  0D8F  01A6               	clrf	___awdiv@sign
 10622  0D90  0AA6               	incf	___awdiv@sign,f
 10623  0D91                     l3498:	
 10624  0D91  1FA3               	btfss	___awdiv@dividend+1,7
 10625  0D92  2D9C               	goto	l3504
 10626  0D93  09A2               	comf	___awdiv@dividend,f
 10627  0D94  09A3               	comf	___awdiv@dividend+1,f
 10628  0D95  0AA2               	incf	___awdiv@dividend,f
 10629  0D96  1903               	skipnz
 10630  0D97  0AA3               	incf	___awdiv@dividend+1,f
 10631  0D98  3001               	movlw	1
 10632  0D99  00A4               	movwf	??___awdiv
 10633  0D9A  0824               	movf	??___awdiv,w
 10634  0D9B  06A6               	xorwf	___awdiv@sign,f
 10635  0D9C                     l3504:	
 10636  0D9C  01A7               	clrf	___awdiv@quotient
 10637  0D9D  01A8               	clrf	___awdiv@quotient+1
 10638  0D9E  0821               	movf	___awdiv@divisor+1,w
 10639  0D9F  0420               	iorwf	___awdiv@divisor,w
 10640  0DA0  1903               	skipnz
 10641  0DA1  2DCB               	goto	l3526
 10642  0DA2  01A5               	clrf	___awdiv@counter
 10643  0DA3  0AA5               	incf	___awdiv@counter,f
 10644  0DA4                     l3514:	
 10645  0DA4  1BA1               	btfsc	___awdiv@divisor+1,7
 10646  0DA5  2DB0               	goto	l3516
 10647  0DA6  3001               	movlw	1
 10648  0DA7                     u2275:	
 10649  0DA7  35A0               	lslf	___awdiv@divisor,f
 10650  0DA8  0DA1               	rlf	___awdiv@divisor+1,f
 10651  0DA9  0B89               	decfsz	9,f
 10652  0DAA  2DA7               	goto	u2275
 10653  0DAB  3001               	movlw	1
 10654  0DAC  00A4               	movwf	??___awdiv
 10655  0DAD  0824               	movf	??___awdiv,w
 10656  0DAE  07A5               	addwf	___awdiv@counter,f
 10657  0DAF  2DA4               	goto	l3514
 10658  0DB0                     l3516:	
 10659  0DB0  3001               	movlw	1
 10660  0DB1                     u2295:	
 10661  0DB1  35A7               	lslf	___awdiv@quotient,f
 10662  0DB2  0DA8               	rlf	___awdiv@quotient+1,f
 10663  0DB3  0B89               	decfsz	9,f
 10664  0DB4  2DB1               	goto	u2295
 10665  0DB5  0821               	movf	___awdiv@divisor+1,w
 10666  0DB6  0223               	subwf	___awdiv@dividend+1,w
 10667  0DB7  1D03               	skipz
 10668  0DB8  2DBB               	goto	u2305
 10669  0DB9  0820               	movf	___awdiv@divisor,w
 10670  0DBA  0222               	subwf	___awdiv@dividend,w
 10671  0DBB                     u2305:	
 10672  0DBB  1C03               	skipc
 10673  0DBC  2DC2               	goto	l3522
 10674  0DBD  0820               	movf	___awdiv@divisor,w
 10675  0DBE  02A2               	subwf	___awdiv@dividend,f
 10676  0DBF  0821               	movf	___awdiv@divisor+1,w
 10677  0DC0  3BA3               	subwfb	___awdiv@dividend+1,f
 10678  0DC1  1427               	bsf	___awdiv@quotient,0
 10679  0DC2                     l3522:	
 10680  0DC2  3001               	movlw	1
 10681  0DC3                     u2315:	
 10682  0DC3  36A1               	lsrf	___awdiv@divisor+1,f
 10683  0DC4  0CA0               	rrf	___awdiv@divisor,f
 10684  0DC5  0B89               	decfsz	9,f
 10685  0DC6  2DC3               	goto	u2315
 10686  0DC7  3001               	movlw	1
 10687  0DC8  02A5               	subwf	___awdiv@counter,f
 10688  0DC9  1D03               	btfss	3,2
 10689  0DCA  2DB0               	goto	l3516
 10690  0DCB                     l3526:	
 10691  0DCB  0826               	movf	___awdiv@sign,w
 10692  0DCC  1903               	btfsc	3,2
 10693  0DCD  2DD3               	goto	l3530
 10694  0DCE  09A7               	comf	___awdiv@quotient,f
 10695  0DCF  09A8               	comf	___awdiv@quotient+1,f
 10696  0DD0  0AA7               	incf	___awdiv@quotient,f
 10697  0DD1  1903               	skipnz
 10698  0DD2  0AA8               	incf	___awdiv@quotient+1,f
 10699  0DD3                     l3530:	
 10700  0DD3  0828               	movf	___awdiv@quotient+1,w
 10701  0DD4  01A1               	clrf	?___awdiv+1
 10702  0DD5  07A1               	addwf	?___awdiv+1,f
 10703  0DD6  0827               	movf	___awdiv@quotient,w
 10704  0DD7  01A0               	clrf	?___awdiv
 10705  0DD8  07A0               	addwf	?___awdiv,f
 10706  0DD9  0008               	return
 10707  0DDA                     __end_of___awdiv:	
 10708                           
 10709                           	psect	text71
 10710  175A                     __ptext71:	
 10711 ;; *************** function _DelayOff_Initialization *****************
 10712 ;; Defined at:
 10713 ;;		line 26 in file "../src/DelayOff_B1.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;		None
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;		None               void
 10720 ;; Registers used:
 10721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;Total ram usage:        0 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:    7
 10734 ;; This function calls:
 10735 ;;		_DlyOff_Initialization
 10736 ;; This function is called by:
 10737 ;;		_main
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _DelayOff_Initialization
 10743  175A                     _DelayOff_Initialization:	
 10744                           
 10745                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 10746                           
 10747                           ;incstack = 0
 10748                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10749  175A  3001               	movlw	1
 10750  175B  3197  27DF         	fcall	_DlyOff_Initialization
 10751  175D  0008               	return
 10752  175E                     __end_of_DelayOff_Initialization:	
 10753                           
 10754                           	psect	text72
 10755  17DF                     __ptext72:	
 10756 ;; *************** function _DlyOff_Initialization *****************
 10757 ;; Defined at:
 10758 ;;		line 56 in file "../src/DelayOff_B1.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  sw              1    wreg     unsigned char 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  sw              1    2[BANK0 ] unsigned char 
 10763 ;; Return value:  Size  Location     Type
 10764 ;;		None               void
 10765 ;; Registers used:
 10766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;Total ram usage:        1 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:    6
 10779 ;; This function calls:
 10780 ;;		_DelayOffPointSelect
 10781 ;; This function is called by:
 10782 ;;		_DelayOff_Initialization
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           
 10787                           ;psect for function _DlyOff_Initialization
 10788  17DF                     _DlyOff_Initialization:	
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10792                           ;DlyOff_Initialization@sw stored from wreg
 10793  17DF  0020               	movlb	0	; select bank0
 10794  17E0  00A2               	movwf	DlyOff_Initialization@sw
 10795                           
 10796                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 10797  17E1  0822               	movf	DlyOff_Initialization@sw,w
 10798  17E2  3197  27D4         	fcall	_DelayOffPointSelect
 10799                           
 10800                           ;DelayOff_B1.c: 58: DelayOff->Enable = 1;
 10801  17E4  0020               	movlb	0	; select bank0
 10802  17E5  0857               	movf	_DelayOff,w
 10803  17E6  0086               	movwf	6
 10804  17E7  0187               	clrf	7
 10805  17E8  1401               	bsf	1,0
 10806  17E9  0008               	return
 10807  17EA                     __end_of_DlyOff_Initialization:	
 10808                           
 10809                           	psect	text73
 10810  17D4                     __ptext73:	
 10811 ;; *************** function _DelayOffPointSelect *****************
 10812 ;; Defined at:
 10813 ;;		line 7 in file "../src/DelayOff_B1.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;  sw              1    wreg     unsigned char 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  sw              1    1[BANK0 ] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;		None               void
 10820 ;; Registers used:
 10821 ;;		wreg
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        2 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; Hardware stack levels required when called:    5
 10834 ;; This function calls:
 10835 ;;		Nothing
 10836 ;; This function is called by:
 10837 ;;		_DlyOff_Initialization
 10838 ;;		_DlyOff_Main
 10839 ;;		_setDelayOff_GO
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _DelayOffPointSelect
 10845  17D4                     _DelayOffPointSelect:	
 10846                           
 10847                           ;incstack = 0
 10848                           ; Regs used in _DelayOffPointSelect: [wreg]
 10849                           ;DelayOffPointSelect@sw stored from wreg
 10850  17D4  0020               	movlb	0	; select bank0
 10851  17D5  00A1               	movwf	DelayOffPointSelect@sw
 10852                           
 10853                           ;DelayOff_B1.c: 9: if (sw == 1) {
 10854  17D6  0821               	movf	DelayOffPointSelect@sw,w
 10855  17D7  3A01               	xorlw	1
 10856  17D8  1D03               	skipz
 10857  17D9  0008               	return
 10858                           
 10859                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 10860  17DA  30E8               	movlw	_DlySw1& (0+255)
 10861  17DB  00A0               	movwf	??_DelayOffPointSelect
 10862  17DC  0820               	movf	??_DelayOffPointSelect,w
 10863  17DD  00D7               	movwf	_DelayOff
 10864  17DE  0008               	return
 10865  17DF                     __end_of_DelayOffPointSelect:	
 10866                           
 10867                           	psect	text74
 10868  0539                     __ptext74:	
 10869 ;; *************** function _Buzzer_Main *****************
 10870 ;; Defined at:
 10871 ;;		line 55 in file "../src/Buzzer_B1.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;		None
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;		None               void
 10878 ;; Registers used:
 10879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;Total ram usage:        4 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    5
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_main
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function _Buzzer_Main
 10901  0539                     _Buzzer_Main:	
 10902                           
 10903                           ;Buzzer_B1.c: 56: Buz = &Buz1;
 10904                           
 10905                           ;incstack = 0
 10906                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 10907  0539  30C3               	movlw	_Buz1& (0+255)
 10908  053A  0020               	movlb	0	; select bank0
 10909  053B  00A0               	movwf	??_Buzzer_Main
 10910  053C  0820               	movf	??_Buzzer_Main,w
 10911  053D  00D6               	movwf	_Buz
 10912                           
 10913                           ;Buzzer_B1.c: 57: if (Buz->GO == 1) {
 10914  053E  0856               	movf	_Buz,w
 10915  053F  0086               	movwf	6
 10916  0540  0187               	clrf	7
 10917  0541  1C81               	btfss	1,1
 10918  0542  0008               	return
 10919                           
 10920                           ;Buzzer_B1.c: 58: Buz->Counter++;
 10921  0543  0A56               	incf	_Buz,w
 10922  0544  0086               	movwf	6
 10923  0545  0187               	clrf	7
 10924  0546  3001               	movlw	1
 10925  0547  0781               	addwf	1,f
 10926  0548  3141               	addfsr 1,1
 10927  0549  1803               	skipnc
 10928  054A  0A81               	incf	1,f
 10929                           
 10930                           ;Buzzer_B1.c: 59: if (Buz->Counter >= Buz->TimeValue) {
 10931  054B  0856               	movf	_Buz,w
 10932  054C  3E06               	addlw	6
 10933  054D  0086               	movwf	6
 10934  054E  0187               	clrf	7
 10935  054F  3F40               	moviw [0]fsr1
 10936  0550  00A0               	movwf	??_Buzzer_Main
 10937  0551  3F41               	moviw [1]fsr1
 10938  0552  00A1               	movwf	??_Buzzer_Main+1
 10939  0553  0A56               	incf	_Buz,w
 10940  0554  0086               	movwf	6
 10941  0555  0187               	clrf	7
 10942  0556  3F40               	moviw [0]fsr1
 10943  0557  00A2               	movwf	??_Buzzer_Main+2
 10944  0558  3F41               	moviw [1]fsr1
 10945  0559  00A3               	movwf	??_Buzzer_Main+3
 10946  055A  0821               	movf	??_Buzzer_Main+1,w
 10947  055B  0223               	subwf	??_Buzzer_Main+3,w
 10948  055C  1D03               	skipz
 10949  055D  2D60               	goto	u3755
 10950  055E  0820               	movf	??_Buzzer_Main,w
 10951  055F  0222               	subwf	??_Buzzer_Main+2,w
 10952  0560                     u3755:	
 10953  0560  1C03               	skipc
 10954  0561  0008               	return
 10955                           
 10956                           ;Buzzer_B1.c: 60: Buz->Counter = 0;
 10957  0562  0A56               	incf	_Buz,w
 10958  0563  0086               	movwf	6
 10959  0564  0187               	clrf	7
 10960  0565  3000               	movlw	0
 10961  0566  3FC0               	movwi [0]fsr1
 10962  0567  3FC1               	movwi [1]fsr1
 10963                           
 10964                           ;Buzzer_B1.c: 61: Buz->Switch = (RB3 == 1) ? 1 : 0;
 10965  0568  0856               	movf	_Buz,w
 10966  0569  0086               	movwf	6
 10967  056A  0187               	clrf	7
 10968  056B  1281               	bcf	1,5
 10969  056C  198D               	btfsc	13,3	;volatile
 10970  056D  1681               	bsf	1,5
 10971                           
 10972                           ;Buzzer_B1.c: 62: if (Buz->Switch == 0) {
 10973  056E  0020               	movlb	0	; select bank0
 10974  056F  0856               	movf	_Buz,w
 10975  0570  0086               	movwf	6
 10976  0571  0187               	clrf	7
 10977  0572  1A81               	btfsc	1,5
 10978  0573  2DCA               	goto	l4460
 10979                           
 10980                           ;Buzzer_B1.c: 63: if (Buz->Count == 0) {
 10981  0574  0856               	movf	_Buz,w
 10982  0575  3E03               	addlw	3
 10983  0576  0086               	movwf	6
 10984  0577  0187               	clrf	7
 10985  0578  0881               	movf	1,f
 10986  0579  1D03               	skipz
 10987  057A  2DC4               	goto	l4456
 10988                           
 10989                           ;Buzzer_B1.c: 64: if (Buz->BufferStatus1 == 1) {
 10990  057B  0856               	movf	_Buz,w
 10991  057C  0086               	movwf	6
 10992  057D  0187               	clrf	7
 10993  057E  1D81               	btfss	1,3
 10994  057F  2D9D               	goto	l4448
 10995                           
 10996                           ;Buzzer_B1.c: 65: Buz->BufferStatus1 = 0;
 10997  0580  0856               	movf	_Buz,w
 10998  0581  0086               	movwf	6
 10999  0582  0187               	clrf	7
 11000  0583  1181               	bcf	1,3
 11001                           
 11002                           ;Buzzer_B1.c: 66: Buz->Count = Buz->CountBuffer1;
 11003  0584  0856               	movf	_Buz,w
 11004  0585  3E04               	addlw	4
 11005  0586  0086               	movwf	6
 11006  0587  0187               	clrf	7
 11007  0588  0801               	movf	1,w
 11008  0589  00A0               	movwf	??_Buzzer_Main
 11009  058A  0856               	movf	_Buz,w
 11010  058B  3E03               	addlw	3
 11011  058C  0086               	movwf	6
 11012  058D  0187               	clrf	7
 11013  058E  0820               	movf	??_Buzzer_Main,w
 11014  058F  0081               	movwf	1
 11015                           
 11016                           ;Buzzer_B1.c: 67: Buz->TimeValue = Buz->TimeValueBuffer1;
 11017  0590  0856               	movf	_Buz,w
 11018  0591  3E08               	addlw	8
 11019  0592  0086               	movwf	6
 11020  0593  0187               	clrf	7
 11021  0594  0856               	movf	_Buz,w
 11022  0595  3E06               	addlw	6
 11023  0596  0084               	movwf	4
 11024  0597  0185               	clrf	5
 11025  0598  3F40               	moviw [0]fsr1
 11026  0599  3F80               	movwi [0]fsr0
 11027  059A  3F41               	moviw [1]fsr1
 11028  059B  3F81               	movwi [1]fsr0
 11029                           
 11030                           ;Buzzer_B1.c: 68: } else if (Buz->BufferStatus2 == 1) {
 11031  059C  0008               	return
 11032  059D                     l4448:	
 11033  059D  0856               	movf	_Buz,w
 11034  059E  0086               	movwf	6
 11035  059F  0187               	clrf	7
 11036  05A0  1E01               	btfss	1,4
 11037  05A1  2DBF               	goto	l4454
 11038                           
 11039                           ;Buzzer_B1.c: 69: Buz->BufferStatus2 = 0;
 11040  05A2  0856               	movf	_Buz,w
 11041  05A3  0086               	movwf	6
 11042  05A4  0187               	clrf	7
 11043  05A5  1201               	bcf	1,4
 11044                           
 11045                           ;Buzzer_B1.c: 70: Buz->Count = Buz->CountBuffer2;
 11046  05A6  0856               	movf	_Buz,w
 11047  05A7  3E05               	addlw	5
 11048  05A8  0086               	movwf	6
 11049  05A9  0187               	clrf	7
 11050  05AA  0801               	movf	1,w
 11051  05AB  00A0               	movwf	??_Buzzer_Main
 11052  05AC  0856               	movf	_Buz,w
 11053  05AD  3E03               	addlw	3
 11054  05AE  0086               	movwf	6
 11055  05AF  0187               	clrf	7
 11056  05B0  0820               	movf	??_Buzzer_Main,w
 11057  05B1  0081               	movwf	1
 11058                           
 11059                           ;Buzzer_B1.c: 71: Buz->TimeValue = Buz->TimeValueBuffer2;
 11060  05B2  0856               	movf	_Buz,w
 11061  05B3  3E0A               	addlw	10
 11062  05B4  0086               	movwf	6
 11063  05B5  0187               	clrf	7
 11064  05B6  0856               	movf	_Buz,w
 11065  05B7  3E06               	addlw	6
 11066  05B8  0084               	movwf	4
 11067  05B9  0185               	clrf	5
 11068  05BA  3F40               	moviw [0]fsr1
 11069  05BB  3F80               	movwi [0]fsr0
 11070  05BC  3F41               	moviw [1]fsr1
 11071  05BD  3F81               	movwi [1]fsr0
 11072                           
 11073                           ;Buzzer_B1.c: 72: } else {
 11074  05BE  0008               	return
 11075  05BF                     l4454:	
 11076                           
 11077                           ;Buzzer_B1.c: 73: Buz->GO = 0;
 11078  05BF  0856               	movf	_Buz,w
 11079  05C0  0086               	movwf	6
 11080  05C1  0187               	clrf	7
 11081  05C2  1081               	bcf	1,1
 11082                           
 11083                           ;Buzzer_B1.c: 74: }
 11084                           ;Buzzer_B1.c: 75: } else {
 11085  05C3  0008               	return
 11086  05C4                     l4456:	
 11087                           
 11088                           ;Buzzer_B1.c: 76: Buz->Switch = 1;
 11089  05C4  0856               	movf	_Buz,w
 11090  05C5  0086               	movwf	6
 11091  05C6  0187               	clrf	7
 11092  05C7  1681               	bsf	1,5
 11093                           
 11094                           ;Buzzer_B1.c: 78: RB3 = 1;
 11095  05C8  158D               	bsf	13,3	;volatile
 11096                           
 11097                           ;Buzzer_B1.c: 79: }
 11098                           ;Buzzer_B1.c: 80: } else {
 11099  05C9  0008               	return
 11100  05CA                     l4460:	
 11101                           
 11102                           ;Buzzer_B1.c: 81: Buz->Switch = 0;
 11103  05CA  0856               	movf	_Buz,w
 11104  05CB  0086               	movwf	6
 11105  05CC  0187               	clrf	7
 11106  05CD  1281               	bcf	1,5
 11107                           
 11108                           ;Buzzer_B1.c: 83: RB3 = 0;
 11109  05CE  118D               	bcf	13,3	;volatile
 11110                           
 11111                           ;Buzzer_B1.c: 85: Buz->Count--;
 11112  05CF  0856               	movf	_Buz,w
 11113  05D0  3E03               	addlw	3
 11114  05D1  0086               	movwf	6
 11115  05D2  0187               	clrf	7
 11116  05D3  3001               	movlw	1
 11117  05D4  0281               	subwf	1,f
 11118  05D5  0008               	return
 11119  05D6                     __end_of_Buzzer_Main:	
 11120                           
 11121                           	psect	text75
 11122  17C0                     __ptext75:	
 11123 ;; *************** function _Buzzer_Initialization *****************
 11124 ;; Defined at:
 11125 ;;		line 11 in file "../src/Buzzer_B1.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;		None
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;		None
 11130 ;; Return value:  Size  Location     Type
 11131 ;;		None               void
 11132 ;; Registers used:
 11133 ;;		wreg, fsr1l, fsr1h
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;Total ram usage:        1 bytes
 11144 ;; Hardware stack levels used:    1
 11145 ;; Hardware stack levels required when called:    5
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_main
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           
 11154                           ;psect for function _Buzzer_Initialization
 11155  17C0                     _Buzzer_Initialization:	
 11156                           
 11157                           ;Buzzer_B1.c: 12: Buz = &Buz1;
 11158                           
 11159                           ;incstack = 0
 11160                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 11161  17C0  30C3               	movlw	_Buz1& (0+255)
 11162  17C1  0020               	movlb	0	; select bank0
 11163  17C2  00A0               	movwf	??_Buzzer_Initialization
 11164  17C3  0820               	movf	??_Buzzer_Initialization,w
 11165  17C4  00D6               	movwf	_Buz
 11166                           
 11167                           ;Buzzer_B1.c: 13: Buz->Enable = 1;
 11168  17C5  0856               	movf	_Buz,w
 11169  17C6  0086               	movwf	6
 11170  17C7  0187               	clrf	7
 11171  17C8  1401               	bsf	1,0
 11172  17C9  0008               	return
 11173  17CA                     __end_of_Buzzer_Initialization:	
 11174                           
 11175                           	psect	intentry
 11176  0004                     __pintentry:	
 11177 ;; *************** function _ISR *****************
 11178 ;; Defined at:
 11179 ;;		line 109 in file "../src/MCU_B1.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;		None               void
 11186 ;; Registers used:
 11187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:        1 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; Hardware stack levels required when called:    4
 11200 ;; This function calls:
 11201 ;;		_INT_ISR
 11202 ;;		_IOC_ISR
 11203 ;;		_TMR0_ISR
 11204 ;; This function is called by:
 11205 ;;		Interrupt level 1
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209  0004                     _ISR:	
 11210                           
 11211                           ;incstack = 0
 11212                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11213  0004  147E               	bsf	126,0	;set compiler interrupt flag
 11214  0005  3180               	pagesel	$
 11215  0006  0020               	movlb	0	; select bank0
 11216  0007  087F               	movf	127,w
 11217  0008  00F7               	movwf	??_ISR
 11218                           
 11219                           ;MCU_B1.c: 111: IOC_ISR();
 11220  0009  3188  20B9  3180   	fcall	_IOC_ISR
 11221                           
 11222                           ;MCU_B1.c: 113: TMR0_ISR();
 11223  000C  318A  2289  3180   	fcall	_TMR0_ISR
 11224                           
 11225                           ;MCU_B1.c: 115: ;;
 11226                           ;MCU_B1.c: 119: INT_ISR();
 11227  000F  3197  2787         	fcall	_INT_ISR
 11228  0011  0877               	movf	??_ISR,w
 11229  0012  0020               	movlb	0	; select bank0
 11230  0013  00FF               	movwf	127
 11231  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 11232  0015  0009               	retfie
 11233  0016                     __end_of_ISR:	
 11234                           
 11235                           	psect	text77
 11236  0A89                     __ptext77:	
 11237 ;; *************** function _TMR0_ISR *****************
 11238 ;; Defined at:
 11239 ;;		line 137 in file "../src/MCU_B1.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;		None               void
 11246 ;; Registers used:
 11247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;Total ram usage:        0 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    2
 11260 ;; This function calls:
 11261 ;;		_setDimmerLights_IntrControl
 11262 ;; This function is called by:
 11263 ;;		_ISR
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           
 11268                           ;psect for function _TMR0_ISR
 11269  0A89                     _TMR0_ISR:	
 11270                           
 11271                           ;MCU_B1.c: 138: if (TMR0IE == 1 && TMR0IF == 1) {
 11272                           
 11273                           ;incstack = 0
 11274                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11275  0A89  1E8B               	btfss	11,5	;volatile
 11276  0A8A  0008               	return
 11277  0A8B  1D0B               	btfss	11,2	;volatile
 11278  0A8C  0008               	return
 11279                           
 11280                           ;MCU_B1.c: 139: TMR0 = (256-190);
 11281  0A8D  3042               	movlw	66
 11282  0A8E  0020               	movlb	0	; select bank0
 11283  0A8F  0095               	movwf	21	;volatile
 11284                           
 11285                           ;MCU_B1.c: 140: TMR0IF = 0;
 11286  0A90  110B               	bcf	11,2	;volatile
 11287                           
 11288                           ;MCU_B1.c: 145: setDimmerLights_IntrControl(1);
 11289  0A91  3001               	movlw	1
 11290  0A92  3180  2042  318A   	fcall	_setDimmerLights_IntrControl
 11291                           
 11292                           ;MCU_B1.c: 161: Timer0->Count++;
 11293  0A95  0A7B               	incf	_Timer0,w
 11294  0A96  0086               	movwf	6
 11295  0A97  0187               	clrf	7
 11296  0A98  3001               	movlw	1
 11297  0A99  0781               	addwf	1,f
 11298  0A9A  3141               	addfsr 1,1
 11299  0A9B  1803               	skipnc
 11300  0A9C  0A81               	incf	1,f
 11301                           
 11302                           ;MCU_B1.c: 162: if (Timer0->Count == 100) {
 11303  0A9D  0A7B               	incf	_Timer0,w
 11304  0A9E  0086               	movwf	6
 11305  0A9F  0187               	clrf	7
 11306  0AA0  3F40               	moviw [0]fsr1
 11307  0AA1  3A64               	xorlw	100
 11308  0AA2  1D03               	skipz
 11309  0AA3  2AA6               	goto	u386_25
 11310  0AA4  3F41               	moviw [1]fsr1
 11311  0AA5  3A00               	xorlw	0
 11312  0AA6                     u386_25:	
 11313  0AA6  1D03               	skipz
 11314  0AA7  0008               	return
 11315                           
 11316                           ;MCU_B1.c: 163: Timer0->Count = 0;
 11317  0AA8  0A7B               	incf	_Timer0,w
 11318  0AA9  0086               	movwf	6
 11319  0AAA  0187               	clrf	7
 11320  0AAB  3000               	movlw	0
 11321  0AAC  3FC0               	movwi [0]fsr1
 11322  0AAD  3FC1               	movwi [1]fsr1
 11323                           
 11324                           ;MCU_B1.c: 164: myMain->T0_Timerout = 1;
 11325  0AAE  0020               	movlb	0	; select bank0
 11326  0AAF  086C               	movf	_myMain,w
 11327  0AB0  0086               	movwf	6
 11328  0AB1  0187               	clrf	7
 11329  0AB2  1481               	bsf	1,1
 11330  0AB3  0008               	return
 11331  0AB4                     __end_of_TMR0_ISR:	
 11332                           
 11333                           	psect	text78
 11334  0042                     __ptext78:	
 11335 ;; *************** function _setDimmerLights_IntrControl *****************
 11336 ;; Defined at:
 11337 ;;		line 87 in file "../src/Dimmer_B1.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  lights          1    wreg     unsigned char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  lights          1    6[COMMON] unsigned char 
 11342 ;; Return value:  Size  Location     Type
 11343 ;;		None               void
 11344 ;; Registers used:
 11345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;Total ram usage:        5 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:    1
 11358 ;; This function calls:
 11359 ;;		_DimmerIntrPointSelect
 11360 ;; This function is called by:
 11361 ;;		_TMR0_ISR
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           
 11366                           ;psect for function _setDimmerLights_IntrControl
 11367  0042                     _setDimmerLights_IntrControl:	
 11368                           
 11369                           ;incstack = 0
 11370                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11371                           ;setDimmerLights_IntrControl@lights stored from wreg
 11372  0042  00F6               	movwf	setDimmerLights_IntrControl@lights
 11373                           
 11374                           ;Dimmer_B1.c: 89: DimmerIntrPointSelect(lights);
 11375  0043  0876               	movf	setDimmerLights_IntrControl@lights,w
 11376  0044  3197  27B6  3180   	fcall	_DimmerIntrPointSelect
 11377                           
 11378                           ;Dimmer_B1.c: 90: if (DimmerLightsIntr->GO == 1) {
 11379  0047  0879               	movf	_DimmerLightsIntr,w
 11380  0048  0086               	movwf	6
 11381  0049  0187               	clrf	7
 11382  004A  1C01               	btfss	1,0
 11383  004B  2899               	goto	i1l4038
 11384                           
 11385                           ;Dimmer_B1.c: 91: DimmerLightsIntr->Count++;
 11386  004C  3001               	movlw	1
 11387  004D  00F2               	movwf	??_setDimmerLights_IntrControl
 11388  004E  0879               	movf	_DimmerLightsIntr,w
 11389  004F  3E03               	addlw	3
 11390  0050  0086               	movwf	6
 11391  0051  0187               	clrf	7
 11392  0052  0872               	movf	??_setDimmerLights_IntrControl,w
 11393  0053  0781               	addwf	1,f
 11394                           
 11395                           ;Dimmer_B1.c: 92: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue - Dimme
      +                          r->Correction)) {
 11396  0054  0020               	movlb	0	; select bank0
 11397  0055  0858               	movf	_Dimmer,w
 11398  0056  3E02               	addlw	2
 11399  0057  0086               	movwf	6
 11400  0058  0187               	clrf	7
 11401  0059  0801               	movf	1,w
 11402  005A  00F2               	movwf	??_setDimmerLights_IntrControl
 11403  005B  01F3               	clrf	??_setDimmerLights_IntrControl+1
 11404  005C  09F2               	comf	??_setDimmerLights_IntrControl,f
 11405  005D  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 11406  005E  0AF2               	incf	??_setDimmerLights_IntrControl,f
 11407  005F  1903               	skipnz
 11408  0060  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 11409  0061  0879               	movf	_DimmerLightsIntr,w
 11410  0062  3E04               	addlw	4
 11411  0063  0086               	movwf	6
 11412  0064  0187               	clrf	7
 11413  0065  0801               	movf	1,w
 11414  0066  0772               	addwf	??_setDimmerLights_IntrControl,w
 11415  0067  00F4               	movwf	??_setDimmerLights_IntrControl+2
 11416  0068  0873               	movf	??_setDimmerLights_IntrControl+1,w
 11417  0069  1803               	skipnc
 11418  006A  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 11419  006B  00F5               	movwf	??_setDimmerLights_IntrControl+3
 11420  006C  0879               	movf	_DimmerLightsIntr,w
 11421  006D  3E03               	addlw	3
 11422  006E  0086               	movwf	6
 11423  006F  0187               	clrf	7
 11424  0070  0875               	movf	??_setDimmerLights_IntrControl+3,w
 11425  0071  3A80               	xorlw	128
 11426  0072  3C80               	sublw	128
 11427  0073  1D03               	skipz
 11428  0074  2877               	goto	u304_25
 11429  0075  0874               	movf	??_setDimmerLights_IntrControl+2,w
 11430  0076  0201               	subwf	1,w
 11431  0077                     u304_25:	
 11432  0077  1C03               	skipc
 11433  0078  2978               	goto	i1l4096
 11434                           
 11435                           ;Dimmer_B1.c: 93: DimmerLightsIntr->Count = 0;
 11436  0079  0879               	movf	_DimmerLightsIntr,w
 11437  007A  3E03               	addlw	3
 11438  007B  0086               	movwf	6
 11439  007C  0187               	clrf	7
 11440  007D  0181               	clrf	1
 11441                           
 11442                           ;Dimmer_B1.c: 94: DimmerLightsIntr->GO = 0;
 11443  007E  0879               	movf	_DimmerLightsIntr,w
 11444  007F  0086               	movwf	6
 11445  0080  0187               	clrf	7
 11446  0081  1001               	bcf	1,0
 11447                           
 11448                           ;Dimmer_B1.c: 96: if (DimmerLightsIntr->StatusFlag == 1) {
 11449  0082  0879               	movf	_DimmerLightsIntr,w
 11450  0083  0086               	movwf	6
 11451  0084  0187               	clrf	7
 11452  0085  1F01               	btfss	1,6
 11453  0086  2978               	goto	i1l4096
 11454                           
 11455                           ;Dimmer_B1.c: 97: DimmerLightsIntr->Flag = 1;
 11456  0087  0879               	movf	_DimmerLightsIntr,w
 11457  0088  3E08               	addlw	8
 11458  0089  0086               	movwf	6
 11459  008A  0187               	clrf	7
 11460  008B  1401               	bsf	1,0
 11461                           
 11462                           ;Dimmer_B1.c: 98: DimmerLightsIntr->Triac = 1;
 11463  008C  0879               	movf	_DimmerLightsIntr,w
 11464  008D  3E08               	addlw	8
 11465  008E  0086               	movwf	6
 11466  008F  0187               	clrf	7
 11467  0090  1681               	bsf	1,5
 11468                           
 11469                           ;Dimmer_B1.c: 100: if (lights == 1) {
 11470  0091  0876               	movf	setDimmerLights_IntrControl@lights,w
 11471  0092  3A01               	xorlw	1
 11472  0093  1D03               	skipz
 11473  0094  2978               	goto	i1l4096
 11474                           
 11475                           ;Dimmer_B1.c: 101: RA7 = 1;
 11476  0095  0020               	movlb	0	; select bank0
 11477  0096  178C               	bsf	12,7	;volatile
 11478                           
 11479                           ;Dimmer_B1.c: 102: RB4=1;
 11480  0097  160D               	bsf	13,4	;volatile
 11481                           
 11482                           ;Dimmer_B1.c: 103: }
 11483                           ;Dimmer_B1.c: 115: }
 11484                           ;Dimmer_B1.c: 116: }
 11485                           ;Dimmer_B1.c: 117: } else {
 11486  0098  2978               	goto	i1l4096
 11487  0099                     i1l4038:	
 11488                           
 11489                           ;Dimmer_B1.c: 118: if (DimmerLightsIntr->Flag == 1) {
 11490  0099  0879               	movf	_DimmerLightsIntr,w
 11491  009A  3E08               	addlw	8
 11492  009B  0086               	movwf	6
 11493  009C  0187               	clrf	7
 11494  009D  1C01               	btfss	1,0
 11495  009E  2978               	goto	i1l4096
 11496                           
 11497                           ;Dimmer_B1.c: 119: DimmerLightsIntr->Flag = 0;
 11498  009F  0879               	movf	_DimmerLightsIntr,w
 11499  00A0  3E08               	addlw	8
 11500  00A1  0086               	movwf	6
 11501  00A2  0187               	clrf	7
 11502  00A3  1001               	bcf	1,0
 11503                           
 11504                           ;Dimmer_B1.c: 120: if (DimmerLightsIntr->Signal == 1) {
 11505  00A4  0879               	movf	_DimmerLightsIntr,w
 11506  00A5  0086               	movwf	6
 11507  00A6  0187               	clrf	7
 11508  00A7  1C81               	btfss	1,1
 11509  00A8  2978               	goto	i1l4096
 11510                           
 11511                           ;Dimmer_B1.c: 121: DimmerLightsIntr->DimmingTime++;
 11512  00A9  3001               	movlw	1
 11513  00AA  00F2               	movwf	??_setDimmerLights_IntrControl
 11514  00AB  0A79               	incf	_DimmerLightsIntr,w
 11515  00AC  0086               	movwf	6
 11516  00AD  0187               	clrf	7
 11517  00AE  0872               	movf	??_setDimmerLights_IntrControl,w
 11518  00AF  0781               	addwf	1,f
 11519                           
 11520                           ;Dimmer_B1.c: 122: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 11521  00B0  0A79               	incf	_DimmerLightsIntr,w
 11522  00B1  0086               	movwf	6
 11523  00B2  0187               	clrf	7
 11524  00B3  0879               	movf	_DimmerLightsIntr,w
 11525  00B4  3E02               	addlw	2
 11526  00B5  0084               	movwf	4
 11527  00B6  0185               	clrf	5
 11528  00B7  0800               	movf	0,w
 11529  00B8  0201               	subwf	1,w
 11530  00B9  1C03               	skipc
 11531  00BA  2978               	goto	i1l4096
 11532                           
 11533                           ;Dimmer_B1.c: 123: DimmerLightsIntr->DimmingTime = 0;
 11534  00BB  0A79               	incf	_DimmerLightsIntr,w
 11535  00BC  0086               	movwf	6
 11536  00BD  0187               	clrf	7
 11537  00BE  0181               	clrf	1
 11538                           
 11539                           ;Dimmer_B1.c: 124: if (DimmerLightsIntr->AdjFlag == 1) {
 11540  00BF  0879               	movf	_DimmerLightsIntr,w
 11541  00C0  0086               	movwf	6
 11542  00C1  0187               	clrf	7
 11543  00C2  1D81               	btfss	1,3
 11544  00C3  28F3               	goto	i1l4064
 11545                           
 11546                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->AdjStatus == 0) {
 11547  00C4  0879               	movf	_DimmerLightsIntr,w
 11548  00C5  0086               	movwf	6
 11549  00C6  0187               	clrf	7
 11550  00C7  1A01               	btfsc	1,4
 11551  00C8  28DD               	goto	i1l4058
 11552                           
 11553                           ;Dimmer_B1.c: 126: if (DimmerLightsIntr->DimmingValue > ((char)((100-60)*0.8))) {
 11554  00C9  0879               	movf	_DimmerLightsIntr,w
 11555  00CA  3E04               	addlw	4
 11556  00CB  0086               	movwf	6
 11557  00CC  0187               	clrf	7
 11558  00CD  3021               	movlw	33
 11559  00CE  0201               	subwf	1,w
 11560  00CF  1C03               	skipc
 11561  00D0  28D8               	goto	i1l4056
 11562                           
 11563                           ;Dimmer_B1.c: 127: DimmerLightsIntr->DimmingValue--;
 11564  00D1  0879               	movf	_DimmerLightsIntr,w
 11565  00D2  3E04               	addlw	4
 11566  00D3  0086               	movwf	6
 11567  00D4  0187               	clrf	7
 11568  00D5  3001               	movlw	1
 11569  00D6  0281               	subwf	1,f
 11570                           
 11571                           ;Dimmer_B1.c: 128: } else {
 11572  00D7  2978               	goto	i1l4096
 11573  00D8                     i1l4056:	
 11574                           
 11575                           ;Dimmer_B1.c: 129: DimmerLightsIntr->AdjStatus = 1;
 11576  00D8  0879               	movf	_DimmerLightsIntr,w
 11577  00D9  0086               	movwf	6
 11578  00DA  0187               	clrf	7
 11579  00DB  1601               	bsf	1,4
 11580                           
 11581                           ;Dimmer_B1.c: 130: }
 11582                           ;Dimmer_B1.c: 131: } else {
 11583  00DC  2978               	goto	i1l4096
 11584  00DD                     i1l4058:	
 11585                           
 11586                           ;Dimmer_B1.c: 132: if (DimmerLightsIntr->DimmingValue < ((char)((100-25)*0.8))) {
 11587  00DD  0879               	movf	_DimmerLightsIntr,w
 11588  00DE  3E04               	addlw	4
 11589  00DF  0086               	movwf	6
 11590  00E0  0187               	clrf	7
 11591  00E1  303C               	movlw	60
 11592  00E2  0201               	subwf	1,w
 11593  00E3  1803               	skipnc
 11594  00E4  28EE               	goto	i1l4062
 11595                           
 11596                           ;Dimmer_B1.c: 133: DimmerLightsIntr->DimmingValue++;
 11597  00E5  3001               	movlw	1
 11598  00E6  00F2               	movwf	??_setDimmerLights_IntrControl
 11599  00E7  0879               	movf	_DimmerLightsIntr,w
 11600  00E8  3E04               	addlw	4
 11601  00E9  0086               	movwf	6
 11602  00EA  0187               	clrf	7
 11603  00EB  0872               	movf	??_setDimmerLights_IntrControl,w
 11604  00EC  0781               	addwf	1,f
 11605                           
 11606                           ;Dimmer_B1.c: 134: } else {
 11607  00ED  2978               	goto	i1l4096
 11608  00EE                     i1l4062:	
 11609                           
 11610                           ;Dimmer_B1.c: 135: DimmerLightsIntr->AdjStatus = 0;
 11611  00EE  0879               	movf	_DimmerLightsIntr,w
 11612  00EF  0086               	movwf	6
 11613  00F0  0187               	clrf	7
 11614  00F1  1201               	bcf	1,4
 11615                           
 11616                           ;Dimmer_B1.c: 136: }
 11617                           ;Dimmer_B1.c: 137: }
 11618                           ;Dimmer_B1.c: 138: } else if (DimmerLightsIntr->AdjRF == 1) {
 11619  00F2  2978               	goto	i1l4096
 11620  00F3                     i1l4064:	
 11621  00F3  0879               	movf	_DimmerLightsIntr,w
 11622  00F4  0086               	movwf	6
 11623  00F5  0187               	clrf	7
 11624  00F6  1D01               	btfss	1,2
 11625  00F7  2930               	goto	i1l4078
 11626                           
 11627                           ;Dimmer_B1.c: 139: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 11628  00F8  0879               	movf	_DimmerLightsIntr,w
 11629  00F9  3E05               	addlw	5
 11630  00FA  0086               	movwf	6
 11631  00FB  0187               	clrf	7
 11632  00FC  0879               	movf	_DimmerLightsIntr,w
 11633  00FD  3E04               	addlw	4
 11634  00FE  0084               	movwf	4
 11635  00FF  0185               	clrf	5
 11636  0100  0800               	movf	0,w
 11637  0101  0201               	subwf	1,w
 11638  0102  1803               	skipnc
 11639  0103  290B               	goto	i1l4070
 11640                           
 11641                           ;Dimmer_B1.c: 140: DimmerLightsIntr->DimmingValue--;
 11642  0104  0879               	movf	_DimmerLightsIntr,w
 11643  0105  3E04               	addlw	4
 11644  0106  0086               	movwf	6
 11645  0107  0187               	clrf	7
 11646  0108  3001               	movlw	1
 11647  0109  0281               	subwf	1,f
 11648                           
 11649                           ;Dimmer_B1.c: 141: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 11650  010A  291F               	goto	i1l4074
 11651  010B                     i1l4070:	
 11652  010B  0879               	movf	_DimmerLightsIntr,w
 11653  010C  3E04               	addlw	4
 11654  010D  0086               	movwf	6
 11655  010E  0187               	clrf	7
 11656  010F  0879               	movf	_DimmerLightsIntr,w
 11657  0110  3E05               	addlw	5
 11658  0111  0084               	movwf	4
 11659  0112  0185               	clrf	5
 11660  0113  0800               	movf	0,w
 11661  0114  0201               	subwf	1,w
 11662  0115  1803               	skipnc
 11663  0116  291F               	goto	i1l4074
 11664                           
 11665                           ;Dimmer_B1.c: 142: DimmerLightsIntr->DimmingValue++;
 11666  0117  3001               	movlw	1
 11667  0118  00F2               	movwf	??_setDimmerLights_IntrControl
 11668  0119  0879               	movf	_DimmerLightsIntr,w
 11669  011A  3E04               	addlw	4
 11670  011B  0086               	movwf	6
 11671  011C  0187               	clrf	7
 11672  011D  0872               	movf	??_setDimmerLights_IntrControl,w
 11673  011E  0781               	addwf	1,f
 11674  011F                     i1l4074:	
 11675                           
 11676                           ;Dimmer_B1.c: 143: }
 11677                           ;Dimmer_B1.c: 144: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 11678  011F  0879               	movf	_DimmerLightsIntr,w
 11679  0120  3E05               	addlw	5
 11680  0121  0086               	movwf	6
 11681  0122  0187               	clrf	7
 11682  0123  0879               	movf	_DimmerLightsIntr,w
 11683  0124  3E04               	addlw	4
 11684  0125  0084               	movwf	4
 11685  0126  0185               	clrf	5
 11686  0127  0800               	movf	0,w
 11687  0128  0601               	xorwf	1,w
 11688  0129  1D03               	skipz
 11689  012A  2978               	goto	i1l4096
 11690                           
 11691                           ;Dimmer_B1.c: 145: DimmerLightsIntr->AdjRF = 0;
 11692  012B  0879               	movf	_DimmerLightsIntr,w
 11693  012C  0086               	movwf	6
 11694  012D  0187               	clrf	7
 11695  012E  1101               	bcf	1,2
 11696  012F  2947               	goto	i1l4084
 11697  0130                     i1l4078:	
 11698                           ;Dimmer_B1.c: 147: }
 11699                           ;Dimmer_B1.c: 148: } else {
 11700                           
 11701                           ;Dimmer_B1.c: 146: DimmerLightsIntr->Signal = 0;
 11702                           
 11703                           
 11704                           ;Dimmer_B1.c: 149: if (DimmerLightsIntr->Status == 1) {
 11705  0130  0879               	movf	_DimmerLightsIntr,w
 11706  0131  0086               	movwf	6
 11707  0132  0187               	clrf	7
 11708  0133  1E81               	btfss	1,5
 11709  0134  294C               	goto	i1l4086
 11710                           
 11711                           ;Dimmer_B1.c: 150: DimmerLightsIntr->DimmingValue--;
 11712  0135  0879               	movf	_DimmerLightsIntr,w
 11713  0136  3E04               	addlw	4
 11714  0137  0086               	movwf	6
 11715  0138  0187               	clrf	7
 11716  0139  3001               	movlw	1
 11717  013A  0281               	subwf	1,f
 11718                           
 11719                           ;Dimmer_B1.c: 151: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 11720  013B  0879               	movf	_DimmerLightsIntr,w
 11721  013C  3E05               	addlw	5
 11722  013D  0086               	movwf	6
 11723  013E  0187               	clrf	7
 11724  013F  0879               	movf	_DimmerLightsIntr,w
 11725  0140  3E04               	addlw	4
 11726  0141  0084               	movwf	4
 11727  0142  0185               	clrf	5
 11728  0143  0800               	movf	0,w
 11729  0144  0201               	subwf	1,w
 11730  0145  1C03               	skipc
 11731  0146  2978               	goto	i1l4096
 11732  0147                     i1l4084:	
 11733                           
 11734                           ;Dimmer_B1.c: 152: DimmerLightsIntr->Signal = 0;
 11735  0147  0879               	movf	_DimmerLightsIntr,w
 11736  0148  0086               	movwf	6
 11737  0149  0187               	clrf	7
 11738  014A  1081               	bcf	1,1
 11739                           
 11740                           ;Dimmer_B1.c: 153: }
 11741                           ;Dimmer_B1.c: 154: } else {
 11742  014B  2978               	goto	i1l4096
 11743  014C                     i1l4086:	
 11744                           
 11745                           ;Dimmer_B1.c: 155: DimmerLightsIntr->DimmingValue++;
 11746  014C  3001               	movlw	1
 11747  014D  00F2               	movwf	??_setDimmerLights_IntrControl
 11748  014E  0879               	movf	_DimmerLightsIntr,w
 11749  014F  3E04               	addlw	4
 11750  0150  0086               	movwf	6
 11751  0151  0187               	clrf	7
 11752  0152  0872               	movf	??_setDimmerLights_IntrControl,w
 11753  0153  0781               	addwf	1,f
 11754                           
 11755                           ;Dimmer_B1.c: 156: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 11756  0154  0879               	movf	_DimmerLightsIntr,w
 11757  0155  3E04               	addlw	4
 11758  0156  0086               	movwf	6
 11759  0157  0187               	clrf	7
 11760  0158  0879               	movf	_DimmerLightsIntr,w
 11761  0159  3E06               	addlw	6
 11762  015A  0084               	movwf	4
 11763  015B  0185               	clrf	5
 11764  015C  0800               	movf	0,w
 11765  015D  0201               	subwf	1,w
 11766  015E  1C03               	skipc
 11767  015F  2978               	goto	i1l4096
 11768                           
 11769                           ;Dimmer_B1.c: 157: DimmerLightsIntr->Signal = 0;
 11770  0160  0879               	movf	_DimmerLightsIntr,w
 11771  0161  0086               	movwf	6
 11772  0162  0187               	clrf	7
 11773  0163  1081               	bcf	1,1
 11774                           
 11775                           ;Dimmer_B1.c: 158: DimmerLightsIntr->StatusFlag = 0;
 11776  0164  0879               	movf	_DimmerLightsIntr,w
 11777  0165  0086               	movwf	6
 11778  0166  0187               	clrf	7
 11779  0167  1301               	bcf	1,6
 11780                           
 11781                           ;Dimmer_B1.c: 159: DimmerLightsIntr->Clear = 1;
 11782  0168  0879               	movf	_DimmerLightsIntr,w
 11783  0169  3E09               	addlw	9
 11784  016A  0086               	movwf	6
 11785  016B  0187               	clrf	7
 11786  016C  1501               	bsf	1,2
 11787                           
 11788                           ;Dimmer_B1.c: 160: Dimmer->Detect = 1;
 11789  016D  0020               	movlb	0	; select bank0
 11790  016E  0858               	movf	_Dimmer,w
 11791  016F  0086               	movwf	6
 11792  0170  0187               	clrf	7
 11793  0171  1401               	bsf	1,0
 11794                           
 11795                           ;Dimmer_B1.c: 162: if (lights == 1) {
 11796  0172  0876               	movf	setDimmerLights_IntrControl@lights,w
 11797  0173  3A01               	xorlw	1
 11798  0174  1D03               	skipz
 11799  0175  2978               	goto	i1l4096
 11800                           
 11801                           ;Dimmer_B1.c: 163: RA3 = 0;
 11802  0176  118C               	bcf	12,3	;volatile
 11803                           
 11804                           ;Dimmer_B1.c: 164: RC7=!1;
 11805  0177  138E               	bcf	14,7	;volatile
 11806  0178                     i1l4096:	
 11807                           ;Dimmer_B1.c: 165: }
 11808                           ;Dimmer_B1.c: 177: ;;
 11809                           
 11810                           
 11811                           ;Dimmer_B1.c: 178: }
 11812                           ;Dimmer_B1.c: 179: }
 11813                           ;Dimmer_B1.c: 180: }
 11814                           ;Dimmer_B1.c: 181: }
 11815                           ;Dimmer_B1.c: 182: }
 11816                           ;Dimmer_B1.c: 183: }
 11817                           ;Dimmer_B1.c: 184: }
 11818                           ;Dimmer_B1.c: 185: if (DimmerLightsIntr->Triac == 1) {
 11819  0178  0879               	movf	_DimmerLightsIntr,w
 11820  0179  3E08               	addlw	8
 11821  017A  0086               	movwf	6
 11822  017B  0187               	clrf	7
 11823  017C  1E81               	btfss	1,5
 11824  017D  299F               	goto	i1l4110
 11825                           
 11826                           ;Dimmer_B1.c: 186: DimmerLightsIntr->TriacTime++;
 11827  017E  3001               	movlw	1
 11828  017F  00F2               	movwf	??_setDimmerLights_IntrControl
 11829  0180  0879               	movf	_DimmerLightsIntr,w
 11830  0181  3E07               	addlw	7
 11831  0182  0086               	movwf	6
 11832  0183  0187               	clrf	7
 11833  0184  0872               	movf	??_setDimmerLights_IntrControl,w
 11834  0185  0781               	addwf	1,f
 11835                           
 11836                           ;Dimmer_B1.c: 187: if (DimmerLightsIntr->TriacTime >= 5) {
 11837  0186  0879               	movf	_DimmerLightsIntr,w
 11838  0187  3E07               	addlw	7
 11839  0188  0086               	movwf	6
 11840  0189  0187               	clrf	7
 11841  018A  3005               	movlw	5
 11842  018B  0201               	subwf	1,w
 11843  018C  1C03               	skipc
 11844  018D  299F               	goto	i1l4110
 11845                           
 11846                           ;Dimmer_B1.c: 188: DimmerLightsIntr->TriacTime = 0;
 11847  018E  0879               	movf	_DimmerLightsIntr,w
 11848  018F  3E07               	addlw	7
 11849  0190  0086               	movwf	6
 11850  0191  0187               	clrf	7
 11851  0192  0181               	clrf	1
 11852                           
 11853                           ;Dimmer_B1.c: 189: DimmerLightsIntr->Triac = 0;
 11854  0193  0879               	movf	_DimmerLightsIntr,w
 11855  0194  3E08               	addlw	8
 11856  0195  0086               	movwf	6
 11857  0196  0187               	clrf	7
 11858  0197  1281               	bcf	1,5
 11859                           
 11860                           ;Dimmer_B1.c: 192: if (lights == 1) {
 11861  0198  0876               	movf	setDimmerLights_IntrControl@lights,w
 11862  0199  3A01               	xorlw	1
 11863  019A  1D03               	skipz
 11864  019B  299F               	goto	i1l4110
 11865                           
 11866                           ;Dimmer_B1.c: 193: RA7 = 0;
 11867  019C  0020               	movlb	0	; select bank0
 11868  019D  138C               	bcf	12,7	;volatile
 11869                           
 11870                           ;Dimmer_B1.c: 194: RB4=0;
 11871  019E  120D               	bcf	13,4	;volatile
 11872  019F                     i1l4110:	
 11873                           
 11874                           ;Dimmer_B1.c: 195: }
 11875                           ;Dimmer_B1.c: 207: }
 11876                           ;Dimmer_B1.c: 208: }
 11877                           ;Dimmer_B1.c: 209: if (DimmerLightsIntr->TriacFlag == 1) {
 11878  019F  0879               	movf	_DimmerLightsIntr,w
 11879  01A0  3E09               	addlw	9
 11880  01A1  0086               	movwf	6
 11881  01A2  0187               	clrf	7
 11882  01A3  1E81               	btfss	1,5
 11883  01A4  0008               	return
 11884                           
 11885                           ;Dimmer_B1.c: 210: DimmerLightsIntr->TriacCount++;
 11886  01A5  3001               	movlw	1
 11887  01A6  00F2               	movwf	??_setDimmerLights_IntrControl
 11888  01A7  0879               	movf	_DimmerLightsIntr,w
 11889  01A8  3E0A               	addlw	10
 11890  01A9  0086               	movwf	6
 11891  01AA  0187               	clrf	7
 11892  01AB  0872               	movf	??_setDimmerLights_IntrControl,w
 11893  01AC  0781               	addwf	1,f
 11894                           
 11895                           ;Dimmer_B1.c: 211: if (DimmerLightsIntr->TriacCount == 70) {
 11896  01AD  0879               	movf	_DimmerLightsIntr,w
 11897  01AE  3E0A               	addlw	10
 11898  01AF  0086               	movwf	6
 11899  01B0  0187               	clrf	7
 11900  01B1  0801               	movf	1,w
 11901  01B2  3A46               	xorlw	70
 11902  01B3  1D03               	skipz
 11903  01B4  0008               	return
 11904                           
 11905                           ;Dimmer_B1.c: 212: DimmerLightsIntr->TriacCount = 0;
 11906  01B5  0879               	movf	_DimmerLightsIntr,w
 11907  01B6  3E0A               	addlw	10
 11908  01B7  0086               	movwf	6
 11909  01B8  0187               	clrf	7
 11910  01B9  0181               	clrf	1
 11911                           
 11912                           ;Dimmer_B1.c: 213: DimmerLightsIntr->TriacFlag = 0;
 11913  01BA  0879               	movf	_DimmerLightsIntr,w
 11914  01BB  3E09               	addlw	9
 11915  01BC  0086               	movwf	6
 11916  01BD  0187               	clrf	7
 11917  01BE  1281               	bcf	1,5
 11918  01BF  0008               	return
 11919  01C0                     __end_of_setDimmerLights_IntrControl:	
 11920                           
 11921                           	psect	text79
 11922  17B6                     __ptext79:	
 11923 ;; *************** function _DimmerIntrPointSelect *****************
 11924 ;; Defined at:
 11925 ;;		line 65 in file "../src/Dimmer_B1.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  lights          1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  lights          1    1[COMMON] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;		None               void
 11932 ;; Registers used:
 11933 ;;		wreg
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        2 bytes
 11944 ;; Hardware stack levels used:    1
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_setDimmerLights_IntrControl
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           
 11953                           ;psect for function _DimmerIntrPointSelect
 11954  17B6                     _DimmerIntrPointSelect:	
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 11958                           ;DimmerIntrPointSelect@lights stored from wreg
 11959  17B6  00F1               	movwf	DimmerIntrPointSelect@lights
 11960                           
 11961                           ;Dimmer_B1.c: 67: if (lights == 1) {
 11962  17B7  0871               	movf	DimmerIntrPointSelect@lights,w
 11963  17B8  3A01               	xorlw	1
 11964  17B9  1D03               	skipz
 11965  17BA  0008               	return
 11966                           
 11967                           ;Dimmer_B1.c: 68: DimmerLightsIntr = &DimmerLights1;
 11968  17BB  30B4               	movlw	_DimmerLights1& (0+255)
 11969  17BC  00F0               	movwf	??_DimmerIntrPointSelect
 11970  17BD  0870               	movf	??_DimmerIntrPointSelect,w
 11971  17BE  00F9               	movwf	_DimmerLightsIntr
 11972  17BF  0008               	return
 11973  17C0                     __end_of_DimmerIntrPointSelect:	
 11974                           
 11975                           	psect	text80
 11976  08B9                     __ptext80:	
 11977 ;; *************** function _IOC_ISR *****************
 11978 ;; Defined at:
 11979 ;;		line 297 in file "../src/MCU_B1.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;		None
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;		None
 11984 ;; Return value:  Size  Location     Type
 11985 ;;		None               void
 11986 ;; Registers used:
 11987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;Total ram usage:        0 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    3
 12000 ;; This function calls:
 12001 ;;		_setDimmerReClock
 12002 ;; This function is called by:
 12003 ;;		_ISR
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           
 12008                           ;psect for function _IOC_ISR
 12009  08B9                     _IOC_ISR:	
 12010                           
 12011                           ;MCU_B1.c: 298: if (IOCIE == 1 && IOCBF2 == 1) {
 12012                           
 12013                           ;incstack = 0
 12014                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12015  08B9  1D8B               	btfss	11,3	;volatile
 12016  08BA  0008               	return
 12017  08BB  0027               	movlb	7	; select bank7
 12018  08BC  1D16               	btfss	22,2	;volatile
 12019  08BD  0008               	return
 12020                           
 12021                           ;MCU_B1.c: 299: IOCBF2 = 0;
 12022  08BE  1116               	bcf	22,2	;volatile
 12023                           
 12024                           ;MCU_B1.c: 300: IOCIF = 0;
 12025  08BF  100B               	bcf	11,0	;volatile
 12026                           
 12027                           ;MCU_B1.c: 301: if (myMain->PowerON == 1) {
 12028  08C0  0020               	movlb	0	; select bank0
 12029  08C1  086C               	movf	_myMain,w
 12030  08C2  0086               	movwf	6
 12031  08C3  0187               	clrf	7
 12032  08C4  1C01               	btfss	1,0
 12033  08C5  0008               	return
 12034                           
 12035                           ;MCU_B1.c: 303: setDimmerReClock();
 12036  08C6  3197  278E         	fcall	_setDimmerReClock
 12037  08C8  0008               	return
 12038  08C9                     __end_of_IOC_ISR:	
 12039                           
 12040                           	psect	text81
 12041  178E                     __ptext81:	
 12042 ;; *************** function _setDimmerReClock *****************
 12043 ;; Defined at:
 12044 ;;		line 175 in file "../src/MCU_B1.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;		None
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;		None
 12049 ;; Return value:  Size  Location     Type
 12050 ;;		None               void
 12051 ;; Registers used:
 12052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:    2
 12065 ;; This function calls:
 12066 ;;		_setDimmerLights_IntrIOC_GO
 12067 ;; This function is called by:
 12068 ;;		_IOC_ISR
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           
 12073                           ;psect for function _setDimmerReClock
 12074  178E                     _setDimmerReClock:	
 12075                           
 12076                           ;MCU_B1.c: 180: setDimmerLights_IntrIOC_GO(1);
 12077                           
 12078                           ;incstack = 0
 12079                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12080  178E  3001               	movlw	1
 12081  178F  3189  2166         	fcall	_setDimmerLights_IntrIOC_GO
 12082                           
 12083                           ;MCU_B1.c: 191: TMR0 = 255;
 12084  1791  30FF               	movlw	255
 12085  1792  0020               	movlb	0	; select bank0
 12086  1793  0095               	movwf	21	;volatile
 12087  1794  0008               	return
 12088  1795                     __end_of_setDimmerReClock:	
 12089                           
 12090                           	psect	text82
 12091  0966                     __ptext82:	
 12092 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 12093 ;; Defined at:
 12094 ;;		line 28 in file "../src/Dimmer_B1.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;  lights          1    wreg     unsigned char 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  lights          1    2[COMMON] unsigned char 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;		None               void
 12101 ;; Registers used:
 12102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;Total ram usage:        1 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:    1
 12115 ;; This function calls:
 12116 ;;		_DimmerIntrIOCPointSelect
 12117 ;; This function is called by:
 12118 ;;		_setDimmerReClock
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           
 12123                           ;psect for function _setDimmerLights_IntrIOC_GO
 12124  0966                     _setDimmerLights_IntrIOC_GO:	
 12125                           
 12126                           ;incstack = 0
 12127                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12128                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 12129  0966  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 12130                           
 12131                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 12132  0967  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 12133  0968  3197  27AC  3189   	fcall	_DimmerIntrIOCPointSelect
 12134                           
 12135                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 12136  096B  087A               	movf	_DimmerLightsIntrIOC,w
 12137  096C  0086               	movwf	6
 12138  096D  0187               	clrf	7
 12139  096E  1801               	btfsc	1,0
 12140  096F  0008               	return
 12141  0970  087A               	movf	_DimmerLightsIntrIOC,w
 12142  0971  3E09               	addlw	9
 12143  0972  0086               	movwf	6
 12144  0973  0187               	clrf	7
 12145  0974  1A81               	btfsc	1,5
 12146  0975  0008               	return
 12147                           
 12148                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 12149  0976  087A               	movf	_DimmerLightsIntrIOC,w
 12150  0977  0086               	movwf	6
 12151  0978  0187               	clrf	7
 12152  0979  1401               	bsf	1,0
 12153                           
 12154                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 12155  097A  087A               	movf	_DimmerLightsIntrIOC,w
 12156  097B  3E09               	addlw	9
 12157  097C  0086               	movwf	6
 12158  097D  0187               	clrf	7
 12159  097E  1681               	bsf	1,5
 12160  097F  0008               	return
 12161  0980                     __end_of_setDimmerLights_IntrIOC_GO:	
 12162                           
 12163                           	psect	text83
 12164  17AC                     __ptext83:	
 12165 ;; *************** function _DimmerIntrIOCPointSelect *****************
 12166 ;; Defined at:
 12167 ;;		line 8 in file "../src/Dimmer_B1.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  lights          1    wreg     unsigned char 
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;  lights          1    1[COMMON] unsigned char 
 12172 ;; Return value:  Size  Location     Type
 12173 ;;		None               void
 12174 ;; Registers used:
 12175 ;;		wreg
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;Total ram usage:        2 bytes
 12186 ;; Hardware stack levels used:    1
 12187 ;; This function calls:
 12188 ;;		Nothing
 12189 ;; This function is called by:
 12190 ;;		_setDimmerLights_IntrIOC_GO
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           
 12195                           ;psect for function _DimmerIntrIOCPointSelect
 12196  17AC                     _DimmerIntrIOCPointSelect:	
 12197                           
 12198                           ;incstack = 0
 12199                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 12200                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 12201  17AC  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 12202                           
 12203                           ;Dimmer_B1.c: 10: if (lights == 1) {
 12204  17AD  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12205  17AE  3A01               	xorlw	1
 12206  17AF  1D03               	skipz
 12207  17B0  0008               	return
 12208                           
 12209                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 12210  17B1  30B4               	movlw	_DimmerLights1& (0+255)
 12211  17B2  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12212  17B3  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12213  17B4  00FA               	movwf	_DimmerLightsIntrIOC
 12214  17B5  0008               	return
 12215  17B6                     __end_of_DimmerIntrIOCPointSelect:	
 12216                           
 12217                           	psect	text84
 12218  1787                     __ptext84:	
 12219 ;; *************** function _INT_ISR *****************
 12220 ;; Defined at:
 12221 ;;		line 250 in file "../src/MCU_B1.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;		None
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;		None
 12226 ;; Return value:  Size  Location     Type
 12227 ;;		None               void
 12228 ;; Registers used:
 12229 ;;		None
 12230 ;; Tracked objects:
 12231 ;;		On entry : 0/0
 12232 ;;		On exit  : 0/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12239 ;;Total ram usage:        0 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; This function calls:
 12242 ;;		Nothing
 12243 ;; This function is called by:
 12244 ;;		_ISR
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           
 12249                           ;psect for function _INT_ISR
 12250  1787                     _INT_ISR:	
 12251                           
 12252                           ;MCU_B1.c: 251: if (INTE == 1 && INTF == 1) {
 12253                           
 12254                           ;incstack = 0
 12255                           ; Regs used in _INT_ISR: []
 12256  1787  1E0B               	btfss	11,4	;volatile
 12257  1788  0008               	return
 12258  1789  1C8B               	btfss	11,1	;volatile
 12259  178A  0008               	return
 12260                           
 12261                           ;MCU_B1.c: 252: INTF = 0;
 12262  178B  108B               	bcf	11,1	;volatile
 12263                           
 12264                           ;MCU_B1.c: 253: INTE = 0;
 12265  178C  120B               	bcf	11,4	;volatile
 12266  178D  0008               	return
 12267  178E                     __end_of_INT_ISR:	
 12268                           ;MCU_B1.c: 254: ;;
 12269                           
 12270  007E                     btemp	set	126	;btemp
 12271  007E                     pic14e$flags	set	126
 12272  007E                     wtemp	set	126
 12273  007E                     wtemp0	set	126
 12274  0080                     wtemp1	set	128
 12275  0082                     wtemp2	set	130
 12276  0084                     wtemp3	set	132
 12277  0086                     wtemp4	set	134
 12278  0088                     wtemp5	set	136
 12279  007F                     wtemp6	set	127
 12280  007E                     ttemp	set	126
 12281  007E                     ttemp0	set	126
 12282  0081                     ttemp1	set	129
 12283  0084                     ttemp2	set	132
 12284  0087                     ttemp3	set	135
 12285  007F                     ttemp4	set	127
 12286  007E                     ltemp	set	126
 12287  007E                     ltemp0	set	126
 12288  0082                     ltemp1	set	130
 12289  0086                     ltemp2	set	134
 12290  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         139
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     54      79
    BANK1            80      0      77
    BANK2            80      0      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK1[9]), 

    PF	PTR struct PF size(1) Largest target is 8
		 -> NULL(NULL[0]), PF1(BANK1[8]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 8
		 -> NULL(NULL[0]), VarTimer0(BANK1[8]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK2[37]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    myMain	PTR struct myMain size(1) Largest target is 20
		 -> NULL(NULL[0]), _myMain(BANK1[20]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK0[3]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK2[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK1[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR0_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_Main->_setBuz
    _getPowerFault_AD->_getAD
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOnFunc
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _setDelayOff_GO->_DelayTimejudge
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _PowerFault_Main->_setPowerFault_Main
    _setPowerFault_Main->_setPowerFault_Exceptions
    _setPowerFault_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setSw_Status
    _PowerFault_Initialization->_setPowerFault_Initialization
    _Mcu_Initialization->_TMR0_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setSw_Status->_SwPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___awdiv
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   21633
                                             50 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
          _PowerFault_Initialization
                    _PowerFault_Main
              _Switch_Initialization
                        _Switch_Main
                   _getPowerFault_AD
              _myMain_Initialization
                            _my_Main
                _my_TestPointCleared
 ---------------------------------------------------------------------------------
 (1) _my_TestPointCleared                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1075
                             _setBuz
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getPowerFault_AD                                     5     5      0     130
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     108
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4735
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           4     4      0    4735
                                             15 BANK0      4     4      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    1614
                                             13 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    1501
                                              8 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2     465
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0      51
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0     455
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     194
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     194
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     866
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     866
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Main                                      0     0      0    3397
                 _setPowerFault_Main
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Main                                   2     2      0    3397
                                             16 BANK0      2     2      0
           _setPowerFault_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setPowerFault_Exceptions                             2     2      0    3397
                                             14 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setLED
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0      44
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    2421
                                             13 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     196
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    1104
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (1) _PowerFault_Initialization                            0     0      0       0
       _setPowerFault_Initialization
 ---------------------------------------------------------------------------------
 (2) _setPowerFault_Initialization                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                           _Fosc_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     932
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     932
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     230
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     230
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5557
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5283
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2640
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2195
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1976
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    2618
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    2528
                                             13 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     194
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1126
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     822
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0      90
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setMemory_GO                                         3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      44
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      44
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    1851
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    1851
                                             13 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     194
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     258
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     258
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1031
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  1     1      0     154
                                              7 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0     110
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrControl                         5     5      0     110
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrPointSelect                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              0     0      0      44
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (10) _setDimmerReClock                                    0     0      0      44
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (11) _setDimmerLights_IntrIOC_GO                          1     1      0      44
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (12) _DimmerIntrIOCPointSelect                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setSw_Status
         _SwPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _PowerFault_Initialization
     _setPowerFault_Initialization
   _PowerFault_Main
     _setPowerFault_Main
       _setPowerFault_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___awdiv
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setSw_Enable
           _SwPointSelect
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
   _getPowerFault_AD
     _getAD
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setSw_Enable
       _SwPointSelect
   _my_TestPointCleared

 _ISR (ROOT)
   _INT_ISR
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR0_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      ED      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      ED      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Oct 17 08:17:42 2014

                   __size_of_Switch_Main 0004                    ?_Flash_Memory_Erasing 0070  
           ??_setDimmerLights_TriggerAdj 0023                                       _PF 005B  
                                     _RD 0CA8                                       _WR 0CA9  
                           ___awdiv@sign 0026                                       _Sw 005C  
     __end_of_getDimmerLights_StatusFlag 17D4               _getDimmerLights_StatusFlag 17CA  
                 __end_of_setDelayOff_GO 0EDD                setDimmerLights_Adj@lights 0024  
                   _setDimmerLights_Main 0DDA                                      l481 0E61  
                                    l907 0B38                                      l881 092A  
                                    _GIE 005F                                      _RA0 0060  
   __size_of_DimmerLights_Initialization 000C                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 00D8  
                                    _RA4 0064                                      _LED 005A  
                                    _RB3 006B                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC5 0075  
                                    _RC7 0077                                      _ISR 0004  
        setPowerFault_Exceptions@command 002F                                      _Sw1 00CF  
                                    _Buz 0056                setDimmerLights_Adj@status 0022  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 17C0  
                        __end_of_ADC_Set 17A3                          ?_DelayTimejudge 0070  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
                        _setDimmerLights 06D1                    _setDimmerLights_ERROR 0C1F  
                  _setDimmerLights_AdjGo 089B                                     ?_ISR 0070  
                        _PowerFault_Main 1757                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 08C9                             ___ftdiv@sign 003D  
                                   l1194 0488                 ?_DimmerLightsPointSelect 0070  
                                   l1198 0B95                                     l1456 176A  
                                   l3420 09C0                          __end_of_IOC_Set 0846  
                                   l4302 03E7                                     l3504 0D9C  
                                   l3424 09C9                                     l4152 0DFE  
                                   l3530 0DD3                                     l3522 0DC2  
                                   l3514 0DA4                                     l4162 0E29  
                                   l4154 0E04                                     l4322 0444  
                                   l4402 028C                                     l3516 0DB0  
                                   l3452 07BA                                     l3700 0F57  
                                   l3526 0DCB                                     l3550 06B7  
                                   l3462 07CA                                     l3470 07D6  
                                   l1870 0F87                                     l3710 0F7D  
                                   l3702 0F5C                                     l4334 0479  
                                   l4326 0462                                     l3448 07B4  
                                   l3456 07C0                                     l1864 0F70  
                                   l4272 075F                                     l4192 0BD4  
                                   l4336 047E                                     l3560 0ABB  
                                   l3632 0EB7                                     l3546 069D  
                                   l3482 07F0                                     l3466 07D0  
                                   l4266 0748                                     l3570 0AC5  
                                   l3562 0ABD                                     l3634 0EC4  
                                   l4460 05CA                                     l3708 0F75  
                                   l3900 09FD                                     l4276 079C  
                                   l4196 0BDB                                     l3564 0ABF  
                                   l3628 0EB1                                     l4454 05BF  
                                   l3478 07EA                                     l3486 07F6  
                                   l3910 04A7                                     l3662 0E58  
                                   l3566 0AC1                                     l3574 0ACA  
                                   l3638 0ED0                                     l4374 0203  
                                   l4358 01D5                                     l4448 059D  
                                   l4456 05C4                                     l3808 0B1E  
                                   l3664 0E5D                                     l3568 0AC3  
                                   l3576 0ADE                                     l4384 022C  
                                   l3498 0D91                                     l3930 04FE  
                                   l4538 0346                                     l3658 0E45  
                                   l4394 0262                                     l4634 0F38  
                                   l4626 0F11                                     l3916 04BD  
                                   l3860 0B6A                                     l3758 071C  
                                   l3766 0AF4                                     l3694 0F46  
                                   l4582 0C9C                                     l3952 05EF  
                                   l3698 0F4D                                     l3938 0517  
                                   l3970 061F                                     l3980 0643  
                                   l3972 062D                                     l3982 0646  
                                   l3888 0D21                                     l4792 0D5A  
                                   l3986 0654                                     l3978 063A  
                                   l4788 0D50                    _myMain_Initialization 08F9  
                                   _CFGS 0CAE                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 178E                                     _LATC 010E  
                                   u2305 0DBB                                     u2315 0DC3  
                                   u2275 0DA7                                     u2295 0DB1  
                                   u2625 0F8E                                     u2555 0F52  
                                   u2575 0F6B                                     u2595 0F78  
                                   u2915 05F6                                     _PEIE 005E  
                                   u2845 04CF                                     _INTE 005C  
                                   _INTF 0059                                     u2855 04DF  
                                   u2865 04FF                                     u2945 0620  
                                   u3755 0560                                     u2875 050E  
                                   u2885 0518                                     u2975 063B  
                                   u3935 0C83                                     u3955 0C10  
                                   u3975 0EF4                                     u3985 0F25  
                                   _LWLO 0CAD                                     _TMR0 0015  
                        __end_of_INT_Set 177B                                     _WREN 0CAA  
                                   _Buz1 00C3                                     _main 0D34  
                           ___ftpack@arg 0020        __end_of_PowerFault_Initialization 1757  
                    __end_of_DlyOff_Main 1000                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 000F                                     btemp 007E  
                                   ltemp 007E                         _setDimmerReClock 178E  
                                   start 0016                                     ttemp 007E  
                                   wtemp 007E                 _setPowerFault_Exceptions 0B70  
                    DelayTimejudge@value 0021              __size_of_setPowerFault_Main 00DC  
                                  ??_ISR 0077                             ___fttol@exp1 004B  
                           ___fttol@lval 0047           __size_of_DimmerIntrPointSelect 000A  
                       __end_of_LED_Main 0839            __end_of_DimmerIntrPointSelect 17C0  
                  ?_setDimmerLights_Main 0070                          ?_setDelayOff_GO 0023  
                                  ?_main 0052                          __end_of___awdiv 0DDA  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0539  
                        ___awdiv@divisor 0020                          __end_of___fttol 065D  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                 _setDimmerLights_Switch 087D                          ___awdiv@counter 0025  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0070  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                          __CFG_WRT$HALF 0000       __end_of_setDimmerLights_IntrIOC_GO 0980  
             _setDimmerLights_IntrIOC_GO 0966                         __end_of_TMR0_ISR 0AB4  
                       __end_of_TMR0_Set 0853                                    _getAD 0920  
                          ___awtoft@sign 002D          __end_of_DimmerLights_Exceptions 0E84  
          DimmerLights_Exceptions@status 002D              DimmerIntrPointSelect@lights 0071  
                          ___ftpack@sign 0024                          __end_of_my_Main 0F3D  
                          ??_Buzzer_Main 0020                      setMemory_GO@command 0022  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010            __end_of_setLED_Initialization 08D9  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F              __size_of_Flash_Memory_Write 0031  
                         setSw_Status@sw 0023         __size_of_DelayOff_Initialization 0004  
              setDimmerLights_Main@clear 002D                   ??_Flash_Memory_Erasing 0020  
                        __initialization 0018                        ??_Sw_DimmerOnFunc 002D  
                      ??_setPercentValue 004C                             __end_of_main 0D86  
                       __end_of_Fosc_Set 1766                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 0741                     _setSw_Initialization 08D9  
                                 ??_main 0056                            ___fttol@sign1 0046  
                 ?_Buzzer_Initialization 0070        __size_of_DimmerIntrIOCPointSelect 000A  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 175A  
              ?_DimmerIntrIOCPointSelect 0070                                ??_IOC_ISR 0073  
                 ?_setDimmerLights_ERROR 0070                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 17F5                                ??_INT_ISR 0070  
                 ?_setDimmerLights_AdjGo 0022                                ??_INT_Set 0020  
                ??_Switch_Initialization 0025                                   ?_getAD 0020  
                            _DlyOff_Main 0F9E                   ?_myMain_Initialization 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                      ?_getPowerFault_AD 0070                         ___awdiv@dividend 0022  
                       __end_of___awtoft 0A14                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 0F9E                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 088C                                   i1l4110 019F  
                                 i1l4070 010B                                   i1l4062 00EE  
                                 i1l4038 0099                                   i1l4056 00D8  
                                 i1l4064 00F3                                   i1l4074 011F  
                                 i1l4058 00DD                                   i1l4084 0147  
                                 i1l4086 014C                                   i1l4078 0130  
                                 i1l4096 0178                                   u304_25 0077  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                     ??_getPowerFault_AD 0024                                   _OSCCON 0099  
                                 u386_25 0AA6                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 094D  
                  _Dimmer_Initialization 176F                                   _Dimmer 0058  
                                 _DlySw1 00E8               __end_of_Mcu_Initialization 094D  
                    __end_of_Buzzer_Main 05D6                                   _Memory 006E  
                                 _Timer0 007B       __end_of_setDimmerLights_TriggerAdj 08B9  
             _setDimmerLights_TriggerAdj 08AA            setDimmerLights_Switch@command 0022  
                              ??___awdiv 0024             __size_of_DelayOffPointSelect 000B  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___fttol 0042             ?_Flash_Memory_Initialization 0070  
                 ??_setDimmerLights_Main 002D                                   _setLED 07A4  
                                 _myMain 006C                         _DimmerLightsIntr 0079  
                  ?_setSw_Initialization 0070                    setDimmerLights@status 0024  
                       ___awdiv@quotient 0027                                   _setBuz 065D  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0070  
           __size_of_my_TestPointCleared 0010             ??_getDimmerLights_StatusFlag 0020  
                              ??_my_Main 002D      __end_of_setDimmerLights_IntrControl 01C0  
            _setDimmerLights_IntrControl 0042                 Flash_Memory_Read@address 0022  
                  __end_of_SwPointSelect 1800                  getPowerFault_AD@channel 0028  
           __size_of_Flash_Memory_Modify 0063        setDimmerLights_IntrControl@lights 0076  
            __size_of_DimmerLights_Close 0014                  __size_of_LedPointSelect 001D  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 176A                        ?_Sw_DimmerAdjFunc 0070  
   __end_of_setPowerFault_Initialization 086F    __size_of_setPowerFault_Initialization 000E  
           _setPowerFault_Initialization 0861                  __end_of__initialization 003E  
            ??_PowerFault_Initialization 0021              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0070                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0070                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0070                               ___fttol@f1 003E  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                     ??_Sw_DimmerOffFunc 0028                             __pidataBANK2 09D2  
                          __end_of_getAD 0936                                ?_TMR0_ISR 0070  
                              ?_TMR0_Set 0070             __size_of_setDimmerLights_Adj 002E  
                     _LED_Initialization 0821         __size_of_DimmerLights_Exceptions 0055  
                       ??_DelayTimejudge 0020              ?_getDimmerLights_StatusFlag 0070  
          ??_Flash_Memory_Initialization 0050                         ?_setDimmerLights 0024  
                       ?_PowerFault_Main 0070                 __end_of_setDimmerReClock 1795  
                    ?_LED_Initialization 0070                           _DimmerLights11 0078  
                   __size_of_setLED_Main 003D                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0023               ??_setPowerFault_Exceptions 002E  
           setDimmerLights_Switch@lights 0023                               __pbssBANK0 0056  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                              ?_Fosc_Set 0070                              _Buzzer_Main 0539  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                             ??_LED_Main 0025                            ?_setMemory_GO 0070  
                        __CFG_VCAPEN$OFF 0000                  _DelayOff_Initialization 175A  
                             __pnvCOMMON 007B            ?_setPowerFault_Initialization 0070  
                          ??_Switch_Main 0033                     ??_LED_Initialization 0025  
                           _DimmerLights 0059                        LedPointSelect@led 0021  
                 __size_of_DelayOff_Main 0004                              setBuz@count 002C  
                             __pmaintext 0D34         __size_of_DimmerLightsPointSelect 000B  
                       ??_setDelayOff_GO 0025            ??_DimmerLights_Initialization 0024  
                             ??_TMR0_ISR 0077                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0070                  ?_setDimmerLights_Switch 0022  
                   Sw_DimmerAdjFunc@Idle 0024                                  ?_setLED 0022  
                                _ADC_Set 179C                _PowerFault_Initialization 1754  
                                ?_setBuz 0029                                ?___awtoft 0028  
                              ?___ftpack 0020                            ?_setSw_Status 0022  
                      Sw_DimmerOnFunc@sw 002E                                  _IOC_ISR 08B9  
                                _IOC_Set 0839                                  _INT_ISR 1787  
                                _INT_Set 1775                        _Flash_Memory_Main 0C5F  
                      _Flash_Memory_Read 0980              ?_setDimmerLights_IntrIOC_GO 0070  
    setDimmerLights_TriggerERROR@command 0022                       ?_Flash_Memory_Main 0070  
                     ?_Flash_Memory_Read 0070                               ??_Fosc_Set 0020  
                            ?_TouchPower 0070                          _Sw_DimmerOnFunc 0B3F  
                        _setPercentValue 0CA4                           ??_setMemory_GO 0020  
                                _Dimmer1 0069                          __size_of_IO_Set 0019  
                    ??_Flash_Memory_Main 0027                      ??_Flash_Memory_Read 0020  
                                _VarLED1 0061                                  _VarLED2 0065  
             __end_of_setPowerFault_Main 0490         __end_of_DimmerIntrIOCPointSelect 17B6  
        __end_of_setDimmerLights_Trigger 089B           __end_of_setDimmerLights_Switch 088C  
                                ___awdiv 0D86                           ??_setSw_Enable 0022  
                                ___ftdiv 0490                                  ___fttol 05D6  
                    __end_of_Switch_Main 176A                  ??_Buzzer_Initialization 0020  
                                __myMain 00A0                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 005B  
                ??_setDimmerLights_ERROR 0024                          __size_of_setBuz 0074  
                         ??_setSw_Status 0023                                  __ptext1 08E9  
                                __ptext2 0EDD                                  __ptext3 08F9  
                                __ptext4 0BE2                                  __ptext5 0920  
                                __ptext6 1766                                  __ptext7 01C0  
                                __ptext8 0B3F                                  __ptext9 0CEA  
                ??_setDimmerLights_AdjGo 0023                      Sw_DimmerOnFunc@Idle 002D  
                  _DimmerIntrPointSelect 17B6                             __size_of_ISR 0012  
              __end_of_Flash_Memory_Main 0CA4                __end_of_Flash_Memory_Read 099A  
                ??_myMain_Initialization 0020                            _DelayOff_Main 175E  
                      _DimmerLights_Main 1795                                  _my_Main 0EDD  
         __size_of_DlyOff_Initialization 000B            __end_of_DlyOff_Initialization 17EA  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0070  
                     ?_DimmerLights_Main 0070                                  _product 006D  
                         _LedPointSelect 09B5                      _DelayOffPointSelect 17D4  
                                clrloop0 1782           __size_of_Switch_Initialization 0009  
          __end_of_Switch_Initialization 0809                     end_of_initialization 003E  
              ??_DelayOff_Initialization 0023               __end_of_Flash_Memory_Write 0B3F  
                    _my_TestPointCleared 08E9                                  init_ram 177B  
                    ??_DimmerLights_Main 002F                     Flash_Memory_Read@ret 0023  
                                initloop 177C                               _setSw_Main 01C0  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 08C9  
         ??_setPowerFault_Initialization 0020              ?_setDimmerLights_TriggerAdj 0022  
              __size_of_getPowerFault_AD 003D            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0070                      _Flash_Memory_Modify 0741  
                _DimmerLights_Exceptions 0E2F                      _Flash_Memory_Unlock 17A3  
       getDimmerLights_StatusFlag@Status 0020                     ?_my_TestPointCleared 0070  
                    __size_of_TouchPower 0005                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 179C  
                     _Mcu_Initialization 0936                           ?_DelayOff_Main 0070  
                        _setSw_Main$3897 0031                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 09D2                  __end_of_Sw_DimmerOnFunc 0B70  
                __end_of_setPercentValue 0CEA                      ?_Mcu_Initialization 0070  
       __end_of_setPowerFault_Exceptions 0BA5                     ?_Flash_Memory_Modify 0070  
                    _setDimmerLights_Adj 0AE0                     ?_Flash_Memory_Unlock 0070  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 0966  
                            _Switch_Main 1766                        __size_of_LED_Main 000C  
                _DimmerLightsPointSelect 17EA                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                     ?_setDimmerLights_Adj 0022  
              __size_of_Sw_DimmerAdjFunc 0026                 _DimmerIntrIOCPointSelect 17AC  
                  ??_my_TestPointCleared 0020                        __size_of_TMR0_ISR 002B  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR0_Set 000D  
                   __end_of_setMemory_GO 09B5            __size_of_setDimmerLights_Main 0055  
                         __end_of_setLED 07FF                           __end_of_setBuz 06D1  
              __size_of_Sw_DimmerOffFunc 004A               __size_of_Flash_Memory_Main 0045  
             __size_of_Flash_Memory_Read 001A                        ?_setDimmerReClock 0070  
                    start_initialization 0018                          ?_LedPointSelect 0070  
             __end_of_DimmerLights_Close 0920                              __end_of_ISR 0016  
                  ??_Flash_Memory_Modify 0024       __size_of_PowerFault_Initialization 0003  
                     ??_setDimmerReClock 0073                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                     __end_of_setSw_Enable 087D  
                           ?_Buzzer_Main 0070                                 ??_IO_Set 0020  
                              _VarErrLED 005D                              ?_setSw_Main 0070  
                 ?_setLED_Initialization 0070                     __end_of_setSw_Status 0861  
                     Sw_DimmerAdjFunc@sw 0025                        __size_of_Fosc_Set 0004  
                              _VarMemory 0120                                _VarTimer0 00E0  
              ??_DimmerLights_Exceptions 002D                    ??_setDimmerLights_Adj 0023  
                 __size_of_SwPointSelect 000B                              __pdataBANK2 0145  
                               ??_setLED 0023                                 ?_ADC_Set 0070  
                               ??_setBuz 002B                          ??_DelayOff_Main 0030  
             __size_of_DimmerLights_Main 0007                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0070                              __pbssCOMMON 0078  
                               ?_IOC_Set 0070                                ___latbits 0003  
                               ?_INT_ISR 0070                         ?_Sw_DimmerOnFunc 0070  
                          __pcstackBANK0 0020                                 ?_INT_Set 0070  
                       ?_setPercentValue 0070                 __size_of_setDimmerLights 0070  
                          DlyOff_Main@sw 002F                             ??_TouchPower 0020  
               __size_of_PowerFault_Main 0003                     __size_of_DlyOff_Main 0062  
                          _DimmerLights1 00B4                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020                                __pnvBANK0 006C  
            __size_of_LED_Initialization 000C                    DelayOffPointSelect@sw 0021  
                             setBuz@time 0029                      setDelayOff_GO@value 0024  
                       _getPowerFault_AD 0BE2        __size_of_setPowerFault_Exceptions 0035  
    __end_of_Flash_Memory_Initialization 03B4              _Flash_Memory_Initialization 02CF  
                               ?___awdiv 0020                ?_setPowerFault_Exceptions 0070  
                               ?___ftdiv 002E                                 ?___fttol 003E  
          __size_of_setSw_Initialization 0010           __size_of_Buzzer_Initialization 000A  
          __end_of_Buzzer_Initialization 17CA                         setPercentValue@i 004D  
                     __end_of_TouchPower 176F                       _setPowerFault_Main 03B4  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0040  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0022  
                    __size_of_setSw_Main 010F            __end_of_setDimmerLights_ERROR 0C5F  
         __size_of_setDimmerLights_AdjGo 000F            __end_of_setDimmerLights_AdjGo 08AA  
                               ?_my_Main 0070           __size_of_myMain_Initialization 0013  
          __end_of_myMain_Initialization 090C                      ?_setPowerFault_Main 0070  
                         __size_of_getAD 0016                  __size_of_DelayTimejudge 002C  
                          _SwPointSelect 17F5                       Sw_DimmerOffFunc@sw 002A  
                    __end_of_setLED_Main 0BE2                      _DimmerLightsIntrIOC 007A  
                               _LED_Main 082D                          SwPointSelect@sw 0021  
                              clear_ram0 1781      __end_of_DimmerLights_Initialization 0815  
            _DimmerLights_Initialization 0809           setDimmerLights_Trigger@command 0022  
                               _GO_nDONE 04E9                     ??_setPowerFault_Main 0030  
                  __size_of_setMemory_GO 001B                       _Flash_Memory_Write 0B0E  
                               _TMR0_ISR 0A89                                 _TMR0_Set 0846  
                       _Sw_DimmerAdjFunc 0A14        setDimmerLights_TriggerAdj@command 0022  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                    ?_Flash_Memory_Write 0070                         _Sw_DimmerOffFunc 0CEA  
                __size_of_setDelayOff_GO 0059                    __size_of_setSw_Enable 000E  
                               _DelayOff 0057                             setSw_Main@sw 0032  
       setDimmerLights_IntrIOC_GO@lights 0072                         __size_of_IOC_ISR 0010  
           ?_setDimmerLights_IntrControl 0070                         __size_of_IOC_Set 000D  
           __end_of_Flash_Memory_Erasing 0821                           ?_SwPointSelect 0070  
                            getAD@adcon0 0023                              getAD@adcon1 0020  
                       __size_of_INT_ISR 0007                           setLED_Main@led 0024  
                       __size_of_INT_Set 0006                    _DlyOff_Initialization 17DF  
                  __size_of_setSw_Status 000E                                 _Fosc_Set 1762  
                  _Switch_Initialization 0800                     ??_Flash_Memory_Write 0020  
                      ??_setDimmerLights 0025                             _setMemory_GO 099A  
                   __size_of_Buzzer_Main 009D                             ?_Switch_Main 0070  
             ??_DimmerIntrIOCPointSelect 0070             Flash_Memory_Initialization@i 0051  
                      ??_PowerFault_Main 0032                                setLED@led 0023  
   __end_of_setDimmerLights_TriggerERROR 0A61    __size_of_setDimmerLights_TriggerERROR 0027  
           _setDimmerLights_TriggerERROR 0A3A                  ??_DimmerIntrPointSelect 0070  
                       __size_of___awdiv 0054                         __size_of___ftdiv 00A9  
                           _setSw_Enable 086F                         __size_of___fttol 0087  
                               ___awtoft 09F2                         ??_LedPointSelect 0020  
                               ___ftpack 0F3D                             _setSw_Status 0853  
                            _setLED_Main 0BA5                 ?_DelayOff_Initialization 0070  
                       setDelayOff_GO@sw 0027                         __size_of_my_Main 0060  
                               __ptext10 0E84                                 __ptext11 0AB4  
                               __ptext20 0B70                                 __ptext12 0A14  
                               __ptext21 086F                                 __ptext13 08AA  
                               __ptext30 0839                                 __ptext22 0E2F  
                               __ptext14 089B                                 __ptext31 1775  
                               __ptext23 0A3A                                 __ptext15 0800  
                               __ptext40 0815                                 __ptext32 1762  
                               __ptext24 0C1F                                 __ptext16 08D9  
                               __ptext41 02CF                                 __ptext33 179C  
                               __ptext25 1754                                 __ptext17 176A  
                               __ptext50 1795                                 __ptext42 0CA4  
                               __ptext34 082D                                 __ptext26 0861  
                               __ptext18 1757                                 __ptext51 0DDA  
                               __ptext43 05D6                                 __ptext35 0BA5  
                               __ptext27 0936                                 __ptext19 03B4  
                               __ptext60 0A61                                 __ptext52 0AE0  
                               __ptext44 0490                                 __ptext36 0821  
                               __ptext28 0846                                 __ptext61 176F  
                               __ptext53 06D1                                 __ptext45 09F2  
                               __ptext37 08C9                                 __ptext29 094D  
                               __ptext70 0D86                                 __ptext62 175E  
                               __ptext54 07A4                                 __ptext46 0F3D  
                               __ptext38 0C5F                                 __ptext71 175A  
                               __ptext63 0F9E                                 __ptext55 09B5  
                               __ptext47 0B0E                                 __ptext39 0741  
                               __ptext80 08B9                                 __ptext72 17DF  
                               __ptext64 0853                                 __ptext56 090C  
                               __ptext48 17A3                                 __ptext81 178E  
                               __ptext73 17D4                                 __ptext65 17F5  
                               __ptext57 099A                                 __ptext49 0980  
                               __ptext82 0966                                 __ptext74 0539  
                               __ptext66 088C                                 __ptext58 17CA  
                               __ptext83 17AC                                 __ptext75 17C0  
                               __ptext67 087D                                 __ptext59 0809  
                               __ptext84 1787                                 __ptext68 17EA  
                               __ptext77 0A89                                 __ptext69 065D  
                               __ptext78 0042                                 __ptext79 17B6  
                               __product 0145            ??_setDimmerLights_IntrControl 0072  
                ??_setLED_Initialization 0024           __size_of_Dimmer_Initialization 0006  
          __end_of_Dimmer_Initialization 1775             __end_of_setDimmerLights_Main 0E2F  
            setDimmerLights_ERROR@lights 0025                             ??_setSw_Main 002F  
                          setLED@command 0022                            __size_of_main 0052  
             setDimmerLights_Main@lights 002E              __end_of_DelayOffPointSelect 17DF  
                     _DimmerLights_Close 090C                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 0007      __size_of_getDimmerLights_StatusFlag 000A  
            __end_of_my_TestPointCleared 08F9            setDimmerLights_Trigger@lights 0023  
            __size_of_Mcu_Initialization 0017                      ?_DimmerLights_Close 0070  
       setDimmerLights_TriggerAdj@lights 0023                                 main@argc 0052  
          ?_setDimmerLights_TriggerERROR 0022                                 main@argv 0054  
            __end_of_Flash_Memory_Modify 07A4              __end_of_Flash_Memory_Unlock 17AC  
                        ??_SwPointSelect 0020                       __end_of_setSw_Main 02CF  
                 ?_DlyOff_Initialization 0070                           _DelayTimejudge 0AB4  
                            pic14e$flags 007E                 __end_of_getPowerFault_AD 0C1F  
                   ??_DimmerLights_Close 0023             ??_setDimmerLights_IntrIOC_GO 0072  
                               intlevel1 0000                   ?_Switch_Initialization 0070  
 __end_of_setDimmerLights_Initialization 0A89  __size_of_setDimmerLights_Initialization 0028  
         _setDimmerLights_Initialization 0A61              __end_of_setDimmerLights_Adj 0B0E  
   __size_of_setDimmerLights_IntrControl 017E                     _Flash_Memory_Erasing 0815  
        __end_of_DelayOff_Initialization 175E      __size_of_setDimmerLights_IntrIOC_GO 001A  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1762  
                         _setDelayOff_GO 0E84                   __end_of_DelayTimejudge 0AE0  
   __size_of_Flash_Memory_Initialization 00E5                            ??_DlyOff_Main 002D  
               __end_of_Sw_DimmerAdjFunc 0A3A             __end_of_setSw_Initialization 08E9  
             ?_PowerFault_Initialization 0070               __end_of_LED_Initialization 082D  
       __size_of_setDimmerLights_Trigger 000F                 __size_of_Sw_DimmerOnFunc 0031  
               ?_DimmerLights_Exceptions 0070                 __size_of_setPercentValue 0046  
                   setPercentValue@value 004C                 __end_of_Sw_DimmerOffFunc 0D34  
        __size_of_setDimmerLights_Switch 000F                      setSw_Status@command 0022  
