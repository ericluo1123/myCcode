

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Oct 16 15:17:57 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	intentry,global,class=CODE,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	dabs	1,0x7E,2
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  011D                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018E                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0197                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020D                     	;# 
   178  0210                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  011D                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0194                     	;# 
   274  0195                     	;# 
   275  0196                     	;# 
   276  0197                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019C                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019F                     	;# 
   288  020D                     	;# 
   289  0210                     	;# 
   290  0211                     	;# 
   291  0211                     	;# 
   292  0212                     	;# 
   293  0212                     	;# 
   294  0213                     	;# 
   295  0213                     	;# 
   296  0214                     	;# 
   297  0214                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0298                     	;# 
   310  0298                     	;# 
   311  0299                     	;# 
   312  029A                     	;# 
   313  0394                     	;# 
   314  0395                     	;# 
   315  0396                     	;# 
   316  0FE4                     	;# 
   317  0FE5                     	;# 
   318  0FE6                     	;# 
   319  0FE7                     	;# 
   320  0FE8                     	;# 
   321  0FE9                     	;# 
   322  0FEA                     	;# 
   323  0FEB                     	;# 
   324  0FED                     	;# 
   325  0FEE                     	;# 
   326  0FEF                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  011D                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  018E                     	;# 
   379  0191                     	;# 
   380  0191                     	;# 
   381  0192                     	;# 
   382  0193                     	;# 
   383  0193                     	;# 
   384  0194                     	;# 
   385  0195                     	;# 
   386  0196                     	;# 
   387  0197                     	;# 
   388  0199                     	;# 
   389  019A                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019D                     	;# 
   397  019E                     	;# 
   398  019F                     	;# 
   399  020D                     	;# 
   400  0210                     	;# 
   401  0211                     	;# 
   402  0211                     	;# 
   403  0212                     	;# 
   404  0212                     	;# 
   405  0213                     	;# 
   406  0213                     	;# 
   407  0214                     	;# 
   408  0214                     	;# 
   409  0215                     	;# 
   410  0215                     	;# 
   411  0215                     	;# 
   412  0216                     	;# 
   413  0216                     	;# 
   414  0217                     	;# 
   415  0217                     	;# 
   416  0291                     	;# 
   417  0291                     	;# 
   418  0292                     	;# 
   419  0293                     	;# 
   420  0298                     	;# 
   421  0298                     	;# 
   422  0299                     	;# 
   423  029A                     	;# 
   424  0394                     	;# 
   425  0395                     	;# 
   426  0396                     	;# 
   427  0FE4                     	;# 
   428  0FE5                     	;# 
   429  0FE6                     	;# 
   430  0FE7                     	;# 
   431  0FE8                     	;# 
   432  0FE9                     	;# 
   433  0FEA                     	;# 
   434  0FEB                     	;# 
   435  0FED                     	;# 
   436  0FEE                     	;# 
   437  0FEF                     	;# 
   438  0000                     	;# 
   439  0001                     	;# 
   440  0002                     	;# 
   441  0003                     	;# 
   442  0004                     	;# 
   443  0005                     	;# 
   444  0006                     	;# 
   445  0007                     	;# 
   446  0008                     	;# 
   447  0009                     	;# 
   448  000A                     	;# 
   449  000B                     	;# 
   450  000C                     	;# 
   451  000D                     	;# 
   452  000E                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0015                     	;# 
   457  0016                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001C                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0097                     	;# 
   474  0099                     	;# 
   475  009A                     	;# 
   476  009B                     	;# 
   477  009B                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  011D                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  018E                     	;# 
   490  0191                     	;# 
   491  0191                     	;# 
   492  0192                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0194                     	;# 
   496  0195                     	;# 
   497  0196                     	;# 
   498  0197                     	;# 
   499  0199                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  020D                     	;# 
   511  0210                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  0291                     	;# 
   528  0291                     	;# 
   529  0292                     	;# 
   530  0293                     	;# 
   531  0298                     	;# 
   532  0298                     	;# 
   533  0299                     	;# 
   534  029A                     	;# 
   535  0394                     	;# 
   536  0395                     	;# 
   537  0396                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0097                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009B                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  010C                     	;# 
   593  010D                     	;# 
   594  010E                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  011D                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600  018E                     	;# 
   601  0191                     	;# 
   602  0191                     	;# 
   603  0192                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0197                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019C                     	;# 
   618  019D                     	;# 
   619  019E                     	;# 
   620  019F                     	;# 
   621  020D                     	;# 
   622  0210                     	;# 
   623  0211                     	;# 
   624  0211                     	;# 
   625  0212                     	;# 
   626  0212                     	;# 
   627  0213                     	;# 
   628  0213                     	;# 
   629  0214                     	;# 
   630  0214                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0298                     	;# 
   643  0298                     	;# 
   644  0299                     	;# 
   645  029A                     	;# 
   646  0394                     	;# 
   647  0395                     	;# 
   648  0396                     	;# 
   649  0FE4                     	;# 
   650  0FE5                     	;# 
   651  0FE6                     	;# 
   652  0FE7                     	;# 
   653  0FE8                     	;# 
   654  0FE9                     	;# 
   655  0FEA                     	;# 
   656  0FEB                     	;# 
   657  0FED                     	;# 
   658  0FEE                     	;# 
   659  0FEF                     	;# 
   660  0000                     	;# 
   661  0001                     	;# 
   662  0002                     	;# 
   663  0003                     	;# 
   664  0004                     	;# 
   665  0005                     	;# 
   666  0006                     	;# 
   667  0007                     	;# 
   668  0008                     	;# 
   669  0009                     	;# 
   670  000A                     	;# 
   671  000B                     	;# 
   672  000C                     	;# 
   673  000D                     	;# 
   674  000E                     	;# 
   675  0010                     	;# 
   676  0011                     	;# 
   677  0012                     	;# 
   678  0015                     	;# 
   679  0016                     	;# 
   680  0016                     	;# 
   681  0017                     	;# 
   682  0018                     	;# 
   683  0019                     	;# 
   684  001A                     	;# 
   685  001B                     	;# 
   686  001C                     	;# 
   687  008C                     	;# 
   688  008D                     	;# 
   689  008E                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  011D                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0194                     	;# 
   718  0195                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019B                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  019C                     	;# 
   729  019D                     	;# 
   730  019E                     	;# 
   731  019F                     	;# 
   732  020D                     	;# 
   733  0210                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0212                     	;# 
   738  0213                     	;# 
   739  0213                     	;# 
   740  0214                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0291                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0293                     	;# 
   753  0298                     	;# 
   754  0298                     	;# 
   755  0299                     	;# 
   756  029A                     	;# 
   757  0394                     	;# 
   758  0395                     	;# 
   759  0396                     	;# 
   760  0FE4                     	;# 
   761  0FE5                     	;# 
   762  0FE6                     	;# 
   763  0FE7                     	;# 
   764  0FE8                     	;# 
   765  0FE9                     	;# 
   766  0FEA                     	;# 
   767  0FEB                     	;# 
   768  0FED                     	;# 
   769  0FEE                     	;# 
   770  0FEF                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0008                     	;# 
   780  0009                     	;# 
   781  000A                     	;# 
   782  000B                     	;# 
   783  000C                     	;# 
   784  000D                     	;# 
   785  000E                     	;# 
   786  0010                     	;# 
   787  0011                     	;# 
   788  0012                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  008C                     	;# 
   799  008D                     	;# 
   800  008E                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0095                     	;# 
   805  0096                     	;# 
   806  0097                     	;# 
   807  0099                     	;# 
   808  009A                     	;# 
   809  009B                     	;# 
   810  009B                     	;# 
   811  009C                     	;# 
   812  009D                     	;# 
   813  009E                     	;# 
   814  010C                     	;# 
   815  010D                     	;# 
   816  010E                     	;# 
   817  0116                     	;# 
   818  0117                     	;# 
   819  011D                     	;# 
   820  018C                     	;# 
   821  018D                     	;# 
   822  018E                     	;# 
   823  0191                     	;# 
   824  0191                     	;# 
   825  0192                     	;# 
   826  0193                     	;# 
   827  0193                     	;# 
   828  0194                     	;# 
   829  0195                     	;# 
   830  0196                     	;# 
   831  0197                     	;# 
   832  0199                     	;# 
   833  019A                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019C                     	;# 
   839  019C                     	;# 
   840  019D                     	;# 
   841  019E                     	;# 
   842  019F                     	;# 
   843  020D                     	;# 
   844  0210                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0213                     	;# 
   851  0214                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0215                     	;# 
   856  0216                     	;# 
   857  0216                     	;# 
   858  0217                     	;# 
   859  0217                     	;# 
   860  0291                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0293                     	;# 
   864  0298                     	;# 
   865  0298                     	;# 
   866  0299                     	;# 
   867  029A                     	;# 
   868  0394                     	;# 
   869  0395                     	;# 
   870  0396                     	;# 
   871  0FE4                     	;# 
   872  0FE5                     	;# 
   873  0FE6                     	;# 
   874  0FE7                     	;# 
   875  0FE8                     	;# 
   876  0FE9                     	;# 
   877  0FEA                     	;# 
   878  0FEB                     	;# 
   879  0FED                     	;# 
   880  0FEE                     	;# 
   881  0FEF                     	;# 
   882  0000                     	;# 
   883  0001                     	;# 
   884  0002                     	;# 
   885  0003                     	;# 
   886  0004                     	;# 
   887  0005                     	;# 
   888  0006                     	;# 
   889  0007                     	;# 
   890  0008                     	;# 
   891  0009                     	;# 
   892  000A                     	;# 
   893  000B                     	;# 
   894  000C                     	;# 
   895  000D                     	;# 
   896  000E                     	;# 
   897  0010                     	;# 
   898  0011                     	;# 
   899  0012                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  001A                     	;# 
   907  001B                     	;# 
   908  001C                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  0090                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0095                     	;# 
   916  0096                     	;# 
   917  0097                     	;# 
   918  0099                     	;# 
   919  009A                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  010E                     	;# 
   928  0116                     	;# 
   929  0117                     	;# 
   930  011D                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  018E                     	;# 
   934  0191                     	;# 
   935  0191                     	;# 
   936  0192                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0194                     	;# 
   940  0195                     	;# 
   941  0196                     	;# 
   942  0197                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019C                     	;# 
   950  019C                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019F                     	;# 
   954  020D                     	;# 
   955  0210                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0291                     	;# 
   972  0291                     	;# 
   973  0292                     	;# 
   974  0293                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  0394                     	;# 
   980  0395                     	;# 
   981  0396                     	;# 
   982  0FE4                     	;# 
   983  0FE5                     	;# 
   984  0FE6                     	;# 
   985  0FE7                     	;# 
   986  0FE8                     	;# 
   987  0FE9                     	;# 
   988  0FEA                     	;# 
   989  0FEB                     	;# 
   990  0FED                     	;# 
   991  0FEE                     	;# 
   992  0FEF                     	;# 
   993  0000                     	;# 
   994  0001                     	;# 
   995  0002                     	;# 
   996  0003                     	;# 
   997  0004                     	;# 
   998  0005                     	;# 
   999  0006                     	;# 
  1000  0007                     	;# 
  1001  0008                     	;# 
  1002  0009                     	;# 
  1003  000A                     	;# 
  1004  000B                     	;# 
  1005  000C                     	;# 
  1006  000D                     	;# 
  1007  000E                     	;# 
  1008  0010                     	;# 
  1009  0011                     	;# 
  1010  0012                     	;# 
  1011  0015                     	;# 
  1012  0016                     	;# 
  1013  0016                     	;# 
  1014  0017                     	;# 
  1015  0018                     	;# 
  1016  0019                     	;# 
  1017  001A                     	;# 
  1018  001B                     	;# 
  1019  001C                     	;# 
  1020  008C                     	;# 
  1021  008D                     	;# 
  1022  008E                     	;# 
  1023  0090                     	;# 
  1024  0091                     	;# 
  1025  0092                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0097                     	;# 
  1029  0099                     	;# 
  1030  009A                     	;# 
  1031  009B                     	;# 
  1032  009B                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009E                     	;# 
  1036  010C                     	;# 
  1037  010D                     	;# 
  1038  010E                     	;# 
  1039  0116                     	;# 
  1040  0117                     	;# 
  1041  011D                     	;# 
  1042  018C                     	;# 
  1043  018D                     	;# 
  1044  018E                     	;# 
  1045  0191                     	;# 
  1046  0191                     	;# 
  1047  0192                     	;# 
  1048  0193                     	;# 
  1049  0193                     	;# 
  1050  0194                     	;# 
  1051  0195                     	;# 
  1052  0196                     	;# 
  1053  0197                     	;# 
  1054  0199                     	;# 
  1055  019A                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019D                     	;# 
  1063  019E                     	;# 
  1064  019F                     	;# 
  1065  020D                     	;# 
  1066  0210                     	;# 
  1067  0211                     	;# 
  1068  0211                     	;# 
  1069  0212                     	;# 
  1070  0212                     	;# 
  1071  0213                     	;# 
  1072  0213                     	;# 
  1073  0214                     	;# 
  1074  0214                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  0291                     	;# 
  1083  0291                     	;# 
  1084  0292                     	;# 
  1085  0293                     	;# 
  1086  0298                     	;# 
  1087  0298                     	;# 
  1088  0299                     	;# 
  1089  029A                     	;# 
  1090  0394                     	;# 
  1091  0395                     	;# 
  1092  0396                     	;# 
  1093  0FE4                     	;# 
  1094  0FE5                     	;# 
  1095  0FE6                     	;# 
  1096  0FE7                     	;# 
  1097  0FE8                     	;# 
  1098  0FE9                     	;# 
  1099  0FEA                     	;# 
  1100  0FEB                     	;# 
  1101  0FED                     	;# 
  1102  0FEE                     	;# 
  1103  0FEF                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000D                     	;# 
  1118  000E                     	;# 
  1119  0010                     	;# 
  1120  0011                     	;# 
  1121  0012                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0016                     	;# 
  1125  0017                     	;# 
  1126  0018                     	;# 
  1127  0019                     	;# 
  1128  001A                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  008C                     	;# 
  1132  008D                     	;# 
  1133  008E                     	;# 
  1134  0090                     	;# 
  1135  0091                     	;# 
  1136  0092                     	;# 
  1137  0095                     	;# 
  1138  0096                     	;# 
  1139  0097                     	;# 
  1140  0099                     	;# 
  1141  009A                     	;# 
  1142  009B                     	;# 
  1143  009B                     	;# 
  1144  009C                     	;# 
  1145  009D                     	;# 
  1146  009E                     	;# 
  1147  010C                     	;# 
  1148  010D                     	;# 
  1149  010E                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  011D                     	;# 
  1153  018C                     	;# 
  1154  018D                     	;# 
  1155  018E                     	;# 
  1156  0191                     	;# 
  1157  0191                     	;# 
  1158  0192                     	;# 
  1159  0193                     	;# 
  1160  0193                     	;# 
  1161  0194                     	;# 
  1162  0195                     	;# 
  1163  0196                     	;# 
  1164  0197                     	;# 
  1165  0199                     	;# 
  1166  019A                     	;# 
  1167  019B                     	;# 
  1168  019B                     	;# 
  1169  019B                     	;# 
  1170  019B                     	;# 
  1171  019C                     	;# 
  1172  019C                     	;# 
  1173  019D                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  020D                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0212                     	;# 
  1182  0213                     	;# 
  1183  0213                     	;# 
  1184  0214                     	;# 
  1185  0214                     	;# 
  1186  0215                     	;# 
  1187  0215                     	;# 
  1188  0215                     	;# 
  1189  0216                     	;# 
  1190  0216                     	;# 
  1191  0217                     	;# 
  1192  0217                     	;# 
  1193  0291                     	;# 
  1194  0291                     	;# 
  1195  0292                     	;# 
  1196  0293                     	;# 
  1197  0298                     	;# 
  1198  0298                     	;# 
  1199  0299                     	;# 
  1200  029A                     	;# 
  1201  0394                     	;# 
  1202  0395                     	;# 
  1203  0396                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEF                     	;# 
  1215  0000                     	;# 
  1216  0001                     	;# 
  1217  0002                     	;# 
  1218  0003                     	;# 
  1219  0004                     	;# 
  1220  0005                     	;# 
  1221  0006                     	;# 
  1222  0007                     	;# 
  1223  0008                     	;# 
  1224  0009                     	;# 
  1225  000A                     	;# 
  1226  000B                     	;# 
  1227  000C                     	;# 
  1228  000D                     	;# 
  1229  000E                     	;# 
  1230  0010                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0015                     	;# 
  1234  0016                     	;# 
  1235  0016                     	;# 
  1236  0017                     	;# 
  1237  0018                     	;# 
  1238  0019                     	;# 
  1239  001A                     	;# 
  1240  001B                     	;# 
  1241  001C                     	;# 
  1242  008C                     	;# 
  1243  008D                     	;# 
  1244  008E                     	;# 
  1245  0090                     	;# 
  1246  0091                     	;# 
  1247  0092                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  010E                     	;# 
  1261  0116                     	;# 
  1262  0117                     	;# 
  1263  011D                     	;# 
  1264  018C                     	;# 
  1265  018D                     	;# 
  1266  018E                     	;# 
  1267  0191                     	;# 
  1268  0191                     	;# 
  1269  0192                     	;# 
  1270  0193                     	;# 
  1271  0193                     	;# 
  1272  0194                     	;# 
  1273  0195                     	;# 
  1274  0196                     	;# 
  1275  0197                     	;# 
  1276  0199                     	;# 
  1277  019A                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019E                     	;# 
  1286  019F                     	;# 
  1287  020D                     	;# 
  1288  0210                     	;# 
  1289  0211                     	;# 
  1290  0211                     	;# 
  1291  0212                     	;# 
  1292  0212                     	;# 
  1293  0213                     	;# 
  1294  0213                     	;# 
  1295  0214                     	;# 
  1296  0214                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0216                     	;# 
  1301  0216                     	;# 
  1302  0217                     	;# 
  1303  0217                     	;# 
  1304  0291                     	;# 
  1305  0291                     	;# 
  1306  0292                     	;# 
  1307  0293                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  029A                     	;# 
  1312  0394                     	;# 
  1313  0395                     	;# 
  1314  0396                     	;# 
  1315  0FE4                     	;# 
  1316  0FE5                     	;# 
  1317  0FE6                     	;# 
  1318  0FE7                     	;# 
  1319  0FE8                     	;# 
  1320  0FE9                     	;# 
  1321  0FEA                     	;# 
  1322  0FEB                     	;# 
  1323  0FED                     	;# 
  1324  0FEE                     	;# 
  1325  0FEF                     	;# 
  1326  0000                     	;# 
  1327  0001                     	;# 
  1328  0002                     	;# 
  1329  0003                     	;# 
  1330  0004                     	;# 
  1331  0005                     	;# 
  1332  0006                     	;# 
  1333  0007                     	;# 
  1334  0008                     	;# 
  1335  0009                     	;# 
  1336  000A                     	;# 
  1337  000B                     	;# 
  1338  000C                     	;# 
  1339  000D                     	;# 
  1340  000E                     	;# 
  1341  0010                     	;# 
  1342  0011                     	;# 
  1343  0012                     	;# 
  1344  0015                     	;# 
  1345  0016                     	;# 
  1346  0016                     	;# 
  1347  0017                     	;# 
  1348  0018                     	;# 
  1349  0019                     	;# 
  1350  001A                     	;# 
  1351  001B                     	;# 
  1352  001C                     	;# 
  1353  008C                     	;# 
  1354  008D                     	;# 
  1355  008E                     	;# 
  1356  0090                     	;# 
  1357  0091                     	;# 
  1358  0092                     	;# 
  1359  0095                     	;# 
  1360  0096                     	;# 
  1361  0097                     	;# 
  1362  0099                     	;# 
  1363  009A                     	;# 
  1364  009B                     	;# 
  1365  009B                     	;# 
  1366  009C                     	;# 
  1367  009D                     	;# 
  1368  009E                     	;# 
  1369  010C                     	;# 
  1370  010D                     	;# 
  1371  010E                     	;# 
  1372  0116                     	;# 
  1373  0117                     	;# 
  1374  011D                     	;# 
  1375  018C                     	;# 
  1376  018D                     	;# 
  1377  018E                     	;# 
  1378  0191                     	;# 
  1379  0191                     	;# 
  1380  0192                     	;# 
  1381  0193                     	;# 
  1382  0193                     	;# 
  1383  0194                     	;# 
  1384  0195                     	;# 
  1385  0196                     	;# 
  1386  0197                     	;# 
  1387  0199                     	;# 
  1388  019A                     	;# 
  1389  019B                     	;# 
  1390  019B                     	;# 
  1391  019B                     	;# 
  1392  019B                     	;# 
  1393  019C                     	;# 
  1394  019C                     	;# 
  1395  019D                     	;# 
  1396  019E                     	;# 
  1397  019F                     	;# 
  1398  020D                     	;# 
  1399  0210                     	;# 
  1400  0211                     	;# 
  1401  0211                     	;# 
  1402  0212                     	;# 
  1403  0212                     	;# 
  1404  0213                     	;# 
  1405  0213                     	;# 
  1406  0214                     	;# 
  1407  0214                     	;# 
  1408  0215                     	;# 
  1409  0215                     	;# 
  1410  0215                     	;# 
  1411  0216                     	;# 
  1412  0216                     	;# 
  1413  0217                     	;# 
  1414  0217                     	;# 
  1415  0291                     	;# 
  1416  0291                     	;# 
  1417  0292                     	;# 
  1418  0293                     	;# 
  1419  0298                     	;# 
  1420  0298                     	;# 
  1421  0299                     	;# 
  1422  029A                     	;# 
  1423  0394                     	;# 
  1424  0395                     	;# 
  1425  0396                     	;# 
  1426  0FE4                     	;# 
  1427  0FE5                     	;# 
  1428  0FE6                     	;# 
  1429  0FE7                     	;# 
  1430  0FE8                     	;# 
  1431  0FE9                     	;# 
  1432  0FEA                     	;# 
  1433  0FEB                     	;# 
  1434  0FED                     	;# 
  1435  0FEE                     	;# 
  1436  0FEF                     	;# 
  1437  0000                     	;# 
  1438  0001                     	;# 
  1439  0002                     	;# 
  1440  0003                     	;# 
  1441  0004                     	;# 
  1442  0005                     	;# 
  1443  0006                     	;# 
  1444  0007                     	;# 
  1445  0008                     	;# 
  1446  0009                     	;# 
  1447  000A                     	;# 
  1448  000B                     	;# 
  1449  000C                     	;# 
  1450  000D                     	;# 
  1451  000E                     	;# 
  1452  0010                     	;# 
  1453  0011                     	;# 
  1454  0012                     	;# 
  1455  0015                     	;# 
  1456  0016                     	;# 
  1457  0016                     	;# 
  1458  0017                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  001B                     	;# 
  1463  001C                     	;# 
  1464  008C                     	;# 
  1465  008D                     	;# 
  1466  008E                     	;# 
  1467  0090                     	;# 
  1468  0091                     	;# 
  1469  0092                     	;# 
  1470  0095                     	;# 
  1471  0096                     	;# 
  1472  0097                     	;# 
  1473  0099                     	;# 
  1474  009A                     	;# 
  1475  009B                     	;# 
  1476  009B                     	;# 
  1477  009C                     	;# 
  1478  009D                     	;# 
  1479  009E                     	;# 
  1480  010C                     	;# 
  1481  010D                     	;# 
  1482  010E                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  011D                     	;# 
  1486  018C                     	;# 
  1487  018D                     	;# 
  1488  018E                     	;# 
  1489  0191                     	;# 
  1490  0191                     	;# 
  1491  0192                     	;# 
  1492  0193                     	;# 
  1493  0193                     	;# 
  1494  0194                     	;# 
  1495  0195                     	;# 
  1496  0196                     	;# 
  1497  0197                     	;# 
  1498  0199                     	;# 
  1499  019A                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019B                     	;# 
  1503  019B                     	;# 
  1504  019C                     	;# 
  1505  019C                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019F                     	;# 
  1509  020D                     	;# 
  1510  0210                     	;# 
  1511  0211                     	;# 
  1512  0211                     	;# 
  1513  0212                     	;# 
  1514  0212                     	;# 
  1515  0213                     	;# 
  1516  0213                     	;# 
  1517  0214                     	;# 
  1518  0214                     	;# 
  1519  0215                     	;# 
  1520  0215                     	;# 
  1521  0215                     	;# 
  1522  0216                     	;# 
  1523  0216                     	;# 
  1524  0217                     	;# 
  1525  0217                     	;# 
  1526  0291                     	;# 
  1527  0291                     	;# 
  1528  0292                     	;# 
  1529  0293                     	;# 
  1530  0298                     	;# 
  1531  0298                     	;# 
  1532  0299                     	;# 
  1533  029A                     	;# 
  1534  0394                     	;# 
  1535  0395                     	;# 
  1536  0396                     	;# 
  1537  0FE4                     	;# 
  1538  0FE5                     	;# 
  1539  0FE6                     	;# 
  1540  0FE7                     	;# 
  1541  0FE8                     	;# 
  1542  0FE9                     	;# 
  1543  0FEA                     	;# 
  1544  0FEB                     	;# 
  1545  0FED                     	;# 
  1546  0FEE                     	;# 
  1547  0FEF                     	;# 
  1548  0000                     	;# 
  1549  0001                     	;# 
  1550  0002                     	;# 
  1551  0003                     	;# 
  1552  0004                     	;# 
  1553  0005                     	;# 
  1554  0006                     	;# 
  1555  0007                     	;# 
  1556  0008                     	;# 
  1557  0009                     	;# 
  1558  000A                     	;# 
  1559  000B                     	;# 
  1560  000C                     	;# 
  1561  000D                     	;# 
  1562  000E                     	;# 
  1563  0010                     	;# 
  1564  0011                     	;# 
  1565  0012                     	;# 
  1566  0015                     	;# 
  1567  0016                     	;# 
  1568  0016                     	;# 
  1569  0017                     	;# 
  1570  0018                     	;# 
  1571  0019                     	;# 
  1572  001A                     	;# 
  1573  001B                     	;# 
  1574  001C                     	;# 
  1575  008C                     	;# 
  1576  008D                     	;# 
  1577  008E                     	;# 
  1578  0090                     	;# 
  1579  0091                     	;# 
  1580  0092                     	;# 
  1581  0095                     	;# 
  1582  0096                     	;# 
  1583  0097                     	;# 
  1584  0099                     	;# 
  1585  009A                     	;# 
  1586  009B                     	;# 
  1587  009B                     	;# 
  1588  009C                     	;# 
  1589  009D                     	;# 
  1590  009E                     	;# 
  1591  010C                     	;# 
  1592  010D                     	;# 
  1593  010E                     	;# 
  1594  0116                     	;# 
  1595  0117                     	;# 
  1596  011D                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  018E                     	;# 
  1600  0191                     	;# 
  1601  0191                     	;# 
  1602  0192                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0197                     	;# 
  1609  0199                     	;# 
  1610  019A                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019C                     	;# 
  1616  019C                     	;# 
  1617  019D                     	;# 
  1618  019E                     	;# 
  1619  019F                     	;# 
  1620  020D                     	;# 
  1621  0210                     	;# 
  1622  0211                     	;# 
  1623  0211                     	;# 
  1624  0212                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0213                     	;# 
  1628  0214                     	;# 
  1629  0214                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0216                     	;# 
  1634  0216                     	;# 
  1635  0217                     	;# 
  1636  0217                     	;# 
  1637  0291                     	;# 
  1638  0291                     	;# 
  1639  0292                     	;# 
  1640  0293                     	;# 
  1641  0298                     	;# 
  1642  0298                     	;# 
  1643  0299                     	;# 
  1644  029A                     	;# 
  1645  0394                     	;# 
  1646  0395                     	;# 
  1647  0396                     	;# 
  1648  0FE4                     	;# 
  1649  0FE5                     	;# 
  1650  0FE6                     	;# 
  1651  0FE7                     	;# 
  1652  0FE8                     	;# 
  1653  0FE9                     	;# 
  1654  0FEA                     	;# 
  1655  0FEB                     	;# 
  1656  0FED                     	;# 
  1657  0FEE                     	;# 
  1658  0FEF                     	;# 
  1659  0000                     	;# 
  1660  0001                     	;# 
  1661  0002                     	;# 
  1662  0003                     	;# 
  1663  0004                     	;# 
  1664  0005                     	;# 
  1665  0006                     	;# 
  1666  0007                     	;# 
  1667  0008                     	;# 
  1668  0009                     	;# 
  1669  000A                     	;# 
  1670  000B                     	;# 
  1671  000C                     	;# 
  1672  000D                     	;# 
  1673  000E                     	;# 
  1674  0010                     	;# 
  1675  0011                     	;# 
  1676  0012                     	;# 
  1677  0015                     	;# 
  1678  0016                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  0019                     	;# 
  1683  001A                     	;# 
  1684  001B                     	;# 
  1685  001C                     	;# 
  1686  008C                     	;# 
  1687  008D                     	;# 
  1688  008E                     	;# 
  1689  0090                     	;# 
  1690  0091                     	;# 
  1691  0092                     	;# 
  1692  0095                     	;# 
  1693  0096                     	;# 
  1694  0097                     	;# 
  1695  0099                     	;# 
  1696  009A                     	;# 
  1697  009B                     	;# 
  1698  009B                     	;# 
  1699  009C                     	;# 
  1700  009D                     	;# 
  1701  009E                     	;# 
  1702  010C                     	;# 
  1703  010D                     	;# 
  1704  010E                     	;# 
  1705  0116                     	;# 
  1706  0117                     	;# 
  1707  011D                     	;# 
  1708  018C                     	;# 
  1709  018D                     	;# 
  1710  018E                     	;# 
  1711  0191                     	;# 
  1712  0191                     	;# 
  1713  0192                     	;# 
  1714  0193                     	;# 
  1715  0193                     	;# 
  1716  0194                     	;# 
  1717  0195                     	;# 
  1718  0196                     	;# 
  1719  0197                     	;# 
  1720  0199                     	;# 
  1721  019A                     	;# 
  1722  019B                     	;# 
  1723  019B                     	;# 
  1724  019B                     	;# 
  1725  019B                     	;# 
  1726  019C                     	;# 
  1727  019C                     	;# 
  1728  019D                     	;# 
  1729  019E                     	;# 
  1730  019F                     	;# 
  1731  020D                     	;# 
  1732  0210                     	;# 
  1733  0211                     	;# 
  1734  0211                     	;# 
  1735  0212                     	;# 
  1736  0212                     	;# 
  1737  0213                     	;# 
  1738  0213                     	;# 
  1739  0214                     	;# 
  1740  0214                     	;# 
  1741  0215                     	;# 
  1742  0215                     	;# 
  1743  0215                     	;# 
  1744  0216                     	;# 
  1745  0216                     	;# 
  1746  0217                     	;# 
  1747  0217                     	;# 
  1748  0291                     	;# 
  1749  0291                     	;# 
  1750  0292                     	;# 
  1751  0293                     	;# 
  1752  0298                     	;# 
  1753  0298                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  0394                     	;# 
  1757  0395                     	;# 
  1758  0396                     	;# 
  1759  0FE4                     	;# 
  1760  0FE5                     	;# 
  1761  0FE6                     	;# 
  1762  0FE7                     	;# 
  1763  0FE8                     	;# 
  1764  0FE9                     	;# 
  1765  0FEA                     	;# 
  1766  0FEB                     	;# 
  1767  0FED                     	;# 
  1768  0FEE                     	;# 
  1769  0FEF                     	;# 
  1770  0000                     	;# 
  1771  0001                     	;# 
  1772  0002                     	;# 
  1773  0003                     	;# 
  1774  0004                     	;# 
  1775  0005                     	;# 
  1776  0006                     	;# 
  1777  0007                     	;# 
  1778  0008                     	;# 
  1779  0009                     	;# 
  1780  000A                     	;# 
  1781  000B                     	;# 
  1782  000C                     	;# 
  1783  000D                     	;# 
  1784  000E                     	;# 
  1785  0010                     	;# 
  1786  0011                     	;# 
  1787  0012                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001B                     	;# 
  1796  001C                     	;# 
  1797  008C                     	;# 
  1798  008D                     	;# 
  1799  008E                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0092                     	;# 
  1803  0095                     	;# 
  1804  0096                     	;# 
  1805  0097                     	;# 
  1806  0099                     	;# 
  1807  009A                     	;# 
  1808  009B                     	;# 
  1809  009B                     	;# 
  1810  009C                     	;# 
  1811  009D                     	;# 
  1812  009E                     	;# 
  1813  010C                     	;# 
  1814  010D                     	;# 
  1815  010E                     	;# 
  1816  0116                     	;# 
  1817  0117                     	;# 
  1818  011D                     	;# 
  1819  018C                     	;# 
  1820  018D                     	;# 
  1821  018E                     	;# 
  1822  0191                     	;# 
  1823  0191                     	;# 
  1824  0192                     	;# 
  1825  0193                     	;# 
  1826  0193                     	;# 
  1827  0194                     	;# 
  1828  0195                     	;# 
  1829  0196                     	;# 
  1830  0197                     	;# 
  1831  0199                     	;# 
  1832  019A                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019B                     	;# 
  1836  019B                     	;# 
  1837  019C                     	;# 
  1838  019C                     	;# 
  1839  019D                     	;# 
  1840  019E                     	;# 
  1841  019F                     	;# 
  1842  020D                     	;# 
  1843  0210                     	;# 
  1844  0211                     	;# 
  1845  0211                     	;# 
  1846  0212                     	;# 
  1847  0212                     	;# 
  1848  0213                     	;# 
  1849  0213                     	;# 
  1850  0214                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0216                     	;# 
  1856  0216                     	;# 
  1857  0217                     	;# 
  1858  0217                     	;# 
  1859  0291                     	;# 
  1860  0291                     	;# 
  1861  0292                     	;# 
  1862  0293                     	;# 
  1863  0298                     	;# 
  1864  0298                     	;# 
  1865  0299                     	;# 
  1866  029A                     	;# 
  1867  0394                     	;# 
  1868  0395                     	;# 
  1869  0396                     	;# 
  1870  0FE4                     	;# 
  1871  0FE5                     	;# 
  1872  0FE6                     	;# 
  1873  0FE7                     	;# 
  1874  0FE8                     	;# 
  1875  0FE9                     	;# 
  1876  0FEA                     	;# 
  1877  0FEB                     	;# 
  1878  0FED                     	;# 
  1879  0FEE                     	;# 
  1880  0FEF                     	;# 
  1881  0000                     	;# 
  1882  0001                     	;# 
  1883  0002                     	;# 
  1884  0003                     	;# 
  1885  0004                     	;# 
  1886  0005                     	;# 
  1887  0006                     	;# 
  1888  0007                     	;# 
  1889  0008                     	;# 
  1890  0009                     	;# 
  1891  000A                     	;# 
  1892  000B                     	;# 
  1893  000C                     	;# 
  1894  000D                     	;# 
  1895  000E                     	;# 
  1896  0010                     	;# 
  1897  0011                     	;# 
  1898  0012                     	;# 
  1899  0015                     	;# 
  1900  0016                     	;# 
  1901  0016                     	;# 
  1902  0017                     	;# 
  1903  0018                     	;# 
  1904  0019                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001C                     	;# 
  1908  008C                     	;# 
  1909  008D                     	;# 
  1910  008E                     	;# 
  1911  0090                     	;# 
  1912  0091                     	;# 
  1913  0092                     	;# 
  1914  0095                     	;# 
  1915  0096                     	;# 
  1916  0097                     	;# 
  1917  0099                     	;# 
  1918  009A                     	;# 
  1919  009B                     	;# 
  1920  009B                     	;# 
  1921  009C                     	;# 
  1922  009D                     	;# 
  1923  009E                     	;# 
  1924  010C                     	;# 
  1925  010D                     	;# 
  1926  010E                     	;# 
  1927  0116                     	;# 
  1928  0117                     	;# 
  1929  011D                     	;# 
  1930  018C                     	;# 
  1931  018D                     	;# 
  1932  018E                     	;# 
  1933  0191                     	;# 
  1934  0191                     	;# 
  1935  0192                     	;# 
  1936  0193                     	;# 
  1937  0193                     	;# 
  1938  0194                     	;# 
  1939  0195                     	;# 
  1940  0196                     	;# 
  1941  0197                     	;# 
  1942  0199                     	;# 
  1943  019A                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019D                     	;# 
  1951  019E                     	;# 
  1952  019F                     	;# 
  1953  020D                     	;# 
  1954  0210                     	;# 
  1955  0211                     	;# 
  1956  0211                     	;# 
  1957  0212                     	;# 
  1958  0212                     	;# 
  1959  0213                     	;# 
  1960  0213                     	;# 
  1961  0214                     	;# 
  1962  0214                     	;# 
  1963  0215                     	;# 
  1964  0215                     	;# 
  1965  0215                     	;# 
  1966  0216                     	;# 
  1967  0216                     	;# 
  1968  0217                     	;# 
  1969  0217                     	;# 
  1970  0291                     	;# 
  1971  0291                     	;# 
  1972  0292                     	;# 
  1973  0293                     	;# 
  1974  0298                     	;# 
  1975  0298                     	;# 
  1976  0299                     	;# 
  1977  029A                     	;# 
  1978  0394                     	;# 
  1979  0395                     	;# 
  1980  0396                     	;# 
  1981  0FE4                     	;# 
  1982  0FE5                     	;# 
  1983  0FE6                     	;# 
  1984  0FE7                     	;# 
  1985  0FE8                     	;# 
  1986  0FE9                     	;# 
  1987  0FEA                     	;# 
  1988  0FEB                     	;# 
  1989  0FED                     	;# 
  1990  0FEE                     	;# 
  1991  0FEF                     	;# 
  1992                           
  1993                           	psect	idataBANK2
  1994  08D0                     __pidataBANK2:	
  1995                           
  1996                           ;initializer for __product
  1997  08D0  3463               	retlw	99
  1998  08D1  3402               	retlw	2
  1999  08D2  3400               	retlw	0
  2000  08D3  3400               	retlw	0
  2001  08D4  3400               	retlw	0
  2002  08D5  3400               	retlw	0
  2003  08D6  3400               	retlw	0
  2004  08D7  3400               	retlw	0
  2005  08D8  3400               	retlw	0
  2006  08D9  3400               	retlw	0
  2007  08DA  3400               	retlw	0
  2008  08DB  3400               	retlw	0
  2009  08DC  34FF               	retlw	255
  2010  08DD  34FF               	retlw	255
  2011  08DE  34FF               	retlw	255
  2012  08DF  3400               	retlw	0
  2013  08E0  3400               	retlw	0
  2014  08E1  3400               	retlw	0
  2015  08E2  3400               	retlw	0
  2016  08E3  3400               	retlw	0
  2017  08E4  3400               	retlw	0
  2018  08E5  3400               	retlw	0
  2019  08E6  3400               	retlw	0
  2020  08E7  3400               	retlw	0
  2021  08E8  3400               	retlw	0
  2022  08E9  3400               	retlw	0
  2023  08EA  3400               	retlw	0
  2024  08EB  3400               	retlw	0
  2025  08EC  3400               	retlw	0
  2026  08ED  3400               	retlw	0
  2027  08EE  3400               	retlw	0
  2028  08EF  3400               	retlw	0
  2029                           
  2030                           	psect	nvCOMMON
  2031  007C                     __pnvCOMMON:	
  2032  007C                     _Timer0:	
  2033  007C                     	ds	1
  2034                           
  2035                           	psect	nvBANK0
  2036  006C                     __pnvBANK0:	
  2037  006C                     _myMain:	
  2038  006C                     	ds	1
  2039  006D                     _product:	
  2040  006D                     	ds	1
  2041  006E                     _Memory:	
  2042  006E                     	ds	1
  2043  000C                     _PORTA	set	12
  2044  000D                     _PORTB	set	13
  2045  000E                     _PORTC	set	14
  2046  0015                     _TMR0	set	21
  2047  005F                     _GIE	set	95
  2048  005C                     _INTE	set	92
  2049  0059                     _INTF	set	89
  2050  005B                     _IOCIE	set	91
  2051  0058                     _IOCIF	set	88
  2052  005E                     _PEIE	set	94
  2053  0060                     _RA0	set	96
  2054  0063                     _RA3	set	99
  2055  0064                     _RA4	set	100
  2056  0066                     _RA6	set	102
  2057  0067                     _RA7	set	103
  2058  0069                     _RB1	set	105
  2059  006B                     _RB3	set	107
  2060  006C                     _RB4	set	108
  2061  006D                     _RB5	set	109
  2062  0075                     _RC5	set	117
  2063  0077                     _RC7	set	119
  2064  005D                     _TMR0IE	set	93
  2065  005A                     _TMR0IF	set	90
  2066  009D                     _ADCON0	set	157
  2067  009E                     _ADCON1	set	158
  2068  009C                     _ADRESH	set	156
  2069  009B                     _ADRESL	set	155
  2070  0095                     _OPTION_REG	set	149
  2071  0099                     _OSCCON	set	153
  2072  008C                     _TRISA	set	140
  2073  008D                     _TRISB	set	141
  2074  008E                     _TRISC	set	142
  2075  04E9                     _GO_nDONE	set	1257
  2076  0117                     _FVRCON	set	279
  2077  010C                     _LATA	set	268
  2078  010D                     _LATB	set	269
  2079  010E                     _LATC	set	270
  2080  018C                     _ANSELA	set	396
  2081  018D                     _ANSELB	set	397
  2082  018E                     _ANSELC	set	398
  2083  0192                     _PMADRH	set	402
  2084  0191                     _PMADRL	set	401
  2085  0196                     _PMCON2	set	406
  2086  0194                     _PMDATH	set	404
  2087  0193                     _PMDATL	set	403
  2088  0CAE                     _CFGS	set	3246
  2089  0CAC                     _FREE	set	3244
  2090  0CAD                     _LWLO	set	3245
  2091  0CA8                     _RD	set	3240
  2092  0CA9                     _WR	set	3241
  2093  0CAA                     _WREN	set	3242
  2094  1068                     _WPUB0	set	4200
  2095  1069                     _WPUB1	set	4201
  2096  106A                     _WPUB2	set	4202
  2097  0396                     _IOCBF	set	918
  2098  0395                     _IOCBN	set	917
  2099  0394                     _IOCBP	set	916
  2100  1CB2                     _IOCBF2	set	7346
  2101                           
  2102                           ; #config settings
  2103  0000                     
  2104                           	psect	cinit
  2105  0018                     start_initialization:	
  2106  0018                     __initialization:	
  2107                           
  2108                           ; Clear objects allocated to COMMON
  2109  0018  01F8               	clrf	__pbssCOMMON& (0+127)
  2110  0019  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2111  001A  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2112  001B  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2113                           
  2114                           ; Clear objects allocated to BANK0
  2115  001C  3056               	movlw	low __pbssBANK0
  2116  001D  0084               	movwf	4
  2117  001E  3000               	movlw	high __pbssBANK0
  2118  001F  0085               	movwf	5
  2119  0020  3016               	movlw	22
  2120  0021  3196  260E  3180   	fcall	clear_ram0
  2121                           
  2122                           ; Clear objects allocated to BANK1
  2123  0024  30A0               	movlw	low __pbssBANK1
  2124  0025  0084               	movwf	4
  2125  0026  3000               	movlw	high __pbssBANK1
  2126  0027  0085               	movwf	5
  2127  0028  304E               	movlw	78
  2128  0029  3196  260E  3180   	fcall	clear_ram0
  2129                           
  2130                           ; Clear objects allocated to BANK2
  2131  002C  3020               	movlw	low __pbssBANK2
  2132  002D  0084               	movwf	4
  2133  002E  3001               	movlw	high __pbssBANK2
  2134  002F  0085               	movwf	5
  2135  0030  3022               	movlw	34
  2136  0031  3196  260E  3180   	fcall	clear_ram0
  2137                           
  2138                           ; Clear objects allocated to BANK3
  2139  0034  30A0               	movlw	low __pbssBANK3
  2140  0035  0084               	movwf	4
  2141  0036  3001               	movlw	high __pbssBANK3
  2142  0037  0085               	movwf	5
  2143  0038  3025               	movlw	37
  2144  0039  3196  260E  3180   	fcall	clear_ram0
  2145                           
  2146                           ; Initialize objects allocated to BANK2
  2147  003C  30D0               	movlw	low __pidataBANK2
  2148  003D  0084               	movwf	4
  2149  003E  3088               	movlw	(high __pidataBANK2)| (0+128)
  2150  003F  0085               	movwf	5
  2151  0040  3042               	movlw	low __pdataBANK2
  2152  0041  0086               	movwf	6
  2153  0042  3001               	movlw	high __pdataBANK2
  2154  0043  0087               	movwf	7
  2155  0044  3020               	movlw	32
  2156  0045  3196  2608         	fcall	init_ram
  2157  0047                     end_of_initialization:	
  2158                           ;End of C runtime variable initialization code
  2159                           
  2160  0047                     __end_of__initialization:	
  2161  0047  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2162  0048  0020               	movlb	0
  2163  0049  318C  2C87         	ljmp	_main	;jump to C main() function
  2164                           
  2165                           	psect	bssCOMMON
  2166  0078                     __pbssCOMMON:	
  2167  0078                     _DimmerLights11:	
  2168  0078                     	ds	1
  2169  0079                     _DimmerLights22:	
  2170  0079                     	ds	1
  2171  007A                     _DimmerLightsIntr:	
  2172  007A                     	ds	1
  2173  007B                     _DimmerLightsIntrIOC:	
  2174  007B                     	ds	1
  2175                           
  2176                           	psect	bssBANK0
  2177  0056                     __pbssBANK0:	
  2178  0056                     _Buz:	
  2179  0056                     	ds	1
  2180  0057                     _DelayOff:	
  2181  0057                     	ds	1
  2182  0058                     _Dimmer:	
  2183  0058                     	ds	1
  2184  0059                     _DimmerLights:	
  2185  0059                     	ds	1
  2186  005A                     _LED:	
  2187  005A                     	ds	1
  2188  005B                     _Sw:	
  2189  005B                     	ds	1
  2190  005C                     _Temp:	
  2191  005C                     	ds	1
  2192  005D                     _VarErrLED:	
  2193  005D                     	ds	4
  2194  0061                     _VarLED1:	
  2195  0061                     	ds	4
  2196  0065                     _VarLED2:	
  2197  0065                     	ds	4
  2198  0069                     _Dimmer1:	
  2199  0069                     	ds	3
  2200                           
  2201                           	psect	bssBANK1
  2202  00A0                     __pbssBANK1:	
  2203  00A0                     _DimmerLights1:	
  2204  00A0                     	ds	15
  2205  00AF                     _DimmerLights2:	
  2206  00AF                     	ds	15
  2207  00BE                     _Buz1:	
  2208  00BE                     	ds	12
  2209  00CA                     _Sw1:	
  2210  00CA                     	ds	9
  2211  00D3                     _Sw2:	
  2212  00D3                     	ds	9
  2213  00DC                     _VarTimer0:	
  2214  00DC                     	ds	8
  2215  00E4                     _DlySw1:	
  2216  00E4                     	ds	5
  2217  00E9                     _DlySw2:	
  2218  00E9                     	ds	5
  2219                           
  2220                           	psect	bssBANK2
  2221  0120                     __pbssBANK2:	
  2222  0120                     __myMain:	
  2223  0120                     	ds	20
  2224  0134                     _Temp1:	
  2225  0134                     	ds	14
  2226                           
  2227                           	psect	dataBANK2
  2228  0142                     __pdataBANK2:	
  2229  0142                     __product:	
  2230  0142                     	ds	32
  2231                           
  2232                           	psect	bssBANK3
  2233  01A0                     __pbssBANK3:	
  2234  01A0                     _VarMemory:	
  2235  01A0                     	ds	37
  2236                           
  2237                           	psect	clrtext
  2238  160E                     clear_ram0:	
  2239                           ;	Called with FSR0 containing the base address, and
  2240                           ;	WREG with the size to clear
  2241                           
  2242  160E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2243  160F                     clrloop0:	
  2244  160F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2245  1610  3101               	addfsr 0,1
  2246  1611  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2247  1612  2E0F               	goto	clrloop0	;have we reached the end yet?
  2248  1613  3400               	retlw	0	;all done for this memory range, return
  2249                           
  2250                           	psect	inittext
  2251  1608                     init_ram:	
  2252  1608  00FE               	movwf	126
  2253  1609                     initloop:	
  2254  1609  0012               	moviw fsr0++
  2255  160A  001E               	movwi fsr1++
  2256  160B  0BFE               	decfsz	126,f
  2257  160C  2E09               	goto	initloop
  2258  160D  3400               	retlw	0
  2259                           
  2260                           	psect	cstackCOMMON
  2261  0070                     __pcstackCOMMON:	
  2262  0070                     ?_DlyOff_Initialization:	
  2263  0070                     ?_DlyOff_Main:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_setDimmerLights_Initialization:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?_Dimmer_Initialization:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_setMemory_GO:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ?_setDimmerLights_Main:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ?_setDimmerLights_ERROR:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_setLED_Initialization:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_setLED_Main:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_Fosc_Set:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ?_IO_Set:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_TMR0_Set:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ?_ADC_Set:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_INT_Set:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ?_IOC_Set:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305  0070                     ?_IOC_ISR:	
  2306                           ; 0 bytes @ 0x0
  2307                           
  2308  0070                     ?_TMR0_ISR:	
  2309                           ; 0 bytes @ 0x0
  2310                           
  2311  0070                     ?_INT_ISR:	
  2312                           ; 0 bytes @ 0x0
  2313                           
  2314  0070                     ??_INT_ISR:	
  2315                           ; 0 bytes @ 0x0
  2316                           
  2317  0070                     ?_Flash_Memory_Write:	
  2318                           ; 0 bytes @ 0x0
  2319                           
  2320  0070                     ?_Flash_Memory_Modify:	
  2321                           ; 0 bytes @ 0x0
  2322                           
  2323  0070                     ?_myMain_Initialization:	
  2324                           ; 0 bytes @ 0x0
  2325                           
  2326  0070                     ?_Temp_Initialization:	
  2327                           ; 0 bytes @ 0x0
  2328                           
  2329  0070                     ?_Switch_Initialization:	
  2330                           ; 0 bytes @ 0x0
  2331                           
  2332  0070                     ?_getTemp_AD:	
  2333                           ; 0 bytes @ 0x0
  2334                           
  2335  0070                     ?_my_Main:	
  2336                           ; 0 bytes @ 0x0
  2337                           
  2338  0070                     ?_my_TestPointCleared:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0070                     ?_Temp_Main:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0070                     ?_Switch_Main:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0070                     ?_setTemp_Enable:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0070                     ?_setSw_Enable:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0070                     ?_setTemp_Initialization:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0070                     ?_setTemp_Main:	
  2357                           ; 0 bytes @ 0x0
  2358                           
  2359  0070                     ?_setOverTemp_Exceptions:	
  2360                           ; 0 bytes @ 0x0
  2361                           
  2362  0070                     ?_setSw_Initialization:	
  2363                           ; 0 bytes @ 0x0
  2364                           
  2365  0070                     ?_setSw_Main:	
  2366                           ; 0 bytes @ 0x0
  2367                           
  2368  0070                     ?_Sw_DimmerOnFunc:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_Sw_DimmerAdjFunc:	
  2372                           ; 0 bytes @ 0x0
  2373                           
  2374  0070                     ?_Sw_DimmerOffFunc:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?_Buzzer_Initialization:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ?_Buzzer_Main:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_DelayOffPointSelect:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386  0070                     ?_DelayOff_Initialization:	
  2387                           ; 0 bytes @ 0x0
  2388                           
  2389  0070                     ?_DelayOff_Main:	
  2390                           ; 0 bytes @ 0x0
  2391                           
  2392  0070                     ?_DimmerIntrIOCPointSelect:	
  2393                           ; 0 bytes @ 0x0
  2394                           
  2395  0070                     ??_DimmerIntrIOCPointSelect:	
  2396                           ; 0 bytes @ 0x0
  2397                           
  2398  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2399                           ; 0 bytes @ 0x0
  2400                           
  2401  0070                     ?_DimmerIntrPointSelect:	
  2402                           ; 0 bytes @ 0x0
  2403                           
  2404  0070                     ??_DimmerIntrPointSelect:	
  2405                           ; 0 bytes @ 0x0
  2406                           
  2407  0070                     ?_setDimmerLights_IntrControl:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  0070                     ?_DimmerLightsPointSelect:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  0070                     ?_DimmerLights_Initialization:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  0070                     ?_DimmerLights_Close:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  0070                     ?_DimmerLights_Main:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  0070                     ?_DimmerLights_Exceptions:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  0070                     ?_LedPointSelect:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  0070                     ?_LED_Initialization:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  0070                     ?_LED_Main:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  0070                     ?_Mcu_Initialization:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  0070                     ?_ISR:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  0070                     ?_setDimmerReClock:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  0070                     ?_Flash_Memory_Initialization:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  0070                     ?_Flash_Memory_Main:	
  2447                           ; 0 bytes @ 0x0
  2448                           
  2449  0070                     ?_Flash_Memory_Unlock:	
  2450                           ; 0 bytes @ 0x0
  2451                           
  2452  0070                     ?_Flash_Memory_Erasing:	
  2453                           ; 0 bytes @ 0x0
  2454                           
  2455  0070                     ?_TouchPower:	
  2456                           ; 0 bytes @ 0x0
  2457                           
  2458  0070                     ?_SwPointSelect:	
  2459                           ; 0 bytes @ 0x0
  2460                           
  2461  0070                     ?_DelayTimejudge:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_getDimmerLights_StatusFlag:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_Flash_Memory_Read:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_setPercentValue:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473                           
  2474                           ; 1 bytes @ 0x0
  2475  0070                     	ds	1
  2476  0071                     DimmerIntrIOCPointSelect@lights:	
  2477  0071                     DimmerIntrPointSelect@lights:	
  2478                           ; 1 bytes @ 0x1
  2479                           
  2480                           
  2481                           ; 1 bytes @ 0x1
  2482  0071                     	ds	1
  2483  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2484  0072                     ??_setDimmerLights_IntrControl:	
  2485                           ; 0 bytes @ 0x2
  2486                           
  2487  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2488                           ; 0 bytes @ 0x2
  2489                           
  2490                           
  2491                           ; 1 bytes @ 0x2
  2492  0072                     	ds	1
  2493  0073                     ??_IOC_ISR:	
  2494  0073                     ??_setDimmerReClock:	
  2495                           ; 0 bytes @ 0x3
  2496                           
  2497                           
  2498                           ; 0 bytes @ 0x3
  2499  0073                     	ds	3
  2500  0076                     setDimmerLights_IntrControl@lights:	
  2501                           
  2502                           ; 1 bytes @ 0x6
  2503  0076                     	ds	1
  2504  0077                     ??_TMR0_ISR:	
  2505  0077                     ??_ISR:	
  2506                           ; 0 bytes @ 0x7
  2507                           
  2508                           
  2509                           ; 0 bytes @ 0x7
  2510  0077                     	ds	1
  2511                           
  2512                           	psect	cstackBANK0
  2513  0020                     __pcstackBANK0:	
  2514  0020                     ??_DelayTimejudge:	
  2515  0020                     ??_Dimmer_Initialization:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0020                     ??_getDimmerLights_StatusFlag:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0020                     ??_setMemory_GO:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0020                     ??_Fosc_Set:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0020                     ??_IO_Set:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0020                     ??_TMR0_Set:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0020                     ??_ADC_Set:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0020                     ??_INT_Set:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0020                     ??_IOC_Set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0020                     ??_Flash_Memory_Read:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0020                     ??_Flash_Memory_Write:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0020                     ??_myMain_Initialization:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0020                     ??_my_TestPointCleared:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0020                     ??_setTemp_Enable:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0020                     ??_setTemp_Initialization:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0020                     ??_Buzzer_Initialization:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0020                     ??_Buzzer_Main:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0020                     ??_DelayOffPointSelect:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0020                     ??_DimmerLightsPointSelect:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0020                     ??_LedPointSelect:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0020                     ??_Flash_Memory_Unlock:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0020                     ??_Flash_Memory_Erasing:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0020                     ??_TouchPower:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0020                     ??_SwPointSelect:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0020                     ?_getAD:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0020                     ?___awdiv:	
  2591                           ; 2 bytes @ 0x0
  2592                           
  2593  0020                     ?___ftpack:	
  2594                           ; 2 bytes @ 0x0
  2595                           
  2596  0020                     getAD@adcon1:	
  2597                           ; 3 bytes @ 0x0
  2598                           
  2599  0020                     setTemp_Enable@command:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602  0020                     ___awdiv@divisor:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0020                     ___ftpack@arg:	
  2606                           ; 2 bytes @ 0x0
  2607                           
  2608                           
  2609                           ; 3 bytes @ 0x0
  2610  0020                     	ds	1
  2611  0021                     ??_Temp_Initialization:	
  2612  0021                     ??_Mcu_Initialization:	
  2613                           ; 0 bytes @ 0x1
  2614                           
  2615  0021                     DelayOffPointSelect@sw:	
  2616                           ; 0 bytes @ 0x1
  2617                           
  2618  0021                     DelayTimejudge@value:	
  2619                           ; 1 bytes @ 0x1
  2620                           
  2621  0021                     DimmerLightsPointSelect@lights:	
  2622                           ; 1 bytes @ 0x1
  2623                           
  2624  0021                     getDimmerLights_StatusFlag@Status:	
  2625                           ; 1 bytes @ 0x1
  2626                           
  2627  0021                     LedPointSelect@led:	
  2628                           ; 1 bytes @ 0x1
  2629                           
  2630  0021                     Flash_Memory_Read@i:	
  2631                           ; 1 bytes @ 0x1
  2632                           
  2633  0021                     Flash_Memory_Write@i:	
  2634                           ; 1 bytes @ 0x1
  2635                           
  2636  0021                     SwPointSelect@sw:	
  2637                           ; 1 bytes @ 0x1
  2638                           
  2639                           
  2640                           ; 1 bytes @ 0x1
  2641  0021                     	ds	1
  2642  0022                     ??_DlyOff_Initialization:	
  2643  0022                     ?_setSw_Status:	
  2644                           ; 0 bytes @ 0x2
  2645                           
  2646  0022                     ?_setDimmerLights_Trigger:	
  2647                           ; 0 bytes @ 0x2
  2648                           
  2649  0022                     ?_setDimmerLights_Switch:	
  2650                           ; 0 bytes @ 0x2
  2651                           
  2652  0022                     ??_setDimmerLights_Initialization:	
  2653                           ; 0 bytes @ 0x2
  2654                           
  2655  0022                     ?_setDimmerLights_Adj:	
  2656                           ; 0 bytes @ 0x2
  2657                           
  2658  0022                     ?_setDimmerLights_TriggerERROR:	
  2659                           ; 0 bytes @ 0x2
  2660                           
  2661  0022                     ?_setLED:	
  2662                           ; 0 bytes @ 0x2
  2663                           
  2664  0022                     ??_setLED_Main:	
  2665                           ; 0 bytes @ 0x2
  2666                           
  2667  0022                     ??_setSw_Enable:	
  2668                           ; 0 bytes @ 0x2
  2669                           
  2670  0022                     ?_setDimmerLights_AdjGo:	
  2671                           ; 0 bytes @ 0x2
  2672                           
  2673  0022                     ?_setDimmerLights_TriggerAdj:	
  2674                           ; 0 bytes @ 0x2
  2675                           
  2676  0022                     DlyOff_Initialization@sw:	
  2677                           ; 0 bytes @ 0x2
  2678                           
  2679  0022                     DelayTimejudge@i:	
  2680                           ; 1 bytes @ 0x2
  2681                           
  2682  0022                     _getDimmerLights_StatusFlag$1654:	
  2683                           ; 1 bytes @ 0x2
  2684                           
  2685  0022                     setDimmerLights_TriggerERROR@command:	
  2686                           ; 1 bytes @ 0x2
  2687                           
  2688  0022                     setDimmerLights_Adj@status:	
  2689                           ; 1 bytes @ 0x2
  2690                           
  2691  0022                     setDimmerLights_Switch@command:	
  2692                           ; 1 bytes @ 0x2
  2693                           
  2694  0022                     setDimmerLights_AdjGo@command:	
  2695                           ; 1 bytes @ 0x2
  2696                           
  2697  0022                     setDimmerLights_Trigger@command:	
  2698                           ; 1 bytes @ 0x2
  2699                           
  2700  0022                     setDimmerLights_TriggerAdj@command:	
  2701                           ; 1 bytes @ 0x2
  2702                           
  2703  0022                     setLED@command:	
  2704                           ; 1 bytes @ 0x2
  2705                           
  2706  0022                     Flash_Memory_Read@address:	
  2707                           ; 1 bytes @ 0x2
  2708                           
  2709  0022                     setMemory_GO@command:	
  2710                           ; 1 bytes @ 0x2
  2711                           
  2712  0022                     setSw_Enable@command:	
  2713                           ; 1 bytes @ 0x2
  2714                           
  2715  0022                     setSw_Status@command:	
  2716                           ; 1 bytes @ 0x2
  2717                           
  2718  0022                     ___awdiv@dividend:	
  2719                           ; 1 bytes @ 0x2
  2720                           
  2721                           
  2722                           ; 2 bytes @ 0x2
  2723  0022                     	ds	1
  2724  0023                     ??_setSw_Status:	
  2725  0023                     ??_setDimmerLights_Trigger:	
  2726                           ; 0 bytes @ 0x3
  2727                           
  2728  0023                     ??_setDimmerLights_Switch:	
  2729                           ; 0 bytes @ 0x3
  2730                           
  2731  0023                     ??_setDimmerLights_Adj:	
  2732                           ; 0 bytes @ 0x3
  2733                           
  2734  0023                     ??_setDimmerLights_TriggerERROR:	
  2735                           ; 0 bytes @ 0x3
  2736                           
  2737  0023                     ??_setLED:	
  2738                           ; 0 bytes @ 0x3
  2739                           
  2740  0023                     ??_DelayOff_Initialization:	
  2741                           ; 0 bytes @ 0x3
  2742                           
  2743  0023                     ?_setDelayOff_GO:	
  2744                           ; 0 bytes @ 0x3
  2745                           
  2746  0023                     ??_DimmerLights_Close:	
  2747                           ; 0 bytes @ 0x3
  2748                           
  2749  0023                     ??_setDimmerLights_AdjGo:	
  2750                           ; 0 bytes @ 0x3
  2751                           
  2752  0023                     ??_setDimmerLights_TriggerAdj:	
  2753                           ; 0 bytes @ 0x3
  2754                           
  2755  0023                     ??_getAD:	
  2756                           ; 0 bytes @ 0x3
  2757                           
  2758  0023                     setDelayOff_GO@command:	
  2759                           ; 0 bytes @ 0x3
  2760                           
  2761  0023                     setDimmerLights_Initialization@lights:	
  2762                           ; 1 bytes @ 0x3
  2763                           
  2764  0023                     setDimmerLights_TriggerERROR@lights:	
  2765                           ; 1 bytes @ 0x3
  2766                           
  2767  0023                     setDimmerLights_Switch@lights:	
  2768                           ; 1 bytes @ 0x3
  2769                           
  2770  0023                     setDimmerLights_AdjGo@lights:	
  2771                           ; 1 bytes @ 0x3
  2772                           
  2773  0023                     setDimmerLights_Trigger@lights:	
  2774                           ; 1 bytes @ 0x3
  2775                           
  2776  0023                     setDimmerLights_TriggerAdj@lights:	
  2777                           ; 1 bytes @ 0x3
  2778                           
  2779  0023                     setLED@led:	
  2780                           ; 1 bytes @ 0x3
  2781                           
  2782  0023                     getAD@adcon0:	
  2783                           ; 1 bytes @ 0x3
  2784                           
  2785  0023                     Flash_Memory_Read@ret:	
  2786                           ; 1 bytes @ 0x3
  2787                           
  2788  0023                     setSw_Status@sw:	
  2789                           ; 1 bytes @ 0x3
  2790                           
  2791  0023                     ___ftpack@exp:	
  2792                           ; 1 bytes @ 0x3
  2793                           
  2794                           
  2795                           ; 1 bytes @ 0x3
  2796  0023                     	ds	1
  2797  0024                     ?_setDimmerLights:	
  2798  0024                     ??_setDimmerLights_ERROR:	
  2799                           ; 0 bytes @ 0x4
  2800                           
  2801  0024                     ??_setLED_Initialization:	
  2802                           ; 0 bytes @ 0x4
  2803                           
  2804  0024                     ??_Flash_Memory_Modify:	
  2805                           ; 0 bytes @ 0x4
  2806                           
  2807  0024                     ??_getTemp_AD:	
  2808                           ; 0 bytes @ 0x4
  2809                           
  2810  0024                     ??_setSw_Initialization:	
  2811                           ; 0 bytes @ 0x4
  2812                           
  2813  0024                     ??_Sw_DimmerAdjFunc:	
  2814                           ; 0 bytes @ 0x4
  2815                           
  2816  0024                     ??_DimmerLights_Initialization:	
  2817                           ; 0 bytes @ 0x4
  2818                           
  2819  0024                     ??___awdiv:	
  2820                           ; 0 bytes @ 0x4
  2821                           
  2822  0024                     setDelayOff_GO@value:	
  2823                           ; 0 bytes @ 0x4
  2824                           
  2825  0024                     setDimmerLights@status:	
  2826                           ; 1 bytes @ 0x4
  2827                           
  2828  0024                     setDimmerLights_Adj@lights:	
  2829                           ; 1 bytes @ 0x4
  2830                           
  2831  0024                     setLED_Initialization@led:	
  2832                           ; 1 bytes @ 0x4
  2833                           
  2834  0024                     setLED_Main@led:	
  2835                           ; 1 bytes @ 0x4
  2836                           
  2837  0024                     setSw_Initialization@sw:	
  2838                           ; 1 bytes @ 0x4
  2839                           
  2840  0024                     Sw_DimmerAdjFunc@Idle:	
  2841                           ; 1 bytes @ 0x4
  2842                           
  2843  0024                     ___ftpack@sign:	
  2844                           ; 1 bytes @ 0x4
  2845                           
  2846                           
  2847                           ; 1 bytes @ 0x4
  2848  0024                     	ds	1
  2849  0025                     ??_setDimmerLights:	
  2850  0025                     ??_Switch_Initialization:	
  2851                           ; 0 bytes @ 0x5
  2852                           
  2853  0025                     ??___ftpack:	
  2854                           ; 0 bytes @ 0x5
  2855                           
  2856  0025                     ??_setDelayOff_GO:	
  2857                           ; 0 bytes @ 0x5
  2858                           
  2859  0025                     ??_LED_Initialization:	
  2860                           ; 0 bytes @ 0x5
  2861                           
  2862  0025                     ??_LED_Main:	
  2863                           ; 0 bytes @ 0x5
  2864                           
  2865  0025                     setDimmerLights_ERROR@lights:	
  2866                           ; 0 bytes @ 0x5
  2867                           
  2868  0025                     Sw_DimmerAdjFunc@sw:	
  2869                           ; 1 bytes @ 0x5
  2870                           
  2871  0025                     ___awdiv@counter:	
  2872                           ; 1 bytes @ 0x5
  2873                           
  2874                           
  2875                           ; 1 bytes @ 0x5
  2876  0025                     	ds	1
  2877  0026                     setDimmerLights@lights:	
  2878  0026                     Flash_Memory_Modify@i:	
  2879                           ; 1 bytes @ 0x6
  2880                           
  2881  0026                     ___awdiv@sign:	
  2882                           ; 1 bytes @ 0x6
  2883                           
  2884                           
  2885                           ; 1 bytes @ 0x6
  2886  0026                     	ds	1
  2887  0027                     ??_Flash_Memory_Main:	
  2888  0027                     setDelayOff_GO@sw:	
  2889                           ; 0 bytes @ 0x7
  2890                           
  2891  0027                     ___awdiv@quotient:	
  2892                           ; 1 bytes @ 0x7
  2893                           
  2894                           
  2895                           ; 2 bytes @ 0x7
  2896  0027                     	ds	1
  2897  0028                     ??_Sw_DimmerOffFunc:	
  2898  0028                     ?___awtoft:	
  2899                           ; 0 bytes @ 0x8
  2900                           
  2901  0028                     getTemp_AD@channel:	
  2902                           ; 3 bytes @ 0x8
  2903                           
  2904  0028                     ___awtoft@c:	
  2905                           ; 1 bytes @ 0x8
  2906                           
  2907                           
  2908                           ; 2 bytes @ 0x8
  2909  0028                     	ds	1
  2910  0029                     ?_setBuz:	
  2911  0029                     setBuz@time:	
  2912                           ; 0 bytes @ 0x9
  2913                           
  2914                           
  2915                           ; 2 bytes @ 0x9
  2916  0029                     	ds	1
  2917  002A                     Sw_DimmerOffFunc@sw:	
  2918                           
  2919                           ; 1 bytes @ 0xA
  2920  002A                     	ds	1
  2921  002B                     ??_setBuz:	
  2922  002B                     ??___awtoft:	
  2923                           ; 0 bytes @ 0xB
  2924                           
  2925                           
  2926                           ; 0 bytes @ 0xB
  2927  002B                     	ds	1
  2928  002C                     setBuz@count:	
  2929                           
  2930                           ; 1 bytes @ 0xC
  2931  002C                     	ds	1
  2932  002D                     ??_DlyOff_Main:	
  2933  002D                     ??_setDimmerLights_Main:	
  2934                           ; 0 bytes @ 0xD
  2935                           
  2936  002D                     ??_my_Main:	
  2937                           ; 0 bytes @ 0xD
  2938                           
  2939  002D                     ??_Sw_DimmerOnFunc:	
  2940                           ; 0 bytes @ 0xD
  2941                           
  2942  002D                     ??_DimmerLights_Exceptions:	
  2943                           ; 0 bytes @ 0xD
  2944                           
  2945  002D                     setDimmerLights_Main@clear:	
  2946                           ; 0 bytes @ 0xD
  2947                           
  2948  002D                     DimmerLights_Exceptions@status:	
  2949                           ; 1 bytes @ 0xD
  2950                           
  2951  002D                     Sw_DimmerOnFunc@Idle:	
  2952                           ; 1 bytes @ 0xD
  2953                           
  2954  002D                     ___awtoft@sign:	
  2955                           ; 1 bytes @ 0xD
  2956                           
  2957                           
  2958                           ; 1 bytes @ 0xD
  2959  002D                     	ds	1
  2960  002E                     ??_setOverTemp_Exceptions:	
  2961  002E                     ?___ftdiv:	
  2962                           ; 0 bytes @ 0xE
  2963                           
  2964  002E                     setDimmerLights_Main@lights:	
  2965                           ; 3 bytes @ 0xE
  2966                           
  2967  002E                     Sw_DimmerOnFunc@sw:	
  2968                           ; 1 bytes @ 0xE
  2969                           
  2970  002E                     ___ftdiv@f2:	
  2971                           ; 1 bytes @ 0xE
  2972                           
  2973                           
  2974                           ; 3 bytes @ 0xE
  2975  002E                     	ds	1
  2976  002F                     ??_setSw_Main:	
  2977  002F                     ??_DimmerLights_Main:	
  2978                           ; 0 bytes @ 0xF
  2979                           
  2980  002F                     DlyOff_Main@sw:	
  2981                           ; 0 bytes @ 0xF
  2982                           
  2983  002F                     setOverTemp_Exceptions@command:	
  2984                           ; 1 bytes @ 0xF
  2985                           
  2986                           
  2987                           ; 1 bytes @ 0xF
  2988  002F                     	ds	1
  2989  0030                     ??_setTemp_Main:	
  2990  0030                     ??_DelayOff_Main:	
  2991                           ; 0 bytes @ 0x10
  2992                           
  2993                           
  2994                           ; 0 bytes @ 0x10
  2995  0030                     	ds	1
  2996  0031                     _setSw_Main$4404:	
  2997  0031                     ___ftdiv@f1:	
  2998                           ; 1 bytes @ 0x11
  2999                           
  3000                           
  3001                           ; 3 bytes @ 0x11
  3002  0031                     	ds	1
  3003  0032                     _setSw_Main$4405:	
  3004                           
  3005                           ; 1 bytes @ 0x12
  3006  0032                     	ds	1
  3007  0033                     ??_Temp_Main:	
  3008  0033                     setSw_Main@sw:	
  3009                           ; 0 bytes @ 0x13
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x13
  3013  0033                     	ds	1
  3014  0034                     ??_Switch_Main:	
  3015  0034                     ??___ftdiv:	
  3016                           ; 0 bytes @ 0x14
  3017                           
  3018                           
  3019                           ; 0 bytes @ 0x14
  3020  0034                     	ds	4
  3021  0038                     ___ftdiv@cntr:	
  3022                           
  3023                           ; 1 bytes @ 0x18
  3024  0038                     	ds	1
  3025  0039                     ___ftdiv@f3:	
  3026                           
  3027                           ; 3 bytes @ 0x19
  3028  0039                     	ds	3
  3029  003C                     ___ftdiv@exp:	
  3030                           
  3031                           ; 1 bytes @ 0x1C
  3032  003C                     	ds	1
  3033  003D                     ___ftdiv@sign:	
  3034                           
  3035                           ; 1 bytes @ 0x1D
  3036  003D                     	ds	1
  3037  003E                     ?___fttol:	
  3038  003E                     ___fttol@f1:	
  3039                           ; 4 bytes @ 0x1E
  3040                           
  3041                           
  3042                           ; 3 bytes @ 0x1E
  3043  003E                     	ds	4
  3044  0042                     ??___fttol:	
  3045                           
  3046                           ; 0 bytes @ 0x22
  3047  0042                     	ds	4
  3048  0046                     ___fttol@sign1:	
  3049                           
  3050                           ; 1 bytes @ 0x26
  3051  0046                     	ds	1
  3052  0047                     ___fttol@lval:	
  3053                           
  3054                           ; 4 bytes @ 0x27
  3055  0047                     	ds	4
  3056  004B                     ___fttol@exp1:	
  3057                           
  3058                           ; 1 bytes @ 0x2B
  3059  004B                     	ds	1
  3060  004C                     ??_setPercentValue:	
  3061  004C                     setPercentValue@value:	
  3062                           ; 0 bytes @ 0x2C
  3063                           
  3064                           
  3065                           ; 1 bytes @ 0x2C
  3066  004C                     	ds	1
  3067  004D                     setPercentValue@i:	
  3068                           
  3069                           ; 3 bytes @ 0x2D
  3070  004D                     	ds	3
  3071  0050                     ??_Flash_Memory_Initialization:	
  3072                           
  3073                           ; 0 bytes @ 0x30
  3074  0050                     	ds	1
  3075  0051                     Flash_Memory_Initialization@i:	
  3076                           
  3077                           ; 1 bytes @ 0x31
  3078  0051                     	ds	1
  3079  0052                     ?_main:	
  3080  0052                     main@argc:	
  3081                           ; 2 bytes @ 0x32
  3082                           
  3083                           
  3084                           ; 2 bytes @ 0x32
  3085  0052                     	ds	2
  3086  0054                     main@argv:	
  3087                           
  3088                           ; 2 bytes @ 0x34
  3089  0054                     	ds	2
  3090  0056                     ??_main:	
  3091                           
  3092                           	psect	maintext
  3093  0C87                     __pmaintext:	
  3094                           ; 0 bytes @ 0x36
  3095 ;;
  3096 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3097 ;;
  3098 ;; *************** function _main *****************
  3099 ;; Defined at:
  3100 ;;		line 7 in file "../src/Main_B1.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  argc            2   50[BANK0 ] int 
  3103 ;;  argv            2   52[BANK0 ] PTR PTR unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  2   50[BANK0 ] int 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 17F/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;Total ram usage:        4 bytes
  3120 ;; Hardware stack levels required when called:   12
  3121 ;; This function calls:
  3122 ;;		_Buzzer_Initialization
  3123 ;;		_Buzzer_Main
  3124 ;;		_DelayOff_Initialization
  3125 ;;		_DelayOff_Main
  3126 ;;		_DimmerLights_Initialization
  3127 ;;		_DimmerLights_Main
  3128 ;;		_Flash_Memory_Initialization
  3129 ;;		_Flash_Memory_Main
  3130 ;;		_LED_Initialization
  3131 ;;		_LED_Main
  3132 ;;		_Mcu_Initialization
  3133 ;;		_Switch_Initialization
  3134 ;;		_Switch_Main
  3135 ;;		_Temp_Initialization
  3136 ;;		_Temp_Main
  3137 ;;		_getTemp_AD
  3138 ;;		_myMain_Initialization
  3139 ;;		_my_Main
  3140 ;;		_my_TestPointCleared
  3141 ;; This function is called by:
  3142 ;;		Startup code after reset
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _main
  3148  0C87                     _main:	
  3149                           
  3150                           ;Main_B1.c: 9: myMain_Initialization();
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3154  0C87  3197  279C  318C   	fcall	_myMain_Initialization
  3155                           
  3156                           ;Main_B1.c: 10: Mcu_Initialization();
  3157  0C8A  3188  201A  318C   	fcall	_Mcu_Initialization
  3158                           
  3159                           ;Main_B1.c: 11: Flash_Memory_Initialization();
  3160  0C8D  3184  2402  318C   	fcall	_Flash_Memory_Initialization
  3161                           
  3162                           ;Main_B1.c: 12: LED_Initialization();
  3163  0C90  3196  2698  318C   	fcall	_LED_Initialization
  3164                           
  3165                           ;Main_B1.c: 13: Buzzer_Initialization();
  3166  0C93  3196  264B  318C   	fcall	_Buzzer_Initialization
  3167                           
  3168                           ;Main_B1.c: 15: ;;
  3169                           ;Main_B1.c: 16: Temp_Initialization();
  3170  0C96  3195  25F1  318C   	fcall	_Temp_Initialization
  3171                           
  3172                           ;Main_B1.c: 17: ;;
  3173                           ;Main_B1.c: 18: ;;
  3174                           ;Main_B1.c: 19: DelayOff_Initialization();
  3175  0C99  3196  2622  318C   	fcall	_DelayOff_Initialization
  3176                           
  3177                           ;Main_B1.c: 21: DimmerLights_Initialization();
  3178  0C9C  3197  27EB  318C   	fcall	_DimmerLights_Initialization
  3179                           
  3180                           ;Main_B1.c: 22: ;;
  3181                           ;Main_B1.c: 23: ;;
  3182                           ;Main_B1.c: 24: ;;
  3183                           ;Main_B1.c: 25: Switch_Initialization();
  3184  0C9F  3196  26CA  318C   	fcall	_Switch_Initialization
  3185                           
  3186                           ;Main_B1.c: 26: ;;
  3187                           ;Main_B1.c: 27: __nop();
  3188  0CA2  0000               	nop
  3189  0CA3                     l5144:	
  3190                           ;Main_B1.c: 28: ;;
  3191                           ;Main_B1.c: 31: while (1) {
  3192                           
  3193                           
  3194                           ;Main_B1.c: 33: if (myMain->PowerON) {
  3195  0CA3  0020               	movlb	0	; select bank0
  3196  0CA4  086C               	movf	_myMain,w
  3197  0CA5  0086               	movwf	6
  3198  0CA6  3001               	movlw	1	; select bank2/3
  3199  0CA7  0087               	movwf	7
  3200  0CA8  1C01               	btfss	1,0
  3201  0CA9  2CAE               	goto	l5148
  3202                           
  3203                           ;Main_B1.c: 35: ;;
  3204                           ;Main_B1.c: 39: ;;
  3205                           ;Main_B1.c: 43: getTemp_AD(0x09);
  3206  0CAA  3009               	movlw	9
  3207  0CAB  318F  2725  318C   	fcall	_getTemp_AD
  3208  0CAE                     l5148:	
  3209                           ;Main_B1.c: 47: ;;
  3210                           
  3211                           
  3212                           ;Main_B1.c: 58: }
  3213                           ;Main_B1.c: 61: if (myMain->T0_Timerout) {
  3214  0CAE  0020               	movlb	0	; select bank0
  3215  0CAF  086C               	movf	_myMain,w
  3216  0CB0  0086               	movwf	6
  3217  0CB1  3001               	movlw	1	; select bank2/3
  3218  0CB2  0087               	movwf	7
  3219  0CB3  1C81               	btfss	1,1
  3220  0CB4  2CA3               	goto	l5144
  3221                           
  3222                           ;Main_B1.c: 62: myMain->T0_Timerout = 0;
  3223  0CB5  086C               	movf	_myMain,w
  3224  0CB6  0086               	movwf	6
  3225  0CB7  3001               	movlw	1	; select bank2/3
  3226  0CB8  0087               	movwf	7
  3227  0CB9  1081               	bcf	1,1
  3228                           
  3229                           ;Main_B1.c: 63: my_Main();
  3230  0CBA  3187  272C  318C   	fcall	_my_Main
  3231                           
  3232                           ;Main_B1.c: 64: my_TestPointCleared();
  3233  0CBD  3197  2777  318C   	fcall	_my_TestPointCleared
  3234                           
  3235                           ;Main_B1.c: 65: ;;
  3236                           ;Main_B1.c: 66: ;;
  3237                           ;Main_B1.c: 67: ;;
  3238                           ;Main_B1.c: 68: if (myMain->PowerON) {
  3239  0CC0  0020               	movlb	0	; select bank0
  3240  0CC1  086C               	movf	_myMain,w
  3241  0CC2  0086               	movwf	6
  3242  0CC3  3001               	movlw	1	; select bank2/3
  3243  0CC4  0087               	movwf	7
  3244  0CC5  1C01               	btfss	1,0
  3245  0CC6  2CA3               	goto	l5144
  3246                           
  3247                           ;Main_B1.c: 69: Flash_Memory_Main();
  3248  0CC7  318B  2312  318C   	fcall	_Flash_Memory_Main
  3249                           
  3250                           ;Main_B1.c: 71: LED_Main();
  3251  0CCA  3196  26A4  318C   	fcall	_LED_Main
  3252                           
  3253                           ;Main_B1.c: 72: Buzzer_Main();
  3254  0CCD  3185  2594  318C   	fcall	_Buzzer_Main
  3255                           
  3256                           ;Main_B1.c: 74: ;;
  3257                           ;Main_B1.c: 75: Temp_Main();
  3258  0CD0  3195  25F4  318C   	fcall	_Temp_Main
  3259                           
  3260                           ;Main_B1.c: 76: ;;
  3261                           ;Main_B1.c: 77: ;;
  3262                           ;Main_B1.c: 79: ;;
  3263                           ;Main_B1.c: 80: DimmerLights_Main();
  3264  0CD3  3196  266B  318C   	fcall	_DimmerLights_Main
  3265                           
  3266                           ;Main_B1.c: 81: Switch_Main();
  3267  0CD6  3196  263A  318C   	fcall	_Switch_Main
  3268                           
  3269                           ;Main_B1.c: 82: ;;
  3270                           ;Main_B1.c: 83: ;;
  3271                           ;Main_B1.c: 85: ;;
  3272                           ;Main_B1.c: 86: DelayOff_Main();
  3273  0CD9  3196  262A  318C   	fcall	_DelayOff_Main
  3274                           
  3275                           ;Main_B1.c: 87: ;;
  3276  0CDC  2CA3               	goto	l5144
  3277  0CDD                     __end_of_main:	
  3278                           ;Main_B1.c: 88: }
  3279                           ;Main_B1.c: 89: }
  3280                           ;Main_B1.c: 107: }
  3281                           ;Main_B1.c: 108: return (0);
  3282                           ;	Return value of _main is never used
  3283                           
  3284                           
  3285                           	psect	text1
  3286  1777                     __ptext1:	
  3287 ;; *************** function _my_TestPointCleared *****************
  3288 ;; Defined at:
  3289 ;;		line 206 in file "../src/Main_B1.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    5
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _my_TestPointCleared
  3319  1777                     _my_TestPointCleared:	
  3320                           
  3321                           ;Main_B1.c: 207: myMain->pcount1 = 0;
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _my_TestPointCleared: [wregfsr1]
  3325  1777  0020               	movlb	0	; select bank0
  3326  1778  086C               	movf	_myMain,w
  3327  1779  3E10               	addlw	16
  3328  177A  0086               	movwf	6
  3329  177B  3001               	movlw	1	; select bank2/3
  3330  177C  0087               	movwf	7
  3331  177D  3000               	movlw	0
  3332  177E  3FC0               	movwi [0]fsr1
  3333  177F  3FC1               	movwi [1]fsr1
  3334                           
  3335                           ;Main_B1.c: 208: myMain->pcount2 = 0;
  3336  1780  086C               	movf	_myMain,w
  3337  1781  3E12               	addlw	18
  3338  1782  0086               	movwf	6
  3339  1783  3001               	movlw	1	; select bank2/3
  3340  1784  0087               	movwf	7
  3341  1785  3000               	movlw	0
  3342  1786  3FC0               	movwi [0]fsr1
  3343  1787  3FC1               	movwi [1]fsr1
  3344  1788  0008               	return
  3345  1789                     __end_of_my_TestPointCleared:	
  3346                           
  3347                           	psect	text2
  3348  072C                     __ptext2:	
  3349 ;; *************** function _my_Main *****************
  3350 ;; Defined at:
  3351 ;;		line 125 in file "../src/Main_B1.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    7
  3372 ;; This function calls:
  3373 ;;		_setBuz
  3374 ;;		_setSw_Enable
  3375 ;;		_setTemp_Enable
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _my_Main
  3383  072C                     _my_Main:	
  3384                           
  3385                           ;Main_B1.c: 127: if (myMain->PowerON == 0) {
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3389  072C  0020               	movlb	0	; select bank0
  3390  072D  086C               	movf	_myMain,w
  3391  072E  0086               	movwf	6
  3392  072F  3001               	movlw	1	; select bank2/3
  3393  0730  0087               	movwf	7
  3394  0731  1801               	btfsc	1,0
  3395  0732  2F6B               	goto	l4978
  3396                           
  3397                           ;Main_B1.c: 128: myMain->PowerCount++;
  3398  0733  0A6C               	incf	_myMain,w
  3399  0734  0086               	movwf	6
  3400  0735  3001               	movlw	1	; select bank2/3
  3401  0736  0087               	movwf	7
  3402  0737  3001               	movlw	1
  3403  0738  0781               	addwf	1,f
  3404  0739  3141               	addfsr 1,1
  3405  073A  1803               	skipnc
  3406  073B  0A81               	incf	1,f
  3407                           
  3408                           ;Main_B1.c: 129: if (myMain->PowerCount == 150)
  3409  073C  0A6C               	incf	_myMain,w
  3410  073D  0086               	movwf	6
  3411  073E  3001               	movlw	1	; select bank2/3
  3412  073F  0087               	movwf	7
  3413  0740  3F40               	moviw [0]fsr1
  3414  0741  3A96               	xorlw	150
  3415  0742  1D03               	skipz
  3416  0743  2F46               	goto	u4345
  3417  0744  3F41               	moviw [1]fsr1
  3418  0745  3A00               	xorlw	0
  3419  0746                     u4345:	
  3420  0746  1D03               	skipz
  3421  0747  0008               	return
  3422                           
  3423                           ;Main_B1.c: 130: {
  3424                           ;Main_B1.c: 131: myMain->PowerCount = 0;
  3425  0748  0A6C               	incf	_myMain,w
  3426  0749  0086               	movwf	6
  3427  074A  3001               	movlw	1	; select bank2/3
  3428  074B  0087               	movwf	7
  3429  074C  3000               	movlw	0
  3430  074D  3FC0               	movwi [0]fsr1
  3431  074E  3FC1               	movwi [1]fsr1
  3432                           
  3433                           ;Main_B1.c: 132: myMain->PowerON = 1;
  3434  074F  086C               	movf	_myMain,w
  3435  0750  0086               	movwf	6
  3436  0751  3001               	movlw	1	; select bank2/3
  3437  0752  0087               	movwf	7
  3438  0753  1401               	bsf	1,0
  3439                           
  3440                           ;Main_B1.c: 135: setTemp_Enable(1);
  3441  0754  3001               	movlw	1
  3442  0755  3196  2681  3187   	fcall	_setTemp_Enable
  3443                           
  3444                           ;Main_B1.c: 139: ;;
  3445                           ;Main_B1.c: 145: setBuz(3, 50);
  3446  0758  3032               	movlw	50
  3447  0759  0020               	movlb	0	; select bank0
  3448  075A  00A9               	movwf	setBuz@time
  3449  075B  3000               	movlw	0
  3450  075C  00AA               	movwf	setBuz@time+1
  3451  075D  3003               	movlw	3
  3452  075E  3186  26B8  3187   	fcall	_setBuz
  3453                           
  3454                           ;Main_B1.c: 146: myMain->SelfTest = 1;
  3455  0761  0020               	movlb	0	; select bank0
  3456  0762  086C               	movf	_myMain,w
  3457  0763  0086               	movwf	6
  3458  0764  3001               	movlw	1	; select bank2/3
  3459  0765  0087               	movwf	7
  3460  0766  1701               	bsf	1,6
  3461                           
  3462                           ;Main_B1.c: 148: setSw_Enable(1);
  3463  0767  3001               	movlw	1
  3464  0768  3188  207E         	fcall	_setSw_Enable
  3465                           
  3466                           ;Main_B1.c: 155: }
  3467                           ;Main_B1.c: 156: } else {
  3468  076A  0008               	return
  3469  076B                     l4978:	
  3470                           
  3471                           ;Main_B1.c: 164: myMain->Count1++;
  3472  076B  0020               	movlb	0	; select bank0
  3473  076C  086C               	movf	_myMain,w
  3474  076D  3E05               	addlw	5
  3475  076E  0086               	movwf	6
  3476  076F  3001               	movlw	1	; select bank2/3
  3477  0770  0087               	movwf	7
  3478  0771  3001               	movlw	1
  3479  0772  0781               	addwf	1,f
  3480  0773  3141               	addfsr 1,1
  3481  0774  1803               	skipnc
  3482  0775  0A81               	incf	1,f
  3483                           
  3484                           ;Main_B1.c: 165: if (myMain->Count1 == 100)
  3485  0776  086C               	movf	_myMain,w
  3486  0777  3E05               	addlw	5
  3487  0778  0086               	movwf	6
  3488  0779  3001               	movlw	1	; select bank2/3
  3489  077A  0087               	movwf	7
  3490  077B  3F40               	moviw [0]fsr1
  3491  077C  3A64               	xorlw	100
  3492  077D  1D03               	skipz
  3493  077E  2F81               	goto	u4355
  3494  077F  3F41               	moviw [1]fsr1
  3495  0780  3A00               	xorlw	0
  3496  0781                     u4355:	
  3497  0781  1D03               	skipz
  3498  0782  0008               	return
  3499                           
  3500                           ;Main_B1.c: 166: {
  3501                           ;Main_B1.c: 167: myMain->Count1 = 0;
  3502  0783  086C               	movf	_myMain,w
  3503  0784  3E05               	addlw	5
  3504  0785  0086               	movwf	6
  3505  0786  3001               	movlw	1	; select bank2/3
  3506  0787  0087               	movwf	7
  3507  0788  3000               	movlw	0
  3508  0789  3FC0               	movwi [0]fsr1
  3509  078A  3FC1               	movwi [1]fsr1
  3510                           
  3511                           ;Main_B1.c: 180: if (myMain->Flag) {
  3512  078B  086C               	movf	_myMain,w
  3513  078C  0086               	movwf	6
  3514  078D  3001               	movlw	1	; select bank2/3
  3515  078E  0087               	movwf	7
  3516  078F  1D81               	btfss	1,3
  3517  0790  2F97               	goto	l4986
  3518                           
  3519                           ;Main_B1.c: 181: myMain->Flag = 0;
  3520  0791  086C               	movf	_myMain,w
  3521  0792  0086               	movwf	6
  3522  0793  3001               	movlw	1	; select bank2/3
  3523  0794  0087               	movwf	7
  3524  0795  1181               	bcf	1,3
  3525                           
  3526                           ;Main_B1.c: 190: } else {
  3527  0796  0008               	return
  3528  0797                     l4986:	
  3529                           
  3530                           ;Main_B1.c: 191: myMain->Flag = 1;
  3531  0797  086C               	movf	_myMain,w
  3532  0798  0086               	movwf	6
  3533  0799  3001               	movlw	1	; select bank2/3
  3534  079A  0087               	movwf	7
  3535  079B  1581               	bsf	1,3
  3536  079C  0008               	return
  3537  079D                     __end_of_my_Main:	
  3538                           
  3539                           	psect	text3
  3540  1681                     __ptext3:	
  3541 ;; *************** function _setTemp_Enable *****************
  3542 ;; Defined at:
  3543 ;;		line 22 in file "../src/OverTemperature_B1.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  command         1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  command         1    0[BANK0 ] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		wreg, fsr1l, fsr1h
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;Total ram usage:        1 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    5
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_my_Main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _setTemp_Enable
  3573  1681                     _setTemp_Enable:	
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _setTemp_Enable: [wregfsr1]
  3577                           ;setTemp_Enable@command stored from wreg
  3578  1681  0020               	movlb	0	; select bank0
  3579  1682  00A0               	movwf	setTemp_Enable@command
  3580                           
  3581                           ;OverTemperature_B1.c: 24: Temp->Enable=command;
  3582  1683  085C               	movf	_Temp,w
  3583  1684  0086               	movwf	6
  3584  1685  3001               	movlw	1	; select bank2/3
  3585  1686  0087               	movwf	7
  3586  1687  0820               	movf	setTemp_Enable@command,w
  3587  1688  1001               	bcf	1,0
  3588  1689  1D03               	skipz
  3589  168A  1401               	bsf	1,0
  3590  168B  0008               	return
  3591  168C                     __end_of_setTemp_Enable:	
  3592                           
  3593                           	psect	text4
  3594  179C                     __ptext4:	
  3595 ;; *************** function _myMain_Initialization *****************
  3596 ;; Defined at:
  3597 ;;		line 113 in file "../src/Main_B1.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;		None               void
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    5
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _myMain_Initialization
  3627  179C                     _myMain_Initialization:	
  3628                           
  3629                           ;Main_B1.c: 115: product = &_product;
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3633  179C  3042               	movlw	__product& (0+255)
  3634  179D  0020               	movlb	0	; select bank0
  3635  179E  00A0               	movwf	??_myMain_Initialization
  3636  179F  0820               	movf	??_myMain_Initialization,w
  3637  17A0  00ED               	movwf	_product
  3638                           
  3639                           ;Main_B1.c: 116: product->Data[20] = 210;
  3640  17A1  30D2               	movlw	210
  3641  17A2  00A0               	movwf	??_myMain_Initialization
  3642  17A3  086D               	movf	_product,w
  3643  17A4  3E14               	addlw	20
  3644  17A5  0086               	movwf	6
  3645  17A6  3001               	movlw	1	; select bank2/3
  3646  17A7  0087               	movwf	7
  3647  17A8  0820               	movf	??_myMain_Initialization,w
  3648  17A9  0081               	movwf	1
  3649                           
  3650                           ;Main_B1.c: 119: myMain = &_myMain;
  3651  17AA  3020               	movlw	__myMain& (0+255)
  3652  17AB  00A0               	movwf	??_myMain_Initialization
  3653  17AC  0820               	movf	??_myMain_Initialization,w
  3654  17AD  00EC               	movwf	_myMain
  3655  17AE  0008               	return
  3656  17AF                     __end_of_myMain_Initialization:	
  3657                           
  3658                           	psect	text5
  3659  0F25                     __ptext5:	
  3660 ;; *************** function _getTemp_AD *****************
  3661 ;; Defined at:
  3662 ;;		line 35 in file "../src/OverTemperature_B1.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  channel         1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  channel         1    8[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;Total ram usage:        5 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    6
  3683 ;; This function calls:
  3684 ;;		_getAD
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _getTemp_AD
  3692  0F25                     _getTemp_AD:	
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _getTemp_AD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3696                           ;getTemp_AD@channel stored from wreg
  3697  0F25  0020               	movlb	0	; select bank0
  3698  0F26  00A8               	movwf	getTemp_AD@channel
  3699                           
  3700                           ;OverTemperature_B1.c: 37: if(Temp->ADtoGO)
  3701  0F27  085C               	movf	_Temp,w
  3702  0F28  0086               	movwf	6
  3703  0F29  3001               	movlw	1	; select bank2/3
  3704  0F2A  0087               	movwf	7
  3705  0F2B  1D01               	btfss	1,2
  3706  0F2C  0008               	return
  3707                           
  3708                           ;OverTemperature_B1.c: 38: {
  3709                           ;OverTemperature_B1.c: 39: Temp->ADRES=getAD(channel,0xf0);
  3710  0F2D  30F0               	movlw	240
  3711  0F2E  00A4               	movwf	??_getTemp_AD
  3712  0F2F  0824               	movf	??_getTemp_AD,w
  3713  0F30  00A0               	movwf	getAD@adcon1
  3714  0F31  0828               	movf	getTemp_AD@channel,w
  3715  0F32  3188  2004  318F   	fcall	_getAD
  3716  0F35  0020               	movlb	0	; select bank0
  3717  0F36  085C               	movf	_Temp,w
  3718  0F37  3E0C               	addlw	12
  3719  0F38  0086               	movwf	6
  3720  0F39  3001               	movlw	1	; select bank2/3
  3721  0F3A  0087               	movwf	7
  3722  0F3B  0820               	movf	?_getAD,w
  3723  0F3C  3FC0               	movwi [0]fsr1
  3724  0F3D  0821               	movf	?_getAD+1,w
  3725  0F3E  3FC1               	movwi [1]fsr1
  3726                           
  3727                           ;OverTemperature_B1.c: 40: if(Temp->ADH[0] < Temp->ADRES)
  3728  0F3F  085C               	movf	_Temp,w
  3729  0F40  3E0C               	addlw	12
  3730  0F41  0086               	movwf	6
  3731  0F42  3001               	movlw	1	; select bank2/3
  3732  0F43  0087               	movwf	7
  3733  0F44  3F40               	moviw [0]fsr1
  3734  0F45  00A4               	movwf	??_getTemp_AD
  3735  0F46  3F41               	moviw [1]fsr1
  3736  0F47  00A5               	movwf	??_getTemp_AD+1
  3737  0F48  085C               	movf	_Temp,w
  3738  0F49  3E08               	addlw	8
  3739  0F4A  0086               	movwf	6
  3740  0F4B  3001               	movlw	1	; select bank2/3
  3741  0F4C  0087               	movwf	7
  3742  0F4D  3F40               	moviw [0]fsr1
  3743  0F4E  00A6               	movwf	??_getTemp_AD+2
  3744  0F4F  3F41               	moviw [1]fsr1
  3745  0F50  00A7               	movwf	??_getTemp_AD+3
  3746  0F51  0825               	movf	??_getTemp_AD+1,w
  3747  0F52  0227               	subwf	??_getTemp_AD+3,w
  3748  0F53  1D03               	skipz
  3749  0F54  2F57               	goto	u4315
  3750  0F55  0824               	movf	??_getTemp_AD,w
  3751  0F56  0226               	subwf	??_getTemp_AD+2,w
  3752  0F57                     u4315:	
  3753  0F57  1803               	skipnc
  3754  0F58  2F68               	goto	l4960
  3755                           
  3756                           ;OverTemperature_B1.c: 41: {
  3757                           ;OverTemperature_B1.c: 42: Temp->ADH[0]=Temp->ADRES;
  3758  0F59  085C               	movf	_Temp,w
  3759  0F5A  3E0C               	addlw	12
  3760  0F5B  0086               	movwf	6
  3761  0F5C  3001               	movlw	1	; select bank2/3
  3762  0F5D  0087               	movwf	7
  3763  0F5E  085C               	movf	_Temp,w
  3764  0F5F  3E08               	addlw	8
  3765  0F60  0084               	movwf	4
  3766  0F61  3001               	movlw	1	; select bank2/3
  3767  0F62  0085               	movwf	5
  3768  0F63  3F40               	moviw [0]fsr1
  3769  0F64  3F80               	movwi [0]fsr0
  3770  0F65  3F41               	moviw [1]fsr1
  3771  0F66  3F81               	movwi [1]fsr0
  3772                           
  3773                           ;OverTemperature_B1.c: 43: }
  3774  0F67  0008               	return
  3775  0F68                     l4960:	
  3776                           
  3777                           ;OverTemperature_B1.c: 44: else if(Temp->ADH[1] < Temp->ADRES)
  3778  0F68  085C               	movf	_Temp,w
  3779  0F69  3E0C               	addlw	12
  3780  0F6A  0086               	movwf	6
  3781  0F6B  3001               	movlw	1	; select bank2/3
  3782  0F6C  0087               	movwf	7
  3783  0F6D  3F40               	moviw [0]fsr1
  3784  0F6E  00A4               	movwf	??_getTemp_AD
  3785  0F6F  3F41               	moviw [1]fsr1
  3786  0F70  00A5               	movwf	??_getTemp_AD+1
  3787  0F71  085C               	movf	_Temp,w
  3788  0F72  3E0A               	addlw	10
  3789  0F73  0086               	movwf	6
  3790  0F74  3001               	movlw	1	; select bank2/3
  3791  0F75  0087               	movwf	7
  3792  0F76  3F40               	moviw [0]fsr1
  3793  0F77  00A6               	movwf	??_getTemp_AD+2
  3794  0F78  3F41               	moviw [1]fsr1
  3795  0F79  00A7               	movwf	??_getTemp_AD+3
  3796  0F7A  0825               	movf	??_getTemp_AD+1,w
  3797  0F7B  0227               	subwf	??_getTemp_AD+3,w
  3798  0F7C  1D03               	skipz
  3799  0F7D  2F80               	goto	u4325
  3800  0F7E  0824               	movf	??_getTemp_AD,w
  3801  0F7F  0226               	subwf	??_getTemp_AD+2,w
  3802  0F80                     u4325:	
  3803  0F80  1803               	skipnc
  3804  0F81  0008               	return
  3805                           
  3806                           ;OverTemperature_B1.c: 45: {
  3807                           ;OverTemperature_B1.c: 46: Temp->ADH[1]=Temp->ADRES;
  3808  0F82  085C               	movf	_Temp,w
  3809  0F83  3E0C               	addlw	12
  3810  0F84  0086               	movwf	6
  3811  0F85  3001               	movlw	1	; select bank2/3
  3812  0F86  0087               	movwf	7
  3813  0F87  085C               	movf	_Temp,w
  3814  0F88  3E0A               	addlw	10
  3815  0F89  0084               	movwf	4
  3816  0F8A  3001               	movlw	1	; select bank2/3
  3817  0F8B  0085               	movwf	5
  3818  0F8C  3F40               	moviw [0]fsr1
  3819  0F8D  3F80               	movwi [0]fsr0
  3820  0F8E  3F41               	moviw [1]fsr1
  3821  0F8F  3F81               	movwi [1]fsr0
  3822  0F90  0008               	return
  3823  0F91                     __end_of_getTemp_AD:	
  3824                           
  3825                           	psect	text6
  3826  0804                     __ptext6:	
  3827 ;; *************** function _getAD *****************
  3828 ;; Defined at:
  3829 ;;		line 342 in file "../src/MCU_B1.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  adcon0          1    wreg     unsigned char 
  3832 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  adcon0          1    3[BANK0 ] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  2    0[BANK0 ] int 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        4 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    5
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_getTemp_AD
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _getAD
  3860  0804                     _getAD:	
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _getAD: [wreg+status,2+status,0]
  3864                           ;getAD@adcon0 stored from wreg
  3865  0804  0020               	movlb	0	; select bank0
  3866  0805  00A3               	movwf	getAD@adcon0
  3867                           
  3868                           ;MCU_B1.c: 343: ADCON0 = adcon0;
  3869  0806  0823               	movf	getAD@adcon0,w
  3870  0807  0021               	movlb	1	; select bank1
  3871  0808  009D               	movwf	29	;volatile
  3872                           
  3873                           ;MCU_B1.c: 344: ADCON1 = adcon1;
  3874  0809  0020               	movlb	0	; select bank0
  3875  080A  0820               	movf	getAD@adcon1,w
  3876  080B  0021               	movlb	1	; select bank1
  3877  080C  009E               	movwf	30	;volatile
  3878                           
  3879                           ;MCU_B1.c: 345: GO_nDONE = 1;
  3880  080D  149D               	bsf	29,1	;volatile
  3881  080E                     l952:	
  3882                           ;MCU_B1.c: 346: while (GO_nDONE == 1);
  3883                           
  3884  080E  189D               	btfsc	29,1	;volatile
  3885  080F  280E               	goto	l952
  3886                           
  3887                           ;MCU_B1.c: 347: return ((ADRESH*256)+ADRESL);
  3888  0810  081C               	movf	28,w	;volatile
  3889  0811  0020               	movlb	0	; select bank0
  3890  0812  01A1               	clrf	?_getAD+1
  3891  0813  07A1               	addwf	?_getAD+1,f
  3892  0814  0021               	movlb	1	; select bank1
  3893  0815  081B               	movf	27,w	;volatile
  3894  0816  0020               	movlb	0	; select bank0
  3895  0817  01A0               	clrf	?_getAD
  3896  0818  07A0               	addwf	?_getAD,f
  3897  0819  0008               	return
  3898  081A                     __end_of_getAD:	
  3899                           
  3900                           	psect	text7
  3901  15F4                     __ptext7:	
  3902 ;; *************** function _Temp_Main *****************
  3903 ;; Defined at:
  3904 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;		None               void
  3911 ;; Registers used:
  3912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:   11
  3925 ;; This function calls:
  3926 ;;		_setTemp_Main
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function _Temp_Main
  3934  15F4                     _Temp_Main:	
  3935                           
  3936                           ;OverTemperature_B1.c: 60: setTemp_Main();
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3940  15F4  3182  22F5         	fcall	_setTemp_Main
  3941  15F6  0008               	return
  3942  15F7                     __end_of_Temp_Main:	
  3943                           
  3944                           	psect	text8
  3945  02F5                     __ptext8:	
  3946 ;; *************** function _setTemp_Main *****************
  3947 ;; Defined at:
  3948 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;		None               void
  3955 ;; Registers used:
  3956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;Total ram usage:        3 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:   10
  3969 ;; This function calls:
  3970 ;;		_setOverTemp_Exceptions
  3971 ;; This function is called by:
  3972 ;;		_Temp_Main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _setTemp_Main
  3978  02F5                     _setTemp_Main:	
  3979                           
  3980                           ;OverTemperature_B1.c: 66: if(Temp->Enable)
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3984  02F5  0020               	movlb	0	; select bank0
  3985  02F6  085C               	movf	_Temp,w
  3986  02F7  0086               	movwf	6
  3987  02F8  3001               	movlw	1	; select bank2/3
  3988  02F9  0087               	movwf	7
  3989  02FA  1C01               	btfss	1,0
  3990  02FB  0008               	return
  3991                           
  3992                           ;OverTemperature_B1.c: 67: {
  3993                           ;OverTemperature_B1.c: 68: if(Temp->ADtoGO == 0)
  3994  02FC  085C               	movf	_Temp,w
  3995  02FD  0086               	movwf	6
  3996  02FE  3001               	movlw	1	; select bank2/3
  3997  02FF  0087               	movwf	7
  3998  0300  1901               	btfsc	1,2
  3999  0301  2B2C               	goto	l4634
  4000                           
  4001                           ;OverTemperature_B1.c: 69: {
  4002                           ;OverTemperature_B1.c: 70: Temp->Time++;
  4003  0302  0A5C               	incf	_Temp,w
  4004  0303  0086               	movwf	6
  4005  0304  3001               	movlw	1	; select bank2/3
  4006  0305  0087               	movwf	7
  4007  0306  3001               	movlw	1
  4008  0307  0781               	addwf	1,f
  4009  0308  3141               	addfsr 1,1
  4010  0309  1803               	skipnc
  4011  030A  0A81               	incf	1,f
  4012                           
  4013                           ;OverTemperature_B1.c: 72: {
  4014                           ;OverTemperature_B1.c: 73: if(1 && 1)
  4015  030B  0A5C               	incf	_Temp,w
  4016  030C  0086               	movwf	6
  4017  030D  3001               	movlw	1	; select bank2/3
  4018  030E  0087               	movwf	7
  4019  030F  3F40               	moviw [0]fsr1
  4020  0310  00B0               	movwf	??_setTemp_Main
  4021  0311  3F41               	moviw [1]fsr1
  4022  0312  00B1               	movwf	??_setTemp_Main+1
  4023  0313  3001               	movlw	1
  4024  0314  0231               	subwf	??_setTemp_Main+1,w
  4025  0315  30F4               	movlw	244
  4026  0316  1903               	skipnz
  4027  0317  0230               	subwf	??_setTemp_Main,w
  4028  0318  1C03               	skipc
  4029  0319  0008               	return
  4030                           
  4031                           ;OverTemperature_B1.c: 74: {
  4032                           ;OverTemperature_B1.c: 75: Temp->Time=0;
  4033  031A  0A5C               	incf	_Temp,w
  4034  031B  0086               	movwf	6
  4035  031C  3001               	movlw	1	; select bank2/3
  4036  031D  0087               	movwf	7
  4037  031E  3000               	movlw	0
  4038  031F  3FC0               	movwi [0]fsr1
  4039  0320  3FC1               	movwi [1]fsr1
  4040                           
  4041                           ;OverTemperature_B1.c: 76: Temp->ADtoGO=1;
  4042  0321  085C               	movf	_Temp,w
  4043  0322  0086               	movwf	6
  4044  0323  3001               	movlw	1	; select bank2/3
  4045  0324  0087               	movwf	7
  4046  0325  1501               	bsf	1,2
  4047                           
  4048                           ;OverTemperature_B1.c: 77: Temp->Safe=0;
  4049  0326  085C               	movf	_Temp,w
  4050  0327  0086               	movwf	6
  4051  0328  3001               	movlw	1	; select bank2/3
  4052  0329  0087               	movwf	7
  4053  032A  1201               	bcf	1,4
  4054                           
  4055                           ;OverTemperature_B1.c: 78: }
  4056  032B  0008               	return
  4057  032C                     l4634:	
  4058                           ;OverTemperature_B1.c: 82: }
  4059                           ;OverTemperature_B1.c: 83: }
  4060                           ;OverTemperature_B1.c: 84: }
  4061                           
  4062                           ;OverTemperature_B1.c: 79: else
  4063                           ;OverTemperature_B1.c: 80: {
  4064                           ;OverTemperature_B1.c: 81: Temp->Time=1000;
  4065                           
  4066                           
  4067                           ;OverTemperature_B1.c: 85: else
  4068                           ;OverTemperature_B1.c: 86: {
  4069                           ;OverTemperature_B1.c: 87: Temp->Time++;
  4070  032C  0A5C               	incf	_Temp,w
  4071  032D  0086               	movwf	6
  4072  032E  3001               	movlw	1	; select bank2/3
  4073  032F  0087               	movwf	7
  4074  0330  3001               	movlw	1
  4075  0331  0781               	addwf	1,f
  4076  0332  3141               	addfsr 1,1
  4077  0333  1803               	skipnc
  4078  0334  0A81               	incf	1,f
  4079                           
  4080                           ;OverTemperature_B1.c: 88: if(Temp->Time >= 4)
  4081  0335  0A5C               	incf	_Temp,w
  4082  0336  0086               	movwf	6
  4083  0337  3001               	movlw	1	; select bank2/3
  4084  0338  0087               	movwf	7
  4085  0339  3F40               	moviw [0]fsr1
  4086  033A  00B0               	movwf	??_setTemp_Main
  4087  033B  3F41               	moviw [1]fsr1
  4088  033C  00B1               	movwf	??_setTemp_Main+1
  4089  033D  3000               	movlw	0
  4090  033E  0231               	subwf	??_setTemp_Main+1,w
  4091  033F  3004               	movlw	4
  4092  0340  1903               	skipnz
  4093  0341  0230               	subwf	??_setTemp_Main,w
  4094  0342  1C03               	skipc
  4095  0343  0008               	return
  4096                           
  4097                           ;OverTemperature_B1.c: 89: {
  4098                           ;OverTemperature_B1.c: 90: Temp->Time=0;
  4099  0344  0A5C               	incf	_Temp,w
  4100  0345  0086               	movwf	6
  4101  0346  3001               	movlw	1	; select bank2/3
  4102  0347  0087               	movwf	7
  4103  0348  3000               	movlw	0
  4104  0349  3FC0               	movwi [0]fsr1
  4105  034A  3FC1               	movwi [1]fsr1
  4106                           
  4107                           ;OverTemperature_B1.c: 91: Temp->ADtoGO=0;
  4108  034B  085C               	movf	_Temp,w
  4109  034C  0086               	movwf	6
  4110  034D  3001               	movlw	1	; select bank2/3
  4111  034E  0087               	movwf	7
  4112  034F  1101               	bcf	1,2
  4113                           
  4114                           ;OverTemperature_B1.c: 92: Temp->AD=Temp->ADH[1];
  4115  0350  085C               	movf	_Temp,w
  4116  0351  3E0A               	addlw	10
  4117  0352  0086               	movwf	6
  4118  0353  3001               	movlw	1	; select bank2/3
  4119  0354  0087               	movwf	7
  4120  0355  085C               	movf	_Temp,w
  4121  0356  3E06               	addlw	6
  4122  0357  0084               	movwf	4
  4123  0358  3001               	movlw	1	; select bank2/3
  4124  0359  0085               	movwf	5
  4125  035A  3F40               	moviw [0]fsr1
  4126  035B  3F80               	movwi [0]fsr0
  4127  035C  3F41               	moviw [1]fsr1
  4128  035D  3F81               	movwi [1]fsr0
  4129                           
  4130                           ;OverTemperature_B1.c: 93: if(Temp->ERROR)
  4131  035E  085C               	movf	_Temp,w
  4132  035F  0086               	movwf	6
  4133  0360  3001               	movlw	1	; select bank2/3
  4134  0361  0087               	movwf	7
  4135  0362  1C81               	btfss	1,1
  4136  0363  2B91               	goto	l4656
  4137                           
  4138                           ;OverTemperature_B1.c: 94: {
  4139                           ;OverTemperature_B1.c: 95: if(Temp->AD >= 600)
  4140  0364  085C               	movf	_Temp,w
  4141  0365  3E06               	addlw	6
  4142  0366  0086               	movwf	6
  4143  0367  3001               	movlw	1	; select bank2/3
  4144  0368  0087               	movwf	7
  4145  0369  3F40               	moviw [0]fsr1
  4146  036A  00B0               	movwf	??_setTemp_Main
  4147  036B  3F41               	moviw [1]fsr1
  4148  036C  00B1               	movwf	??_setTemp_Main+1
  4149  036D  3002               	movlw	2
  4150  036E  0231               	subwf	??_setTemp_Main+1,w
  4151  036F  3058               	movlw	88
  4152  0370  1903               	skipnz
  4153  0371  0230               	subwf	??_setTemp_Main,w
  4154  0372  1C03               	skipc
  4155  0373  2BBE               	goto	l4666
  4156                           
  4157                           ;OverTemperature_B1.c: 96: {
  4158                           ;OverTemperature_B1.c: 97: Temp->Count++;
  4159  0374  3001               	movlw	1
  4160  0375  00B0               	movwf	??_setTemp_Main
  4161  0376  085C               	movf	_Temp,w
  4162  0377  3E03               	addlw	3
  4163  0378  0086               	movwf	6
  4164  0379  3001               	movlw	1	; select bank2/3
  4165  037A  0087               	movwf	7
  4166  037B  0830               	movf	??_setTemp_Main,w
  4167  037C  0781               	addwf	1,f
  4168                           
  4169                           ;OverTemperature_B1.c: 98: if(Temp->Count >= 3)
  4170  037D  085C               	movf	_Temp,w
  4171  037E  3E03               	addlw	3
  4172  037F  0086               	movwf	6
  4173  0380  3001               	movlw	1	; select bank2/3
  4174  0381  0087               	movwf	7
  4175  0382  3003               	movlw	3
  4176  0383  0201               	subwf	1,w
  4177  0384  1C03               	skipc
  4178  0385  2BC5               	goto	l4668
  4179                           
  4180                           ;OverTemperature_B1.c: 99: {
  4181                           ;OverTemperature_B1.c: 100: Temp->Count=0;
  4182  0386  085C               	movf	_Temp,w
  4183  0387  3E03               	addlw	3
  4184  0388  0086               	movwf	6
  4185  0389  3001               	movlw	1	; select bank2/3
  4186  038A  0087               	movwf	7
  4187  038B  0181               	clrf	1
  4188                           
  4189                           ;OverTemperature_B1.c: 101: setOverTemp_Exceptions(0);
  4190  038C  3000               	movlw	0
  4191  038D  318A  221C  3182   	fcall	_setOverTemp_Exceptions
  4192                           
  4193                           ;OverTemperature_B1.c: 102: }
  4194                           ;OverTemperature_B1.c: 103: }
  4195  0390  2BC5               	goto	l4668
  4196  0391                     l4656:	
  4197                           ;OverTemperature_B1.c: 107: }
  4198                           ;OverTemperature_B1.c: 108: }
  4199                           
  4200                           ;OverTemperature_B1.c: 104: else
  4201                           ;OverTemperature_B1.c: 105: {
  4202                           ;OverTemperature_B1.c: 106: Temp->Count=0;
  4203                           
  4204                           
  4205                           ;OverTemperature_B1.c: 109: else
  4206                           ;OverTemperature_B1.c: 110: {
  4207                           ;OverTemperature_B1.c: 111: if(Temp->AD <= 550)
  4208  0391  085C               	movf	_Temp,w
  4209  0392  3E06               	addlw	6
  4210  0393  0086               	movwf	6
  4211  0394  3001               	movlw	1	; select bank2/3
  4212  0395  0087               	movwf	7
  4213  0396  3F40               	moviw [0]fsr1
  4214  0397  00B0               	movwf	??_setTemp_Main
  4215  0398  3F41               	moviw [1]fsr1
  4216  0399  00B1               	movwf	??_setTemp_Main+1
  4217  039A  3002               	movlw	2
  4218  039B  0231               	subwf	??_setTemp_Main+1,w
  4219  039C  3027               	movlw	39
  4220  039D  1903               	skipnz
  4221  039E  0230               	subwf	??_setTemp_Main,w
  4222  039F  1803               	skipnc
  4223  03A0  2BBE               	goto	l4666
  4224                           
  4225                           ;OverTemperature_B1.c: 112: {
  4226                           ;OverTemperature_B1.c: 113: Temp->Count++;
  4227  03A1  3001               	movlw	1
  4228  03A2  00B0               	movwf	??_setTemp_Main
  4229  03A3  085C               	movf	_Temp,w
  4230  03A4  3E03               	addlw	3
  4231  03A5  0086               	movwf	6
  4232  03A6  3001               	movlw	1	; select bank2/3
  4233  03A7  0087               	movwf	7
  4234  03A8  0830               	movf	??_setTemp_Main,w
  4235  03A9  0781               	addwf	1,f
  4236                           
  4237                           ;OverTemperature_B1.c: 114: if(Temp->Count >= 3)
  4238  03AA  085C               	movf	_Temp,w
  4239  03AB  3E03               	addlw	3
  4240  03AC  0086               	movwf	6
  4241  03AD  3001               	movlw	1	; select bank2/3
  4242  03AE  0087               	movwf	7
  4243  03AF  3003               	movlw	3
  4244  03B0  0201               	subwf	1,w
  4245  03B1  1C03               	skipc
  4246  03B2  2BC5               	goto	l4668
  4247                           
  4248                           ;OverTemperature_B1.c: 115: {
  4249                           ;OverTemperature_B1.c: 116: Temp->Count=0;
  4250  03B3  085C               	movf	_Temp,w
  4251  03B4  3E03               	addlw	3
  4252  03B5  0086               	movwf	6
  4253  03B6  3001               	movlw	1	; select bank2/3
  4254  03B7  0087               	movwf	7
  4255  03B8  0181               	clrf	1
  4256                           
  4257                           ;OverTemperature_B1.c: 117: setOverTemp_Exceptions(1);
  4258  03B9  3001               	movlw	1
  4259  03BA  318A  221C  3182   	fcall	_setOverTemp_Exceptions
  4260                           
  4261                           ;OverTemperature_B1.c: 118: }
  4262                           ;OverTemperature_B1.c: 119: }
  4263  03BD  2BC5               	goto	l4668
  4264  03BE                     l4666:	
  4265                           
  4266                           ;OverTemperature_B1.c: 120: else
  4267                           ;OverTemperature_B1.c: 121: {
  4268                           ;OverTemperature_B1.c: 122: Temp->Count=0;
  4269  03BE  0020               	movlb	0	; select bank0
  4270  03BF  085C               	movf	_Temp,w
  4271  03C0  3E03               	addlw	3
  4272  03C1  0086               	movwf	6
  4273  03C2  3001               	movlw	1	; select bank2/3
  4274  03C3  0087               	movwf	7
  4275  03C4  0181               	clrf	1
  4276  03C5                     l4668:	
  4277                           
  4278                           ;OverTemperature_B1.c: 123: }
  4279                           ;OverTemperature_B1.c: 124: }
  4280                           ;OverTemperature_B1.c: 125: if(Temp->ERROR == 0)
  4281  03C5  0020               	movlb	0	; select bank0
  4282  03C6  085C               	movf	_Temp,w
  4283  03C7  0086               	movwf	6
  4284  03C8  3001               	movlw	1	; select bank2/3
  4285  03C9  0087               	movwf	7
  4286  03CA  1881               	btfsc	1,1
  4287  03CB  2BD1               	goto	l4672
  4288                           
  4289                           ;OverTemperature_B1.c: 126: {
  4290                           ;OverTemperature_B1.c: 127: Temp->Safe=1;
  4291  03CC  085C               	movf	_Temp,w
  4292  03CD  0086               	movwf	6
  4293  03CE  3001               	movlw	1	; select bank2/3
  4294  03CF  0087               	movwf	7
  4295  03D0  1601               	bsf	1,4
  4296  03D1                     l4672:	
  4297                           
  4298                           ;OverTemperature_B1.c: 128: }
  4299                           ;OverTemperature_B1.c: 129: product->Data[24]=Temp->AD >> 8;
  4300  03D1  085C               	movf	_Temp,w
  4301  03D2  3E06               	addlw	6
  4302  03D3  0086               	movwf	6
  4303  03D4  3001               	movlw	1	; select bank2/3
  4304  03D5  0087               	movwf	7
  4305  03D6  3F40               	moviw [0]fsr1
  4306  03D7  00B0               	movwf	??_setTemp_Main
  4307  03D8  3F41               	moviw [1]fsr1
  4308  03D9  00B1               	movwf	??_setTemp_Main+1
  4309  03DA  0831               	movf	??_setTemp_Main+1,w
  4310  03DB  00B2               	movwf	??_setTemp_Main+2
  4311  03DC  086D               	movf	_product,w
  4312  03DD  3E18               	addlw	24
  4313  03DE  0086               	movwf	6
  4314  03DF  3001               	movlw	1	; select bank2/3
  4315  03E0  0087               	movwf	7
  4316  03E1  0832               	movf	??_setTemp_Main+2,w
  4317  03E2  0081               	movwf	1
  4318                           
  4319                           ;OverTemperature_B1.c: 130: product->Data[25]=Temp->AD;
  4320  03E3  085C               	movf	_Temp,w
  4321  03E4  3E06               	addlw	6
  4322  03E5  0086               	movwf	6
  4323  03E6  3001               	movlw	1	; select bank2/3
  4324  03E7  0087               	movwf	7
  4325  03E8  0801               	movf	1,w
  4326  03E9  00B0               	movwf	??_setTemp_Main
  4327  03EA  086D               	movf	_product,w
  4328  03EB  3E19               	addlw	25
  4329  03EC  0086               	movwf	6
  4330  03ED  3001               	movlw	1	; select bank2/3
  4331  03EE  0087               	movwf	7
  4332  03EF  0830               	movf	??_setTemp_Main,w
  4333  03F0  0081               	movwf	1
  4334                           
  4335                           ;OverTemperature_B1.c: 131: Temp->ADH[0]=0;
  4336  03F1  085C               	movf	_Temp,w
  4337  03F2  3E08               	addlw	8
  4338  03F3  0086               	movwf	6
  4339  03F4  3001               	movlw	1	; select bank2/3
  4340  03F5  0087               	movwf	7
  4341  03F6  3000               	movlw	0
  4342  03F7  3FC0               	movwi [0]fsr1
  4343  03F8  3FC1               	movwi [1]fsr1
  4344                           
  4345                           ;OverTemperature_B1.c: 132: Temp->ADH[1]=0;
  4346  03F9  085C               	movf	_Temp,w
  4347  03FA  3E0A               	addlw	10
  4348  03FB  0086               	movwf	6
  4349  03FC  3001               	movlw	1	; select bank2/3
  4350  03FD  0087               	movwf	7
  4351  03FE  3000               	movlw	0
  4352  03FF  3FC0               	movwi [0]fsr1
  4353  0400  3FC1               	movwi [1]fsr1
  4354  0401  0008               	return
  4355  0402                     __end_of_setTemp_Main:	
  4356                           
  4357                           	psect	text9
  4358  0A1C                     __ptext9:	
  4359 ;; *************** function _setOverTemp_Exceptions *****************
  4360 ;; Defined at:
  4361 ;;		line 138 in file "../src/OverTemperature_B1.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  command         1    wreg     unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  command         1   15[BANK0 ] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    9
  4382 ;; This function calls:
  4383 ;;		_DimmerLights_Exceptions
  4384 ;;		_setBuz
  4385 ;;		_setLED
  4386 ;;		_setSw_Enable
  4387 ;; This function is called by:
  4388 ;;		_setTemp_Main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _setOverTemp_Exceptions
  4394  0A1C                     _setOverTemp_Exceptions:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _setOverTemp_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4398                           ;setOverTemp_Exceptions@command stored from wreg
  4399  0A1C  0020               	movlb	0	; select bank0
  4400  0A1D  00AF               	movwf	setOverTemp_Exceptions@command
  4401                           
  4402                           ;OverTemperature_B1.c: 140: Temp->ERROR=command;
  4403  0A1E  085C               	movf	_Temp,w
  4404  0A1F  0086               	movwf	6
  4405  0A20  3001               	movlw	1	; select bank2/3
  4406  0A21  0087               	movwf	7
  4407  0A22  082F               	movf	setOverTemp_Exceptions@command,w
  4408  0A23  1081               	bcf	1,1
  4409  0A24  1D03               	skipz
  4410  0A25  1481               	bsf	1,1
  4411                           
  4412                           ;OverTemperature_B1.c: 141: Temp->Safe=(~command) & 0x01;
  4413  0A26  092F               	comf	setOverTemp_Exceptions@command,w
  4414  0A27  3901               	andlw	1
  4415  0A28  00AE               	movwf	??_setOverTemp_Exceptions
  4416  0A29  085C               	movf	_Temp,w
  4417  0A2A  0086               	movwf	6
  4418  0A2B  3001               	movlw	1	; select bank2/3
  4419  0A2C  0087               	movwf	7
  4420  0A2D  0EAE               	swapf	??_setOverTemp_Exceptions,f
  4421  0A2E  0801               	movf	1,w
  4422  0A2F  062E               	xorwf	??_setOverTemp_Exceptions,w
  4423  0A30  39EF               	andlw	-17
  4424  0A31  062E               	xorwf	??_setOverTemp_Exceptions,w
  4425  0A32  0081               	movwf	1
  4426                           
  4427                           ;OverTemperature_B1.c: 142: if(command)
  4428  0A33  082F               	movf	setOverTemp_Exceptions@command,w
  4429  0A34  1903               	btfsc	3,2
  4430  0A35  2A3B               	goto	l4138
  4431                           
  4432                           ;OverTemperature_B1.c: 143: {
  4433                           ;OverTemperature_B1.c: 144: DimmerLights_Exceptions(1);
  4434  0A36  3001               	movlw	1
  4435  0A37  318D  25F2  318A   	fcall	_DimmerLights_Exceptions
  4436                           
  4437                           ;OverTemperature_B1.c: 148: }
  4438  0A3A  2A44               	goto	l1312
  4439  0A3B                     l4138:	
  4440                           
  4441                           ;OverTemperature_B1.c: 149: else
  4442                           ;OverTemperature_B1.c: 150: {
  4443                           ;OverTemperature_B1.c: 151: setBuz(2,100);
  4444  0A3B  3064               	movlw	100
  4445  0A3C  0020               	movlb	0	; select bank0
  4446  0A3D  00A9               	movwf	setBuz@time
  4447  0A3E  3000               	movlw	0
  4448  0A3F  00AA               	movwf	setBuz@time+1
  4449  0A40  3002               	movlw	2
  4450  0A41  3186  26B8  318A   	fcall	_setBuz
  4451  0A44                     l1312:	
  4452                           
  4453                           ;OverTemperature_B1.c: 152: }
  4454                           ;OverTemperature_B1.c: 155: setLED(99,command+10);
  4455  0A44  0020               	movlb	0	; select bank0
  4456  0A45  082F               	movf	setOverTemp_Exceptions@command,w
  4457  0A46  3E0A               	addlw	10
  4458  0A47  00AE               	movwf	??_setOverTemp_Exceptions
  4459  0A48  082E               	movf	??_setOverTemp_Exceptions,w
  4460  0A49  00A2               	movwf	setLED@command
  4461  0A4A  3063               	movlw	99
  4462  0A4B  318D  2536  318A   	fcall	_setLED
  4463                           
  4464                           ;OverTemperature_B1.c: 157: setSw_Enable((~command) & 0x01);
  4465  0A4E  0020               	movlb	0	; select bank0
  4466  0A4F  092F               	comf	setOverTemp_Exceptions@command,w
  4467  0A50  3901               	andlw	1
  4468  0A51  3188  207E         	fcall	_setSw_Enable
  4469  0A53  0008               	return
  4470  0A54                     __end_of_setOverTemp_Exceptions:	
  4471                           
  4472                           	psect	text10
  4473  087E                     __ptext10:	
  4474 ;; *************** function _setSw_Enable *****************
  4475 ;; Defined at:
  4476 ;;		line 85 in file "../src/Switch_B1.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  command         1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  command         1    2[BANK0 ] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;		None               void
  4483 ;; Registers used:
  4484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;Total ram usage:        1 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    6
  4497 ;; This function calls:
  4498 ;;		_SwPointSelect
  4499 ;; This function is called by:
  4500 ;;		_my_Main
  4501 ;;		_setOverTemp_Exceptions
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _setSw_Enable
  4507  087E                     _setSw_Enable:	
  4508                           
  4509                           ;incstack = 0
  4510                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4511                           ;setSw_Enable@command stored from wreg
  4512  087E  0020               	movlb	0	; select bank0
  4513  087F  00A2               	movwf	setSw_Enable@command
  4514                           
  4515                           ;Switch_B1.c: 88: SwPointSelect(1);
  4516  0880  3001               	movlw	1
  4517  0881  3197  27C3  3188   	fcall	_SwPointSelect
  4518                           
  4519                           ;Switch_B1.c: 89: Sw->Enable = command;
  4520  0884  0020               	movlb	0	; select bank0
  4521  0885  085B               	movf	_Sw,w
  4522  0886  0086               	movwf	6
  4523  0887  0187               	clrf	7
  4524  0888  0822               	movf	setSw_Enable@command,w
  4525  0889  1001               	bcf	1,0
  4526  088A  1D03               	skipz
  4527  088B  1401               	bsf	1,0
  4528                           
  4529                           ;Switch_B1.c: 93: SwPointSelect(2);
  4530  088C  3002               	movlw	2
  4531  088D  3197  27C3         	fcall	_SwPointSelect
  4532                           
  4533                           ;Switch_B1.c: 94: Sw->Enable = command;
  4534  088F  0020               	movlb	0	; select bank0
  4535  0890  085B               	movf	_Sw,w
  4536  0891  0086               	movwf	6
  4537  0892  0187               	clrf	7
  4538  0893  0822               	movf	setSw_Enable@command,w
  4539  0894  1001               	bcf	1,0
  4540  0895  1D03               	skipz
  4541  0896  1401               	bsf	1,0
  4542  0897  0008               	return
  4543  0898                     __end_of_setSw_Enable:	
  4544                           
  4545                           	psect	text11
  4546  0DF2                     __ptext11:	
  4547 ;; *************** function _DimmerLights_Exceptions *****************
  4548 ;; Defined at:
  4549 ;;		line 513 in file "../src/Dimmer_B1.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  status          1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  status          1   13[BANK0 ] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;		None               void
  4556 ;; Registers used:
  4557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;Total ram usage:        1 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    8
  4570 ;; This function calls:
  4571 ;;		_getDimmerLights_StatusFlag
  4572 ;;		_setBuz
  4573 ;;		_setDimmerLights_ERROR
  4574 ;;		_setDimmerLights_TriggerERROR
  4575 ;; This function is called by:
  4576 ;;		_setOverTemp_Exceptions
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _DimmerLights_Exceptions
  4582  0DF2                     _DimmerLights_Exceptions:	
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _DimmerLights_Exceptions: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4586                           ;DimmerLights_Exceptions@status stored from wreg
  4587  0DF2  0020               	movlb	0	; select bank0
  4588  0DF3  00AD               	movwf	DimmerLights_Exceptions@status
  4589                           
  4590                           ;Dimmer_B1.c: 514: if (status == 1) {
  4591  0DF4  082D               	movf	DimmerLights_Exceptions@status,w
  4592  0DF5  3A01               	xorlw	1
  4593  0DF6  1D03               	skipz
  4594  0DF7  2E08               	goto	l3950
  4595                           
  4596                           ;Dimmer_B1.c: 515: if (getDimmerLights_StatusFlag() == 1) {
  4597  0DF8  3197  2742  318D   	fcall	_getDimmerLights_StatusFlag
  4598  0DFB  3A01               	xorlw	1
  4599  0DFC  1D03               	skipz
  4600  0DFD  2E20               	goto	l3956
  4601                           
  4602                           ;Dimmer_B1.c: 516: setBuz(10, 300);
  4603  0DFE  302C               	movlw	44
  4604  0DFF  0020               	movlb	0	; select bank0
  4605  0E00  00A9               	movwf	setBuz@time
  4606  0E01  3001               	movlw	1
  4607  0E02  00AA               	movwf	setBuz@time+1
  4608  0E03  300A               	movlw	10
  4609  0E04  3186  26B8  318D   	fcall	_setBuz
  4610  0E07  2E20               	goto	l3956
  4611  0E08                     l3950:	
  4612                           ;Dimmer_B1.c: 528: } else if (status == 2)
  4613                           
  4614                           ;Dimmer_B1.c: 523: setDimmerLights_ERROR(2);
  4615                           
  4616                           ;Dimmer_B1.c: 517: }
  4617                           ;Dimmer_B1.c: 520: setDimmerLights_ERROR(1);
  4618                           
  4619  0E08  0020               	movlb	0	; select bank0
  4620  0E09  082D               	movf	DimmerLights_Exceptions@status,w
  4621  0E0A  3A02               	xorlw	2
  4622  0E0B  1D03               	skipz
  4623  0E0C  2E1B               	goto	l3954
  4624                           
  4625                           ;Dimmer_B1.c: 529: {
  4626                           ;Dimmer_B1.c: 530: setBuz(5, 300);
  4627  0E0D  302C               	movlw	44
  4628  0E0E  00A9               	movwf	setBuz@time
  4629  0E0F  3001               	movlw	1
  4630  0E10  00AA               	movwf	setBuz@time+1
  4631  0E11  3005               	movlw	5
  4632  0E12  3186  26B8  318D   	fcall	_setBuz
  4633                           
  4634                           ;Dimmer_B1.c: 531: setDimmerLights_ERROR(Dimmer->Load);
  4635  0E15  0020               	movlb	0	; select bank0
  4636  0E16  0A58               	incf	_Dimmer,w
  4637  0E17  0086               	movwf	6
  4638  0E18  0187               	clrf	7
  4639  0E19  0801               	movf	1,w
  4640  0E1A  2E25               	goto	L1
  4641  0E1B                     l3954:	
  4642                           ;Dimmer_B1.c: 532: } else if (status == 3)
  4643                           
  4644  0E1B  0020               	movlb	0	; select bank0
  4645  0E1C  082D               	movf	DimmerLights_Exceptions@status,w
  4646  0E1D  3A03               	xorlw	3
  4647  0E1E  1D03               	skipz
  4648  0E1F  2E28               	goto	l536
  4649  0E20                     l3956:	
  4650                           
  4651                           ;Dimmer_B1.c: 533: {
  4652                           ;Dimmer_B1.c: 535: setDimmerLights_ERROR(1);
  4653  0E20  3001               	movlw	1
  4654  0E21  318A  2291  318D   	fcall	_setDimmerLights_ERROR
  4655                           
  4656                           ;Dimmer_B1.c: 538: setDimmerLights_ERROR(2);
  4657  0E24  3002               	movlw	2
  4658  0E25                     L1:	
  4659  0E25  318A  2291  318D   	fcall	_setDimmerLights_ERROR
  4660  0E28                     l536:	
  4661                           
  4662                           ;Dimmer_B1.c: 543: }
  4663                           ;Dimmer_B1.c: 546: setDimmerLights_TriggerERROR(1, 0);
  4664  0E28  0020               	movlb	0	; select bank0
  4665  0E29  01A2               	clrf	setDimmerLights_TriggerERROR@command
  4666  0E2A  3001               	movlw	1
  4667  0E2B  3189  2112  318D   	fcall	_setDimmerLights_TriggerERROR
  4668                           
  4669                           ;Dimmer_B1.c: 549: setDimmerLights_TriggerERROR(2, 0);
  4670  0E2E  0020               	movlb	0	; select bank0
  4671  0E2F  01A2               	clrf	setDimmerLights_TriggerERROR@command
  4672  0E30  3002               	movlw	2
  4673  0E31  3189  2112  318D   	fcall	_setDimmerLights_TriggerERROR
  4674                           
  4675                           ;Dimmer_B1.c: 555: if (myMain->SelfTest == 0) {
  4676  0E34  0020               	movlb	0	; select bank0
  4677  0E35  086C               	movf	_myMain,w
  4678  0E36  0086               	movwf	6
  4679  0E37  3001               	movlw	1	; select bank2/3
  4680  0E38  0087               	movwf	7
  4681  0E39  1B01               	btfsc	1,6
  4682  0E3A  0008               	return
  4683                           
  4684                           ;Dimmer_B1.c: 556: myMain->i = 0;
  4685  0E3B  086C               	movf	_myMain,w
  4686  0E3C  3E0E               	addlw	14
  4687  0E3D  0086               	movwf	6
  4688  0E3E  3001               	movlw	1	; select bank2/3
  4689  0E3F  0087               	movwf	7
  4690  0E40  1001               	bcf	1,0
  4691                           
  4692                           ;Dimmer_B1.c: 557: myMain->j = 0;
  4693  0E41  086C               	movf	_myMain,w
  4694  0E42  3E0E               	addlw	14
  4695  0E43  0086               	movwf	6
  4696  0E44  3001               	movlw	1	; select bank2/3
  4697  0E45  0087               	movwf	7
  4698  0E46  1081               	bcf	1,1
  4699                           
  4700                           ;Dimmer_B1.c: 558: myMain->k = 1;
  4701  0E47  086C               	movf	_myMain,w
  4702  0E48  3E0E               	addlw	14
  4703  0E49  0086               	movwf	6
  4704  0E4A  3001               	movlw	1	; select bank2/3
  4705  0E4B  0087               	movwf	7
  4706  0E4C  1501               	bsf	1,2
  4707                           
  4708                           ;Dimmer_B1.c: 559: myMain->Count2 = 0;
  4709  0E4D  086C               	movf	_myMain,w
  4710  0E4E  3E07               	addlw	7
  4711  0E4F  0086               	movwf	6
  4712  0E50  3001               	movlw	1	; select bank2/3
  4713  0E51  0087               	movwf	7
  4714  0E52  3000               	movlw	0
  4715  0E53  3FC0               	movwi [0]fsr1
  4716  0E54  3FC1               	movwi [1]fsr1
  4717  0E55  0008               	return
  4718  0E56                     __end_of_DimmerLights_Exceptions:	
  4719                           
  4720                           	psect	text12
  4721  0912                     __ptext12:	
  4722 ;; *************** function _setDimmerLights_TriggerERROR *****************
  4723 ;; Defined at:
  4724 ;;		line 582 in file "../src/Dimmer_B1.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  lights          1    wreg     unsigned char 
  4727 ;;  command         1    2[BANK0 ] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  lights          1    3[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;		None               void
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        2 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    6
  4746 ;; This function calls:
  4747 ;;		_DimmerLightsPointSelect
  4748 ;; This function is called by:
  4749 ;;		_DimmerLights_Exceptions
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _setDimmerLights_TriggerERROR
  4755  0912                     _setDimmerLights_TriggerERROR:	
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  4759                           ;setDimmerLights_TriggerERROR@lights stored from wreg
  4760  0912  0020               	movlb	0	; select bank0
  4761  0913  00A3               	movwf	setDimmerLights_TriggerERROR@lights
  4762                           
  4763                           ;Dimmer_B1.c: 584: DimmerLightsPointSelect(lights);
  4764  0914  0823               	movf	setDimmerLights_TriggerERROR@lights,w
  4765  0915  3197  2789         	fcall	_DimmerLightsPointSelect
  4766                           
  4767                           ;Dimmer_B1.c: 585: DimmerLights->Trigger = command;
  4768  0917  0020               	movlb	0	; select bank0
  4769  0918  0859               	movf	_DimmerLights,w
  4770  0919  3E08               	addlw	8
  4771  091A  0086               	movwf	6
  4772  091B  0187               	clrf	7
  4773  091C  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4774  091D  1101               	bcf	1,2
  4775  091E  1D03               	skipz
  4776  091F  1501               	bsf	1,2
  4777                           
  4778                           ;Dimmer_B1.c: 586: DimmerLights->Switch = command;
  4779  0920  0859               	movf	_DimmerLights,w
  4780  0921  3E08               	addlw	8
  4781  0922  0086               	movwf	6
  4782  0923  0187               	clrf	7
  4783  0924  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4784  0925  1081               	bcf	1,1
  4785  0926  1D03               	skipz
  4786  0927  1481               	bsf	1,1
  4787                           
  4788                           ;Dimmer_B1.c: 587: DimmerLights->TriggerAdj = command;
  4789  0928  0859               	movf	_DimmerLights,w
  4790  0929  3E08               	addlw	8
  4791  092A  0086               	movwf	6
  4792  092B  0187               	clrf	7
  4793  092C  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4794  092D  1201               	bcf	1,4
  4795  092E  1D03               	skipz
  4796  092F  1601               	bsf	1,4
  4797                           
  4798                           ;Dimmer_B1.c: 588: DimmerLights->AdjGo = command;
  4799  0930  0859               	movf	_DimmerLights,w
  4800  0931  3E08               	addlw	8
  4801  0932  0086               	movwf	6
  4802  0933  0187               	clrf	7
  4803  0934  0822               	movf	setDimmerLights_TriggerERROR@command,w
  4804  0935  1181               	bcf	1,3
  4805  0936  1D03               	skipz
  4806  0937  1581               	bsf	1,3
  4807  0938  0008               	return
  4808  0939                     __end_of_setDimmerLights_TriggerERROR:	
  4809                           
  4810                           	psect	text13
  4811  0A91                     __ptext13:	
  4812 ;; *************** function _setDimmerLights_ERROR *****************
  4813 ;; Defined at:
  4814 ;;		line 564 in file "../src/Dimmer_B1.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  lights          1    wreg     unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  lights          1    5[BANK0 ] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;		None               void
  4821 ;; Registers used:
  4822 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    7
  4835 ;; This function calls:
  4836 ;;		_DimmerLightsPointSelect
  4837 ;;		_setLED
  4838 ;;		_setSw_Status
  4839 ;; This function is called by:
  4840 ;;		_DimmerLights_Exceptions
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _setDimmerLights_ERROR
  4846  0A91                     _setDimmerLights_ERROR:	
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4850                           ;setDimmerLights_ERROR@lights stored from wreg
  4851  0A91  0020               	movlb	0	; select bank0
  4852  0A92  00A5               	movwf	setDimmerLights_ERROR@lights
  4853                           
  4854                           ;Dimmer_B1.c: 565: DimmerLightsPointSelect(lights);
  4855  0A93  0825               	movf	setDimmerLights_ERROR@lights,w
  4856  0A94  3197  2789  318A   	fcall	_DimmerLightsPointSelect
  4857                           
  4858                           ;Dimmer_B1.c: 566: if (DimmerLights->Status == 1) {
  4859  0A97  0020               	movlb	0	; select bank0
  4860  0A98  0859               	movf	_DimmerLights,w
  4861  0A99  0086               	movwf	6
  4862  0A9A  0187               	clrf	7
  4863  0A9B  1E81               	btfss	1,5
  4864  0A9C  0008               	return
  4865                           
  4866                           ;Dimmer_B1.c: 568: DimmerLights->Signal = 0;
  4867  0A9D  0859               	movf	_DimmerLights,w
  4868  0A9E  0086               	movwf	6
  4869  0A9F  0187               	clrf	7
  4870  0AA0  1081               	bcf	1,1
  4871                           
  4872                           ;Dimmer_B1.c: 569: DimmerLights->AdjFlag = 0;
  4873  0AA1  0859               	movf	_DimmerLights,w
  4874  0AA2  0086               	movwf	6
  4875  0AA3  0187               	clrf	7
  4876  0AA4  1181               	bcf	1,3
  4877                           
  4878                           ;Dimmer_B1.c: 570: DimmerLights->AdjStatus = 0;
  4879  0AA5  0859               	movf	_DimmerLights,w
  4880  0AA6  0086               	movwf	6
  4881  0AA7  0187               	clrf	7
  4882  0AA8  1201               	bcf	1,4
  4883                           
  4884                           ;Dimmer_B1.c: 571: DimmerLights->StatusFlag = 0;
  4885  0AA9  0859               	movf	_DimmerLights,w
  4886  0AAA  0086               	movwf	6
  4887  0AAB  0187               	clrf	7
  4888  0AAC  1301               	bcf	1,6
  4889                           
  4890                           ;Dimmer_B1.c: 572: DimmerLights->DimmingTimeValue = 7;
  4891  0AAD  3007               	movlw	7
  4892  0AAE  00A4               	movwf	??_setDimmerLights_ERROR
  4893  0AAF  0859               	movf	_DimmerLights,w
  4894  0AB0  3E02               	addlw	2
  4895  0AB1  0086               	movwf	6
  4896  0AB2  0187               	clrf	7
  4897  0AB3  0824               	movf	??_setDimmerLights_ERROR,w
  4898  0AB4  0081               	movwf	1
  4899                           
  4900                           ;Dimmer_B1.c: 573: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  4901  0AB5  0859               	movf	_DimmerLights,w
  4902  0AB6  3E06               	addlw	6
  4903  0AB7  0086               	movwf	6
  4904  0AB8  0187               	clrf	7
  4905  0AB9  0801               	movf	1,w
  4906  0ABA  00A4               	movwf	??_setDimmerLights_ERROR
  4907  0ABB  0859               	movf	_DimmerLights,w
  4908  0ABC  3E04               	addlw	4
  4909  0ABD  0086               	movwf	6
  4910  0ABE  0187               	clrf	7
  4911  0ABF  0824               	movf	??_setDimmerLights_ERROR,w
  4912  0AC0  0081               	movwf	1
  4913                           
  4914                           ;Dimmer_B1.c: 574: Dimmer->Detect = 1;
  4915  0AC1  0858               	movf	_Dimmer,w
  4916  0AC2  0086               	movwf	6
  4917  0AC3  0187               	clrf	7
  4918  0AC4  1401               	bsf	1,0
  4919                           
  4920                           ;Dimmer_B1.c: 575: ;;
  4921                           ;Dimmer_B1.c: 576: setLED(lights, 1);
  4922  0AC5  01A2               	clrf	setLED@command
  4923  0AC6  0AA2               	incf	setLED@command,f
  4924  0AC7  0825               	movf	setDimmerLights_ERROR@lights,w
  4925  0AC8  318D  2536  318A   	fcall	_setLED
  4926                           
  4927                           ;Dimmer_B1.c: 577: setSw_Status(lights, 0);
  4928  0ACB  0020               	movlb	0	; select bank0
  4929  0ACC  01A2               	clrf	setSw_Status@command
  4930  0ACD  0825               	movf	setDimmerLights_ERROR@lights,w
  4931  0ACE  3196  26D7         	fcall	_setSw_Status
  4932  0AD0  0008               	return
  4933  0AD1                     __end_of_setDimmerLights_ERROR:	
  4934                           ;Dimmer_B1.c: 578: ;;
  4935                           
  4936                           
  4937                           	psect	text14
  4938  15F1                     __ptext14:	
  4939 ;; *************** function _Temp_Initialization *****************
  4940 ;; Defined at:
  4941 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;		None               void
  4948 ;; Registers used:
  4949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    6
  4962 ;; This function calls:
  4963 ;;		_setTemp_Initialization
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _Temp_Initialization
  4971  15F1                     _Temp_Initialization:	
  4972                           
  4973                           ;OverTemperature_B1.c: 18: setTemp_Initialization();
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in _Temp_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4977  15F1  3196  2676         	fcall	_setTemp_Initialization
  4978  15F3  0008               	return
  4979  15F4                     __end_of_Temp_Initialization:	
  4980                           
  4981                           	psect	text15
  4982  1676                     __ptext15:	
  4983 ;; *************** function _setTemp_Initialization *****************
  4984 ;; Defined at:
  4985 ;;		line 51 in file "../src/OverTemperature_B1.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;		None               void
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        1 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    5
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_Temp_Initialization
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _setTemp_Initialization
  5015  1676                     _setTemp_Initialization:	
  5016                           
  5017                           ;OverTemperature_B1.c: 53: Temp=&Temp1;
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _setTemp_Initialization: [wregfsr1]
  5021  1676  3034               	movlw	_Temp1& (0+255)
  5022  1677  0020               	movlb	0	; select bank0
  5023  1678  00A0               	movwf	??_setTemp_Initialization
  5024  1679  0820               	movf	??_setTemp_Initialization,w
  5025  167A  00DC               	movwf	_Temp
  5026                           
  5027                           ;OverTemperature_B1.c: 54: Temp->Safe=1;
  5028  167B  085C               	movf	_Temp,w
  5029  167C  0086               	movwf	6
  5030  167D  3001               	movlw	1	; select bank2/3
  5031  167E  0087               	movwf	7
  5032  167F  1601               	bsf	1,4
  5033  1680  0008               	return
  5034  1681                     __end_of_setTemp_Initialization:	
  5035                           
  5036                           	psect	text16
  5037  163A                     __ptext16:	
  5038 ;; *************** function _Switch_Main *****************
  5039 ;; Defined at:
  5040 ;;		line 61 in file "../src/Switch_B1.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    9
  5061 ;; This function calls:
  5062 ;;		_setSw_Main
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function _Switch_Main
  5070  163A                     _Switch_Main:	
  5071                           
  5072                           ;Switch_B1.c: 63: setSw_Main(1);
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in _Switch_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5076  163A  3001               	movlw	1
  5077  163B  3181  21D5  3196   	fcall	_setSw_Main
  5078                           
  5079                           ;Switch_B1.c: 67: setSw_Main(2);
  5080  163E  3002               	movlw	2
  5081  163F  3181  21D5         	fcall	_setSw_Main
  5082  1641  0008               	return
  5083  1642                     __end_of_Switch_Main:	
  5084                           
  5085                           	psect	text17
  5086  01D5                     __ptext17:	
  5087 ;; *************** function _setSw_Main *****************
  5088 ;; Defined at:
  5089 ;;		line 111 in file "../src/Switch_B1.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  sw              1    wreg     unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  sw              1   19[BANK0 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;Total ram usage:        5 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    8
  5110 ;; This function calls:
  5111 ;;		_SwPointSelect
  5112 ;;		_Sw_DimmerAdjFunc
  5113 ;;		_Sw_DimmerOffFunc
  5114 ;;		_Sw_DimmerOnFunc
  5115 ;;		_setBuz
  5116 ;; This function is called by:
  5117 ;;		_Switch_Main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function _setSw_Main
  5123  01D5                     _setSw_Main:	
  5124                           
  5125                           ;incstack = 0
  5126                           ; Regs used in _setSw_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5127                           ;setSw_Main@sw stored from wreg
  5128  01D5  0020               	movlb	0	; select bank0
  5129  01D6  00B3               	movwf	setSw_Main@sw
  5130                           
  5131                           ;Switch_B1.c: 112: SwPointSelect(sw);
  5132  01D7  0833               	movf	setSw_Main@sw,w
  5133  01D8  3197  27C3  3181   	fcall	_SwPointSelect
  5134                           
  5135                           ;Switch_B1.c: 113: if (Sw->Enable == 1) {
  5136  01DB  0020               	movlb	0	; select bank0
  5137  01DC  085B               	movf	_Sw,w
  5138  01DD  0086               	movwf	6
  5139  01DE  0187               	clrf	7
  5140  01DF  1C01               	btfss	1,0
  5141  01E0  0008               	return
  5142                           
  5143                           ;Switch_B1.c: 125: if (sw == 1) {
  5144  01E1  0833               	movf	setSw_Main@sw,w
  5145  01E2  3A01               	xorlw	1
  5146  01E3  1D03               	skipz
  5147  01E4  29F0               	goto	l4698
  5148                           
  5149                           ;Switch_B1.c: 126: Sw->Touch = (RA6 == 1 || RA4 == 1) ? 1 : 0;
  5150  01E5  01B1               	clrf	_setSw_Main$4404
  5151  01E6  0AB1               	incf	_setSw_Main$4404,f
  5152  01E7  1F0C               	btfss	12,6	;volatile
  5153  01E8  1A0C               	btfsc	12,4	;volatile
  5154  01E9  29EB               	goto	l4696
  5155  01EA  01B1               	clrf	_setSw_Main$4404
  5156  01EB                     l4696:	
  5157  01EB  085B               	movf	_Sw,w
  5158  01EC  0086               	movwf	6
  5159  01ED  0187               	clrf	7
  5160  01EE  0831               	movf	_setSw_Main$4404,w
  5161  01EF  29FE               	goto	L2
  5162  01F0                     l4698:	
  5163                           ;Switch_B1.c: 127: } else if (sw == 2) {
  5164                           
  5165  01F0  0833               	movf	setSw_Main@sw,w
  5166  01F1  3A02               	xorlw	2
  5167  01F2  1D03               	skipz
  5168  01F3  2A01               	goto	l4708
  5169                           
  5170                           ;Switch_B1.c: 128: Sw->Touch = (RA0 == 1 || RB1 == 1) ? 1 : 0;
  5171  01F4  01B2               	clrf	_setSw_Main$4405
  5172  01F5  0AB2               	incf	_setSw_Main$4405,f
  5173  01F6  1C0C               	btfss	12,0	;volatile
  5174  01F7  188D               	btfsc	13,1	;volatile
  5175  01F8  29FA               	goto	l4706
  5176  01F9  01B2               	clrf	_setSw_Main$4405
  5177  01FA                     l4706:	
  5178  01FA  085B               	movf	_Sw,w
  5179  01FB  0086               	movwf	6
  5180  01FC  0187               	clrf	7
  5181  01FD  0832               	movf	_setSw_Main$4405,w
  5182  01FE                     L2:	
  5183  01FE  1081               	bcf	1,1
  5184  01FF  1D03               	skipz
  5185  0200  1481               	bsf	1,1
  5186  0201                     l4708:	
  5187                           
  5188                           ;Switch_B1.c: 129: }
  5189                           ;Switch_B1.c: 135: if (Sw->Touch == 1) {
  5190  0201  085B               	movf	_Sw,w
  5191  0202  0086               	movwf	6
  5192  0203  0187               	clrf	7
  5193  0204  1C81               	btfss	1,1
  5194  0205  2AB2               	goto	l4750
  5195                           
  5196                           ;Switch_B1.c: 136: if (Sw->Debounce == 0) {
  5197  0206  085B               	movf	_Sw,w
  5198  0207  0086               	movwf	6
  5199  0208  0187               	clrf	7
  5200  0209  1901               	btfsc	1,2
  5201  020A  2A28               	goto	l4722
  5202                           
  5203                           ;Switch_B1.c: 137: Sw->DebounceTime++;
  5204  020B  3001               	movlw	1
  5205  020C  00AF               	movwf	??_setSw_Main
  5206  020D  085B               	movf	_Sw,w
  5207  020E  3E02               	addlw	2
  5208  020F  0086               	movwf	6
  5209  0210  0187               	clrf	7
  5210  0211  082F               	movf	??_setSw_Main,w
  5211  0212  0781               	addwf	1,f
  5212                           
  5213                           ;Switch_B1.c: 138: if (Sw->DebounceTime >= 5) {
  5214  0213  085B               	movf	_Sw,w
  5215  0214  3E02               	addlw	2
  5216  0215  0086               	movwf	6
  5217  0216  0187               	clrf	7
  5218  0217  3005               	movlw	5
  5219  0218  0201               	subwf	1,w
  5220  0219  1C03               	skipc
  5221  021A  0008               	return
  5222                           
  5223                           ;Switch_B1.c: 139: Sw->DebounceTime = 0;
  5224  021B  085B               	movf	_Sw,w
  5225  021C  3E02               	addlw	2
  5226  021D  0086               	movwf	6
  5227  021E  0187               	clrf	7
  5228  021F  0181               	clrf	1
  5229                           
  5230                           ;Switch_B1.c: 140: Sw->Debounce = 1;
  5231  0220  085B               	movf	_Sw,w
  5232  0221  0086               	movwf	6
  5233  0222  0187               	clrf	7
  5234  0223  1501               	bsf	1,2
  5235                           
  5236                           ;Switch_B1.c: 143: Sw_DimmerOnFunc(sw);
  5237  0224  0833               	movf	setSw_Main@sw,w
  5238  0225  318B  23E7         	fcall	_Sw_DimmerOnFunc
  5239                           
  5240                           ;Switch_B1.c: 145: }
  5241                           ;Switch_B1.c: 146: } else {
  5242  0227  0008               	return
  5243  0228                     l4722:	
  5244                           
  5245                           ;Switch_B1.c: 147: if (Sw->Hold1 == 0) {
  5246  0228  0020               	movlb	0	; select bank0
  5247  0229  085B               	movf	_Sw,w
  5248  022A  0086               	movwf	6
  5249  022B  0187               	clrf	7
  5250  022C  1981               	btfsc	1,3
  5251  022D  2A51               	goto	l4732
  5252                           
  5253                           ;Switch_B1.c: 148: Sw->Hold1Time++;
  5254  022E  085B               	movf	_Sw,w
  5255  022F  3E03               	addlw	3
  5256  0230  0086               	movwf	6
  5257  0231  0187               	clrf	7
  5258  0232  3001               	movlw	1
  5259  0233  0781               	addwf	1,f
  5260  0234  3141               	addfsr 1,1
  5261  0235  1803               	skipnc
  5262  0236  0A81               	incf	1,f
  5263                           
  5264                           ;Switch_B1.c: 149: if (Sw->Hold1Time >= 150) {
  5265  0237  085B               	movf	_Sw,w
  5266  0238  3E03               	addlw	3
  5267  0239  0086               	movwf	6
  5268  023A  0187               	clrf	7
  5269  023B  3F40               	moviw [0]fsr1
  5270  023C  00AF               	movwf	??_setSw_Main
  5271  023D  3F41               	moviw [1]fsr1
  5272  023E  00B0               	movwf	??_setSw_Main+1
  5273  023F  3000               	movlw	0
  5274  0240  0230               	subwf	??_setSw_Main+1,w
  5275  0241  3096               	movlw	150
  5276  0242  1903               	skipnz
  5277  0243  022F               	subwf	??_setSw_Main,w
  5278  0244  1C03               	skipc
  5279  0245  0008               	return
  5280                           
  5281                           ;Switch_B1.c: 150: Sw->Hold1Time = 0;
  5282  0246  085B               	movf	_Sw,w
  5283  0247  3E03               	addlw	3
  5284  0248  0086               	movwf	6
  5285  0249  0187               	clrf	7
  5286  024A  3000               	movlw	0
  5287  024B  3FC0               	movwi [0]fsr1
  5288  024C  3FC1               	movwi [1]fsr1
  5289                           
  5290                           ;Switch_B1.c: 153: Sw_DimmerAdjFunc(sw);
  5291  024D  0833               	movf	setSw_Main@sw,w
  5292  024E  318A  22D1         	fcall	_Sw_DimmerAdjFunc
  5293                           
  5294                           ;Switch_B1.c: 156: }
  5295                           ;Switch_B1.c: 157: } else {
  5296  0250  0008               	return
  5297  0251                     l4732:	
  5298                           
  5299                           ;Switch_B1.c: 158: if (Sw->Hold2 == 0) {
  5300  0251  0020               	movlb	0	; select bank0
  5301  0252  085B               	movf	_Sw,w
  5302  0253  0086               	movwf	6
  5303  0254  0187               	clrf	7
  5304  0255  1A01               	btfsc	1,4
  5305  0256  2A88               	goto	l4742
  5306                           
  5307                           ;Switch_B1.c: 159: Sw->Hold2Time++;
  5308  0257  085B               	movf	_Sw,w
  5309  0258  3E05               	addlw	5
  5310  0259  0086               	movwf	6
  5311  025A  0187               	clrf	7
  5312  025B  3001               	movlw	1
  5313  025C  0781               	addwf	1,f
  5314  025D  3141               	addfsr 1,1
  5315  025E  1803               	skipnc
  5316  025F  0A81               	incf	1,f
  5317                           
  5318                           ;Switch_B1.c: 160: if (Sw->Hold2Time >= 150) {
  5319  0260  085B               	movf	_Sw,w
  5320  0261  3E05               	addlw	5
  5321  0262  0086               	movwf	6
  5322  0263  0187               	clrf	7
  5323  0264  3F40               	moviw [0]fsr1
  5324  0265  00AF               	movwf	??_setSw_Main
  5325  0266  3F41               	moviw [1]fsr1
  5326  0267  00B0               	movwf	??_setSw_Main+1
  5327  0268  3000               	movlw	0
  5328  0269  0230               	subwf	??_setSw_Main+1,w
  5329  026A  3096               	movlw	150
  5330  026B  1903               	skipnz
  5331  026C  022F               	subwf	??_setSw_Main,w
  5332  026D  1C03               	skipc
  5333  026E  0008               	return
  5334                           
  5335                           ;Switch_B1.c: 161: Sw->Hold2Time = 0;
  5336  026F  085B               	movf	_Sw,w
  5337  0270  3E05               	addlw	5
  5338  0271  0086               	movwf	6
  5339  0272  0187               	clrf	7
  5340  0273  3000               	movlw	0
  5341  0274  3FC0               	movwi [0]fsr1
  5342  0275  3FC1               	movwi [1]fsr1
  5343                           
  5344                           ;Switch_B1.c: 162: Sw->Hold2 = 1;
  5345  0276  085B               	movf	_Sw,w
  5346  0277  0086               	movwf	6
  5347  0278  0187               	clrf	7
  5348  0279  1601               	bsf	1,4
  5349                           
  5350                           ;Switch_B1.c: 167: if (myMain->First == 1) {
  5351  027A  086C               	movf	_myMain,w
  5352  027B  0086               	movwf	6
  5353  027C  3001               	movlw	1	; select bank2/3
  5354  027D  0087               	movwf	7
  5355  027E  1F81               	btfss	1,7
  5356  027F  0008               	return
  5357                           
  5358                           ;Switch_B1.c: 168: setBuz(2, 100);
  5359  0280  3064               	movlw	100
  5360  0281  00A9               	movwf	setBuz@time
  5361  0282  3000               	movlw	0
  5362  0283  00AA               	movwf	setBuz@time+1
  5363  0284  3002               	movlw	2
  5364  0285  3186  26B8         	fcall	_setBuz
  5365                           
  5366                           ;Switch_B1.c: 169: }
  5367                           ;Switch_B1.c: 171: }
  5368                           ;Switch_B1.c: 172: } else {
  5369  0287  0008               	return
  5370  0288                     l4742:	
  5371                           
  5372                           ;Switch_B1.c: 173: if (Sw->Hold3 == 0) {
  5373  0288  0020               	movlb	0	; select bank0
  5374  0289  085B               	movf	_Sw,w
  5375  028A  0086               	movwf	6
  5376  028B  0187               	clrf	7
  5377  028C  1A81               	btfsc	1,5
  5378  028D  0008               	return
  5379                           
  5380                           ;Switch_B1.c: 174: Sw->Hold3Time++;
  5381  028E  085B               	movf	_Sw,w
  5382  028F  3E07               	addlw	7
  5383  0290  0086               	movwf	6
  5384  0291  0187               	clrf	7
  5385  0292  3001               	movlw	1
  5386  0293  0781               	addwf	1,f
  5387  0294  3141               	addfsr 1,1
  5388  0295  1803               	skipnc
  5389  0296  0A81               	incf	1,f
  5390                           
  5391                           ;Switch_B1.c: 175: if (Sw->Hold3Time >= 300) {
  5392  0297  085B               	movf	_Sw,w
  5393  0298  3E07               	addlw	7
  5394  0299  0086               	movwf	6
  5395  029A  0187               	clrf	7
  5396  029B  3F40               	moviw [0]fsr1
  5397  029C  00AF               	movwf	??_setSw_Main
  5398  029D  3F41               	moviw [1]fsr1
  5399  029E  00B0               	movwf	??_setSw_Main+1
  5400  029F  3001               	movlw	1
  5401  02A0  0230               	subwf	??_setSw_Main+1,w
  5402  02A1  302C               	movlw	44
  5403  02A2  1903               	skipnz
  5404  02A3  022F               	subwf	??_setSw_Main,w
  5405  02A4  1C03               	skipc
  5406  02A5  0008               	return
  5407                           
  5408                           ;Switch_B1.c: 176: Sw->Hold3Time = 0;
  5409  02A6  085B               	movf	_Sw,w
  5410  02A7  3E07               	addlw	7
  5411  02A8  0086               	movwf	6
  5412  02A9  0187               	clrf	7
  5413  02AA  3000               	movlw	0
  5414  02AB  3FC0               	movwi [0]fsr1
  5415  02AC  3FC1               	movwi [1]fsr1
  5416                           
  5417                           ;Switch_B1.c: 177: Sw->Hold3 = 1;
  5418  02AD  085B               	movf	_Sw,w
  5419  02AE  0086               	movwf	6
  5420  02AF  0187               	clrf	7
  5421  02B0  1681               	bsf	1,5
  5422                           
  5423                           ;Switch_B1.c: 183: }
  5424                           ;Switch_B1.c: 184: }
  5425                           ;Switch_B1.c: 185: }
  5426                           ;Switch_B1.c: 186: }
  5427                           ;Switch_B1.c: 187: }
  5428                           ;Switch_B1.c: 188: } else {
  5429  02B1  0008               	return
  5430  02B2                     l4750:	
  5431                           
  5432                           ;Switch_B1.c: 189: if (Sw->Debounce == 1) {
  5433  02B2  085B               	movf	_Sw,w
  5434  02B3  0086               	movwf	6
  5435  02B4  0187               	clrf	7
  5436  02B5  1D01               	btfss	1,2
  5437  02B6  0008               	return
  5438                           
  5439                           ;Switch_B1.c: 190: Sw->DebounceTime++;
  5440  02B7  3001               	movlw	1
  5441  02B8  00AF               	movwf	??_setSw_Main
  5442  02B9  085B               	movf	_Sw,w
  5443  02BA  3E02               	addlw	2
  5444  02BB  0086               	movwf	6
  5445  02BC  0187               	clrf	7
  5446  02BD  082F               	movf	??_setSw_Main,w
  5447  02BE  0781               	addwf	1,f
  5448                           
  5449                           ;Switch_B1.c: 191: if (Sw->DebounceTime >= 5) {
  5450  02BF  085B               	movf	_Sw,w
  5451  02C0  3E02               	addlw	2
  5452  02C1  0086               	movwf	6
  5453  02C2  0187               	clrf	7
  5454  02C3  3005               	movlw	5
  5455  02C4  0201               	subwf	1,w
  5456  02C5  1C03               	skipc
  5457  02C6  0008               	return
  5458                           
  5459                           ;Switch_B1.c: 192: Sw->DebounceTime = 0;
  5460  02C7  085B               	movf	_Sw,w
  5461  02C8  3E02               	addlw	2
  5462  02C9  0086               	movwf	6
  5463  02CA  0187               	clrf	7
  5464  02CB  0181               	clrf	1
  5465                           
  5466                           ;Switch_B1.c: 193: Sw->Debounce = 0;
  5467  02CC  085B               	movf	_Sw,w
  5468  02CD  0086               	movwf	6
  5469  02CE  0187               	clrf	7
  5470  02CF  1101               	bcf	1,2
  5471                           
  5472                           ;Switch_B1.c: 194: Sw->Hold1Time = 0;
  5473  02D0  085B               	movf	_Sw,w
  5474  02D1  3E03               	addlw	3
  5475  02D2  0086               	movwf	6
  5476  02D3  0187               	clrf	7
  5477  02D4  3000               	movlw	0
  5478  02D5  3FC0               	movwi [0]fsr1
  5479  02D6  3FC1               	movwi [1]fsr1
  5480                           
  5481                           ;Switch_B1.c: 195: Sw->Hold1 = 0;
  5482  02D7  085B               	movf	_Sw,w
  5483  02D8  0086               	movwf	6
  5484  02D9  0187               	clrf	7
  5485  02DA  1181               	bcf	1,3
  5486                           
  5487                           ;Switch_B1.c: 196: Sw->Hold2Time = 0;
  5488  02DB  085B               	movf	_Sw,w
  5489  02DC  3E05               	addlw	5
  5490  02DD  0086               	movwf	6
  5491  02DE  0187               	clrf	7
  5492  02DF  3000               	movlw	0
  5493  02E0  3FC0               	movwi [0]fsr1
  5494  02E1  3FC1               	movwi [1]fsr1
  5495                           
  5496                           ;Switch_B1.c: 197: Sw->Hold2 = 0;
  5497  02E2  085B               	movf	_Sw,w
  5498  02E3  0086               	movwf	6
  5499  02E4  0187               	clrf	7
  5500  02E5  1201               	bcf	1,4
  5501                           
  5502                           ;Switch_B1.c: 198: Sw->Hold3Time = 0;
  5503  02E6  085B               	movf	_Sw,w
  5504  02E7  3E07               	addlw	7
  5505  02E8  0086               	movwf	6
  5506  02E9  0187               	clrf	7
  5507  02EA  3000               	movlw	0
  5508  02EB  3FC0               	movwi [0]fsr1
  5509  02EC  3FC1               	movwi [1]fsr1
  5510                           
  5511                           ;Switch_B1.c: 199: Sw->Hold3 = 0;
  5512  02ED  085B               	movf	_Sw,w
  5513  02EE  0086               	movwf	6
  5514  02EF  0187               	clrf	7
  5515  02F0  1281               	bcf	1,5
  5516                           
  5517                           ;Switch_B1.c: 201: Sw_DimmerOffFunc(sw);
  5518  02F1  0833               	movf	setSw_Main@sw,w
  5519  02F2  318B  239D         	fcall	_Sw_DimmerOffFunc
  5520  02F4  0008               	return
  5521  02F5                     __end_of_setSw_Main:	
  5522                           
  5523                           	psect	text18
  5524  0BE7                     __ptext18:	
  5525 ;; *************** function _Sw_DimmerOnFunc *****************
  5526 ;; Defined at:
  5527 ;;		line 213 in file "../src/Switch_B1.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  sw              1    wreg     unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  sw              1   14[BANK0 ] unsigned char 
  5532 ;;  Idle            1   13[BANK0 ] unsigned char 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;		None               void
  5535 ;; Registers used:
  5536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;Total ram usage:        2 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    7
  5549 ;; This function calls:
  5550 ;;		_setBuz
  5551 ;;		_setDimmerLights_Switch
  5552 ;;		_setDimmerLights_Trigger
  5553 ;; This function is called by:
  5554 ;;		_setSw_Main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _Sw_DimmerOnFunc
  5560  0BE7                     _Sw_DimmerOnFunc:	
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5564                           ;Sw_DimmerOnFunc@sw stored from wreg
  5565  0BE7  0020               	movlb	0	; select bank0
  5566  0BE8  00AE               	movwf	Sw_DimmerOnFunc@sw
  5567                           
  5568                           ;Switch_B1.c: 214: char Idle = 1;
  5569  0BE9  01AD               	clrf	Sw_DimmerOnFunc@Idle
  5570  0BEA  0AAD               	incf	Sw_DimmerOnFunc@Idle,f
  5571                           
  5572                           ;Switch_B1.c: 228: if (sw == 1) {
  5573  0BEB  082E               	movf	Sw_DimmerOnFunc@sw,w
  5574  0BEC  3A01               	xorlw	1
  5575  0BED  1D03               	skipz
  5576  0BEE  2BF9               	goto	l4146
  5577                           
  5578                           ;Switch_B1.c: 229: Idle = (DimmerLights2.AdjGo == 1) ? 0 : 1;
  5579  0BEF  1003               	clrc
  5580  0BF0  0021               	movlb	1	; select bank1
  5581  0BF1  1DB7               	btfss	(_DimmerLights2^(0+128)+8),3
  5582  0BF2  1403               	setc
  5583  0BF3  3000               	movlw	0
  5584  0BF4  1803               	btfsc	3,0
  5585  0BF5  3001               	movlw	1
  5586  0BF6  0020               	movlb	0	; select bank0
  5587  0BF7  00AD               	movwf	Sw_DimmerOnFunc@Idle
  5588                           
  5589                           ;Switch_B1.c: 230: } else if (sw == 2) {
  5590  0BF8  2C06               	goto	l4150
  5591  0BF9                     l4146:	
  5592  0BF9  082E               	movf	Sw_DimmerOnFunc@sw,w
  5593  0BFA  3A02               	xorlw	2
  5594  0BFB  1D03               	skipz
  5595  0BFC  2C06               	goto	l4150
  5596                           
  5597                           ;Switch_B1.c: 231: Idle = (DimmerLights1.AdjGo == 1) ? 0 : 1;
  5598  0BFD  1003               	clrc
  5599  0BFE  0021               	movlb	1	; select bank1
  5600  0BFF  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  5601  0C00  1403               	setc
  5602  0C01  3000               	movlw	0
  5603  0C02  1803               	btfsc	3,0
  5604  0C03  3001               	movlw	1
  5605  0C04  0020               	movlb	0	; select bank0
  5606  0C05  00AD               	movwf	Sw_DimmerOnFunc@Idle
  5607  0C06                     l4150:	
  5608                           
  5609                           ;Switch_B1.c: 232: }
  5610                           ;Switch_B1.c: 235: if (Idle == 1) {
  5611  0C06  082D               	movf	Sw_DimmerOnFunc@Idle,w
  5612  0C07  3A01               	xorlw	1
  5613  0C08  1D03               	skipz
  5614  0C09  0008               	return
  5615                           
  5616                           ;Switch_B1.c: 236: Sw->Flag = 1;
  5617  0C0A  085B               	movf	_Sw,w
  5618  0C0B  0086               	movwf	6
  5619  0C0C  0187               	clrf	7
  5620  0C0D  1781               	bsf	1,7
  5621                           
  5622                           ;Switch_B1.c: 237: setBuz(1, 100);
  5623  0C0E  3064               	movlw	100
  5624  0C0F  00A9               	movwf	setBuz@time
  5625  0C10  3000               	movlw	0
  5626  0C11  00AA               	movwf	setBuz@time+1
  5627  0C12  3001               	movlw	1
  5628  0C13  3186  26B8  318B   	fcall	_setBuz
  5629                           
  5630                           ;Switch_B1.c: 238: if (Sw->Status == 0) {
  5631  0C16  0020               	movlb	0	; select bank0
  5632  0C17  085B               	movf	_Sw,w
  5633  0C18  0086               	movwf	6
  5634  0C19  0187               	clrf	7
  5635  0C1A  1B01               	btfsc	1,6
  5636  0C1B  2C2D               	goto	l4164
  5637                           
  5638                           ;Switch_B1.c: 239: Sw->Status = 1;
  5639  0C1C  085B               	movf	_Sw,w
  5640  0C1D  0086               	movwf	6
  5641  0C1E  0187               	clrf	7
  5642  0C1F  1701               	bsf	1,6
  5643                           
  5644                           ;Switch_B1.c: 240: ;;
  5645                           ;Switch_B1.c: 242: setDimmerLights_Trigger(sw, 1);
  5646  0C20  01A2               	clrf	setDimmerLights_Trigger@command
  5647  0C21  0AA2               	incf	setDimmerLights_Trigger@command,f
  5648  0C22  082E               	movf	Sw_DimmerOnFunc@sw,w
  5649  0C23  3196  26F4  318B   	fcall	_setDimmerLights_Trigger
  5650                           
  5651                           ;Switch_B1.c: 243: setDimmerLights_Switch(sw, 1);
  5652  0C26  0020               	movlb	0	; select bank0
  5653  0C27  01A2               	clrf	setDimmerLights_Switch@command
  5654  0C28  0AA2               	incf	setDimmerLights_Switch@command,f
  5655  0C29  082E               	movf	Sw_DimmerOnFunc@sw,w
  5656  0C2A  3196  26E5         	fcall	_setDimmerLights_Switch
  5657                           
  5658                           ;Switch_B1.c: 245: ;;
  5659                           ;Switch_B1.c: 246: ;;
  5660                           ;Switch_B1.c: 248: } else {
  5661  0C2C  0008               	return
  5662  0C2D                     l4164:	
  5663                           
  5664                           ;Switch_B1.c: 249: Sw->Status = 0;
  5665  0C2D  0020               	movlb	0	; select bank0
  5666  0C2E  085B               	movf	_Sw,w
  5667  0C2F  0086               	movwf	6
  5668  0C30  0187               	clrf	7
  5669  0C31  1301               	bcf	1,6
  5670                           
  5671                           ;Switch_B1.c: 250: ;;
  5672  0C32  0008               	return
  5673  0C33                     __end_of_Sw_DimmerOnFunc:	
  5674                           
  5675                           	psect	text19
  5676  0B9D                     __ptext19:	
  5677 ;; *************** function _Sw_DimmerOffFunc *****************
  5678 ;; Defined at:
  5679 ;;		line 256 in file "../src/Switch_B1.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  sw              1    wreg     unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  sw              1   10[BANK0 ] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;Total ram usage:        3 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    7
  5700 ;; This function calls:
  5701 ;;		_setDelayOff_GO
  5702 ;;		_setDimmerLights_AdjGo
  5703 ;;		_setDimmerLights_Switch
  5704 ;;		_setDimmerLights_Trigger
  5705 ;;		_setDimmerLights_TriggerAdj
  5706 ;; This function is called by:
  5707 ;;		_setSw_Main
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function _Sw_DimmerOffFunc
  5713  0B9D                     _Sw_DimmerOffFunc:	
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _Sw_DimmerOffFunc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5717                           ;Sw_DimmerOffFunc@sw stored from wreg
  5718  0B9D  0020               	movlb	0	; select bank0
  5719  0B9E  00AA               	movwf	Sw_DimmerOffFunc@sw
  5720                           
  5721                           ;Switch_B1.c: 257: if (Sw->Flag == 1) {
  5722  0B9F  085B               	movf	_Sw,w
  5723  0BA0  0086               	movwf	6
  5724  0BA1  0187               	clrf	7
  5725  0BA2  1F81               	btfss	1,7
  5726  0BA3  0008               	return
  5727                           
  5728                           ;Switch_B1.c: 258: Sw->Flag = 0;
  5729  0BA4  085B               	movf	_Sw,w
  5730  0BA5  0086               	movwf	6
  5731  0BA6  0187               	clrf	7
  5732  0BA7  1381               	bcf	1,7
  5733                           
  5734                           ;Switch_B1.c: 259: if (Sw->Status == 1) {
  5735  0BA8  085B               	movf	_Sw,w
  5736  0BA9  0086               	movwf	6
  5737  0BAA  0187               	clrf	7
  5738  0BAB  1F01               	btfss	1,6
  5739  0BAC  2BD4               	goto	l4200
  5740                           
  5741                           ;Switch_B1.c: 260: if (Sw->Adj == 1) {
  5742  0BAD  0A5B               	incf	_Sw,w
  5743  0BAE  0086               	movwf	6
  5744  0BAF  0187               	clrf	7
  5745  0BB0  1C01               	btfss	1,0
  5746  0BB1  0008               	return
  5747                           
  5748                           ;Switch_B1.c: 261: Sw->Adj = 0;
  5749  0BB2  0A5B               	incf	_Sw,w
  5750  0BB3  0086               	movwf	6
  5751  0BB4  0187               	clrf	7
  5752  0BB5  1001               	bcf	1,0
  5753                           
  5754                           ;Switch_B1.c: 262: setDimmerLights_TriggerAdj(sw, 1);
  5755  0BB6  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5756  0BB7  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5757  0BB8  082A               	movf	Sw_DimmerOffFunc@sw,w
  5758  0BB9  3197  2712  318B   	fcall	_setDimmerLights_TriggerAdj
  5759                           
  5760                           ;Switch_B1.c: 263: setDimmerLights_AdjGo(sw, 0);
  5761  0BBC  0020               	movlb	0	; select bank0
  5762  0BBD  01A2               	clrf	setDimmerLights_AdjGo@command
  5763  0BBE  082A               	movf	Sw_DimmerOffFunc@sw,w
  5764  0BBF  3197  2703         	fcall	_setDimmerLights_AdjGo
  5765                           
  5766                           ;Switch_B1.c: 265: product->Data[17]=product->Data[26 + sw];
  5767  0BC1  0020               	movlb	0	; select bank0
  5768  0BC2  082A               	movf	Sw_DimmerOffFunc@sw,w
  5769  0BC3  3E1A               	addlw	26
  5770  0BC4  076D               	addwf	_product,w
  5771  0BC5  00A8               	movwf	??_Sw_DimmerOffFunc
  5772  0BC6  0828               	movf	??_Sw_DimmerOffFunc,w
  5773  0BC7  0086               	movwf	6
  5774  0BC8  3001               	movlw	1	; select bank2/3
  5775  0BC9  0087               	movwf	7
  5776  0BCA  0801               	movf	1,w
  5777  0BCB  00A9               	movwf	??_Sw_DimmerOffFunc+1
  5778  0BCC  086D               	movf	_product,w
  5779  0BCD  3E11               	addlw	17
  5780  0BCE  0086               	movwf	6
  5781  0BCF  3001               	movlw	1	; select bank2/3
  5782  0BD0  0087               	movwf	7
  5783  0BD1  0829               	movf	??_Sw_DimmerOffFunc+1,w
  5784  0BD2  0081               	movwf	1
  5785                           
  5786                           ;Switch_B1.c: 269: }
  5787                           ;Switch_B1.c: 270: } else {
  5788                           
  5789                           ;Switch_B1.c: 266: ;;
  5790                           ;Switch_B1.c: 267: ;;
  5791  0BD3  0008               	return
  5792  0BD4                     l4200:	
  5793                           
  5794                           ;Switch_B1.c: 271: setDimmerLights_Trigger(sw, 1);
  5795  0BD4  01A2               	clrf	setDimmerLights_Trigger@command
  5796  0BD5  0AA2               	incf	setDimmerLights_Trigger@command,f
  5797  0BD6  082A               	movf	Sw_DimmerOffFunc@sw,w
  5798  0BD7  3196  26F4  318B   	fcall	_setDimmerLights_Trigger
  5799                           
  5800                           ;Switch_B1.c: 272: setDimmerLights_Switch(sw, 0);
  5801  0BDA  0020               	movlb	0	; select bank0
  5802  0BDB  01A2               	clrf	setDimmerLights_Switch@command
  5803  0BDC  082A               	movf	Sw_DimmerOffFunc@sw,w
  5804  0BDD  3196  26E5  318B   	fcall	_setDimmerLights_Switch
  5805                           
  5806                           ;Switch_B1.c: 274: setDelayOff_GO(sw, 0, 0);
  5807  0BE0  0020               	movlb	0	; select bank0
  5808  0BE1  01A3               	clrf	setDelayOff_GO@command
  5809  0BE2  01A4               	clrf	setDelayOff_GO@value
  5810  0BE3  082A               	movf	Sw_DimmerOffFunc@sw,w
  5811  0BE4  318C  24DD         	fcall	_setDelayOff_GO
  5812                           
  5813                           ;Switch_B1.c: 275: ;;
  5814                           ;Switch_B1.c: 276: ;;
  5815  0BE6  0008               	return
  5816  0BE7                     __end_of_Sw_DimmerOffFunc:	
  5817                           
  5818                           	psect	text20
  5819  0CDD                     __ptext20:	
  5820 ;; *************** function _setDelayOff_GO *****************
  5821 ;; Defined at:
  5822 ;;		line 85 in file "../src/DelayOff_B1.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  sw              1    wreg     unsigned char 
  5825 ;;  command         1    3[BANK0 ] unsigned char 
  5826 ;;  value           1    4[BANK0 ] unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  sw              1    7[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;Total ram usage:        5 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    6
  5845 ;; This function calls:
  5846 ;;		_DelayOffPointSelect
  5847 ;;		_DelayTimejudge
  5848 ;; This function is called by:
  5849 ;;		_Sw_DimmerOffFunc
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _setDelayOff_GO
  5855  0CDD                     _setDelayOff_GO:	
  5856                           
  5857                           ;incstack = 0
  5858                           ; Regs used in _setDelayOff_GO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5859                           ;setDelayOff_GO@sw stored from wreg
  5860  0CDD  0020               	movlb	0	; select bank0
  5861  0CDE  00A7               	movwf	setDelayOff_GO@sw
  5862                           
  5863                           ;DelayOff_B1.c: 86: DelayOffPointSelect(sw);
  5864  0CDF  0827               	movf	setDelayOff_GO@sw,w
  5865  0CE0  3197  27AF  318C   	fcall	_DelayOffPointSelect
  5866                           
  5867                           ;DelayOff_B1.c: 87: if (DelayOff->Enable) {
  5868  0CE3  0020               	movlb	0	; select bank0
  5869  0CE4  0857               	movf	_DelayOff,w
  5870  0CE5  0086               	movwf	6
  5871  0CE6  0187               	clrf	7
  5872  0CE7  1C01               	btfss	1,0
  5873  0CE8  0008               	return
  5874                           
  5875                           ;DelayOff_B1.c: 88: DelayOff->GO = command;
  5876  0CE9  0857               	movf	_DelayOff,w
  5877  0CEA  0086               	movwf	6
  5878  0CEB  0187               	clrf	7
  5879  0CEC  0823               	movf	setDelayOff_GO@command,w
  5880  0CED  1081               	bcf	1,1
  5881  0CEE  1D03               	skipz
  5882  0CEF  1481               	bsf	1,1
  5883                           
  5884                           ;DelayOff_B1.c: 89: if (command == 1) {
  5885  0CF0  0823               	movf	setDelayOff_GO@command,w
  5886  0CF1  3A01               	xorlw	1
  5887  0CF2  1D03               	skipz
  5888  0CF3  2D1D               	goto	l3924
  5889                           
  5890                           ;DelayOff_B1.c: 90: DelayOff->Value = DelayTimejudge(value);
  5891  0CF4  0824               	movf	setDelayOff_GO@value,w
  5892  0CF5  3189  2161  318C   	fcall	_DelayTimejudge
  5893  0CF8  0020               	movlb	0	; select bank0
  5894  0CF9  00A5               	movwf	??_setDelayOff_GO
  5895  0CFA  0A57               	incf	_DelayOff,w
  5896  0CFB  0086               	movwf	6
  5897  0CFC  0187               	clrf	7
  5898  0CFD  0825               	movf	??_setDelayOff_GO,w
  5899  0CFE  0081               	movwf	1
  5900                           
  5901                           ;DelayOff_B1.c: 91: if (((value % 16) == 5 || !(value % 16)) && value <= 0x25) {
  5902  0CFF  300F               	movlw	15
  5903  0D00  0524               	andwf	setDelayOff_GO@value,w
  5904  0D01  00A5               	movwf	??_setDelayOff_GO
  5905  0D02  0825               	movf	??_setDelayOff_GO,w
  5906  0D03  3A05               	xorlw	5
  5907  0D04  1903               	skipnz
  5908  0D05  2D0A               	goto	l3918
  5909  0D06  0824               	movf	setDelayOff_GO@value,w
  5910  0D07  390F               	andlw	15
  5911  0D08  1D03               	btfss	3,2
  5912  0D09  2D10               	goto	l3922
  5913  0D0A                     l3918:	
  5914  0D0A  3026               	movlw	38
  5915  0D0B  0224               	subwf	setDelayOff_GO@value,w
  5916  0D0C  1803               	skipnc
  5917  0D0D  2D10               	goto	l3922
  5918                           
  5919                           ;DelayOff_B1.c: 92: product->Data[26 + sw]=value;
  5920  0D0E  0824               	movf	setDelayOff_GO@value,w
  5921  0D0F  2D11               	goto	L3
  5922  0D10                     l3922:	
  5923                           ;DelayOff_B1.c: 93: } else {
  5924                           
  5925                           
  5926                           ;DelayOff_B1.c: 94: product->Data[26 + sw]=0x05;
  5927  0D10  3005               	movlw	5
  5928  0D11                     L3:	
  5929  0D11  00A5               	movwf	??_setDelayOff_GO
  5930  0D12  0827               	movf	setDelayOff_GO@sw,w
  5931  0D13  3E1A               	addlw	26
  5932  0D14  076D               	addwf	_product,w
  5933  0D15  00A6               	movwf	??_setDelayOff_GO+1
  5934  0D16  0826               	movf	??_setDelayOff_GO+1,w
  5935  0D17  0086               	movwf	6
  5936  0D18  3001               	movlw	1	; select bank2/3
  5937  0D19  0087               	movwf	7
  5938  0D1A  0825               	movf	??_setDelayOff_GO,w
  5939  0D1B  0081               	movwf	1
  5940                           
  5941                           ;DelayOff_B1.c: 95: }
  5942                           ;DelayOff_B1.c: 96: } else if (command == 0) {
  5943  0D1C  2D29               	goto	l3928
  5944  0D1D                     l3924:	
  5945  0D1D  08A3               	movf	setDelayOff_GO@command,f
  5946  0D1E  1D03               	skipz
  5947  0D1F  2D29               	goto	l3928
  5948                           
  5949                           ;DelayOff_B1.c: 97: product->Data[sw + 26]=0;
  5950  0D20  0827               	movf	setDelayOff_GO@sw,w
  5951  0D21  3E1A               	addlw	26
  5952  0D22  076D               	addwf	_product,w
  5953  0D23  00A5               	movwf	??_setDelayOff_GO
  5954  0D24  0825               	movf	??_setDelayOff_GO,w
  5955  0D25  0086               	movwf	6
  5956  0D26  3001               	movlw	1	; select bank2/3
  5957  0D27  0087               	movwf	7
  5958  0D28  0181               	clrf	1
  5959  0D29                     l3928:	
  5960                           
  5961                           ;DelayOff_B1.c: 98: }
  5962                           ;DelayOff_B1.c: 99: DelayOff->SecondTime = 0;
  5963  0D29  0857               	movf	_DelayOff,w
  5964  0D2A  3E02               	addlw	2
  5965  0D2B  0086               	movwf	6
  5966  0D2C  0187               	clrf	7
  5967  0D2D  3000               	movlw	0
  5968  0D2E  3FC0               	movwi [0]fsr1
  5969  0D2F  3FC1               	movwi [1]fsr1
  5970                           
  5971                           ;DelayOff_B1.c: 100: DelayOff->MinuteTime = 0;
  5972  0D30  0857               	movf	_DelayOff,w
  5973  0D31  3E04               	addlw	4
  5974  0D32  0086               	movwf	6
  5975  0D33  0187               	clrf	7
  5976  0D34  0181               	clrf	1
  5977  0D35  0008               	return
  5978  0D36                     __end_of_setDelayOff_GO:	
  5979                           
  5980                           	psect	text21
  5981  0961                     __ptext21:	
  5982 ;; *************** function _DelayTimejudge *****************
  5983 ;; Defined at:
  5984 ;;		line 105 in file "../src/DelayOff_B1.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  value           1    wreg     unsigned char 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  value           1    1[BANK0 ] unsigned char 
  5989 ;;  i               1    2[BANK0 ] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      unsigned char 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;Total ram usage:        3 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    5
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_setDelayOff_GO
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _DelayTimejudge
  6015  0961                     _DelayTimejudge:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _DelayTimejudge: [wreg-fsr0h+status,2+status,0]
  6019                           ;DelayTimejudge@value stored from wreg
  6020  0961  0020               	movlb	0	; select bank0
  6021  0962  00A1               	movwf	DelayTimejudge@value
  6022                           
  6023                           ;DelayOff_B1.c: 106: char i = 5;
  6024  0963  3005               	movlw	5
  6025  0964  00A0               	movwf	??_DelayTimejudge
  6026  0965  0820               	movf	??_DelayTimejudge,w
  6027  0966  00A2               	movwf	DelayTimejudge@i
  6028                           
  6029                           ;DelayOff_B1.c: 107: switch (value) {
  6030  0967  2977               	goto	l3854
  6031  0968                     l3840:	
  6032                           ;DelayOff_B1.c: 108: case 0x05:
  6033                           
  6034                           
  6035                           ;DelayOff_B1.c: 109: i = 5;
  6036  0968  3005               	movlw	5
  6037  0969  2973               	goto	L8
  6038  096A                     l3842:	
  6039                           ;DelayOff_B1.c: 111: case 0x10:
  6040                           
  6041                           ;DelayOff_B1.c: 110: break;
  6042                           
  6043                           
  6044                           ;DelayOff_B1.c: 112: i = 10;
  6045  096A  300A               	movlw	10
  6046  096B  2973               	goto	L8
  6047  096C                     l3844:	
  6048                           ;DelayOff_B1.c: 114: case 0x15:
  6049                           
  6050                           ;DelayOff_B1.c: 113: break;
  6051                           
  6052                           
  6053                           ;DelayOff_B1.c: 115: i = 15;
  6054  096C  300F               	movlw	15
  6055  096D  2973               	goto	L8
  6056  096E                     l3846:	
  6057                           ;DelayOff_B1.c: 117: case 0x20:
  6058                           
  6059                           ;DelayOff_B1.c: 116: break;
  6060                           
  6061                           
  6062                           ;DelayOff_B1.c: 118: i = 20;
  6063  096E  3014               	movlw	20
  6064  096F  2973               	goto	L8
  6065  0970                     l3848:	
  6066                           ;DelayOff_B1.c: 120: case 0x25:
  6067                           
  6068                           ;DelayOff_B1.c: 119: break;
  6069                           
  6070                           
  6071                           ;DelayOff_B1.c: 121: i = 25;
  6072  0970  3019               	movlw	25
  6073  0971  2973               	goto	L8
  6074  0972                     l3850:	
  6075                           ;DelayOff_B1.c: 123: case 0x30:
  6076                           
  6077                           ;DelayOff_B1.c: 122: break;
  6078                           
  6079                           
  6080                           ;DelayOff_B1.c: 124: i = 30;
  6081  0972  301E               	movlw	30
  6082  0973                     L8:	
  6083  0973  00A0               	movwf	??_DelayTimejudge
  6084  0974  0820               	movf	??_DelayTimejudge,w
  6085  0975  00A2               	movwf	DelayTimejudge@i
  6086                           
  6087                           ;DelayOff_B1.c: 126: }
  6088                           
  6089                           ;DelayOff_B1.c: 125: break;
  6090  0976  298B               	goto	l3856
  6091  0977                     l3854:	
  6092  0977  0821               	movf	DelayTimejudge@value,w
  6093                           
  6094                           ; Switch size 1, requested type "space"
  6095                           ; Number of cases is 6, Range of values is 5 to 48
  6096                           ; switch strategies available:
  6097                           ; Name         Instructions Cycles
  6098                           ; simple_byte           19    10 (average)
  6099                           ; direct_byte           97     9 (fixed)
  6100                           ; jumptable            263     9 (fixed)
  6101                           ;	Chosen strategy is simple_byte
  6102  0978  3A05               	xorlw	5	; case 5
  6103  0979  1903               	skipnz
  6104  097A  2968               	goto	l3840
  6105  097B  3A15               	xorlw	21	; case 16
  6106  097C  1903               	skipnz
  6107  097D  296A               	goto	l3842
  6108  097E  3A05               	xorlw	5	; case 21
  6109  097F  1903               	skipnz
  6110  0980  296C               	goto	l3844
  6111  0981  3A35               	xorlw	53	; case 32
  6112  0982  1903               	skipnz
  6113  0983  296E               	goto	l3846
  6114  0984  3A05               	xorlw	5	; case 37
  6115  0985  1903               	skipnz
  6116  0986  2970               	goto	l3848
  6117  0987  3A15               	xorlw	21	; case 48
  6118  0988  1903               	skipnz
  6119  0989  2972               	goto	l3850
  6120  098A  298B               	goto	l3856
  6121  098B                     l3856:	
  6122                           
  6123                           ;DelayOff_B1.c: 127: return i;
  6124  098B  0822               	movf	DelayTimejudge@i,w
  6125  098C  0008               	return
  6126  098D                     __end_of_DelayTimejudge:	
  6127                           
  6128                           	psect	text22
  6129  0AD1                     __ptext22:	
  6130 ;; *************** function _Sw_DimmerAdjFunc *****************
  6131 ;; Defined at:
  6132 ;;		line 283 in file "../src/Switch_B1.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  sw              1    wreg     unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  sw              1    5[BANK0 ] unsigned char 
  6137 ;;  Idle            1    4[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;		None               void
  6140 ;; Registers used:
  6141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:        2 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    7
  6154 ;; This function calls:
  6155 ;;		_setDimmerLights_AdjGo
  6156 ;;		_setDimmerLights_TriggerAdj
  6157 ;; This function is called by:
  6158 ;;		_setSw_Main
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _Sw_DimmerAdjFunc
  6164  0AD1                     _Sw_DimmerAdjFunc:	
  6165                           
  6166                           ;incstack = 0
  6167                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6168                           ;Sw_DimmerAdjFunc@sw stored from wreg
  6169  0AD1  0020               	movlb	0	; select bank0
  6170  0AD2  00A5               	movwf	Sw_DimmerAdjFunc@sw
  6171                           
  6172                           ;Switch_B1.c: 284: char Idle = 1;
  6173  0AD3  01A4               	clrf	Sw_DimmerAdjFunc@Idle
  6174  0AD4  0AA4               	incf	Sw_DimmerAdjFunc@Idle,f
  6175                           
  6176                           ;Switch_B1.c: 297: if (sw == 1) {
  6177  0AD5  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6178  0AD6  3A01               	xorlw	1
  6179  0AD7  1D03               	skipz
  6180  0AD8  2AE3               	goto	l4172
  6181                           
  6182                           ;Switch_B1.c: 298: Idle = (DimmerLights2.AdjGo == 1) ? 0 : 1;
  6183  0AD9  1003               	clrc
  6184  0ADA  0021               	movlb	1	; select bank1
  6185  0ADB  1DB7               	btfss	(_DimmerLights2^(0+128)+8),3
  6186  0ADC  1403               	setc
  6187  0ADD  3000               	movlw	0
  6188  0ADE  1803               	btfsc	3,0
  6189  0ADF  3001               	movlw	1
  6190  0AE0  0020               	movlb	0	; select bank0
  6191  0AE1  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6192                           
  6193                           ;Switch_B1.c: 299: } else if (sw == 2) {
  6194  0AE2  2AF0               	goto	l4176
  6195  0AE3                     l4172:	
  6196  0AE3  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6197  0AE4  3A02               	xorlw	2
  6198  0AE5  1D03               	skipz
  6199  0AE6  2AF0               	goto	l4176
  6200                           
  6201                           ;Switch_B1.c: 300: Idle = (DimmerLights1.AdjGo == 1) ? 0 : 1;
  6202  0AE7  1003               	clrc
  6203  0AE8  0021               	movlb	1	; select bank1
  6204  0AE9  1DA8               	btfss	(_DimmerLights1^(0+128)+8),3
  6205  0AEA  1403               	setc
  6206  0AEB  3000               	movlw	0
  6207  0AEC  1803               	btfsc	3,0
  6208  0AED  3001               	movlw	1
  6209  0AEE  0020               	movlb	0	; select bank0
  6210  0AEF  00A4               	movwf	Sw_DimmerAdjFunc@Idle
  6211  0AF0                     l4176:	
  6212                           
  6213                           ;Switch_B1.c: 301: }
  6214                           ;Switch_B1.c: 304: if (Idle == 1) {
  6215  0AF0  0824               	movf	Sw_DimmerAdjFunc@Idle,w
  6216  0AF1  3A01               	xorlw	1
  6217  0AF2  1D03               	skipz
  6218  0AF3  0008               	return
  6219                           
  6220                           ;Switch_B1.c: 305: if (Sw->Flag == 1) {
  6221  0AF4  085B               	movf	_Sw,w
  6222  0AF5  0086               	movwf	6
  6223  0AF6  0187               	clrf	7
  6224  0AF7  1F81               	btfss	1,7
  6225  0AF8  0008               	return
  6226                           
  6227                           ;Switch_B1.c: 306: Sw->Hold1 = 1;
  6228  0AF9  085B               	movf	_Sw,w
  6229  0AFA  0086               	movwf	6
  6230  0AFB  0187               	clrf	7
  6231  0AFC  1581               	bsf	1,3
  6232                           
  6233                           ;Switch_B1.c: 307: Sw->Adj = 1;
  6234  0AFD  0A5B               	incf	_Sw,w
  6235  0AFE  0086               	movwf	6
  6236  0AFF  0187               	clrf	7
  6237  0B00  1401               	bsf	1,0
  6238                           
  6239                           ;Switch_B1.c: 308: Sw->Status = 1;
  6240  0B01  085B               	movf	_Sw,w
  6241  0B02  0086               	movwf	6
  6242  0B03  0187               	clrf	7
  6243  0B04  1701               	bsf	1,6
  6244                           
  6245                           ;Switch_B1.c: 309: ;;
  6246                           ;Switch_B1.c: 311: setDimmerLights_TriggerAdj(sw, 1);
  6247  0B05  01A2               	clrf	setDimmerLights_TriggerAdj@command
  6248  0B06  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  6249  0B07  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6250  0B08  3197  2712  318A   	fcall	_setDimmerLights_TriggerAdj
  6251                           
  6252                           ;Switch_B1.c: 312: setDimmerLights_AdjGo(sw, 1);
  6253  0B0B  0020               	movlb	0	; select bank0
  6254  0B0C  01A2               	clrf	setDimmerLights_AdjGo@command
  6255  0B0D  0AA2               	incf	setDimmerLights_AdjGo@command,f
  6256  0B0E  0825               	movf	Sw_DimmerAdjFunc@sw,w
  6257  0B0F  3197  2703         	fcall	_setDimmerLights_AdjGo
  6258  0B11  0008               	return
  6259  0B12                     __end_of_Sw_DimmerAdjFunc:	
  6260                           
  6261                           	psect	text23
  6262  1712                     __ptext23:	
  6263 ;; *************** function _setDimmerLights_TriggerAdj *****************
  6264 ;; Defined at:
  6265 ;;		line 711 in file "../src/Dimmer_B1.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  lights          1    wreg     unsigned char 
  6268 ;;  command         1    2[BANK0 ] unsigned char 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  lights          1    3[BANK0 ] unsigned char 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6280 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    6
  6287 ;; This function calls:
  6288 ;;		_DimmerLightsPointSelect
  6289 ;; This function is called by:
  6290 ;;		_Sw_DimmerOffFunc
  6291 ;;		_Sw_DimmerAdjFunc
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _setDimmerLights_TriggerAdj
  6297  1712                     _setDimmerLights_TriggerAdj:	
  6298                           
  6299                           ;incstack = 0
  6300                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6301                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  6302  1712  0020               	movlb	0	; select bank0
  6303  1713  00A3               	movwf	setDimmerLights_TriggerAdj@lights
  6304                           
  6305                           ;Dimmer_B1.c: 713: DimmerLightsPointSelect(lights);
  6306  1714  0823               	movf	setDimmerLights_TriggerAdj@lights,w
  6307  1715  3197  2789         	fcall	_DimmerLightsPointSelect
  6308                           
  6309                           ;Dimmer_B1.c: 714: DimmerLights->TriggerAdj = command;
  6310  1717  0020               	movlb	0	; select bank0
  6311  1718  0859               	movf	_DimmerLights,w
  6312  1719  3E08               	addlw	8
  6313  171A  0086               	movwf	6
  6314  171B  0187               	clrf	7
  6315  171C  0822               	movf	setDimmerLights_TriggerAdj@command,w
  6316  171D  1201               	bcf	1,4
  6317  171E  1D03               	skipz
  6318  171F  1601               	bsf	1,4
  6319  1720  0008               	return
  6320  1721                     __end_of_setDimmerLights_TriggerAdj:	
  6321                           
  6322                           	psect	text24
  6323  1703                     __ptext24:	
  6324 ;; *************** function _setDimmerLights_AdjGo *****************
  6325 ;; Defined at:
  6326 ;;		line 699 in file "../src/Dimmer_B1.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  lights          1    wreg     unsigned char 
  6329 ;;  command         1    2[BANK0 ] unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  lights          1    3[BANK0 ] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;		None               void
  6334 ;; Registers used:
  6335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6341 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;Total ram usage:        2 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    6
  6348 ;; This function calls:
  6349 ;;		_DimmerLightsPointSelect
  6350 ;; This function is called by:
  6351 ;;		_Sw_DimmerOffFunc
  6352 ;;		_Sw_DimmerAdjFunc
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _setDimmerLights_AdjGo
  6358  1703                     _setDimmerLights_AdjGo:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6362                           ;setDimmerLights_AdjGo@lights stored from wreg
  6363  1703  0020               	movlb	0	; select bank0
  6364  1704  00A3               	movwf	setDimmerLights_AdjGo@lights
  6365                           
  6366                           ;Dimmer_B1.c: 701: DimmerLightsPointSelect(lights);
  6367  1705  0823               	movf	setDimmerLights_AdjGo@lights,w
  6368  1706  3197  2789         	fcall	_DimmerLightsPointSelect
  6369                           
  6370                           ;Dimmer_B1.c: 702: DimmerLights->AdjGo = command;
  6371  1708  0020               	movlb	0	; select bank0
  6372  1709  0859               	movf	_DimmerLights,w
  6373  170A  3E08               	addlw	8
  6374  170B  0086               	movwf	6
  6375  170C  0187               	clrf	7
  6376  170D  0822               	movf	setDimmerLights_AdjGo@command,w
  6377  170E  1181               	bcf	1,3
  6378  170F  1D03               	skipz
  6379  1710  1581               	bsf	1,3
  6380  1711  0008               	return
  6381  1712                     __end_of_setDimmerLights_AdjGo:	
  6382                           
  6383                           	psect	text25
  6384  16CA                     __ptext25:	
  6385 ;; *************** function _Switch_Initialization *****************
  6386 ;; Defined at:
  6387 ;;		line 37 in file "../src/Switch_B1.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;		None               void
  6394 ;; Registers used:
  6395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    8
  6408 ;; This function calls:
  6409 ;;		_TouchPower
  6410 ;;		_setSw_Initialization
  6411 ;; This function is called by:
  6412 ;;		_main
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           
  6417                           ;psect for function _Switch_Initialization
  6418  16CA                     _Switch_Initialization:	
  6419                           
  6420                           ;Switch_B1.c: 38: TouchPower();
  6421                           
  6422                           ;incstack = 0
  6423                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6424  16CA  3195  25F7  3196   	fcall	_TouchPower
  6425                           
  6426                           ;Switch_B1.c: 40: WPUB1 = 0;
  6427  16CD  0024               	movlb	4	; select bank4
  6428  16CE  108D               	bcf	13,1	;volatile
  6429                           
  6430                           ;Switch_B1.c: 49: setSw_Initialization(1);
  6431  16CF  3001               	movlw	1
  6432  16D0  3196  2632  3196   	fcall	_setSw_Initialization
  6433                           
  6434                           ;Switch_B1.c: 52: setSw_Initialization(2);
  6435  16D3  3002               	movlw	2
  6436  16D4  3196  2632         	fcall	_setSw_Initialization
  6437  16D6  0008               	return
  6438  16D7                     __end_of_Switch_Initialization:	
  6439                           
  6440                           	psect	text26
  6441  1632                     __ptext26:	
  6442 ;; *************** function _setSw_Initialization *****************
  6443 ;; Defined at:
  6444 ;;		line 77 in file "../src/Switch_B1.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  sw              1    wreg     unsigned char 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  sw              1    4[BANK0 ] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;		None               void
  6451 ;; Registers used:
  6452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;Total ram usage:        1 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    7
  6465 ;; This function calls:
  6466 ;;		_setLED
  6467 ;; This function is called by:
  6468 ;;		_Switch_Initialization
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           
  6473                           ;psect for function _setSw_Initialization
  6474  1632                     _setSw_Initialization:	
  6475                           
  6476                           ;incstack = 0
  6477                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6478                           ;setSw_Initialization@sw stored from wreg
  6479  1632  0020               	movlb	0	; select bank0
  6480  1633  00A4               	movwf	setSw_Initialization@sw
  6481                           
  6482                           ;Switch_B1.c: 78: setLED(sw, 1);
  6483  1634  01A2               	clrf	setLED@command
  6484  1635  0AA2               	incf	setLED@command,f
  6485  1636  0824               	movf	setSw_Initialization@sw,w
  6486  1637  318D  2536         	fcall	_setLED
  6487  1639  0008               	return
  6488  163A                     __end_of_setSw_Initialization:	
  6489                           
  6490                           	psect	text27
  6491  15F7                     __ptext27:	
  6492 ;; *************** function _TouchPower *****************
  6493 ;; Defined at:
  6494 ;;		line 10 in file "../src/Switch_B1.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;		None               void
  6501 ;; Registers used:
  6502 ;;		None
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;Total ram usage:        0 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    5
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_Switch_Initialization
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function _TouchPower
  6524  15F7                     _TouchPower:	
  6525  15F7                     l1726:	
  6526                           ;Switch_B1.c: 11: while (RC5 == 0)
  6527                           
  6528                           ;incstack = 0
  6529                           ; Regs used in _TouchPower: []
  6530                           
  6531  15F7  0020               	movlb	0	; select bank0
  6532  15F8  1A8E               	btfsc	14,5	;volatile
  6533  15F9  0008               	return
  6534                           
  6535                           ;Switch_B1.c: 12: RC5 = 1;
  6536  15FA  168E               	bsf	14,5	;volatile
  6537  15FB  2DF7               	goto	l1726
  6538  15FC                     __end_of_TouchPower:	
  6539                           
  6540                           	psect	text28
  6541  081A                     __ptext28:	
  6542 ;; *************** function _Mcu_Initialization *****************
  6543 ;; Defined at:
  6544 ;;		line 30 in file "../src/MCU_B1.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;		None               void
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, pclath, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        1 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    6
  6565 ;; This function calls:
  6566 ;;		_ADC_Set
  6567 ;;		_Fosc_Set
  6568 ;;		_INT_Set
  6569 ;;		_IOC_Set
  6570 ;;		_IO_Set
  6571 ;;		_TMR0_Set
  6572 ;; This function is called by:
  6573 ;;		_main
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function _Mcu_Initialization
  6579  081A                     _Mcu_Initialization:	
  6580                           
  6581                           ;MCU_B1.c: 32: Fosc_Set();
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6585  081A  3188  2000  3188   	fcall	_Fosc_Set
  6586                           
  6587                           ;MCU_B1.c: 34: IO_Set();
  6588  081D  3188  2031  3188   	fcall	_IO_Set
  6589                           
  6590                           ;MCU_B1.c: 36: TMR0_Set();
  6591  0820  3196  26BD  3188   	fcall	_TMR0_Set
  6592                           
  6593                           ;MCU_B1.c: 38: ;;
  6594                           ;MCU_B1.c: 40: ADC_Set();
  6595  0823  3196  261B  3188   	fcall	_ADC_Set
  6596                           
  6597                           ;MCU_B1.c: 44: INT_Set();
  6598  0826  3196  2602  3188   	fcall	_INT_Set
  6599                           
  6600                           ;MCU_B1.c: 46: IOC_Set();
  6601  0829  3196  26B0         	fcall	_IOC_Set
  6602                           
  6603                           ;MCU_B1.c: 48: ;;
  6604                           ;MCU_B1.c: 50: ;;
  6605                           ;MCU_B1.c: 52: Memory=&VarMemory;
  6606  082B  30A0               	movlw	_VarMemory& (0+255)
  6607  082C  0020               	movlb	0	; select bank0
  6608  082D  00A1               	movwf	??_Mcu_Initialization
  6609  082E  0821               	movf	??_Mcu_Initialization,w
  6610  082F  00EE               	movwf	_Memory
  6611  0830  0008               	return
  6612  0831                     __end_of_Mcu_Initialization:	
  6613                           
  6614                           	psect	text29
  6615  16BD                     __ptext29:	
  6616 ;; *************** function _TMR0_Set *****************
  6617 ;; Defined at:
  6618 ;;		line 128 in file "../src/MCU_B1.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;		None               void
  6625 ;; Registers used:
  6626 ;;		wreg, status,2
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;Total ram usage:        1 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    5
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_Mcu_Initialization
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _TMR0_Set
  6648  16BD                     _TMR0_Set:	
  6649                           
  6650                           ;MCU_B1.c: 129: Timer0 = &VarTimer0;
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _TMR0_Set: [wreg+status,2]
  6654  16BD  30DC               	movlw	_VarTimer0& (0+255)
  6655  16BE  0020               	movlb	0	; select bank0
  6656  16BF  00A0               	movwf	??_TMR0_Set
  6657  16C0  0820               	movf	??_TMR0_Set,w
  6658  16C1  00FC               	movwf	_Timer0
  6659                           
  6660                           ;MCU_B1.c: 130: OPTION_REG = 0x00;
  6661  16C2  0021               	movlb	1	; select bank1
  6662  16C3  0195               	clrf	21	;volatile
  6663                           
  6664                           ;MCU_B1.c: 131: TMR0 = (256-190);
  6665  16C4  3042               	movlw	66
  6666  16C5  0020               	movlb	0	; select bank0
  6667  16C6  0095               	movwf	21	;volatile
  6668                           
  6669                           ;MCU_B1.c: 132: TMR0IE = 1;
  6670  16C7  168B               	bsf	11,5	;volatile
  6671                           
  6672                           ;MCU_B1.c: 133: GIE = 1;
  6673  16C8  178B               	bsf	11,7	;volatile
  6674  16C9  0008               	return
  6675  16CA                     __end_of_TMR0_Set:	
  6676                           
  6677                           	psect	text30
  6678  0831                     __ptext30:	
  6679 ;; *************** function _IO_Set *****************
  6680 ;; Defined at:
  6681 ;;		line 62 in file "../src/MCU_B1.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;		None               void
  6688 ;; Registers used:
  6689 ;;		wreg, status,2
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    5
  6702 ;; This function calls:
  6703 ;;		Nothing
  6704 ;; This function is called by:
  6705 ;;		_Mcu_Initialization
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           
  6710                           ;psect for function _IO_Set
  6711  0831                     _IO_Set:	
  6712                           
  6713                           ;MCU_B1.c: 90: TRISA = 0b01110111;;
  6714                           
  6715                           ;incstack = 0
  6716                           ; Regs used in _IO_Set: [wreg+status,2]
  6717  0831  3077               	movlw	119
  6718  0832  0021               	movlb	1	; select bank1
  6719  0833  008C               	movwf	12	;volatile
  6720                           
  6721                           ;MCU_B1.c: 91: TRISB = 0b00000111;;
  6722  0834  3007               	movlw	7
  6723  0835  008D               	movwf	13	;volatile
  6724                           
  6725                           ;MCU_B1.c: 92: TRISC = 0b00001100;;
  6726  0836  300C               	movlw	12
  6727  0837  008E               	movwf	14	;volatile
  6728                           
  6729                           ;MCU_B1.c: 93: LATA = 0b00000000;;
  6730  0838  0022               	movlb	2	; select bank2
  6731  0839  018C               	clrf	12	;volatile
  6732                           
  6733                           ;MCU_B1.c: 94: LATB = 0b00000010;;
  6734  083A  3002               	movlw	2
  6735  083B  008D               	movwf	13	;volatile
  6736                           
  6737                           ;MCU_B1.c: 95: LATC = 0b00000000;;
  6738  083C  018E               	clrf	14	;volatile
  6739                           
  6740                           ;MCU_B1.c: 96: ANSELA = 0b00100010;;
  6741  083D  3022               	movlw	34
  6742  083E  0023               	movlb	3	; select bank3
  6743  083F  008C               	movwf	12	;volatile
  6744                           
  6745                           ;MCU_B1.c: 97: ANSELB = 0b00000000;;
  6746  0840  018D               	clrf	13	;volatile
  6747                           
  6748                           ;MCU_B1.c: 98: ANSELC = 0b00000000;;
  6749  0841  018E               	clrf	14	;volatile
  6750                           
  6751                           ;MCU_B1.c: 99: PORTA = 0b01110111;;
  6752  0842  3077               	movlw	119
  6753  0843  0020               	movlb	0	; select bank0
  6754  0844  008C               	movwf	12	;volatile
  6755                           
  6756                           ;MCU_B1.c: 100: PORTB = 0b00000111;;
  6757  0845  3007               	movlw	7
  6758  0846  008D               	movwf	13	;volatile
  6759                           
  6760                           ;MCU_B1.c: 101: PORTC = 0b00001100;;
  6761  0847  300C               	movlw	12
  6762  0848  008E               	movwf	14	;volatile
  6763  0849  0008               	return
  6764  084A                     __end_of_IO_Set:	
  6765                           
  6766                           	psect	text31
  6767  16B0                     __ptext31:	
  6768 ;; *************** function _IOC_Set *****************
  6769 ;; Defined at:
  6770 ;;		line 269 in file "../src/MCU_B1.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;		None               void
  6777 ;; Registers used:
  6778 ;;		wreg, status,2
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    5
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_Mcu_Initialization
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           
  6799                           ;psect for function _IOC_Set
  6800  16B0                     _IOC_Set:	
  6801                           
  6802                           ;MCU_B1.c: 270: WPUB2 = 0;
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _IOC_Set: [wreg+status,2]
  6806  16B0  0024               	movlb	4	; select bank4
  6807  16B1  110D               	bcf	13,2	;volatile
  6808                           
  6809                           ;MCU_B1.c: 272: IOCBP = 0b00000100;
  6810  16B2  3004               	movlw	4
  6811  16B3  0027               	movlb	7	; select bank7
  6812  16B4  0094               	movwf	20	;volatile
  6813                           
  6814                           ;MCU_B1.c: 273: IOCBN = 0b00000100;
  6815  16B5  3004               	movlw	4
  6816  16B6  0095               	movwf	21	;volatile
  6817                           
  6818                           ;MCU_B1.c: 288: IOCBF = 0b00000000;
  6819  16B7  0196               	clrf	22	;volatile
  6820                           
  6821                           ;MCU_B1.c: 290: IOCIE = 1;
  6822  16B8  158B               	bsf	11,3	;volatile
  6823                           
  6824                           ;MCU_B1.c: 291: IOCIF = 0;
  6825  16B9  100B               	bcf	11,0	;volatile
  6826                           
  6827                           ;MCU_B1.c: 292: PEIE = 1;
  6828  16BA  170B               	bsf	11,6	;volatile
  6829                           
  6830                           ;MCU_B1.c: 293: GIE = 1;
  6831  16BB  178B               	bsf	11,7	;volatile
  6832  16BC  0008               	return
  6833  16BD                     __end_of_IOC_Set:	
  6834                           
  6835                           	psect	text32
  6836  1602                     __ptext32:	
  6837 ;; *************** function _INT_Set *****************
  6838 ;; Defined at:
  6839 ;;		line 242 in file "../src/MCU_B1.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;		None               void
  6846 ;; Registers used:
  6847 ;;		None
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    5
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_Mcu_Initialization
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _INT_Set
  6869  1602                     _INT_Set:	
  6870                           
  6871                           ;MCU_B1.c: 243: WPUB0 = 0;
  6872                           
  6873                           ;incstack = 0
  6874                           ; Regs used in _INT_Set: []
  6875  1602  0024               	movlb	4	; select bank4
  6876  1603  100D               	bcf	13,0	;volatile
  6877                           
  6878                           ;MCU_B1.c: 244: INTE = 0;
  6879  1604  120B               	bcf	11,4	;volatile
  6880                           
  6881                           ;MCU_B1.c: 245: PEIE = 1;
  6882  1605  170B               	bsf	11,6	;volatile
  6883                           
  6884                           ;MCU_B1.c: 246: GIE = 1;
  6885  1606  178B               	bsf	11,7	;volatile
  6886  1607  0008               	return
  6887  1608                     __end_of_INT_Set:	
  6888                           
  6889                           	psect	text33
  6890  0800                     __ptext33:	
  6891 ;; *************** function _Fosc_Set *****************
  6892 ;; Defined at:
  6893 ;;		line 58 in file "../src/MCU_B1.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;		None               void
  6900 ;; Registers used:
  6901 ;;		wreg
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    5
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_Mcu_Initialization
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function _Fosc_Set
  6923  0800                     _Fosc_Set:	
  6924                           
  6925                           ;MCU_B1.c: 59: OSCCON = 0x78;
  6926                           
  6927                           ;incstack = 0
  6928                           ; Regs used in _Fosc_Set: [wreg]
  6929  0800  3078               	movlw	120
  6930  0801  0021               	movlb	1	; select bank1
  6931  0802  0099               	movwf	25	;volatile
  6932  0803  0008               	return
  6933  0804                     __end_of_Fosc_Set:	
  6934                           
  6935                           	psect	text34
  6936  161B                     __ptext34:	
  6937 ;; *************** function _ADC_Set *****************
  6938 ;; Defined at:
  6939 ;;		line 315 in file "../src/MCU_B1.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    5
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_Mcu_Initialization
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function _ADC_Set
  6969  161B                     _ADC_Set:	
  6970                           
  6971                           ;MCU_B1.c: 316: ADCON1 = 0xf2;
  6972                           
  6973                           ;incstack = 0
  6974                           ; Regs used in _ADC_Set: [wreg]
  6975  161B  30F2               	movlw	242
  6976  161C  0021               	movlb	1	; select bank1
  6977  161D  009E               	movwf	30	;volatile
  6978                           
  6979                           ;MCU_B1.c: 317: FVRCON = 0xc0;
  6980  161E  30C0               	movlw	192
  6981  161F  0022               	movlb	2	; select bank2
  6982  1620  0097               	movwf	23	;volatile
  6983  1621  0008               	return
  6984  1622                     __end_of_ADC_Set:	
  6985                           
  6986                           	psect	text35
  6987  16A4                     __ptext35:	
  6988 ;; *************** function _LED_Main *****************
  6989 ;; Defined at:
  6990 ;;		line 51 in file "../src/LED_B1.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;		None               void
  6997 ;; Registers used:
  6998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    7
  7011 ;; This function calls:
  7012 ;;		_setLED_Main
  7013 ;; This function is called by:
  7014 ;;		_main
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _LED_Main
  7020  16A4                     _LED_Main:	
  7021                           
  7022                           ;LED_B1.c: 54: setLED_Main(1);
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7026  16A4  3001               	movlw	1
  7027  16A5  318A  2254  3196   	fcall	_setLED_Main
  7028                           
  7029                           ;LED_B1.c: 57: setLED_Main(2);
  7030  16A8  3002               	movlw	2
  7031  16A9  318A  2254  3196   	fcall	_setLED_Main
  7032                           
  7033                           ;LED_B1.c: 63: setLED_Main(99);
  7034  16AC  3063               	movlw	99
  7035  16AD  318A  2254         	fcall	_setLED_Main
  7036  16AF  0008               	return
  7037  16B0                     __end_of_LED_Main:	
  7038                           
  7039                           	psect	text36
  7040  0A54                     __ptext36:	
  7041 ;; *************** function _setLED_Main *****************
  7042 ;; Defined at:
  7043 ;;		line 215 in file "../src/LED_B1.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  led             1    wreg     unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  led             1    4[BANK0 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;Total ram usage:        3 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    6
  7064 ;; This function calls:
  7065 ;;		_LedPointSelect
  7066 ;; This function is called by:
  7067 ;;		_LED_Main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           
  7072                           ;psect for function _setLED_Main
  7073  0A54                     _setLED_Main:	
  7074                           
  7075                           ;incstack = 0
  7076                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7077                           ;setLED_Main@led stored from wreg
  7078  0A54  0020               	movlb	0	; select bank0
  7079  0A55  00A4               	movwf	setLED_Main@led
  7080                           
  7081                           ;LED_B1.c: 217: LedPointSelect(led);
  7082  0A56  0824               	movf	setLED_Main@led,w
  7083  0A57  3188  20B3  318A   	fcall	_LedPointSelect
  7084                           
  7085                           ;LED_B1.c: 218: if(LED->GO)
  7086  0A5A  0020               	movlb	0	; select bank0
  7087  0A5B  085A               	movf	_LED,w
  7088  0A5C  0086               	movwf	6
  7089  0A5D  0187               	clrf	7
  7090  0A5E  1C81               	btfss	1,1
  7091  0A5F  0008               	return
  7092                           
  7093                           ;LED_B1.c: 219: {
  7094                           ;LED_B1.c: 220: LED->Time++;
  7095  0A60  0A5A               	incf	_LED,w
  7096  0A61  0086               	movwf	6
  7097  0A62  0187               	clrf	7
  7098  0A63  3001               	movlw	1
  7099  0A64  0781               	addwf	1,f
  7100  0A65  3141               	addfsr 1,1
  7101  0A66  1803               	skipnc
  7102  0A67  0A81               	incf	1,f
  7103                           
  7104                           ;LED_B1.c: 221: if(LED->Time >= 500/10)
  7105  0A68  0A5A               	incf	_LED,w
  7106  0A69  0086               	movwf	6
  7107  0A6A  0187               	clrf	7
  7108  0A6B  3F40               	moviw [0]fsr1
  7109  0A6C  00A2               	movwf	??_setLED_Main
  7110  0A6D  3F41               	moviw [1]fsr1
  7111  0A6E  00A3               	movwf	??_setLED_Main+1
  7112  0A6F  3000               	movlw	0
  7113  0A70  0223               	subwf	??_setLED_Main+1,w
  7114  0A71  3032               	movlw	50
  7115  0A72  1903               	skipnz
  7116  0A73  0222               	subwf	??_setLED_Main,w
  7117  0A74  1C03               	skipc
  7118  0A75  0008               	return
  7119                           
  7120                           ;LED_B1.c: 222: {
  7121                           ;LED_B1.c: 223: LED->Time=0;
  7122  0A76  0A5A               	incf	_LED,w
  7123  0A77  0086               	movwf	6
  7124  0A78  0187               	clrf	7
  7125  0A79  3000               	movlw	0
  7126  0A7A  3FC0               	movwi [0]fsr1
  7127  0A7B  3FC1               	movwi [1]fsr1
  7128                           
  7129                           ;LED_B1.c: 225: if(led == 1)
  7130  0A7C  0824               	movf	setLED_Main@led,w
  7131  0A7D  3A01               	xorlw	1
  7132  0A7E  1D03               	skipz
  7133  0A7F  2A83               	goto	l4524
  7134                           
  7135                           ;LED_B1.c: 226: {
  7136                           ;LED_B1.c: 227: RA3=~RA3;
  7137  0A80  3008               	movlw	8
  7138  0A81  068C               	xorwf	12,f
  7139                           
  7140                           ;LED_B1.c: 228: }
  7141  0A82  0008               	return
  7142  0A83                     l4524:	
  7143                           
  7144                           ;LED_B1.c: 231: else if(led == 2)
  7145  0A83  0824               	movf	setLED_Main@led,w
  7146  0A84  3A02               	xorlw	2
  7147  0A85  1D03               	skipz
  7148  0A86  2A8A               	goto	l4528
  7149                           
  7150                           ;LED_B1.c: 232: {
  7151                           ;LED_B1.c: 233: RC7=~RC7;
  7152  0A87  3080               	movlw	128
  7153  0A88  068E               	xorwf	14,f
  7154                           
  7155                           ;LED_B1.c: 234: }
  7156  0A89  0008               	return
  7157  0A8A                     l4528:	
  7158                           
  7159                           ;LED_B1.c: 243: else if(led == 99)
  7160  0A8A  0824               	movf	setLED_Main@led,w
  7161  0A8B  3A63               	xorlw	99
  7162  0A8C  1D03               	skipz
  7163  0A8D  0008               	return
  7164                           
  7165                           ;LED_B1.c: 244: {
  7166                           ;LED_B1.c: 245: RB5=~RB5;
  7167  0A8E  3020               	movlw	32
  7168  0A8F  068D               	xorwf	13,f
  7169  0A90  0008               	return
  7170  0A91                     __end_of_setLED_Main:	
  7171                           
  7172                           	psect	text37
  7173  1698                     __ptext37:	
  7174 ;; *************** function _LED_Initialization *****************
  7175 ;; Defined at:
  7176 ;;		line 35 in file "../src/LED_B1.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;		None
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;		None               void
  7183 ;; Registers used:
  7184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;Total ram usage:        0 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    8
  7197 ;; This function calls:
  7198 ;;		_setLED_Initialization
  7199 ;; This function is called by:
  7200 ;;		_main
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function _LED_Initialization
  7206  1698                     _LED_Initialization:	
  7207                           
  7208                           ;LED_B1.c: 38: setLED_Initialization(1);
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7212  1698  3001               	movlw	1
  7213  1699  3197  2721  3196   	fcall	_setLED_Initialization
  7214                           
  7215                           ;LED_B1.c: 41: setLED_Initialization(2);
  7216  169C  3002               	movlw	2
  7217  169D  3197  2721  3196   	fcall	_setLED_Initialization
  7218                           
  7219                           ;LED_B1.c: 47: setLED_Initialization(99);
  7220  16A0  3063               	movlw	99
  7221  16A1  3197  2721         	fcall	_setLED_Initialization
  7222  16A3  0008               	return
  7223  16A4                     __end_of_LED_Initialization:	
  7224                           
  7225                           	psect	text38
  7226  1721                     __ptext38:	
  7227 ;; *************** function _setLED_Initialization *****************
  7228 ;; Defined at:
  7229 ;;		line 67 in file "../src/LED_B1.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  led             1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  led             1    4[BANK0 ] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;		None               void
  7236 ;; Registers used:
  7237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;Total ram usage:        1 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    7
  7250 ;; This function calls:
  7251 ;;		_LedPointSelect
  7252 ;;		_setLED
  7253 ;; This function is called by:
  7254 ;;		_LED_Initialization
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function _setLED_Initialization
  7260  1721                     _setLED_Initialization:	
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7264                           ;setLED_Initialization@led stored from wreg
  7265  1721  0020               	movlb	0	; select bank0
  7266  1722  00A4               	movwf	setLED_Initialization@led
  7267                           
  7268                           ;LED_B1.c: 69: LedPointSelect(led);
  7269  1723  0824               	movf	setLED_Initialization@led,w
  7270  1724  3188  20B3  3197   	fcall	_LedPointSelect
  7271                           
  7272                           ;LED_B1.c: 70: LED->Enable=1;
  7273  1727  0020               	movlb	0	; select bank0
  7274  1728  085A               	movf	_LED,w
  7275  1729  0086               	movwf	6
  7276  172A  0187               	clrf	7
  7277  172B  1401               	bsf	1,0
  7278                           
  7279                           ;LED_B1.c: 71: setLED(led,0);
  7280  172C  01A2               	clrf	setLED@command
  7281  172D  0824               	movf	setLED_Initialization@led,w
  7282  172E  318D  2536         	fcall	_setLED
  7283  1730  0008               	return
  7284  1731                     __end_of_setLED_Initialization:	
  7285                           
  7286                           	psect	text39
  7287  0B12                     __ptext39:	
  7288 ;; *************** function _Flash_Memory_Main *****************
  7289 ;; Defined at:
  7290 ;;		line 786 in file "../src/MCU_B1.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;		None               void
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        0 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    8
  7311 ;; This function calls:
  7312 ;;		_Flash_Memory_Modify
  7313 ;; This function is called by:
  7314 ;;		_main
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           
  7319                           ;psect for function _Flash_Memory_Main
  7320  0B12                     _Flash_Memory_Main:	
  7321                           
  7322                           ;MCU_B1.c: 787: if (Memory->GO == 1) {
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7326  0B12  0020               	movlb	0	; select bank0
  7327  0B13  086E               	movf	_Memory,w
  7328  0B14  3E24               	addlw	36
  7329  0B15  0086               	movwf	6
  7330  0B16  3001               	movlw	1	; select bank2/3
  7331  0B17  0087               	movwf	7
  7332  0B18  1C81               	btfss	1,1
  7333  0B19  0008               	return
  7334                           
  7335                           ;MCU_B1.c: 788: if (Memory->Modify == 1) {
  7336  0B1A  086E               	movf	_Memory,w
  7337  0B1B  3E24               	addlw	36
  7338  0B1C  0086               	movwf	6
  7339  0B1D  3001               	movlw	1	; select bank2/3
  7340  0B1E  0087               	movwf	7
  7341  0B1F  1C01               	btfss	1,0
  7342  0B20  2B4F               	goto	l4934
  7343                           
  7344                           ;MCU_B1.c: 789: Memory->Time++;
  7345  0B21  086E               	movf	_Memory,w
  7346  0B22  3E22               	addlw	34
  7347  0B23  0086               	movwf	6
  7348  0B24  3001               	movlw	1	; select bank2/3
  7349  0B25  0087               	movwf	7
  7350  0B26  3001               	movlw	1
  7351  0B27  0781               	addwf	1,f
  7352  0B28  3141               	addfsr 1,1
  7353  0B29  1803               	skipnc
  7354  0B2A  0A81               	incf	1,f
  7355                           
  7356                           ;MCU_B1.c: 790: if (Memory->Time == 25)
  7357  0B2B  086E               	movf	_Memory,w
  7358  0B2C  3E22               	addlw	34
  7359  0B2D  0086               	movwf	6
  7360  0B2E  3001               	movlw	1	; select bank2/3
  7361  0B2F  0087               	movwf	7
  7362  0B30  3F40               	moviw [0]fsr1
  7363  0B31  3A19               	xorlw	25
  7364  0B32  1D03               	skipz
  7365  0B33  2B36               	goto	u4295
  7366  0B34  3F41               	moviw [1]fsr1
  7367  0B35  3A00               	xorlw	0
  7368  0B36                     u4295:	
  7369  0B36  1D03               	skipz
  7370  0B37  0008               	return
  7371                           
  7372                           ;MCU_B1.c: 791: {
  7373                           ;MCU_B1.c: 792: Memory->Time = 0;
  7374  0B38  086E               	movf	_Memory,w
  7375  0B39  3E22               	addlw	34
  7376  0B3A  0086               	movwf	6
  7377  0B3B  3001               	movlw	1	; select bank2/3
  7378  0B3C  0087               	movwf	7
  7379  0B3D  3000               	movlw	0
  7380  0B3E  3FC0               	movwi [0]fsr1
  7381  0B3F  3FC1               	movwi [1]fsr1
  7382                           
  7383                           ;MCU_B1.c: 793: Memory->Modify = 0;
  7384  0B40  086E               	movf	_Memory,w
  7385  0B41  3E24               	addlw	36
  7386  0B42  0086               	movwf	6
  7387  0B43  3001               	movlw	1	; select bank2/3
  7388  0B44  0087               	movwf	7
  7389  0B45  1001               	bcf	1,0
  7390                           
  7391                           ;MCU_B1.c: 794: Memory->GO = 0;
  7392  0B46  086E               	movf	_Memory,w
  7393  0B47  3E24               	addlw	36
  7394  0B48  0086               	movwf	6
  7395  0B49  3001               	movlw	1	; select bank2/3
  7396  0B4A  0087               	movwf	7
  7397  0B4B  1081               	bcf	1,1
  7398                           
  7399                           ;MCU_B1.c: 795: Flash_Memory_Modify();
  7400  0B4C  318E  2656         	fcall	_Flash_Memory_Modify
  7401                           
  7402                           ;MCU_B1.c: 796: }
  7403                           ;MCU_B1.c: 797: } else {
  7404  0B4E  0008               	return
  7405  0B4F                     l4934:	
  7406                           
  7407                           ;MCU_B1.c: 798: Memory->GO = 0;
  7408  0B4F  0020               	movlb	0	; select bank0
  7409  0B50  086E               	movf	_Memory,w
  7410  0B51  3E24               	addlw	36
  7411  0B52  0086               	movwf	6
  7412  0B53  3001               	movlw	1	; select bank2/3
  7413  0B54  0087               	movwf	7
  7414  0B55  1081               	bcf	1,1
  7415  0B56  0008               	return
  7416  0B57                     __end_of_Flash_Memory_Main:	
  7417                           
  7418                           	psect	text40
  7419  0E56                     __ptext40:	
  7420 ;; *************** function _Flash_Memory_Modify *****************
  7421 ;; Defined at:
  7422 ;;		line 855 in file "../src/MCU_B1.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  i               1    6[BANK0 ] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;		None               void
  7429 ;; Registers used:
  7430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;Total ram usage:        3 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    7
  7443 ;; This function calls:
  7444 ;;		_Flash_Memory_Erasing
  7445 ;;		_Flash_Memory_Read
  7446 ;;		_Flash_Memory_Write
  7447 ;; This function is called by:
  7448 ;;		_Flash_Memory_Main
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _Flash_Memory_Modify
  7454  0E56                     _Flash_Memory_Modify:	
  7455                           
  7456                           ;MCU_B1.c: 856: char i = 0;
  7457                           
  7458                           ;incstack = 0
  7459                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7460  0E56  0020               	movlb	0	; select bank0
  7461  0E57  01A6               	clrf	Flash_Memory_Modify@i
  7462                           
  7463                           ;MCU_B1.c: 857: for (i = 0; i < 32; i++) {
  7464  0E58  01A6               	clrf	Flash_Memory_Modify@i
  7465  0E59  3020               	movlw	32
  7466  0E5A  0226               	subwf	Flash_Memory_Modify@i,w
  7467  0E5B  1803               	btfsc	3,0
  7468  0E5C  2E74               	goto	l4604
  7469  0E5D                     l4598:	
  7470                           
  7471                           ;MCU_B1.c: 858: Memory->Data[i] = Flash_Memory_Read(i);
  7472  0E5D  0826               	movf	Flash_Memory_Modify@i,w
  7473  0E5E  3188  2064  318E   	fcall	_Flash_Memory_Read
  7474  0E61  0020               	movlb	0	; select bank0
  7475  0E62  00A4               	movwf	??_Flash_Memory_Modify
  7476  0E63  0826               	movf	Flash_Memory_Modify@i,w
  7477  0E64  076E               	addwf	_Memory,w
  7478  0E65  00A5               	movwf	??_Flash_Memory_Modify+1
  7479  0E66  0825               	movf	??_Flash_Memory_Modify+1,w
  7480  0E67  0086               	movwf	6
  7481  0E68  3001               	movlw	1	; select bank2/3
  7482  0E69  0087               	movwf	7
  7483  0E6A  0824               	movf	??_Flash_Memory_Modify,w
  7484  0E6B  0081               	movwf	1
  7485  0E6C  3001               	movlw	1
  7486  0E6D  00A4               	movwf	??_Flash_Memory_Modify
  7487  0E6E  0824               	movf	??_Flash_Memory_Modify,w
  7488  0E6F  07A6               	addwf	Flash_Memory_Modify@i,f
  7489  0E70  3020               	movlw	32
  7490  0E71  0226               	subwf	Flash_Memory_Modify@i,w
  7491  0E72  1C03               	skipc
  7492  0E73  2E5D               	goto	l4598
  7493  0E74                     l4604:	
  7494                           
  7495                           ;MCU_B1.c: 859: }
  7496                           ;MCU_B1.c: 860: Memory->Data[0]=product->Data[12];
  7497  0E74  086D               	movf	_product,w
  7498  0E75  3E0C               	addlw	12
  7499  0E76  0086               	movwf	6
  7500  0E77  3001               	movlw	1	; select bank2/3
  7501  0E78  0087               	movwf	7
  7502  0E79  0801               	movf	1,w
  7503  0E7A  00A4               	movwf	??_Flash_Memory_Modify
  7504  0E7B  086E               	movf	_Memory,w
  7505  0E7C  0086               	movwf	6
  7506  0E7D  3001               	movlw	1	; select bank2/3
  7507  0E7E  0087               	movwf	7
  7508  0E7F  0824               	movf	??_Flash_Memory_Modify,w
  7509  0E80  0081               	movwf	1
  7510                           
  7511                           ;MCU_B1.c: 861: Memory->Data[1]=product->Data[13];
  7512  0E81  086D               	movf	_product,w
  7513  0E82  3E0D               	addlw	13
  7514  0E83  0086               	movwf	6
  7515  0E84  3001               	movlw	1	; select bank2/3
  7516  0E85  0087               	movwf	7
  7517  0E86  0801               	movf	1,w
  7518  0E87  00A4               	movwf	??_Flash_Memory_Modify
  7519  0E88  0A6E               	incf	_Memory,w
  7520  0E89  0086               	movwf	6
  7521  0E8A  3001               	movlw	1	; select bank2/3
  7522  0E8B  0087               	movwf	7
  7523  0E8C  0824               	movf	??_Flash_Memory_Modify,w
  7524  0E8D  0081               	movwf	1
  7525                           
  7526                           ;MCU_B1.c: 862: Memory->Data[2]=product->Data[14];
  7527  0E8E  086D               	movf	_product,w
  7528  0E8F  3E0E               	addlw	14
  7529  0E90  0086               	movwf	6
  7530  0E91  3001               	movlw	1	; select bank2/3
  7531  0E92  0087               	movwf	7
  7532  0E93  0801               	movf	1,w
  7533  0E94  00A4               	movwf	??_Flash_Memory_Modify
  7534  0E95  086E               	movf	_Memory,w
  7535  0E96  3E02               	addlw	2
  7536  0E97  0086               	movwf	6
  7537  0E98  3001               	movlw	1	; select bank2/3
  7538  0E99  0087               	movwf	7
  7539  0E9A  0824               	movf	??_Flash_Memory_Modify,w
  7540  0E9B  0081               	movwf	1
  7541                           
  7542                           ;MCU_B1.c: 868: if (Memory->LoopSave == 1) {
  7543  0E9C  086E               	movf	_Memory,w
  7544  0E9D  3E24               	addlw	36
  7545  0E9E  0086               	movwf	6
  7546  0E9F  3001               	movlw	1	; select bank2/3
  7547  0EA0  0087               	movwf	7
  7548  0EA1  1D01               	btfss	1,2
  7549  0EA2  2EB3               	goto	l4608
  7550                           
  7551                           ;MCU_B1.c: 869: Memory->LoopSave = 0;
  7552  0EA3  086E               	movf	_Memory,w
  7553  0EA4  3E24               	addlw	36
  7554  0EA5  0086               	movwf	6
  7555  0EA6  3001               	movlw	1	; select bank2/3
  7556  0EA7  0087               	movwf	7
  7557  0EA8  1101               	bcf	1,2
  7558                           
  7559                           ;MCU_B1.c: 870: myMain->FirstOpen = 0;
  7560  0EA9  086C               	movf	_myMain,w
  7561  0EAA  0086               	movwf	6
  7562  0EAB  3001               	movlw	1	; select bank2/3
  7563  0EAC  0087               	movwf	7
  7564  0EAD  1281               	bcf	1,5
  7565                           
  7566                           ;MCU_B1.c: 871: myMain->First = 0;
  7567  0EAE  086C               	movf	_myMain,w
  7568  0EAF  0086               	movwf	6
  7569  0EB0  3001               	movlw	1	; select bank2/3
  7570  0EB1  0087               	movwf	7
  7571  0EB2  1381               	bcf	1,7
  7572  0EB3                     l4608:	
  7573                           
  7574                           ;MCU_B1.c: 873: }
  7575                           ;MCU_B1.c: 874: GIE = 0;
  7576  0EB3  138B               	bcf	11,7	;volatile
  7577                           
  7578                           ;MCU_B1.c: 875: Flash_Memory_Erasing();
  7579  0EB4  3196  268C  318E   	fcall	_Flash_Memory_Erasing
  7580                           
  7581                           ;MCU_B1.c: 876: Flash_Memory_Write();
  7582  0EB7  3189  21EB         	fcall	_Flash_Memory_Write
  7583                           
  7584                           ;MCU_B1.c: 877: GIE = 1;
  7585  0EB9  178B               	bsf	11,7	;volatile
  7586  0EBA  0008               	return
  7587  0EBB                     __end_of_Flash_Memory_Modify:	
  7588                           
  7589                           	psect	text41
  7590  168C                     __ptext41:	
  7591 ;; *************** function _Flash_Memory_Erasing *****************
  7592 ;; Defined at:
  7593 ;;		line 844 in file "../src/MCU_B1.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;		None               void
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0, pclath, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    6
  7614 ;; This function calls:
  7615 ;;		_Flash_Memory_Unlock
  7616 ;; This function is called by:
  7617 ;;		_Flash_Memory_Modify
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function _Flash_Memory_Erasing
  7623  168C                     _Flash_Memory_Erasing:	
  7624                           
  7625                           ;MCU_B1.c: 845: CFGS = 0;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  7629  168C  0023               	movlb	3	; select bank3
  7630  168D  1315               	bcf	21,6	;volatile
  7631                           
  7632                           ;MCU_B1.c: 846: PMADRH = 0x30;
  7633  168E  3030               	movlw	48
  7634  168F  0092               	movwf	18	;volatile
  7635                           
  7636                           ;MCU_B1.c: 847: PMADRL = 0x00;
  7637  1690  0191               	clrf	17	;volatile
  7638                           
  7639                           ;MCU_B1.c: 848: FREE = 1;
  7640  1691  1615               	bsf	21,4	;volatile
  7641                           
  7642                           ;MCU_B1.c: 849: WREN = 1;
  7643  1692  1515               	bsf	21,2	;volatile
  7644                           
  7645                           ;MCU_B1.c: 850: Flash_Memory_Unlock();
  7646  1693  3196  2642         	fcall	_Flash_Memory_Unlock
  7647                           
  7648                           ;MCU_B1.c: 851: WREN = 0;
  7649  1695  0023               	movlb	3	; select bank3
  7650  1696  1115               	bcf	21,2	;volatile
  7651  1697  0008               	return
  7652  1698                     __end_of_Flash_Memory_Erasing:	
  7653                           
  7654                           	psect	text42
  7655  0402                     __ptext42:	
  7656 ;; *************** function _Flash_Memory_Initialization *****************
  7657 ;; Defined at:
  7658 ;;		line 745 in file "../src/MCU_B1.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  i               1   49[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;		None               void
  7665 ;; Registers used:
  7666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;Total ram usage:        2 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    8
  7679 ;; This function calls:
  7680 ;;		_Flash_Memory_Read
  7681 ;;		_Flash_Memory_Write
  7682 ;;		_setPercentValue
  7683 ;; This function is called by:
  7684 ;;		_main
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _Flash_Memory_Initialization
  7690  0402                     _Flash_Memory_Initialization:	
  7691                           
  7692                           ;MCU_B1.c: 746: char i = 0;
  7693                           
  7694                           ;incstack = 0
  7695                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7696  0402  0020               	movlb	0	; select bank0
  7697  0403  01D1               	clrf	Flash_Memory_Initialization@i
  7698                           
  7699                           ;MCU_B1.c: 747: if (Flash_Memory_Read(31) == 0xaa) {
  7700  0404  301F               	movlw	31
  7701  0405  3188  2064  3184   	fcall	_Flash_Memory_Read
  7702  0408  3AAA               	xorlw	170
  7703  0409  1D03               	skipz
  7704  040A  2C7B               	goto	l4890
  7705                           
  7706                           ;MCU_B1.c: 748: product->Data[12] = Flash_Memory_Read(0);
  7707  040B  3000               	movlw	0
  7708  040C  3188  2064  3184   	fcall	_Flash_Memory_Read
  7709  040F  0020               	movlb	0	; select bank0
  7710  0410  00D0               	movwf	??_Flash_Memory_Initialization
  7711  0411  086D               	movf	_product,w
  7712  0412  3E0C               	addlw	12
  7713  0413  0086               	movwf	6
  7714  0414  3001               	movlw	1	; select bank2/3
  7715  0415  0087               	movwf	7
  7716  0416  0850               	movf	??_Flash_Memory_Initialization,w
  7717  0417  0081               	movwf	1
  7718                           
  7719                           ;MCU_B1.c: 749: product->Data[13] = Flash_Memory_Read(1);
  7720  0418  3001               	movlw	1
  7721  0419  3188  2064  3184   	fcall	_Flash_Memory_Read
  7722  041C  0020               	movlb	0	; select bank0
  7723  041D  00D0               	movwf	??_Flash_Memory_Initialization
  7724  041E  086D               	movf	_product,w
  7725  041F  3E0D               	addlw	13
  7726  0420  0086               	movwf	6
  7727  0421  3001               	movlw	1	; select bank2/3
  7728  0422  0087               	movwf	7
  7729  0423  0850               	movf	??_Flash_Memory_Initialization,w
  7730  0424  0081               	movwf	1
  7731                           
  7732                           ;MCU_B1.c: 750: product->Data[14] = Flash_Memory_Read(2);
  7733  0425  3002               	movlw	2
  7734  0426  3188  2064  3184   	fcall	_Flash_Memory_Read
  7735  0429  0020               	movlb	0	; select bank0
  7736  042A  00D0               	movwf	??_Flash_Memory_Initialization
  7737  042B  086D               	movf	_product,w
  7738  042C  3E0E               	addlw	14
  7739  042D  0086               	movwf	6
  7740  042E  3001               	movlw	1	; select bank2/3
  7741  042F  0087               	movwf	7
  7742  0430  0850               	movf	??_Flash_Memory_Initialization,w
  7743  0431  0081               	movwf	1
  7744                           
  7745                           ;MCU_B1.c: 756: i = setPercentValue(((char)((100-60)*0.8)));
  7746  0432  3020               	movlw	32
  7747  0433  318B  2357  3184   	fcall	_setPercentValue
  7748  0436  0020               	movlb	0	; select bank0
  7749  0437  00D0               	movwf	??_Flash_Memory_Initialization
  7750  0438  0850               	movf	??_Flash_Memory_Initialization,w
  7751  0439  00D1               	movwf	Flash_Memory_Initialization@i
  7752                           
  7753                           ;MCU_B1.c: 757: product->Data[21] = i;
  7754  043A  0851               	movf	Flash_Memory_Initialization@i,w
  7755  043B  00D0               	movwf	??_Flash_Memory_Initialization
  7756  043C  086D               	movf	_product,w
  7757  043D  3E15               	addlw	21
  7758  043E  0086               	movwf	6
  7759  043F  3001               	movlw	1	; select bank2/3
  7760  0440  0087               	movwf	7
  7761  0441  0850               	movf	??_Flash_Memory_Initialization,w
  7762  0442  0081               	movwf	1
  7763                           
  7764                           ;MCU_B1.c: 758: product->Data[22] = i;
  7765  0443  0851               	movf	Flash_Memory_Initialization@i,w
  7766  0444  00D0               	movwf	??_Flash_Memory_Initialization
  7767  0445  086D               	movf	_product,w
  7768  0446  3E16               	addlw	22
  7769  0447  0086               	movwf	6
  7770  0448  3001               	movlw	1	; select bank2/3
  7771  0449  0087               	movwf	7
  7772  044A  0850               	movf	??_Flash_Memory_Initialization,w
  7773  044B  0081               	movwf	1
  7774                           
  7775                           ;MCU_B1.c: 759: product->Data[23] = i;
  7776  044C  0851               	movf	Flash_Memory_Initialization@i,w
  7777  044D  00D0               	movwf	??_Flash_Memory_Initialization
  7778  044E  086D               	movf	_product,w
  7779  044F  3E17               	addlw	23
  7780  0450  0086               	movwf	6
  7781  0451  3001               	movlw	1	; select bank2/3
  7782  0452  0087               	movwf	7
  7783  0453  0850               	movf	??_Flash_Memory_Initialization,w
  7784  0454  0081               	movwf	1
  7785                           
  7786                           ;MCU_B1.c: 761: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  7787  0455  086D               	movf	_product,w
  7788  0456  3E0C               	addlw	12
  7789  0457  0086               	movwf	6
  7790  0458  3001               	movlw	1	; select bank2/3
  7791  0459  0087               	movwf	7
  7792  045A  0801               	movf	1,w
  7793  045B  3AFF               	xorlw	255
  7794  045C  1D03               	skipz
  7795  045D  0008               	return
  7796  045E  086D               	movf	_product,w
  7797  045F  3E0D               	addlw	13
  7798  0460  0086               	movwf	6
  7799  0461  3001               	movlw	1	; select bank2/3
  7800  0462  0087               	movwf	7
  7801  0463  0801               	movf	1,w
  7802  0464  3AFF               	xorlw	255
  7803  0465  1D03               	skipz
  7804  0466  0008               	return
  7805  0467  086D               	movf	_product,w
  7806  0468  3E0E               	addlw	14
  7807  0469  0086               	movwf	6
  7808  046A  3001               	movlw	1	; select bank2/3
  7809  046B  0087               	movwf	7
  7810  046C  0801               	movf	1,w
  7811  046D  3AFF               	xorlw	255
  7812  046E  1D03               	skipz
  7813  046F  0008               	return
  7814                           
  7815                           ;MCU_B1.c: 762: myMain->FirstOpen = 1;
  7816  0470  086C               	movf	_myMain,w
  7817  0471  0086               	movwf	6
  7818  0472  3001               	movlw	1	; select bank2/3
  7819  0473  0087               	movwf	7
  7820  0474  1681               	bsf	1,5
  7821                           
  7822                           ;MCU_B1.c: 763: myMain->First = 1;
  7823  0475  086C               	movf	_myMain,w
  7824  0476  0086               	movwf	6
  7825  0477  3001               	movlw	1	; select bank2/3
  7826  0478  0087               	movwf	7
  7827  0479  1781               	bsf	1,7
  7828                           
  7829                           ;MCU_B1.c: 764: }
  7830                           ;MCU_B1.c: 765: } else {
  7831  047A  0008               	return
  7832  047B                     l4890:	
  7833                           
  7834                           ;MCU_B1.c: 766: i = setPercentValue(((char)((100-60)*0.8)));
  7835  047B  3020               	movlw	32
  7836  047C  318B  2357  3184   	fcall	_setPercentValue
  7837  047F  0020               	movlb	0	; select bank0
  7838  0480  00D0               	movwf	??_Flash_Memory_Initialization
  7839  0481  0850               	movf	??_Flash_Memory_Initialization,w
  7840  0482  00D1               	movwf	Flash_Memory_Initialization@i
  7841                           
  7842                           ;MCU_B1.c: 767: Memory->Data[0]=0xff;
  7843  0483  30FF               	movlw	255
  7844  0484  00D0               	movwf	??_Flash_Memory_Initialization
  7845  0485  086E               	movf	_Memory,w
  7846  0486  0086               	movwf	6
  7847  0487  3001               	movlw	1	; select bank2/3
  7848  0488  0087               	movwf	7
  7849  0489  0850               	movf	??_Flash_Memory_Initialization,w
  7850  048A  0081               	movwf	1
  7851                           
  7852                           ;MCU_B1.c: 768: Memory->Data[1]=0xff;
  7853  048B  30FF               	movlw	255
  7854  048C  00D0               	movwf	??_Flash_Memory_Initialization
  7855  048D  0A6E               	incf	_Memory,w
  7856  048E  0086               	movwf	6
  7857  048F  3001               	movlw	1	; select bank2/3
  7858  0490  0087               	movwf	7
  7859  0491  0850               	movf	??_Flash_Memory_Initialization,w
  7860  0492  0081               	movwf	1
  7861                           
  7862                           ;MCU_B1.c: 769: Memory->Data[2]=0xff;
  7863  0493  30FF               	movlw	255
  7864  0494  00D0               	movwf	??_Flash_Memory_Initialization
  7865  0495  086E               	movf	_Memory,w
  7866  0496  3E02               	addlw	2
  7867  0497  0086               	movwf	6
  7868  0498  3001               	movlw	1	; select bank2/3
  7869  0499  0087               	movwf	7
  7870  049A  0850               	movf	??_Flash_Memory_Initialization,w
  7871  049B  0081               	movwf	1
  7872                           
  7873                           ;MCU_B1.c: 770: Memory->Data[3]=0xff;
  7874  049C  30FF               	movlw	255
  7875  049D  00D0               	movwf	??_Flash_Memory_Initialization
  7876  049E  086E               	movf	_Memory,w
  7877  049F  3E03               	addlw	3
  7878  04A0  0086               	movwf	6
  7879  04A1  3001               	movlw	1	; select bank2/3
  7880  04A2  0087               	movwf	7
  7881  04A3  0850               	movf	??_Flash_Memory_Initialization,w
  7882  04A4  0081               	movwf	1
  7883                           
  7884                           ;MCU_B1.c: 771: Memory->Data[4]=0xff;
  7885  04A5  30FF               	movlw	255
  7886  04A6  00D0               	movwf	??_Flash_Memory_Initialization
  7887  04A7  086E               	movf	_Memory,w
  7888  04A8  3E04               	addlw	4
  7889  04A9  0086               	movwf	6
  7890  04AA  3001               	movlw	1	; select bank2/3
  7891  04AB  0087               	movwf	7
  7892  04AC  0850               	movf	??_Flash_Memory_Initialization,w
  7893  04AD  0081               	movwf	1
  7894                           
  7895                           ;MCU_B1.c: 772: Memory->Data[5]=0xff;
  7896  04AE  30FF               	movlw	255
  7897  04AF  00D0               	movwf	??_Flash_Memory_Initialization
  7898  04B0  086E               	movf	_Memory,w
  7899  04B1  3E05               	addlw	5
  7900  04B2  0086               	movwf	6
  7901  04B3  3001               	movlw	1	; select bank2/3
  7902  04B4  0087               	movwf	7
  7903  04B5  0850               	movf	??_Flash_Memory_Initialization,w
  7904  04B6  0081               	movwf	1
  7905                           
  7906                           ;MCU_B1.c: 773: Memory->Data[31]=0xaa;
  7907  04B7  30AA               	movlw	170
  7908  04B8  00D0               	movwf	??_Flash_Memory_Initialization
  7909  04B9  086E               	movf	_Memory,w
  7910  04BA  3E1F               	addlw	31
  7911  04BB  0086               	movwf	6
  7912  04BC  3001               	movlw	1	; select bank2/3
  7913  04BD  0087               	movwf	7
  7914  04BE  0850               	movf	??_Flash_Memory_Initialization,w
  7915  04BF  0081               	movwf	1
  7916                           
  7917                           ;MCU_B1.c: 774: product->Data[21] = i;
  7918  04C0  0851               	movf	Flash_Memory_Initialization@i,w
  7919  04C1  00D0               	movwf	??_Flash_Memory_Initialization
  7920  04C2  086D               	movf	_product,w
  7921  04C3  3E15               	addlw	21
  7922  04C4  0086               	movwf	6
  7923  04C5  3001               	movlw	1	; select bank2/3
  7924  04C6  0087               	movwf	7
  7925  04C7  0850               	movf	??_Flash_Memory_Initialization,w
  7926  04C8  0081               	movwf	1
  7927                           
  7928                           ;MCU_B1.c: 775: product->Data[22] = i;
  7929  04C9  0851               	movf	Flash_Memory_Initialization@i,w
  7930  04CA  00D0               	movwf	??_Flash_Memory_Initialization
  7931  04CB  086D               	movf	_product,w
  7932  04CC  3E16               	addlw	22
  7933  04CD  0086               	movwf	6
  7934  04CE  3001               	movlw	1	; select bank2/3
  7935  04CF  0087               	movwf	7
  7936  04D0  0850               	movf	??_Flash_Memory_Initialization,w
  7937  04D1  0081               	movwf	1
  7938                           
  7939                           ;MCU_B1.c: 776: product->Data[23] = i;
  7940  04D2  0851               	movf	Flash_Memory_Initialization@i,w
  7941  04D3  00D0               	movwf	??_Flash_Memory_Initialization
  7942  04D4  086D               	movf	_product,w
  7943  04D5  3E17               	addlw	23
  7944  04D6  0086               	movwf	6
  7945  04D7  3001               	movlw	1	; select bank2/3
  7946  04D8  0087               	movwf	7
  7947  04D9  0850               	movf	??_Flash_Memory_Initialization,w
  7948  04DA  0081               	movwf	1
  7949                           
  7950                           ;MCU_B1.c: 777: GIE = 0;
  7951  04DB  138B               	bcf	11,7	;volatile
  7952                           
  7953                           ;MCU_B1.c: 778: Flash_Memory_Write();
  7954  04DC  3189  21EB         	fcall	_Flash_Memory_Write
  7955                           
  7956                           ;MCU_B1.c: 779: GIE = 1;
  7957  04DE  178B               	bsf	11,7	;volatile
  7958                           
  7959                           ;MCU_B1.c: 780: myMain->FirstOpen = 1;
  7960  04DF  0020               	movlb	0	; select bank0
  7961  04E0  086C               	movf	_myMain,w
  7962  04E1  0086               	movwf	6
  7963  04E2  3001               	movlw	1	; select bank2/3
  7964  04E3  0087               	movwf	7
  7965  04E4  1681               	bsf	1,5
  7966                           
  7967                           ;MCU_B1.c: 781: myMain->First = 1;
  7968  04E5  086C               	movf	_myMain,w
  7969  04E6  0086               	movwf	6
  7970  04E7  3001               	movlw	1	; select bank2/3
  7971  04E8  0087               	movwf	7
  7972  04E9  1781               	bsf	1,7
  7973  04EA  0008               	return
  7974  04EB                     __end_of_Flash_Memory_Initialization:	
  7975                           
  7976                           	psect	text43
  7977  0B57                     __ptext43:	
  7978 ;; *************** function _setPercentValue *****************
  7979 ;; Defined at:
  7980 ;;		line 768 in file "../src/Dimmer_B1.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  value           1    wreg     unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  value           1   44[BANK0 ] unsigned char 
  7985 ;;  i               3   45[BANK0 ] float 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      unsigned char 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, pclath, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;Total ram usage:        4 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    7
  8002 ;; This function calls:
  8003 ;;		___awtoft
  8004 ;;		___ftdiv
  8005 ;;		___fttol
  8006 ;; This function is called by:
  8007 ;;		_Flash_Memory_Initialization
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _setPercentValue
  8013  0B57                     _setPercentValue:	
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  8017                           ;setPercentValue@value stored from wreg
  8018  0B57  0020               	movlb	0	; select bank0
  8019  0B58  00CC               	movwf	setPercentValue@value
  8020                           
  8021                           ;Dimmer_B1.c: 770: float i = ((char)((100-25)*0.8)) - ((char)((100-60)*0.8));
  8022  0B59  3000               	movlw	0
  8023  0B5A  00CD               	movwf	setPercentValue@i
  8024  0B5B  30E0               	movlw	224
  8025  0B5C  00CE               	movwf	setPercentValue@i+1
  8026  0B5D  3041               	movlw	65
  8027  0B5E  00CF               	movwf	setPercentValue@i+2
  8028                           
  8029                           ;Dimmer_B1.c: 771: i /= 100;
  8030  0B5F  3000               	movlw	0
  8031  0B60  00AE               	movwf	___ftdiv@f2
  8032  0B61  30C8               	movlw	200
  8033  0B62  00AF               	movwf	___ftdiv@f2+1
  8034  0B63  3042               	movlw	66
  8035  0B64  00B0               	movwf	___ftdiv@f2+2
  8036  0B65  084D               	movf	setPercentValue@i,w
  8037  0B66  00B1               	movwf	___ftdiv@f1
  8038  0B67  084E               	movf	setPercentValue@i+1,w
  8039  0B68  00B2               	movwf	___ftdiv@f1+1
  8040  0B69  084F               	movf	setPercentValue@i+2,w
  8041  0B6A  00B3               	movwf	___ftdiv@f1+2
  8042  0B6B  3184  24EB  318B   	fcall	___ftdiv
  8043  0B6E  0020               	movlb	0	; select bank0
  8044  0B6F  082E               	movf	?___ftdiv,w
  8045  0B70  00CD               	movwf	setPercentValue@i
  8046  0B71  082F               	movf	?___ftdiv+1,w
  8047  0B72  00CE               	movwf	setPercentValue@i+1
  8048  0B73  0830               	movf	?___ftdiv+2,w
  8049  0B74  00CF               	movwf	setPercentValue@i+2
  8050                           
  8051                           ;Dimmer_B1.c: 772: return (100 - (char) ((value - ((char)((100-60)*0.8))) / i));
  8052  0B75  084C               	movf	setPercentValue@value,w
  8053  0B76  3EE0               	addlw	224
  8054  0B77  00A8               	movwf	___awtoft@c
  8055  0B78  30FF               	movlw	255
  8056  0B79  1803               	skipnc
  8057  0B7A  3000               	movlw	0
  8058  0B7B  00A9               	movwf	___awtoft@c+1
  8059  0B7C  3188  20F0  318B   	fcall	___awtoft
  8060  0B7F  0020               	movlb	0	; select bank0
  8061  0B80  0828               	movf	?___awtoft,w
  8062  0B81  00B1               	movwf	___ftdiv@f1
  8063  0B82  0829               	movf	?___awtoft+1,w
  8064  0B83  00B2               	movwf	___ftdiv@f1+1
  8065  0B84  082A               	movf	?___awtoft+2,w
  8066  0B85  00B3               	movwf	___ftdiv@f1+2
  8067  0B86  084D               	movf	setPercentValue@i,w
  8068  0B87  00AE               	movwf	___ftdiv@f2
  8069  0B88  084E               	movf	setPercentValue@i+1,w
  8070  0B89  00AF               	movwf	___ftdiv@f2+1
  8071  0B8A  084F               	movf	setPercentValue@i+2,w
  8072  0B8B  00B0               	movwf	___ftdiv@f2+2
  8073  0B8C  3184  24EB  318B   	fcall	___ftdiv
  8074  0B8F  0020               	movlb	0	; select bank0
  8075  0B90  082E               	movf	?___ftdiv,w
  8076  0B91  00BE               	movwf	___fttol@f1
  8077  0B92  082F               	movf	?___ftdiv+1,w
  8078  0B93  00BF               	movwf	___fttol@f1+1
  8079  0B94  0830               	movf	?___ftdiv+2,w
  8080  0B95  00C0               	movwf	___fttol@f1+2
  8081  0B96  3186  2631         	fcall	___fttol
  8082  0B98  0020               	movlb	0	; select bank0
  8083  0B99  033E               	decf	?___fttol,w
  8084  0B9A  3AFF               	xorlw	255
  8085  0B9B  3E64               	addlw	100
  8086  0B9C  0008               	return
  8087  0B9D                     __end_of_setPercentValue:	
  8088                           
  8089                           	psect	text44
  8090  0631                     __ptext44:	
  8091 ;; *************** function ___fttol *****************
  8092 ;; Defined at:
  8093 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  f1              3   30[BANK0 ] float 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  lval            4   39[BANK0 ] unsigned long 
  8098 ;;  exp1            1   43[BANK0 ] unsigned char 
  8099 ;;  sign1           1   38[BANK0 ] unsigned char 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  4   30[BANK0 ] long 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;Total ram usage:       14 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    5
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_setPercentValue
  8120 ;;		_getPercentValue
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function ___fttol
  8126  0631                     ___fttol:	
  8127                           
  8128                           ;incstack = 0
  8129                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8130  0631  0020               	movlb	0	; select bank0
  8131  0632  083E               	movf	___fttol@f1,w
  8132  0633  00C2               	movwf	??___fttol
  8133  0634  083F               	movf	___fttol@f1+1,w
  8134  0635  00C3               	movwf	??___fttol+1
  8135  0636  0840               	movf	___fttol@f1+2,w
  8136  0637  00C4               	movwf	??___fttol+2
  8137  0638  1003               	clrc
  8138  0639  0D43               	rlf	??___fttol+1,w
  8139  063A  0D44               	rlf	??___fttol+2,w
  8140  063B  00C5               	movwf	??___fttol+3
  8141  063C  0845               	movf	??___fttol+3,w
  8142  063D  00CB               	movwf	___fttol@exp1
  8143  063E  08CB               	movf	___fttol@exp1,f
  8144  063F  1D03               	skipz
  8145  0640  2E4A               	goto	l4264
  8146  0641  3000               	movlw	0
  8147  0642  00C1               	movwf	?___fttol+3
  8148  0643  3000               	movlw	0
  8149  0644  00C0               	movwf	?___fttol+2
  8150  0645  3000               	movlw	0
  8151  0646  00BF               	movwf	?___fttol+1
  8152  0647  3000               	movlw	0
  8153  0648  00BE               	movwf	?___fttol
  8154  0649  0008               	return
  8155  064A                     l4264:	
  8156  064A  083E               	movf	___fttol@f1,w
  8157  064B  00C2               	movwf	??___fttol
  8158  064C  083F               	movf	___fttol@f1+1,w
  8159  064D  00C3               	movwf	??___fttol+1
  8160  064E  0840               	movf	___fttol@f1+2,w
  8161  064F  00C4               	movwf	??___fttol+2
  8162  0650  3017               	movlw	23
  8163  0651                     u3225:	
  8164  0651  36C4               	lsrf	??___fttol+2,f
  8165  0652  0CC3               	rrf	??___fttol+1,f
  8166  0653  0CC2               	rrf	??___fttol,f
  8167  0654  0B89               	decfsz	9,f
  8168  0655  2E51               	goto	u3225
  8169  0656  0842               	movf	??___fttol,w
  8170  0657  00C5               	movwf	??___fttol+3
  8171  0658  0845               	movf	??___fttol+3,w
  8172  0659  00C6               	movwf	___fttol@sign1
  8173  065A  17BF               	bsf	___fttol@f1+1,7
  8174  065B  30FF               	movlw	255
  8175  065C  05BE               	andwf	___fttol@f1,f
  8176  065D  30FF               	movlw	255
  8177  065E  05BF               	andwf	___fttol@f1+1,f
  8178  065F  3000               	movlw	0
  8179  0660  05C0               	andwf	___fttol@f1+2,f
  8180  0661  083E               	movf	___fttol@f1,w
  8181  0662  00C7               	movwf	___fttol@lval
  8182  0663  083F               	movf	___fttol@f1+1,w
  8183  0664  00C8               	movwf	___fttol@lval+1
  8184  0665  0840               	movf	___fttol@f1+2,w
  8185  0666  00C9               	movwf	___fttol@lval+2
  8186  0667  01CA               	clrf	___fttol@lval+3
  8187  0668  308E               	movlw	142
  8188  0669  02CB               	subwf	___fttol@exp1,f
  8189  066A  1FCB               	btfss	___fttol@exp1,7
  8190  066B  2E88               	goto	l4284
  8191  066C  084B               	movf	___fttol@exp1,w
  8192  066D  3A80               	xorlw	128
  8193  066E  3E8F               	addlw	143
  8194  066F  1803               	skipnc
  8195  0670  2E7A               	goto	l4282
  8196  0671  3000               	movlw	0
  8197  0672  00C1               	movwf	?___fttol+3
  8198  0673  3000               	movlw	0
  8199  0674  00C0               	movwf	?___fttol+2
  8200  0675  3000               	movlw	0
  8201  0676  00BF               	movwf	?___fttol+1
  8202  0677  3000               	movlw	0
  8203  0678  00BE               	movwf	?___fttol
  8204  0679  0008               	return
  8205  067A                     l4282:	
  8206  067A  3001               	movlw	1
  8207  067B                     u3255:	
  8208  067B  36CA               	lsrf	___fttol@lval+3,f
  8209  067C  0CC9               	rrf	___fttol@lval+2,f
  8210  067D  0CC8               	rrf	___fttol@lval+1,f
  8211  067E  0CC7               	rrf	___fttol@lval,f
  8212  067F  0B89               	decfsz	9,f
  8213  0680  2E7B               	goto	u3255
  8214  0681  3001               	movlw	1
  8215  0682  00C2               	movwf	??___fttol
  8216  0683  0842               	movf	??___fttol,w
  8217  0684  07CB               	addwf	___fttol@exp1,f
  8218  0685  1903               	btfsc	3,2
  8219  0686  2EA1               	goto	l4294
  8220  0687  2E7A               	goto	l4282
  8221  0688                     l4284:	
  8222  0688  3018               	movlw	24
  8223  0689  024B               	subwf	___fttol@exp1,w
  8224  068A  1C03               	skipc
  8225  068B  2E9E               	goto	l4292
  8226  068C  3000               	movlw	0
  8227  068D  00C1               	movwf	?___fttol+3
  8228  068E  3000               	movlw	0
  8229  068F  00C0               	movwf	?___fttol+2
  8230  0690  3000               	movlw	0
  8231  0691  00BF               	movwf	?___fttol+1
  8232  0692  3000               	movlw	0
  8233  0693  00BE               	movwf	?___fttol
  8234  0694  0008               	return
  8235  0695                     l4290:	
  8236  0695  3001               	movlw	1
  8237  0696                     u3285:	
  8238  0696  35C7               	lslf	___fttol@lval,f
  8239  0697  0DC8               	rlf	___fttol@lval+1,f
  8240  0698  0DC9               	rlf	___fttol@lval+2,f
  8241  0699  0DCA               	rlf	___fttol@lval+3,f
  8242  069A  0B89               	decfsz	9,f
  8243  069B  2E96               	goto	u3285
  8244  069C  3001               	movlw	1
  8245  069D  02CB               	subwf	___fttol@exp1,f
  8246  069E                     l4292:	
  8247  069E  08CB               	movf	___fttol@exp1,f
  8248  069F  1D03               	skipz
  8249  06A0  2E95               	goto	l4290
  8250  06A1                     l4294:	
  8251  06A1  0846               	movf	___fttol@sign1,w
  8252  06A2  1903               	btfsc	3,2
  8253  06A3  2EAF               	goto	l4298
  8254  06A4  09C7               	comf	___fttol@lval,f
  8255  06A5  09C8               	comf	___fttol@lval+1,f
  8256  06A6  09C9               	comf	___fttol@lval+2,f
  8257  06A7  09CA               	comf	___fttol@lval+3,f
  8258  06A8  0AC7               	incf	___fttol@lval,f
  8259  06A9  1903               	skipnz
  8260  06AA  0AC8               	incf	___fttol@lval+1,f
  8261  06AB  1903               	skipnz
  8262  06AC  0AC9               	incf	___fttol@lval+2,f
  8263  06AD  1903               	skipnz
  8264  06AE  0ACA               	incf	___fttol@lval+3,f
  8265  06AF                     l4298:	
  8266  06AF  084A               	movf	___fttol@lval+3,w
  8267  06B0  00C1               	movwf	?___fttol+3
  8268  06B1  0849               	movf	___fttol@lval+2,w
  8269  06B2  00C0               	movwf	?___fttol+2
  8270  06B3  0848               	movf	___fttol@lval+1,w
  8271  06B4  00BF               	movwf	?___fttol+1
  8272  06B5  0847               	movf	___fttol@lval,w
  8273  06B6  00BE               	movwf	?___fttol
  8274  06B7  0008               	return
  8275  06B8                     __end_of___fttol:	
  8276                           
  8277                           	psect	text45
  8278  04EB                     __ptext45:	
  8279 ;; *************** function ___ftdiv *****************
  8280 ;; Defined at:
  8281 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  f2              3   14[BANK0 ] float 
  8284 ;;  f1              3   17[BANK0 ] float 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  f3              3   25[BANK0 ] float 
  8287 ;;  sign            1   29[BANK0 ] unsigned char 
  8288 ;;  exp             1   28[BANK0 ] unsigned char 
  8289 ;;  cntr            1   24[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  3   14[BANK0 ] float 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0, pclath, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;Total ram usage:       16 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    6
  8306 ;; This function calls:
  8307 ;;		___ftpack
  8308 ;; This function is called by:
  8309 ;;		_setPercentValue
  8310 ;;		_getPercentValue
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           
  8315                           ;psect for function ___ftdiv
  8316  04EB                     ___ftdiv:	
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8320  04EB  0020               	movlb	0	; select bank0
  8321  04EC  0831               	movf	___ftdiv@f1,w
  8322  04ED  00B4               	movwf	??___ftdiv
  8323  04EE  0832               	movf	___ftdiv@f1+1,w
  8324  04EF  00B5               	movwf	??___ftdiv+1
  8325  04F0  0833               	movf	___ftdiv@f1+2,w
  8326  04F1  00B6               	movwf	??___ftdiv+2
  8327  04F2  1003               	clrc
  8328  04F3  0D35               	rlf	??___ftdiv+1,w
  8329  04F4  0D36               	rlf	??___ftdiv+2,w
  8330  04F5  00B7               	movwf	??___ftdiv+3
  8331  04F6  0837               	movf	??___ftdiv+3,w
  8332  04F7  00BC               	movwf	___ftdiv@exp
  8333  04F8  08BC               	movf	___ftdiv@exp,f
  8334  04F9  1D03               	skipz
  8335  04FA  2D02               	goto	l4222
  8336  04FB  3000               	movlw	0
  8337  04FC  00AE               	movwf	?___ftdiv
  8338  04FD  3000               	movlw	0
  8339  04FE  00AF               	movwf	?___ftdiv+1
  8340  04FF  3000               	movlw	0
  8341  0500  00B0               	movwf	?___ftdiv+2
  8342  0501  0008               	return
  8343  0502                     l4222:	
  8344  0502  082E               	movf	___ftdiv@f2,w
  8345  0503  00B4               	movwf	??___ftdiv
  8346  0504  082F               	movf	___ftdiv@f2+1,w
  8347  0505  00B5               	movwf	??___ftdiv+1
  8348  0506  0830               	movf	___ftdiv@f2+2,w
  8349  0507  00B6               	movwf	??___ftdiv+2
  8350  0508  1003               	clrc
  8351  0509  0D35               	rlf	??___ftdiv+1,w
  8352  050A  0D36               	rlf	??___ftdiv+2,w
  8353  050B  00B7               	movwf	??___ftdiv+3
  8354  050C  0837               	movf	??___ftdiv+3,w
  8355  050D  00BD               	movwf	___ftdiv@sign
  8356  050E  08BD               	movf	___ftdiv@sign,f
  8357  050F  1D03               	skipz
  8358  0510  2D18               	goto	l4228
  8359  0511  3000               	movlw	0
  8360  0512  00AE               	movwf	?___ftdiv
  8361  0513  3000               	movlw	0
  8362  0514  00AF               	movwf	?___ftdiv+1
  8363  0515  3000               	movlw	0
  8364  0516  00B0               	movwf	?___ftdiv+2
  8365  0517  0008               	return
  8366  0518                     l4228:	
  8367  0518  3000               	movlw	0
  8368  0519  00B9               	movwf	___ftdiv@f3
  8369  051A  3000               	movlw	0
  8370  051B  00BA               	movwf	___ftdiv@f3+1
  8371  051C  3000               	movlw	0
  8372  051D  00BB               	movwf	___ftdiv@f3+2
  8373  051E  3089               	movlw	137
  8374  051F  073D               	addwf	___ftdiv@sign,w
  8375  0520  00B4               	movwf	??___ftdiv
  8376  0521  0834               	movf	??___ftdiv,w
  8377  0522  02BC               	subwf	___ftdiv@exp,f
  8378  0523  0831               	movf	___ftdiv@f1,w
  8379  0524  00B4               	movwf	??___ftdiv
  8380  0525  0832               	movf	___ftdiv@f1+1,w
  8381  0526  00B5               	movwf	??___ftdiv+1
  8382  0527  0833               	movf	___ftdiv@f1+2,w
  8383  0528  00B6               	movwf	??___ftdiv+2
  8384  0529  3010               	movlw	16
  8385  052A                     u3155:	
  8386  052A  36B6               	lsrf	??___ftdiv+2,f
  8387  052B  0CB5               	rrf	??___ftdiv+1,f
  8388  052C  0CB4               	rrf	??___ftdiv,f
  8389  052D  0B89               	decfsz	9,f
  8390  052E  2D2A               	goto	u3155
  8391  052F  0834               	movf	??___ftdiv,w
  8392  0530  00B7               	movwf	??___ftdiv+3
  8393  0531  0837               	movf	??___ftdiv+3,w
  8394  0532  00BD               	movwf	___ftdiv@sign
  8395  0533  082E               	movf	___ftdiv@f2,w
  8396  0534  00B4               	movwf	??___ftdiv
  8397  0535  082F               	movf	___ftdiv@f2+1,w
  8398  0536  00B5               	movwf	??___ftdiv+1
  8399  0537  0830               	movf	___ftdiv@f2+2,w
  8400  0538  00B6               	movwf	??___ftdiv+2
  8401  0539  3010               	movlw	16
  8402  053A                     u3165:	
  8403  053A  36B6               	lsrf	??___ftdiv+2,f
  8404  053B  0CB5               	rrf	??___ftdiv+1,f
  8405  053C  0CB4               	rrf	??___ftdiv,f
  8406  053D  0B89               	decfsz	9,f
  8407  053E  2D3A               	goto	u3165
  8408  053F  0834               	movf	??___ftdiv,w
  8409  0540  00B7               	movwf	??___ftdiv+3
  8410  0541  0837               	movf	??___ftdiv+3,w
  8411  0542  06BD               	xorwf	___ftdiv@sign,f
  8412  0543  3080               	movlw	128
  8413  0544  00B4               	movwf	??___ftdiv
  8414  0545  0834               	movf	??___ftdiv,w
  8415  0546  05BD               	andwf	___ftdiv@sign,f
  8416  0547  17B2               	bsf	___ftdiv@f1+1,7
  8417  0548  30FF               	movlw	255
  8418  0549  05B1               	andwf	___ftdiv@f1,f
  8419  054A  30FF               	movlw	255
  8420  054B  05B2               	andwf	___ftdiv@f1+1,f
  8421  054C  3000               	movlw	0
  8422  054D  05B3               	andwf	___ftdiv@f1+2,f
  8423  054E  17AF               	bsf	___ftdiv@f2+1,7
  8424  054F  30FF               	movlw	255
  8425  0550  05AE               	andwf	___ftdiv@f2,f
  8426  0551  30FF               	movlw	255
  8427  0552  05AF               	andwf	___ftdiv@f2+1,f
  8428  0553  3000               	movlw	0
  8429  0554  05B0               	andwf	___ftdiv@f2+2,f
  8430  0555  3018               	movlw	24
  8431  0556  00B4               	movwf	??___ftdiv
  8432  0557  0834               	movf	??___ftdiv,w
  8433  0558  00B8               	movwf	___ftdiv@cntr
  8434  0559                     l4242:	
  8435  0559  3001               	movlw	1
  8436  055A                     u3175:	
  8437  055A  35B9               	lslf	___ftdiv@f3,f
  8438  055B  0DBA               	rlf	___ftdiv@f3+1,f
  8439  055C  0DBB               	rlf	___ftdiv@f3+2,f
  8440  055D  0B89               	decfsz	9,f
  8441  055E  2D5A               	goto	u3175
  8442  055F  0830               	movf	___ftdiv@f2+2,w
  8443  0560  0233               	subwf	___ftdiv@f1+2,w
  8444  0561  1D03               	skipz
  8445  0562  2D69               	goto	u3185
  8446  0563  082F               	movf	___ftdiv@f2+1,w
  8447  0564  0232               	subwf	___ftdiv@f1+1,w
  8448  0565  1D03               	skipz
  8449  0566  2D69               	goto	u3185
  8450  0567  082E               	movf	___ftdiv@f2,w
  8451  0568  0231               	subwf	___ftdiv@f1,w
  8452  0569                     u3185:	
  8453  0569  1C03               	skipc
  8454  056A  2D72               	goto	l4250
  8455  056B  082E               	movf	___ftdiv@f2,w
  8456  056C  02B1               	subwf	___ftdiv@f1,f
  8457  056D  082F               	movf	___ftdiv@f2+1,w
  8458  056E  3BB2               	subwfb	___ftdiv@f1+1,f
  8459  056F  0830               	movf	___ftdiv@f2+2,w
  8460  0570  3BB3               	subwfb	___ftdiv@f1+2,f
  8461  0571  1439               	bsf	___ftdiv@f3,0
  8462  0572                     l4250:	
  8463  0572  3001               	movlw	1
  8464  0573                     u3195:	
  8465  0573  35B1               	lslf	___ftdiv@f1,f
  8466  0574  0DB2               	rlf	___ftdiv@f1+1,f
  8467  0575  0DB3               	rlf	___ftdiv@f1+2,f
  8468  0576  0B89               	decfsz	9,f
  8469  0577  2D73               	goto	u3195
  8470  0578  3001               	movlw	1
  8471  0579  02B8               	subwf	___ftdiv@cntr,f
  8472  057A  1D03               	btfss	3,2
  8473  057B  2D59               	goto	l4242
  8474  057C  0839               	movf	___ftdiv@f3,w
  8475  057D  00A0               	movwf	___ftpack@arg
  8476  057E  083A               	movf	___ftdiv@f3+1,w
  8477  057F  00A1               	movwf	___ftpack@arg+1
  8478  0580  083B               	movf	___ftdiv@f3+2,w
  8479  0581  00A2               	movwf	___ftpack@arg+2
  8480  0582  083C               	movf	___ftdiv@exp,w
  8481  0583  00B4               	movwf	??___ftdiv
  8482  0584  0834               	movf	??___ftdiv,w
  8483  0585  00A3               	movwf	___ftpack@exp
  8484  0586  083D               	movf	___ftdiv@sign,w
  8485  0587  00B5               	movwf	??___ftdiv+1
  8486  0588  0835               	movf	??___ftdiv+1,w
  8487  0589  00A4               	movwf	___ftpack@sign
  8488  058A  318D  2591         	fcall	___ftpack
  8489  058C  0020               	movlb	0	; select bank0
  8490  058D  0820               	movf	?___ftpack,w
  8491  058E  00AE               	movwf	?___ftdiv
  8492  058F  0821               	movf	?___ftpack+1,w
  8493  0590  00AF               	movwf	?___ftdiv+1
  8494  0591  0822               	movf	?___ftpack+2,w
  8495  0592  00B0               	movwf	?___ftdiv+2
  8496  0593  0008               	return
  8497  0594                     __end_of___ftdiv:	
  8498                           
  8499                           	psect	text46
  8500  08F0                     __ptext46:	
  8501 ;; *************** function ___awtoft *****************
  8502 ;; Defined at:
  8503 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  c               2    8[BANK0 ] int 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  sign            1   13[BANK0 ] unsigned char 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  3    8[BANK0 ] float 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0, pclath, cstack
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8517 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;Total ram usage:        6 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    6
  8524 ;; This function calls:
  8525 ;;		___ftpack
  8526 ;; This function is called by:
  8527 ;;		_setPercentValue
  8528 ;;		_getPercentValue
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function ___awtoft
  8534  08F0                     ___awtoft:	
  8535                           
  8536                           ;incstack = 0
  8537                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8538  08F0  0020               	movlb	0	; select bank0
  8539  08F1  01AD               	clrf	___awtoft@sign
  8540  08F2  1FA9               	btfss	___awtoft@c+1,7
  8541  08F3  28FB               	goto	l4212
  8542  08F4  09A8               	comf	___awtoft@c,f
  8543  08F5  09A9               	comf	___awtoft@c+1,f
  8544  08F6  0AA8               	incf	___awtoft@c,f
  8545  08F7  1903               	skipnz
  8546  08F8  0AA9               	incf	___awtoft@c+1,f
  8547  08F9  01AD               	clrf	___awtoft@sign
  8548  08FA  0AAD               	incf	___awtoft@sign,f
  8549  08FB                     l4212:	
  8550  08FB  0828               	movf	___awtoft@c,w
  8551  08FC  00A0               	movwf	___ftpack@arg
  8552  08FD  0829               	movf	___awtoft@c+1,w
  8553  08FE  00A1               	movwf	___ftpack@arg+1
  8554  08FF  01A2               	clrf	___ftpack@arg+2
  8555  0900  308E               	movlw	142
  8556  0901  00AB               	movwf	??___awtoft
  8557  0902  082B               	movf	??___awtoft,w
  8558  0903  00A3               	movwf	___ftpack@exp
  8559  0904  082D               	movf	___awtoft@sign,w
  8560  0905  00AC               	movwf	??___awtoft+1
  8561  0906  082C               	movf	??___awtoft+1,w
  8562  0907  00A4               	movwf	___ftpack@sign
  8563  0908  318D  2591         	fcall	___ftpack
  8564  090A  0020               	movlb	0	; select bank0
  8565  090B  0820               	movf	?___ftpack,w
  8566  090C  00A8               	movwf	?___awtoft
  8567  090D  0821               	movf	?___ftpack+1,w
  8568  090E  00A9               	movwf	?___awtoft+1
  8569  090F  0822               	movf	?___ftpack+2,w
  8570  0910  00AA               	movwf	?___awtoft+2
  8571  0911  0008               	return
  8572  0912                     __end_of___awtoft:	
  8573                           
  8574                           	psect	text47
  8575  0D91                     __ptext47:	
  8576 ;; *************** function ___ftpack *****************
  8577 ;; Defined at:
  8578 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  arg             3    0[BANK0 ] unsigned um
  8581 ;;  exp             1    3[BANK0 ] unsigned char 
  8582 ;;  sign            1    4[BANK0 ] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  3    0[BANK0 ] float 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8594 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;Total ram usage:        8 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    5
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		___awtoft
  8605 ;;		___ftdiv
  8606 ;;		___ftmul
  8607 ;;		___ftadd
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___ftpack
  8613  0D91                     ___ftpack:	
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8617  0D91  0020               	movlb	0	; select bank0
  8618  0D92  0823               	movf	___ftpack@exp,w
  8619  0D93  1903               	btfsc	3,2
  8620  0D94  2D9A               	goto	l3988
  8621  0D95  0822               	movf	___ftpack@arg+2,w
  8622  0D96  0421               	iorwf	___ftpack@arg+1,w
  8623  0D97  0420               	iorwf	___ftpack@arg,w
  8624  0D98  1D03               	skipz
  8625  0D99  2DAB               	goto	l3994
  8626  0D9A                     l3988:	
  8627  0D9A  3000               	movlw	0
  8628  0D9B  00A0               	movwf	?___ftpack
  8629  0D9C  3000               	movlw	0
  8630  0D9D  00A1               	movwf	?___ftpack+1
  8631  0D9E  3000               	movlw	0
  8632  0D9F  00A2               	movwf	?___ftpack+2
  8633  0DA0  0008               	return
  8634  0DA1                     l3992:	
  8635  0DA1  3001               	movlw	1
  8636  0DA2  00A5               	movwf	??___ftpack
  8637  0DA3  0825               	movf	??___ftpack,w
  8638  0DA4  07A3               	addwf	___ftpack@exp,f
  8639  0DA5  3001               	movlw	1
  8640  0DA6                     u2815:	
  8641  0DA6  36A2               	lsrf	___ftpack@arg+2,f
  8642  0DA7  0CA1               	rrf	___ftpack@arg+1,f
  8643  0DA8  0CA0               	rrf	___ftpack@arg,f
  8644  0DA9  0B89               	decfsz	9,f
  8645  0DAA  2DA6               	goto	u2815
  8646  0DAB                     l3994:	
  8647  0DAB  30FE               	movlw	254
  8648  0DAC  0522               	andwf	___ftpack@arg+2,w
  8649  0DAD  1903               	btfsc	3,2
  8650  0DAE  2DC4               	goto	l2034
  8651  0DAF  2DA1               	goto	l3992
  8652  0DB0                     l3996:	
  8653  0DB0  3001               	movlw	1
  8654  0DB1  00A5               	movwf	??___ftpack
  8655  0DB2  0825               	movf	??___ftpack,w
  8656  0DB3  07A3               	addwf	___ftpack@exp,f
  8657  0DB4  3001               	movlw	1
  8658  0DB5  07A0               	addwf	___ftpack@arg,f
  8659  0DB6  3000               	movlw	0
  8660  0DB7  1803               	skipnc
  8661  0DB8  3001               	movlw	1
  8662  0DB9  07A1               	addwf	___ftpack@arg+1,f
  8663  0DBA  3000               	movlw	0
  8664  0DBB  1803               	skipnc
  8665  0DBC  3001               	movlw	1
  8666  0DBD  07A2               	addwf	___ftpack@arg+2,f
  8667  0DBE  3001               	movlw	1
  8668  0DBF                     u2835:	
  8669  0DBF  36A2               	lsrf	___ftpack@arg+2,f
  8670  0DC0  0CA1               	rrf	___ftpack@arg+1,f
  8671  0DC1  0CA0               	rrf	___ftpack@arg,f
  8672  0DC2  0B89               	decfsz	9,f
  8673  0DC3  2DBF               	goto	u2835
  8674  0DC4                     l2034:	
  8675  0DC4  30FF               	movlw	255
  8676  0DC5  0522               	andwf	___ftpack@arg+2,w
  8677  0DC6  1903               	btfsc	3,2
  8678  0DC7  2DD1               	goto	l4004
  8679  0DC8  2DB0               	goto	l3996
  8680  0DC9                     l4002:	
  8681  0DC9  3001               	movlw	1
  8682  0DCA  02A3               	subwf	___ftpack@exp,f
  8683  0DCB  3001               	movlw	1
  8684  0DCC                     u2855:	
  8685  0DCC  35A0               	lslf	___ftpack@arg,f
  8686  0DCD  0DA1               	rlf	___ftpack@arg+1,f
  8687  0DCE  0DA2               	rlf	___ftpack@arg+2,f
  8688  0DCF  0B89               	decfsz	9,f
  8689  0DD0  2DCC               	goto	u2855
  8690  0DD1                     l4004:	
  8691  0DD1  1FA1               	btfss	___ftpack@arg+1,7
  8692  0DD2  2DC9               	goto	l4002
  8693  0DD3  1823               	btfsc	___ftpack@exp,0
  8694  0DD4  2DDB               	goto	l2040
  8695  0DD5  30FF               	movlw	255
  8696  0DD6  05A0               	andwf	___ftpack@arg,f
  8697  0DD7  307F               	movlw	127
  8698  0DD8  05A1               	andwf	___ftpack@arg+1,f
  8699  0DD9  30FF               	movlw	255
  8700  0DDA  05A2               	andwf	___ftpack@arg+2,f
  8701  0DDB                     l2040:	
  8702  0DDB  1003               	clrc
  8703  0DDC  0CA3               	rrf	___ftpack@exp,f
  8704  0DDD  0823               	movf	___ftpack@exp,w
  8705  0DDE  00A5               	movwf	??___ftpack
  8706  0DDF  01A6               	clrf	??___ftpack+1
  8707  0DE0  01A7               	clrf	??___ftpack+2
  8708  0DE1  3010               	movlw	16
  8709  0DE2                     u2885:	
  8710  0DE2  35A5               	lslf	??___ftpack,f
  8711  0DE3  0DA6               	rlf	??___ftpack+1,f
  8712  0DE4  0DA7               	rlf	??___ftpack+2,f
  8713  0DE5  0B89               	decfsz	9,f
  8714  0DE6  2DE2               	goto	u2885
  8715  0DE7  0825               	movf	??___ftpack,w
  8716  0DE8  04A0               	iorwf	___ftpack@arg,f
  8717  0DE9  0826               	movf	??___ftpack+1,w
  8718  0DEA  04A1               	iorwf	___ftpack@arg+1,f
  8719  0DEB  0827               	movf	??___ftpack+2,w
  8720  0DEC  04A2               	iorwf	___ftpack@arg+2,f
  8721  0DED  0824               	movf	___ftpack@sign,w
  8722  0DEE  1903               	btfsc	3,2
  8723  0DEF  0008               	return
  8724  0DF0  17A2               	bsf	___ftpack@arg+2,7
  8725  0DF1  0008               	return
  8726  0DF2                     __end_of___ftpack:	
  8727                           
  8728                           	psect	text48
  8729  09EB                     __ptext48:	
  8730 ;; *************** function _Flash_Memory_Write *****************
  8731 ;; Defined at:
  8732 ;;		line 825 in file "../src/MCU_B1.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;		None
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  i               1    1[BANK0 ] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;		None               void
  8739 ;; Registers used:
  8740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;Total ram usage:        2 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    6
  8753 ;; This function calls:
  8754 ;;		_Flash_Memory_Unlock
  8755 ;; This function is called by:
  8756 ;;		_Flash_Memory_Initialization
  8757 ;;		_Flash_Memory_Modify
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           
  8762                           ;psect for function _Flash_Memory_Write
  8763  09EB                     _Flash_Memory_Write:	
  8764                           
  8765                           ;MCU_B1.c: 826: char i = 0;
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8769  09EB  0020               	movlb	0	; select bank0
  8770  09EC  01A1               	clrf	Flash_Memory_Write@i
  8771                           
  8772                           ;MCU_B1.c: 827: CFGS = 0;
  8773  09ED  0023               	movlb	3	; select bank3
  8774  09EE  1315               	bcf	21,6	;volatile
  8775                           
  8776                           ;MCU_B1.c: 828: PMADRH = 0x30;
  8777  09EF  3030               	movlw	48
  8778  09F0  0092               	movwf	18	;volatile
  8779                           
  8780                           ;MCU_B1.c: 829: PMDATH = 0;
  8781  09F1  0194               	clrf	20	;volatile
  8782                           
  8783                           ;MCU_B1.c: 830: FREE = 0;
  8784  09F2  1215               	bcf	21,4	;volatile
  8785                           
  8786                           ;MCU_B1.c: 831: LWLO = 1;
  8787  09F3  1695               	bsf	21,5	;volatile
  8788                           
  8789                           ;MCU_B1.c: 832: WREN = 1;
  8790  09F4  1515               	bsf	21,2	;volatile
  8791                           
  8792                           ;MCU_B1.c: 833: for (i = 0; i < 32; i++) {
  8793  09F5  0020               	movlb	0	; select bank0
  8794  09F6  01A1               	clrf	Flash_Memory_Write@i
  8795  09F7  3020               	movlw	32
  8796  09F8  0221               	subwf	Flash_Memory_Write@i,w
  8797  09F9  1803               	btfsc	3,0
  8798  09FA  2A15               	goto	l978
  8799  09FB                     l4102:	
  8800                           
  8801                           ;MCU_B1.c: 834: PMADRL = i;
  8802  09FB  0821               	movf	Flash_Memory_Write@i,w
  8803  09FC  0023               	movlb	3	; select bank3
  8804  09FD  0091               	movwf	17	;volatile
  8805                           
  8806                           ;MCU_B1.c: 835: PMDATL = Memory->Data[i];
  8807  09FE  0020               	movlb	0	; select bank0
  8808  09FF  0821               	movf	Flash_Memory_Write@i,w
  8809  0A00  076E               	addwf	_Memory,w
  8810  0A01  00A0               	movwf	??_Flash_Memory_Write
  8811  0A02  0820               	movf	??_Flash_Memory_Write,w
  8812  0A03  0086               	movwf	6
  8813  0A04  3001               	movlw	1	; select bank2/3
  8814  0A05  0087               	movwf	7
  8815  0A06  0801               	movf	1,w
  8816  0A07  0023               	movlb	3	; select bank3
  8817  0A08  0093               	movwf	19	;volatile
  8818                           
  8819                           ;MCU_B1.c: 836: Flash_Memory_Unlock();
  8820  0A09  3196  2642  3189   	fcall	_Flash_Memory_Unlock
  8821  0A0C  3001               	movlw	1
  8822  0A0D  0020               	movlb	0	; select bank0
  8823  0A0E  00A0               	movwf	??_Flash_Memory_Write
  8824  0A0F  0820               	movf	??_Flash_Memory_Write,w
  8825  0A10  07A1               	addwf	Flash_Memory_Write@i,f
  8826  0A11  3020               	movlw	32
  8827  0A12  0221               	subwf	Flash_Memory_Write@i,w
  8828  0A13  1C03               	skipc
  8829  0A14  29FB               	goto	l4102
  8830  0A15                     l978:	
  8831                           
  8832                           ;MCU_B1.c: 837: }
  8833                           ;MCU_B1.c: 838: LWLO = 0;
  8834  0A15  0023               	movlb	3	; select bank3
  8835  0A16  1295               	bcf	21,5	;volatile
  8836                           
  8837                           ;MCU_B1.c: 839: Flash_Memory_Unlock();
  8838  0A17  3196  2642         	fcall	_Flash_Memory_Unlock
  8839                           
  8840                           ;MCU_B1.c: 840: WREN = 0;
  8841  0A19  0023               	movlb	3	; select bank3
  8842  0A1A  1115               	bcf	21,2	;volatile
  8843  0A1B  0008               	return
  8844  0A1C                     __end_of_Flash_Memory_Write:	
  8845                           
  8846                           	psect	text49
  8847  1642                     __ptext49:	
  8848 ;; *************** function _Flash_Memory_Unlock *****************
  8849 ;; Defined at:
  8850 ;;		line 804 in file "../src/MCU_B1.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;		None               void
  8857 ;; Registers used:
  8858 ;;		wreg
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    5
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_Flash_Memory_Write
  8875 ;;		_Flash_Memory_Erasing
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           
  8880                           ;psect for function _Flash_Memory_Unlock
  8881  1642                     _Flash_Memory_Unlock:	
  8882                           
  8883                           ;MCU_B1.c: 805: PMCON2 = 0x55;
  8884                           
  8885                           ;incstack = 0
  8886                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  8887  1642  3055               	movlw	85
  8888  1643  0023               	movlb	3	; select bank3
  8889  1644  0096               	movwf	22	;volatile
  8890                           
  8891                           ;MCU_B1.c: 806: PMCON2 = 0xaa;
  8892  1645  30AA               	movlw	170
  8893  1646  0096               	movwf	22	;volatile
  8894                           
  8895                           ;MCU_B1.c: 807: WR = 1;
  8896  1647  1495               	bsf	21,1	;volatile
  8897                           
  8898                           ;MCU_B1.c: 808: __nop();
  8899  1648  0000               	nop
  8900                           
  8901                           ;MCU_B1.c: 809: __nop();
  8902  1649  0000               	nop
  8903  164A  0008               	return
  8904  164B                     __end_of_Flash_Memory_Unlock:	
  8905                           
  8906                           	psect	text50
  8907  0864                     __ptext50:	
  8908 ;; *************** function _Flash_Memory_Read *****************
  8909 ;; Defined at:
  8910 ;;		line 813 in file "../src/MCU_B1.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  address         1    wreg     unsigned char 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  address         1    2[BANK0 ] unsigned char 
  8915 ;;  ret             1    3[BANK0 ] unsigned char 
  8916 ;;  i               1    1[BANK0 ] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      unsigned char 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;Total ram usage:        4 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    5
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_Flash_Memory_Initialization
  8937 ;;		_Flash_Memory_Modify
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function _Flash_Memory_Read
  8943  0864                     _Flash_Memory_Read:	
  8944                           
  8945                           ;incstack = 0
  8946                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  8947                           ;Flash_Memory_Read@address stored from wreg
  8948  0864  0020               	movlb	0	; select bank0
  8949  0865  00A2               	movwf	Flash_Memory_Read@address
  8950                           
  8951                           ;MCU_B1.c: 814: char i = 0, ret = 0;
  8952  0866  01A1               	clrf	Flash_Memory_Read@i
  8953  0867  01A3               	clrf	Flash_Memory_Read@ret
  8954                           
  8955                           ;MCU_B1.c: 815: PMADRH = 0x30;
  8956  0868  3030               	movlw	48
  8957  0869  0023               	movlb	3	; select bank3
  8958  086A  0092               	movwf	18	;volatile
  8959                           
  8960                           ;MCU_B1.c: 816: PMADRL = address;
  8961  086B  0020               	movlb	0	; select bank0
  8962  086C  0822               	movf	Flash_Memory_Read@address,w
  8963  086D  0023               	movlb	3	; select bank3
  8964  086E  0091               	movwf	17	;volatile
  8965                           
  8966                           ;MCU_B1.c: 817: CFGS = 0;
  8967  086F  1315               	bcf	21,6	;volatile
  8968                           
  8969                           ;MCU_B1.c: 818: RD = 1;
  8970  0870  1415               	bsf	21,0	;volatile
  8971                           
  8972                           ;MCU_B1.c: 819: i = PMDATH;
  8973  0871  0814               	movf	20,w	;volatile
  8974  0872  0020               	movlb	0	; select bank0
  8975  0873  00A0               	movwf	??_Flash_Memory_Read
  8976  0874  0820               	movf	??_Flash_Memory_Read,w
  8977  0875  00A1               	movwf	Flash_Memory_Read@i
  8978                           
  8979                           ;MCU_B1.c: 820: ret = PMDATL;
  8980  0876  0023               	movlb	3	; select bank3
  8981  0877  0813               	movf	19,w	;volatile
  8982  0878  0020               	movlb	0	; select bank0
  8983  0879  00A0               	movwf	??_Flash_Memory_Read
  8984  087A  0820               	movf	??_Flash_Memory_Read,w
  8985  087B  00A3               	movwf	Flash_Memory_Read@ret
  8986                           
  8987                           ;MCU_B1.c: 821: return ret;
  8988  087C  0823               	movf	Flash_Memory_Read@ret,w
  8989  087D  0008               	return
  8990  087E                     __end_of_Flash_Memory_Read:	
  8991                           
  8992                           	psect	text51
  8993  166B                     __ptext51:	
  8994 ;; *************** function _DimmerLights_Main *****************
  8995 ;; Defined at:
  8996 ;;		line 407 in file "../src/Dimmer_B1.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;		None
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;		None               void
  9003 ;; Registers used:
  9004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;Total ram usage:        0 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    9
  9017 ;; This function calls:
  9018 ;;		_DimmerLights_Close
  9019 ;;		_setDimmerLights_Main
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _DimmerLights_Main
  9027  166B                     _DimmerLights_Main:	
  9028                           
  9029                           ;Dimmer_B1.c: 410: setDimmerLights_Main(1);
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9033  166B  3001               	movlw	1
  9034  166C  318E  26BB  3196   	fcall	_setDimmerLights_Main
  9035                           
  9036                           ;Dimmer_B1.c: 414: setDimmerLights_Main(2);
  9037  166F  3002               	movlw	2
  9038  1670  318E  26BB  3196   	fcall	_setDimmerLights_Main
  9039                           
  9040                           ;Dimmer_B1.c: 421: DimmerLights_Close();
  9041  1673  3197  27D7         	fcall	_DimmerLights_Close
  9042  1675  0008               	return
  9043  1676                     __end_of_DimmerLights_Main:	
  9044                           
  9045                           	psect	text52
  9046  0EBB                     __ptext52:	
  9047 ;; *************** function _setDimmerLights_Main *****************
  9048 ;; Defined at:
  9049 ;;		line 425 in file "../src/Dimmer_B1.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  lights          1    wreg     unsigned char 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;  lights          1   14[BANK0 ] unsigned char 
  9054 ;;  clear           1   13[BANK0 ] unsigned char 
  9055 ;; Return value:  Size  Location     Type
  9056 ;;		None               void
  9057 ;; Registers used:
  9058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;Total ram usage:        2 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    8
  9071 ;; This function calls:
  9072 ;;		_DimmerLightsPointSelect
  9073 ;;		_setBuz
  9074 ;;		_setDimmerLights
  9075 ;;		_setDimmerLights_Adj
  9076 ;; This function is called by:
  9077 ;;		_DimmerLights_Main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _setDimmerLights_Main
  9083  0EBB                     _setDimmerLights_Main:	
  9084                           
  9085                           ;incstack = 0
  9086                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9087                           ;setDimmerLights_Main@lights stored from wreg
  9088  0EBB  0020               	movlb	0	; select bank0
  9089  0EBC  00AE               	movwf	setDimmerLights_Main@lights
  9090                           
  9091                           ;Dimmer_B1.c: 426: char clear = 1;
  9092  0EBD  01AD               	clrf	setDimmerLights_Main@clear
  9093  0EBE  0AAD               	incf	setDimmerLights_Main@clear,f
  9094                           
  9095                           ;Dimmer_B1.c: 427: DimmerLightsPointSelect(lights);
  9096  0EBF  082E               	movf	setDimmerLights_Main@lights,w
  9097  0EC0  3197  2789  318E   	fcall	_DimmerLightsPointSelect
  9098                           
  9099                           ;Dimmer_B1.c: 440: if (lights == 1) {
  9100  0EC3  0020               	movlb	0	; select bank0
  9101  0EC4  082E               	movf	setDimmerLights_Main@lights,w
  9102  0EC5  3A01               	xorlw	1
  9103  0EC6  1D03               	skipz
  9104  0EC7  2ECF               	goto	l4472
  9105                           
  9106                           ;Dimmer_B1.c: 441: clear = (DimmerLights2.Clear == 0) ? 0 : 1;
  9107  0EC8  3000               	movlw	0
  9108  0EC9  0021               	movlb	1	; select bank1
  9109  0ECA  1938               	btfsc	(_DimmerLights2^(0+128)+9),2
  9110  0ECB  3001               	movlw	1
  9111  0ECC  0020               	movlb	0	; select bank0
  9112  0ECD  00AD               	movwf	setDimmerLights_Main@clear
  9113                           
  9114                           ;Dimmer_B1.c: 442: } else if (lights == 2) {
  9115  0ECE  2ED9               	goto	l4476
  9116  0ECF                     l4472:	
  9117  0ECF  082E               	movf	setDimmerLights_Main@lights,w
  9118  0ED0  3A02               	xorlw	2
  9119  0ED1  1D03               	skipz
  9120  0ED2  2ED9               	goto	l4476
  9121                           
  9122                           ;Dimmer_B1.c: 443: clear = (DimmerLights1.Clear == 0) ? 0 : 1;
  9123  0ED3  3000               	movlw	0
  9124  0ED4  0021               	movlb	1	; select bank1
  9125  0ED5  1929               	btfsc	(_DimmerLights1^(0+128)+9),2
  9126  0ED6  3001               	movlw	1
  9127  0ED7  0020               	movlb	0	; select bank0
  9128  0ED8  00AD               	movwf	setDimmerLights_Main@clear
  9129  0ED9                     l4476:	
  9130                           
  9131                           ;Dimmer_B1.c: 444: }
  9132                           ;Dimmer_B1.c: 447: if (DimmerLights->Trigger == 1) {
  9133  0ED9  0859               	movf	_DimmerLights,w
  9134  0EDA  3E08               	addlw	8
  9135  0EDB  0086               	movwf	6
  9136  0EDC  0187               	clrf	7
  9137  0EDD  1D01               	btfss	1,2
  9138  0EDE  2EFA               	goto	l4486
  9139                           
  9140                           ;Dimmer_B1.c: 448: if (clear == 1) {
  9141  0EDF  082D               	movf	setDimmerLights_Main@clear,w
  9142  0EE0  3A01               	xorlw	1
  9143  0EE1  1D03               	skipz
  9144  0EE2  0008               	return
  9145                           
  9146                           ;Dimmer_B1.c: 449: DimmerLights->Trigger = 0;
  9147  0EE3  0859               	movf	_DimmerLights,w
  9148  0EE4  3E08               	addlw	8
  9149  0EE5  0086               	movwf	6
  9150  0EE6  0187               	clrf	7
  9151  0EE7  1101               	bcf	1,2
  9152                           
  9153                           ;Dimmer_B1.c: 450: if (DimmerLights->Switch == 1) {
  9154  0EE8  0859               	movf	_DimmerLights,w
  9155  0EE9  3E08               	addlw	8
  9156  0EEA  0086               	movwf	6
  9157  0EEB  0187               	clrf	7
  9158  0EEC  1C81               	btfss	1,1
  9159  0EED  2EF4               	goto	l4484
  9160                           
  9161                           ;Dimmer_B1.c: 451: setDimmerLights(lights, 1);
  9162  0EEE  01A4               	clrf	setDimmerLights@status
  9163  0EEF  0AA4               	incf	setDimmerLights@status,f
  9164  0EF0  082E               	movf	setDimmerLights_Main@lights,w
  9165  0EF1  318F  2791         	fcall	_setDimmerLights
  9166                           
  9167                           ;Dimmer_B1.c: 452: } else {
  9168  0EF3  0008               	return
  9169  0EF4                     l4484:	
  9170                           
  9171                           ;Dimmer_B1.c: 453: setDimmerLights(lights, 0);
  9172  0EF4  0020               	movlb	0	; select bank0
  9173  0EF5  01A4               	clrf	setDimmerLights@status
  9174  0EF6  082E               	movf	setDimmerLights_Main@lights,w
  9175  0EF7  318F  2791         	fcall	_setDimmerLights
  9176                           
  9177                           ;Dimmer_B1.c: 454: }
  9178                           ;Dimmer_B1.c: 458: }
  9179                           ;Dimmer_B1.c: 459: } else {
  9180  0EF9  0008               	return
  9181  0EFA                     l4486:	
  9182                           
  9183                           ;Dimmer_B1.c: 460: if (DimmerLights->TriggerAdj == 1) {
  9184  0EFA  0020               	movlb	0	; select bank0
  9185  0EFB  0859               	movf	_DimmerLights,w
  9186  0EFC  3E08               	addlw	8
  9187  0EFD  0086               	movwf	6
  9188  0EFE  0187               	clrf	7
  9189  0EFF  1E01               	btfss	1,4
  9190  0F00  0008               	return
  9191                           
  9192                           ;Dimmer_B1.c: 461: if (clear == 1) {
  9193  0F01  082D               	movf	setDimmerLights_Main@clear,w
  9194  0F02  3A01               	xorlw	1
  9195  0F03  1D03               	skipz
  9196  0F04  0008               	return
  9197                           
  9198                           ;Dimmer_B1.c: 462: DimmerLights->TriggerAdj = 0;
  9199  0F05  0859               	movf	_DimmerLights,w
  9200  0F06  3E08               	addlw	8
  9201  0F07  0086               	movwf	6
  9202  0F08  0187               	clrf	7
  9203  0F09  1201               	bcf	1,4
  9204                           
  9205                           ;Dimmer_B1.c: 463: if (DimmerLights->AdjGo == 1) {
  9206  0F0A  0859               	movf	_DimmerLights,w
  9207  0F0B  3E08               	addlw	8
  9208  0F0C  0086               	movwf	6
  9209  0F0D  0187               	clrf	7
  9210  0F0E  1D81               	btfss	1,3
  9211  0F0F  2F1F               	goto	l4494
  9212                           
  9213                           ;Dimmer_B1.c: 464: setDimmerLights_Adj(lights, 1);
  9214  0F10  01A2               	clrf	setDimmerLights_Adj@status
  9215  0F11  0AA2               	incf	setDimmerLights_Adj@status,f
  9216  0F12  082E               	movf	setDimmerLights_Main@lights,w
  9217  0F13  3189  218D  318E   	fcall	_setDimmerLights_Adj
  9218                           
  9219                           ;Dimmer_B1.c: 465: setBuz(1, 100);
  9220  0F16  3064               	movlw	100
  9221  0F17  0020               	movlb	0	; select bank0
  9222  0F18  00A9               	movwf	setBuz@time
  9223  0F19  3000               	movlw	0
  9224  0F1A  00AA               	movwf	setBuz@time+1
  9225  0F1B  3001               	movlw	1
  9226  0F1C  3186  26B8         	fcall	_setBuz
  9227                           
  9228                           ;Dimmer_B1.c: 466: } else {
  9229  0F1E  0008               	return
  9230  0F1F                     l4494:	
  9231                           
  9232                           ;Dimmer_B1.c: 467: setDimmerLights_Adj(lights, 0);
  9233  0F1F  0020               	movlb	0	; select bank0
  9234  0F20  01A2               	clrf	setDimmerLights_Adj@status
  9235  0F21  082E               	movf	setDimmerLights_Main@lights,w
  9236  0F22  3189  218D         	fcall	_setDimmerLights_Adj
  9237  0F24  0008               	return
  9238  0F25                     __end_of_setDimmerLights_Main:	
  9239                           
  9240                           	psect	text53
  9241  098D                     __ptext53:	
  9242 ;; *************** function _setDimmerLights_Adj *****************
  9243 ;; Defined at:
  9244 ;;		line 646 in file "../src/Dimmer_B1.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  lights          1    wreg     unsigned char 
  9247 ;;  status          1    2[BANK0 ] unsigned char 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  lights          1    4[BANK0 ] unsigned char 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;		None               void
  9252 ;; Registers used:
  9253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9259 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;Total ram usage:        3 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    6
  9266 ;; This function calls:
  9267 ;;		_DimmerLightsPointSelect
  9268 ;; This function is called by:
  9269 ;;		_setDimmerLights_Main
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function _setDimmerLights_Adj
  9275  098D                     _setDimmerLights_Adj:	
  9276                           
  9277                           ;incstack = 0
  9278                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9279                           ;setDimmerLights_Adj@lights stored from wreg
  9280  098D  0020               	movlb	0	; select bank0
  9281  098E  00A4               	movwf	setDimmerLights_Adj@lights
  9282                           
  9283                           ;Dimmer_B1.c: 647: DimmerLightsPointSelect(lights);
  9284  098F  0824               	movf	setDimmerLights_Adj@lights,w
  9285  0990  3197  2789  3189   	fcall	_DimmerLightsPointSelect
  9286                           
  9287                           ;Dimmer_B1.c: 648: if (status == 1) {
  9288  0993  0020               	movlb	0	; select bank0
  9289  0994  0822               	movf	setDimmerLights_Adj@status,w
  9290  0995  3A01               	xorlw	1
  9291  0996  1D03               	skipz
  9292  0997  29A1               	goto	l4060
  9293                           
  9294                           ;Dimmer_B1.c: 649: DimmerLights->AdjFlag = 1;
  9295  0998  0859               	movf	_DimmerLights,w
  9296  0999  0086               	movwf	6
  9297  099A  0187               	clrf	7
  9298  099B  1581               	bsf	1,3
  9299                           
  9300                           ;Dimmer_B1.c: 650: DimmerLights->Signal = 1;
  9301  099C  0859               	movf	_DimmerLights,w
  9302  099D  0086               	movwf	6
  9303  099E  0187               	clrf	7
  9304  099F  1481               	bsf	1,1
  9305                           
  9306                           ;Dimmer_B1.c: 651: } else {
  9307  09A0  0008               	return
  9308  09A1                     l4060:	
  9309                           
  9310                           ;Dimmer_B1.c: 652: if (DimmerLights->AdjFlag == 1) {
  9311  09A1  0859               	movf	_DimmerLights,w
  9312  09A2  0086               	movwf	6
  9313  09A3  0187               	clrf	7
  9314  09A4  1D81               	btfss	1,3
  9315  09A5  0008               	return
  9316                           
  9317                           ;Dimmer_B1.c: 654: DimmerLights->Signal = 0;
  9318  09A6  0859               	movf	_DimmerLights,w
  9319  09A7  0086               	movwf	6
  9320  09A8  0187               	clrf	7
  9321  09A9  1081               	bcf	1,1
  9322                           
  9323                           ;Dimmer_B1.c: 655: DimmerLights->AdjFlag = 0;
  9324  09AA  0859               	movf	_DimmerLights,w
  9325  09AB  0086               	movwf	6
  9326  09AC  0187               	clrf	7
  9327  09AD  1181               	bcf	1,3
  9328                           
  9329                           ;Dimmer_B1.c: 656: ;;
  9330                           ;Dimmer_B1.c: 657: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  9331  09AE  0859               	movf	_DimmerLights,w
  9332  09AF  3E04               	addlw	4
  9333  09B0  0086               	movwf	6
  9334  09B1  0187               	clrf	7
  9335  09B2  0801               	movf	1,w
  9336  09B3  00A3               	movwf	??_setDimmerLights_Adj
  9337  09B4  0859               	movf	_DimmerLights,w
  9338  09B5  3E05               	addlw	5
  9339  09B6  0086               	movwf	6
  9340  09B7  0187               	clrf	7
  9341  09B8  0823               	movf	??_setDimmerLights_Adj,w
  9342  09B9  0081               	movwf	1
  9343                           
  9344                           ;Dimmer_B1.c: 665: ;;
  9345                           ;Dimmer_B1.c: 666: ;;
  9346  09BA  0008               	return
  9347  09BB                     __end_of_setDimmerLights_Adj:	
  9348                           
  9349                           	psect	text54
  9350  0F91                     __ptext54:	
  9351 ;; *************** function _setDimmerLights *****************
  9352 ;; Defined at:
  9353 ;;		line 593 in file "../src/Dimmer_B1.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  lights          1    wreg     unsigned char 
  9356 ;;  status          1    4[BANK0 ] unsigned char 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  lights          1    6[BANK0 ] unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;		None               void
  9361 ;; Registers used:
  9362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9368 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;Total ram usage:        3 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    7
  9375 ;; This function calls:
  9376 ;;		_DimmerLightsPointSelect
  9377 ;;		_setLED
  9378 ;;		_setMemory_GO
  9379 ;; This function is called by:
  9380 ;;		_setDimmerLights_Main
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function _setDimmerLights
  9386  0F91                     _setDimmerLights:	
  9387                           
  9388                           ;incstack = 0
  9389                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9390                           ;setDimmerLights@lights stored from wreg
  9391  0F91  0020               	movlb	0	; select bank0
  9392  0F92  00A6               	movwf	setDimmerLights@lights
  9393                           
  9394                           ;Dimmer_B1.c: 594: DimmerLightsPointSelect(lights);
  9395  0F93  0826               	movf	setDimmerLights@lights,w
  9396  0F94  3197  2789  318F   	fcall	_DimmerLightsPointSelect
  9397                           
  9398                           ;Dimmer_B1.c: 595: Dimmer->Load = lights;
  9399  0F97  0020               	movlb	0	; select bank0
  9400  0F98  0826               	movf	setDimmerLights@lights,w
  9401  0F99  00A5               	movwf	??_setDimmerLights
  9402  0F9A  0A58               	incf	_Dimmer,w
  9403  0F9B  0086               	movwf	6
  9404  0F9C  0187               	clrf	7
  9405  0F9D  0825               	movf	??_setDimmerLights,w
  9406  0F9E  0081               	movwf	1
  9407                           
  9408                           ;Dimmer_B1.c: 596: if (status == 1) {
  9409  0F9F  0824               	movf	setDimmerLights@status,w
  9410  0FA0  3A01               	xorlw	1
  9411  0FA1  1D03               	skipz
  9412  0FA2  2FDB               	goto	l4052
  9413                           
  9414                           ;Dimmer_B1.c: 597: DimmerLights->Status = 1;
  9415  0FA3  0859               	movf	_DimmerLights,w
  9416  0FA4  0086               	movwf	6
  9417  0FA5  0187               	clrf	7
  9418  0FA6  1681               	bsf	1,5
  9419                           
  9420                           ;Dimmer_B1.c: 598: setLED(lights, 0);
  9421  0FA7  01A2               	clrf	setLED@command
  9422  0FA8  0826               	movf	setDimmerLights@lights,w
  9423  0FA9  318D  2536  318F   	fcall	_setLED
  9424                           
  9425                           ;Dimmer_B1.c: 600: ;;
  9426                           ;Dimmer_B1.c: 602: DimmerLights->Signal = 1;
  9427  0FAC  0020               	movlb	0	; select bank0
  9428  0FAD  0859               	movf	_DimmerLights,w
  9429  0FAE  0086               	movwf	6
  9430  0FAF  0187               	clrf	7
  9431  0FB0  1481               	bsf	1,1
  9432                           
  9433                           ;Dimmer_B1.c: 603: DimmerLights->DimmingTimeValue = 7;
  9434  0FB1  3007               	movlw	7
  9435  0FB2  00A5               	movwf	??_setDimmerLights
  9436  0FB3  0859               	movf	_DimmerLights,w
  9437  0FB4  3E02               	addlw	2
  9438  0FB5  0086               	movwf	6
  9439  0FB6  0187               	clrf	7
  9440  0FB7  0825               	movf	??_setDimmerLights,w
  9441  0FB8  0081               	movwf	1
  9442                           
  9443                           ;Dimmer_B1.c: 605: if (DimmerLights->StatusFlag == 0) {
  9444  0FB9  0859               	movf	_DimmerLights,w
  9445  0FBA  0086               	movwf	6
  9446  0FBB  0187               	clrf	7
  9447  0FBC  1B01               	btfsc	1,6
  9448  0FBD  0008               	return
  9449                           
  9450                           ;Dimmer_B1.c: 606: DimmerLights->StatusFlag = 1;
  9451  0FBE  0859               	movf	_DimmerLights,w
  9452  0FBF  0086               	movwf	6
  9453  0FC0  0187               	clrf	7
  9454  0FC1  1701               	bsf	1,6
  9455                           
  9456                           ;Dimmer_B1.c: 607: ;;
  9457                           ;Dimmer_B1.c: 608: setMemory_GO(0);
  9458  0FC2  3000               	movlw	0
  9459  0FC3  3188  2098         	fcall	_setMemory_GO
  9460                           
  9461                           ;Dimmer_B1.c: 611: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9462  0FC5  0020               	movlb	0	; select bank0
  9463  0FC6  0859               	movf	_DimmerLights,w
  9464  0FC7  3E05               	addlw	5
  9465  0FC8  0086               	movwf	6
  9466  0FC9  0187               	clrf	7
  9467  0FCA  0801               	movf	1,w
  9468  0FCB  00A5               	movwf	??_setDimmerLights
  9469  0FCC  0859               	movf	_DimmerLights,w
  9470  0FCD  3E04               	addlw	4
  9471  0FCE  0086               	movwf	6
  9472  0FCF  0187               	clrf	7
  9473  0FD0  0825               	movf	??_setDimmerLights,w
  9474  0FD1  0081               	movwf	1
  9475                           
  9476                           ;Dimmer_B1.c: 615: DimmerLights->DimmingValue = ((char)((100-60)*0.8));
  9477  0FD2  3020               	movlw	32
  9478  0FD3  00A5               	movwf	??_setDimmerLights
  9479  0FD4  0859               	movf	_DimmerLights,w
  9480  0FD5  3E04               	addlw	4
  9481  0FD6  0086               	movwf	6
  9482  0FD7  0187               	clrf	7
  9483  0FD8  0825               	movf	??_setDimmerLights,w
  9484  0FD9  0081               	movwf	1
  9485                           
  9486                           ;Dimmer_B1.c: 617: }
  9487                           ;Dimmer_B1.c: 618: } else {
  9488  0FDA  0008               	return
  9489  0FDB                     l4052:	
  9490                           
  9491                           ;Dimmer_B1.c: 619: DimmerLights->Status = 0;
  9492  0FDB  0859               	movf	_DimmerLights,w
  9493  0FDC  0086               	movwf	6
  9494  0FDD  0187               	clrf	7
  9495  0FDE  1281               	bcf	1,5
  9496                           
  9497                           ;Dimmer_B1.c: 621: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9498  0FDF  0859               	movf	_DimmerLights,w
  9499  0FE0  3E06               	addlw	6
  9500  0FE1  0086               	movwf	6
  9501  0FE2  0187               	clrf	7
  9502  0FE3  0801               	movf	1,w
  9503  0FE4  00A5               	movwf	??_setDimmerLights
  9504  0FE5  0859               	movf	_DimmerLights,w
  9505  0FE6  3E04               	addlw	4
  9506  0FE7  0086               	movwf	6
  9507  0FE8  0187               	clrf	7
  9508  0FE9  0825               	movf	??_setDimmerLights,w
  9509  0FEA  0081               	movwf	1
  9510                           
  9511                           ;Dimmer_B1.c: 628: DimmerLights->Signal = 1;
  9512  0FEB  0859               	movf	_DimmerLights,w
  9513  0FEC  0086               	movwf	6
  9514  0FED  0187               	clrf	7
  9515  0FEE  1481               	bsf	1,1
  9516                           
  9517                           ;Dimmer_B1.c: 629: DimmerLights->AdjFlag = 0;
  9518  0FEF  0859               	movf	_DimmerLights,w
  9519  0FF0  0086               	movwf	6
  9520  0FF1  0187               	clrf	7
  9521  0FF2  1181               	bcf	1,3
  9522                           
  9523                           ;Dimmer_B1.c: 630: DimmerLights->AdjStatus = 0;
  9524  0FF3  0859               	movf	_DimmerLights,w
  9525  0FF4  0086               	movwf	6
  9526  0FF5  0187               	clrf	7
  9527  0FF6  1201               	bcf	1,4
  9528                           
  9529                           ;Dimmer_B1.c: 631: DimmerLights->DimmingTimeValue = 7;
  9530  0FF7  3007               	movlw	7
  9531  0FF8  00A5               	movwf	??_setDimmerLights
  9532  0FF9  0859               	movf	_DimmerLights,w
  9533  0FFA  3E02               	addlw	2
  9534  0FFB  0086               	movwf	6
  9535  0FFC  0187               	clrf	7
  9536  0FFD  0825               	movf	??_setDimmerLights,w
  9537  0FFE  0081               	movwf	1
  9538  0FFF  0008               	return
  9539  1000                     __end_of_setDimmerLights:	
  9540                           
  9541                           	psect	text55
  9542  0D36                     __ptext55:	
  9543 ;; *************** function _setLED *****************
  9544 ;; Defined at:
  9545 ;;		line 74 in file "../src/LED_B1.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  led             1    wreg     unsigned char 
  9548 ;;  command         1    2[BANK0 ] unsigned char 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  led             1    3[BANK0 ] unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;		None               void
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9560 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;Total ram usage:        2 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:    6
  9567 ;; This function calls:
  9568 ;;		_LedPointSelect
  9569 ;; This function is called by:
  9570 ;;		_setDimmerLights_ERROR
  9571 ;;		_setDimmerLights
  9572 ;;		_setLED_Initialization
  9573 ;;		_setOverTemp_Exceptions
  9574 ;;		_setSw_Initialization
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           
  9579                           ;psect for function _setLED
  9580  0D36                     _setLED:	
  9581                           
  9582                           ;incstack = 0
  9583                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9584                           ;setLED@led stored from wreg
  9585  0D36  0020               	movlb	0	; select bank0
  9586  0D37  00A3               	movwf	setLED@led
  9587                           
  9588                           ;LED_B1.c: 76: LedPointSelect(led);
  9589  0D38  0823               	movf	setLED@led,w
  9590  0D39  3188  20B3  318D   	fcall	_LedPointSelect
  9591                           
  9592                           ;LED_B1.c: 77: if(command == 0)
  9593  0D3C  0020               	movlb	0	; select bank0
  9594  0D3D  08A2               	movf	setLED@command,f
  9595  0D3E  1D03               	skipz
  9596  0D3F  2D52               	goto	l3732
  9597                           
  9598                           ;LED_B1.c: 78: {
  9599                           ;LED_B1.c: 80: if(led == 1)
  9600  0D40  0823               	movf	setLED@led,w
  9601  0D41  3A01               	xorlw	1
  9602  0D42  1D03               	skipz
  9603  0D43  2D46               	goto	l3724
  9604                           
  9605                           ;LED_B1.c: 81: {
  9606                           ;LED_B1.c: 85: RA3=1;
  9607  0D44  158C               	bsf	12,3	;volatile
  9608                           
  9609                           ;LED_B1.c: 87: }
  9610  0D45  0008               	return
  9611  0D46                     l3724:	
  9612                           
  9613                           ;LED_B1.c: 90: else if(led == 2)
  9614  0D46  0823               	movf	setLED@led,w
  9615  0D47  3A02               	xorlw	2
  9616  0D48  1D03               	skipz
  9617  0D49  2D4C               	goto	l3728
  9618                           
  9619                           ;LED_B1.c: 91: {
  9620                           ;LED_B1.c: 95: RC7=1;
  9621  0D4A  178E               	bsf	14,7	;volatile
  9622                           
  9623                           ;LED_B1.c: 97: }
  9624  0D4B  0008               	return
  9625  0D4C                     l3728:	
  9626                           
  9627                           ;LED_B1.c: 110: else if(led == 99)
  9628  0D4C  0823               	movf	setLED@led,w
  9629  0D4D  3A63               	xorlw	99
  9630  0D4E  1D03               	skipz
  9631  0D4F  0008               	return
  9632                           
  9633                           ;LED_B1.c: 111: {
  9634                           ;LED_B1.c: 115: RB5=1;
  9635  0D50  168D               	bsf	13,5	;volatile
  9636                           
  9637                           ;LED_B1.c: 117: }
  9638                           ;LED_B1.c: 119: }
  9639  0D51  0008               	return
  9640  0D52                     l3732:	
  9641                           
  9642                           ;LED_B1.c: 120: else if(command == 1)
  9643  0D52  0822               	movf	setLED@command,w
  9644  0D53  3A01               	xorlw	1
  9645  0D54  1D03               	skipz
  9646  0D55  2D68               	goto	l3746
  9647                           
  9648                           ;LED_B1.c: 121: {
  9649                           ;LED_B1.c: 123: if(led == 1)
  9650  0D56  0823               	movf	setLED@led,w
  9651  0D57  3A01               	xorlw	1
  9652  0D58  1D03               	skipz
  9653  0D59  2D5C               	goto	l3738
  9654                           
  9655                           ;LED_B1.c: 124: {
  9656                           ;LED_B1.c: 128: RA3=0;
  9657  0D5A  118C               	bcf	12,3	;volatile
  9658                           
  9659                           ;LED_B1.c: 130: }
  9660  0D5B  0008               	return
  9661  0D5C                     l3738:	
  9662                           
  9663                           ;LED_B1.c: 133: else if(led == 2)
  9664  0D5C  0823               	movf	setLED@led,w
  9665  0D5D  3A02               	xorlw	2
  9666  0D5E  1D03               	skipz
  9667  0D5F  2D62               	goto	l3742
  9668                           
  9669                           ;LED_B1.c: 134: {
  9670                           ;LED_B1.c: 138: RC7=0;
  9671  0D60  138E               	bcf	14,7	;volatile
  9672                           
  9673                           ;LED_B1.c: 140: }
  9674  0D61  0008               	return
  9675  0D62                     l3742:	
  9676                           
  9677                           ;LED_B1.c: 153: else if(led == 99)
  9678  0D62  0823               	movf	setLED@led,w
  9679  0D63  3A63               	xorlw	99
  9680  0D64  1D03               	skipz
  9681  0D65  0008               	return
  9682                           
  9683                           ;LED_B1.c: 154: {
  9684                           ;LED_B1.c: 158: RB5=0;
  9685  0D66  128D               	bcf	13,5	;volatile
  9686                           
  9687                           ;LED_B1.c: 160: }
  9688                           ;LED_B1.c: 162: }
  9689  0D67  0008               	return
  9690  0D68                     l3746:	
  9691                           
  9692                           ;LED_B1.c: 163: else if(command == 10)
  9693  0D68  0822               	movf	setLED@command,w
  9694  0D69  3A0A               	xorlw	10
  9695  0D6A  1D03               	skipz
  9696  0D6B  2D88               	goto	l3762
  9697                           
  9698                           ;LED_B1.c: 164: {
  9699                           ;LED_B1.c: 165: LED->GO=0;
  9700  0D6C  085A               	movf	_LED,w
  9701  0D6D  0086               	movwf	6
  9702  0D6E  0187               	clrf	7
  9703  0D6F  1081               	bcf	1,1
  9704                           
  9705                           ;LED_B1.c: 166: LED->Time=0;
  9706  0D70  0A5A               	incf	_LED,w
  9707  0D71  0086               	movwf	6
  9708  0D72  0187               	clrf	7
  9709  0D73  3000               	movlw	0
  9710  0D74  3FC0               	movwi [0]fsr1
  9711  0D75  3FC1               	movwi [1]fsr1
  9712                           
  9713                           ;LED_B1.c: 168: if(led == 1)
  9714  0D76  0823               	movf	setLED@led,w
  9715  0D77  3A01               	xorlw	1
  9716  0D78  1D03               	skipz
  9717  0D79  2D7C               	goto	l3754
  9718                           
  9719                           ;LED_B1.c: 169: {
  9720                           ;LED_B1.c: 173: RA3=1;
  9721  0D7A  158C               	bsf	12,3	;volatile
  9722                           
  9723                           ;LED_B1.c: 175: }
  9724  0D7B  0008               	return
  9725  0D7C                     l3754:	
  9726                           
  9727                           ;LED_B1.c: 178: else if(led == 2)
  9728  0D7C  0823               	movf	setLED@led,w
  9729  0D7D  3A02               	xorlw	2
  9730  0D7E  1D03               	skipz
  9731  0D7F  2D82               	goto	l3758
  9732                           
  9733                           ;LED_B1.c: 179: {
  9734                           ;LED_B1.c: 183: RC7=1;
  9735  0D80  178E               	bsf	14,7	;volatile
  9736                           
  9737                           ;LED_B1.c: 185: }
  9738  0D81  0008               	return
  9739  0D82                     l3758:	
  9740                           
  9741                           ;LED_B1.c: 198: else if(led == 99)
  9742  0D82  0823               	movf	setLED@led,w
  9743  0D83  3A63               	xorlw	99
  9744  0D84  1D03               	skipz
  9745  0D85  0008               	return
  9746                           
  9747                           ;LED_B1.c: 199: {
  9748                           ;LED_B1.c: 203: RB5=1;
  9749  0D86  168D               	bsf	13,5	;volatile
  9750                           
  9751                           ;LED_B1.c: 205: }
  9752                           ;LED_B1.c: 207: }
  9753  0D87  0008               	return
  9754  0D88                     l3762:	
  9755                           
  9756                           ;LED_B1.c: 208: else if(command == 11)
  9757  0D88  0822               	movf	setLED@command,w
  9758  0D89  3A0B               	xorlw	11
  9759  0D8A  1D03               	skipz
  9760  0D8B  0008               	return
  9761                           
  9762                           ;LED_B1.c: 209: {
  9763                           ;LED_B1.c: 210: LED->GO=1;
  9764  0D8C  085A               	movf	_LED,w
  9765  0D8D  0086               	movwf	6
  9766  0D8E  0187               	clrf	7
  9767  0D8F  1481               	bsf	1,1
  9768  0D90  0008               	return
  9769  0D91                     __end_of_setLED:	
  9770                           
  9771                           	psect	text56
  9772  08B3                     __ptext56:	
  9773 ;; *************** function _LedPointSelect *****************
  9774 ;; Defined at:
  9775 ;;		line 7 in file "../src/LED_B1.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  led             1    wreg     unsigned char 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  led             1    1[BANK0 ] unsigned char 
  9780 ;; Return value:  Size  Location     Type
  9781 ;;		None               void
  9782 ;; Registers used:
  9783 ;;		wreg
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;Total ram usage:        2 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    5
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_setLED_Initialization
  9800 ;;		_setLED
  9801 ;;		_setLED_Main
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _LedPointSelect
  9807  08B3                     _LedPointSelect:	
  9808                           
  9809                           ;incstack = 0
  9810                           ; Regs used in _LedPointSelect: [wreg]
  9811                           ;LedPointSelect@led stored from wreg
  9812  08B3  0020               	movlb	0	; select bank0
  9813  08B4  00A1               	movwf	LedPointSelect@led
  9814                           
  9815                           ;LED_B1.c: 10: if(led == 1)
  9816  08B5  0821               	movf	LedPointSelect@led,w
  9817  08B6  3A01               	xorlw	1
  9818  08B7  1D03               	skipz
  9819  08B8  28BE               	goto	l3690
  9820                           
  9821                           ;LED_B1.c: 11: {
  9822                           ;LED_B1.c: 12: LED=&VarLED1;
  9823  08B9  3061               	movlw	_VarLED1& (0+255)
  9824  08BA  00A0               	movwf	??_LedPointSelect
  9825  08BB  0820               	movf	??_LedPointSelect,w
  9826  08BC  00DA               	movwf	_LED
  9827                           
  9828                           ;LED_B1.c: 13: }
  9829  08BD  0008               	return
  9830  08BE                     l3690:	
  9831                           
  9832                           ;LED_B1.c: 16: else if(led == 2)
  9833  08BE  0821               	movf	LedPointSelect@led,w
  9834  08BF  3A02               	xorlw	2
  9835  08C0  1D03               	skipz
  9836  08C1  28C7               	goto	l3694
  9837                           
  9838                           ;LED_B1.c: 17: {
  9839                           ;LED_B1.c: 18: LED=&VarLED2;
  9840  08C2  3065               	movlw	_VarLED2& (0+255)
  9841  08C3  00A0               	movwf	??_LedPointSelect
  9842  08C4  0820               	movf	??_LedPointSelect,w
  9843  08C5  00DA               	movwf	_LED
  9844                           
  9845                           ;LED_B1.c: 19: }
  9846  08C6  0008               	return
  9847  08C7                     l3694:	
  9848                           
  9849                           ;LED_B1.c: 28: else if(led == 99)
  9850  08C7  0821               	movf	LedPointSelect@led,w
  9851  08C8  3A63               	xorlw	99
  9852  08C9  1D03               	skipz
  9853  08CA  0008               	return
  9854                           
  9855                           ;LED_B1.c: 29: {
  9856                           ;LED_B1.c: 30: LED=&VarErrLED;
  9857  08CB  305D               	movlw	_VarErrLED& (0+255)
  9858  08CC  00A0               	movwf	??_LedPointSelect
  9859  08CD  0820               	movf	??_LedPointSelect,w
  9860  08CE  00DA               	movwf	_LED
  9861  08CF  0008               	return
  9862  08D0                     __end_of_LedPointSelect:	
  9863                           
  9864                           	psect	text57
  9865  17D7                     __ptext57:	
  9866 ;; *************** function _DimmerLights_Close *****************
  9867 ;; Defined at:
  9868 ;;		line 396 in file "../src/Dimmer_B1.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;		None
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;		None
  9873 ;; Return value:  Size  Location     Type
  9874 ;;		None               void
  9875 ;; Registers used:
  9876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;Total ram usage:        0 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    6
  9889 ;; This function calls:
  9890 ;;		_getDimmerLights_StatusFlag
  9891 ;;		_setMemory_GO
  9892 ;; This function is called by:
  9893 ;;		_DimmerLights_Main
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           
  9898                           ;psect for function _DimmerLights_Close
  9899  17D7                     _DimmerLights_Close:	
  9900                           
  9901                           ;Dimmer_B1.c: 397: if (Dimmer->Detect == 1) {
  9902                           
  9903                           ;incstack = 0
  9904                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9905  17D7  0020               	movlb	0	; select bank0
  9906  17D8  0858               	movf	_Dimmer,w
  9907  17D9  0086               	movwf	6
  9908  17DA  0187               	clrf	7
  9909  17DB  1C01               	btfss	1,0
  9910  17DC  0008               	return
  9911                           
  9912                           ;Dimmer_B1.c: 398: Dimmer->Detect = 0;
  9913  17DD  0858               	movf	_Dimmer,w
  9914  17DE  0086               	movwf	6
  9915  17DF  0187               	clrf	7
  9916  17E0  1001               	bcf	1,0
  9917                           
  9918                           ;Dimmer_B1.c: 399: if (getDimmerLights_StatusFlag() == 0) {
  9919  17E1  3197  2742  3197   	fcall	_getDimmerLights_StatusFlag
  9920  17E4  3800               	iorlw	0
  9921  17E5  1D03               	skipz
  9922  17E6  0008               	return
  9923                           
  9924                           ;Dimmer_B1.c: 400: ;;
  9925                           ;Dimmer_B1.c: 401: setMemory_GO(1);
  9926  17E7  3001               	movlw	1
  9927  17E8  3188  2098         	fcall	_setMemory_GO
  9928  17EA  0008               	return
  9929  17EB                     __end_of_DimmerLights_Close:	
  9930                           
  9931                           	psect	text58
  9932  0898                     __ptext58:	
  9933 ;; *************** function _setMemory_GO *****************
  9934 ;; Defined at:
  9935 ;;		line 882 in file "../src/MCU_B1.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  command         1    wreg     unsigned char 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;  command         1    2[BANK0 ] unsigned char 
  9940 ;; Return value:  Size  Location     Type
  9941 ;;		None               void
  9942 ;; Registers used:
  9943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;Total ram usage:        3 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    5
  9956 ;; This function calls:
  9957 ;;		Nothing
  9958 ;; This function is called by:
  9959 ;;		_DimmerLights_Close
  9960 ;;		_setDimmerLights
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           
  9965                           ;psect for function _setMemory_GO
  9966  0898                     _setMemory_GO:	
  9967                           
  9968                           ;incstack = 0
  9969                           ; Regs used in _setMemory_GO: [wreg+fsr1l+fsr1h+status,2+status,0]
  9970                           ;setMemory_GO@command stored from wreg
  9971  0898  0020               	movlb	0	; select bank0
  9972  0899  00A2               	movwf	setMemory_GO@command
  9973                           
  9974                           ;MCU_B1.c: 883: Memory->GO = command;
  9975  089A  086E               	movf	_Memory,w
  9976  089B  3E24               	addlw	36
  9977  089C  0086               	movwf	6
  9978  089D  3001               	movlw	1	; select bank2/3
  9979  089E  0087               	movwf	7
  9980  089F  0822               	movf	setMemory_GO@command,w
  9981  08A0  1081               	bcf	1,1
  9982  08A1  1D03               	skipz
  9983  08A2  1481               	bsf	1,1
  9984                           
  9985                           ;MCU_B1.c: 884: if (command == 0) {
  9986  08A3  08A2               	movf	setMemory_GO@command,f
  9987  08A4  1D03               	skipz
  9988  08A5  0008               	return
  9989                           
  9990                           ;MCU_B1.c: 885: Memory->Time = command;
  9991  08A6  0822               	movf	setMemory_GO@command,w
  9992  08A7  00A0               	movwf	??_setMemory_GO
  9993  08A8  01A1               	clrf	??_setMemory_GO+1
  9994  08A9  086E               	movf	_Memory,w
  9995  08AA  3E22               	addlw	34
  9996  08AB  0086               	movwf	6
  9997  08AC  3001               	movlw	1	; select bank2/3
  9998  08AD  0087               	movwf	7
  9999  08AE  0820               	movf	??_setMemory_GO,w
 10000  08AF  3FC0               	movwi [0]fsr1
 10001  08B0  0821               	movf	??_setMemory_GO+1,w
 10002  08B1  3FC1               	movwi [1]fsr1
 10003  08B2  0008               	return
 10004  08B3                     __end_of_setMemory_GO:	
 10005                           
 10006                           	psect	text59
 10007  1742                     __ptext59:	
 10008 ;; *************** function _getDimmerLights_StatusFlag *****************
 10009 ;; Defined at:
 10010 ;;		line 475 in file "../src/Dimmer_B1.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  Status          1    1[BANK0 ] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      unsigned char 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        3 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    5
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_DimmerLights_Close
 10035 ;;		_DimmerLights_Exceptions
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           
 10040                           ;psect for function _getDimmerLights_StatusFlag
 10041  1742                     _getDimmerLights_StatusFlag:	
 10042                           
 10043                           ;Dimmer_B1.c: 476: char Status = 0;
 10044                           
 10045                           ;incstack = 0
 10046                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
 10047  1742  0020               	movlb	0	; select bank0
 10048  1743  01A1               	clrf	getDimmerLights_StatusFlag@Status
 10049                           
 10050                           ;Dimmer_B1.c: 483: Status = (DimmerLights1.StatusFlag == 1 || DimmerLights2.StatusFlag =
      +                          = 1) ? 1 : 0;
 10051  1744  01A2               	clrf	_getDimmerLights_StatusFlag$1654
 10052  1745  0AA2               	incf	_getDimmerLights_StatusFlag$1654,f
 10053  1746  0021               	movlb	1	; select bank1
 10054  1747  1F20               	btfss	_DimmerLights1^(0+128),6
 10055  1748  1B2F               	btfsc	_DimmerLights2^(0+128),6
 10056  1749  2F4C               	goto	l3870
 10057  174A  0020               	movlb	0	; select bank0
 10058  174B  01A2               	clrf	_getDimmerLights_StatusFlag$1654
 10059  174C                     l3870:	
 10060  174C  0020               	movlb	0	; select bank0
 10061  174D  0822               	movf	_getDimmerLights_StatusFlag$1654,w
 10062  174E  00A0               	movwf	??_getDimmerLights_StatusFlag
 10063  174F  0820               	movf	??_getDimmerLights_StatusFlag,w
 10064  1750  00A1               	movwf	getDimmerLights_StatusFlag@Status
 10065                           
 10066                           ;Dimmer_B1.c: 490: return Status;
 10067  1751  0821               	movf	getDimmerLights_StatusFlag@Status,w
 10068  1752  0008               	return
 10069  1753                     __end_of_getDimmerLights_StatusFlag:	
 10070                           
 10071                           	psect	text60
 10072  17EB                     __ptext60:	
 10073 ;; *************** function _DimmerLights_Initialization *****************
 10074 ;; Defined at:
 10075 ;;		line 334 in file "../src/Dimmer_B1.c"
 10076 ;; Parameters:    Size  Location     Type
 10077 ;;		None
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;		None
 10080 ;; Return value:  Size  Location     Type
 10081 ;;		None               void
 10082 ;; Registers used:
 10083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;Total ram usage:        1 bytes
 10094 ;; Hardware stack levels used:    1
 10095 ;; Hardware stack levels required when called:    7
 10096 ;; This function calls:
 10097 ;;		_Dimmer_Initialization
 10098 ;;		_setDimmerLights_Initialization
 10099 ;; This function is called by:
 10100 ;;		_main
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _DimmerLights_Initialization
 10106  17EB                     _DimmerLights_Initialization:	
 10107                           
 10108                           ;Dimmer_B1.c: 337: DimmerLights11 = &DimmerLights1;
 10109                           
 10110                           ;incstack = 0
 10111                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10112  17EB  30A0               	movlw	_DimmerLights1& (0+255)
 10113  17EC  0020               	movlb	0	; select bank0
 10114  17ED  00A4               	movwf	??_DimmerLights_Initialization
 10115  17EE  0824               	movf	??_DimmerLights_Initialization,w
 10116  17EF  00F8               	movwf	_DimmerLights11
 10117                           
 10118                           ;Dimmer_B1.c: 338: setDimmerLights_Initialization(1);
 10119  17F0  3001               	movlw	1
 10120  17F1  3189  2139  3197   	fcall	_setDimmerLights_Initialization
 10121                           
 10122                           ;Dimmer_B1.c: 342: DimmerLights22 = &DimmerLights2;
 10123  17F4  30AF               	movlw	_DimmerLights2& (0+255)
 10124  17F5  0020               	movlb	0	; select bank0
 10125  17F6  00A4               	movwf	??_DimmerLights_Initialization
 10126  17F7  0824               	movf	??_DimmerLights_Initialization,w
 10127  17F8  00F9               	movwf	_DimmerLights22
 10128                           
 10129                           ;Dimmer_B1.c: 343: setDimmerLights_Initialization(2);
 10130  17F9  3002               	movlw	2
 10131  17FA  3189  2139  3197   	fcall	_setDimmerLights_Initialization
 10132                           
 10133                           ;Dimmer_B1.c: 352: Dimmer_Initialization();
 10134  17FD  3195  25FC         	fcall	_Dimmer_Initialization
 10135  17FF  0008               	return
 10136  1800                     __end_of_DimmerLights_Initialization:	
 10137                           
 10138                           	psect	text61
 10139  0939                     __ptext61:	
 10140 ;; *************** function _setDimmerLights_Initialization *****************
 10141 ;; Defined at:
 10142 ;;		line 357 in file "../src/Dimmer_B1.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  lights          1    wreg     unsigned char 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  lights          1    3[BANK0 ] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;		None               void
 10149 ;; Registers used:
 10150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;Total ram usage:        2 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:    6
 10163 ;; This function calls:
 10164 ;;		_DimmerLightsPointSelect
 10165 ;; This function is called by:
 10166 ;;		_DimmerLights_Initialization
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _setDimmerLights_Initialization
 10172  0939                     _setDimmerLights_Initialization:	
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 10176                           ;setDimmerLights_Initialization@lights stored from wreg
 10177  0939  0020               	movlb	0	; select bank0
 10178  093A  00A3               	movwf	setDimmerLights_Initialization@lights
 10179                           
 10180                           ;Dimmer_B1.c: 359: DimmerLightsPointSelect(lights);
 10181  093B  0823               	movf	setDimmerLights_Initialization@lights,w
 10182  093C  3197  2789         	fcall	_DimmerLightsPointSelect
 10183                           
 10184                           ;Dimmer_B1.c: 360: DimmerLights->Clear = 1;
 10185  093E  0020               	movlb	0	; select bank0
 10186  093F  0859               	movf	_DimmerLights,w
 10187  0940  3E09               	addlw	9
 10188  0941  0086               	movwf	6
 10189  0942  0187               	clrf	7
 10190  0943  1501               	bsf	1,2
 10191                           
 10192                           ;Dimmer_B1.c: 366: DimmerLights->MaxmumValue = ((char)((100-60)*0.8));
 10193  0944  3020               	movlw	32
 10194  0945  00A2               	movwf	??_setDimmerLights_Initialization
 10195  0946  0859               	movf	_DimmerLights,w
 10196  0947  3E05               	addlw	5
 10197  0948  0086               	movwf	6
 10198  0949  0187               	clrf	7
 10199  094A  0822               	movf	??_setDimmerLights_Initialization,w
 10200  094B  0081               	movwf	1
 10201                           
 10202                           ;Dimmer_B1.c: 367: DimmerLights->MinimumValue = ((char)((100-25)*0.8));
 10203  094C  303C               	movlw	60
 10204  094D  00A2               	movwf	??_setDimmerLights_Initialization
 10205  094E  0859               	movf	_DimmerLights,w
 10206  094F  3E06               	addlw	6
 10207  0950  0086               	movwf	6
 10208  0951  0187               	clrf	7
 10209  0952  0822               	movf	??_setDimmerLights_Initialization,w
 10210  0953  0081               	movwf	1
 10211                           
 10212                           ;Dimmer_B1.c: 377: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
 10213  0954  0859               	movf	_DimmerLights,w
 10214  0955  3E06               	addlw	6
 10215  0956  0086               	movwf	6
 10216  0957  0187               	clrf	7
 10217  0958  0801               	movf	1,w
 10218  0959  00A2               	movwf	??_setDimmerLights_Initialization
 10219  095A  0859               	movf	_DimmerLights,w
 10220  095B  3E04               	addlw	4
 10221  095C  0086               	movwf	6
 10222  095D  0187               	clrf	7
 10223  095E  0822               	movf	??_setDimmerLights_Initialization,w
 10224  095F  0081               	movwf	1
 10225  0960  0008               	return
 10226  0961                     __end_of_setDimmerLights_Initialization:	
 10227                           
 10228                           	psect	text62
 10229  15FC                     __ptext62:	
 10230 ;; *************** function _Dimmer_Initialization *****************
 10231 ;; Defined at:
 10232 ;;		line 786 in file "../src/Dimmer_B1.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;		None
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;		None               void
 10239 ;; Registers used:
 10240 ;;		wreg
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10250 ;;Total ram usage:        1 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    5
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_DimmerLights_Initialization
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           
 10261                           ;psect for function _Dimmer_Initialization
 10262  15FC                     _Dimmer_Initialization:	
 10263                           
 10264                           ;Dimmer_B1.c: 788: Dimmer = &Dimmer1;
 10265                           
 10266                           ;incstack = 0
 10267                           ; Regs used in _Dimmer_Initialization: [wreg]
 10268  15FC  3069               	movlw	_Dimmer1& (0+255)
 10269  15FD  0020               	movlb	0	; select bank0
 10270  15FE  00A0               	movwf	??_Dimmer_Initialization
 10271  15FF  0820               	movf	??_Dimmer_Initialization,w
 10272  1600  00D8               	movwf	_Dimmer
 10273  1601  0008               	return
 10274  1602                     __end_of_Dimmer_Initialization:	
 10275                           
 10276                           	psect	text63
 10277  162A                     __ptext63:	
 10278 ;; *************** function _DelayOff_Main *****************
 10279 ;; Defined at:
 10280 ;;		line 41 in file "../src/DelayOff_B1.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;		None               void
 10287 ;; Registers used:
 10288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:    8
 10301 ;; This function calls:
 10302 ;;		_DlyOff_Main
 10303 ;; This function is called by:
 10304 ;;		_main
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           
 10309                           ;psect for function _DelayOff_Main
 10310  162A                     _DelayOff_Main:	
 10311                           
 10312                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 10313                           
 10314                           ;incstack = 0
 10315                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10316  162A  3001               	movlw	1
 10317  162B  3187  279D  3196   	fcall	_DlyOff_Main
 10318                           
 10319                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 10320  162E  3002               	movlw	2
 10321  162F  3187  279D         	fcall	_DlyOff_Main
 10322  1631  0008               	return
 10323  1632                     __end_of_DelayOff_Main:	
 10324                           
 10325                           	psect	text64
 10326  079D                     __ptext64:	
 10327 ;; *************** function _DlyOff_Main *****************
 10328 ;; Defined at:
 10329 ;;		line 62 in file "../src/DelayOff_B1.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  sw              1    wreg     unsigned char 
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;  sw              1   15[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;		None               void
 10336 ;; Registers used:
 10337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;Total ram usage:        3 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    7
 10350 ;; This function calls:
 10351 ;;		_DelayOffPointSelect
 10352 ;;		_setBuz
 10353 ;;		_setDimmerLights_Switch
 10354 ;;		_setDimmerLights_Trigger
 10355 ;;		_setSw_Status
 10356 ;; This function is called by:
 10357 ;;		_DelayOff_Main
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           
 10362                           ;psect for function _DlyOff_Main
 10363  079D                     _DlyOff_Main:	
 10364                           
 10365                           ;incstack = 0
 10366                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10367                           ;DlyOff_Main@sw stored from wreg
 10368  079D  0020               	movlb	0	; select bank0
 10369  079E  00AF               	movwf	DlyOff_Main@sw
 10370                           
 10371                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 10372  079F  082F               	movf	DlyOff_Main@sw,w
 10373  07A0  3197  27AF  3187   	fcall	_DelayOffPointSelect
 10374                           
 10375                           ;DelayOff_B1.c: 64: if (DelayOff->GO) {
 10376  07A3  0020               	movlb	0	; select bank0
 10377  07A4  0857               	movf	_DelayOff,w
 10378  07A5  0086               	movwf	6
 10379  07A6  0187               	clrf	7
 10380  07A7  1C81               	btfss	1,1
 10381  07A8  0008               	return
 10382                           
 10383                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 10384  07A9  0857               	movf	_DelayOff,w
 10385  07AA  3E02               	addlw	2
 10386  07AB  0086               	movwf	6
 10387  07AC  0187               	clrf	7
 10388  07AD  3001               	movlw	1
 10389  07AE  0781               	addwf	1,f
 10390  07AF  3141               	addfsr 1,1
 10391  07B0  1803               	skipnc
 10392  07B1  0A81               	incf	1,f
 10393                           
 10394                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 5650) {
 10395  07B2  0857               	movf	_DelayOff,w
 10396  07B3  3E02               	addlw	2
 10397  07B4  0086               	movwf	6
 10398  07B5  0187               	clrf	7
 10399  07B6  3F40               	moviw [0]fsr1
 10400  07B7  00AD               	movwf	??_DlyOff_Main
 10401  07B8  3F41               	moviw [1]fsr1
 10402  07B9  00AE               	movwf	??_DlyOff_Main+1
 10403  07BA  3016               	movlw	22
 10404  07BB  022E               	subwf	??_DlyOff_Main+1,w
 10405  07BC  3012               	movlw	18
 10406  07BD  1903               	skipnz
 10407  07BE  022D               	subwf	??_DlyOff_Main,w
 10408  07BF  1C03               	skipc
 10409  07C0  0008               	return
 10410                           
 10411                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 10412  07C1  0857               	movf	_DelayOff,w
 10413  07C2  3E02               	addlw	2
 10414  07C3  0086               	movwf	6
 10415  07C4  0187               	clrf	7
 10416  07C5  3000               	movlw	0
 10417  07C6  3FC0               	movwi [0]fsr1
 10418  07C7  3FC1               	movwi [1]fsr1
 10419                           
 10420                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 10421  07C8  3001               	movlw	1
 10422  07C9  00AD               	movwf	??_DlyOff_Main
 10423  07CA  0857               	movf	_DelayOff,w
 10424  07CB  3E04               	addlw	4
 10425  07CC  0086               	movwf	6
 10426  07CD  0187               	clrf	7
 10427  07CE  082D               	movf	??_DlyOff_Main,w
 10428  07CF  0781               	addwf	1,f
 10429                           
 10430                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 10431  07D0  0857               	movf	_DelayOff,w
 10432  07D1  3E04               	addlw	4
 10433  07D2  0086               	movwf	6
 10434  07D3  0187               	clrf	7
 10435  07D4  0A57               	incf	_DelayOff,w
 10436  07D5  0084               	movwf	4
 10437  07D6  0185               	clrf	5
 10438  07D7  0800               	movf	0,w
 10439  07D8  0201               	subwf	1,w
 10440  07D9  1C03               	skipc
 10441  07DA  0008               	return
 10442                           
 10443                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 10444  07DB  0857               	movf	_DelayOff,w
 10445  07DC  3E04               	addlw	4
 10446  07DD  0086               	movwf	6
 10447  07DE  0187               	clrf	7
 10448  07DF  0181               	clrf	1
 10449                           
 10450                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 10451  07E0  0857               	movf	_DelayOff,w
 10452  07E1  0086               	movwf	6
 10453  07E2  0187               	clrf	7
 10454  07E3  1081               	bcf	1,1
 10455                           
 10456                           ;DelayOff_B1.c: 72: setSw_Status(sw, 0);
 10457  07E4  01A2               	clrf	setSw_Status@command
 10458  07E5  082F               	movf	DlyOff_Main@sw,w
 10459  07E6  3196  26D7  3187   	fcall	_setSw_Status
 10460                           
 10461                           ;DelayOff_B1.c: 73: ;;
 10462                           ;DelayOff_B1.c: 74: ;;
 10463                           ;DelayOff_B1.c: 75: setDimmerLights_Trigger(sw, 1);
 10464  07E9  0020               	movlb	0	; select bank0
 10465  07EA  01A2               	clrf	setDimmerLights_Trigger@command
 10466  07EB  0AA2               	incf	setDimmerLights_Trigger@command,f
 10467  07EC  082F               	movf	DlyOff_Main@sw,w
 10468  07ED  3196  26F4  3187   	fcall	_setDimmerLights_Trigger
 10469                           
 10470                           ;DelayOff_B1.c: 76: setDimmerLights_Switch(sw, 0);
 10471  07F0  0020               	movlb	0	; select bank0
 10472  07F1  01A2               	clrf	setDimmerLights_Switch@command
 10473  07F2  082F               	movf	DlyOff_Main@sw,w
 10474  07F3  3196  26E5  3187   	fcall	_setDimmerLights_Switch
 10475                           
 10476                           ;DelayOff_B1.c: 77: ;;
 10477                           ;DelayOff_B1.c: 78: setBuz(1, 100);
 10478  07F6  3064               	movlw	100
 10479  07F7  0020               	movlb	0	; select bank0
 10480  07F8  00A9               	movwf	setBuz@time
 10481  07F9  3000               	movlw	0
 10482  07FA  00AA               	movwf	setBuz@time+1
 10483  07FB  3001               	movlw	1
 10484  07FC  3186  26B8         	fcall	_setBuz
 10485  07FE  0008               	return
 10486  07FF                     __end_of_DlyOff_Main:	
 10487                           
 10488                           	psect	text65
 10489  16D7                     __ptext65:	
 10490 ;; *************** function _setSw_Status *****************
 10491 ;; Defined at:
 10492 ;;		line 105 in file "../src/Switch_B1.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  sw              1    wreg     unsigned char 
 10495 ;;  command         1    2[BANK0 ] unsigned char 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  sw              1    3[BANK0 ] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;		None               void
 10500 ;; Registers used:
 10501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10507 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;Total ram usage:        2 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    6
 10514 ;; This function calls:
 10515 ;;		_SwPointSelect
 10516 ;; This function is called by:
 10517 ;;		_DlyOff_Main
 10518 ;;		_setDimmerLights_ERROR
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function _setSw_Status
 10524  16D7                     _setSw_Status:	
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10528                           ;setSw_Status@sw stored from wreg
 10529  16D7  0020               	movlb	0	; select bank0
 10530  16D8  00A3               	movwf	setSw_Status@sw
 10531                           
 10532                           ;Switch_B1.c: 106: SwPointSelect(sw);
 10533  16D9  0823               	movf	setSw_Status@sw,w
 10534  16DA  3197  27C3         	fcall	_SwPointSelect
 10535                           
 10536                           ;Switch_B1.c: 107: Sw->Status = command;
 10537  16DC  0020               	movlb	0	; select bank0
 10538  16DD  085B               	movf	_Sw,w
 10539  16DE  0086               	movwf	6
 10540  16DF  0187               	clrf	7
 10541  16E0  0822               	movf	setSw_Status@command,w
 10542  16E1  1301               	bcf	1,6
 10543  16E2  1D03               	skipz
 10544  16E3  1701               	bsf	1,6
 10545  16E4  0008               	return
 10546  16E5                     __end_of_setSw_Status:	
 10547                           
 10548                           	psect	text66
 10549  17C3                     __ptext66:	
 10550 ;; *************** function _SwPointSelect *****************
 10551 ;; Defined at:
 10552 ;;		line 17 in file "../src/Switch_B1.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;  sw              1    wreg     unsigned char 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  sw              1    1[BANK0 ] unsigned char 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;		None               void
 10559 ;; Registers used:
 10560 ;;		wreg
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;Total ram usage:        2 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    5
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_setSw_Enable
 10577 ;;		_setSw_Status
 10578 ;;		_setSw_Main
 10579 ;;		_Sw_Detect
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           
 10584                           ;psect for function _SwPointSelect
 10585  17C3                     _SwPointSelect:	
 10586                           
 10587                           ;incstack = 0
 10588                           ; Regs used in _SwPointSelect: [wreg]
 10589                           ;SwPointSelect@sw stored from wreg
 10590  17C3  0020               	movlb	0	; select bank0
 10591  17C4  00A1               	movwf	SwPointSelect@sw
 10592                           
 10593                           ;Switch_B1.c: 20: if (sw == 1) {
 10594  17C5  0821               	movf	SwPointSelect@sw,w
 10595  17C6  3A01               	xorlw	1
 10596  17C7  1D03               	skipz
 10597  17C8  2FCE               	goto	l3702
 10598                           
 10599                           ;Switch_B1.c: 21: Sw = &Sw1;
 10600  17C9  30CA               	movlw	_Sw1& (0+255)
 10601  17CA  00A0               	movwf	??_SwPointSelect
 10602  17CB  0820               	movf	??_SwPointSelect,w
 10603  17CC  00DB               	movwf	_Sw
 10604                           
 10605                           ;Switch_B1.c: 22: }
 10606  17CD  0008               	return
 10607  17CE                     l3702:	
 10608                           
 10609                           ;Switch_B1.c: 25: else if (sw == 2) {
 10610  17CE  0821               	movf	SwPointSelect@sw,w
 10611  17CF  3A02               	xorlw	2
 10612  17D0  1D03               	skipz
 10613  17D1  0008               	return
 10614                           
 10615                           ;Switch_B1.c: 26: Sw = &Sw2;
 10616  17D2  30D3               	movlw	_Sw2& (0+255)
 10617  17D3  00A0               	movwf	??_SwPointSelect
 10618  17D4  0820               	movf	??_SwPointSelect,w
 10619  17D5  00DB               	movwf	_Sw
 10620  17D6  0008               	return
 10621  17D7                     __end_of_SwPointSelect:	
 10622                           
 10623                           	psect	text67
 10624  16F4                     __ptext67:	
 10625 ;; *************** function _setDimmerLights_Trigger *****************
 10626 ;; Defined at:
 10627 ;;		line 705 in file "../src/Dimmer_B1.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  lights          1    wreg     unsigned char 
 10630 ;;  command         1    2[BANK0 ] unsigned char 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;  lights          1    3[BANK0 ] unsigned char 
 10633 ;; Return value:  Size  Location     Type
 10634 ;;		None               void
 10635 ;; Registers used:
 10636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10642 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;Total ram usage:        2 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:    6
 10649 ;; This function calls:
 10650 ;;		_DimmerLightsPointSelect
 10651 ;; This function is called by:
 10652 ;;		_DlyOff_Main
 10653 ;;		_Sw_DimmerOnFunc
 10654 ;;		_Sw_DimmerOffFunc
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           
 10659                           ;psect for function _setDimmerLights_Trigger
 10660  16F4                     _setDimmerLights_Trigger:	
 10661                           
 10662                           ;incstack = 0
 10663                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10664                           ;setDimmerLights_Trigger@lights stored from wreg
 10665  16F4  0020               	movlb	0	; select bank0
 10666  16F5  00A3               	movwf	setDimmerLights_Trigger@lights
 10667                           
 10668                           ;Dimmer_B1.c: 707: DimmerLightsPointSelect(lights);
 10669  16F6  0823               	movf	setDimmerLights_Trigger@lights,w
 10670  16F7  3197  2789         	fcall	_DimmerLightsPointSelect
 10671                           
 10672                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = command;
 10673  16F9  0020               	movlb	0	; select bank0
 10674  16FA  0859               	movf	_DimmerLights,w
 10675  16FB  3E08               	addlw	8
 10676  16FC  0086               	movwf	6
 10677  16FD  0187               	clrf	7
 10678  16FE  0822               	movf	setDimmerLights_Trigger@command,w
 10679  16FF  1101               	bcf	1,2
 10680  1700  1D03               	skipz
 10681  1701  1501               	bsf	1,2
 10682  1702  0008               	return
 10683  1703                     __end_of_setDimmerLights_Trigger:	
 10684                           
 10685                           	psect	text68
 10686  16E5                     __ptext68:	
 10687 ;; *************** function _setDimmerLights_Switch *****************
 10688 ;; Defined at:
 10689 ;;		line 693 in file "../src/Dimmer_B1.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  lights          1    wreg     unsigned char 
 10692 ;;  command         1    2[BANK0 ] unsigned char 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  lights          1    3[BANK0 ] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;		None               void
 10697 ;; Registers used:
 10698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        2 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    6
 10711 ;; This function calls:
 10712 ;;		_DimmerLightsPointSelect
 10713 ;; This function is called by:
 10714 ;;		_DlyOff_Main
 10715 ;;		_Sw_DimmerOnFunc
 10716 ;;		_Sw_DimmerOffFunc
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _setDimmerLights_Switch
 10722  16E5                     _setDimmerLights_Switch:	
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10726                           ;setDimmerLights_Switch@lights stored from wreg
 10727  16E5  0020               	movlb	0	; select bank0
 10728  16E6  00A3               	movwf	setDimmerLights_Switch@lights
 10729                           
 10730                           ;Dimmer_B1.c: 695: DimmerLightsPointSelect(lights);
 10731  16E7  0823               	movf	setDimmerLights_Switch@lights,w
 10732  16E8  3197  2789         	fcall	_DimmerLightsPointSelect
 10733                           
 10734                           ;Dimmer_B1.c: 696: DimmerLights->Switch = command;
 10735  16EA  0020               	movlb	0	; select bank0
 10736  16EB  0859               	movf	_DimmerLights,w
 10737  16EC  3E08               	addlw	8
 10738  16ED  0086               	movwf	6
 10739  16EE  0187               	clrf	7
 10740  16EF  0822               	movf	setDimmerLights_Switch@command,w
 10741  16F0  1081               	bcf	1,1
 10742  16F1  1D03               	skipz
 10743  16F2  1481               	bsf	1,1
 10744  16F3  0008               	return
 10745  16F4                     __end_of_setDimmerLights_Switch:	
 10746                           
 10747                           	psect	text69
 10748  1789                     __ptext69:	
 10749 ;; *************** function _DimmerLightsPointSelect *****************
 10750 ;; Defined at:
 10751 ;;		line 315 in file "../src/Dimmer_B1.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  lights          1    wreg     unsigned char 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  lights          1    1[BANK0 ] unsigned char 
 10756 ;; Return value:  Size  Location     Type
 10757 ;;		None               void
 10758 ;; Registers used:
 10759 ;;		wreg
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;Total ram usage:        2 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:    5
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_setDimmerLights_Initialization
 10776 ;;		_setDimmerLights_Main
 10777 ;;		_setDimmerLights_ERROR
 10778 ;;		_setDimmerLights_TriggerERROR
 10779 ;;		_setDimmerLights
 10780 ;;		_setDimmerLights_Adj
 10781 ;;		_setDimmerLights_Switch
 10782 ;;		_setDimmerLights_AdjGo
 10783 ;;		_setDimmerLights_Trigger
 10784 ;;		_setDimmerLights_TriggerAdj
 10785 ;;		_setDimmerLights_GO
 10786 ;;		_setDimmerLights_AdjRF
 10787 ;;		_setDimmerLights_MaxmumValue
 10788 ;;		_setDimmerLights_Clear
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           
 10793                           ;psect for function _DimmerLightsPointSelect
 10794  1789                     _DimmerLightsPointSelect:	
 10795                           
 10796                           ;incstack = 0
 10797                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 10798                           ;DimmerLightsPointSelect@lights stored from wreg
 10799  1789  0020               	movlb	0	; select bank0
 10800  178A  00A1               	movwf	DimmerLightsPointSelect@lights
 10801                           
 10802                           ;Dimmer_B1.c: 317: if (lights == 1) {
 10803  178B  0821               	movf	DimmerLightsPointSelect@lights,w
 10804  178C  3A01               	xorlw	1
 10805  178D  1D03               	skipz
 10806  178E  2F93               	goto	l490
 10807                           
 10808                           ;Dimmer_B1.c: 318: DimmerLights = &DimmerLights1;
 10809  178F  30A0               	movlw	_DimmerLights1& (0+255)
 10810  1790  00A0               	movwf	??_DimmerLightsPointSelect
 10811  1791  0820               	movf	??_DimmerLightsPointSelect,w
 10812  1792  00D9               	movwf	_DimmerLights
 10813  1793                     l490:	
 10814                           
 10815                           ;Dimmer_B1.c: 319: }
 10816                           ;Dimmer_B1.c: 322: if (lights == 2) {
 10817  1793  0821               	movf	DimmerLightsPointSelect@lights,w
 10818  1794  3A02               	xorlw	2
 10819  1795  1D03               	skipz
 10820  1796  0008               	return
 10821                           
 10822                           ;Dimmer_B1.c: 323: DimmerLights = &DimmerLights2;
 10823  1797  30AF               	movlw	_DimmerLights2& (0+255)
 10824  1798  00A0               	movwf	??_DimmerLightsPointSelect
 10825  1799  0820               	movf	??_DimmerLightsPointSelect,w
 10826  179A  00D9               	movwf	_DimmerLights
 10827  179B  0008               	return
 10828  179C                     __end_of_DimmerLightsPointSelect:	
 10829                           
 10830                           	psect	text70
 10831  06B8                     __ptext70:	
 10832 ;; *************** function _setBuz *****************
 10833 ;; Defined at:
 10834 ;;		line 30 in file "../src/Buzzer_B1.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  count           1    wreg     unsigned char 
 10837 ;;  time            2    9[BANK0 ] int 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  count           1   12[BANK0 ] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;		None               void
 10842 ;; Registers used:
 10843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10852 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10853 ;;Total ram usage:        4 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:    6
 10856 ;; This function calls:
 10857 ;;		___awdiv
 10858 ;; This function is called by:
 10859 ;;		_DlyOff_Main
 10860 ;;		_setDimmerLights_Main
 10861 ;;		_DimmerLights_Exceptions
 10862 ;;		_my_Main
 10863 ;;		_setOverTemp_Exceptions
 10864 ;;		_setSw_Main
 10865 ;;		_Sw_DimmerOnFunc
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           
 10870                           ;psect for function _setBuz
 10871  06B8                     _setBuz:	
 10872                           
 10873                           ;incstack = 0
 10874                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10875                           ;setBuz@count stored from wreg
 10876  06B8  0020               	movlb	0	; select bank0
 10877  06B9  00AC               	movwf	setBuz@count
 10878                           
 10879                           ;Buzzer_B1.c: 31: Buz = &Buz1;
 10880  06BA  30BE               	movlw	_Buz1& (0+255)
 10881  06BB  00AB               	movwf	??_setBuz
 10882  06BC  082B               	movf	??_setBuz,w
 10883  06BD  00D6               	movwf	_Buz
 10884                           
 10885                           ;Buzzer_B1.c: 32: time /= 10;
 10886  06BE  300A               	movlw	10
 10887  06BF  00A0               	movwf	___awdiv@divisor
 10888  06C0  3000               	movlw	0
 10889  06C1  00A1               	movwf	___awdiv@divisor+1
 10890  06C2  082A               	movf	setBuz@time+1,w
 10891  06C3  01A3               	clrf	___awdiv@dividend+1
 10892  06C4  07A3               	addwf	___awdiv@dividend+1,f
 10893  06C5  0829               	movf	setBuz@time,w
 10894  06C6  01A2               	clrf	___awdiv@dividend
 10895  06C7  07A2               	addwf	___awdiv@dividend,f
 10896  06C8  318C  2433  3186   	fcall	___awdiv
 10897  06CB  0020               	movlb	0	; select bank0
 10898  06CC  0821               	movf	?___awdiv+1,w
 10899  06CD  01AA               	clrf	setBuz@time+1
 10900  06CE  07AA               	addwf	setBuz@time+1,f
 10901  06CF  0820               	movf	?___awdiv,w
 10902  06D0  01A9               	clrf	setBuz@time
 10903  06D1  07A9               	addwf	setBuz@time,f
 10904                           
 10905                           ;Buzzer_B1.c: 33: if (Buz->Enable == 1) {
 10906  06D2  0856               	movf	_Buz,w
 10907  06D3  0086               	movwf	6
 10908  06D4  0187               	clrf	7
 10909  06D5  1C01               	btfss	1,0
 10910  06D6  0008               	return
 10911                           
 10912                           ;Buzzer_B1.c: 34: if (Buz->GO == 0) {
 10913  06D7  0856               	movf	_Buz,w
 10914  06D8  0086               	movwf	6
 10915  06D9  0187               	clrf	7
 10916  06DA  1881               	btfsc	1,1
 10917  06DB  2EF8               	goto	l3822
 10918                           
 10919                           ;Buzzer_B1.c: 35: Buz->GO = 1;
 10920  06DC  0856               	movf	_Buz,w
 10921  06DD  0086               	movwf	6
 10922  06DE  0187               	clrf	7
 10923  06DF  1481               	bsf	1,1
 10924                           
 10925                           ;Buzzer_B1.c: 36: Buz->Counter = 0;
 10926  06E0  0A56               	incf	_Buz,w
 10927  06E1  0086               	movwf	6
 10928  06E2  0187               	clrf	7
 10929  06E3  3000               	movlw	0
 10930  06E4  3FC0               	movwi [0]fsr1
 10931  06E5  3FC1               	movwi [1]fsr1
 10932                           
 10933                           ;Buzzer_B1.c: 37: Buz->Count = count;
 10934  06E6  082C               	movf	setBuz@count,w
 10935  06E7  00AB               	movwf	??_setBuz
 10936  06E8  0856               	movf	_Buz,w
 10937  06E9  3E03               	addlw	3
 10938  06EA  0086               	movwf	6
 10939  06EB  0187               	clrf	7
 10940  06EC  082B               	movf	??_setBuz,w
 10941  06ED  0081               	movwf	1
 10942                           
 10943                           ;Buzzer_B1.c: 38: Buz->TimeValue = time;
 10944  06EE  0856               	movf	_Buz,w
 10945  06EF  3E06               	addlw	6
 10946  06F0  0086               	movwf	6
 10947  06F1  0187               	clrf	7
 10948  06F2  0829               	movf	setBuz@time,w
 10949  06F3  3FC0               	movwi [0]fsr1
 10950  06F4  082A               	movf	setBuz@time+1,w
 10951  06F5  3FC1               	movwi [1]fsr1
 10952                           
 10953                           ;Buzzer_B1.c: 39: RB3 = 1;
 10954  06F6  158D               	bsf	13,3	;volatile
 10955                           
 10956                           ;Buzzer_B1.c: 40: } else {
 10957  06F7  0008               	return
 10958  06F8                     l3822:	
 10959                           
 10960                           ;Buzzer_B1.c: 41: if (Buz->BufferStatus1 == 0) {
 10961  06F8  0856               	movf	_Buz,w
 10962  06F9  0086               	movwf	6
 10963  06FA  0187               	clrf	7
 10964  06FB  1981               	btfsc	1,3
 10965  06FC  2F12               	goto	l3826
 10966                           
 10967                           ;Buzzer_B1.c: 42: Buz->BufferStatus1 = 1;
 10968  06FD  0856               	movf	_Buz,w
 10969  06FE  0086               	movwf	6
 10970  06FF  0187               	clrf	7
 10971  0700  1581               	bsf	1,3
 10972                           
 10973                           ;Buzzer_B1.c: 43: Buz->CountBuffer1 = count;
 10974  0701  082C               	movf	setBuz@count,w
 10975  0702  00AB               	movwf	??_setBuz
 10976  0703  0856               	movf	_Buz,w
 10977  0704  3E04               	addlw	4
 10978  0705  0086               	movwf	6
 10979  0706  0187               	clrf	7
 10980  0707  082B               	movf	??_setBuz,w
 10981  0708  0081               	movwf	1
 10982                           
 10983                           ;Buzzer_B1.c: 44: Buz->TimeValueBuffer1 = time;
 10984  0709  0856               	movf	_Buz,w
 10985  070A  3E08               	addlw	8
 10986  070B  0086               	movwf	6
 10987  070C  0187               	clrf	7
 10988  070D  0829               	movf	setBuz@time,w
 10989  070E  3FC0               	movwi [0]fsr1
 10990  070F  082A               	movf	setBuz@time+1,w
 10991  0710  3FC1               	movwi [1]fsr1
 10992                           
 10993                           ;Buzzer_B1.c: 45: } else if (Buz->BufferStatus2 == 0) {
 10994  0711  0008               	return
 10995  0712                     l3826:	
 10996  0712  0856               	movf	_Buz,w
 10997  0713  0086               	movwf	6
 10998  0714  0187               	clrf	7
 10999  0715  1A01               	btfsc	1,4
 11000  0716  0008               	return
 11001                           
 11002                           ;Buzzer_B1.c: 46: Buz->BufferStatus2 = 1;
 11003  0717  0856               	movf	_Buz,w
 11004  0718  0086               	movwf	6
 11005  0719  0187               	clrf	7
 11006  071A  1601               	bsf	1,4
 11007                           
 11008                           ;Buzzer_B1.c: 47: Buz->CountBuffer2 = count;
 11009  071B  082C               	movf	setBuz@count,w
 11010  071C  00AB               	movwf	??_setBuz
 11011  071D  0856               	movf	_Buz,w
 11012  071E  3E05               	addlw	5
 11013  071F  0086               	movwf	6
 11014  0720  0187               	clrf	7
 11015  0721  082B               	movf	??_setBuz,w
 11016  0722  0081               	movwf	1
 11017                           
 11018                           ;Buzzer_B1.c: 48: Buz->TimeValueBuffer2 = time;
 11019  0723  0856               	movf	_Buz,w
 11020  0724  3E0A               	addlw	10
 11021  0725  0086               	movwf	6
 11022  0726  0187               	clrf	7
 11023  0727  0829               	movf	setBuz@time,w
 11024  0728  3FC0               	movwi [0]fsr1
 11025  0729  082A               	movf	setBuz@time+1,w
 11026  072A  3FC1               	movwi [1]fsr1
 11027  072B  0008               	return
 11028  072C                     __end_of_setBuz:	
 11029                           
 11030                           	psect	text71
 11031  0C33                     __ptext71:	
 11032 ;; *************** function ___awdiv *****************
 11033 ;; Defined at:
 11034 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  divisor         2    0[BANK0 ] int 
 11037 ;;  dividend        2    2[BANK0 ] int 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;  quotient        2    7[BANK0 ] int 
 11040 ;;  sign            1    6[BANK0 ] unsigned char 
 11041 ;;  counter         1    5[BANK0 ] unsigned char 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  2    0[BANK0 ] int 
 11044 ;; Registers used:
 11045 ;;		wreg, status,2, status,0
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11051 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;Total ram usage:        9 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:    5
 11058 ;; This function calls:
 11059 ;;		Nothing
 11060 ;; This function is called by:
 11061 ;;		_setBuz
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           
 11066                           ;psect for function ___awdiv
 11067  0C33                     ___awdiv:	
 11068                           
 11069                           ;incstack = 0
 11070                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11071  0C33  0020               	movlb	0	; select bank0
 11072  0C34  01A6               	clrf	___awdiv@sign
 11073  0C35  1FA1               	btfss	___awdiv@divisor+1,7
 11074  0C36  2C3E               	goto	l3774
 11075  0C37  09A0               	comf	___awdiv@divisor,f
 11076  0C38  09A1               	comf	___awdiv@divisor+1,f
 11077  0C39  0AA0               	incf	___awdiv@divisor,f
 11078  0C3A  1903               	skipnz
 11079  0C3B  0AA1               	incf	___awdiv@divisor+1,f
 11080  0C3C  01A6               	clrf	___awdiv@sign
 11081  0C3D  0AA6               	incf	___awdiv@sign,f
 11082  0C3E                     l3774:	
 11083  0C3E  1FA3               	btfss	___awdiv@dividend+1,7
 11084  0C3F  2C49               	goto	l3780
 11085  0C40  09A2               	comf	___awdiv@dividend,f
 11086  0C41  09A3               	comf	___awdiv@dividend+1,f
 11087  0C42  0AA2               	incf	___awdiv@dividend,f
 11088  0C43  1903               	skipnz
 11089  0C44  0AA3               	incf	___awdiv@dividend+1,f
 11090  0C45  3001               	movlw	1
 11091  0C46  00A4               	movwf	??___awdiv
 11092  0C47  0824               	movf	??___awdiv,w
 11093  0C48  06A6               	xorwf	___awdiv@sign,f
 11094  0C49                     l3780:	
 11095  0C49  01A7               	clrf	___awdiv@quotient
 11096  0C4A  01A8               	clrf	___awdiv@quotient+1
 11097  0C4B  0821               	movf	___awdiv@divisor+1,w
 11098  0C4C  0420               	iorwf	___awdiv@divisor,w
 11099  0C4D  1903               	skipnz
 11100  0C4E  2C78               	goto	l3802
 11101  0C4F  01A5               	clrf	___awdiv@counter
 11102  0C50  0AA5               	incf	___awdiv@counter,f
 11103  0C51                     l3790:	
 11104  0C51  1BA1               	btfsc	___awdiv@divisor+1,7
 11105  0C52  2C5D               	goto	l3792
 11106  0C53  3001               	movlw	1
 11107  0C54                     u2495:	
 11108  0C54  35A0               	lslf	___awdiv@divisor,f
 11109  0C55  0DA1               	rlf	___awdiv@divisor+1,f
 11110  0C56  0B89               	decfsz	9,f
 11111  0C57  2C54               	goto	u2495
 11112  0C58  3001               	movlw	1
 11113  0C59  00A4               	movwf	??___awdiv
 11114  0C5A  0824               	movf	??___awdiv,w
 11115  0C5B  07A5               	addwf	___awdiv@counter,f
 11116  0C5C  2C51               	goto	l3790
 11117  0C5D                     l3792:	
 11118  0C5D  3001               	movlw	1
 11119  0C5E                     u2515:	
 11120  0C5E  35A7               	lslf	___awdiv@quotient,f
 11121  0C5F  0DA8               	rlf	___awdiv@quotient+1,f
 11122  0C60  0B89               	decfsz	9,f
 11123  0C61  2C5E               	goto	u2515
 11124  0C62  0821               	movf	___awdiv@divisor+1,w
 11125  0C63  0223               	subwf	___awdiv@dividend+1,w
 11126  0C64  1D03               	skipz
 11127  0C65  2C68               	goto	u2525
 11128  0C66  0820               	movf	___awdiv@divisor,w
 11129  0C67  0222               	subwf	___awdiv@dividend,w
 11130  0C68                     u2525:	
 11131  0C68  1C03               	skipc
 11132  0C69  2C6F               	goto	l3798
 11133  0C6A  0820               	movf	___awdiv@divisor,w
 11134  0C6B  02A2               	subwf	___awdiv@dividend,f
 11135  0C6C  0821               	movf	___awdiv@divisor+1,w
 11136  0C6D  3BA3               	subwfb	___awdiv@dividend+1,f
 11137  0C6E  1427               	bsf	___awdiv@quotient,0
 11138  0C6F                     l3798:	
 11139  0C6F  3001               	movlw	1
 11140  0C70                     u2535:	
 11141  0C70  36A1               	lsrf	___awdiv@divisor+1,f
 11142  0C71  0CA0               	rrf	___awdiv@divisor,f
 11143  0C72  0B89               	decfsz	9,f
 11144  0C73  2C70               	goto	u2535
 11145  0C74  3001               	movlw	1
 11146  0C75  02A5               	subwf	___awdiv@counter,f
 11147  0C76  1D03               	btfss	3,2
 11148  0C77  2C5D               	goto	l3792
 11149  0C78                     l3802:	
 11150  0C78  0826               	movf	___awdiv@sign,w
 11151  0C79  1903               	btfsc	3,2
 11152  0C7A  2C80               	goto	l3806
 11153  0C7B  09A7               	comf	___awdiv@quotient,f
 11154  0C7C  09A8               	comf	___awdiv@quotient+1,f
 11155  0C7D  0AA7               	incf	___awdiv@quotient,f
 11156  0C7E  1903               	skipnz
 11157  0C7F  0AA8               	incf	___awdiv@quotient+1,f
 11158  0C80                     l3806:	
 11159  0C80  0828               	movf	___awdiv@quotient+1,w
 11160  0C81  01A1               	clrf	?___awdiv+1
 11161  0C82  07A1               	addwf	?___awdiv+1,f
 11162  0C83  0827               	movf	___awdiv@quotient,w
 11163  0C84  01A0               	clrf	?___awdiv
 11164  0C85  07A0               	addwf	?___awdiv,f
 11165  0C86  0008               	return
 11166  0C87                     __end_of___awdiv:	
 11167                           
 11168                           	psect	text72
 11169  1622                     __ptext72:	
 11170 ;; *************** function _DelayOff_Initialization *****************
 11171 ;; Defined at:
 11172 ;;		line 26 in file "../src/DelayOff_B1.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;		None               void
 11179 ;; Registers used:
 11180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    7
 11193 ;; This function calls:
 11194 ;;		_DlyOff_Initialization
 11195 ;; This function is called by:
 11196 ;;		_main
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _DelayOff_Initialization
 11202  1622                     _DelayOff_Initialization:	
 11203                           
 11204                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 11205                           
 11206                           ;incstack = 0
 11207                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11208  1622  3001               	movlw	1
 11209  1623  3196  2660  3196   	fcall	_DlyOff_Initialization
 11210                           
 11211                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 11212  1626  3002               	movlw	2
 11213  1627  3196  2660         	fcall	_DlyOff_Initialization
 11214  1629  0008               	return
 11215  162A                     __end_of_DelayOff_Initialization:	
 11216                           
 11217                           	psect	text73
 11218  1660                     __ptext73:	
 11219 ;; *************** function _DlyOff_Initialization *****************
 11220 ;; Defined at:
 11221 ;;		line 56 in file "../src/DelayOff_B1.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  sw              1    wreg     unsigned char 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  sw              1    2[BANK0 ] unsigned char 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;		None               void
 11228 ;; Registers used:
 11229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;Total ram usage:        1 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    6
 11242 ;; This function calls:
 11243 ;;		_DelayOffPointSelect
 11244 ;; This function is called by:
 11245 ;;		_DelayOff_Initialization
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           
 11250                           ;psect for function _DlyOff_Initialization
 11251  1660                     _DlyOff_Initialization:	
 11252                           
 11253                           ;incstack = 0
 11254                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11255                           ;DlyOff_Initialization@sw stored from wreg
 11256  1660  0020               	movlb	0	; select bank0
 11257  1661  00A2               	movwf	DlyOff_Initialization@sw
 11258                           
 11259                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 11260  1662  0822               	movf	DlyOff_Initialization@sw,w
 11261  1663  3197  27AF         	fcall	_DelayOffPointSelect
 11262                           
 11263                           ;DelayOff_B1.c: 58: DelayOff->Enable = 1;
 11264  1665  0020               	movlb	0	; select bank0
 11265  1666  0857               	movf	_DelayOff,w
 11266  1667  0086               	movwf	6
 11267  1668  0187               	clrf	7
 11268  1669  1401               	bsf	1,0
 11269  166A  0008               	return
 11270  166B                     __end_of_DlyOff_Initialization:	
 11271                           
 11272                           	psect	text74
 11273  17AF                     __ptext74:	
 11274 ;; *************** function _DelayOffPointSelect *****************
 11275 ;; Defined at:
 11276 ;;		line 7 in file "../src/DelayOff_B1.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;  sw              1    wreg     unsigned char 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  sw              1    1[BANK0 ] unsigned char 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;		None               void
 11283 ;; Registers used:
 11284 ;;		wreg
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;Total ram usage:        2 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    5
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_DlyOff_Initialization
 11301 ;;		_DlyOff_Main
 11302 ;;		_setDelayOff_GO
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           
 11307                           ;psect for function _DelayOffPointSelect
 11308  17AF                     _DelayOffPointSelect:	
 11309                           
 11310                           ;incstack = 0
 11311                           ; Regs used in _DelayOffPointSelect: [wreg]
 11312                           ;DelayOffPointSelect@sw stored from wreg
 11313  17AF  0020               	movlb	0	; select bank0
 11314  17B0  00A1               	movwf	DelayOffPointSelect@sw
 11315                           
 11316                           ;DelayOff_B1.c: 9: if (sw == 1) {
 11317  17B1  0821               	movf	DelayOffPointSelect@sw,w
 11318  17B2  3A01               	xorlw	1
 11319  17B3  1D03               	skipz
 11320  17B4  2FBA               	goto	l3834
 11321                           
 11322                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 11323  17B5  30E4               	movlw	_DlySw1& (0+255)
 11324  17B6  00A0               	movwf	??_DelayOffPointSelect
 11325  17B7  0820               	movf	??_DelayOffPointSelect,w
 11326  17B8  00D7               	movwf	_DelayOff
 11327                           
 11328                           ;DelayOff_B1.c: 11: }
 11329  17B9  0008               	return
 11330  17BA                     l3834:	
 11331                           
 11332                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 11333  17BA  0821               	movf	DelayOffPointSelect@sw,w
 11334  17BB  3A02               	xorlw	2
 11335  17BC  1D03               	skipz
 11336  17BD  0008               	return
 11337                           
 11338                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 11339  17BE  30E9               	movlw	_DlySw2& (0+255)
 11340  17BF  00A0               	movwf	??_DelayOffPointSelect
 11341  17C0  0820               	movf	??_DelayOffPointSelect,w
 11342  17C1  00D7               	movwf	_DelayOff
 11343  17C2  0008               	return
 11344  17C3                     __end_of_DelayOffPointSelect:	
 11345                           
 11346                           	psect	text75
 11347  0594                     __ptext75:	
 11348 ;; *************** function _Buzzer_Main *****************
 11349 ;; Defined at:
 11350 ;;		line 55 in file "../src/Buzzer_B1.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;		None               void
 11357 ;; Registers used:
 11358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;Total ram usage:        4 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    5
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_main
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           
 11379                           ;psect for function _Buzzer_Main
 11380  0594                     _Buzzer_Main:	
 11381                           
 11382                           ;Buzzer_B1.c: 56: Buz = &Buz1;
 11383                           
 11384                           ;incstack = 0
 11385                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
 11386  0594  30BE               	movlw	_Buz1& (0+255)
 11387  0595  0020               	movlb	0	; select bank0
 11388  0596  00A0               	movwf	??_Buzzer_Main
 11389  0597  0820               	movf	??_Buzzer_Main,w
 11390  0598  00D6               	movwf	_Buz
 11391                           
 11392                           ;Buzzer_B1.c: 57: if (Buz->GO == 1) {
 11393  0599  0856               	movf	_Buz,w
 11394  059A  0086               	movwf	6
 11395  059B  0187               	clrf	7
 11396  059C  1C81               	btfss	1,1
 11397  059D  0008               	return
 11398                           
 11399                           ;Buzzer_B1.c: 58: Buz->Counter++;
 11400  059E  0A56               	incf	_Buz,w
 11401  059F  0086               	movwf	6
 11402  05A0  0187               	clrf	7
 11403  05A1  3001               	movlw	1
 11404  05A2  0781               	addwf	1,f
 11405  05A3  3141               	addfsr 1,1
 11406  05A4  1803               	skipnc
 11407  05A5  0A81               	incf	1,f
 11408                           
 11409                           ;Buzzer_B1.c: 59: if (Buz->Counter >= Buz->TimeValue) {
 11410  05A6  0856               	movf	_Buz,w
 11411  05A7  3E06               	addlw	6
 11412  05A8  0086               	movwf	6
 11413  05A9  0187               	clrf	7
 11414  05AA  3F40               	moviw [0]fsr1
 11415  05AB  00A0               	movwf	??_Buzzer_Main
 11416  05AC  3F41               	moviw [1]fsr1
 11417  05AD  00A1               	movwf	??_Buzzer_Main+1
 11418  05AE  0A56               	incf	_Buz,w
 11419  05AF  0086               	movwf	6
 11420  05B0  0187               	clrf	7
 11421  05B1  3F40               	moviw [0]fsr1
 11422  05B2  00A2               	movwf	??_Buzzer_Main+2
 11423  05B3  3F41               	moviw [1]fsr1
 11424  05B4  00A3               	movwf	??_Buzzer_Main+3
 11425  05B5  0821               	movf	??_Buzzer_Main+1,w
 11426  05B6  0223               	subwf	??_Buzzer_Main+3,w
 11427  05B7  1D03               	skipz
 11428  05B8  2DBB               	goto	u4115
 11429  05B9  0820               	movf	??_Buzzer_Main,w
 11430  05BA  0222               	subwf	??_Buzzer_Main+2,w
 11431  05BB                     u4115:	
 11432  05BB  1C03               	skipc
 11433  05BC  0008               	return
 11434                           
 11435                           ;Buzzer_B1.c: 60: Buz->Counter = 0;
 11436  05BD  0A56               	incf	_Buz,w
 11437  05BE  0086               	movwf	6
 11438  05BF  0187               	clrf	7
 11439  05C0  3000               	movlw	0
 11440  05C1  3FC0               	movwi [0]fsr1
 11441  05C2  3FC1               	movwi [1]fsr1
 11442                           
 11443                           ;Buzzer_B1.c: 61: Buz->Switch = (RB3 == 1) ? 1 : 0;
 11444  05C3  0856               	movf	_Buz,w
 11445  05C4  0086               	movwf	6
 11446  05C5  0187               	clrf	7
 11447  05C6  1281               	bcf	1,5
 11448  05C7  198D               	btfsc	13,3	;volatile
 11449  05C8  1681               	bsf	1,5
 11450                           
 11451                           ;Buzzer_B1.c: 62: if (Buz->Switch == 0) {
 11452  05C9  0020               	movlb	0	; select bank0
 11453  05CA  0856               	movf	_Buz,w
 11454  05CB  0086               	movwf	6
 11455  05CC  0187               	clrf	7
 11456  05CD  1A81               	btfsc	1,5
 11457  05CE  2E25               	goto	l4808
 11458                           
 11459                           ;Buzzer_B1.c: 63: if (Buz->Count == 0) {
 11460  05CF  0856               	movf	_Buz,w
 11461  05D0  3E03               	addlw	3
 11462  05D1  0086               	movwf	6
 11463  05D2  0187               	clrf	7
 11464  05D3  0881               	movf	1,f
 11465  05D4  1D03               	skipz
 11466  05D5  2E1F               	goto	l4804
 11467                           
 11468                           ;Buzzer_B1.c: 64: if (Buz->BufferStatus1 == 1) {
 11469  05D6  0856               	movf	_Buz,w
 11470  05D7  0086               	movwf	6
 11471  05D8  0187               	clrf	7
 11472  05D9  1D81               	btfss	1,3
 11473  05DA  2DF8               	goto	l4796
 11474                           
 11475                           ;Buzzer_B1.c: 65: Buz->BufferStatus1 = 0;
 11476  05DB  0856               	movf	_Buz,w
 11477  05DC  0086               	movwf	6
 11478  05DD  0187               	clrf	7
 11479  05DE  1181               	bcf	1,3
 11480                           
 11481                           ;Buzzer_B1.c: 66: Buz->Count = Buz->CountBuffer1;
 11482  05DF  0856               	movf	_Buz,w
 11483  05E0  3E04               	addlw	4
 11484  05E1  0086               	movwf	6
 11485  05E2  0187               	clrf	7
 11486  05E3  0801               	movf	1,w
 11487  05E4  00A0               	movwf	??_Buzzer_Main
 11488  05E5  0856               	movf	_Buz,w
 11489  05E6  3E03               	addlw	3
 11490  05E7  0086               	movwf	6
 11491  05E8  0187               	clrf	7
 11492  05E9  0820               	movf	??_Buzzer_Main,w
 11493  05EA  0081               	movwf	1
 11494                           
 11495                           ;Buzzer_B1.c: 67: Buz->TimeValue = Buz->TimeValueBuffer1;
 11496  05EB  0856               	movf	_Buz,w
 11497  05EC  3E08               	addlw	8
 11498  05ED  0086               	movwf	6
 11499  05EE  0187               	clrf	7
 11500  05EF  0856               	movf	_Buz,w
 11501  05F0  3E06               	addlw	6
 11502  05F1  0084               	movwf	4
 11503  05F2  0185               	clrf	5
 11504  05F3  3F40               	moviw [0]fsr1
 11505  05F4  3F80               	movwi [0]fsr0
 11506  05F5  3F41               	moviw [1]fsr1
 11507  05F6  3F81               	movwi [1]fsr0
 11508                           
 11509                           ;Buzzer_B1.c: 68: } else if (Buz->BufferStatus2 == 1) {
 11510  05F7  0008               	return
 11511  05F8                     l4796:	
 11512  05F8  0856               	movf	_Buz,w
 11513  05F9  0086               	movwf	6
 11514  05FA  0187               	clrf	7
 11515  05FB  1E01               	btfss	1,4
 11516  05FC  2E1A               	goto	l4802
 11517                           
 11518                           ;Buzzer_B1.c: 69: Buz->BufferStatus2 = 0;
 11519  05FD  0856               	movf	_Buz,w
 11520  05FE  0086               	movwf	6
 11521  05FF  0187               	clrf	7
 11522  0600  1201               	bcf	1,4
 11523                           
 11524                           ;Buzzer_B1.c: 70: Buz->Count = Buz->CountBuffer2;
 11525  0601  0856               	movf	_Buz,w
 11526  0602  3E05               	addlw	5
 11527  0603  0086               	movwf	6
 11528  0604  0187               	clrf	7
 11529  0605  0801               	movf	1,w
 11530  0606  00A0               	movwf	??_Buzzer_Main
 11531  0607  0856               	movf	_Buz,w
 11532  0608  3E03               	addlw	3
 11533  0609  0086               	movwf	6
 11534  060A  0187               	clrf	7
 11535  060B  0820               	movf	??_Buzzer_Main,w
 11536  060C  0081               	movwf	1
 11537                           
 11538                           ;Buzzer_B1.c: 71: Buz->TimeValue = Buz->TimeValueBuffer2;
 11539  060D  0856               	movf	_Buz,w
 11540  060E  3E0A               	addlw	10
 11541  060F  0086               	movwf	6
 11542  0610  0187               	clrf	7
 11543  0611  0856               	movf	_Buz,w
 11544  0612  3E06               	addlw	6
 11545  0613  0084               	movwf	4
 11546  0614  0185               	clrf	5
 11547  0615  3F40               	moviw [0]fsr1
 11548  0616  3F80               	movwi [0]fsr0
 11549  0617  3F41               	moviw [1]fsr1
 11550  0618  3F81               	movwi [1]fsr0
 11551                           
 11552                           ;Buzzer_B1.c: 72: } else {
 11553  0619  0008               	return
 11554  061A                     l4802:	
 11555                           
 11556                           ;Buzzer_B1.c: 73: Buz->GO = 0;
 11557  061A  0856               	movf	_Buz,w
 11558  061B  0086               	movwf	6
 11559  061C  0187               	clrf	7
 11560  061D  1081               	bcf	1,1
 11561                           
 11562                           ;Buzzer_B1.c: 74: }
 11563                           ;Buzzer_B1.c: 75: } else {
 11564  061E  0008               	return
 11565  061F                     l4804:	
 11566                           
 11567                           ;Buzzer_B1.c: 76: Buz->Switch = 1;
 11568  061F  0856               	movf	_Buz,w
 11569  0620  0086               	movwf	6
 11570  0621  0187               	clrf	7
 11571  0622  1681               	bsf	1,5
 11572                           
 11573                           ;Buzzer_B1.c: 78: RB3 = 1;
 11574  0623  158D               	bsf	13,3	;volatile
 11575                           
 11576                           ;Buzzer_B1.c: 79: }
 11577                           ;Buzzer_B1.c: 80: } else {
 11578  0624  0008               	return
 11579  0625                     l4808:	
 11580                           
 11581                           ;Buzzer_B1.c: 81: Buz->Switch = 0;
 11582  0625  0856               	movf	_Buz,w
 11583  0626  0086               	movwf	6
 11584  0627  0187               	clrf	7
 11585  0628  1281               	bcf	1,5
 11586                           
 11587                           ;Buzzer_B1.c: 83: RB3 = 0;
 11588  0629  118D               	bcf	13,3	;volatile
 11589                           
 11590                           ;Buzzer_B1.c: 85: Buz->Count--;
 11591  062A  0856               	movf	_Buz,w
 11592  062B  3E03               	addlw	3
 11593  062C  0086               	movwf	6
 11594  062D  0187               	clrf	7
 11595  062E  3001               	movlw	1
 11596  062F  0281               	subwf	1,f
 11597  0630  0008               	return
 11598  0631                     __end_of_Buzzer_Main:	
 11599                           
 11600                           	psect	text76
 11601  164B                     __ptext76:	
 11602 ;; *************** function _Buzzer_Initialization *****************
 11603 ;; Defined at:
 11604 ;;		line 11 in file "../src/Buzzer_B1.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;		None               void
 11611 ;; Registers used:
 11612 ;;		wreg, fsr1l, fsr1h
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;Total ram usage:        1 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    5
 11625 ;; This function calls:
 11626 ;;		Nothing
 11627 ;; This function is called by:
 11628 ;;		_main
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           
 11633                           ;psect for function _Buzzer_Initialization
 11634  164B                     _Buzzer_Initialization:	
 11635                           
 11636                           ;Buzzer_B1.c: 12: Buz = &Buz1;
 11637                           
 11638                           ;incstack = 0
 11639                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
 11640  164B  30BE               	movlw	_Buz1& (0+255)
 11641  164C  0020               	movlb	0	; select bank0
 11642  164D  00A0               	movwf	??_Buzzer_Initialization
 11643  164E  0820               	movf	??_Buzzer_Initialization,w
 11644  164F  00D6               	movwf	_Buz
 11645                           
 11646                           ;Buzzer_B1.c: 13: Buz->Enable = 1;
 11647  1650  0856               	movf	_Buz,w
 11648  1651  0086               	movwf	6
 11649  1652  0187               	clrf	7
 11650  1653  1401               	bsf	1,0
 11651  1654  0008               	return
 11652  1655                     __end_of_Buzzer_Initialization:	
 11653                           
 11654                           	psect	intentry
 11655  0004                     __pintentry:	
 11656 ;; *************** function _ISR *****************
 11657 ;; Defined at:
 11658 ;;		line 109 in file "../src/MCU_B1.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;		None
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;		None               void
 11665 ;; Registers used:
 11666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        1 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    4
 11679 ;; This function calls:
 11680 ;;		_INT_ISR
 11681 ;;		_IOC_ISR
 11682 ;;		_TMR0_ISR
 11683 ;; This function is called by:
 11684 ;;		Interrupt level 1
 11685 ;; This function uses a non-reentrant model
 11686 ;;
 11687                           
 11688  0004                     _ISR:	
 11689                           
 11690                           ;incstack = 0
 11691                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11692  0004  147E               	bsf	126,0	;set compiler interrupt flag
 11693  0005  3180               	pagesel	$
 11694  0006  0020               	movlb	0	; select bank0
 11695  0007  087F               	movf	127,w
 11696  0008  00F7               	movwf	??_ISR
 11697                           
 11698                           ;MCU_B1.c: 111: IOC_ISR();
 11699  0009  3197  2731  3180   	fcall	_IOC_ISR
 11700                           
 11701                           ;MCU_B1.c: 113: TMR0_ISR();
 11702  000C  3189  21BB  3180   	fcall	_TMR0_ISR
 11703                           
 11704                           ;MCU_B1.c: 115: ;;
 11705                           ;MCU_B1.c: 119: INT_ISR();
 11706  000F  3196  2614         	fcall	_INT_ISR
 11707  0011  0877               	movf	??_ISR,w
 11708  0012  0020               	movlb	0	; select bank0
 11709  0013  00FF               	movwf	127
 11710  0014  107E               	bcf	126,0	;clear compiler interrupt flag
 11711  0015  0009               	retfie
 11712  0016                     __end_of_ISR:	
 11713                           
 11714                           	psect	text78
 11715  09BB                     __ptext78:	
 11716 ;; *************** function _TMR0_ISR *****************
 11717 ;; Defined at:
 11718 ;;		line 137 in file "../src/MCU_B1.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;		None
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;		None
 11723 ;; Return value:  Size  Location     Type
 11724 ;;		None               void
 11725 ;; Registers used:
 11726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;Total ram usage:        0 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:    2
 11739 ;; This function calls:
 11740 ;;		_setDimmerLights_IntrControl
 11741 ;; This function is called by:
 11742 ;;		_ISR
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           
 11747                           ;psect for function _TMR0_ISR
 11748  09BB                     _TMR0_ISR:	
 11749                           
 11750                           ;MCU_B1.c: 138: if (TMR0IE == 1 && TMR0IF == 1) {
 11751                           
 11752                           ;incstack = 0
 11753                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11754  09BB  1E8B               	btfss	11,5	;volatile
 11755  09BC  0008               	return
 11756  09BD  1D0B               	btfss	11,2	;volatile
 11757  09BE  0008               	return
 11758                           
 11759                           ;MCU_B1.c: 139: TMR0 = (256-190);
 11760  09BF  3042               	movlw	66
 11761  09C0  0020               	movlb	0	; select bank0
 11762  09C1  0095               	movwf	21	;volatile
 11763                           
 11764                           ;MCU_B1.c: 140: TMR0IF = 0;
 11765  09C2  110B               	bcf	11,2	;volatile
 11766                           
 11767                           ;MCU_B1.c: 145: setDimmerLights_IntrControl(1);
 11768  09C3  3001               	movlw	1
 11769  09C4  3180  204B  3189   	fcall	_setDimmerLights_IntrControl
 11770                           
 11771                           ;MCU_B1.c: 150: setDimmerLights_IntrControl(2);
 11772  09C7  3002               	movlw	2
 11773  09C8  3180  204B  3189   	fcall	_setDimmerLights_IntrControl
 11774                           
 11775                           ;MCU_B1.c: 161: Timer0->Count++;
 11776  09CB  0A7C               	incf	_Timer0,w
 11777  09CC  0086               	movwf	6
 11778  09CD  0187               	clrf	7
 11779  09CE  3001               	movlw	1
 11780  09CF  0781               	addwf	1,f
 11781  09D0  3141               	addfsr 1,1
 11782  09D1  1803               	skipnc
 11783  09D2  0A81               	incf	1,f
 11784                           
 11785                           ;MCU_B1.c: 162: if (Timer0->Count == 100) {
 11786  09D3  0A7C               	incf	_Timer0,w
 11787  09D4  0086               	movwf	6
 11788  09D5  0187               	clrf	7
 11789  09D6  3F40               	moviw [0]fsr1
 11790  09D7  3A64               	xorlw	100
 11791  09D8  1D03               	skipz
 11792  09D9  29DC               	goto	u422_25
 11793  09DA  3F41               	moviw [1]fsr1
 11794  09DB  3A00               	xorlw	0
 11795  09DC                     u422_25:	
 11796  09DC  1D03               	skipz
 11797  09DD  0008               	return
 11798                           
 11799                           ;MCU_B1.c: 163: Timer0->Count = 0;
 11800  09DE  0A7C               	incf	_Timer0,w
 11801  09DF  0086               	movwf	6
 11802  09E0  0187               	clrf	7
 11803  09E1  3000               	movlw	0
 11804  09E2  3FC0               	movwi [0]fsr1
 11805  09E3  3FC1               	movwi [1]fsr1
 11806                           
 11807                           ;MCU_B1.c: 164: myMain->T0_Timerout = 1;
 11808  09E4  0020               	movlb	0	; select bank0
 11809  09E5  086C               	movf	_myMain,w
 11810  09E6  0086               	movwf	6
 11811  09E7  3001               	movlw	1	; select bank2/3
 11812  09E8  0087               	movwf	7
 11813  09E9  1481               	bsf	1,1
 11814  09EA  0008               	return
 11815  09EB                     __end_of_TMR0_ISR:	
 11816                           
 11817                           	psect	text79
 11818  004B                     __ptext79:	
 11819 ;; *************** function _setDimmerLights_IntrControl *****************
 11820 ;; Defined at:
 11821 ;;		line 87 in file "../src/Dimmer_B1.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  lights          1    wreg     unsigned char 
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  lights          1    6[COMMON] unsigned char 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;		None               void
 11828 ;; Registers used:
 11829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;Total ram usage:        5 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    1
 11842 ;; This function calls:
 11843 ;;		_DimmerIntrPointSelect
 11844 ;; This function is called by:
 11845 ;;		_TMR0_ISR
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           
 11850                           ;psect for function _setDimmerLights_IntrControl
 11851  004B                     _setDimmerLights_IntrControl:	
 11852                           
 11853                           ;incstack = 0
 11854                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11855                           ;setDimmerLights_IntrControl@lights stored from wreg
 11856  004B  00F6               	movwf	setDimmerLights_IntrControl@lights
 11857                           
 11858                           ;Dimmer_B1.c: 89: DimmerIntrPointSelect(lights);
 11859  004C  0876               	movf	setDimmerLights_IntrControl@lights,w
 11860  004D  3197  2765  3180   	fcall	_DimmerIntrPointSelect
 11861                           
 11862                           ;Dimmer_B1.c: 90: if (DimmerLightsIntr->GO == 1) {
 11863  0050  087A               	movf	_DimmerLightsIntr,w
 11864  0051  0086               	movwf	6
 11865  0052  0187               	clrf	7
 11866  0053  1C01               	btfss	1,0
 11867  0054  28A7               	goto	i1l4354
 11868                           
 11869                           ;Dimmer_B1.c: 91: DimmerLightsIntr->Count++;
 11870  0055  3001               	movlw	1
 11871  0056  00F2               	movwf	??_setDimmerLights_IntrControl
 11872  0057  087A               	movf	_DimmerLightsIntr,w
 11873  0058  3E03               	addlw	3
 11874  0059  0086               	movwf	6
 11875  005A  0187               	clrf	7
 11876  005B  0872               	movf	??_setDimmerLights_IntrControl,w
 11877  005C  0781               	addwf	1,f
 11878                           
 11879                           ;Dimmer_B1.c: 92: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue - Dimme
      +                          r->Correction)) {
 11880  005D  0020               	movlb	0	; select bank0
 11881  005E  0858               	movf	_Dimmer,w
 11882  005F  3E02               	addlw	2
 11883  0060  0086               	movwf	6
 11884  0061  0187               	clrf	7
 11885  0062  0801               	movf	1,w
 11886  0063  00F2               	movwf	??_setDimmerLights_IntrControl
 11887  0064  01F3               	clrf	??_setDimmerLights_IntrControl+1
 11888  0065  09F2               	comf	??_setDimmerLights_IntrControl,f
 11889  0066  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 11890  0067  0AF2               	incf	??_setDimmerLights_IntrControl,f
 11891  0068  1903               	skipnz
 11892  0069  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 11893  006A  087A               	movf	_DimmerLightsIntr,w
 11894  006B  3E04               	addlw	4
 11895  006C  0086               	movwf	6
 11896  006D  0187               	clrf	7
 11897  006E  0801               	movf	1,w
 11898  006F  0772               	addwf	??_setDimmerLights_IntrControl,w
 11899  0070  00F4               	movwf	??_setDimmerLights_IntrControl+2
 11900  0071  0873               	movf	??_setDimmerLights_IntrControl+1,w
 11901  0072  1803               	skipnc
 11902  0073  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 11903  0074  00F5               	movwf	??_setDimmerLights_IntrControl+3
 11904  0075  087A               	movf	_DimmerLightsIntr,w
 11905  0076  3E03               	addlw	3
 11906  0077  0086               	movwf	6
 11907  0078  0187               	clrf	7
 11908  0079  0875               	movf	??_setDimmerLights_IntrControl+3,w
 11909  007A  3A80               	xorlw	128
 11910  007B  3C80               	sublw	128
 11911  007C  1D03               	skipz
 11912  007D  2880               	goto	u335_25
 11913  007E  0874               	movf	??_setDimmerLights_IntrControl+2,w
 11914  007F  0201               	subwf	1,w
 11915  0080                     u335_25:	
 11916  0080  1C03               	skipc
 11917  0081  2988               	goto	i1l4416
 11918                           
 11919                           ;Dimmer_B1.c: 93: DimmerLightsIntr->Count = 0;
 11920  0082  087A               	movf	_DimmerLightsIntr,w
 11921  0083  3E03               	addlw	3
 11922  0084  0086               	movwf	6
 11923  0085  0187               	clrf	7
 11924  0086  0181               	clrf	1
 11925                           
 11926                           ;Dimmer_B1.c: 94: DimmerLightsIntr->GO = 0;
 11927  0087  087A               	movf	_DimmerLightsIntr,w
 11928  0088  0086               	movwf	6
 11929  0089  0187               	clrf	7
 11930  008A  1001               	bcf	1,0
 11931                           
 11932                           ;Dimmer_B1.c: 96: if (DimmerLightsIntr->StatusFlag == 1) {
 11933  008B  087A               	movf	_DimmerLightsIntr,w
 11934  008C  0086               	movwf	6
 11935  008D  0187               	clrf	7
 11936  008E  1F01               	btfss	1,6
 11937  008F  2988               	goto	i1l4416
 11938                           
 11939                           ;Dimmer_B1.c: 97: DimmerLightsIntr->Flag = 1;
 11940  0090  087A               	movf	_DimmerLightsIntr,w
 11941  0091  3E08               	addlw	8
 11942  0092  0086               	movwf	6
 11943  0093  0187               	clrf	7
 11944  0094  1401               	bsf	1,0
 11945                           
 11946                           ;Dimmer_B1.c: 98: DimmerLightsIntr->Triac = 1;
 11947  0095  087A               	movf	_DimmerLightsIntr,w
 11948  0096  3E08               	addlw	8
 11949  0097  0086               	movwf	6
 11950  0098  0187               	clrf	7
 11951  0099  1681               	bsf	1,5
 11952                           
 11953                           ;Dimmer_B1.c: 100: if (lights == 1) {
 11954  009A  0876               	movf	setDimmerLights_IntrControl@lights,w
 11955  009B  3A01               	xorlw	1
 11956  009C  1D03               	skipz
 11957  009D  28A0               	goto	i1l4350
 11958                           
 11959                           ;Dimmer_B1.c: 101: RA7 = 1;
 11960  009E  0020               	movlb	0	; select bank0
 11961  009F  178C               	bsf	12,7	;volatile
 11962  00A0                     i1l4350:	
 11963                           ;Dimmer_B1.c: 102: ;;
 11964                           
 11965                           
 11966                           ;Dimmer_B1.c: 103: }
 11967                           ;Dimmer_B1.c: 106: if (lights == 2) {
 11968  00A0  0876               	movf	setDimmerLights_IntrControl@lights,w
 11969  00A1  3A02               	xorlw	2
 11970  00A2  1D03               	skipz
 11971  00A3  2988               	goto	i1l4416
 11972                           
 11973                           ;Dimmer_B1.c: 107: RB4 = 1;
 11974  00A4  0020               	movlb	0	; select bank0
 11975  00A5  160D               	bsf	13,4	;volatile
 11976                           
 11977                           ;Dimmer_B1.c: 108: }
 11978                           ;Dimmer_B1.c: 115: }
 11979                           ;Dimmer_B1.c: 116: }
 11980                           ;Dimmer_B1.c: 117: } else {
 11981  00A6  2988               	goto	i1l4416
 11982  00A7                     i1l4354:	
 11983                           
 11984                           ;Dimmer_B1.c: 118: if (DimmerLightsIntr->Flag == 1) {
 11985  00A7  087A               	movf	_DimmerLightsIntr,w
 11986  00A8  3E08               	addlw	8
 11987  00A9  0086               	movwf	6
 11988  00AA  0187               	clrf	7
 11989  00AB  1C01               	btfss	1,0
 11990  00AC  2988               	goto	i1l4416
 11991                           
 11992                           ;Dimmer_B1.c: 119: DimmerLightsIntr->Flag = 0;
 11993  00AD  087A               	movf	_DimmerLightsIntr,w
 11994  00AE  3E08               	addlw	8
 11995  00AF  0086               	movwf	6
 11996  00B0  0187               	clrf	7
 11997  00B1  1001               	bcf	1,0
 11998                           
 11999                           ;Dimmer_B1.c: 120: if (DimmerLightsIntr->Signal == 1) {
 12000  00B2  087A               	movf	_DimmerLightsIntr,w
 12001  00B3  0086               	movwf	6
 12002  00B4  0187               	clrf	7
 12003  00B5  1C81               	btfss	1,1
 12004  00B6  2988               	goto	i1l4416
 12005                           
 12006                           ;Dimmer_B1.c: 121: DimmerLightsIntr->DimmingTime++;
 12007  00B7  3001               	movlw	1
 12008  00B8  00F2               	movwf	??_setDimmerLights_IntrControl
 12009  00B9  0A7A               	incf	_DimmerLightsIntr,w
 12010  00BA  0086               	movwf	6
 12011  00BB  0187               	clrf	7
 12012  00BC  0872               	movf	??_setDimmerLights_IntrControl,w
 12013  00BD  0781               	addwf	1,f
 12014                           
 12015                           ;Dimmer_B1.c: 122: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 12016  00BE  0A7A               	incf	_DimmerLightsIntr,w
 12017  00BF  0086               	movwf	6
 12018  00C0  0187               	clrf	7
 12019  00C1  087A               	movf	_DimmerLightsIntr,w
 12020  00C2  3E02               	addlw	2
 12021  00C3  0084               	movwf	4
 12022  00C4  0185               	clrf	5
 12023  00C5  0800               	movf	0,w
 12024  00C6  0201               	subwf	1,w
 12025  00C7  1C03               	skipc
 12026  00C8  2988               	goto	i1l4416
 12027                           
 12028                           ;Dimmer_B1.c: 123: DimmerLightsIntr->DimmingTime = 0;
 12029  00C9  0A7A               	incf	_DimmerLightsIntr,w
 12030  00CA  0086               	movwf	6
 12031  00CB  0187               	clrf	7
 12032  00CC  0181               	clrf	1
 12033                           
 12034                           ;Dimmer_B1.c: 124: if (DimmerLightsIntr->AdjFlag == 1) {
 12035  00CD  087A               	movf	_DimmerLightsIntr,w
 12036  00CE  0086               	movwf	6
 12037  00CF  0187               	clrf	7
 12038  00D0  1D81               	btfss	1,3
 12039  00D1  2901               	goto	i1l4380
 12040                           
 12041                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->AdjStatus == 0) {
 12042  00D2  087A               	movf	_DimmerLightsIntr,w
 12043  00D3  0086               	movwf	6
 12044  00D4  0187               	clrf	7
 12045  00D5  1A01               	btfsc	1,4
 12046  00D6  28EB               	goto	i1l4374
 12047                           
 12048                           ;Dimmer_B1.c: 126: if (DimmerLightsIntr->DimmingValue > ((char)((100-60)*0.8))) {
 12049  00D7  087A               	movf	_DimmerLightsIntr,w
 12050  00D8  3E04               	addlw	4
 12051  00D9  0086               	movwf	6
 12052  00DA  0187               	clrf	7
 12053  00DB  3021               	movlw	33
 12054  00DC  0201               	subwf	1,w
 12055  00DD  1C03               	skipc
 12056  00DE  28E6               	goto	i1l4372
 12057                           
 12058                           ;Dimmer_B1.c: 127: DimmerLightsIntr->DimmingValue--;
 12059  00DF  087A               	movf	_DimmerLightsIntr,w
 12060  00E0  3E04               	addlw	4
 12061  00E1  0086               	movwf	6
 12062  00E2  0187               	clrf	7
 12063  00E3  3001               	movlw	1
 12064  00E4  0281               	subwf	1,f
 12065                           
 12066                           ;Dimmer_B1.c: 128: } else {
 12067  00E5  2988               	goto	i1l4416
 12068  00E6                     i1l4372:	
 12069                           
 12070                           ;Dimmer_B1.c: 129: DimmerLightsIntr->AdjStatus = 1;
 12071  00E6  087A               	movf	_DimmerLightsIntr,w
 12072  00E7  0086               	movwf	6
 12073  00E8  0187               	clrf	7
 12074  00E9  1601               	bsf	1,4
 12075                           
 12076                           ;Dimmer_B1.c: 130: }
 12077                           ;Dimmer_B1.c: 131: } else {
 12078  00EA  2988               	goto	i1l4416
 12079  00EB                     i1l4374:	
 12080                           
 12081                           ;Dimmer_B1.c: 132: if (DimmerLightsIntr->DimmingValue < ((char)((100-25)*0.8))) {
 12082  00EB  087A               	movf	_DimmerLightsIntr,w
 12083  00EC  3E04               	addlw	4
 12084  00ED  0086               	movwf	6
 12085  00EE  0187               	clrf	7
 12086  00EF  303C               	movlw	60
 12087  00F0  0201               	subwf	1,w
 12088  00F1  1803               	skipnc
 12089  00F2  28FC               	goto	i1l4378
 12090                           
 12091                           ;Dimmer_B1.c: 133: DimmerLightsIntr->DimmingValue++;
 12092  00F3  3001               	movlw	1
 12093  00F4  00F2               	movwf	??_setDimmerLights_IntrControl
 12094  00F5  087A               	movf	_DimmerLightsIntr,w
 12095  00F6  3E04               	addlw	4
 12096  00F7  0086               	movwf	6
 12097  00F8  0187               	clrf	7
 12098  00F9  0872               	movf	??_setDimmerLights_IntrControl,w
 12099  00FA  0781               	addwf	1,f
 12100                           
 12101                           ;Dimmer_B1.c: 134: } else {
 12102  00FB  2988               	goto	i1l4416
 12103  00FC                     i1l4378:	
 12104                           
 12105                           ;Dimmer_B1.c: 135: DimmerLightsIntr->AdjStatus = 0;
 12106  00FC  087A               	movf	_DimmerLightsIntr,w
 12107  00FD  0086               	movwf	6
 12108  00FE  0187               	clrf	7
 12109  00FF  1201               	bcf	1,4
 12110                           
 12111                           ;Dimmer_B1.c: 136: }
 12112                           ;Dimmer_B1.c: 137: }
 12113                           ;Dimmer_B1.c: 138: } else if (DimmerLightsIntr->AdjRF == 1) {
 12114  0100  2988               	goto	i1l4416
 12115  0101                     i1l4380:	
 12116  0101  087A               	movf	_DimmerLightsIntr,w
 12117  0102  0086               	movwf	6
 12118  0103  0187               	clrf	7
 12119  0104  1D01               	btfss	1,2
 12120  0105  293E               	goto	i1l4394
 12121                           
 12122                           ;Dimmer_B1.c: 139: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 12123  0106  087A               	movf	_DimmerLightsIntr,w
 12124  0107  3E05               	addlw	5
 12125  0108  0086               	movwf	6
 12126  0109  0187               	clrf	7
 12127  010A  087A               	movf	_DimmerLightsIntr,w
 12128  010B  3E04               	addlw	4
 12129  010C  0084               	movwf	4
 12130  010D  0185               	clrf	5
 12131  010E  0800               	movf	0,w
 12132  010F  0201               	subwf	1,w
 12133  0110  1803               	skipnc
 12134  0111  2919               	goto	i1l4386
 12135                           
 12136                           ;Dimmer_B1.c: 140: DimmerLightsIntr->DimmingValue--;
 12137  0112  087A               	movf	_DimmerLightsIntr,w
 12138  0113  3E04               	addlw	4
 12139  0114  0086               	movwf	6
 12140  0115  0187               	clrf	7
 12141  0116  3001               	movlw	1
 12142  0117  0281               	subwf	1,f
 12143                           
 12144                           ;Dimmer_B1.c: 141: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 12145  0118  292D               	goto	i1l4390
 12146  0119                     i1l4386:	
 12147  0119  087A               	movf	_DimmerLightsIntr,w
 12148  011A  3E04               	addlw	4
 12149  011B  0086               	movwf	6
 12150  011C  0187               	clrf	7
 12151  011D  087A               	movf	_DimmerLightsIntr,w
 12152  011E  3E05               	addlw	5
 12153  011F  0084               	movwf	4
 12154  0120  0185               	clrf	5
 12155  0121  0800               	movf	0,w
 12156  0122  0201               	subwf	1,w
 12157  0123  1803               	skipnc
 12158  0124  292D               	goto	i1l4390
 12159                           
 12160                           ;Dimmer_B1.c: 142: DimmerLightsIntr->DimmingValue++;
 12161  0125  3001               	movlw	1
 12162  0126  00F2               	movwf	??_setDimmerLights_IntrControl
 12163  0127  087A               	movf	_DimmerLightsIntr,w
 12164  0128  3E04               	addlw	4
 12165  0129  0086               	movwf	6
 12166  012A  0187               	clrf	7
 12167  012B  0872               	movf	??_setDimmerLights_IntrControl,w
 12168  012C  0781               	addwf	1,f
 12169  012D                     i1l4390:	
 12170                           
 12171                           ;Dimmer_B1.c: 143: }
 12172                           ;Dimmer_B1.c: 144: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 12173  012D  087A               	movf	_DimmerLightsIntr,w
 12174  012E  3E05               	addlw	5
 12175  012F  0086               	movwf	6
 12176  0130  0187               	clrf	7
 12177  0131  087A               	movf	_DimmerLightsIntr,w
 12178  0132  3E04               	addlw	4
 12179  0133  0084               	movwf	4
 12180  0134  0185               	clrf	5
 12181  0135  0800               	movf	0,w
 12182  0136  0601               	xorwf	1,w
 12183  0137  1D03               	skipz
 12184  0138  2988               	goto	i1l4416
 12185                           
 12186                           ;Dimmer_B1.c: 145: DimmerLightsIntr->AdjRF = 0;
 12187  0139  087A               	movf	_DimmerLightsIntr,w
 12188  013A  0086               	movwf	6
 12189  013B  0187               	clrf	7
 12190  013C  1101               	bcf	1,2
 12191  013D  2955               	goto	i1l4400
 12192  013E                     i1l4394:	
 12193                           ;Dimmer_B1.c: 147: }
 12194                           ;Dimmer_B1.c: 148: } else {
 12195                           
 12196                           ;Dimmer_B1.c: 146: DimmerLightsIntr->Signal = 0;
 12197                           
 12198                           
 12199                           ;Dimmer_B1.c: 149: if (DimmerLightsIntr->Status == 1) {
 12200  013E  087A               	movf	_DimmerLightsIntr,w
 12201  013F  0086               	movwf	6
 12202  0140  0187               	clrf	7
 12203  0141  1E81               	btfss	1,5
 12204  0142  295A               	goto	i1l4402
 12205                           
 12206                           ;Dimmer_B1.c: 150: DimmerLightsIntr->DimmingValue--;
 12207  0143  087A               	movf	_DimmerLightsIntr,w
 12208  0144  3E04               	addlw	4
 12209  0145  0086               	movwf	6
 12210  0146  0187               	clrf	7
 12211  0147  3001               	movlw	1
 12212  0148  0281               	subwf	1,f
 12213                           
 12214                           ;Dimmer_B1.c: 151: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 12215  0149  087A               	movf	_DimmerLightsIntr,w
 12216  014A  3E05               	addlw	5
 12217  014B  0086               	movwf	6
 12218  014C  0187               	clrf	7
 12219  014D  087A               	movf	_DimmerLightsIntr,w
 12220  014E  3E04               	addlw	4
 12221  014F  0084               	movwf	4
 12222  0150  0185               	clrf	5
 12223  0151  0800               	movf	0,w
 12224  0152  0201               	subwf	1,w
 12225  0153  1C03               	skipc
 12226  0154  2988               	goto	i1l4416
 12227  0155                     i1l4400:	
 12228                           
 12229                           ;Dimmer_B1.c: 152: DimmerLightsIntr->Signal = 0;
 12230  0155  087A               	movf	_DimmerLightsIntr,w
 12231  0156  0086               	movwf	6
 12232  0157  0187               	clrf	7
 12233  0158  1081               	bcf	1,1
 12234                           
 12235                           ;Dimmer_B1.c: 153: }
 12236                           ;Dimmer_B1.c: 154: } else {
 12237  0159  2988               	goto	i1l4416
 12238  015A                     i1l4402:	
 12239                           
 12240                           ;Dimmer_B1.c: 155: DimmerLightsIntr->DimmingValue++;
 12241  015A  3001               	movlw	1
 12242  015B  00F2               	movwf	??_setDimmerLights_IntrControl
 12243  015C  087A               	movf	_DimmerLightsIntr,w
 12244  015D  3E04               	addlw	4
 12245  015E  0086               	movwf	6
 12246  015F  0187               	clrf	7
 12247  0160  0872               	movf	??_setDimmerLights_IntrControl,w
 12248  0161  0781               	addwf	1,f
 12249                           
 12250                           ;Dimmer_B1.c: 156: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 12251  0162  087A               	movf	_DimmerLightsIntr,w
 12252  0163  3E04               	addlw	4
 12253  0164  0086               	movwf	6
 12254  0165  0187               	clrf	7
 12255  0166  087A               	movf	_DimmerLightsIntr,w
 12256  0167  3E06               	addlw	6
 12257  0168  0084               	movwf	4
 12258  0169  0185               	clrf	5
 12259  016A  0800               	movf	0,w
 12260  016B  0201               	subwf	1,w
 12261  016C  1C03               	skipc
 12262  016D  2988               	goto	i1l4416
 12263                           
 12264                           ;Dimmer_B1.c: 157: DimmerLightsIntr->Signal = 0;
 12265  016E  087A               	movf	_DimmerLightsIntr,w
 12266  016F  0086               	movwf	6
 12267  0170  0187               	clrf	7
 12268  0171  1081               	bcf	1,1
 12269                           
 12270                           ;Dimmer_B1.c: 158: DimmerLightsIntr->StatusFlag = 0;
 12271  0172  087A               	movf	_DimmerLightsIntr,w
 12272  0173  0086               	movwf	6
 12273  0174  0187               	clrf	7
 12274  0175  1301               	bcf	1,6
 12275                           
 12276                           ;Dimmer_B1.c: 159: DimmerLightsIntr->Clear = 1;
 12277  0176  087A               	movf	_DimmerLightsIntr,w
 12278  0177  3E09               	addlw	9
 12279  0178  0086               	movwf	6
 12280  0179  0187               	clrf	7
 12281  017A  1501               	bsf	1,2
 12282                           
 12283                           ;Dimmer_B1.c: 160: Dimmer->Detect = 1;
 12284  017B  0020               	movlb	0	; select bank0
 12285  017C  0858               	movf	_Dimmer,w
 12286  017D  0086               	movwf	6
 12287  017E  0187               	clrf	7
 12288  017F  1401               	bsf	1,0
 12289                           
 12290                           ;Dimmer_B1.c: 162: if (lights == 1) {
 12291  0180  0876               	movf	setDimmerLights_IntrControl@lights,w
 12292  0181  3A01               	xorlw	1
 12293  0182  1903               	btfsc	3,2
 12294                           
 12295                           ;Dimmer_B1.c: 163: RA3 = 0;
 12296  0183  118C               	bcf	12,3	;volatile
 12297                           
 12298                           ;Dimmer_B1.c: 165: }
 12299                           ;Dimmer_B1.c: 168: if (lights == 2) {
 12300  0184  0876               	movf	setDimmerLights_IntrControl@lights,w
 12301  0185  3A02               	xorlw	2
 12302  0186  1903               	btfsc	3,2
 12303                           
 12304                           ;Dimmer_B1.c: 169: RC7 = 0;
 12305  0187  138E               	bcf	14,7	;volatile
 12306  0188                     i1l4416:	
 12307                           ;Dimmer_B1.c: 170: }
 12308                           ;Dimmer_B1.c: 177: ;;
 12309                           
 12310                           
 12311                           ;Dimmer_B1.c: 178: }
 12312                           ;Dimmer_B1.c: 179: }
 12313                           ;Dimmer_B1.c: 180: }
 12314                           ;Dimmer_B1.c: 181: }
 12315                           ;Dimmer_B1.c: 182: }
 12316                           ;Dimmer_B1.c: 183: }
 12317                           ;Dimmer_B1.c: 184: }
 12318                           ;Dimmer_B1.c: 185: if (DimmerLightsIntr->Triac == 1) {
 12319  0188  087A               	movf	_DimmerLightsIntr,w
 12320  0189  3E08               	addlw	8
 12321  018A  0086               	movwf	6
 12322  018B  0187               	clrf	7
 12323  018C  1E81               	btfss	1,5
 12324  018D  29B4               	goto	i1l4434
 12325                           
 12326                           ;Dimmer_B1.c: 186: DimmerLightsIntr->TriacTime++;
 12327  018E  3001               	movlw	1
 12328  018F  00F2               	movwf	??_setDimmerLights_IntrControl
 12329  0190  087A               	movf	_DimmerLightsIntr,w
 12330  0191  3E07               	addlw	7
 12331  0192  0086               	movwf	6
 12332  0193  0187               	clrf	7
 12333  0194  0872               	movf	??_setDimmerLights_IntrControl,w
 12334  0195  0781               	addwf	1,f
 12335                           
 12336                           ;Dimmer_B1.c: 187: if (DimmerLightsIntr->TriacTime >= 5) {
 12337  0196  087A               	movf	_DimmerLightsIntr,w
 12338  0197  3E07               	addlw	7
 12339  0198  0086               	movwf	6
 12340  0199  0187               	clrf	7
 12341  019A  3005               	movlw	5
 12342  019B  0201               	subwf	1,w
 12343  019C  1C03               	skipc
 12344  019D  29B4               	goto	i1l4434
 12345                           
 12346                           ;Dimmer_B1.c: 188: DimmerLightsIntr->TriacTime = 0;
 12347  019E  087A               	movf	_DimmerLightsIntr,w
 12348  019F  3E07               	addlw	7
 12349  01A0  0086               	movwf	6
 12350  01A1  0187               	clrf	7
 12351  01A2  0181               	clrf	1
 12352                           
 12353                           ;Dimmer_B1.c: 189: DimmerLightsIntr->Triac = 0;
 12354  01A3  087A               	movf	_DimmerLightsIntr,w
 12355  01A4  3E08               	addlw	8
 12356  01A5  0086               	movwf	6
 12357  01A6  0187               	clrf	7
 12358  01A7  1281               	bcf	1,5
 12359                           
 12360                           ;Dimmer_B1.c: 192: if (lights == 1) {
 12361  01A8  0876               	movf	setDimmerLights_IntrControl@lights,w
 12362  01A9  3A01               	xorlw	1
 12363  01AA  1D03               	skipz
 12364  01AB  29AE               	goto	i1l4430
 12365                           
 12366                           ;Dimmer_B1.c: 193: RA7 = 0;
 12367  01AC  0020               	movlb	0	; select bank0
 12368  01AD  138C               	bcf	12,7	;volatile
 12369  01AE                     i1l4430:	
 12370                           ;Dimmer_B1.c: 194: ;;
 12371                           
 12372                           
 12373                           ;Dimmer_B1.c: 195: }
 12374                           ;Dimmer_B1.c: 198: if (lights == 2) {
 12375  01AE  0876               	movf	setDimmerLights_IntrControl@lights,w
 12376  01AF  3A02               	xorlw	2
 12377  01B0  1D03               	skipz
 12378  01B1  29B4               	goto	i1l4434
 12379                           
 12380                           ;Dimmer_B1.c: 199: RB4 = 0;
 12381  01B2  0020               	movlb	0	; select bank0
 12382  01B3  120D               	bcf	13,4	;volatile
 12383  01B4                     i1l4434:	
 12384                           
 12385                           ;Dimmer_B1.c: 200: }
 12386                           ;Dimmer_B1.c: 207: }
 12387                           ;Dimmer_B1.c: 208: }
 12388                           ;Dimmer_B1.c: 209: if (DimmerLightsIntr->TriacFlag == 1) {
 12389  01B4  087A               	movf	_DimmerLightsIntr,w
 12390  01B5  3E09               	addlw	9
 12391  01B6  0086               	movwf	6
 12392  01B7  0187               	clrf	7
 12393  01B8  1E81               	btfss	1,5
 12394  01B9  0008               	return
 12395                           
 12396                           ;Dimmer_B1.c: 210: DimmerLightsIntr->TriacCount++;
 12397  01BA  3001               	movlw	1
 12398  01BB  00F2               	movwf	??_setDimmerLights_IntrControl
 12399  01BC  087A               	movf	_DimmerLightsIntr,w
 12400  01BD  3E0A               	addlw	10
 12401  01BE  0086               	movwf	6
 12402  01BF  0187               	clrf	7
 12403  01C0  0872               	movf	??_setDimmerLights_IntrControl,w
 12404  01C1  0781               	addwf	1,f
 12405                           
 12406                           ;Dimmer_B1.c: 211: if (DimmerLightsIntr->TriacCount == 70) {
 12407  01C2  087A               	movf	_DimmerLightsIntr,w
 12408  01C3  3E0A               	addlw	10
 12409  01C4  0086               	movwf	6
 12410  01C5  0187               	clrf	7
 12411  01C6  0801               	movf	1,w
 12412  01C7  3A46               	xorlw	70
 12413  01C8  1D03               	skipz
 12414  01C9  0008               	return
 12415                           
 12416                           ;Dimmer_B1.c: 212: DimmerLightsIntr->TriacCount = 0;
 12417  01CA  087A               	movf	_DimmerLightsIntr,w
 12418  01CB  3E0A               	addlw	10
 12419  01CC  0086               	movwf	6
 12420  01CD  0187               	clrf	7
 12421  01CE  0181               	clrf	1
 12422                           
 12423                           ;Dimmer_B1.c: 213: DimmerLightsIntr->TriacFlag = 0;
 12424  01CF  087A               	movf	_DimmerLightsIntr,w
 12425  01D0  3E09               	addlw	9
 12426  01D1  0086               	movwf	6
 12427  01D2  0187               	clrf	7
 12428  01D3  1281               	bcf	1,5
 12429  01D4  0008               	return
 12430  01D5                     __end_of_setDimmerLights_IntrControl:	
 12431                           
 12432                           	psect	text80
 12433  1765                     __ptext80:	
 12434 ;; *************** function _DimmerIntrPointSelect *****************
 12435 ;; Defined at:
 12436 ;;		line 65 in file "../src/Dimmer_B1.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  lights          1    wreg     unsigned char 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;  lights          1    1[COMMON] unsigned char 
 12441 ;; Return value:  Size  Location     Type
 12442 ;;		None               void
 12443 ;; Registers used:
 12444 ;;		wreg
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12454 ;;Total ram usage:        2 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; This function calls:
 12457 ;;		Nothing
 12458 ;; This function is called by:
 12459 ;;		_setDimmerLights_IntrControl
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           
 12464                           ;psect for function _DimmerIntrPointSelect
 12465  1765                     _DimmerIntrPointSelect:	
 12466                           
 12467                           ;incstack = 0
 12468                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 12469                           ;DimmerIntrPointSelect@lights stored from wreg
 12470  1765  00F1               	movwf	DimmerIntrPointSelect@lights
 12471                           
 12472                           ;Dimmer_B1.c: 67: if (lights == 1) {
 12473  1766  0871               	movf	DimmerIntrPointSelect@lights,w
 12474  1767  3A01               	xorlw	1
 12475  1768  1D03               	skipz
 12476  1769  2F6E               	goto	i1l447
 12477                           
 12478                           ;Dimmer_B1.c: 68: DimmerLightsIntr = &DimmerLights1;
 12479  176A  30A0               	movlw	_DimmerLights1& (0+255)
 12480  176B  00F0               	movwf	??_DimmerIntrPointSelect
 12481  176C  0870               	movf	??_DimmerIntrPointSelect,w
 12482  176D  00FA               	movwf	_DimmerLightsIntr
 12483  176E                     i1l447:	
 12484                           
 12485                           ;Dimmer_B1.c: 69: }
 12486                           ;Dimmer_B1.c: 72: if (lights == 2) {
 12487  176E  0871               	movf	DimmerIntrPointSelect@lights,w
 12488  176F  3A02               	xorlw	2
 12489  1770  1D03               	skipz
 12490  1771  0008               	return
 12491                           
 12492                           ;Dimmer_B1.c: 73: DimmerLightsIntr = &DimmerLights2;
 12493  1772  30AF               	movlw	_DimmerLights2& (0+255)
 12494  1773  00F0               	movwf	??_DimmerIntrPointSelect
 12495  1774  0870               	movf	??_DimmerIntrPointSelect,w
 12496  1775  00FA               	movwf	_DimmerLightsIntr
 12497  1776  0008               	return
 12498  1777                     __end_of_DimmerIntrPointSelect:	
 12499                           
 12500                           	psect	text81
 12501  1731                     __ptext81:	
 12502 ;; *************** function _IOC_ISR *****************
 12503 ;; Defined at:
 12504 ;;		line 297 in file "../src/MCU_B1.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;		None               void
 12511 ;; Registers used:
 12512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;Total ram usage:        0 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    3
 12525 ;; This function calls:
 12526 ;;		_setDimmerReClock
 12527 ;; This function is called by:
 12528 ;;		_ISR
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           
 12533                           ;psect for function _IOC_ISR
 12534  1731                     _IOC_ISR:	
 12535                           
 12536                           ;MCU_B1.c: 298: if (IOCIE == 1 && IOCBF2 == 1) {
 12537                           
 12538                           ;incstack = 0
 12539                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12540  1731  1D8B               	btfss	11,3	;volatile
 12541  1732  0008               	return
 12542  1733  0027               	movlb	7	; select bank7
 12543  1734  1D16               	btfss	22,2	;volatile
 12544  1735  0008               	return
 12545                           
 12546                           ;MCU_B1.c: 299: IOCBF2 = 0;
 12547  1736  1116               	bcf	22,2	;volatile
 12548                           
 12549                           ;MCU_B1.c: 300: IOCIF = 0;
 12550  1737  100B               	bcf	11,0	;volatile
 12551                           
 12552                           ;MCU_B1.c: 301: if (myMain->PowerON == 1) {
 12553  1738  0020               	movlb	0	; select bank0
 12554  1739  086C               	movf	_myMain,w
 12555  173A  0086               	movwf	6
 12556  173B  3001               	movlw	1	; select bank2/3
 12557  173C  0087               	movwf	7
 12558  173D  1C01               	btfss	1,0
 12559  173E  0008               	return
 12560                           
 12561                           ;MCU_B1.c: 303: setDimmerReClock();
 12562  173F  3196  2655         	fcall	_setDimmerReClock
 12563  1741  0008               	return
 12564  1742                     __end_of_IOC_ISR:	
 12565                           
 12566                           	psect	text82
 12567  1655                     __ptext82:	
 12568 ;; *************** function _setDimmerReClock *****************
 12569 ;; Defined at:
 12570 ;;		line 175 in file "../src/MCU_B1.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;		None
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;		None               void
 12577 ;; Registers used:
 12578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;Total ram usage:        0 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:    2
 12591 ;; This function calls:
 12592 ;;		_setDimmerLights_IntrIOC_GO
 12593 ;; This function is called by:
 12594 ;;		_IOC_ISR
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           
 12599                           ;psect for function _setDimmerReClock
 12600  1655                     _setDimmerReClock:	
 12601                           
 12602                           ;MCU_B1.c: 180: setDimmerLights_IntrIOC_GO(1);
 12603                           
 12604                           ;incstack = 0
 12605                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12606  1655  3001               	movlw	1
 12607  1656  3188  204A  3196   	fcall	_setDimmerLights_IntrIOC_GO
 12608                           
 12609                           ;MCU_B1.c: 184: setDimmerLights_IntrIOC_GO(2);
 12610  1659  3002               	movlw	2
 12611  165A  3188  204A         	fcall	_setDimmerLights_IntrIOC_GO
 12612                           
 12613                           ;MCU_B1.c: 191: TMR0 = 255;
 12614  165C  30FF               	movlw	255
 12615  165D  0020               	movlb	0	; select bank0
 12616  165E  0095               	movwf	21	;volatile
 12617  165F  0008               	return
 12618  1660                     __end_of_setDimmerReClock:	
 12619                           
 12620                           	psect	text83
 12621  084A                     __ptext83:	
 12622 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 12623 ;; Defined at:
 12624 ;;		line 28 in file "../src/Dimmer_B1.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;  lights          1    wreg     unsigned char 
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;  lights          1    2[COMMON] unsigned char 
 12629 ;; Return value:  Size  Location     Type
 12630 ;;		None               void
 12631 ;; Registers used:
 12632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;Total ram usage:        1 bytes
 12643 ;; Hardware stack levels used:    1
 12644 ;; Hardware stack levels required when called:    1
 12645 ;; This function calls:
 12646 ;;		_DimmerIntrIOCPointSelect
 12647 ;; This function is called by:
 12648 ;;		_setDimmerReClock
 12649 ;; This function uses a non-reentrant model
 12650 ;;
 12651                           
 12652                           
 12653                           ;psect for function _setDimmerLights_IntrIOC_GO
 12654  084A                     _setDimmerLights_IntrIOC_GO:	
 12655                           
 12656                           ;incstack = 0
 12657                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12658                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 12659  084A  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 12660                           
 12661                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 12662  084B  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 12663  084C  3197  2753  3188   	fcall	_DimmerIntrIOCPointSelect
 12664                           
 12665                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 12666  084F  087B               	movf	_DimmerLightsIntrIOC,w
 12667  0850  0086               	movwf	6
 12668  0851  0187               	clrf	7
 12669  0852  1801               	btfsc	1,0
 12670  0853  0008               	return
 12671  0854  087B               	movf	_DimmerLightsIntrIOC,w
 12672  0855  3E09               	addlw	9
 12673  0856  0086               	movwf	6
 12674  0857  0187               	clrf	7
 12675  0858  1A81               	btfsc	1,5
 12676  0859  0008               	return
 12677                           
 12678                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 12679  085A  087B               	movf	_DimmerLightsIntrIOC,w
 12680  085B  0086               	movwf	6
 12681  085C  0187               	clrf	7
 12682  085D  1401               	bsf	1,0
 12683                           
 12684                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 12685  085E  087B               	movf	_DimmerLightsIntrIOC,w
 12686  085F  3E09               	addlw	9
 12687  0860  0086               	movwf	6
 12688  0861  0187               	clrf	7
 12689  0862  1681               	bsf	1,5
 12690  0863  0008               	return
 12691  0864                     __end_of_setDimmerLights_IntrIOC_GO:	
 12692                           
 12693                           	psect	text84
 12694  1753                     __ptext84:	
 12695 ;; *************** function _DimmerIntrIOCPointSelect *****************
 12696 ;; Defined at:
 12697 ;;		line 8 in file "../src/Dimmer_B1.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  lights          1    wreg     unsigned char 
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;  lights          1    1[COMMON] unsigned char 
 12702 ;; Return value:  Size  Location     Type
 12703 ;;		None               void
 12704 ;; Registers used:
 12705 ;;		wreg
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;Total ram usage:        2 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; This function calls:
 12718 ;;		Nothing
 12719 ;; This function is called by:
 12720 ;;		_setDimmerLights_IntrIOC_GO
 12721 ;; This function uses a non-reentrant model
 12722 ;;
 12723                           
 12724                           
 12725                           ;psect for function _DimmerIntrIOCPointSelect
 12726  1753                     _DimmerIntrIOCPointSelect:	
 12727                           
 12728                           ;incstack = 0
 12729                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 12730                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 12731  1753  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 12732                           
 12733                           ;Dimmer_B1.c: 10: if (lights == 1) {
 12734  1754  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12735  1755  3A01               	xorlw	1
 12736  1756  1D03               	skipz
 12737  1757  2F5C               	goto	i1l438
 12738                           
 12739                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 12740  1758  30A0               	movlw	_DimmerLights1& (0+255)
 12741  1759  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12742  175A  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12743  175B  00FB               	movwf	_DimmerLightsIntrIOC
 12744  175C                     i1l438:	
 12745                           
 12746                           ;Dimmer_B1.c: 12: }
 12747                           ;Dimmer_B1.c: 15: if (lights == 2) {
 12748  175C  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 12749  175D  3A02               	xorlw	2
 12750  175E  1D03               	skipz
 12751  175F  0008               	return
 12752                           
 12753                           ;Dimmer_B1.c: 16: DimmerLightsIntrIOC = &DimmerLights2;
 12754  1760  30AF               	movlw	_DimmerLights2& (0+255)
 12755  1761  00F0               	movwf	??_DimmerIntrIOCPointSelect
 12756  1762  0870               	movf	??_DimmerIntrIOCPointSelect,w
 12757  1763  00FB               	movwf	_DimmerLightsIntrIOC
 12758  1764  0008               	return
 12759  1765                     __end_of_DimmerIntrIOCPointSelect:	
 12760                           
 12761                           	psect	text85
 12762  1614                     __ptext85:	
 12763 ;; *************** function _INT_ISR *****************
 12764 ;; Defined at:
 12765 ;;		line 250 in file "../src/MCU_B1.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;		None
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;		None               void
 12772 ;; Registers used:
 12773 ;;		None
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;Total ram usage:        0 bytes
 12784 ;; Hardware stack levels used:    1
 12785 ;; This function calls:
 12786 ;;		Nothing
 12787 ;; This function is called by:
 12788 ;;		_ISR
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           
 12793                           ;psect for function _INT_ISR
 12794  1614                     _INT_ISR:	
 12795                           
 12796                           ;MCU_B1.c: 251: if (INTE == 1 && INTF == 1) {
 12797                           
 12798                           ;incstack = 0
 12799                           ; Regs used in _INT_ISR: []
 12800  1614  1E0B               	btfss	11,4	;volatile
 12801  1615  0008               	return
 12802  1616  1C8B               	btfss	11,1	;volatile
 12803  1617  0008               	return
 12804                           
 12805                           ;MCU_B1.c: 252: INTF = 0;
 12806  1618  108B               	bcf	11,1	;volatile
 12807                           
 12808                           ;MCU_B1.c: 253: INTE = 0;
 12809  1619  120B               	bcf	11,4	;volatile
 12810  161A  0008               	return
 12811  161B                     __end_of_INT_ISR:	
 12812                           ;MCU_B1.c: 254: ;;
 12813                           
 12814  007E                     btemp	set	126	;btemp
 12815  007E                     pic14e$flags	set	126
 12816  007E                     wtemp	set	126
 12817  007E                     wtemp0	set	126
 12818  0080                     wtemp1	set	128
 12819  0082                     wtemp2	set	130
 12820  0084                     wtemp3	set	132
 12821  0086                     wtemp4	set	134
 12822  0088                     wtemp5	set	136
 12823  007F                     wtemp6	set	127
 12824  007E                     ttemp	set	126
 12825  007E                     ttemp0	set	126
 12826  0081                     ttemp1	set	129
 12827  0084                     ttemp2	set	132
 12828  0087                     ttemp3	set	135
 12829  007F                     ttemp4	set	127
 12830  007E                     ltemp	set	126
 12831  007E                     ltemp0	set	126
 12832  0082                     ltemp1	set	130
 12833  0086                     ltemp2	set	134
 12834  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         175
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     54      79
    BANK1            80      0      78
    BANK2            80      0      66
    BANK3            80      0      37
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK1[9]), Sw1(BANK1[9]), 

    Temp	PTR struct OverTemp size(1) Largest target is 14
		 -> NULL(NULL[0]), Temp1(BANK2[14]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 8
		 -> NULL(NULL[0]), VarTimer0(BANK1[8]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    myMain	PTR struct myMain size(1) Largest target is 20
		 -> NULL(NULL[0]), _myMain(BANK2[20]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    Dimmer	PTR struct Dimmer size(1) Largest target is 3
		 -> NULL(NULL[0]), Dimmer1(BANK0[3]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK2[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK1[5]), DlySw1(BANK1[5]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK1[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR0_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_Main->_setBuz
    _getTemp_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_DimmerLights_Exceptions
    _setSw_Enable->_SwPointSelect
    _DimmerLights_Exceptions->_setBuz
    _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
    _setDimmerLights_ERROR->_setLED
    _setDimmerLights_ERROR->_setSw_Status
    _Temp_Initialization->_setTemp_Initialization
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOnFunc
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _setDelayOff_GO->_DelayTimejudge
    _Sw_DimmerAdjFunc->_setDimmerLights_AdjGo
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_AdjGo->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_TMR0_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setSw_Status->_SwPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setDimmerLights_Switch->_DimmerLightsPointSelect
    _setBuz->___awdiv
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   23362
                                             50 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                         _getTemp_AD
              _myMain_Initialization
                            _my_Main
                _my_TestPointCleared
 ---------------------------------------------------------------------------------
 (1) _my_TestPointCleared                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1205
                             _setBuz
                       _setSw_Enable
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           5     5      0     130
                                              4 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     108
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    4498
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         3     3      0    4498
                                             16 BANK0      3     3      0
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               2     2      0    4498
                                             14 BANK0      2     2      0
            _DimmerLights_Exceptions
                             _setBuz
                             _setLED
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0      88
                                              2 BANK0      1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_Exceptions                              1     1      0    2511
                                             13 BANK0      1     1      0
         _getDimmerLights_StatusFlag
                             _setBuz
              _setDimmerLights_ERROR
       _setDimmerLights_TriggerERROR
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_TriggerERROR                         2     1      1     282
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _setDimmerLights_ERROR                                2     2      0    1020
                                              4 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setLED
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    5243
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           5     5      0    5243
                                             15 BANK0      5     5      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                             _setBuz
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    1768
                                             13 BANK0      2     2      0
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    1611
                                              8 BANK0      3     3      0
                     _setDelayOff_GO
              _setDimmerLights_AdjGo
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2     487
                                              3 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       3     3      0      51
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0     545
                                              4 BANK0      2     2      0
              _setDimmerLights_AdjGo
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           2     1      1     216
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_AdjGo                                2     1      1     216
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     716
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     716
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              1 BANK0      1     1      0
                            _ADC_Set
                           _Fosc_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     804
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     804
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     230
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     230
                                              4 BANK0      3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    5557
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    5283
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2640
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2195
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1976
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    2690
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    2576
                                             13 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     216
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1020
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1     694
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     114
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setMemory_GO                                         3     3      0      66
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _getDimmerLights_StatusFlag                           3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      66
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      66
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2003
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2003
                                             13 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
             _setDimmerLights_Switch
            _setDimmerLights_Trigger
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (6) _setSw_Status                                         2     1      1     216
                                              2 BANK0      2     1      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              2     1      1     280
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Switch                               2     1      1     280
                                              2 BANK0      2     1      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (6) _DimmerLightsPointSelect                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1095
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      66
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      66
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  1     1      0     264
                                              7 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0     198
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrControl                         5     5      0     198
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrPointSelect                               2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              0     0      0      66
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (10) _setDimmerReClock                                    0     0      0      66
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (11) _setDimmerLights_IntrIOC_GO                          1     1      0      66
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (12) _DimmerIntrIOCPointSelect                            2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_Switch
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setSw_Status
         _SwPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
         _setDimmerLights_AdjGo
           _DimmerLightsPointSelect
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Switch
           _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _setOverTemp_Exceptions
         _DimmerLights_Exceptions
           _getDimmerLights_StatusFlag
           _setBuz
             ___awdiv
           _setDimmerLights_ERROR
             _DimmerLightsPointSelect
             _setLED
               _LedPointSelect
             _setSw_Status
               _SwPointSelect
           _setDimmerLights_TriggerERROR
             _DimmerLightsPointSelect
         _setBuz
           ___awdiv
         _setLED
           _LedPointSelect
         _setSw_Enable
           _SwPointSelect
   _getTemp_AD
     _getAD
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setSw_Enable
       _SwPointSelect
     _setTemp_Enable
   _my_TestPointCleared

 _ISR (ROOT)
   _INT_ISR
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR0_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      25      11       46.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Oct 16 15:17:57 2014

                   __size_of_Switch_Main 0008                    ?_Flash_Memory_Erasing 0070  
           ??_setDimmerLights_TriggerAdj 0023                                       _RD 0CA8  
                                     _WR 0CA9                             ___awdiv@sign 0026  
                                     _Sw 005B       __end_of_getDimmerLights_StatusFlag 1753  
             _getDimmerLights_StatusFlag 1742                   __end_of_setDelayOff_GO 0D36  
              setDimmerLights_Adj@lights 0024                     _setDimmerLights_Main 0EBB  
                                    l536 0E28                                      l490 1793  
                                    l952 080E                                      l978 0A15  
                                    _GIE 005F                                      _RA0 0060  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _RA4 0064  
                                    _LED 005A                                      _RB3 006B  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _RC5 0075                                      _RC7 0077  
                                    _ISR 0004                                      _Sw1 00CA  
                                    _Sw2 00D3                                      _Buz 0056  
              setDimmerLights_Adj@status 0022           ??_setDimmerLights_TriggerERROR 0023  
                  _Buzzer_Initialization 164B                          __end_of_ADC_Set 1622  
                        ?_DelayTimejudge 0070                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023                          _setDimmerLights 0F91  
                  _setDimmerLights_ERROR 0A91                    _setDimmerLights_AdjGo 1703  
                __size_of_setTemp_Enable 000B                                     ?_ISR 0070  
                           ___ftdiv@cntr 0038                          __end_of_IOC_ISR 1742  
                           ___ftdiv@sign 003D                                     l2040 0DDB  
                                   l1312 0A44                                     l2034 0DC4  
                                   l4002 0DC9                 ?_DimmerLightsPointSelect 0070  
                                   l4004 0DD1                                     l4102 09FB  
                                   l4200 0BD4                                     l4052 0FDB  
                                   l4060 09A1                                     l4212 08FB  
                        __end_of_IOC_Set 16BD                                     l4222 0502  
                                   l1726 15F7                                     l4150 0C06  
                                   l4250 0572                                     l4242 0559  
                                   l4146 0BF9                                     l4138 0A3B  
                                   l4228 0518                                     l4172 0AE3  
                                   l4164 0C2D                                     l3702 17CE  
                                   l4264 064A                                     l4176 0AF0  
                                   l5144 0CA3                                     l3802 0C78  
                                   l4290 0695                                     l4282 067A  
                                   l3724 0D46                                     l3732 0D52  
                                   l4292 069E                                     l4284 0688  
                                   l4604 0E74                                     l4524 0A83  
                                   l5148 0CAE                                     l3806 0C80  
                                   l3822 06F8                                     l3742 0D62  
                                   l4294 06A1                                     l3728 0D4C  
                                   l4472 0ECF                                     l4608 0EB3  
                                   l4528 0A8A                                     l3840 0968  
                                   l4802 061A                                     l3834 17BA  
                                   l3826 0712                                     l3690 08BE  
                                   l3754 0D7C                                     l3762 0D88  
                                   l3738 0D5C                                     l3746 0D68  
                                   l4298 06AF                                     l3850 0972  
                                   l3842 096A                                     l3922 0D10  
                                   l4722 0228                                     l4706 01FA  
                                   l4634 032C                                     l4804 061F  
                                   l3780 0C49                                     l4484 0EF4  
                                   l4476 0ED9                                     l3844 096C  
                                   l3924 0D1D                                     l4732 0251  
                                   l4708 0201                                     l3790 0C51  
                                   l3774 0C3E                                     l3870 174C  
                                   l3694 08C7                                     l3758 0D82  
                                   l4494 0F1F                                     l4486 0EFA  
                                   l3846 096E                                     l3854 0977  
                                   l3918 0D0A                                     l4742 0288  
                                   l4750 02B2                                     l3950 0E08  
                                   l4808 0625                                     l3792 0C5D  
                                   l3848 0970                                     l3856 098B  
                                   l3928 0D29                                     l4672 03D1  
                                   l4656 0391                                     l3954 0E1B  
                                   l4666 03BE                                     l3956 0E20  
                                   l4668 03C5                                     l3798 0C6F  
                                   l4598 0E5D                                     l4934 0B4F  
                                   l3992 0DA1                                     l4696 01EB  
                                   l4960 0F68                                     l3994 0DAB  
                                   l4890 047B                                     l4698 01F0  
                                   l4796 05F8                                     l3996 0DB0  
                                   l3988 0D9A                                     l4986 0797  
                                   l4978 076B                    _myMain_Initialization 179C  
                                   _CFGS 0CAE                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 161B                                     _LATC 010E  
                                   u3225 0651                                     u4115 05BB  
                                   u2515 0C5E                                     u3155 052A  
                                   u2525 0C68                                     u3165 053A  
                                   u2535 0C70                                     u3175 055A  
                                   u3255 067B                                     u3185 0569  
                                   u3195 0573                                     u4315 0F57  
                                   u3285 0696                                     u4325 0F80  
                                   u2495 0C54                                     u2815 0DA6  
                                   u4345 0746                                     u2835 0DBF  
                                   u4355 0781                                     _PEIE 005E  
                                   _INTE 005C                                     _INTF 0059  
                                   u2855 0DCC                                     u4295 0B36  
                                   u2885 0DE2                                     _LWLO 0CAD  
                                   _TMR0 0015                          __end_of_INT_Set 1608  
                                   _WREN 0CAA                                     _Buz1 00BE  
                                   _Temp 005C                                     _main 0C87  
                           ___ftpack@arg 0020                      __end_of_DlyOff_Main 07FF  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 000F  
                                   btemp 007E                                     ltemp 007E  
                       _setDimmerReClock 1655                                     start 0016  
                                   ttemp 007E                                     wtemp 007E  
                    DelayTimejudge@value 0021             __size_of_Temp_Initialization 0003  
                                  ??_ISR 0077                             ___fttol@exp1 004B  
                           ___fttol@lval 0047           __size_of_DimmerIntrPointSelect 0012  
                       __end_of_LED_Main 16B0            __end_of_DimmerIntrPointSelect 1777  
                  ?_setDimmerLights_Main 0070                          ?_setDelayOff_GO 0023  
                                  ?_main 0052                          __end_of___awdiv 0C87  
                          __CFG_WDTE$OFF 0000                          __end_of___ftdiv 0594  
                        ___awdiv@divisor 0020                          __end_of___fttol 06B8  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                                  i1l438 175C                                    i1l447 176E  
                 _setDimmerLights_Switch 16E5                          ___awdiv@counter 0025  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0070  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                          __CFG_WRT$HALF 0000                                    _Temp1 0134  
     __end_of_setDimmerLights_IntrIOC_GO 0864               _setDimmerLights_IntrIOC_GO 084A  
                       __end_of_TMR0_ISR 09EB                         __end_of_TMR0_Set 16CA  
                                  _getAD 0804                            ___awtoft@sign 002D  
        __end_of_DimmerLights_Exceptions 0E56            DimmerLights_Exceptions@status 002D  
            DimmerIntrPointSelect@lights 0071                            ___ftpack@sign 0024  
                        __end_of_my_Main 079D                            ??_Buzzer_Main 0020  
                    setMemory_GO@command 0022                           __CFG_BOREN$OFF 0000  
                     Flash_Memory_Read@i 0021                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080           __size_of_setLED_Initialization 0010  
          __end_of_setLED_Initialization 1731                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
            __size_of_Flash_Memory_Write 0031                           setSw_Status@sw 0023  
       __size_of_DelayOff_Initialization 0008                setDimmerLights_Main@clear 002D  
                 ??_Flash_Memory_Erasing 0020                          __initialization 0018  
                      ??_Sw_DimmerOnFunc 002D                        ??_setPercentValue 004C  
                           __end_of_main 0CDD                         __end_of_Fosc_Set 0804  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 1000  
                   _setSw_Initialization 1632                                   ??_main 0056  
                          ___fttol@sign1 0046                   ?_Buzzer_Initialization 0070  
      __size_of_DimmerIntrIOCPointSelect 0012                  ??_DlyOff_Initialization 0022  
              ?_DimmerIntrIOCPointSelect 0070                                ??_IOC_ISR 0073  
                 ?_setDimmerLights_ERROR 0070                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 179C                                ??_INT_ISR 0070  
                 ?_setDimmerLights_AdjGo 0022                                ??_INT_Set 0020  
                ??_Switch_Initialization 0025                                   ?_getAD 0020  
                            _DlyOff_Main 079D                   ?_myMain_Initialization 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                       ___awdiv@dividend 0022                         __end_of___awtoft 0912  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 0DF2  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 16F4  
                                 i1l4400 0155                                   i1l4402 015A  
                                 i1l4430 01AE                                   i1l4350 00A0  
                                 i1l4416 0188                                   i1l4434 01B4  
                                 i1l4354 00A7                                   i1l4372 00E6  
                                 i1l4380 0101                                   i1l4390 012D  
                                 i1l4374 00EB                                   i1l4386 0119  
                                 i1l4394 013E                                   i1l4378 00FC  
                                 _FVRCON 0117                                   u422_25 09DC  
                                 u335_25 0080                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                                 _OSCCON 0099                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 0831  
                  _Dimmer_Initialization 15FC                                   _Dimmer 0058  
                                 _DlySw1 00E4                                   _DlySw2 00E9  
             __end_of_Mcu_Initialization 0831                      __end_of_Buzzer_Main 0631  
                                 _Memory 006E                                   _Timer0 007C  
     __end_of_setDimmerLights_TriggerAdj 1721               _setDimmerLights_TriggerAdj 1712  
          setDimmerLights_Switch@command 0022                                ??___awdiv 0024  
           __size_of_DelayOffPointSelect 0014                                ??___ftdiv 0034  
                  setDimmerLights@lights 0026                                ??___fttol 0042  
           ?_Flash_Memory_Initialization 0070                   ??_setDimmerLights_Main 002D  
                                 _setLED 0D36                                   _myMain 006C  
                       _DimmerLightsIntr 007A                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0024                         ___awdiv@quotient 0027  
                                 _setBuz 06B8                       __size_of_Temp_Main 0003  
       ??_setDimmerLights_Initialization 0022          ?_setDimmerLights_Initialization 0070  
           __size_of_my_TestPointCleared 0012             ??_getDimmerLights_StatusFlag 0020  
                              ??_my_Main 002D      __end_of_setDimmerLights_IntrControl 01D5  
            _setDimmerLights_IntrControl 004B                 Flash_Memory_Read@address 0022  
                  __end_of_SwPointSelect 17D7                           _setTemp_Enable 1681  
           __size_of_Flash_Memory_Modify 0065        setDimmerLights_IntrControl@lights 0076  
            __size_of_DimmerLights_Close 0014                  __size_of_LedPointSelect 001D  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
                             _TouchPower 15F7                        ?_Sw_DimmerAdjFunc 0070  
                __end_of__initialization 0047              setDimmerLights_AdjGo@lights 0023  
                              ?_LED_Main 0070                       ??_Sw_DimmerAdjFunc 0024  
                    setSw_Enable@command 0022                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0070                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0070                               ___fttol@f1 003E  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                     ??_Sw_DimmerOffFunc 0028                             __pidataBANK2 08D0  
                          __end_of_getAD 081A                                ?_TMR0_ISR 0070  
                              ?_TMR0_Set 0070             __size_of_setDimmerLights_Adj 002E  
                     _LED_Initialization 1698         __size_of_DimmerLights_Exceptions 0064  
                       ??_DelayTimejudge 0020              ?_getDimmerLights_StatusFlag 0070  
          ??_Flash_Memory_Initialization 0050                         ?_setDimmerLights 0024  
               __end_of_setDimmerReClock 1660                      ?_LED_Initialization 0070  
                 __end_of_setTemp_Enable 168C                           _DimmerLights11 0078  
                         _DimmerLights22 0079                     __size_of_setLED_Main 003D  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0023  
                    _Temp_Initialization 15F1             setDimmerLights_Switch@lights 0023  
                             __pbssBANK0 0056                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK3 01A0  
                              ?_Fosc_Set 0070                              _Buzzer_Main 0594  
                      __end_of_Temp_Main 15F7                   ?_Dimmer_Initialization 0070  
                                ?_IO_Set 0070                               ??_LED_Main 0025  
                          ?_setMemory_GO 0070                          __CFG_VCAPEN$OFF 0000  
                _DelayOff_Initialization 1622                               __pnvCOMMON 007C  
                          ??_Switch_Main 0034                     ??_LED_Initialization 0025  
                           _DimmerLights 0059                        LedPointSelect@led 0021  
                 __size_of_DelayOff_Main 0008                              setBuz@count 002C  
                             __pmaintext 0C87                     ?_Temp_Initialization 0070  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 0025  
          ??_DimmerLights_Initialization 0024                               ??_TMR0_ISR 0077  
                          ?_setTemp_Main 0070                               ??_TMR0_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                          ?_setSw_Enable 0070                  ?_setDimmerLights_Switch 0022  
                   Sw_DimmerAdjFunc@Idle 0024                                  ?_setLED 0022  
                                _ADC_Set 161B                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 0F25                            ?_setSw_Status 0022  
                      Sw_DimmerOnFunc@sw 002E                                  _IOC_ISR 1731  
                        ?_setTemp_Enable 0070                                  _IOC_Set 16B0  
                                _INT_ISR 1614                                  _INT_Set 1602  
                      _Flash_Memory_Main 0B12                        _Flash_Memory_Read 0864  
            ?_setDimmerLights_IntrIOC_GO 0070      setDimmerLights_TriggerERROR@command 0022  
                     ?_Flash_Memory_Main 0070                       ?_Flash_Memory_Read 0070  
                             ??_Fosc_Set 0020                              ?_TouchPower 0070  
                        _Sw_DimmerOnFunc 0BE7                          _setPercentValue 0B57  
                         ??_setMemory_GO 0020                                  _Dimmer1 0069  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 0061  
                                _VarLED2 0065         __end_of_DimmerIntrIOCPointSelect 1765  
                  ??_Temp_Initialization 0021          __end_of_setDimmerLights_Trigger 1703  
                         ??_setTemp_Main 0030           __end_of_setDimmerLights_Switch 16F4  
                                ___awdiv 0C33                           ??_setSw_Enable 0022  
                                ___ftdiv 04EB                                  ___fttol 0631  
                    __end_of_Switch_Main 1642                  ??_Buzzer_Initialization 0020  
               ??_setOverTemp_Exceptions 002E                                  __myMain 0120  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005B                  ??_setDimmerLights_ERROR 0024  
                        __size_of_setBuz 0074                           ??_setSw_Status 0023  
                                __ptext1 1777                                  __ptext2 072C  
                                __ptext3 1681                                  __ptext4 179C  
                                __ptext5 0F25                                  __ptext6 0804  
                                __ptext7 15F4                                  __ptext8 02F5  
                                __ptext9 0A1C                  ??_setDimmerLights_AdjGo 0023  
                    Sw_DimmerOnFunc@Idle 002D                    _DimmerIntrPointSelect 1765  
                           __size_of_ISR 0012                __end_of_Flash_Memory_Main 0B57  
              __end_of_Flash_Memory_Read 087E                  ??_myMain_Initialization 0020  
                          _DelayOff_Main 162A                        _DimmerLights_Main 166B  
                                _my_Main 072C           __size_of_DlyOff_Initialization 000B  
          __end_of_DlyOff_Initialization 166B                 ??_setTemp_Initialization 0020  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0070  
                     ?_DimmerLights_Main 0070                                  _product 006D  
                         _LedPointSelect 08B3                      _DelayOffPointSelect 17AF  
                                clrloop0 160F           __size_of_Switch_Initialization 000D  
          __end_of_Switch_Initialization 16D7                     end_of_initialization 0047  
              ??_DelayOff_Initialization 0023               __end_of_Flash_Memory_Write 0A1C  
                    _my_TestPointCleared 1777                                  init_ram 1608  
                    ??_DimmerLights_Main 002F                     Flash_Memory_Read@ret 0023  
                                initloop 1609                               _setSw_Main 01D5  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 1721  
            ?_setDimmerLights_TriggerAdj 0022            __size_of_Flash_Memory_Erasing 000C  
                   ?_DelayOffPointSelect 0070                      _Flash_Memory_Modify 0E56  
                _DimmerLights_Exceptions 0DF2                      _Flash_Memory_Unlock 1642  
       getDimmerLights_StatusFlag@Status 0021                              ?_getTemp_AD 0070  
                   ?_my_TestPointCleared 0070                      __size_of_TouchPower 0005  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 1676                       _Mcu_Initialization 081A  
                         ?_DelayOff_Main 0070                          _setSw_Main$4404 0031  
                        _setSw_Main$4405 0032                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 08D0                  __end_of_Sw_DimmerOnFunc 0C33  
                __end_of_setPercentValue 0B9D                      ?_Mcu_Initialization 0070  
                   ?_Flash_Memory_Modify 0070                      _setDimmerLights_Adj 098D  
                   ?_Flash_Memory_Unlock 0070                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 084A                              _Switch_Main 163A  
                      __size_of_LED_Main 000C                  _DimmerLightsPointSelect 1789  
                   ??_Mcu_Initialization 0021                    ??_DelayOffPointSelect 0020  
                   ?_setDimmerLights_Adj 0022                __size_of_Sw_DimmerAdjFunc 0041  
               _DimmerIntrIOCPointSelect 1753                    ??_my_TestPointCleared 0020  
                      __size_of_TMR0_ISR 0030          __size_of_setOverTemp_Exceptions 0038  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR0_Set 000D  
                   __end_of_setMemory_GO 08B3            __size_of_setDimmerLights_Main 006A  
                         __end_of_setLED 0D91                           __end_of_setBuz 072C  
        _getDimmerLights_StatusFlag$1654 0022                __size_of_Sw_DimmerOffFunc 004A  
             __size_of_Flash_Memory_Main 0045               __size_of_Flash_Memory_Read 001A  
                      ?_setDimmerReClock 0070                      start_initialization 0018  
                        ?_LedPointSelect 0070               __end_of_DimmerLights_Close 17EB  
                            __end_of_ISR 0016                    ??_Flash_Memory_Modify 0024  
                     ??_setDimmerReClock 0073          __size_of_setTemp_Initialization 000B  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 0402                     __end_of_setSw_Enable 0898  
                           ?_Buzzer_Main 0070                                 ??_IO_Set 0020  
                              _VarErrLED 005D                              ?_setSw_Main 0070  
                    __size_of_getTemp_AD 006C                   ?_setLED_Initialization 0070  
                   __end_of_setSw_Status 16E5                       Sw_DimmerAdjFunc@sw 0025  
                      __size_of_Fosc_Set 0004                                _VarMemory 01A0  
                              _VarTimer0 00DC                                _Temp_Main 15F4  
              ??_DimmerLights_Exceptions 002D            setOverTemp_Exceptions@command 002F  
                  ??_setDimmerLights_Adj 0023                   __size_of_SwPointSelect 0014  
                            __pdataBANK2 0142                                 ??_setLED 0023  
                       ??_setTemp_Enable 0020                                 ?_ADC_Set 0070  
                               ??_setBuz 002B                          ??_DelayOff_Main 0030  
             __size_of_DimmerLights_Main 000B                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0070                              __pbssCOMMON 0078  
                               ?_IOC_Set 0070                                ___latbits 0003  
                  setTemp_Enable@command 0020                                 ?_INT_ISR 0070  
                       ?_Sw_DimmerOnFunc 0070                            __pcstackBANK0 0020  
                               ?_INT_Set 0070                         ?_setPercentValue 0070  
               __size_of_setDimmerLights 006F                            DlyOff_Main@sw 002F  
                           ??_TouchPower 0020                     __size_of_DlyOff_Main 0062  
                 _setOverTemp_Exceptions 0A1C                            _DimmerLights1 00A0  
                          _DimmerLights2 00AF                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020                                __pnvBANK0 006C  
            __size_of_LED_Initialization 000C                               ?_Temp_Main 0070  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0029  
                    setDelayOff_GO@value 0024                   _setTemp_Initialization 1676  
    __end_of_Flash_Memory_Initialization 04EB              _Flash_Memory_Initialization 0402  
                               ?___awdiv 0020                                 ?___ftdiv 002E  
                               ?___fttol 003E            __size_of_setSw_Initialization 0008  
         __size_of_Buzzer_Initialization 000A            __end_of_Buzzer_Initialization 1655  
                       setPercentValue@i 004D                       __end_of_TouchPower 15FC  
     setDimmerLights_TriggerERROR@lights 0023           __size_of_setDimmerLights_ERROR 0040  
               ?_setDimmerLights_Trigger 0022                          DelayTimejudge@i 0022  
                    __size_of_setSw_Main 0120            __end_of_setDimmerLights_ERROR 0AD1  
         __size_of_setDimmerLights_AdjGo 000F            __end_of_setDimmerLights_AdjGo 1712  
                               ?_my_Main 0070           __size_of_myMain_Initialization 0013  
          __end_of_myMain_Initialization 17AF                           __size_of_getAD 0016  
                __size_of_DelayTimejudge 002C                            _SwPointSelect 17C3  
                     Sw_DimmerOffFunc@sw 002A                      __end_of_setLED_Main 0A91  
                    _DimmerLightsIntrIOC 007B              __end_of_Temp_Initialization 15F4  
                               _LED_Main 16A4                          SwPointSelect@sw 0021  
                              clear_ram0 160E      __end_of_DimmerLights_Initialization 1800  
            _DimmerLights_Initialization 17EB           setDimmerLights_Trigger@command 0022  
                               _GO_nDONE 04E9                    __size_of_setMemory_GO 001B  
                     _Flash_Memory_Write 09EB                                 _TMR0_ISR 09BB  
                               _TMR0_Set 16BD                         _Sw_DimmerAdjFunc 0AD1  
      setDimmerLights_TriggerAdj@command 0022                             ??_getTemp_AD 0024  
                DlyOff_Initialization@sw 0022                         __size_of_ADC_Set 0007  
                    ?_Flash_Memory_Write 0070                         _Sw_DimmerOffFunc 0B9D  
                  __size_of_setTemp_Main 010D                  __size_of_setDelayOff_GO 0059  
                  __size_of_setSw_Enable 001A                                 _DelayOff 0057  
                           setSw_Main@sw 0033         setDimmerLights_IntrIOC_GO@lights 0072  
                       __size_of_IOC_ISR 0011             ?_setDimmerLights_IntrControl 0070  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 1698  
                         ?_SwPointSelect 0070                              getAD@adcon0 0023  
                            getAD@adcon1 0020                         __size_of_INT_ISR 0007  
                         setLED_Main@led 0024                         __size_of_INT_Set 0006  
                  _DlyOff_Initialization 1660                    __size_of_setSw_Status 000E  
                               _Fosc_Set 0800                    _Switch_Initialization 16CA  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                           _setMemory_GO 0898                     __size_of_Buzzer_Main 009D  
                     __end_of_getTemp_AD 0F91                             ?_Switch_Main 0070  
             ??_DimmerIntrIOCPointSelect 0070             Flash_Memory_Initialization@i 0051  
                            ??_Temp_Main 0033                                setLED@led 0023  
   __end_of_setDimmerLights_TriggerERROR 0939    __size_of_setDimmerLights_TriggerERROR 0027  
           _setDimmerLights_TriggerERROR 0912                  ??_DimmerIntrPointSelect 0070  
                           _setTemp_Main 02F5                         __size_of___awdiv 0054  
                       __size_of___ftdiv 00A9                             _setSw_Enable 087E  
                       __size_of___fttol 0087                                 ___awtoft 08F0  
                       ??_LedPointSelect 0020                                 ___ftpack 0D91  
                           _setSw_Status 16D7                        getTemp_AD@channel 0028  
                            _setLED_Main 0A54                 ?_DelayOff_Initialization 0070  
                       setDelayOff_GO@sw 0027                         __size_of_my_Main 0071  
                               __ptext10 087E                                 __ptext11 0DF2  
                               __ptext20 0CDD                                 __ptext12 0912  
                               __ptext21 0961                                 __ptext13 0A91  
                               __ptext30 0831                                 __ptext22 0AD1  
                               __ptext14 15F1                                 __ptext31 16B0  
                               __ptext23 1712                                 __ptext15 1676  
                               __ptext40 0E56                                 __ptext32 1602  
                               __ptext24 1703                                 __ptext16 163A  
                               __ptext41 168C                                 __ptext33 0800  
                               __ptext25 16CA                                 __ptext17 01D5  
                               __ptext50 0864                                 __ptext42 0402  
                               __ptext34 161B                                 __ptext26 1632  
                               __ptext18 0BE7                                 __ptext51 166B  
                               __ptext43 0B57                                 __ptext35 16A4  
                               __ptext27 15F7                                 __ptext19 0B9D  
                               __ptext60 17EB                                 __ptext52 0EBB  
                               __ptext44 0631                                 __ptext36 0A54  
                               __ptext28 081A                                 __ptext61 0939  
                               __ptext53 098D                                 __ptext45 04EB  
                               __ptext37 1698                                 __ptext29 16BD  
                               __ptext70 06B8                                 __ptext62 15FC  
                               __ptext54 0F91                                 __ptext46 08F0  
                               __ptext38 1721                                 __ptext71 0C33  
                               __ptext63 162A                                 __ptext55 0D36  
                               __ptext47 0D91                                 __ptext39 0B12  
                               __ptext80 1765                                 __ptext72 1622  
                               __ptext64 079D                                 __ptext56 08B3  
                               __ptext48 09EB                                 __ptext81 1731  
                               __ptext73 1660                                 __ptext65 16D7  
                               __ptext57 17D7                                 __ptext49 1642  
                               __ptext82 1655                                 __ptext74 17AF  
                               __ptext66 17C3                                 __ptext58 0898  
                               __ptext83 084A                                 __ptext75 0594  
                               __ptext67 16F4                                 __ptext59 1742  
                               __ptext84 1753                                 __ptext76 164B  
                               __ptext68 16E5                                 __ptext85 1614  
                               __ptext69 1789                                 __ptext78 09BB  
                               __ptext79 004B                                 __product 0142  
          ??_setDimmerLights_IntrControl 0072                  ??_setLED_Initialization 0024  
         __size_of_Dimmer_Initialization 0006            __end_of_Dimmer_Initialization 1602  
           __end_of_setDimmerLights_Main 0F25              setDimmerLights_ERROR@lights 0025  
                           ??_setSw_Main 002F                            setLED@command 0022  
                          __size_of_main 0056               setDimmerLights_Main@lights 002E  
            __end_of_DelayOffPointSelect 17C3                       _DimmerLights_Close 17D7  
               ??_setDimmerLights_Switch 0023                __size_of_setDimmerReClock 000B  
    __size_of_getDimmerLights_StatusFlag 0011              __end_of_my_TestPointCleared 1789  
          setDimmerLights_Trigger@lights 0023              __size_of_Mcu_Initialization 0017  
                    ?_DimmerLights_Close 0070         setDimmerLights_TriggerAdj@lights 0023  
                               main@argc 0052            ?_setDimmerLights_TriggerERROR 0022  
                               main@argv 0054              __end_of_Flash_Memory_Modify 0EBB  
            __end_of_Flash_Memory_Unlock 164B                          ??_SwPointSelect 0020  
                     __end_of_setSw_Main 02F5                   ?_DlyOff_Initialization 0070  
                ?_setOverTemp_Exceptions 0070                           _DelayTimejudge 0961  
                            pic14e$flags 007E                     ??_DimmerLights_Close 0023  
           ??_setDimmerLights_IntrIOC_GO 0072                                 intlevel1 0000  
                 ?_Switch_Initialization 0070   __end_of_setDimmerLights_Initialization 0961  
__size_of_setDimmerLights_Initialization 0028           _setDimmerLights_Initialization 0939  
            __end_of_setDimmerLights_Adj 09BB                  ?_setTemp_Initialization 0070  
   __size_of_setDimmerLights_IntrControl 018A                     _Flash_Memory_Erasing 168C  
        __end_of_DelayOff_Initialization 162A      __size_of_setDimmerLights_IntrIOC_GO 001A  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 1632  
                         _setDelayOff_GO 0CDD                   __end_of_DelayTimejudge 098D  
         __end_of_setOverTemp_Exceptions 0A54     __size_of_Flash_Memory_Initialization 00E9  
                          ??_DlyOff_Main 002D                 __end_of_Sw_DimmerAdjFunc 0B12  
           __end_of_setSw_Initialization 163A               __end_of_LED_Initialization 16A4  
       __size_of_setDimmerLights_Trigger 000F           __end_of_setTemp_Initialization 1681  
               __size_of_Sw_DimmerOnFunc 004C                 ?_DimmerLights_Exceptions 0070  
               __size_of_setPercentValue 0046                     setPercentValue@value 004C  
               __end_of_Sw_DimmerOffFunc 0BE7          __size_of_setDimmerLights_Switch 000F  
                    setSw_Status@command 0022  
