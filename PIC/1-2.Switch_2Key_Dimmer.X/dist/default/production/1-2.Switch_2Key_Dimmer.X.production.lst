

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Nov 06 17:33:08 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	intentry,global,class=CODE,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   102                           	dabs	1,0x7E,2
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  0116                     	;# 
   150  0117                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020D                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  0FE4                     	;# 
   204  0FE5                     	;# 
   205  0FE6                     	;# 
   206  0FE7                     	;# 
   207  0FE8                     	;# 
   208  0FE9                     	;# 
   209  0FEA                     	;# 
   210  0FEB                     	;# 
   211  0FED                     	;# 
   212  0FEE                     	;# 
   213  0FEF                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  011D                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265  018E                     	;# 
   266  0191                     	;# 
   267  0191                     	;# 
   268  0192                     	;# 
   269  0193                     	;# 
   270  0193                     	;# 
   271  0194                     	;# 
   272  0195                     	;# 
   273  0196                     	;# 
   274  0197                     	;# 
   275  0199                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  020D                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0298                     	;# 
   308  0298                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  0394                     	;# 
   312  0395                     	;# 
   313  0396                     	;# 
   314  0FE4                     	;# 
   315  0FE5                     	;# 
   316  0FE6                     	;# 
   317  0FE7                     	;# 
   318  0FE8                     	;# 
   319  0FE9                     	;# 
   320  0FEA                     	;# 
   321  0FEB                     	;# 
   322  0FED                     	;# 
   323  0FEE                     	;# 
   324  0FEF                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  0116                     	;# 
   372  0117                     	;# 
   373  011D                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  018E                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0194                     	;# 
   383  0195                     	;# 
   384  0196                     	;# 
   385  0197                     	;# 
   386  0199                     	;# 
   387  019A                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020D                     	;# 
   398  0210                     	;# 
   399  0211                     	;# 
   400  0211                     	;# 
   401  0212                     	;# 
   402  0212                     	;# 
   403  0213                     	;# 
   404  0213                     	;# 
   405  0214                     	;# 
   406  0214                     	;# 
   407  0215                     	;# 
   408  0215                     	;# 
   409  0215                     	;# 
   410  0216                     	;# 
   411  0216                     	;# 
   412  0217                     	;# 
   413  0217                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0298                     	;# 
   419  0298                     	;# 
   420  0299                     	;# 
   421  029A                     	;# 
   422  0394                     	;# 
   423  0395                     	;# 
   424  0396                     	;# 
   425  0FE4                     	;# 
   426  0FE5                     	;# 
   427  0FE6                     	;# 
   428  0FE7                     	;# 
   429  0FE8                     	;# 
   430  0FE9                     	;# 
   431  0FEA                     	;# 
   432  0FEB                     	;# 
   433  0FED                     	;# 
   434  0FEE                     	;# 
   435  0FEF                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  0090                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0116                     	;# 
   483  0117                     	;# 
   484  011D                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  018E                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0197                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019F                     	;# 
   508  020D                     	;# 
   509  0210                     	;# 
   510  0211                     	;# 
   511  0211                     	;# 
   512  0212                     	;# 
   513  0212                     	;# 
   514  0213                     	;# 
   515  0213                     	;# 
   516  0214                     	;# 
   517  0214                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0216                     	;# 
   522  0216                     	;# 
   523  0217                     	;# 
   524  0217                     	;# 
   525  0291                     	;# 
   526  0291                     	;# 
   527  0292                     	;# 
   528  0293                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  0394                     	;# 
   534  0395                     	;# 
   535  0396                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  0090                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  011D                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0197                     	;# 
   608  0199                     	;# 
   609  019A                     	;# 
   610  019B                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019C                     	;# 
   615  019C                     	;# 
   616  019D                     	;# 
   617  019E                     	;# 
   618  019F                     	;# 
   619  020D                     	;# 
   620  0210                     	;# 
   621  0211                     	;# 
   622  0211                     	;# 
   623  0212                     	;# 
   624  0212                     	;# 
   625  0213                     	;# 
   626  0213                     	;# 
   627  0214                     	;# 
   628  0214                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0216                     	;# 
   633  0216                     	;# 
   634  0217                     	;# 
   635  0217                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0298                     	;# 
   641  0298                     	;# 
   642  0299                     	;# 
   643  029A                     	;# 
   644  0394                     	;# 
   645  0395                     	;# 
   646  0396                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0092                     	;# 
   691  0095                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  011D                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0194                     	;# 
   716  0195                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019D                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  020D                     	;# 
   731  0210                     	;# 
   732  0211                     	;# 
   733  0211                     	;# 
   734  0212                     	;# 
   735  0212                     	;# 
   736  0213                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0215                     	;# 
   743  0216                     	;# 
   744  0216                     	;# 
   745  0217                     	;# 
   746  0217                     	;# 
   747  0291                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  0394                     	;# 
   756  0395                     	;# 
   757  0396                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  0000                     	;# 
   770  0001                     	;# 
   771  0002                     	;# 
   772  0003                     	;# 
   773  0004                     	;# 
   774  0005                     	;# 
   775  0006                     	;# 
   776  0007                     	;# 
   777  0008                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  000D                     	;# 
   783  000E                     	;# 
   784  0010                     	;# 
   785  0011                     	;# 
   786  0012                     	;# 
   787  0015                     	;# 
   788  0016                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001C                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  0090                     	;# 
   800  0091                     	;# 
   801  0092                     	;# 
   802  0095                     	;# 
   803  0096                     	;# 
   804  0097                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  009B                     	;# 
   808  009B                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009E                     	;# 
   812  010C                     	;# 
   813  010D                     	;# 
   814  010E                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  011D                     	;# 
   818  018C                     	;# 
   819  018D                     	;# 
   820  018E                     	;# 
   821  0191                     	;# 
   822  0191                     	;# 
   823  0192                     	;# 
   824  0193                     	;# 
   825  0193                     	;# 
   826  0194                     	;# 
   827  0195                     	;# 
   828  0196                     	;# 
   829  0197                     	;# 
   830  0199                     	;# 
   831  019A                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019C                     	;# 
   837  019C                     	;# 
   838  019D                     	;# 
   839  019E                     	;# 
   840  019F                     	;# 
   841  020D                     	;# 
   842  0210                     	;# 
   843  0211                     	;# 
   844  0211                     	;# 
   845  0212                     	;# 
   846  0212                     	;# 
   847  0213                     	;# 
   848  0213                     	;# 
   849  0214                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0216                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0217                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0298                     	;# 
   863  0298                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  0394                     	;# 
   867  0395                     	;# 
   868  0396                     	;# 
   869  0FE4                     	;# 
   870  0FE5                     	;# 
   871  0FE6                     	;# 
   872  0FE7                     	;# 
   873  0FE8                     	;# 
   874  0FE9                     	;# 
   875  0FEA                     	;# 
   876  0FEB                     	;# 
   877  0FED                     	;# 
   878  0FEE                     	;# 
   879  0FEF                     	;# 
   880  0000                     	;# 
   881  0001                     	;# 
   882  0002                     	;# 
   883  0003                     	;# 
   884  0004                     	;# 
   885  0005                     	;# 
   886  0006                     	;# 
   887  0007                     	;# 
   888  0008                     	;# 
   889  0009                     	;# 
   890  000A                     	;# 
   891  000B                     	;# 
   892  000C                     	;# 
   893  000D                     	;# 
   894  000E                     	;# 
   895  0010                     	;# 
   896  0011                     	;# 
   897  0012                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  008C                     	;# 
   908  008D                     	;# 
   909  008E                     	;# 
   910  0090                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0095                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0099                     	;# 
   917  009A                     	;# 
   918  009B                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  0116                     	;# 
   927  0117                     	;# 
   928  011D                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  018E                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0197                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020D                     	;# 
   953  0210                     	;# 
   954  0211                     	;# 
   955  0211                     	;# 
   956  0212                     	;# 
   957  0212                     	;# 
   958  0213                     	;# 
   959  0213                     	;# 
   960  0214                     	;# 
   961  0214                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0216                     	;# 
   966  0216                     	;# 
   967  0217                     	;# 
   968  0217                     	;# 
   969  0291                     	;# 
   970  0291                     	;# 
   971  0292                     	;# 
   972  0293                     	;# 
   973  0298                     	;# 
   974  0298                     	;# 
   975  0299                     	;# 
   976  029A                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0FE4                     	;# 
   981  0FE5                     	;# 
   982  0FE6                     	;# 
   983  0FE7                     	;# 
   984  0FE8                     	;# 
   985  0FE9                     	;# 
   986  0FEA                     	;# 
   987  0FEB                     	;# 
   988  0FED                     	;# 
   989  0FEE                     	;# 
   990  0FEF                     	;# 
   991  0000                     	;# 
   992  0001                     	;# 
   993  0002                     	;# 
   994  0003                     	;# 
   995  0004                     	;# 
   996  0005                     	;# 
   997  0006                     	;# 
   998  0007                     	;# 
   999  0008                     	;# 
  1000  0009                     	;# 
  1001  000A                     	;# 
  1002  000B                     	;# 
  1003  000C                     	;# 
  1004  000D                     	;# 
  1005  000E                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0015                     	;# 
  1010  0016                     	;# 
  1011  0016                     	;# 
  1012  0017                     	;# 
  1013  0018                     	;# 
  1014  0019                     	;# 
  1015  001A                     	;# 
  1016  001B                     	;# 
  1017  001C                     	;# 
  1018  008C                     	;# 
  1019  008D                     	;# 
  1020  008E                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0097                     	;# 
  1027  0099                     	;# 
  1028  009A                     	;# 
  1029  009B                     	;# 
  1030  009B                     	;# 
  1031  009C                     	;# 
  1032  009D                     	;# 
  1033  009E                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  0116                     	;# 
  1038  0117                     	;# 
  1039  011D                     	;# 
  1040  018C                     	;# 
  1041  018D                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0194                     	;# 
  1049  0195                     	;# 
  1050  0196                     	;# 
  1051  0197                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019C                     	;# 
  1059  019C                     	;# 
  1060  019D                     	;# 
  1061  019E                     	;# 
  1062  019F                     	;# 
  1063  020D                     	;# 
  1064  0210                     	;# 
  1065  0211                     	;# 
  1066  0211                     	;# 
  1067  0212                     	;# 
  1068  0212                     	;# 
  1069  0213                     	;# 
  1070  0213                     	;# 
  1071  0214                     	;# 
  1072  0214                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  0291                     	;# 
  1081  0291                     	;# 
  1082  0292                     	;# 
  1083  0293                     	;# 
  1084  0298                     	;# 
  1085  0298                     	;# 
  1086  0299                     	;# 
  1087  029A                     	;# 
  1088  0394                     	;# 
  1089  0395                     	;# 
  1090  0396                     	;# 
  1091  0FE4                     	;# 
  1092  0FE5                     	;# 
  1093  0FE6                     	;# 
  1094  0FE7                     	;# 
  1095  0FE8                     	;# 
  1096  0FE9                     	;# 
  1097  0FEA                     	;# 
  1098  0FEB                     	;# 
  1099  0FED                     	;# 
  1100  0FEE                     	;# 
  1101  0FEF                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0008                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  0010                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  008C                     	;# 
  1130  008D                     	;# 
  1131  008E                     	;# 
  1132  0090                     	;# 
  1133  0091                     	;# 
  1134  0092                     	;# 
  1135  0095                     	;# 
  1136  0096                     	;# 
  1137  0097                     	;# 
  1138  0099                     	;# 
  1139  009A                     	;# 
  1140  009B                     	;# 
  1141  009B                     	;# 
  1142  009C                     	;# 
  1143  009D                     	;# 
  1144  009E                     	;# 
  1145  010C                     	;# 
  1146  010D                     	;# 
  1147  010E                     	;# 
  1148  0116                     	;# 
  1149  0117                     	;# 
  1150  011D                     	;# 
  1151  018C                     	;# 
  1152  018D                     	;# 
  1153  018E                     	;# 
  1154  0191                     	;# 
  1155  0191                     	;# 
  1156  0192                     	;# 
  1157  0193                     	;# 
  1158  0193                     	;# 
  1159  0194                     	;# 
  1160  0195                     	;# 
  1161  0196                     	;# 
  1162  0197                     	;# 
  1163  0199                     	;# 
  1164  019A                     	;# 
  1165  019B                     	;# 
  1166  019B                     	;# 
  1167  019B                     	;# 
  1168  019B                     	;# 
  1169  019C                     	;# 
  1170  019C                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019F                     	;# 
  1174  020D                     	;# 
  1175  0210                     	;# 
  1176  0211                     	;# 
  1177  0211                     	;# 
  1178  0212                     	;# 
  1179  0212                     	;# 
  1180  0213                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0215                     	;# 
  1187  0216                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0217                     	;# 
  1191  0291                     	;# 
  1192  0291                     	;# 
  1193  0292                     	;# 
  1194  0293                     	;# 
  1195  0298                     	;# 
  1196  0298                     	;# 
  1197  0299                     	;# 
  1198  029A                     	;# 
  1199  0394                     	;# 
  1200  0395                     	;# 
  1201  0396                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE9                     	;# 
  1208  0FEA                     	;# 
  1209  0FEB                     	;# 
  1210  0FED                     	;# 
  1211  0FEE                     	;# 
  1212  0FEF                     	;# 
  1213  0000                     	;# 
  1214  0001                     	;# 
  1215  0002                     	;# 
  1216  0003                     	;# 
  1217  0004                     	;# 
  1218  0005                     	;# 
  1219  0006                     	;# 
  1220  0007                     	;# 
  1221  0008                     	;# 
  1222  0009                     	;# 
  1223  000A                     	;# 
  1224  000B                     	;# 
  1225  000C                     	;# 
  1226  000D                     	;# 
  1227  000E                     	;# 
  1228  0010                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001B                     	;# 
  1239  001C                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0095                     	;# 
  1247  0096                     	;# 
  1248  0097                     	;# 
  1249  0099                     	;# 
  1250  009A                     	;# 
  1251  009B                     	;# 
  1252  009B                     	;# 
  1253  009C                     	;# 
  1254  009D                     	;# 
  1255  009E                     	;# 
  1256  010C                     	;# 
  1257  010D                     	;# 
  1258  010E                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  011D                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  018E                     	;# 
  1265  0191                     	;# 
  1266  0191                     	;# 
  1267  0192                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0197                     	;# 
  1274  0199                     	;# 
  1275  019A                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019C                     	;# 
  1281  019C                     	;# 
  1282  019D                     	;# 
  1283  019E                     	;# 
  1284  019F                     	;# 
  1285  020D                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0213                     	;# 
  1293  0214                     	;# 
  1294  0214                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  0291                     	;# 
  1303  0291                     	;# 
  1304  0292                     	;# 
  1305  0293                     	;# 
  1306  0298                     	;# 
  1307  0298                     	;# 
  1308  0299                     	;# 
  1309  029A                     	;# 
  1310  0394                     	;# 
  1311  0395                     	;# 
  1312  0396                     	;# 
  1313  0FE4                     	;# 
  1314  0FE5                     	;# 
  1315  0FE6                     	;# 
  1316  0FE7                     	;# 
  1317  0FE8                     	;# 
  1318  0FE9                     	;# 
  1319  0FEA                     	;# 
  1320  0FEB                     	;# 
  1321  0FED                     	;# 
  1322  0FEE                     	;# 
  1323  0FEF                     	;# 
  1324  0000                     	;# 
  1325  0001                     	;# 
  1326  0002                     	;# 
  1327  0003                     	;# 
  1328  0004                     	;# 
  1329  0005                     	;# 
  1330  0006                     	;# 
  1331  0007                     	;# 
  1332  0008                     	;# 
  1333  0009                     	;# 
  1334  000A                     	;# 
  1335  000B                     	;# 
  1336  000C                     	;# 
  1337  000D                     	;# 
  1338  000E                     	;# 
  1339  0010                     	;# 
  1340  0011                     	;# 
  1341  0012                     	;# 
  1342  0015                     	;# 
  1343  0016                     	;# 
  1344  0016                     	;# 
  1345  0017                     	;# 
  1346  0018                     	;# 
  1347  0019                     	;# 
  1348  001A                     	;# 
  1349  001B                     	;# 
  1350  001C                     	;# 
  1351  008C                     	;# 
  1352  008D                     	;# 
  1353  008E                     	;# 
  1354  0090                     	;# 
  1355  0091                     	;# 
  1356  0092                     	;# 
  1357  0095                     	;# 
  1358  0096                     	;# 
  1359  0097                     	;# 
  1360  0099                     	;# 
  1361  009A                     	;# 
  1362  009B                     	;# 
  1363  009B                     	;# 
  1364  009C                     	;# 
  1365  009D                     	;# 
  1366  009E                     	;# 
  1367  010C                     	;# 
  1368  010D                     	;# 
  1369  010E                     	;# 
  1370  0116                     	;# 
  1371  0117                     	;# 
  1372  011D                     	;# 
  1373  018C                     	;# 
  1374  018D                     	;# 
  1375  018E                     	;# 
  1376  0191                     	;# 
  1377  0191                     	;# 
  1378  0192                     	;# 
  1379  0193                     	;# 
  1380  0193                     	;# 
  1381  0194                     	;# 
  1382  0195                     	;# 
  1383  0196                     	;# 
  1384  0197                     	;# 
  1385  0199                     	;# 
  1386  019A                     	;# 
  1387  019B                     	;# 
  1388  019B                     	;# 
  1389  019B                     	;# 
  1390  019B                     	;# 
  1391  019C                     	;# 
  1392  019C                     	;# 
  1393  019D                     	;# 
  1394  019E                     	;# 
  1395  019F                     	;# 
  1396  020D                     	;# 
  1397  0210                     	;# 
  1398  0211                     	;# 
  1399  0211                     	;# 
  1400  0212                     	;# 
  1401  0212                     	;# 
  1402  0213                     	;# 
  1403  0213                     	;# 
  1404  0214                     	;# 
  1405  0214                     	;# 
  1406  0215                     	;# 
  1407  0215                     	;# 
  1408  0215                     	;# 
  1409  0216                     	;# 
  1410  0216                     	;# 
  1411  0217                     	;# 
  1412  0217                     	;# 
  1413  0291                     	;# 
  1414  0291                     	;# 
  1415  0292                     	;# 
  1416  0293                     	;# 
  1417  0298                     	;# 
  1418  0298                     	;# 
  1419  0299                     	;# 
  1420  029A                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0015                     	;# 
  1454  0016                     	;# 
  1455  0016                     	;# 
  1456  0017                     	;# 
  1457  0018                     	;# 
  1458  0019                     	;# 
  1459  001A                     	;# 
  1460  001B                     	;# 
  1461  001C                     	;# 
  1462  008C                     	;# 
  1463  008D                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0095                     	;# 
  1469  0096                     	;# 
  1470  0097                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0116                     	;# 
  1482  0117                     	;# 
  1483  011D                     	;# 
  1484  018C                     	;# 
  1485  018D                     	;# 
  1486  018E                     	;# 
  1487  0191                     	;# 
  1488  0191                     	;# 
  1489  0192                     	;# 
  1490  0193                     	;# 
  1491  0193                     	;# 
  1492  0194                     	;# 
  1493  0195                     	;# 
  1494  0196                     	;# 
  1495  0197                     	;# 
  1496  0199                     	;# 
  1497  019A                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019B                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019E                     	;# 
  1506  019F                     	;# 
  1507  020D                     	;# 
  1508  0210                     	;# 
  1509  0211                     	;# 
  1510  0211                     	;# 
  1511  0212                     	;# 
  1512  0212                     	;# 
  1513  0213                     	;# 
  1514  0213                     	;# 
  1515  0214                     	;# 
  1516  0214                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0216                     	;# 
  1521  0216                     	;# 
  1522  0217                     	;# 
  1523  0217                     	;# 
  1524  0291                     	;# 
  1525  0291                     	;# 
  1526  0292                     	;# 
  1527  0293                     	;# 
  1528  0298                     	;# 
  1529  0298                     	;# 
  1530  0299                     	;# 
  1531  029A                     	;# 
  1532  0394                     	;# 
  1533  0395                     	;# 
  1534  0396                     	;# 
  1535  0FE4                     	;# 
  1536  0FE5                     	;# 
  1537  0FE6                     	;# 
  1538  0FE7                     	;# 
  1539  0FE8                     	;# 
  1540  0FE9                     	;# 
  1541  0FEA                     	;# 
  1542  0FEB                     	;# 
  1543  0FED                     	;# 
  1544  0FEE                     	;# 
  1545  0FEF                     	;# 
  1546  0000                     	;# 
  1547  0001                     	;# 
  1548  0002                     	;# 
  1549  0003                     	;# 
  1550  0004                     	;# 
  1551  0005                     	;# 
  1552  0006                     	;# 
  1553  0007                     	;# 
  1554  0008                     	;# 
  1555  0009                     	;# 
  1556  000A                     	;# 
  1557  000B                     	;# 
  1558  000C                     	;# 
  1559  000D                     	;# 
  1560  000E                     	;# 
  1561  0010                     	;# 
  1562  0011                     	;# 
  1563  0012                     	;# 
  1564  0015                     	;# 
  1565  0016                     	;# 
  1566  0016                     	;# 
  1567  0017                     	;# 
  1568  0018                     	;# 
  1569  0019                     	;# 
  1570  001A                     	;# 
  1571  001B                     	;# 
  1572  001C                     	;# 
  1573  008C                     	;# 
  1574  008D                     	;# 
  1575  008E                     	;# 
  1576  0090                     	;# 
  1577  0091                     	;# 
  1578  0092                     	;# 
  1579  0095                     	;# 
  1580  0096                     	;# 
  1581  0097                     	;# 
  1582  0099                     	;# 
  1583  009A                     	;# 
  1584  009B                     	;# 
  1585  009B                     	;# 
  1586  009C                     	;# 
  1587  009D                     	;# 
  1588  009E                     	;# 
  1589  010C                     	;# 
  1590  010D                     	;# 
  1591  010E                     	;# 
  1592  0116                     	;# 
  1593  0117                     	;# 
  1594  011D                     	;# 
  1595  018C                     	;# 
  1596  018D                     	;# 
  1597  018E                     	;# 
  1598  0191                     	;# 
  1599  0191                     	;# 
  1600  0192                     	;# 
  1601  0193                     	;# 
  1602  0193                     	;# 
  1603  0194                     	;# 
  1604  0195                     	;# 
  1605  0196                     	;# 
  1606  0197                     	;# 
  1607  0199                     	;# 
  1608  019A                     	;# 
  1609  019B                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019C                     	;# 
  1614  019C                     	;# 
  1615  019D                     	;# 
  1616  019E                     	;# 
  1617  019F                     	;# 
  1618  020D                     	;# 
  1619  0210                     	;# 
  1620  0211                     	;# 
  1621  0211                     	;# 
  1622  0212                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0213                     	;# 
  1626  0214                     	;# 
  1627  0214                     	;# 
  1628  0215                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0216                     	;# 
  1632  0216                     	;# 
  1633  0217                     	;# 
  1634  0217                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0298                     	;# 
  1640  0298                     	;# 
  1641  0299                     	;# 
  1642  029A                     	;# 
  1643  0394                     	;# 
  1644  0395                     	;# 
  1645  0396                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEB                     	;# 
  1654  0FED                     	;# 
  1655  0FEE                     	;# 
  1656  0FEF                     	;# 
  1657  0000                     	;# 
  1658  0001                     	;# 
  1659  0002                     	;# 
  1660  0003                     	;# 
  1661  0004                     	;# 
  1662  0005                     	;# 
  1663  0006                     	;# 
  1664  0007                     	;# 
  1665  0008                     	;# 
  1666  0009                     	;# 
  1667  000A                     	;# 
  1668  000B                     	;# 
  1669  000C                     	;# 
  1670  000D                     	;# 
  1671  000E                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0015                     	;# 
  1676  0016                     	;# 
  1677  0016                     	;# 
  1678  0017                     	;# 
  1679  0018                     	;# 
  1680  0019                     	;# 
  1681  001A                     	;# 
  1682  001B                     	;# 
  1683  001C                     	;# 
  1684  008C                     	;# 
  1685  008D                     	;# 
  1686  008E                     	;# 
  1687  0090                     	;# 
  1688  0091                     	;# 
  1689  0092                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0099                     	;# 
  1694  009A                     	;# 
  1695  009B                     	;# 
  1696  009B                     	;# 
  1697  009C                     	;# 
  1698  009D                     	;# 
  1699  009E                     	;# 
  1700  010C                     	;# 
  1701  010D                     	;# 
  1702  010E                     	;# 
  1703  0116                     	;# 
  1704  0117                     	;# 
  1705  011D                     	;# 
  1706  018C                     	;# 
  1707  018D                     	;# 
  1708  018E                     	;# 
  1709  0191                     	;# 
  1710  0191                     	;# 
  1711  0192                     	;# 
  1712  0193                     	;# 
  1713  0193                     	;# 
  1714  0194                     	;# 
  1715  0195                     	;# 
  1716  0196                     	;# 
  1717  0197                     	;# 
  1718  0199                     	;# 
  1719  019A                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019B                     	;# 
  1723  019B                     	;# 
  1724  019C                     	;# 
  1725  019C                     	;# 
  1726  019D                     	;# 
  1727  019E                     	;# 
  1728  019F                     	;# 
  1729  020D                     	;# 
  1730  0210                     	;# 
  1731  0211                     	;# 
  1732  0211                     	;# 
  1733  0212                     	;# 
  1734  0212                     	;# 
  1735  0213                     	;# 
  1736  0213                     	;# 
  1737  0214                     	;# 
  1738  0214                     	;# 
  1739  0215                     	;# 
  1740  0215                     	;# 
  1741  0215                     	;# 
  1742  0216                     	;# 
  1743  0216                     	;# 
  1744  0217                     	;# 
  1745  0217                     	;# 
  1746  0291                     	;# 
  1747  0291                     	;# 
  1748  0292                     	;# 
  1749  0293                     	;# 
  1750  0298                     	;# 
  1751  0298                     	;# 
  1752  0299                     	;# 
  1753  029A                     	;# 
  1754  0394                     	;# 
  1755  0395                     	;# 
  1756  0396                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0015                     	;# 
  1787  0016                     	;# 
  1788  0016                     	;# 
  1789  0017                     	;# 
  1790  0018                     	;# 
  1791  0019                     	;# 
  1792  001A                     	;# 
  1793  001B                     	;# 
  1794  001C                     	;# 
  1795  008C                     	;# 
  1796  008D                     	;# 
  1797  008E                     	;# 
  1798  0090                     	;# 
  1799  0091                     	;# 
  1800  0092                     	;# 
  1801  0095                     	;# 
  1802  0096                     	;# 
  1803  0097                     	;# 
  1804  0099                     	;# 
  1805  009A                     	;# 
  1806  009B                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  010C                     	;# 
  1812  010D                     	;# 
  1813  010E                     	;# 
  1814  0116                     	;# 
  1815  0117                     	;# 
  1816  011D                     	;# 
  1817  018C                     	;# 
  1818  018D                     	;# 
  1819  018E                     	;# 
  1820  0191                     	;# 
  1821  0191                     	;# 
  1822  0192                     	;# 
  1823  0193                     	;# 
  1824  0193                     	;# 
  1825  0194                     	;# 
  1826  0195                     	;# 
  1827  0196                     	;# 
  1828  0197                     	;# 
  1829  0199                     	;# 
  1830  019A                     	;# 
  1831  019B                     	;# 
  1832  019B                     	;# 
  1833  019B                     	;# 
  1834  019B                     	;# 
  1835  019C                     	;# 
  1836  019C                     	;# 
  1837  019D                     	;# 
  1838  019E                     	;# 
  1839  019F                     	;# 
  1840  020D                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0212                     	;# 
  1846  0213                     	;# 
  1847  0213                     	;# 
  1848  0214                     	;# 
  1849  0214                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0216                     	;# 
  1854  0216                     	;# 
  1855  0217                     	;# 
  1856  0217                     	;# 
  1857  0291                     	;# 
  1858  0291                     	;# 
  1859  0292                     	;# 
  1860  0293                     	;# 
  1861  0298                     	;# 
  1862  0298                     	;# 
  1863  0299                     	;# 
  1864  029A                     	;# 
  1865  0394                     	;# 
  1866  0395                     	;# 
  1867  0396                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEF                     	;# 
  1879  0000                     	;# 
  1880  0001                     	;# 
  1881  0002                     	;# 
  1882  0003                     	;# 
  1883  0004                     	;# 
  1884  0005                     	;# 
  1885  0006                     	;# 
  1886  0007                     	;# 
  1887  0008                     	;# 
  1888  0009                     	;# 
  1889  000A                     	;# 
  1890  000B                     	;# 
  1891  000C                     	;# 
  1892  000D                     	;# 
  1893  000E                     	;# 
  1894  0010                     	;# 
  1895  0011                     	;# 
  1896  0012                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  008C                     	;# 
  1907  008D                     	;# 
  1908  008E                     	;# 
  1909  0090                     	;# 
  1910  0091                     	;# 
  1911  0092                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0097                     	;# 
  1915  0099                     	;# 
  1916  009A                     	;# 
  1917  009B                     	;# 
  1918  009B                     	;# 
  1919  009C                     	;# 
  1920  009D                     	;# 
  1921  009E                     	;# 
  1922  010C                     	;# 
  1923  010D                     	;# 
  1924  010E                     	;# 
  1925  0116                     	;# 
  1926  0117                     	;# 
  1927  011D                     	;# 
  1928  018C                     	;# 
  1929  018D                     	;# 
  1930  018E                     	;# 
  1931  0191                     	;# 
  1932  0191                     	;# 
  1933  0192                     	;# 
  1934  0193                     	;# 
  1935  0193                     	;# 
  1936  0194                     	;# 
  1937  0195                     	;# 
  1938  0196                     	;# 
  1939  0197                     	;# 
  1940  0199                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019C                     	;# 
  1947  019C                     	;# 
  1948  019D                     	;# 
  1949  019E                     	;# 
  1950  019F                     	;# 
  1951  020D                     	;# 
  1952  0210                     	;# 
  1953  0211                     	;# 
  1954  0211                     	;# 
  1955  0212                     	;# 
  1956  0212                     	;# 
  1957  0213                     	;# 
  1958  0213                     	;# 
  1959  0214                     	;# 
  1960  0214                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0215                     	;# 
  1964  0216                     	;# 
  1965  0216                     	;# 
  1966  0217                     	;# 
  1967  0217                     	;# 
  1968  0291                     	;# 
  1969  0291                     	;# 
  1970  0292                     	;# 
  1971  0293                     	;# 
  1972  0298                     	;# 
  1973  0298                     	;# 
  1974  0299                     	;# 
  1975  029A                     	;# 
  1976  0394                     	;# 
  1977  0395                     	;# 
  1978  0396                     	;# 
  1979  0FE4                     	;# 
  1980  0FE5                     	;# 
  1981  0FE6                     	;# 
  1982  0FE7                     	;# 
  1983  0FE8                     	;# 
  1984  0FE9                     	;# 
  1985  0FEA                     	;# 
  1986  0FEB                     	;# 
  1987  0FED                     	;# 
  1988  0FEE                     	;# 
  1989  0FEF                     	;# 
  1990                           
  1991                           	psect	idataBANK3
  1992  0B23                     __pidataBANK3:	
  1993                           
  1994                           ;initializer for __product
  1995  0B23  3463               	retlw	99
  1996  0B24  3402               	retlw	2
  1997  0B25  3400               	retlw	0
  1998  0B26  3400               	retlw	0
  1999  0B27  3400               	retlw	0
  2000  0B28  3400               	retlw	0
  2001  0B29  3400               	retlw	0
  2002  0B2A  3400               	retlw	0
  2003  0B2B  3400               	retlw	0
  2004  0B2C  3400               	retlw	0
  2005  0B2D  3400               	retlw	0
  2006  0B2E  3400               	retlw	0
  2007  0B2F  34FF               	retlw	255
  2008  0B30  34FF               	retlw	255
  2009  0B31  34FF               	retlw	255
  2010  0B32  3400               	retlw	0
  2011  0B33  3400               	retlw	0
  2012  0B34  3400               	retlw	0
  2013  0B35  3400               	retlw	0
  2014  0B36  3400               	retlw	0
  2015  0B37  3400               	retlw	0
  2016  0B38  3400               	retlw	0
  2017  0B39  3400               	retlw	0
  2018  0B3A  3400               	retlw	0
  2019  0B3B  3400               	retlw	0
  2020  0B3C  3400               	retlw	0
  2021  0B3D  3400               	retlw	0
  2022  0B3E  3400               	retlw	0
  2023  0B3F  3400               	retlw	0
  2024  0B40  3400               	retlw	0
  2025  0B41  3400               	retlw	0
  2026  0B42  3400               	retlw	0
  2027                           
  2028                           	psect	nvBANK0
  2029  006D                     __pnvBANK0:	
  2030  006D                     _product:	
  2031  006D                     	ds	1
  2032  000C                     _PORTA	set	12
  2033  000D                     _PORTB	set	13
  2034  000E                     _PORTC	set	14
  2035  0018                     _T1CON	set	24
  2036  0017                     _TMR1H	set	23
  2037  0016                     _TMR1L	set	22
  2038  005F                     _GIE	set	95
  2039  005B                     _IOCIE	set	91
  2040  0058                     _IOCIF	set	88
  2041  005E                     _PEIE	set	94
  2042  0060                     _RA0	set	96
  2043  0063                     _RA3	set	99
  2044  0064                     _RA4	set	100
  2045  0066                     _RA6	set	102
  2046  0067                     _RA7	set	103
  2047  0069                     _RB1	set	105
  2048  006A                     _RB2	set	106
  2049  006B                     _RB3	set	107
  2050  006C                     _RB4	set	108
  2051  006D                     _RB5	set	109
  2052  0075                     _RC5	set	117
  2053  0077                     _RC7	set	119
  2054  0088                     _TMR1IF	set	136
  2055  009D                     _ADCON0	set	157
  2056  009E                     _ADCON1	set	158
  2057  009C                     _ADRESH	set	156
  2058  009B                     _ADRESL	set	155
  2059  0099                     _OSCCON	set	153
  2060  008C                     _TRISA	set	140
  2061  008D                     _TRISB	set	141
  2062  008E                     _TRISC	set	142
  2063  0097                     _WDTCON	set	151
  2064  04E9                     _GO_nDONE	set	1257
  2065  0488                     _TMR1IE	set	1160
  2066  0117                     _FVRCON	set	279
  2067  010C                     _LATA	set	268
  2068  010D                     _LATB	set	269
  2069  010E                     _LATC	set	270
  2070  018C                     _ANSELA	set	396
  2071  018D                     _ANSELB	set	397
  2072  018E                     _ANSELC	set	398
  2073  0192                     _PMADRH	set	402
  2074  0191                     _PMADRL	set	401
  2075  0196                     _PMCON2	set	406
  2076  0194                     _PMDATH	set	404
  2077  0193                     _PMDATL	set	403
  2078  0CAE                     _CFGS	set	3246
  2079  0CAC                     _FREE	set	3244
  2080  0CAD                     _LWLO	set	3245
  2081  0CA8                     _RD	set	3240
  2082  0CA9                     _WR	set	3241
  2083  0CAA                     _WREN	set	3242
  2084  1069                     _WPUB1	set	4201
  2085  106A                     _WPUB2	set	4202
  2086  0396                     _IOCBF	set	918
  2087  0395                     _IOCBN	set	917
  2088  0394                     _IOCBP	set	916
  2089  1CB2                     _IOCBF2	set	7346
  2090                           
  2091                           ; #config settings
  2092  0000                     
  2093                           	psect	cinit
  2094  0015                     start_initialization:	
  2095  0015                     __initialization:	
  2096                           
  2097                           ; Clear objects allocated to COMMON
  2098  0015  01F0               	clrf	__pbssCOMMON& (0+127)
  2099  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2100  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2101  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2102  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2103  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2104                           
  2105                           ; Clear objects allocated to BANK0
  2106  001B  3052               	movlw	low __pbssBANK0
  2107  001C  0084               	movwf	4
  2108  001D  3000               	movlw	high __pbssBANK0
  2109  001E  0085               	movwf	5
  2110  001F  301B               	movlw	27
  2111  0020  3188  201F  3180   	fcall	clear_ram0
  2112                           
  2113                           ; Clear objects allocated to BANK1
  2114  0023  30A0               	movlw	low __pbssBANK1
  2115  0024  0084               	movwf	4
  2116  0025  3000               	movlw	high __pbssBANK1
  2117  0026  0085               	movwf	5
  2118  0027  304C               	movlw	76
  2119  0028  3188  201F  3180   	fcall	clear_ram0
  2120                           
  2121                           ; Clear objects allocated to BANK2
  2122  002B  3020               	movlw	low __pbssBANK2
  2123  002C  0084               	movwf	4
  2124  002D  3001               	movlw	high __pbssBANK2
  2125  002E  0085               	movwf	5
  2126  002F  3037               	movlw	55
  2127  0030  3188  201F  3180   	fcall	clear_ram0
  2128                           
  2129                           ; Initialize objects allocated to BANK3
  2130  0033  3023               	movlw	low __pidataBANK3
  2131  0034  0084               	movwf	4
  2132  0035  308B               	movlw	(high __pidataBANK3)| (0+128)
  2133  0036  0085               	movwf	5
  2134  0037  30A0               	movlw	low __pdataBANK3
  2135  0038  0086               	movwf	6
  2136  0039  3001               	movlw	high __pdataBANK3
  2137  003A  0087               	movwf	7
  2138  003B  3020               	movlw	32
  2139  003C  3188  2019         	fcall	init_ram
  2140  003E                     end_of_initialization:	
  2141                           ;End of C runtime variable initialization code
  2142                           
  2143  003E                     __end_of__initialization:	
  2144  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2145  003F  0020               	movlb	0
  2146  0040  318E  2E80         	ljmp	_main	;jump to C main() function
  2147                           
  2148                           	psect	bssCOMMON
  2149  0070                     __pbssCOMMON:	
  2150  0070                     _WDT:	
  2151  0070                     	ds	2
  2152  0072                     _DimmerLights11:	
  2153  0072                     	ds	1
  2154  0073                     _DimmerLights22:	
  2155  0073                     	ds	1
  2156  0074                     _DimmerLightsIntr:	
  2157  0074                     	ds	1
  2158  0075                     _DimmerLightsIntrIOC:	
  2159  0075                     	ds	1
  2160                           
  2161                           	psect	bssBANK0
  2162  0052                     __pbssBANK0:	
  2163  0052                     _Buz1:	
  2164  0052                     	ds	12
  2165  005E                     _Dimmer:	
  2166  005E                     	ds	3
  2167  0061                     _Timer1:	
  2168  0061                     	ds	3
  2169  0064                     _DelayOff:	
  2170  0064                     	ds	1
  2171  0065                     _DimmerLights:	
  2172  0065                     	ds	1
  2173  0066                     _LED:	
  2174  0066                     	ds	1
  2175  0067                     _Sw:	
  2176  0067                     	ds	1
  2177  0068                     _SwDetect:	
  2178  0068                     	ds	1
  2179  0069                     _DlySw1:	
  2180  0069                     	ds	2
  2181  006B                     _DlySw2:	
  2182  006B                     	ds	2
  2183                           
  2184                           	psect	bssBANK1
  2185  00A0                     __pbssBANK1:	
  2186  00A0                     _myMain:	
  2187  00A0                     	ds	16
  2188  00B0                     _Temp:	
  2189  00B0                     	ds	18
  2190  00C2                     _DimmerLights1:	
  2191  00C2                     	ds	15
  2192  00D1                     _DimmerLights2:	
  2193  00D1                     	ds	15
  2194  00E0                     _VarErrLED:	
  2195  00E0                     	ds	4
  2196  00E4                     _VarLED1:	
  2197  00E4                     	ds	4
  2198  00E8                     _VarLED2:	
  2199  00E8                     	ds	4
  2200                           
  2201                           	psect	bssBANK2
  2202  0120                     __pbssBANK2:	
  2203  0120                     _Memory:	
  2204  0120                     	ds	37
  2205  0145                     _Sw1:	
  2206  0145                     	ds	9
  2207  014E                     _Sw2:	
  2208  014E                     	ds	9
  2209                           
  2210                           	psect	dataBANK3
  2211  01A0                     __pdataBANK3:	
  2212  01A0                     __product:	
  2213  01A0                     	ds	32
  2214                           
  2215                           	psect	clrtext
  2216  081F                     clear_ram0:	
  2217                           ;	Called with FSR0 containing the base address, and
  2218                           ;	WREG with the size to clear
  2219                           
  2220  081F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2221  0820                     clrloop0:	
  2222  0820  0180               	clrf	0	;clear RAM location pointed to by FSR
  2223  0821  3101               	addfsr 0,1
  2224  0822  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2225  0823  2820               	goto	clrloop0	;have we reached the end yet?
  2226  0824  3400               	retlw	0	;all done for this memory range, return
  2227                           
  2228                           	psect	inittext
  2229  0819                     init_ram:	
  2230  0819  00FE               	movwf	126
  2231  081A                     initloop:	
  2232  081A  0012               	moviw fsr0++
  2233  081B  001E               	movwi fsr1++
  2234  081C  0BFE               	decfsz	126,f
  2235  081D  281A               	goto	initloop
  2236  081E  3400               	retlw	0
  2237                           
  2238                           	psect	cstackBANK1
  2239  00EC                     __pcstackBANK1:	
  2240  00EC                     ?_main:	
  2241  00EC                     main@argc:	
  2242                           ; 2 bytes @ 0x0
  2243                           
  2244                           
  2245                           ; 2 bytes @ 0x0
  2246  00EC                     	ds	2
  2247  00EE                     main@argv:	
  2248                           
  2249                           ; 2 bytes @ 0x2
  2250  00EE                     	ds	2
  2251                           
  2252                           	psect	cstackCOMMON
  2253  0076                     __pcstackCOMMON:	
  2254  0076                     ?_DlyOff_Initialization:	
  2255  0076                     ?_DlyOff_Main:	
  2256                           ; 0 bytes @ 0x0
  2257                           
  2258  0076                     ?_setDimmerLights_Initialization:	
  2259                           ; 0 bytes @ 0x0
  2260                           
  2261  0076                     ?_Dimmer_Initialization:	
  2262                           ; 0 bytes @ 0x0
  2263                           
  2264  0076                     ?_setMemory_GO:	
  2265                           ; 0 bytes @ 0x0
  2266                           
  2267  0076                     ?_setDimmerLights_Main:	
  2268                           ; 0 bytes @ 0x0
  2269                           
  2270  0076                     ?_setLED_Initialization:	
  2271                           ; 0 bytes @ 0x0
  2272                           
  2273  0076                     ?_setLED_Main:	
  2274                           ; 0 bytes @ 0x0
  2275                           
  2276  0076                     ?_Fosc_Set:	
  2277                           ; 0 bytes @ 0x0
  2278                           
  2279  0076                     ?_IO_Set:	
  2280                           ; 0 bytes @ 0x0
  2281                           
  2282  0076                     ?_TMR1_Set:	
  2283                           ; 0 bytes @ 0x0
  2284                           
  2285  0076                     ?_ADC_Set:	
  2286                           ; 0 bytes @ 0x0
  2287                           
  2288  0076                     ?_IOC_Set:	
  2289                           ; 0 bytes @ 0x0
  2290                           
  2291  0076                     ?_WDT_Set:	
  2292                           ; 0 bytes @ 0x0
  2293                           
  2294  0076                     ?_IOC_ISR:	
  2295                           ; 0 bytes @ 0x0
  2296                           
  2297  0076                     ?_TMR1_ISR:	
  2298                           ; 0 bytes @ 0x0
  2299                           
  2300  0076                     ?_Timeout_Counter:	
  2301                           ; 0 bytes @ 0x0
  2302                           
  2303  0076                     ?_set_TimeoutCleared:	
  2304                           ; 0 bytes @ 0x0
  2305                           
  2306  0076                     ?_Flash_Memory_Write:	
  2307                           ; 0 bytes @ 0x0
  2308                           
  2309  0076                     ?_Flash_Memory_Modify:	
  2310                           ; 0 bytes @ 0x0
  2311                           
  2312  0076                     ?_WDT_Clearing:	
  2313                           ; 0 bytes @ 0x0
  2314                           
  2315  0076                     ?_myMain_Initialization:	
  2316                           ; 0 bytes @ 0x0
  2317                           
  2318  0076                     ?_Temp_Initialization:	
  2319                           ; 0 bytes @ 0x0
  2320                           
  2321  0076                     ?_Switch_Initialization:	
  2322                           ; 0 bytes @ 0x0
  2323                           
  2324  0076                     ?_getTemp_AD:	
  2325                           ; 0 bytes @ 0x0
  2326                           
  2327  0076                     ?_my_MainTimer:	
  2328                           ; 0 bytes @ 0x0
  2329                           
  2330  0076                     ?_Temp_Main:	
  2331                           ; 0 bytes @ 0x0
  2332                           
  2333  0076                     ?_Switch_Main:	
  2334                           ; 0 bytes @ 0x0
  2335                           
  2336  0076                     ?_setTemp_Initialization:	
  2337                           ; 0 bytes @ 0x0
  2338                           
  2339  0076                     ?_setTemp_Main:	
  2340                           ; 0 bytes @ 0x0
  2341                           
  2342  0076                     ?_setSw_Initialization:	
  2343                           ; 0 bytes @ 0x0
  2344                           
  2345  0076                     ?_setSw_Main:	
  2346                           ; 0 bytes @ 0x0
  2347                           
  2348  0076                     ?_Sw_DimmerOnFunc:	
  2349                           ; 0 bytes @ 0x0
  2350                           
  2351  0076                     ?_Sw_DimmerAdjFunc:	
  2352                           ; 0 bytes @ 0x0
  2353                           
  2354  0076                     ?_Sw_DimmerOffFunc:	
  2355                           ; 0 bytes @ 0x0
  2356                           
  2357  0076                     ?_Buzzer_Initialization:	
  2358                           ; 0 bytes @ 0x0
  2359                           
  2360  0076                     ?_Buzzer_Main:	
  2361                           ; 0 bytes @ 0x0
  2362                           
  2363  0076                     ?_DelayOffPointSelect:	
  2364                           ; 0 bytes @ 0x0
  2365                           
  2366  0076                     ?_DelayOff_Initialization:	
  2367                           ; 0 bytes @ 0x0
  2368                           
  2369  0076                     ?_DelayOff_Main:	
  2370                           ; 0 bytes @ 0x0
  2371                           
  2372  0076                     ?_DimmerIntrIOCPointSelect:	
  2373                           ; 0 bytes @ 0x0
  2374                           
  2375  0076                     ??_DimmerIntrIOCPointSelect:	
  2376                           ; 0 bytes @ 0x0
  2377                           
  2378  0076                     ?_setDimmerLights_IntrIOC_GO:	
  2379                           ; 0 bytes @ 0x0
  2380                           
  2381  0076                     ?_DimmerIntrPointSelect:	
  2382                           ; 0 bytes @ 0x0
  2383                           
  2384  0076                     ??_DimmerIntrPointSelect:	
  2385                           ; 0 bytes @ 0x0
  2386                           
  2387  0076                     ?_setDimmerLights_IntrControl:	
  2388                           ; 0 bytes @ 0x0
  2389                           
  2390  0076                     ?_DimmerLightsPointSelect:	
  2391                           ; 0 bytes @ 0x0
  2392                           
  2393  0076                     ?_DimmerLights_Initialization:	
  2394                           ; 0 bytes @ 0x0
  2395                           
  2396  0076                     ?_DimmerLights_Close:	
  2397                           ; 0 bytes @ 0x0
  2398                           
  2399  0076                     ?_DimmerLights_Main:	
  2400                           ; 0 bytes @ 0x0
  2401                           
  2402  0076                     ?_LedPointSelect:	
  2403                           ; 0 bytes @ 0x0
  2404                           
  2405  0076                     ?_LED_Initialization:	
  2406                           ; 0 bytes @ 0x0
  2407                           
  2408  0076                     ?_LED_Main:	
  2409                           ; 0 bytes @ 0x0
  2410                           
  2411  0076                     ?_Mcu_Initialization:	
  2412                           ; 0 bytes @ 0x0
  2413                           
  2414  0076                     ?_ISR:	
  2415                           ; 0 bytes @ 0x0
  2416                           
  2417  0076                     ?_setDimmerReClock:	
  2418                           ; 0 bytes @ 0x0
  2419                           
  2420  0076                     ?_Flash_Memory_Initialization:	
  2421                           ; 0 bytes @ 0x0
  2422                           
  2423  0076                     ?_Flash_Memory_Main:	
  2424                           ; 0 bytes @ 0x0
  2425                           
  2426  0076                     ?_Flash_Memory_Unlock:	
  2427                           ; 0 bytes @ 0x0
  2428                           
  2429  0076                     ?_Flash_Memory_Erasing:	
  2430                           ; 0 bytes @ 0x0
  2431                           
  2432  0076                     ?_WDT_Main:	
  2433                           ; 0 bytes @ 0x0
  2434                           
  2435  0076                     ?_setMain_Exception:	
  2436                           ; 0 bytes @ 0x0
  2437                           
  2438  0076                     ?_TouchPower:	
  2439                           ; 0 bytes @ 0x0
  2440                           
  2441  0076                     ?_SwPointSelect:	
  2442                           ; 0 bytes @ 0x0
  2443                           
  2444  0076                     ?_DelayTimejudge:	
  2445                           ; 0 bytes @ 0x0
  2446                           
  2447  0076                     ?_getDimmerLights_StatusFlag:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0076                     ?_Flash_Memory_Read:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0076                     ?_getSw_KeyStatus:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0076                     ?_getDimmerLights_Status:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0076                     ?_setPercentValue:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0076                     ?_getMain_All_Error_Status:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465                           
  2466                           ; 1 bytes @ 0x0
  2467  0076                     	ds	1
  2468  0077                     DimmerIntrIOCPointSelect@lights:	
  2469  0077                     DimmerIntrPointSelect@lights:	
  2470                           ; 1 bytes @ 0x1
  2471                           
  2472                           
  2473                           ; 1 bytes @ 0x1
  2474  0077                     	ds	1
  2475  0078                     ??_setDimmerLights_IntrIOC_GO:	
  2476  0078                     ??_setDimmerLights_IntrControl:	
  2477                           ; 0 bytes @ 0x2
  2478                           
  2479  0078                     setDimmerLights_IntrIOC_GO@lights:	
  2480                           ; 0 bytes @ 0x2
  2481                           
  2482                           
  2483                           ; 1 bytes @ 0x2
  2484  0078                     	ds	1
  2485  0079                     ??_IOC_ISR:	
  2486  0079                     ??_setDimmerReClock:	
  2487                           ; 0 bytes @ 0x3
  2488                           
  2489                           
  2490                           ; 0 bytes @ 0x3
  2491  0079                     	ds	1
  2492  007A                     setDimmerLights_IntrControl@lights:	
  2493                           
  2494                           ; 1 bytes @ 0x4
  2495  007A                     	ds	1
  2496  007B                     ??_TMR1_ISR:	
  2497  007B                     ??_ISR:	
  2498                           ; 0 bytes @ 0x5
  2499                           
  2500                           
  2501                           ; 0 bytes @ 0x5
  2502  007B                     	ds	1
  2503                           
  2504                           	psect	cstackBANK0
  2505  0020                     __pcstackBANK0:	
  2506  0020                     ??_Dimmer_Initialization:	
  2507  0020                     ??_getDimmerLights_StatusFlag:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0020                     ??_setMemory_GO:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0020                     ??_Fosc_Set:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0020                     ??_IO_Set:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0020                     ??_TMR1_Set:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0020                     ??_ADC_Set:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0020                     ??_IOC_Set:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0020                     ??_WDT_Set:	
  2529                           ; 0 bytes @ 0x0
  2530                           
  2531  0020                     ??_Timeout_Counter:	
  2532                           ; 0 bytes @ 0x0
  2533                           
  2534  0020                     ??_set_TimeoutCleared:	
  2535                           ; 0 bytes @ 0x0
  2536                           
  2537  0020                     ??_Flash_Memory_Read:	
  2538                           ; 0 bytes @ 0x0
  2539                           
  2540  0020                     ??_Flash_Memory_Write:	
  2541                           ; 0 bytes @ 0x0
  2542                           
  2543  0020                     ??_WDT_Clearing:	
  2544                           ; 0 bytes @ 0x0
  2545                           
  2546  0020                     ??_myMain_Initialization:	
  2547                           ; 0 bytes @ 0x0
  2548                           
  2549  0020                     ??_Temp_Initialization:	
  2550                           ; 0 bytes @ 0x0
  2551                           
  2552  0020                     ??_setTemp_Initialization:	
  2553                           ; 0 bytes @ 0x0
  2554                           
  2555  0020                     ??_getSw_KeyStatus:	
  2556                           ; 0 bytes @ 0x0
  2557                           
  2558  0020                     ??_Buzzer_Initialization:	
  2559                           ; 0 bytes @ 0x0
  2560                           
  2561  0020                     ??_Buzzer_Main:	
  2562                           ; 0 bytes @ 0x0
  2563                           
  2564  0020                     ??_DelayOffPointSelect:	
  2565                           ; 0 bytes @ 0x0
  2566                           
  2567  0020                     ??_DimmerLightsPointSelect:	
  2568                           ; 0 bytes @ 0x0
  2569                           
  2570  0020                     ??_LedPointSelect:	
  2571                           ; 0 bytes @ 0x0
  2572                           
  2573  0020                     ??_Flash_Memory_Unlock:	
  2574                           ; 0 bytes @ 0x0
  2575                           
  2576  0020                     ??_Flash_Memory_Erasing:	
  2577                           ; 0 bytes @ 0x0
  2578                           
  2579  0020                     ??_WDT_Main:	
  2580                           ; 0 bytes @ 0x0
  2581                           
  2582  0020                     ??_getMain_All_Error_Status:	
  2583                           ; 0 bytes @ 0x0
  2584                           
  2585  0020                     ??_TouchPower:	
  2586                           ; 0 bytes @ 0x0
  2587                           
  2588  0020                     ??_SwPointSelect:	
  2589                           ; 0 bytes @ 0x0
  2590                           
  2591  0020                     ?___bmul:	
  2592                           ; 0 bytes @ 0x0
  2593                           
  2594  0020                     ?_getAD:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0020                     ?___awdiv:	
  2598                           ; 2 bytes @ 0x0
  2599                           
  2600  0020                     ?___ftpack:	
  2601                           ; 2 bytes @ 0x0
  2602                           
  2603  0020                     getAD@adcon1:	
  2604                           ; 3 bytes @ 0x0
  2605                           
  2606  0020                     ___bmul@multiplicand:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0020                     ___awdiv@divisor:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0020                     ___ftpack@arg:	
  2613                           ; 2 bytes @ 0x0
  2614                           
  2615                           
  2616                           ; 3 bytes @ 0x0
  2617  0020                     	ds	1
  2618  0021                     ??_Mcu_Initialization:	
  2619  0021                     ??___bmul:	
  2620                           ; 0 bytes @ 0x1
  2621                           
  2622  0021                     DelayOffPointSelect@sw:	
  2623                           ; 0 bytes @ 0x1
  2624                           
  2625  0021                     DimmerLightsPointSelect@lights:	
  2626                           ; 1 bytes @ 0x1
  2627                           
  2628  0021                     getDimmerLights_StatusFlag@Status:	
  2629                           ; 1 bytes @ 0x1
  2630                           
  2631  0021                     LedPointSelect@led:	
  2632                           ; 1 bytes @ 0x1
  2633                           
  2634  0021                     Flash_Memory_Read@i:	
  2635                           ; 1 bytes @ 0x1
  2636                           
  2637  0021                     Flash_Memory_Write@i:	
  2638                           ; 1 bytes @ 0x1
  2639                           
  2640  0021                     getMain_All_Error_Status@command:	
  2641                           ; 1 bytes @ 0x1
  2642                           
  2643  0021                     SwPointSelect@sw:	
  2644                           ; 1 bytes @ 0x1
  2645                           
  2646  0021                     _getSw_KeyStatus$5104:	
  2647                           ; 1 bytes @ 0x1
  2648                           
  2649                           
  2650                           ; 1 bytes @ 0x1
  2651  0021                     	ds	1
  2652  0022                     ??_DlyOff_Initialization:	
  2653  0022                     ?_setSw_Status:	
  2654                           ; 0 bytes @ 0x2
  2655                           
  2656  0022                     ?_setDimmerLights_Trigger:	
  2657                           ; 0 bytes @ 0x2
  2658                           
  2659  0022                     ??_setDimmerLights_Initialization:	
  2660                           ; 0 bytes @ 0x2
  2661                           
  2662  0022                     ?_setDimmerLights_Adj:	
  2663                           ; 0 bytes @ 0x2
  2664                           
  2665  0022                     ?_setLED:	
  2666                           ; 0 bytes @ 0x2
  2667                           
  2668  0022                     ??_setLED_Main:	
  2669                           ; 0 bytes @ 0x2
  2670                           
  2671  0022                     ??_getDimmerLights_Status:	
  2672                           ; 0 bytes @ 0x2
  2673                           
  2674  0022                     ?_setDimmerLights_TriggerAdj:	
  2675                           ; 0 bytes @ 0x2
  2676                           
  2677  0022                     DlyOff_Initialization@sw:	
  2678                           ; 0 bytes @ 0x2
  2679                           
  2680  0022                     getDimmerLights_Status@lights:	
  2681                           ; 1 bytes @ 0x2
  2682                           
  2683  0022                     _getDimmerLights_StatusFlag$1940:	
  2684                           ; 1 bytes @ 0x2
  2685                           
  2686  0022                     setDimmerLights_Adj@status:	
  2687                           ; 1 bytes @ 0x2
  2688                           
  2689  0022                     setDimmerLights_Trigger@command:	
  2690                           ; 1 bytes @ 0x2
  2691                           
  2692  0022                     setDimmerLights_TriggerAdj@command:	
  2693                           ; 1 bytes @ 0x2
  2694                           
  2695  0022                     setLED@command:	
  2696                           ; 1 bytes @ 0x2
  2697                           
  2698  0022                     Flash_Memory_Read@address:	
  2699                           ; 1 bytes @ 0x2
  2700                           
  2701  0022                     setMemory_GO@command:	
  2702                           ; 1 bytes @ 0x2
  2703                           
  2704  0022                     setSw_Status@command:	
  2705                           ; 1 bytes @ 0x2
  2706                           
  2707  0022                     _getSw_KeyStatus$5105:	
  2708                           ; 1 bytes @ 0x2
  2709                           
  2710  0022                     ___bmul@product:	
  2711                           ; 1 bytes @ 0x2
  2712                           
  2713  0022                     _getMain_All_Error_Status$3040:	
  2714                           ; 1 bytes @ 0x2
  2715                           
  2716  0022                     ___awdiv@dividend:	
  2717                           ; 2 bytes @ 0x2
  2718                           
  2719                           
  2720                           ; 2 bytes @ 0x2
  2721  0022                     	ds	1
  2722  0023                     ??_setSw_Status:	
  2723  0023                     ??_setDimmerLights_Trigger:	
  2724                           ; 0 bytes @ 0x3
  2725                           
  2726  0023                     ??_setDimmerLights_Adj:	
  2727                           ; 0 bytes @ 0x3
  2728                           
  2729  0023                     ??_setLED:	
  2730                           ; 0 bytes @ 0x3
  2731                           
  2732  0023                     ??_DelayOff_Initialization:	
  2733                           ; 0 bytes @ 0x3
  2734                           
  2735  0023                     ??_DimmerLights_Close:	
  2736                           ; 0 bytes @ 0x3
  2737                           
  2738  0023                     ??_setDimmerLights_TriggerAdj:	
  2739                           ; 0 bytes @ 0x3
  2740                           
  2741  0023                     ??_getAD:	
  2742                           ; 0 bytes @ 0x3
  2743                           
  2744  0023                     setDimmerLights_Initialization@lights:	
  2745                           ; 0 bytes @ 0x3
  2746                           
  2747  0023                     getDimmerLights_Status@status:	
  2748                           ; 1 bytes @ 0x3
  2749                           
  2750  0023                     setLED@led:	
  2751                           ; 1 bytes @ 0x3
  2752                           
  2753  0023                     getAD@adcon0:	
  2754                           ; 1 bytes @ 0x3
  2755                           
  2756  0023                     Flash_Memory_Read@ret:	
  2757                           ; 1 bytes @ 0x3
  2758                           
  2759  0023                     getSw_KeyStatus@status:	
  2760                           ; 1 bytes @ 0x3
  2761                           
  2762  0023                     ___bmul@multiplier:	
  2763                           ; 1 bytes @ 0x3
  2764                           
  2765  0023                     ___ftpack@exp:	
  2766                           ; 1 bytes @ 0x3
  2767                           
  2768                           
  2769                           ; 1 bytes @ 0x3
  2770  0023                     	ds	1
  2771  0024                     ??_DelayTimejudge:	
  2772  0024                     ?_setDimmerLights:	
  2773                           ; 0 bytes @ 0x4
  2774                           
  2775  0024                     ??_setLED_Initialization:	
  2776                           ; 0 bytes @ 0x4
  2777                           
  2778  0024                     ??_Flash_Memory_Modify:	
  2779                           ; 0 bytes @ 0x4
  2780                           
  2781  0024                     ??_getTemp_AD:	
  2782                           ; 0 bytes @ 0x4
  2783                           
  2784  0024                     ??_setSw_Initialization:	
  2785                           ; 0 bytes @ 0x4
  2786                           
  2787  0024                     ??_DimmerLights_Initialization:	
  2788                           ; 0 bytes @ 0x4
  2789                           
  2790  0024                     ??___awdiv:	
  2791                           ; 0 bytes @ 0x4
  2792                           
  2793  0024                     setDimmerLights@status:	
  2794                           ; 0 bytes @ 0x4
  2795                           
  2796  0024                     setDimmerLights_Adj@lights:	
  2797                           ; 1 bytes @ 0x4
  2798                           
  2799  0024                     setDimmerLights_Trigger@lights:	
  2800                           ; 1 bytes @ 0x4
  2801                           
  2802  0024                     setDimmerLights_TriggerAdj@lights:	
  2803                           ; 1 bytes @ 0x4
  2804                           
  2805  0024                     setLED_Initialization@led:	
  2806                           ; 1 bytes @ 0x4
  2807                           
  2808  0024                     setLED_Main@led:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811  0024                     getMain_All_Error_Status@status:	
  2812                           ; 1 bytes @ 0x4
  2813                           
  2814  0024                     setSw_Initialization@sw:	
  2815                           ; 1 bytes @ 0x4
  2816                           
  2817  0024                     setSw_Status@sw:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820  0024                     getSw_KeyStatus@sw:	
  2821                           ; 1 bytes @ 0x4
  2822                           
  2823  0024                     ___ftpack@sign:	
  2824                           ; 1 bytes @ 0x4
  2825                           
  2826                           
  2827                           ; 1 bytes @ 0x4
  2828  0024                     	ds	1
  2829  0025                     ??_setDimmerLights:	
  2830  0025                     ??_Switch_Initialization:	
  2831                           ; 0 bytes @ 0x5
  2832                           
  2833  0025                     ??_setTemp_Main:	
  2834                           ; 0 bytes @ 0x5
  2835                           
  2836  0025                     ??_Sw_DimmerAdjFunc:	
  2837                           ; 0 bytes @ 0x5
  2838                           
  2839  0025                     ??___ftpack:	
  2840                           ; 0 bytes @ 0x5
  2841                           
  2842  0025                     ??_LED_Initialization:	
  2843                           ; 0 bytes @ 0x5
  2844                           
  2845  0025                     ??_LED_Main:	
  2846                           ; 0 bytes @ 0x5
  2847                           
  2848  0025                     ??_setMain_Exception:	
  2849                           ; 0 bytes @ 0x5
  2850                           
  2851  0025                     Flash_Memory_Modify@i:	
  2852                           ; 0 bytes @ 0x5
  2853                           
  2854  0025                     getTemp_AD@channel:	
  2855                           ; 1 bytes @ 0x5
  2856                           
  2857  0025                     Sw_DimmerAdjFunc@Idle:	
  2858                           ; 1 bytes @ 0x5
  2859                           
  2860  0025                     ___awdiv@counter:	
  2861                           ; 1 bytes @ 0x5
  2862                           
  2863                           
  2864                           ; 1 bytes @ 0x5
  2865  0025                     	ds	1
  2866  0026                     ??_Flash_Memory_Main:	
  2867  0026                     DelayTimejudge@i:	
  2868                           ; 0 bytes @ 0x6
  2869                           
  2870  0026                     setDimmerLights@lights:	
  2871                           ; 1 bytes @ 0x6
  2872                           
  2873  0026                     Sw_DimmerAdjFunc@sw:	
  2874                           ; 1 bytes @ 0x6
  2875                           
  2876  0026                     ___awdiv@sign:	
  2877                           ; 1 bytes @ 0x6
  2878                           
  2879  0026                     _setMain_Exception$3025:	
  2880                           ; 1 bytes @ 0x6
  2881                           
  2882                           
  2883                           ; 2 bytes @ 0x6
  2884  0026                     	ds	1
  2885  0027                     ??_Temp_Main:	
  2886  0027                     DelayTimejudge@j:	
  2887                           ; 0 bytes @ 0x7
  2888                           
  2889  0027                     ___awdiv@quotient:	
  2890                           ; 1 bytes @ 0x7
  2891                           
  2892                           
  2893                           ; 2 bytes @ 0x7
  2894  0027                     	ds	1
  2895  0028                     ?___awtoft:	
  2896  0028                     DelayTimejudge@k:	
  2897                           ; 3 bytes @ 0x8
  2898                           
  2899  0028                     setMain_Exception@command:	
  2900                           ; 1 bytes @ 0x8
  2901                           
  2902  0028                     ___awtoft@c:	
  2903                           ; 1 bytes @ 0x8
  2904                           
  2905                           
  2906                           ; 2 bytes @ 0x8
  2907  0028                     	ds	1
  2908  0029                     ?_setBuz:	
  2909  0029                     DelayTimejudge@value:	
  2910                           ; 0 bytes @ 0x9
  2911                           
  2912  0029                     setMain_Exception@status:	
  2913                           ; 1 bytes @ 0x9
  2914                           
  2915  0029                     setBuz@time:	
  2916                           ; 1 bytes @ 0x9
  2917                           
  2918                           
  2919                           ; 2 bytes @ 0x9
  2920  0029                     	ds	1
  2921  002A                     ?_setDelayOff_GO:	
  2922  002A                     setDelayOff_GO@command:	
  2923                           ; 0 bytes @ 0xA
  2924                           
  2925                           
  2926                           ; 1 bytes @ 0xA
  2927  002A                     	ds	1
  2928  002B                     ??_setBuz:	
  2929  002B                     ??___awtoft:	
  2930                           ; 0 bytes @ 0xB
  2931                           
  2932  002B                     setDelayOff_GO@value:	
  2933                           ; 0 bytes @ 0xB
  2934                           
  2935                           
  2936                           ; 1 bytes @ 0xB
  2937  002B                     	ds	1
  2938  002C                     ??_setDelayOff_GO:	
  2939  002C                     setBuz@count:	
  2940                           ; 0 bytes @ 0xC
  2941                           
  2942                           
  2943                           ; 1 bytes @ 0xC
  2944  002C                     	ds	1
  2945  002D                     ??_DlyOff_Main:	
  2946  002D                     ??_setDimmerLights_Main:	
  2947                           ; 0 bytes @ 0xD
  2948                           
  2949  002D                     ??_my_MainTimer:	
  2950                           ; 0 bytes @ 0xD
  2951                           
  2952  002D                     ??_Sw_DimmerOnFunc:	
  2953                           ; 0 bytes @ 0xD
  2954                           
  2955  002D                     setDimmerLights_Main@clear:	
  2956                           ; 0 bytes @ 0xD
  2957                           
  2958  002D                     Sw_DimmerOnFunc@Idle:	
  2959                           ; 1 bytes @ 0xD
  2960                           
  2961  002D                     ___awtoft@sign:	
  2962                           ; 1 bytes @ 0xD
  2963                           
  2964                           
  2965                           ; 1 bytes @ 0xD
  2966  002D                     	ds	1
  2967  002E                     ?___ftdiv:	
  2968  002E                     setDelayOff_GO@sw:	
  2969                           ; 3 bytes @ 0xE
  2970                           
  2971  002E                     setDimmerLights_Main@lights:	
  2972                           ; 1 bytes @ 0xE
  2973                           
  2974  002E                     Sw_DimmerOnFunc@sw:	
  2975                           ; 1 bytes @ 0xE
  2976                           
  2977  002E                     ___ftdiv@f2:	
  2978                           ; 1 bytes @ 0xE
  2979                           
  2980                           
  2981                           ; 3 bytes @ 0xE
  2982  002E                     	ds	1
  2983  002F                     ??_Sw_DimmerOffFunc:	
  2984  002F                     ??_DimmerLights_Main:	
  2985                           ; 0 bytes @ 0xF
  2986                           
  2987  002F                     DlyOff_Main@sw:	
  2988                           ; 0 bytes @ 0xF
  2989                           
  2990                           
  2991                           ; 1 bytes @ 0xF
  2992  002F                     	ds	1
  2993  0030                     ??_DelayOff_Main:	
  2994                           
  2995                           ; 0 bytes @ 0x10
  2996  0030                     	ds	1
  2997  0031                     Sw_DimmerOffFunc@sw:	
  2998  0031                     ___ftdiv@f1:	
  2999                           ; 1 bytes @ 0x11
  3000                           
  3001                           
  3002                           ; 3 bytes @ 0x11
  3003  0031                     	ds	1
  3004  0032                     ??_setSw_Main:	
  3005                           
  3006                           ; 0 bytes @ 0x12
  3007  0032                     	ds	2
  3008  0034                     ??___ftdiv:	
  3009  0034                     setSw_Main@sw:	
  3010                           ; 0 bytes @ 0x14
  3011                           
  3012                           
  3013                           ; 1 bytes @ 0x14
  3014  0034                     	ds	1
  3015  0035                     ??_Switch_Main:	
  3016                           
  3017                           ; 0 bytes @ 0x15
  3018  0035                     	ds	1
  3019  0036                     Switch_Main@error:	
  3020                           
  3021                           ; 1 bytes @ 0x16
  3022  0036                     	ds	2
  3023  0038                     ___ftdiv@cntr:	
  3024                           
  3025                           ; 1 bytes @ 0x18
  3026  0038                     	ds	1
  3027  0039                     ___ftdiv@f3:	
  3028                           
  3029                           ; 3 bytes @ 0x19
  3030  0039                     	ds	3
  3031  003C                     ___ftdiv@exp:	
  3032                           
  3033                           ; 1 bytes @ 0x1C
  3034  003C                     	ds	1
  3035  003D                     ___ftdiv@sign:	
  3036                           
  3037                           ; 1 bytes @ 0x1D
  3038  003D                     	ds	1
  3039  003E                     ?___fttol:	
  3040  003E                     ___fttol@f1:	
  3041                           ; 4 bytes @ 0x1E
  3042                           
  3043                           
  3044                           ; 3 bytes @ 0x1E
  3045  003E                     	ds	4
  3046  0042                     ??___fttol:	
  3047                           
  3048                           ; 0 bytes @ 0x22
  3049  0042                     	ds	4
  3050  0046                     ___fttol@sign1:	
  3051                           
  3052                           ; 1 bytes @ 0x26
  3053  0046                     	ds	1
  3054  0047                     ___fttol@lval:	
  3055                           
  3056                           ; 4 bytes @ 0x27
  3057  0047                     	ds	4
  3058  004B                     ___fttol@exp1:	
  3059                           
  3060                           ; 1 bytes @ 0x2B
  3061  004B                     	ds	1
  3062  004C                     ??_setPercentValue:	
  3063  004C                     setPercentValue@value:	
  3064                           ; 0 bytes @ 0x2C
  3065                           
  3066                           
  3067                           ; 1 bytes @ 0x2C
  3068  004C                     	ds	1
  3069  004D                     setPercentValue@i:	
  3070                           
  3071                           ; 3 bytes @ 0x2D
  3072  004D                     	ds	3
  3073  0050                     ??_Flash_Memory_Initialization:	
  3074                           
  3075                           ; 0 bytes @ 0x30
  3076  0050                     	ds	1
  3077  0051                     Flash_Memory_Initialization@i:	
  3078                           
  3079                           ; 1 bytes @ 0x31
  3080  0051                     	ds	1
  3081  0052                     ??_main:	
  3082                           
  3083                           	psect	maintext
  3084  0E80                     __pmaintext:	
  3085                           ; 0 bytes @ 0x32
  3086 ;;
  3087 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3088 ;;
  3089 ;; *************** function _main *****************
  3090 ;; Defined at:
  3091 ;;		line 7 in file "../src/Main_B1.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  argc            2    0[BANK1 ] int 
  3094 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    0[BANK1 ] int 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 17F/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3106 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;Total ram usage:        4 bytes
  3111 ;; Hardware stack levels required when called:   11
  3112 ;; This function calls:
  3113 ;;		_Buzzer_Initialization
  3114 ;;		_Buzzer_Main
  3115 ;;		_DelayOff_Initialization
  3116 ;;		_DelayOff_Main
  3117 ;;		_DimmerLights_Initialization
  3118 ;;		_DimmerLights_Main
  3119 ;;		_Flash_Memory_Initialization
  3120 ;;		_Flash_Memory_Main
  3121 ;;		_LED_Initialization
  3122 ;;		_LED_Main
  3123 ;;		_Mcu_Initialization
  3124 ;;		_Switch_Initialization
  3125 ;;		_Switch_Main
  3126 ;;		_Temp_Initialization
  3127 ;;		_Temp_Main
  3128 ;;		_WDT_Main
  3129 ;;		_getTemp_AD
  3130 ;;		_myMain_Initialization
  3131 ;;		_my_MainTimer
  3132 ;; This function is called by:
  3133 ;;		Startup code after reset
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _main
  3139  0E80                     _main:	
  3140                           
  3141                           ;Main_B1.c: 8: myMain_Initialization();
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3145  0E80  3188  20DE  318E   	fcall	_myMain_Initialization
  3146                           
  3147                           ;Main_B1.c: 9: Mcu_Initialization();
  3148  0E83  3189  2152  318E   	fcall	_Mcu_Initialization
  3149                           
  3150                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  3151  0E86  3183  233D  318E   	fcall	_Flash_Memory_Initialization
  3152                           
  3153                           ;Main_B1.c: 11: LED_Initialization();
  3154  0E89  3188  2081  318E   	fcall	_LED_Initialization
  3155                           
  3156                           ;Main_B1.c: 12: Buzzer_Initialization();
  3157  0E8C  3188  2007  318E   	fcall	_Buzzer_Initialization
  3158                           
  3159                           ;Main_B1.c: 14: ;;
  3160                           ;Main_B1.c: 15: Temp_Initialization();
  3161  0E8F  3188  200A  318E   	fcall	_Temp_Initialization
  3162                           
  3163                           ;Main_B1.c: 16: ;;
  3164                           ;Main_B1.c: 17: ;;
  3165                           ;Main_B1.c: 18: DelayOff_Initialization();
  3166  0E92  3188  2034  318E   	fcall	_DelayOff_Initialization
  3167                           
  3168                           ;Main_B1.c: 20: DimmerLights_Initialization();
  3169  0E95  3189  21B1  318E   	fcall	_DimmerLights_Initialization
  3170                           
  3171                           ;Main_B1.c: 21: ;;
  3172                           ;Main_B1.c: 22: ;;
  3173                           ;Main_B1.c: 23: ;;
  3174                           ;Main_B1.c: 24: Switch_Initialization();
  3175  0E98  3188  20A5  318E   	fcall	_Switch_Initialization
  3176                           
  3177                           ;Main_B1.c: 25: ;;
  3178                           ;Main_B1.c: 26: __nop();
  3179  0E9B  0000               	nop
  3180  0E9C                     l6563:	
  3181                           ;Main_B1.c: 27: ;;
  3182                           ;Main_B1.c: 29: while (1) {
  3183                           
  3184                           
  3185                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  3186  0E9C  0021               	movlb	1	; select bank1
  3187  0E9D  1C20               	btfss	_myMain^(0+128),0
  3188  0E9E  2EA3               	goto	l6567
  3189                           
  3190                           ;Main_B1.c: 41: getTemp_AD(0x09);
  3191  0E9F  3009               	movlw	9
  3192  0EA0  318C  247E  318E   	fcall	_getTemp_AD
  3193  0EA3                     l6567:	
  3194                           
  3195                           ;Main_B1.c: 56: }
  3196                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3197  0EA3  0020               	movlb	0	; select bank0
  3198  0EA4  1C61               	btfss	_Timer1,0
  3199  0EA5  2E9C               	goto	l6563
  3200                           
  3201                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3202  0EA6  1061               	bcf	_Timer1,0
  3203                           
  3204                           ;Main_B1.c: 94: my_MainTimer();
  3205  0EA7  318F  270F  318E   	fcall	_my_MainTimer
  3206                           
  3207                           ;Main_B1.c: 95: WDT_Main();
  3208  0EAA  3189  210D  318E   	fcall	_WDT_Main
  3209                           
  3210                           ;Main_B1.c: 96: ;;
  3211                           ;Main_B1.c: 97: ;;
  3212                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  3213  0EAD  0021               	movlb	1	; select bank1
  3214  0EAE  1C20               	btfss	_myMain^(0+128),0
  3215  0EAF  2E9C               	goto	l6563
  3216                           
  3217                           ;Main_B1.c: 99: Flash_Memory_Main();
  3218  0EB0  318A  22C5  318E   	fcall	_Flash_Memory_Main
  3219                           
  3220                           ;Main_B1.c: 101: LED_Main();
  3221  0EB3  3188  208D  318E   	fcall	_LED_Main
  3222                           
  3223                           ;Main_B1.c: 102: Buzzer_Main();
  3224  0EB6  318D  2530  318E   	fcall	_Buzzer_Main
  3225                           
  3226                           ;Main_B1.c: 104: ;;
  3227                           ;Main_B1.c: 105: Temp_Main();
  3228  0EB9  3188  200D  318E   	fcall	_Temp_Main
  3229                           
  3230                           ;Main_B1.c: 106: ;;
  3231                           ;Main_B1.c: 107: ;;
  3232                           ;Main_B1.c: 109: ;;
  3233                           ;Main_B1.c: 110: DimmerLights_Main();
  3234  0EBC  3188  206A  318E   	fcall	_DimmerLights_Main
  3235                           
  3236                           ;Main_B1.c: 111: Switch_Main();
  3237  0EBF  318B  2364  318E   	fcall	_Switch_Main
  3238                           
  3239                           ;Main_B1.c: 112: ;;
  3240                           ;Main_B1.c: 113: ;;
  3241                           ;Main_B1.c: 115: ;;
  3242                           ;Main_B1.c: 116: DelayOff_Main();
  3243  0EC2  3188  203C  318E   	fcall	_DelayOff_Main
  3244                           
  3245                           ;Main_B1.c: 117: ;;
  3246  0EC5  2E9C               	goto	l6563
  3247  0EC6                     __end_of_main:	
  3248                           ;Main_B1.c: 125: }
  3249                           ;Main_B1.c: 126: }
  3250                           ;Main_B1.c: 160: }
  3251                           ;Main_B1.c: 161: return (0);
  3252                           ;	Return value of _main is never used
  3253                           
  3254                           
  3255                           	psect	text1
  3256  0F0F                     __ptext1:	
  3257 ;; *************** function _my_MainTimer *****************
  3258 ;; Defined at:
  3259 ;;		line 180 in file "../src/Main_B1.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;		None               void
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    7
  3280 ;; This function calls:
  3281 ;;		_setBuz
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _my_MainTimer
  3289  0F0F                     _my_MainTimer:	
  3290                           
  3291                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3295  0F0F  0021               	movlb	1	; select bank1
  3296  0F10  1820               	btfsc	_myMain^(0+128),0
  3297  0F11  2F31               	goto	l6435
  3298                           
  3299                           ;Main_B1.c: 183: myMain.PowerCount++;
  3300  0F12  3001               	movlw	1
  3301  0F13  07A2               	addwf	(_myMain^(0+128)+2),f
  3302  0F14  3000               	movlw	0
  3303  0F15  3DA3               	addwfc	((_myMain+1)^(0+128)+2),f
  3304                           
  3305                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  3306  0F16  3002               	movlw	2
  3307  0F17  3EA0               	addlw	_myMain& (0+255)
  3308  0F18  0086               	movwf	6
  3309  0F19  0187               	clrf	7
  3310  0F1A  3F40               	moviw [0]fsr1
  3311  0F1B  3A96               	xorlw	150
  3312  0F1C  1D03               	skipz
  3313  0F1D  2F20               	goto	u6935
  3314  0F1E  3F41               	moviw [1]fsr1
  3315  0F1F  3A00               	xorlw	0
  3316  0F20                     u6935:	
  3317  0F20  1D03               	skipz
  3318  0F21  2F48               	goto	l6445
  3319                           
  3320                           ;Main_B1.c: 185: {
  3321                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  3322  0F22  01A2               	clrf	(_myMain^(0+128)+2)
  3323  0F23  01A3               	clrf	((_myMain+1)^(0+128)+2)
  3324                           
  3325                           ;Main_B1.c: 187: myMain.PowerON = 1;
  3326  0F24  1420               	bsf	_myMain^(0+128),0
  3327                           
  3328                           ;Main_B1.c: 193: setBuz(3, 50);
  3329  0F25  3032               	movlw	50
  3330  0F26  0020               	movlb	0	; select bank0
  3331  0F27  00A9               	movwf	setBuz@time
  3332  0F28  3000               	movlw	0
  3333  0F29  00AA               	movwf	setBuz@time+1
  3334  0F2A  3003               	movlw	3
  3335  0F2B  318D  25F5  318F   	fcall	_setBuz
  3336                           
  3337                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  3338  0F2E  0021               	movlb	1	; select bank1
  3339  0F2F  1620               	bsf	_myMain^(0+128),4
  3340                           
  3341                           ;Main_B1.c: 203: }
  3342                           ;Main_B1.c: 204: } else {
  3343  0F30  2F48               	goto	l6445
  3344  0F31                     l6435:	
  3345                           
  3346                           ;Main_B1.c: 212: myMain.Count1++;
  3347  0F31  3001               	movlw	1
  3348  0F32  07A6               	addwf	(_myMain^(0+128)+6),f
  3349  0F33  3000               	movlw	0
  3350  0F34  3DA7               	addwfc	((_myMain+1)^(0+128)+6),f
  3351                           
  3352                           ;Main_B1.c: 213: if (myMain.Count1 == 100)
  3353  0F35  3006               	movlw	6
  3354  0F36  3EA0               	addlw	_myMain& (0+255)
  3355  0F37  0086               	movwf	6
  3356  0F38  0187               	clrf	7
  3357  0F39  3F40               	moviw [0]fsr1
  3358  0F3A  3A64               	xorlw	100
  3359  0F3B  1D03               	skipz
  3360  0F3C  2F3F               	goto	u6945
  3361  0F3D  3F41               	moviw [1]fsr1
  3362  0F3E  3A00               	xorlw	0
  3363  0F3F                     u6945:	
  3364  0F3F  1D03               	skipz
  3365  0F40  2F48               	goto	l6445
  3366                           
  3367                           ;Main_B1.c: 214: {
  3368                           ;Main_B1.c: 215: myMain.Count1 = 0;
  3369  0F41  01A6               	clrf	(_myMain^(0+128)+6)
  3370  0F42  01A7               	clrf	((_myMain+1)^(0+128)+6)
  3371                           
  3372                           ;Main_B1.c: 227: if (myMain.Flag) {
  3373  0F43  1CA0               	btfss	_myMain^(0+128),1
  3374  0F44  2F47               	goto	l1050
  3375                           
  3376                           ;Main_B1.c: 228: myMain.Flag = 0;
  3377  0F45  10A0               	bcf	_myMain^(0+128),1
  3378                           
  3379                           ;Main_B1.c: 237: } else {
  3380  0F46  2F48               	goto	l6445
  3381  0F47                     l1050:	
  3382                           
  3383                           ;Main_B1.c: 238: myMain.Flag = 1;
  3384  0F47  14A0               	bsf	_myMain^(0+128),1
  3385  0F48                     l6445:	
  3386                           
  3387                           ;Main_B1.c: 247: }
  3388                           ;Main_B1.c: 248: }
  3389                           ;Main_B1.c: 250: }
  3390                           ;Main_B1.c: 252: myMain.Count2++;
  3391  0F48  3001               	movlw	1
  3392  0F49  07A8               	addwf	(_myMain^(0+128)+8),f
  3393  0F4A  3000               	movlw	0
  3394  0F4B  3DA9               	addwfc	((_myMain+1)^(0+128)+8),f
  3395                           
  3396                           ;Main_B1.c: 253: if (myMain.Count2 == 50) {
  3397  0F4C  3008               	movlw	8
  3398  0F4D  3EA0               	addlw	_myMain& (0+255)
  3399  0F4E  0086               	movwf	6
  3400  0F4F  0187               	clrf	7
  3401  0F50  3F40               	moviw [0]fsr1
  3402  0F51  3A32               	xorlw	50
  3403  0F52  1D03               	skipz
  3404  0F53  2F56               	goto	u6965
  3405  0F54  3F41               	moviw [1]fsr1
  3406  0F55  3A00               	xorlw	0
  3407  0F56                     u6965:	
  3408  0F56  1D03               	skipz
  3409  0F57  0008               	return
  3410                           
  3411                           ;Main_B1.c: 254: myMain.Count2 = 0;
  3412  0F58  01A8               	clrf	(_myMain^(0+128)+8)
  3413  0F59  01A9               	clrf	((_myMain+1)^(0+128)+8)
  3414  0F5A  0008               	return
  3415  0F5B                     __end_of_my_MainTimer:	
  3416                           
  3417                           	psect	text2
  3418  08DE                     __ptext2:	
  3419 ;; *************** function _myMain_Initialization *****************
  3420 ;; Defined at:
  3421 ;;		line 167 in file "../src/Main_B1.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, fsr1l, fsr1h
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _myMain_Initialization
  3451  08DE                     _myMain_Initialization:	
  3452                           
  3453                           ;Main_B1.c: 169: product = &_product;
  3454                           
  3455                           ;incstack = 0
  3456                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3457  08DE  30A0               	movlw	__product& (0+255)
  3458  08DF  0020               	movlb	0	; select bank0
  3459  08E0  00A0               	movwf	??_myMain_Initialization
  3460  08E1  0820               	movf	??_myMain_Initialization,w
  3461  08E2  00ED               	movwf	_product
  3462                           
  3463                           ;Main_B1.c: 170: product->Data[20] = 210;
  3464  08E3  30D2               	movlw	210
  3465  08E4  00A0               	movwf	??_myMain_Initialization
  3466  08E5  086D               	movf	_product,w
  3467  08E6  3E14               	addlw	20
  3468  08E7  0086               	movwf	6
  3469  08E8  3001               	movlw	1	; select bank2/3
  3470  08E9  0087               	movwf	7
  3471  08EA  0820               	movf	??_myMain_Initialization,w
  3472  08EB  0081               	movwf	1
  3473  08EC  0008               	return
  3474  08ED                     __end_of_myMain_Initialization:	
  3475                           
  3476                           	psect	text3
  3477  0C7E                     __ptext3:	
  3478 ;; *************** function _getTemp_AD *****************
  3479 ;; Defined at:
  3480 ;;		line 16 in file "../src/OverTemperature_B1.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  channel         1    wreg     unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  channel         1    5[BANK0 ] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;Total ram usage:        2 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		_getAD
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _getTemp_AD
  3510  0C7E                     _getTemp_AD:	
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3514                           ;getTemp_AD@channel stored from wreg
  3515  0C7E  0020               	movlb	0	; select bank0
  3516  0C7F  00A5               	movwf	getTemp_AD@channel
  3517                           
  3518                           ;OverTemperature_B1.c: 33: if (Temp.ADtoGO == 1) {
  3519  0C80  0021               	movlb	1	; select bank1
  3520  0C81  1D30               	btfss	_Temp^(0+128),2
  3521  0C82  0008               	return
  3522                           
  3523                           ;OverTemperature_B1.c: 34: Temp.GO = 1;
  3524  0C83  1630               	bsf	_Temp^(0+128),4
  3525                           
  3526                           ;OverTemperature_B1.c: 35: Temp.ADRES = getAD(channel, 0xf0);
  3527  0C84  30F0               	movlw	240
  3528  0C85  0020               	movlb	0	; select bank0
  3529  0C86  00A4               	movwf	??_getTemp_AD
  3530  0C87  0824               	movf	??_getTemp_AD,w
  3531  0C88  00A0               	movwf	getAD@adcon1
  3532  0C89  0825               	movf	getTemp_AD@channel,w
  3533  0C8A  318B  2303  318C   	fcall	_getAD
  3534  0C8D  0020               	movlb	0	; select bank0
  3535  0C8E  0821               	movf	?_getAD+1,w
  3536  0C8F  0021               	movlb	1	; select bank1
  3537  0C90  01BD               	clrf	((_Temp+1)^(0+128)+12)
  3538  0C91  07BD               	addwf	((_Temp+1)^(0+128)+12),f
  3539  0C92  0020               	movlb	0	; select bank0
  3540  0C93  0820               	movf	?_getAD,w
  3541  0C94  0021               	movlb	1	; select bank1
  3542  0C95  01BC               	clrf	(_Temp^(0+128)+12)
  3543  0C96  07BC               	addwf	(_Temp^(0+128)+12),f
  3544                           
  3545                           ;OverTemperature_B1.c: 36: if (Temp.ADH[0] < Temp.ADRES) {
  3546  0C97  083D               	movf	((_Temp+1)^(0+128)+12),w
  3547  0C98  0239               	subwf	((_Temp+1)^(0+128)+8),w
  3548  0C99  1D03               	skipz
  3549  0C9A  2C9D               	goto	u6905
  3550  0C9B  083C               	movf	(_Temp^(0+128)+12),w
  3551  0C9C  0238               	subwf	(_Temp^(0+128)+8),w
  3552  0C9D                     u6905:	
  3553  0C9D  1803               	skipnc
  3554  0C9E  2CA6               	goto	l6417
  3555                           
  3556                           ;OverTemperature_B1.c: 37: Temp.ADH[0] = Temp.ADRES;
  3557  0C9F  083D               	movf	((_Temp+1)^(0+128)+12),w
  3558  0CA0  01B9               	clrf	((_Temp+1)^(0+128)+8)
  3559  0CA1  07B9               	addwf	((_Temp+1)^(0+128)+8),f
  3560  0CA2  083C               	movf	(_Temp^(0+128)+12),w
  3561  0CA3  01B8               	clrf	(_Temp^(0+128)+8)
  3562  0CA4  07B8               	addwf	(_Temp^(0+128)+8),f
  3563                           
  3564                           ;OverTemperature_B1.c: 38: } else if (Temp.ADH[1] < Temp.ADRES) {
  3565  0CA5  0008               	return
  3566  0CA6                     l6417:	
  3567  0CA6  083D               	movf	((_Temp+1)^(0+128)+12),w
  3568  0CA7  023B               	subwf	((_Temp+1)^(0+128)+10),w
  3569  0CA8  1D03               	skipz
  3570  0CA9  2CAC               	goto	u6915
  3571  0CAA  083C               	movf	(_Temp^(0+128)+12),w
  3572  0CAB  023A               	subwf	(_Temp^(0+128)+10),w
  3573  0CAC                     u6915:	
  3574  0CAC  1803               	skipnc
  3575  0CAD  0008               	return
  3576                           
  3577                           ;OverTemperature_B1.c: 39: Temp.ADH[1] = Temp.ADRES;
  3578  0CAE  083D               	movf	((_Temp+1)^(0+128)+12),w
  3579  0CAF  01BB               	clrf	((_Temp+1)^(0+128)+10)
  3580  0CB0  07BB               	addwf	((_Temp+1)^(0+128)+10),f
  3581  0CB1  083C               	movf	(_Temp^(0+128)+12),w
  3582  0CB2  01BA               	clrf	(_Temp^(0+128)+10)
  3583  0CB3  07BA               	addwf	(_Temp^(0+128)+10),f
  3584  0CB4  0008               	return
  3585  0CB5                     __end_of_getTemp_AD:	
  3586                           
  3587                           	psect	text4
  3588  0B03                     __ptext4:	
  3589 ;; *************** function _getAD *****************
  3590 ;; Defined at:
  3591 ;;		line 453 in file "../src/MCU_B1.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  adcon0          1    wreg     unsigned char 
  3594 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  adcon0          1    3[BANK0 ] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  2    0[BANK0 ] int 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3606 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;Total ram usage:        4 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    6
  3613 ;; This function calls:
  3614 ;;		_Timeout_Counter
  3615 ;;		_set_TimeoutCleared
  3616 ;; This function is called by:
  3617 ;;		_getTemp_AD
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _getAD
  3623  0B03                     _getAD:	
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3627                           ;getAD@adcon0 stored from wreg
  3628  0B03  0020               	movlb	0	; select bank0
  3629  0B04  00A3               	movwf	getAD@adcon0
  3630                           
  3631                           ;MCU_B1.c: 454: ADCON0 = adcon0;
  3632  0B05  0823               	movf	getAD@adcon0,w
  3633  0B06  0021               	movlb	1	; select bank1
  3634  0B07  009D               	movwf	29	;volatile
  3635                           
  3636                           ;MCU_B1.c: 455: ADCON1 = adcon1;
  3637  0B08  0020               	movlb	0	; select bank0
  3638  0B09  0820               	movf	getAD@adcon1,w
  3639  0B0A  0021               	movlb	1	; select bank1
  3640  0B0B  009E               	movwf	30	;volatile
  3641                           
  3642                           ;MCU_B1.c: 456: GO_nDONE = 1;
  3643  0B0C  149D               	bsf	29,1	;volatile
  3644                           
  3645                           ;MCU_B1.c: 457: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3646  0B0D  2B11               	goto	l6025
  3647  0B0E                     l6023:	
  3648                           
  3649                           ;MCU_B1.c: 458: Timeout_Counter();
  3650  0B0E  3189  21C6  318B   	fcall	_Timeout_Counter
  3651  0B11                     l6025:	
  3652  0B11  0021               	movlb	1	; select bank1
  3653  0B12  1C9D               	btfss	29,1	;volatile
  3654  0B13  2B16               	goto	l6029
  3655  0B14  1D2D               	btfss	(_myMain^(0+128)+13),2
  3656  0B15  2B0E               	goto	l6023
  3657  0B16                     l6029:	
  3658                           
  3659                           ;MCU_B1.c: 459: };
  3660                           ;MCU_B1.c: 460: set_TimeoutCleared();
  3661  0B16  3188  2014         	fcall	_set_TimeoutCleared
  3662                           
  3663                           ;MCU_B1.c: 461: return ((ADRESH*256)+ADRESL);
  3664  0B18  0021               	movlb	1	; select bank1
  3665  0B19  081C               	movf	28,w	;volatile
  3666  0B1A  0020               	movlb	0	; select bank0
  3667  0B1B  01A1               	clrf	?_getAD+1
  3668  0B1C  07A1               	addwf	?_getAD+1,f
  3669  0B1D  0021               	movlb	1	; select bank1
  3670  0B1E  081B               	movf	27,w	;volatile
  3671  0B1F  0020               	movlb	0	; select bank0
  3672  0B20  01A0               	clrf	?_getAD
  3673  0B21  07A0               	addwf	?_getAD,f
  3674  0B22  0008               	return
  3675  0B23                     __end_of_getAD:	
  3676                           
  3677                           	psect	text5
  3678  090D                     __ptext5:	
  3679 ;; *************** function _WDT_Main *****************
  3680 ;; Defined at:
  3681 ;;		line 1019 in file "../src/MCU_B1.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;		None               void
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;Total ram usage:        1 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    6
  3702 ;; This function calls:
  3703 ;;		_WDT_Clearing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _WDT_Main
  3711  090D                     _WDT_Main:	
  3712                           
  3713                           ;MCU_B1.c: 1020: if (WDT.Enable == 1) {
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3717  090D  1C70               	btfss	_WDT,0
  3718  090E  0008               	return
  3719                           
  3720                           ;MCU_B1.c: 1021: if (WDT.Timer-- > 0) {
  3721  090F  3001               	movlw	1
  3722  0910  02F1               	subwf	_WDT+1,f
  3723  0911  0871               	movf	_WDT+1,w
  3724  0912  3AFF               	xorlw	255
  3725  0913  1903               	skipnz
  3726  0914  0008               	return
  3727                           
  3728                           ;MCU_B1.c: 1022: WDT.Timer = 100;
  3729  0915  3064               	movlw	100
  3730  0916  0020               	movlb	0	; select bank0
  3731  0917  00A0               	movwf	??_WDT_Main
  3732  0918  0820               	movf	??_WDT_Main,w
  3733  0919  00F1               	movwf	_WDT+1
  3734                           
  3735                           ;MCU_B1.c: 1023: WDT_Clearing();
  3736  091A  3187  27FE         	fcall	_WDT_Clearing
  3737  091C  0008               	return
  3738  091D                     __end_of_WDT_Main:	
  3739                           
  3740                           	psect	text6
  3741  07FE                     __ptext6:	
  3742 ;; *************** function _WDT_Clearing *****************
  3743 ;; Defined at:
  3744 ;;		line 1029 in file "../src/MCU_B1.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		None
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    5
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_WDT_Main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _WDT_Clearing
  3774  07FE                     _WDT_Clearing:	
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _WDT_Clearing: []
  3778  07FE  0064               	clrwdt	;# 
  3779  07FF  0008               	return
  3780  0800                     __end_of_WDT_Clearing:	
  3781                           
  3782                           	psect	text7
  3783  080D                     __ptext7:	
  3784 ;; *************** function _Temp_Main *****************
  3785 ;; Defined at:
  3786 ;;		line 51 in file "../src/OverTemperature_B1.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;		None               void
  3793 ;; Registers used:
  3794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    7
  3807 ;; This function calls:
  3808 ;;		_setTemp_Main
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function _Temp_Main
  3816  080D                     _Temp_Main:	
  3817                           
  3818                           ;OverTemperature_B1.c: 53: setTemp_Main();
  3819                           
  3820                           ;incstack = 0
  3821                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3822  080D  3184  24AD         	fcall	_setTemp_Main
  3823  080F  0008               	return
  3824  0810                     __end_of_Temp_Main:	
  3825                           
  3826                           	psect	text8
  3827  04AD                     __ptext8:	
  3828 ;; *************** function _setTemp_Main *****************
  3829 ;; Defined at:
  3830 ;;		line 58 in file "../src/OverTemperature_B1.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    6
  3851 ;; This function calls:
  3852 ;;		_getMain_All_Error_Status
  3853 ;; This function is called by:
  3854 ;;		_Temp_Main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _setTemp_Main
  3860  04AD                     _setTemp_Main:	
  3861                           
  3862                           ;OverTemperature_B1.c: 59: if (Temp.Enable == 1) {
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3866  04AD  0021               	movlb	1	; select bank1
  3867  04AE  1C30               	btfss	_Temp^(0+128),0
  3868  04AF  2D42               	goto	l1232
  3869                           
  3870                           ;OverTemperature_B1.c: 60: if (Temp.ADtoGO == 0) {
  3871  04B0  1930               	btfsc	_Temp^(0+128),2
  3872  04B1  2CC1               	goto	l6103
  3873                           
  3874                           ;OverTemperature_B1.c: 61: Temp.Time++;
  3875  04B2  3001               	movlw	1
  3876  04B3  07B1               	addwf	(_Temp^(0+128)+1),f
  3877  04B4  3000               	movlw	0
  3878  04B5  3DB2               	addwfc	((_Temp+1)^(0+128)+1),f
  3879                           
  3880                           ;OverTemperature_B1.c: 62: if (Temp.Time >= 500) {
  3881  04B6  3001               	movlw	1
  3882  04B7  0232               	subwf	((_Temp+1)^(0+128)+1),w
  3883  04B8  30F4               	movlw	244
  3884  04B9  1903               	skipnz
  3885  04BA  0231               	subwf	(_Temp^(0+128)+1),w
  3886  04BB  1C03               	skipc
  3887  04BC  0008               	return
  3888                           
  3889                           ;OverTemperature_B1.c: 63: Temp.Time = 0;
  3890  04BD  01B1               	clrf	(_Temp^(0+128)+1)
  3891  04BE  01B2               	clrf	((_Temp+1)^(0+128)+1)
  3892                           
  3893                           ;OverTemperature_B1.c: 64: Temp.ADtoGO = 1;
  3894  04BF  1530               	bsf	_Temp^(0+128),2
  3895                           
  3896                           ;OverTemperature_B1.c: 65: }
  3897                           ;OverTemperature_B1.c: 66: } else {
  3898  04C0  0008               	return
  3899  04C1                     l6103:	
  3900                           
  3901                           ;OverTemperature_B1.c: 67: if (getMain_All_Error_Status(2) == 0) {
  3902  04C1  3002               	movlw	2
  3903  04C2  318A  226E  3184   	fcall	_getMain_All_Error_Status
  3904  04C5  3800               	iorlw	0
  3905  04C6  1D03               	skipz
  3906  04C7  0008               	return
  3907                           
  3908                           ;OverTemperature_B1.c: 68: Temp.Time++;
  3909  04C8  3001               	movlw	1
  3910  04C9  0021               	movlb	1	; select bank1
  3911  04CA  07B1               	addwf	(_Temp^(0+128)+1),f
  3912  04CB  3000               	movlw	0
  3913  04CC  3DB2               	addwfc	((_Temp+1)^(0+128)+1),f
  3914                           
  3915                           ;OverTemperature_B1.c: 69: if (Temp.Time >= 5) {
  3916  04CD  3000               	movlw	0
  3917  04CE  0232               	subwf	((_Temp+1)^(0+128)+1),w
  3918  04CF  3005               	movlw	5
  3919  04D0  1903               	skipnz
  3920  04D1  0231               	subwf	(_Temp^(0+128)+1),w
  3921  04D2  1C03               	skipc
  3922  04D3  0008               	return
  3923                           
  3924                           ;OverTemperature_B1.c: 70: Temp.Time = 0;
  3925  04D4  01B1               	clrf	(_Temp^(0+128)+1)
  3926  04D5  01B2               	clrf	((_Temp+1)^(0+128)+1)
  3927                           
  3928                           ;OverTemperature_B1.c: 71: if (Temp.GO == 1) {
  3929  04D6  1E30               	btfss	_Temp^(0+128),4
  3930  04D7  0008               	return
  3931                           
  3932                           ;OverTemperature_B1.c: 72: Temp.ADtoGO = 0;
  3933  04D8  1130               	bcf	_Temp^(0+128),2
  3934                           
  3935                           ;OverTemperature_B1.c: 73: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3936  04D9  300A               	movlw	10
  3937  04DA  3EB0               	addlw	_Temp& (0+255)
  3938  04DB  0086               	movwf	6
  3939  04DC  0187               	clrf	7
  3940  04DD  3008               	movlw	8
  3941  04DE  3EB0               	addlw	_Temp& (0+255)
  3942  04DF  0084               	movwf	4
  3943  04E0  0185               	clrf	5
  3944  04E1  3F40               	moviw [0]fsr1
  3945  04E2  0700               	addwf	0,w
  3946  04E3  0020               	movlb	0	; select bank0
  3947  04E4  00A5               	movwf	??_setTemp_Main
  3948  04E5  3101               	addfsr 0,1
  3949  04E6  3F41               	moviw [1]fsr1
  3950  04E7  3D00               	addwfc	0,w
  3951  04E8  00A6               	movwf	??_setTemp_Main+1
  3952  04E9  36A6               	lsrf	??_setTemp_Main+1,f
  3953  04EA  0CA5               	rrf	??_setTemp_Main,f
  3954  04EB  0825               	movf	??_setTemp_Main,w
  3955  04EC  0021               	movlb	1	; select bank1
  3956  04ED  00B6               	movwf	(_Temp^(0+128)+6)
  3957  04EE  0020               	movlb	0	; select bank0
  3958  04EF  0826               	movf	??_setTemp_Main+1,w
  3959  04F0  0021               	movlb	1	; select bank1
  3960  04F1  00B7               	movwf	((_Temp+1)^(0+128)+6)
  3961                           
  3962                           ;OverTemperature_B1.c: 83: Temp.SafeValue = 600;
  3963  04F2  3058               	movlw	88
  3964  04F3  00BE               	movwf	(_Temp^(0+128)+14)
  3965  04F4  3002               	movlw	2
  3966  04F5  00BF               	movwf	(_Temp^(0+128)+15)
  3967                           
  3968                           ;OverTemperature_B1.c: 84: Temp.DangerValue = 550;
  3969  04F6  3026               	movlw	38
  3970  04F7  00C0               	movwf	(_Temp^(0+128)+16)
  3971  04F8  3002               	movlw	2
  3972  04F9  00C1               	movwf	(_Temp^(0+128)+17)
  3973                           
  3974                           ;OverTemperature_B1.c: 90: if (Temp.ERROR == 1) {
  3975  04FA  1CB0               	btfss	_Temp^(0+128),1
  3976  04FB  2D11               	goto	l6133
  3977                           
  3978                           ;OverTemperature_B1.c: 91: if (Temp.AD >= Temp.SafeValue) {
  3979  04FC  083F               	movf	((_Temp+1)^(0+128)+14),w
  3980  04FD  0237               	subwf	((_Temp+1)^(0+128)+6),w
  3981  04FE  1D03               	skipz
  3982  04FF  2D02               	goto	u6485
  3983  0500  083E               	movf	(_Temp^(0+128)+14),w
  3984  0501  0236               	subwf	(_Temp^(0+128)+6),w
  3985  0502                     u6485:	
  3986  0502  1C03               	skipc
  3987  0503  2D26               	goto	l6143
  3988                           
  3989                           ;OverTemperature_B1.c: 92: Temp.Count++;
  3990  0504  3001               	movlw	1
  3991  0505  0020               	movlb	0	; select bank0
  3992  0506  00A5               	movwf	??_setTemp_Main
  3993  0507  0825               	movf	??_setTemp_Main,w
  3994  0508  0021               	movlb	1	; select bank1
  3995  0509  07B3               	addwf	(_Temp^(0+128)+3),f
  3996                           
  3997                           ;OverTemperature_B1.c: 93: if (Temp.Count >= 3) {
  3998  050A  3003               	movlw	3
  3999  050B  0233               	subwf	(_Temp^(0+128)+3),w
  4000  050C  1C03               	skipc
  4001  050D  2D27               	goto	l6145
  4002                           
  4003                           ;OverTemperature_B1.c: 94: Temp.Count = 0;
  4004  050E  01B3               	clrf	(_Temp^(0+128)+3)
  4005                           
  4006                           ;OverTemperature_B1.c: 95: Temp.ERROR = 0;
  4007  050F  10B0               	bcf	_Temp^(0+128),1
  4008                           
  4009                           ;OverTemperature_B1.c: 96: }
  4010                           ;OverTemperature_B1.c: 97: } else {
  4011  0510  2D27               	goto	l6145
  4012  0511                     l6133:	
  4013                           ;OverTemperature_B1.c: 99: }
  4014                           ;OverTemperature_B1.c: 100: } else {
  4015                           
  4016                           ;OverTemperature_B1.c: 98: Temp.Count = 0;
  4017                           
  4018                           
  4019                           ;OverTemperature_B1.c: 101: if (Temp.AD <= Temp.DangerValue) {
  4020  0511  0837               	movf	((_Temp+1)^(0+128)+6),w
  4021  0512  0241               	subwf	((_Temp+1)^(0+128)+16),w
  4022  0513  1D03               	skipz
  4023  0514  2D17               	goto	u6505
  4024  0515  0836               	movf	(_Temp^(0+128)+6),w
  4025  0516  0240               	subwf	(_Temp^(0+128)+16),w
  4026  0517                     u6505:	
  4027  0517  1C03               	skipc
  4028  0518  2D26               	goto	l6143
  4029                           
  4030                           ;OverTemperature_B1.c: 102: Temp.Count++;
  4031  0519  3001               	movlw	1
  4032  051A  0020               	movlb	0	; select bank0
  4033  051B  00A5               	movwf	??_setTemp_Main
  4034  051C  0825               	movf	??_setTemp_Main,w
  4035  051D  0021               	movlb	1	; select bank1
  4036  051E  07B3               	addwf	(_Temp^(0+128)+3),f
  4037                           
  4038                           ;OverTemperature_B1.c: 103: if (Temp.Count >= 3) {
  4039  051F  3003               	movlw	3
  4040  0520  0233               	subwf	(_Temp^(0+128)+3),w
  4041  0521  1C03               	skipc
  4042  0522  2D27               	goto	l6145
  4043                           
  4044                           ;OverTemperature_B1.c: 104: Temp.Count = 0;
  4045  0523  01B3               	clrf	(_Temp^(0+128)+3)
  4046                           
  4047                           ;OverTemperature_B1.c: 105: Temp.ERROR = 1;
  4048  0524  14B0               	bsf	_Temp^(0+128),1
  4049                           
  4050                           ;OverTemperature_B1.c: 106: }
  4051                           ;OverTemperature_B1.c: 107: } else {
  4052  0525  2D27               	goto	l6145
  4053  0526                     l6143:	
  4054                           
  4055                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  4056  0526  01B3               	clrf	(_Temp^(0+128)+3)
  4057  0527                     l6145:	
  4058                           
  4059                           ;OverTemperature_B1.c: 109: }
  4060                           ;OverTemperature_B1.c: 110: }
  4061                           ;OverTemperature_B1.c: 111: product->Data[24]=Temp.AD >> 8;
  4062  0527  0837               	movf	((_Temp+1)^(0+128)+6),w
  4063  0528  0020               	movlb	0	; select bank0
  4064  0529  00A5               	movwf	??_setTemp_Main
  4065  052A  086D               	movf	_product,w
  4066  052B  3E18               	addlw	24
  4067  052C  0086               	movwf	6
  4068  052D  3001               	movlw	1	; select bank2/3
  4069  052E  0087               	movwf	7
  4070  052F  0825               	movf	??_setTemp_Main,w
  4071  0530  0081               	movwf	1
  4072                           
  4073                           ;OverTemperature_B1.c: 112: product->Data[25]=Temp.AD;
  4074  0531  0021               	movlb	1	; select bank1
  4075  0532  0836               	movf	(_Temp^(0+128)+6),w
  4076  0533  0020               	movlb	0	; select bank0
  4077  0534  00A5               	movwf	??_setTemp_Main
  4078  0535  086D               	movf	_product,w
  4079  0536  3E19               	addlw	25
  4080  0537  0086               	movwf	6
  4081  0538  3001               	movlw	1	; select bank2/3
  4082  0539  0087               	movwf	7
  4083  053A  0825               	movf	??_setTemp_Main,w
  4084  053B  0081               	movwf	1
  4085                           
  4086                           ;OverTemperature_B1.c: 115: Temp.ADH[0] = 0;
  4087  053C  0021               	movlb	1	; select bank1
  4088  053D  01B8               	clrf	(_Temp^(0+128)+8)
  4089  053E  01B9               	clrf	((_Temp+1)^(0+128)+8)
  4090                           
  4091                           ;OverTemperature_B1.c: 116: Temp.ADH[1] = 0;
  4092  053F  01BA               	clrf	(_Temp^(0+128)+10)
  4093  0540  01BB               	clrf	((_Temp+1)^(0+128)+10)
  4094                           
  4095                           ;OverTemperature_B1.c: 117: }
  4096                           ;OverTemperature_B1.c: 118: }
  4097                           ;OverTemperature_B1.c: 119: }
  4098                           ;OverTemperature_B1.c: 120: }
  4099                           ;OverTemperature_B1.c: 121: } else {
  4100  0541  0008               	return
  4101  0542                     l1232:	
  4102                           
  4103                           ;OverTemperature_B1.c: 122: if (myMain.PowerON == 1) {
  4104  0542  1C20               	btfss	_myMain^(0+128),0
  4105  0543  0008               	return
  4106                           
  4107                           ;OverTemperature_B1.c: 123: Temp.Enable = 1;
  4108  0544  1430               	bsf	_Temp^(0+128),0
  4109  0545  0008               	return
  4110  0546                     __end_of_setTemp_Main:	
  4111                           
  4112                           	psect	text9
  4113  080A                     __ptext9:	
  4114 ;; *************** function _Temp_Initialization *****************
  4115 ;; Defined at:
  4116 ;;		line 9 in file "../src/OverTemperature_B1.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;		None               void
  4123 ;; Registers used:
  4124 ;;		status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    6
  4137 ;; This function calls:
  4138 ;;		_setTemp_Initialization
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _Temp_Initialization
  4146  080A                     _Temp_Initialization:	
  4147                           
  4148                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4152  080A  3180  2003         	fcall	_setTemp_Initialization
  4153  080C  0008               	return
  4154  080D                     __end_of_Temp_Initialization:	
  4155                           
  4156                           	psect	text10
  4157  0003                     __ptext10:	
  4158 ;; *************** function _setTemp_Initialization *****************
  4159 ;; Defined at:
  4160 ;;		line 46 in file "../src/OverTemperature_B1.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		None
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    5
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_Temp_Initialization
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _setTemp_Initialization
  4190  0003                     _setTemp_Initialization:	
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _setTemp_Initialization: []
  4194  0003  0008               	return
  4195  0004                     __end_of_setTemp_Initialization:	
  4196                           
  4197                           	psect	text11
  4198  0B64                     __ptext11:	
  4199 ;; *************** function _Switch_Main *****************
  4200 ;; Defined at:
  4201 ;;		line 72 in file "../src/Switch_B1.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  error           1   22[BANK0 ] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;		None               void
  4208 ;; Registers used:
  4209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;Total ram usage:        2 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:   10
  4222 ;; This function calls:
  4223 ;;		_TouchPower
  4224 ;;		_getMain_All_Error_Status
  4225 ;;		_setMain_Exception
  4226 ;;		_setSw_Main
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _Switch_Main
  4234  0B64                     _Switch_Main:	
  4235                           
  4236                           ;Switch_B1.c: 73: char error = getMain_All_Error_Status(0);
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4240  0B64  3000               	movlw	0
  4241  0B65  318A  226E  318B   	fcall	_getMain_All_Error_Status
  4242  0B68  0020               	movlb	0	; select bank0
  4243  0B69  00B5               	movwf	??_Switch_Main
  4244  0B6A  0835               	movf	??_Switch_Main,w
  4245  0B6B  00B6               	movwf	Switch_Main@error
  4246                           
  4247                           ;Switch_B1.c: 74: if (error != 0) {
  4248  0B6C  0836               	movf	Switch_Main@error,w
  4249  0B6D  1903               	btfsc	3,2
  4250  0B6E  2B73               	goto	l1637
  4251                           
  4252                           ;Switch_B1.c: 75: if (SwDetect.Error == 0) {
  4253  0B6F  1868               	btfsc	_SwDetect,0
  4254  0B70  2B7A               	goto	l1639
  4255                           
  4256                           ;Switch_B1.c: 76: SwDetect.Error = 1;
  4257  0B71  1468               	bsf	_SwDetect,0
  4258  0B72  2B76               	goto	L1
  4259  0B73                     l1637:	
  4260                           ;Switch_B1.c: 80: }
  4261                           ;Switch_B1.c: 81: } else {
  4262                           
  4263                           ;Switch_B1.c: 78: setMain_Exception(error);
  4264                           
  4265                           
  4266                           ;Switch_B1.c: 82: if (SwDetect.Error == 1) {
  4267  0B73  1C68               	btfss	_SwDetect,0
  4268  0B74  2B7A               	goto	l1639
  4269                           
  4270                           ;Switch_B1.c: 83: SwDetect.Error = 0;
  4271  0B75  1068               	bcf	_SwDetect,0
  4272  0B76                     L1:	
  4273                           
  4274                           ;Switch_B1.c: 85: setMain_Exception(error);
  4275  0B76  0836               	movf	Switch_Main@error,w
  4276  0B77  318F  275B  318B   	fcall	_setMain_Exception
  4277  0B7A                     l1639:	
  4278                           
  4279                           ;Switch_B1.c: 87: }
  4280                           ;Switch_B1.c: 88: }
  4281                           ;Switch_B1.c: 91: setSw_Main(1);
  4282  0B7A  3001               	movlw	1
  4283  0B7B  3180  2042  318B   	fcall	_setSw_Main
  4284                           
  4285                           ;Switch_B1.c: 95: setSw_Main(2);
  4286  0B7E  3002               	movlw	2
  4287  0B7F  3180  2042  318B   	fcall	_setSw_Main
  4288                           
  4289                           ;Switch_B1.c: 103: TouchPower();
  4290  0B82  3189  21DB         	fcall	_TouchPower
  4291  0B84  0008               	return
  4292  0B85                     __end_of_Switch_Main:	
  4293                           
  4294                           	psect	text12
  4295  0042                     __ptext12:	
  4296 ;; *************** function _setSw_Main *****************
  4297 ;; Defined at:
  4298 ;;		line 143 in file "../src/Switch_B1.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  sw              1    wreg     unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  sw              1   20[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;		None               void
  4305 ;; Registers used:
  4306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;Total ram usage:        3 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    9
  4319 ;; This function calls:
  4320 ;;		_SwPointSelect
  4321 ;;		_Sw_DimmerAdjFunc
  4322 ;;		_Sw_DimmerOffFunc
  4323 ;;		_Sw_DimmerOnFunc
  4324 ;;		_getSw_KeyStatus
  4325 ;;		_setBuz
  4326 ;; This function is called by:
  4327 ;;		_Switch_Main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _setSw_Main
  4333  0042                     _setSw_Main:	
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4337                           ;setSw_Main@sw stored from wreg
  4338  0042  0020               	movlb	0	; select bank0
  4339  0043  00B4               	movwf	setSw_Main@sw
  4340                           
  4341                           ;Switch_B1.c: 144: SwPointSelect(sw);
  4342  0044  0834               	movf	setSw_Main@sw,w
  4343  0045  3189  219D  3180   	fcall	_SwPointSelect
  4344                           
  4345                           ;Switch_B1.c: 145: if (Sw->Enable == 1) {
  4346  0048  0020               	movlb	0	; select bank0
  4347  0049  0867               	movf	_Sw,w
  4348  004A  0086               	movwf	6
  4349  004B  3001               	movlw	1	; select bank2/3
  4350  004C  0087               	movwf	7
  4351  004D  1C01               	btfss	1,0
  4352  004E  29BA               	goto	l1650
  4353                           
  4354                           ;Switch_B1.c: 146: if (SwDetect.Error == 0) {
  4355  004F  1868               	btfsc	_SwDetect,0
  4356  0050  297B               	goto	l6247
  4357                           
  4358                           ;Switch_B1.c: 147: Sw->Detect = 0;
  4359  0051  0A67               	incf	_Sw,w
  4360  0052  0086               	movwf	6
  4361  0053  3001               	movlw	1	; select bank2/3
  4362  0054  0087               	movwf	7
  4363  0055  1081               	bcf	1,1
  4364                           
  4365                           ;Switch_B1.c: 148: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  4366  0056  0834               	movf	setSw_Main@sw,w
  4367  0057  318A  22E4  3180   	fcall	_getSw_KeyStatus
  4368  005A  3A01               	xorlw	1
  4369  005B  3000               	movlw	0
  4370  005C  1903               	skipnz
  4371  005D  3001               	movlw	1
  4372  005E  0020               	movlb	0	; select bank0
  4373  005F  00B2               	movwf	??_setSw_Main
  4374  0060  0867               	movf	_Sw,w
  4375  0061  0086               	movwf	6
  4376  0062  3001               	movlw	1	; select bank2/3
  4377  0063  0087               	movwf	7
  4378  0064  0DB2               	rlf	??_setSw_Main,f
  4379  0065  0801               	movf	1,w
  4380  0066  0632               	xorwf	??_setSw_Main,w
  4381  0067  39FD               	andlw	-3
  4382  0068  0632               	xorwf	??_setSw_Main,w
  4383  0069  0081               	movwf	1
  4384                           
  4385                           ;Switch_B1.c: 149: if (Sw->Touch == 1) {
  4386  006A  0867               	movf	_Sw,w
  4387  006B  0086               	movwf	6
  4388  006C  3001               	movlw	1	; select bank2/3
  4389  006D  0087               	movwf	7
  4390  006E  1C81               	btfss	1,1
  4391  006F  292D               	goto	l6223
  4392                           
  4393                           ;Switch_B1.c: 150: if (Sw->Debounce == 0) {
  4394  0070  0867               	movf	_Sw,w
  4395  0071  0086               	movwf	6
  4396  0072  3001               	movlw	1	; select bank2/3
  4397  0073  0087               	movwf	7
  4398  0074  1901               	btfsc	1,2
  4399  0075  2897               	goto	l6193
  4400                           
  4401                           ;Switch_B1.c: 151: Sw->DebounceTime++;
  4402  0076  3001               	movlw	1
  4403  0077  00B2               	movwf	??_setSw_Main
  4404  0078  0867               	movf	_Sw,w
  4405  0079  3E02               	addlw	2
  4406  007A  0086               	movwf	6
  4407  007B  3001               	movlw	1	; select bank2/3
  4408  007C  0087               	movwf	7
  4409  007D  0832               	movf	??_setSw_Main,w
  4410  007E  0781               	addwf	1,f
  4411                           
  4412                           ;Switch_B1.c: 152: if (Sw->DebounceTime >= 5) {
  4413  007F  0867               	movf	_Sw,w
  4414  0080  3E02               	addlw	2
  4415  0081  0086               	movwf	6
  4416  0082  3001               	movlw	1	; select bank2/3
  4417  0083  0087               	movwf	7
  4418  0084  3005               	movlw	5
  4419  0085  0201               	subwf	1,w
  4420  0086  1C03               	skipc
  4421  0087  0008               	return
  4422                           
  4423                           ;Switch_B1.c: 153: Sw->DebounceTime = 0;
  4424  0088  0867               	movf	_Sw,w
  4425  0089  3E02               	addlw	2
  4426  008A  0086               	movwf	6
  4427  008B  3001               	movlw	1	; select bank2/3
  4428  008C  0087               	movwf	7
  4429  008D  0181               	clrf	1
  4430                           
  4431                           ;Switch_B1.c: 154: Sw->Debounce = 1;
  4432  008E  0867               	movf	_Sw,w
  4433  008F  0086               	movwf	6
  4434  0090  3001               	movlw	1	; select bank2/3
  4435  0091  0087               	movwf	7
  4436  0092  1501               	bsf	1,2
  4437                           
  4438                           ;Switch_B1.c: 157: Sw_DimmerOnFunc(sw);
  4439  0093  0834               	movf	setSw_Main@sw,w
  4440  0094  318E  26C6         	fcall	_Sw_DimmerOnFunc
  4441                           
  4442                           ;Switch_B1.c: 159: }
  4443                           ;Switch_B1.c: 160: } else {
  4444  0096  0008               	return
  4445  0097                     l6193:	
  4446                           
  4447                           ;Switch_B1.c: 161: if (Sw->Hold1 == 0) {
  4448  0097  0020               	movlb	0	; select bank0
  4449  0098  0867               	movf	_Sw,w
  4450  0099  0086               	movwf	6
  4451  009A  3001               	movlw	1	; select bank2/3
  4452  009B  0087               	movwf	7
  4453  009C  1981               	btfsc	1,3
  4454  009D  28C4               	goto	l6203
  4455                           
  4456                           ;Switch_B1.c: 162: Sw->Hold1Time++;
  4457  009E  0867               	movf	_Sw,w
  4458  009F  3E03               	addlw	3
  4459  00A0  0086               	movwf	6
  4460  00A1  3001               	movlw	1	; select bank2/3
  4461  00A2  0087               	movwf	7
  4462  00A3  3001               	movlw	1
  4463  00A4  0781               	addwf	1,f
  4464  00A5  3141               	addfsr 1,1
  4465  00A6  1803               	skipnc
  4466  00A7  0A81               	incf	1,f
  4467                           
  4468                           ;Switch_B1.c: 163: if (Sw->Hold1Time >= 150) {
  4469  00A8  0867               	movf	_Sw,w
  4470  00A9  3E03               	addlw	3
  4471  00AA  0086               	movwf	6
  4472  00AB  3001               	movlw	1	; select bank2/3
  4473  00AC  0087               	movwf	7
  4474  00AD  3F40               	moviw [0]fsr1
  4475  00AE  00B2               	movwf	??_setSw_Main
  4476  00AF  3F41               	moviw [1]fsr1
  4477  00B0  00B3               	movwf	??_setSw_Main+1
  4478  00B1  3000               	movlw	0
  4479  00B2  0233               	subwf	??_setSw_Main+1,w
  4480  00B3  3096               	movlw	150
  4481  00B4  1903               	skipnz
  4482  00B5  0232               	subwf	??_setSw_Main,w
  4483  00B6  1C03               	skipc
  4484  00B7  0008               	return
  4485                           
  4486                           ;Switch_B1.c: 164: Sw->Hold1Time = 0;
  4487  00B8  0867               	movf	_Sw,w
  4488  00B9  3E03               	addlw	3
  4489  00BA  0086               	movwf	6
  4490  00BB  3001               	movlw	1	; select bank2/3
  4491  00BC  0087               	movwf	7
  4492  00BD  3000               	movlw	0
  4493  00BE  3FC0               	movwi [0]fsr1
  4494  00BF  3FC1               	movwi [1]fsr1
  4495                           
  4496                           ;Switch_B1.c: 167: Sw_DimmerAdjFunc(sw);
  4497  00C0  0834               	movf	setSw_Main@sw,w
  4498  00C1  318C  24F2         	fcall	_Sw_DimmerAdjFunc
  4499                           
  4500                           ;Switch_B1.c: 170: }
  4501                           ;Switch_B1.c: 171: } else {
  4502  00C3  0008               	return
  4503  00C4                     l6203:	
  4504                           
  4505                           ;Switch_B1.c: 172: if (Sw->Hold2 == 0) {
  4506  00C4  0020               	movlb	0	; select bank0
  4507  00C5  0867               	movf	_Sw,w
  4508  00C6  0086               	movwf	6
  4509  00C7  3001               	movlw	1	; select bank2/3
  4510  00C8  0087               	movwf	7
  4511  00C9  1A01               	btfsc	1,4
  4512  00CA  28FE               	goto	l6215
  4513                           
  4514                           ;Switch_B1.c: 173: Sw->Hold2Time++;
  4515  00CB  0867               	movf	_Sw,w
  4516  00CC  3E05               	addlw	5
  4517  00CD  0086               	movwf	6
  4518  00CE  3001               	movlw	1	; select bank2/3
  4519  00CF  0087               	movwf	7
  4520  00D0  3001               	movlw	1
  4521  00D1  0781               	addwf	1,f
  4522  00D2  3141               	addfsr 1,1
  4523  00D3  1803               	skipnc
  4524  00D4  0A81               	incf	1,f
  4525                           
  4526                           ;Switch_B1.c: 174: if (Sw->Hold2Time >= 150) {
  4527  00D5  0867               	movf	_Sw,w
  4528  00D6  3E05               	addlw	5
  4529  00D7  0086               	movwf	6
  4530  00D8  3001               	movlw	1	; select bank2/3
  4531  00D9  0087               	movwf	7
  4532  00DA  3F40               	moviw [0]fsr1
  4533  00DB  00B2               	movwf	??_setSw_Main
  4534  00DC  3F41               	moviw [1]fsr1
  4535  00DD  00B3               	movwf	??_setSw_Main+1
  4536  00DE  3000               	movlw	0
  4537  00DF  0233               	subwf	??_setSw_Main+1,w
  4538  00E0  3096               	movlw	150
  4539  00E1  1903               	skipnz
  4540  00E2  0232               	subwf	??_setSw_Main,w
  4541  00E3  1C03               	skipc
  4542  00E4  0008               	return
  4543                           
  4544                           ;Switch_B1.c: 175: Sw->Hold2Time = 0;
  4545  00E5  0867               	movf	_Sw,w
  4546  00E6  3E05               	addlw	5
  4547  00E7  0086               	movwf	6
  4548  00E8  3001               	movlw	1	; select bank2/3
  4549  00E9  0087               	movwf	7
  4550  00EA  3000               	movlw	0
  4551  00EB  3FC0               	movwi [0]fsr1
  4552  00EC  3FC1               	movwi [1]fsr1
  4553                           
  4554                           ;Switch_B1.c: 176: Sw->Hold2 = 1;
  4555  00ED  0867               	movf	_Sw,w
  4556  00EE  0086               	movwf	6
  4557  00EF  3001               	movlw	1	; select bank2/3
  4558  00F0  0087               	movwf	7
  4559  00F1  1601               	bsf	1,4
  4560                           
  4561                           ;Switch_B1.c: 181: if (myMain.First == 1) {
  4562  00F2  0021               	movlb	1	; select bank1
  4563  00F3  1EA0               	btfss	_myMain^(0+128),5
  4564  00F4  0008               	return
  4565                           
  4566                           ;Switch_B1.c: 182: setBuz(2, 100);
  4567  00F5  3064               	movlw	100
  4568  00F6  0020               	movlb	0	; select bank0
  4569  00F7  00A9               	movwf	setBuz@time
  4570  00F8  3000               	movlw	0
  4571  00F9  00AA               	movwf	setBuz@time+1
  4572  00FA  3002               	movlw	2
  4573  00FB  318D  25F5         	fcall	_setBuz
  4574                           
  4575                           ;Switch_B1.c: 183: }
  4576                           ;Switch_B1.c: 185: }
  4577                           ;Switch_B1.c: 186: } else {
  4578  00FD  0008               	return
  4579  00FE                     l6215:	
  4580                           
  4581                           ;Switch_B1.c: 187: if (Sw->Hold3 == 0) {
  4582  00FE  0020               	movlb	0	; select bank0
  4583  00FF  0867               	movf	_Sw,w
  4584  0100  0086               	movwf	6
  4585  0101  3001               	movlw	1	; select bank2/3
  4586  0102  0087               	movwf	7
  4587  0103  1A81               	btfsc	1,5
  4588  0104  0008               	return
  4589                           
  4590                           ;Switch_B1.c: 188: Sw->Hold3Time++;
  4591  0105  0867               	movf	_Sw,w
  4592  0106  3E07               	addlw	7
  4593  0107  0086               	movwf	6
  4594  0108  3001               	movlw	1	; select bank2/3
  4595  0109  0087               	movwf	7
  4596  010A  3001               	movlw	1
  4597  010B  0781               	addwf	1,f
  4598  010C  3141               	addfsr 1,1
  4599  010D  1803               	skipnc
  4600  010E  0A81               	incf	1,f
  4601                           
  4602                           ;Switch_B1.c: 189: if (Sw->Hold3Time >= 300) {
  4603  010F  0867               	movf	_Sw,w
  4604  0110  3E07               	addlw	7
  4605  0111  0086               	movwf	6
  4606  0112  3001               	movlw	1	; select bank2/3
  4607  0113  0087               	movwf	7
  4608  0114  3F40               	moviw [0]fsr1
  4609  0115  00B2               	movwf	??_setSw_Main
  4610  0116  3F41               	moviw [1]fsr1
  4611  0117  00B3               	movwf	??_setSw_Main+1
  4612  0118  3001               	movlw	1
  4613  0119  0233               	subwf	??_setSw_Main+1,w
  4614  011A  302C               	movlw	44
  4615  011B  1903               	skipnz
  4616  011C  0232               	subwf	??_setSw_Main,w
  4617  011D  1C03               	skipc
  4618  011E  0008               	return
  4619                           
  4620                           ;Switch_B1.c: 190: Sw->Hold3Time = 0;
  4621  011F  0867               	movf	_Sw,w
  4622  0120  3E07               	addlw	7
  4623  0121  0086               	movwf	6
  4624  0122  3001               	movlw	1	; select bank2/3
  4625  0123  0087               	movwf	7
  4626  0124  3000               	movlw	0
  4627  0125  3FC0               	movwi [0]fsr1
  4628  0126  3FC1               	movwi [1]fsr1
  4629                           
  4630                           ;Switch_B1.c: 191: Sw->Hold3 = 1;
  4631  0127  0867               	movf	_Sw,w
  4632  0128  0086               	movwf	6
  4633  0129  3001               	movlw	1	; select bank2/3
  4634  012A  0087               	movwf	7
  4635  012B  1681               	bsf	1,5
  4636                           
  4637                           ;Switch_B1.c: 197: }
  4638                           ;Switch_B1.c: 198: }
  4639                           ;Switch_B1.c: 199: }
  4640                           ;Switch_B1.c: 200: }
  4641                           ;Switch_B1.c: 201: }
  4642                           ;Switch_B1.c: 202: } else {
  4643  012C  0008               	return
  4644  012D                     l6223:	
  4645                           
  4646                           ;Switch_B1.c: 203: if (Sw->Debounce == 1) {
  4647  012D  0867               	movf	_Sw,w
  4648  012E  0086               	movwf	6
  4649  012F  3001               	movlw	1	; select bank2/3
  4650  0130  0087               	movwf	7
  4651  0131  1D01               	btfss	1,2
  4652  0132  0008               	return
  4653                           
  4654                           ;Switch_B1.c: 204: Sw->DebounceTime++;
  4655  0133  3001               	movlw	1
  4656  0134  00B2               	movwf	??_setSw_Main
  4657  0135  0867               	movf	_Sw,w
  4658  0136  3E02               	addlw	2
  4659  0137  0086               	movwf	6
  4660  0138  3001               	movlw	1	; select bank2/3
  4661  0139  0087               	movwf	7
  4662  013A  0832               	movf	??_setSw_Main,w
  4663  013B  0781               	addwf	1,f
  4664                           
  4665                           ;Switch_B1.c: 205: if (Sw->DebounceTime >= 5) {
  4666  013C  0867               	movf	_Sw,w
  4667  013D  3E02               	addlw	2
  4668  013E  0086               	movwf	6
  4669  013F  3001               	movlw	1	; select bank2/3
  4670  0140  0087               	movwf	7
  4671  0141  3005               	movlw	5
  4672  0142  0201               	subwf	1,w
  4673  0143  1C03               	skipc
  4674  0144  0008               	return
  4675                           
  4676                           ;Switch_B1.c: 206: Sw->DebounceTime = 0;
  4677  0145  0867               	movf	_Sw,w
  4678  0146  3E02               	addlw	2
  4679  0147  0086               	movwf	6
  4680  0148  3001               	movlw	1	; select bank2/3
  4681  0149  0087               	movwf	7
  4682  014A  0181               	clrf	1
  4683                           
  4684                           ;Switch_B1.c: 207: Sw->Debounce = 0;
  4685  014B  0867               	movf	_Sw,w
  4686  014C  0086               	movwf	6
  4687  014D  3001               	movlw	1	; select bank2/3
  4688  014E  0087               	movwf	7
  4689  014F  1101               	bcf	1,2
  4690                           
  4691                           ;Switch_B1.c: 208: Sw->Hold1Time = 0;
  4692  0150  0867               	movf	_Sw,w
  4693  0151  3E03               	addlw	3
  4694  0152  0086               	movwf	6
  4695  0153  3001               	movlw	1	; select bank2/3
  4696  0154  0087               	movwf	7
  4697  0155  3000               	movlw	0
  4698  0156  3FC0               	movwi [0]fsr1
  4699  0157  3FC1               	movwi [1]fsr1
  4700                           
  4701                           ;Switch_B1.c: 209: Sw->Hold1 = 0;
  4702  0158  0867               	movf	_Sw,w
  4703  0159  0086               	movwf	6
  4704  015A  3001               	movlw	1	; select bank2/3
  4705  015B  0087               	movwf	7
  4706  015C  1181               	bcf	1,3
  4707                           
  4708                           ;Switch_B1.c: 210: Sw->Hold2Time = 0;
  4709  015D  0867               	movf	_Sw,w
  4710  015E  3E05               	addlw	5
  4711  015F  0086               	movwf	6
  4712  0160  3001               	movlw	1	; select bank2/3
  4713  0161  0087               	movwf	7
  4714  0162  3000               	movlw	0
  4715  0163  3FC0               	movwi [0]fsr1
  4716  0164  3FC1               	movwi [1]fsr1
  4717                           
  4718                           ;Switch_B1.c: 211: Sw->Hold2 = 0;
  4719  0165  0867               	movf	_Sw,w
  4720  0166  0086               	movwf	6
  4721  0167  3001               	movlw	1	; select bank2/3
  4722  0168  0087               	movwf	7
  4723  0169  1201               	bcf	1,4
  4724                           
  4725                           ;Switch_B1.c: 212: Sw->Hold3Time = 0;
  4726  016A  0867               	movf	_Sw,w
  4727  016B  3E07               	addlw	7
  4728  016C  0086               	movwf	6
  4729  016D  3001               	movlw	1	; select bank2/3
  4730  016E  0087               	movwf	7
  4731  016F  3000               	movlw	0
  4732  0170  3FC0               	movwi [0]fsr1
  4733  0171  3FC1               	movwi [1]fsr1
  4734                           
  4735                           ;Switch_B1.c: 213: Sw->Hold3 = 0;
  4736  0172  0867               	movf	_Sw,w
  4737  0173  0086               	movwf	6
  4738  0174  3001               	movlw	1	; select bank2/3
  4739  0175  0087               	movwf	7
  4740  0176  1281               	bcf	1,5
  4741                           
  4742                           ;Switch_B1.c: 215: Sw_DimmerOffFunc(sw);
  4743  0177  0834               	movf	setSw_Main@sw,w
  4744  0178  318D  2570         	fcall	_Sw_DimmerOffFunc
  4745                           
  4746                           ;Switch_B1.c: 220: }
  4747                           ;Switch_B1.c: 221: }
  4748                           ;Switch_B1.c: 222: }
  4749                           ;Switch_B1.c: 224: } else {
  4750  017A  0008               	return
  4751  017B                     l6247:	
  4752                           
  4753                           ;Switch_B1.c: 225: if (Sw->Detect == 0) {
  4754  017B  0020               	movlb	0	; select bank0
  4755  017C  0A67               	incf	_Sw,w
  4756  017D  0086               	movwf	6
  4757  017E  3001               	movlw	1	; select bank2/3
  4758  017F  0087               	movwf	7
  4759  0180  1881               	btfsc	1,1
  4760  0181  0008               	return
  4761                           
  4762                           ;Switch_B1.c: 226: Sw->Detect = 1;
  4763  0182  0A67               	incf	_Sw,w
  4764  0183  0086               	movwf	6
  4765  0184  3001               	movlw	1	; select bank2/3
  4766  0185  0087               	movwf	7
  4767  0186  1481               	bsf	1,1
  4768                           
  4769                           ;Switch_B1.c: 227: Sw->DebounceTime = 0;
  4770  0187  0867               	movf	_Sw,w
  4771  0188  3E02               	addlw	2
  4772  0189  0086               	movwf	6
  4773  018A  3001               	movlw	1	; select bank2/3
  4774  018B  0087               	movwf	7
  4775  018C  0181               	clrf	1
  4776                           
  4777                           ;Switch_B1.c: 228: Sw->Debounce = 0;
  4778  018D  0867               	movf	_Sw,w
  4779  018E  0086               	movwf	6
  4780  018F  3001               	movlw	1	; select bank2/3
  4781  0190  0087               	movwf	7
  4782  0191  1101               	bcf	1,2
  4783                           
  4784                           ;Switch_B1.c: 229: Sw->Hold1Time = 0;
  4785  0192  0867               	movf	_Sw,w
  4786  0193  3E03               	addlw	3
  4787  0194  0086               	movwf	6
  4788  0195  3001               	movlw	1	; select bank2/3
  4789  0196  0087               	movwf	7
  4790  0197  3000               	movlw	0
  4791  0198  3FC0               	movwi [0]fsr1
  4792  0199  3FC1               	movwi [1]fsr1
  4793                           
  4794                           ;Switch_B1.c: 230: Sw->Hold1 = 0;
  4795  019A  0867               	movf	_Sw,w
  4796  019B  0086               	movwf	6
  4797  019C  3001               	movlw	1	; select bank2/3
  4798  019D  0087               	movwf	7
  4799  019E  1181               	bcf	1,3
  4800                           
  4801                           ;Switch_B1.c: 231: Sw->Hold2Time = 0;
  4802  019F  0867               	movf	_Sw,w
  4803  01A0  3E05               	addlw	5
  4804  01A1  0086               	movwf	6
  4805  01A2  3001               	movlw	1	; select bank2/3
  4806  01A3  0087               	movwf	7
  4807  01A4  3000               	movlw	0
  4808  01A5  3FC0               	movwi [0]fsr1
  4809  01A6  3FC1               	movwi [1]fsr1
  4810                           
  4811                           ;Switch_B1.c: 232: Sw->Hold2 = 0;
  4812  01A7  0867               	movf	_Sw,w
  4813  01A8  0086               	movwf	6
  4814  01A9  3001               	movlw	1	; select bank2/3
  4815  01AA  0087               	movwf	7
  4816  01AB  1201               	bcf	1,4
  4817                           
  4818                           ;Switch_B1.c: 233: Sw->Hold3Time = 0;
  4819  01AC  0867               	movf	_Sw,w
  4820  01AD  3E07               	addlw	7
  4821  01AE  0086               	movwf	6
  4822  01AF  3001               	movlw	1	; select bank2/3
  4823  01B0  0087               	movwf	7
  4824  01B1  3000               	movlw	0
  4825  01B2  3FC0               	movwi [0]fsr1
  4826  01B3  3FC1               	movwi [1]fsr1
  4827                           
  4828                           ;Switch_B1.c: 234: Sw->Hold3 = 0;
  4829  01B4  0867               	movf	_Sw,w
  4830  01B5  0086               	movwf	6
  4831  01B6  3001               	movlw	1	; select bank2/3
  4832  01B7  0087               	movwf	7
  4833  01B8  1281               	bcf	1,5
  4834                           
  4835                           ;Switch_B1.c: 235: }
  4836                           ;Switch_B1.c: 236: }
  4837                           ;Switch_B1.c: 237: } else {
  4838  01B9  0008               	return
  4839  01BA                     l1650:	
  4840                           
  4841                           ;Switch_B1.c: 238: if (myMain.PowerON == 1) {
  4842  01BA  0021               	movlb	1	; select bank1
  4843  01BB  1C20               	btfss	_myMain^(0+128),0
  4844  01BC  0008               	return
  4845                           
  4846                           ;Switch_B1.c: 239: Sw->Enable = 1;
  4847  01BD  0020               	movlb	0	; select bank0
  4848  01BE  0867               	movf	_Sw,w
  4849  01BF  0086               	movwf	6
  4850  01C0  3001               	movlw	1	; select bank2/3
  4851  01C1  0087               	movwf	7
  4852  01C2  1401               	bsf	1,0
  4853  01C3  0008               	return
  4854  01C4                     __end_of_setSw_Main:	
  4855                           
  4856                           	psect	text13
  4857  0AE4                     __ptext13:	
  4858 ;; *************** function _getSw_KeyStatus *****************
  4859 ;; Defined at:
  4860 ;;		line 245 in file "../src/Switch_B1.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  sw              1    wreg     unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  sw              1    4[BANK0 ] unsigned char 
  4865 ;;  status          1    3[BANK0 ] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      unsigned char 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;Total ram usage:        5 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    5
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_setSw_Main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function _getSw_KeyStatus
  4891  0AE4                     _getSw_KeyStatus:	
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  4895                           ;getSw_KeyStatus@sw stored from wreg
  4896  0AE4  0020               	movlb	0	; select bank0
  4897  0AE5  00A4               	movwf	getSw_KeyStatus@sw
  4898                           
  4899                           ;Switch_B1.c: 246: char status = 0;
  4900  0AE6  01A3               	clrf	getSw_KeyStatus@status
  4901                           
  4902                           ;Switch_B1.c: 258: if (sw == 1) {
  4903  0AE7  0824               	movf	getSw_KeyStatus@sw,w
  4904  0AE8  3A01               	xorlw	1
  4905  0AE9  1D03               	skipz
  4906  0AEA  2AF3               	goto	l5779
  4907                           
  4908                           ;Switch_B1.c: 259: status = (RA6 == 1 || RA4 == 1) ? 1 : 0;
  4909  0AEB  01A1               	clrf	_getSw_KeyStatus$5104
  4910  0AEC  0AA1               	incf	_getSw_KeyStatus$5104,f
  4911  0AED  1F0C               	btfss	12,6	;volatile
  4912  0AEE  1A0C               	btfsc	12,4	;volatile
  4913  0AEF  2AF1               	goto	l5777
  4914  0AF0  01A1               	clrf	_getSw_KeyStatus$5104
  4915  0AF1                     l5777:	
  4916  0AF1  0821               	movf	_getSw_KeyStatus$5104,w
  4917  0AF2  2AFE               	goto	L2
  4918  0AF3                     l5779:	
  4919                           ;Switch_B1.c: 260: } else if (sw == 2) {
  4920                           
  4921  0AF3  0824               	movf	getSw_KeyStatus@sw,w
  4922  0AF4  3A02               	xorlw	2
  4923  0AF5  1D03               	skipz
  4924  0AF6  2B01               	goto	l5789
  4925                           
  4926                           ;Switch_B1.c: 261: status = (RA0 == 1 || RB1 == 1) ? 1 : 0;
  4927  0AF7  01A2               	clrf	_getSw_KeyStatus$5105
  4928  0AF8  0AA2               	incf	_getSw_KeyStatus$5105,f
  4929  0AF9  1C0C               	btfss	12,0	;volatile
  4930  0AFA  188D               	btfsc	13,1	;volatile
  4931  0AFB  2AFD               	goto	l5787
  4932  0AFC  01A2               	clrf	_getSw_KeyStatus$5105
  4933  0AFD                     l5787:	
  4934  0AFD  0822               	movf	_getSw_KeyStatus$5105,w
  4935  0AFE                     L2:	
  4936  0AFE  00A0               	movwf	??_getSw_KeyStatus
  4937  0AFF  0820               	movf	??_getSw_KeyStatus,w
  4938  0B00  00A3               	movwf	getSw_KeyStatus@status
  4939  0B01                     l5789:	
  4940                           
  4941                           ;Switch_B1.c: 262: }
  4942                           ;Switch_B1.c: 269: return status;
  4943  0B01  0823               	movf	getSw_KeyStatus@status,w
  4944  0B02  0008               	return
  4945  0B03                     __end_of_getSw_KeyStatus:	
  4946                           
  4947                           	psect	text14
  4948  0EC6                     __ptext14:	
  4949 ;; *************** function _Sw_DimmerOnFunc *****************
  4950 ;; Defined at:
  4951 ;;		line 273 in file "../src/Switch_B1.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  sw              1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  sw              1   14[BANK0 ] unsigned char 
  4956 ;;  Idle            1   13[BANK0 ] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;		None               void
  4959 ;; Registers used:
  4960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;Total ram usage:        2 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    7
  4973 ;; This function calls:
  4974 ;;		_setBuz
  4975 ;;		_setDimmerLights_Trigger
  4976 ;; This function is called by:
  4977 ;;		_setSw_Main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _Sw_DimmerOnFunc
  4983  0EC6                     _Sw_DimmerOnFunc:	
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in _Sw_DimmerOnFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4987                           ;Sw_DimmerOnFunc@sw stored from wreg
  4988  0EC6  0020               	movlb	0	; select bank0
  4989  0EC7  00AE               	movwf	Sw_DimmerOnFunc@sw
  4990                           
  4991                           ;Switch_B1.c: 274: char Idle = 1;
  4992  0EC8  01AD               	clrf	Sw_DimmerOnFunc@Idle
  4993  0EC9  0AAD               	incf	Sw_DimmerOnFunc@Idle,f
  4994                           
  4995                           ;Switch_B1.c: 288: if (sw == 1) {
  4996  0ECA  082E               	movf	Sw_DimmerOnFunc@sw,w
  4997  0ECB  3A01               	xorlw	1
  4998  0ECC  1D03               	skipz
  4999  0ECD  2ED8               	goto	l5799
  5000                           
  5001                           ;Switch_B1.c: 289: Idle = (DimmerLights2.AdjGo == 1) ? 0 : 1;
  5002  0ECE  1003               	clrc
  5003  0ECF  0021               	movlb	1	; select bank1
  5004  0ED0  1DD9               	btfss	(_DimmerLights2^(0+128)+8),3
  5005  0ED1  1403               	setc
  5006  0ED2  3000               	movlw	0
  5007  0ED3  1803               	btfsc	3,0
  5008  0ED4  3001               	movlw	1
  5009  0ED5  0020               	movlb	0	; select bank0
  5010  0ED6  00AD               	movwf	Sw_DimmerOnFunc@Idle
  5011                           
  5012                           ;Switch_B1.c: 290: } else if (sw == 2) {
  5013  0ED7  2EE5               	goto	l5803
  5014  0ED8                     l5799:	
  5015  0ED8  082E               	movf	Sw_DimmerOnFunc@sw,w
  5016  0ED9  3A02               	xorlw	2
  5017  0EDA  1D03               	skipz
  5018  0EDB  2EE5               	goto	l5803
  5019                           
  5020                           ;Switch_B1.c: 291: Idle = (DimmerLights1.AdjGo == 1) ? 0 : 1;
  5021  0EDC  1003               	clrc
  5022  0EDD  0021               	movlb	1	; select bank1
  5023  0EDE  1DCA               	btfss	(_DimmerLights1^(0+128)+8),3
  5024  0EDF  1403               	setc
  5025  0EE0  3000               	movlw	0
  5026  0EE1  1803               	btfsc	3,0
  5027  0EE2  3001               	movlw	1
  5028  0EE3  0020               	movlb	0	; select bank0
  5029  0EE4  00AD               	movwf	Sw_DimmerOnFunc@Idle
  5030  0EE5                     l5803:	
  5031                           
  5032                           ;Switch_B1.c: 292: }
  5033                           ;Switch_B1.c: 295: if (Idle == 1) {
  5034  0EE5  082D               	movf	Sw_DimmerOnFunc@Idle,w
  5035  0EE6  3A01               	xorlw	1
  5036  0EE7  1D03               	skipz
  5037  0EE8  0008               	return
  5038                           
  5039                           ;Switch_B1.c: 296: Sw->Flag = 1;
  5040  0EE9  0867               	movf	_Sw,w
  5041  0EEA  0086               	movwf	6
  5042  0EEB  3001               	movlw	1	; select bank2/3
  5043  0EEC  0087               	movwf	7
  5044  0EED  1781               	bsf	1,7
  5045                           
  5046                           ;Switch_B1.c: 297: setBuz(1, 100);
  5047  0EEE  3064               	movlw	100
  5048  0EEF  00A9               	movwf	setBuz@time
  5049  0EF0  3000               	movlw	0
  5050  0EF1  00AA               	movwf	setBuz@time+1
  5051  0EF2  3001               	movlw	1
  5052  0EF3  318D  25F5  318E   	fcall	_setBuz
  5053                           
  5054                           ;Switch_B1.c: 298: if (Sw->Status == 0) {
  5055  0EF6  0020               	movlb	0	; select bank0
  5056  0EF7  0867               	movf	_Sw,w
  5057  0EF8  0086               	movwf	6
  5058  0EF9  3001               	movlw	1	; select bank2/3
  5059  0EFA  0087               	movwf	7
  5060  0EFB  1B01               	btfsc	1,6
  5061  0EFC  2F08               	goto	l5815
  5062                           
  5063                           ;Switch_B1.c: 299: Sw->Status = 1;
  5064  0EFD  0867               	movf	_Sw,w
  5065  0EFE  0086               	movwf	6
  5066  0EFF  3001               	movlw	1	; select bank2/3
  5067  0F00  0087               	movwf	7
  5068  0F01  1701               	bsf	1,6
  5069                           
  5070                           ;Switch_B1.c: 300: ;;
  5071                           ;Switch_B1.c: 302: setDimmerLights_Trigger(sw, 1);
  5072  0F02  01A2               	clrf	setDimmerLights_Trigger@command
  5073  0F03  0AA2               	incf	setDimmerLights_Trigger@command,f
  5074  0F04  082E               	movf	Sw_DimmerOnFunc@sw,w
  5075  0F05  318A  2252         	fcall	_setDimmerLights_Trigger
  5076                           
  5077                           ;Switch_B1.c: 304: ;;
  5078                           ;Switch_B1.c: 305: ;;
  5079                           ;Switch_B1.c: 307: } else {
  5080  0F07  0008               	return
  5081  0F08                     l5815:	
  5082                           
  5083                           ;Switch_B1.c: 308: Sw->Status = 0;
  5084  0F08  0020               	movlb	0	; select bank0
  5085  0F09  0867               	movf	_Sw,w
  5086  0F0A  0086               	movwf	6
  5087  0F0B  3001               	movlw	1	; select bank2/3
  5088  0F0C  0087               	movwf	7
  5089  0F0D  1301               	bcf	1,6
  5090                           
  5091                           ;Switch_B1.c: 309: ;;
  5092  0F0E  0008               	return
  5093  0F0F                     __end_of_Sw_DimmerOnFunc:	
  5094                           
  5095                           	psect	text15
  5096  0D70                     __ptext15:	
  5097 ;; *************** function _Sw_DimmerOffFunc *****************
  5098 ;; Defined at:
  5099 ;;		line 315 in file "../src/Switch_B1.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  sw              1    wreg     unsigned char 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  sw              1   17[BANK0 ] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;		None               void
  5106 ;; Registers used:
  5107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;Total ram usage:        3 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    8
  5120 ;; This function calls:
  5121 ;;		_setDelayOff_GO
  5122 ;;		_setDimmerLights_Trigger
  5123 ;;		_setDimmerLights_TriggerAdj
  5124 ;; This function is called by:
  5125 ;;		_setSw_Main
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _Sw_DimmerOffFunc
  5131  0D70                     _Sw_DimmerOffFunc:	
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _Sw_DimmerOffFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5135                           ;Sw_DimmerOffFunc@sw stored from wreg
  5136  0D70  0020               	movlb	0	; select bank0
  5137  0D71  00B1               	movwf	Sw_DimmerOffFunc@sw
  5138                           
  5139                           ;Switch_B1.c: 316: if (Sw->Flag == 1) {
  5140  0D72  0867               	movf	_Sw,w
  5141  0D73  0086               	movwf	6
  5142  0D74  3001               	movlw	1	; select bank2/3
  5143  0D75  0087               	movwf	7
  5144  0D76  1F81               	btfss	1,7
  5145  0D77  0008               	return
  5146                           
  5147                           ;Switch_B1.c: 317: Sw->Flag = 0;
  5148  0D78  0867               	movf	_Sw,w
  5149  0D79  0086               	movwf	6
  5150  0D7A  3001               	movlw	1	; select bank2/3
  5151  0D7B  0087               	movwf	7
  5152  0D7C  1381               	bcf	1,7
  5153                           
  5154                           ;Switch_B1.c: 318: if (Sw->Status == 1) {
  5155  0D7D  0867               	movf	_Sw,w
  5156  0D7E  0086               	movwf	6
  5157  0D7F  3001               	movlw	1	; select bank2/3
  5158  0D80  0087               	movwf	7
  5159  0D81  1F01               	btfss	1,6
  5160  0D82  2DA5               	goto	l5847
  5161                           
  5162                           ;Switch_B1.c: 319: if (Sw->Adj == 1) {
  5163  0D83  0A67               	incf	_Sw,w
  5164  0D84  0086               	movwf	6
  5165  0D85  3001               	movlw	1	; select bank2/3
  5166  0D86  0087               	movwf	7
  5167  0D87  1C01               	btfss	1,0
  5168  0D88  0008               	return
  5169                           
  5170                           ;Switch_B1.c: 320: Sw->Adj = 0;
  5171  0D89  0A67               	incf	_Sw,w
  5172  0D8A  0086               	movwf	6
  5173  0D8B  3001               	movlw	1	; select bank2/3
  5174  0D8C  0087               	movwf	7
  5175  0D8D  1001               	bcf	1,0
  5176                           
  5177                           ;Switch_B1.c: 321: setDimmerLights_TriggerAdj(sw, 0);
  5178  0D8E  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5179  0D8F  0831               	movf	Sw_DimmerOffFunc@sw,w
  5180  0D90  318A  22A7         	fcall	_setDimmerLights_TriggerAdj
  5181                           
  5182                           ;Switch_B1.c: 323: product->Data[17]=product->Data[26 + sw];
  5183  0D92  0020               	movlb	0	; select bank0
  5184  0D93  0831               	movf	Sw_DimmerOffFunc@sw,w
  5185  0D94  3E1A               	addlw	26
  5186  0D95  076D               	addwf	_product,w
  5187  0D96  00AF               	movwf	??_Sw_DimmerOffFunc
  5188  0D97  082F               	movf	??_Sw_DimmerOffFunc,w
  5189  0D98  0086               	movwf	6
  5190  0D99  3001               	movlw	1	; select bank2/3
  5191  0D9A  0087               	movwf	7
  5192  0D9B  0801               	movf	1,w
  5193  0D9C  00B0               	movwf	??_Sw_DimmerOffFunc+1
  5194  0D9D  086D               	movf	_product,w
  5195  0D9E  3E11               	addlw	17
  5196  0D9F  0086               	movwf	6
  5197  0DA0  3001               	movlw	1	; select bank2/3
  5198  0DA1  0087               	movwf	7
  5199  0DA2  0830               	movf	??_Sw_DimmerOffFunc+1,w
  5200  0DA3  0081               	movwf	1
  5201                           
  5202                           ;Switch_B1.c: 327: }
  5203                           ;Switch_B1.c: 328: } else {
  5204                           
  5205                           ;Switch_B1.c: 324: ;;
  5206                           ;Switch_B1.c: 325: ;;
  5207  0DA4  0008               	return
  5208  0DA5                     l5847:	
  5209                           
  5210                           ;Switch_B1.c: 329: setDimmerLights_Trigger(sw, 0);
  5211  0DA5  01A2               	clrf	setDimmerLights_Trigger@command
  5212  0DA6  0831               	movf	Sw_DimmerOffFunc@sw,w
  5213  0DA7  318A  2252  318D   	fcall	_setDimmerLights_Trigger
  5214                           
  5215                           ;Switch_B1.c: 331: setDelayOff_GO(sw, 0, 0);
  5216  0DAA  0020               	movlb	0	; select bank0
  5217  0DAB  01AA               	clrf	setDelayOff_GO@command
  5218  0DAC  01AB               	clrf	setDelayOff_GO@value
  5219  0DAD  0831               	movf	Sw_DimmerOffFunc@sw,w
  5220  0DAE  3186  269A         	fcall	_setDelayOff_GO
  5221                           
  5222                           ;Switch_B1.c: 332: ;;
  5223                           ;Switch_B1.c: 333: ;;
  5224  0DB0  0008               	return
  5225  0DB1                     __end_of_Sw_DimmerOffFunc:	
  5226                           
  5227                           	psect	text16
  5228  069A                     __ptext16:	
  5229 ;; *************** function _setDelayOff_GO *****************
  5230 ;; Defined at:
  5231 ;;		line 85 in file "../src/DelayOff_B1.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  sw              1    wreg     unsigned char 
  5234 ;;  command         1   10[BANK0 ] unsigned char 
  5235 ;;  value           1   11[BANK0 ] unsigned char 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  sw              1   14[BANK0 ] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;		None               void
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;Total ram usage:        5 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    7
  5254 ;; This function calls:
  5255 ;;		_DelayOffPointSelect
  5256 ;;		_DelayTimejudge
  5257 ;; This function is called by:
  5258 ;;		_Sw_DimmerOffFunc
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _setDelayOff_GO
  5264  069A                     _setDelayOff_GO:	
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5268                           ;setDelayOff_GO@sw stored from wreg
  5269  069A  0020               	movlb	0	; select bank0
  5270  069B  00AE               	movwf	setDelayOff_GO@sw
  5271                           
  5272                           ;DelayOff_B1.c: 86: DelayOffPointSelect(sw);
  5273  069C  082E               	movf	setDelayOff_GO@sw,w
  5274  069D  3189  2189  3186   	fcall	_DelayOffPointSelect
  5275                           
  5276                           ;DelayOff_B1.c: 87: if (DelayOff->Enable == 1) {
  5277  06A0  0020               	movlb	0	; select bank0
  5278  06A1  0864               	movf	_DelayOff,w
  5279  06A2  0086               	movwf	6
  5280  06A3  0187               	clrf	7
  5281  06A4  1C01               	btfss	1,0
  5282  06A5  0008               	return
  5283                           
  5284                           ;DelayOff_B1.c: 88: DelayOff->GO = command == 1 ? 1 : 0;
  5285  06A6  082A               	movf	setDelayOff_GO@command,w
  5286  06A7  3A01               	xorlw	1
  5287  06A8  3000               	movlw	0
  5288  06A9  1903               	skipnz
  5289  06AA  3001               	movlw	1
  5290  06AB  00AC               	movwf	??_setDelayOff_GO
  5291  06AC  0864               	movf	_DelayOff,w
  5292  06AD  0086               	movwf	6
  5293  06AE  0187               	clrf	7
  5294  06AF  0DAC               	rlf	??_setDelayOff_GO,f
  5295  06B0  0801               	movf	1,w
  5296  06B1  062C               	xorwf	??_setDelayOff_GO,w
  5297  06B2  39FD               	andlw	-3
  5298  06B3  062C               	xorwf	??_setDelayOff_GO,w
  5299  06B4  0081               	movwf	1
  5300                           
  5301                           ;DelayOff_B1.c: 89: if (command == 1) {
  5302  06B5  082A               	movf	setDelayOff_GO@command,w
  5303  06B6  3A01               	xorlw	1
  5304  06B7  1D03               	skipz
  5305  06B8  2EE2               	goto	l5525
  5306                           
  5307                           ;DelayOff_B1.c: 90: DelayOff->Value = DelayTimejudge(value);
  5308  06B9  082B               	movf	setDelayOff_GO@value,w
  5309  06BA  318B  23F7  3186   	fcall	_DelayTimejudge
  5310  06BD  0020               	movlb	0	; select bank0
  5311  06BE  00AC               	movwf	??_setDelayOff_GO
  5312  06BF  0864               	movf	_DelayOff,w
  5313  06C0  0086               	movwf	6
  5314  06C1  0187               	clrf	7
  5315  06C2  082C               	movf	??_setDelayOff_GO,w
  5316  06C3  0081               	movwf	1
  5317                           
  5318                           ;DelayOff_B1.c: 91: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x25) {
  5319  06C4  300F               	movlw	15
  5320  06C5  052B               	andwf	setDelayOff_GO@value,w
  5321  06C6  00AC               	movwf	??_setDelayOff_GO
  5322  06C7  082C               	movf	??_setDelayOff_GO,w
  5323  06C8  3A05               	xorlw	5
  5324  06C9  1903               	skipnz
  5325  06CA  2ECF               	goto	l5519
  5326  06CB  082B               	movf	setDelayOff_GO@value,w
  5327  06CC  390F               	andlw	15
  5328  06CD  1D03               	btfss	3,2
  5329  06CE  2ED5               	goto	l5523
  5330  06CF                     l5519:	
  5331  06CF  3026               	movlw	38
  5332  06D0  022B               	subwf	setDelayOff_GO@value,w
  5333  06D1  1803               	skipnc
  5334  06D2  2ED5               	goto	l5523
  5335                           
  5336                           ;DelayOff_B1.c: 92: product->Data[26 + sw]=value;
  5337  06D3  082B               	movf	setDelayOff_GO@value,w
  5338  06D4  2ED6               	goto	L3
  5339  06D5                     l5523:	
  5340                           ;DelayOff_B1.c: 93: } else {
  5341                           
  5342                           
  5343                           ;DelayOff_B1.c: 94: product->Data[26 + sw]=0x05;
  5344  06D5  3005               	movlw	5
  5345  06D6                     L3:	
  5346  06D6  00AC               	movwf	??_setDelayOff_GO
  5347  06D7  082E               	movf	setDelayOff_GO@sw,w
  5348  06D8  3E1A               	addlw	26
  5349  06D9  076D               	addwf	_product,w
  5350  06DA  00AD               	movwf	??_setDelayOff_GO+1
  5351  06DB  082D               	movf	??_setDelayOff_GO+1,w
  5352  06DC  0086               	movwf	6
  5353  06DD  3001               	movlw	1	; select bank2/3
  5354  06DE  0087               	movwf	7
  5355  06DF  082C               	movf	??_setDelayOff_GO,w
  5356  06E0  0081               	movwf	1
  5357                           
  5358                           ;DelayOff_B1.c: 95: }
  5359                           ;DelayOff_B1.c: 96: } else if (command == 0) {
  5360  06E1  2EEE               	goto	l5529
  5361  06E2                     l5525:	
  5362  06E2  08AA               	movf	setDelayOff_GO@command,f
  5363  06E3  1D03               	skipz
  5364  06E4  2EEE               	goto	l5529
  5365                           
  5366                           ;DelayOff_B1.c: 97: product->Data[sw + 26]=0;
  5367  06E5  082E               	movf	setDelayOff_GO@sw,w
  5368  06E6  3E1A               	addlw	26
  5369  06E7  076D               	addwf	_product,w
  5370  06E8  00AC               	movwf	??_setDelayOff_GO
  5371  06E9  082C               	movf	??_setDelayOff_GO,w
  5372  06EA  0086               	movwf	6
  5373  06EB  3001               	movlw	1	; select bank2/3
  5374  06EC  0087               	movwf	7
  5375  06ED  0181               	clrf	1
  5376  06EE                     l5529:	
  5377                           
  5378                           ;DelayOff_B1.c: 98: }
  5379                           ;DelayOff_B1.c: 99: DelayOff->SecondTime = 0;
  5380  06EE  0864               	movf	_DelayOff,w
  5381  06EF  0086               	movwf	6
  5382  06F0  0187               	clrf	7
  5383  06F1  3000               	movlw	0
  5384  06F2  3FC0               	movwi [0]fsr1
  5385  06F3  3FC1               	movwi [1]fsr1
  5386                           
  5387                           ;DelayOff_B1.c: 100: DelayOff->MinuteTime = 0;
  5388  06F4  0864               	movf	_DelayOff,w
  5389  06F5  0086               	movwf	6
  5390  06F6  0187               	clrf	7
  5391  06F7  0181               	clrf	1
  5392  06F8  0008               	return
  5393  06F9                     __end_of_setDelayOff_GO:	
  5394                           
  5395                           	psect	text17
  5396  0BF7                     __ptext17:	
  5397 ;; *************** function _DelayTimejudge *****************
  5398 ;; Defined at:
  5399 ;;		line 105 in file "../src/DelayOff_B1.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  value           1    wreg     unsigned char 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  value           1    9[BANK0 ] unsigned char 
  5404 ;;  k               1    8[BANK0 ] unsigned char 
  5405 ;;  j               1    7[BANK0 ] unsigned char 
  5406 ;;  i               1    6[BANK0 ] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      unsigned char 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;Total ram usage:        6 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    6
  5423 ;; This function calls:
  5424 ;;		___bmul
  5425 ;; This function is called by:
  5426 ;;		_setDelayOff_GO
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _DelayTimejudge
  5432  0BF7                     _DelayTimejudge:	
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in _DelayTimejudge: [wreg+status,2+status,0+pclath+cstack]
  5436                           ;DelayTimejudge@value stored from wreg
  5437  0BF7  0020               	movlb	0	; select bank0
  5438  0BF8  00A9               	movwf	DelayTimejudge@value
  5439                           
  5440                           ;DelayOff_B1.c: 106: char i = 5, j = 0, k = 0;
  5441  0BF9  3005               	movlw	5
  5442  0BFA  00A4               	movwf	??_DelayTimejudge
  5443  0BFB  0824               	movf	??_DelayTimejudge,w
  5444  0BFC  00A6               	movwf	DelayTimejudge@i
  5445  0BFD  01A7               	clrf	DelayTimejudge@j
  5446  0BFE  01A8               	clrf	DelayTimejudge@k
  5447                           
  5448                           ;DelayOff_B1.c: 107: if (value <= 0x30) {
  5449  0BFF  3031               	movlw	49
  5450  0C00  0229               	subwf	DelayTimejudge@value,w
  5451  0C01  1803               	skipnc
  5452  0C02  2C1F               	goto	l5405
  5453                           
  5454                           ;DelayOff_B1.c: 108: j = value & 0x0f;
  5455  0C03  0829               	movf	DelayTimejudge@value,w
  5456  0C04  390F               	andlw	15
  5457  0C05  00A4               	movwf	??_DelayTimejudge
  5458  0C06  0824               	movf	??_DelayTimejudge,w
  5459  0C07  00A7               	movwf	DelayTimejudge@j
  5460                           
  5461                           ;DelayOff_B1.c: 109: k = (value >> 4) & 0x0f;
  5462  0C08  0829               	movf	DelayTimejudge@value,w
  5463  0C09  00A4               	movwf	??_DelayTimejudge
  5464  0C0A  3004               	movlw	4
  5465  0C0B                     u5395:	
  5466  0C0B  36A4               	lsrf	??_DelayTimejudge,f
  5467  0C0C  0B89               	decfsz	9,f
  5468  0C0D  2C0B               	goto	u5395
  5469  0C0E  0824               	movf	??_DelayTimejudge,w
  5470  0C0F  390F               	andlw	15
  5471  0C10  00A5               	movwf	??_DelayTimejudge+1
  5472  0C11  0825               	movf	??_DelayTimejudge+1,w
  5473  0C12  00A8               	movwf	DelayTimejudge@k
  5474                           
  5475                           ;DelayOff_B1.c: 110: i = j + (k * 10);
  5476  0C13  300A               	movlw	10
  5477  0C14  00A4               	movwf	??_DelayTimejudge
  5478  0C15  0824               	movf	??_DelayTimejudge,w
  5479  0C16  00A0               	movwf	___bmul@multiplicand
  5480  0C17  0828               	movf	DelayTimejudge@k,w
  5481  0C18  3189  2164         	fcall	___bmul
  5482  0C1A  0020               	movlb	0	; select bank0
  5483  0C1B  0727               	addwf	DelayTimejudge@j,w
  5484  0C1C  00A5               	movwf	??_DelayTimejudge+1
  5485  0C1D  0825               	movf	??_DelayTimejudge+1,w
  5486  0C1E  00A6               	movwf	DelayTimejudge@i
  5487  0C1F                     l5405:	
  5488                           
  5489                           ;DelayOff_B1.c: 111: }
  5490                           ;DelayOff_B1.c: 132: return i;
  5491  0C1F  0826               	movf	DelayTimejudge@i,w
  5492  0C20  0008               	return
  5493  0C21                     __end_of_DelayTimejudge:	
  5494                           
  5495                           	psect	text18
  5496  0964                     __ptext18:	
  5497 ;; *************** function ___bmul *****************
  5498 ;; Defined at:
  5499 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  multiplier      1    wreg     unsigned char 
  5502 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5505 ;;  product         1    2[BANK0 ] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      unsigned char 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5515 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;Total ram usage:        4 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    5
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_DelayTimejudge
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function ___bmul
  5531  0964                     ___bmul:	
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5535                           ;___bmul@multiplier stored from wreg
  5536  0964  0020               	movlb	0	; select bank0
  5537  0965  00A3               	movwf	___bmul@multiplier
  5538  0966  01A2               	clrf	___bmul@product
  5539  0967                     l5371:	
  5540  0967  1C23               	btfss	___bmul@multiplier,0
  5541  0968  296D               	goto	l5375
  5542  0969  0820               	movf	___bmul@multiplicand,w
  5543  096A  00A1               	movwf	??___bmul
  5544  096B  0821               	movf	??___bmul,w
  5545  096C  07A2               	addwf	___bmul@product,f
  5546  096D                     l5375:	
  5547  096D  1003               	clrc
  5548  096E  0DA0               	rlf	___bmul@multiplicand,f
  5549  096F  1003               	clrc
  5550  0970  0CA3               	rrf	___bmul@multiplier,f
  5551  0971  08A3               	movf	___bmul@multiplier,f
  5552  0972  1D03               	skipz
  5553  0973  2967               	goto	l5371
  5554  0974  0822               	movf	___bmul@product,w
  5555  0975  0008               	return
  5556  0976                     __end_of___bmul:	
  5557                           
  5558                           	psect	text19
  5559  0CF2                     __ptext19:	
  5560 ;; *************** function _Sw_DimmerAdjFunc *****************
  5561 ;; Defined at:
  5562 ;;		line 340 in file "../src/Switch_B1.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  sw              1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  sw              1    6[BANK0 ] unsigned char 
  5567 ;;  Idle            1    5[BANK0 ] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;		None               void
  5570 ;; Registers used:
  5571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;Total ram usage:        2 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    7
  5584 ;; This function calls:
  5585 ;;		_setDimmerLights_TriggerAdj
  5586 ;; This function is called by:
  5587 ;;		_setSw_Main
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _Sw_DimmerAdjFunc
  5593  0CF2                     _Sw_DimmerAdjFunc:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _Sw_DimmerAdjFunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5597                           ;Sw_DimmerAdjFunc@sw stored from wreg
  5598  0CF2  0020               	movlb	0	; select bank0
  5599  0CF3  00A6               	movwf	Sw_DimmerAdjFunc@sw
  5600                           
  5601                           ;Switch_B1.c: 341: char Idle = 1;
  5602  0CF4  01A5               	clrf	Sw_DimmerAdjFunc@Idle
  5603  0CF5  0AA5               	incf	Sw_DimmerAdjFunc@Idle,f
  5604                           
  5605                           ;Switch_B1.c: 354: if (sw == 1) {
  5606  0CF6  0826               	movf	Sw_DimmerAdjFunc@sw,w
  5607  0CF7  3A01               	xorlw	1
  5608  0CF8  1D03               	skipz
  5609  0CF9  2D04               	goto	l5823
  5610                           
  5611                           ;Switch_B1.c: 355: Idle = (DimmerLights2.AdjGo == 1) ? 0 : 1;
  5612  0CFA  1003               	clrc
  5613  0CFB  0021               	movlb	1	; select bank1
  5614  0CFC  1DD9               	btfss	(_DimmerLights2^(0+128)+8),3
  5615  0CFD  1403               	setc
  5616  0CFE  3000               	movlw	0
  5617  0CFF  1803               	btfsc	3,0
  5618  0D00  3001               	movlw	1
  5619  0D01  0020               	movlb	0	; select bank0
  5620  0D02  00A5               	movwf	Sw_DimmerAdjFunc@Idle
  5621                           
  5622                           ;Switch_B1.c: 356: } else if (sw == 2) {
  5623  0D03  2D11               	goto	l5827
  5624  0D04                     l5823:	
  5625  0D04  0826               	movf	Sw_DimmerAdjFunc@sw,w
  5626  0D05  3A02               	xorlw	2
  5627  0D06  1D03               	skipz
  5628  0D07  2D11               	goto	l5827
  5629                           
  5630                           ;Switch_B1.c: 357: Idle = (DimmerLights1.AdjGo == 1) ? 0 : 1;
  5631  0D08  1003               	clrc
  5632  0D09  0021               	movlb	1	; select bank1
  5633  0D0A  1DCA               	btfss	(_DimmerLights1^(0+128)+8),3
  5634  0D0B  1403               	setc
  5635  0D0C  3000               	movlw	0
  5636  0D0D  1803               	btfsc	3,0
  5637  0D0E  3001               	movlw	1
  5638  0D0F  0020               	movlb	0	; select bank0
  5639  0D10  00A5               	movwf	Sw_DimmerAdjFunc@Idle
  5640  0D11                     l5827:	
  5641                           
  5642                           ;Switch_B1.c: 358: }
  5643                           ;Switch_B1.c: 361: if (Idle == 1) {
  5644  0D11  0825               	movf	Sw_DimmerAdjFunc@Idle,w
  5645  0D12  3A01               	xorlw	1
  5646  0D13  1D03               	skipz
  5647  0D14  0008               	return
  5648                           
  5649                           ;Switch_B1.c: 362: if (Sw->Flag == 1) {
  5650  0D15  0867               	movf	_Sw,w
  5651  0D16  0086               	movwf	6
  5652  0D17  3001               	movlw	1	; select bank2/3
  5653  0D18  0087               	movwf	7
  5654  0D19  1F81               	btfss	1,7
  5655  0D1A  0008               	return
  5656                           
  5657                           ;Switch_B1.c: 363: Sw->Hold1 = 1;
  5658  0D1B  0867               	movf	_Sw,w
  5659  0D1C  0086               	movwf	6
  5660  0D1D  3001               	movlw	1	; select bank2/3
  5661  0D1E  0087               	movwf	7
  5662  0D1F  1581               	bsf	1,3
  5663                           
  5664                           ;Switch_B1.c: 364: Sw->Adj = 1;
  5665  0D20  0A67               	incf	_Sw,w
  5666  0D21  0086               	movwf	6
  5667  0D22  3001               	movlw	1	; select bank2/3
  5668  0D23  0087               	movwf	7
  5669  0D24  1401               	bsf	1,0
  5670                           
  5671                           ;Switch_B1.c: 365: Sw->Status = 1;
  5672  0D25  0867               	movf	_Sw,w
  5673  0D26  0086               	movwf	6
  5674  0D27  3001               	movlw	1	; select bank2/3
  5675  0D28  0087               	movwf	7
  5676  0D29  1701               	bsf	1,6
  5677                           
  5678                           ;Switch_B1.c: 366: ;;
  5679                           ;Switch_B1.c: 368: setDimmerLights_TriggerAdj(sw, 1);
  5680  0D2A  01A2               	clrf	setDimmerLights_TriggerAdj@command
  5681  0D2B  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  5682  0D2C  0826               	movf	Sw_DimmerAdjFunc@sw,w
  5683  0D2D  318A  22A7         	fcall	_setDimmerLights_TriggerAdj
  5684  0D2F  0008               	return
  5685  0D30                     __end_of_Sw_DimmerAdjFunc:	
  5686                           
  5687                           	psect	text20
  5688  0AA7                     __ptext20:	
  5689 ;; *************** function _setDimmerLights_TriggerAdj *****************
  5690 ;; Defined at:
  5691 ;;		line 719 in file "../src/Dimmer_B1.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  lights          1    wreg     unsigned char 
  5694 ;;  command         1    2[BANK0 ] unsigned char 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  lights          1    4[BANK0 ] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;		None               void
  5699 ;; Registers used:
  5700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5706 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;Total ram usage:        3 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    6
  5713 ;; This function calls:
  5714 ;;		_DimmerLightsPointSelect
  5715 ;; This function is called by:
  5716 ;;		_Sw_DimmerOffFunc
  5717 ;;		_Sw_DimmerAdjFunc
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function _setDimmerLights_TriggerAdj
  5723  0AA7                     _setDimmerLights_TriggerAdj:	
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5727                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  5728  0AA7  0020               	movlb	0	; select bank0
  5729  0AA8  00A4               	movwf	setDimmerLights_TriggerAdj@lights
  5730                           
  5731                           ;Dimmer_B1.c: 720: DimmerLightsPointSelect(lights);
  5732  0AA9  0824               	movf	setDimmerLights_TriggerAdj@lights,w
  5733  0AAA  3189  2176         	fcall	_DimmerLightsPointSelect
  5734                           
  5735                           ;Dimmer_B1.c: 721: DimmerLights->TriggerAdj = 1;
  5736  0AAC  0020               	movlb	0	; select bank0
  5737  0AAD  0865               	movf	_DimmerLights,w
  5738  0AAE  3E08               	addlw	8
  5739  0AAF  0086               	movwf	6
  5740  0AB0  0187               	clrf	7
  5741  0AB1  1601               	bsf	1,4
  5742                           
  5743                           ;Dimmer_B1.c: 722: DimmerLights->AdjGo = command == 1 ? 1 : 0;
  5744  0AB2  0822               	movf	setDimmerLights_TriggerAdj@command,w
  5745  0AB3  3A01               	xorlw	1
  5746  0AB4  3000               	movlw	0
  5747  0AB5  1903               	skipnz
  5748  0AB6  3001               	movlw	1
  5749  0AB7  00A3               	movwf	??_setDimmerLights_TriggerAdj
  5750  0AB8  0865               	movf	_DimmerLights,w
  5751  0AB9  3E08               	addlw	8
  5752  0ABA  0086               	movwf	6
  5753  0ABB  0187               	clrf	7
  5754  0ABC  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  5755  0ABD  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  5756  0ABE  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  5757  0ABF  0801               	movf	1,w
  5758  0AC0  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  5759  0AC1  39F7               	andlw	-9
  5760  0AC2  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  5761  0AC3  0081               	movwf	1
  5762  0AC4  0008               	return
  5763  0AC5                     __end_of_setDimmerLights_TriggerAdj:	
  5764                           
  5765                           	psect	text21
  5766  0F5B                     __ptext21:	
  5767 ;; *************** function _setMain_Exception *****************
  5768 ;; Defined at:
  5769 ;;		line 276 in file "../src/Main_B1.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  command         1    wreg     unsigned char 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  command         1    8[BANK0 ] unsigned char 
  5774 ;;  status          1    9[BANK0 ] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;		None               void
  5777 ;; Registers used:
  5778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;Total ram usage:        5 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    7
  5791 ;; This function calls:
  5792 ;;		_getDimmerLights_Status
  5793 ;;		_setDimmerLights_Trigger
  5794 ;;		_setLED
  5795 ;; This function is called by:
  5796 ;;		_Switch_Main
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _setMain_Exception
  5802  0F5B                     _setMain_Exception:	
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _setMain_Exception: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5806                           ;setMain_Exception@command stored from wreg
  5807  0F5B  0020               	movlb	0	; select bank0
  5808  0F5C  00A8               	movwf	setMain_Exception@command
  5809                           
  5810                           ;Main_B1.c: 277: char status = 0;
  5811  0F5D  01A9               	clrf	setMain_Exception@status
  5812                           
  5813                           ;Main_B1.c: 287: status = command == 3 ? 1 : 255;
  5814  0F5E  0828               	movf	setMain_Exception@command,w
  5815  0F5F  3A03               	xorlw	3
  5816  0F60  1903               	skipnz
  5817  0F61  2F64               	goto	l6067
  5818  0F62  30FF               	movlw	255
  5819  0F63  2F65               	goto	L4
  5820  0F64                     l6067:	
  5821  0F64  3001               	movlw	1
  5822  0F65                     L4:	
  5823  0F65  00A6               	movwf	_setMain_Exception$3025
  5824  0F66  3000               	movlw	0
  5825  0F67  00A7               	movwf	_setMain_Exception$3025+1
  5826  0F68  0826               	movf	_setMain_Exception$3025,w
  5827  0F69  00A5               	movwf	??_setMain_Exception
  5828  0F6A  0825               	movf	??_setMain_Exception,w
  5829  0F6B  00A9               	movwf	setMain_Exception@status
  5830                           
  5831                           ;Main_B1.c: 288: if (command == 0) {
  5832  0F6C  08A8               	movf	setMain_Exception@command,f
  5833  0F6D  1D03               	skipz
  5834  0F6E  2F71               	goto	l6073
  5835                           
  5836                           ;Main_B1.c: 289: setLED(99, 10);
  5837  0F6F  300A               	movlw	10
  5838  0F70  2F73               	goto	L5
  5839  0F71                     l6073:	
  5840                           ;Main_B1.c: 290: } else {
  5841                           
  5842                           
  5843                           ;Main_B1.c: 291: setLED(99, 11);
  5844  0F71  300B               	movlw	11
  5845  0F72  0020               	movlb	0	; select bank0
  5846  0F73                     L5:	
  5847  0F73  00A5               	movwf	??_setMain_Exception
  5848  0F74  0825               	movf	??_setMain_Exception,w
  5849  0F75  00A2               	movwf	setLED@command
  5850  0F76  3063               	movlw	99
  5851  0F77  3186  26F9  318F   	fcall	_setLED
  5852                           
  5853                           ;Main_B1.c: 292: }
  5854                           ;Main_B1.c: 295: if (status != 0) {
  5855  0F7A  0020               	movlb	0	; select bank0
  5856  0F7B  0829               	movf	setMain_Exception@status,w
  5857  0F7C  1903               	btfsc	3,2
  5858  0F7D  0008               	return
  5859                           
  5860                           ;Main_B1.c: 297: if (status == 1 || status == 255) {
  5861  0F7E  0829               	movf	setMain_Exception@status,w
  5862  0F7F  3A01               	xorlw	1
  5863  0F80  1903               	skipnz
  5864  0F81  2F86               	goto	l6081
  5865  0F82  0829               	movf	setMain_Exception@status,w
  5866  0F83  3AFF               	xorlw	255
  5867  0F84  1D03               	skipz
  5868  0F85  2F93               	goto	l6085
  5869  0F86                     l6081:	
  5870                           
  5871                           ;Main_B1.c: 303: if (getDimmerLights_Status(1) == 1) {
  5872  0F86  3001               	movlw	1
  5873  0F87  3188  20CF  318F   	fcall	_getDimmerLights_Status
  5874  0F8A  3A01               	xorlw	1
  5875  0F8B  1D03               	skipz
  5876  0F8C  2F93               	goto	l6085
  5877                           
  5878                           ;Main_B1.c: 304: setDimmerLights_Trigger(1, 0);
  5879  0F8D  0020               	movlb	0	; select bank0
  5880  0F8E  01A2               	clrf	setDimmerLights_Trigger@command
  5881  0F8F  3001               	movlw	1
  5882  0F90  318A  2252  318F   	fcall	_setDimmerLights_Trigger
  5883  0F93                     l6085:	
  5884                           
  5885                           ;Main_B1.c: 305: }
  5886                           ;Main_B1.c: 308: }
  5887                           ;Main_B1.c: 312: if (status == 2 || status == 255) {
  5888  0F93  0020               	movlb	0	; select bank0
  5889  0F94  0829               	movf	setMain_Exception@status,w
  5890  0F95  3A02               	xorlw	2
  5891  0F96  1903               	skipnz
  5892  0F97  2F9C               	goto	l6089
  5893  0F98  0829               	movf	setMain_Exception@status,w
  5894  0F99  3AFF               	xorlw	255
  5895  0F9A  1D03               	skipz
  5896  0F9B  0008               	return
  5897  0F9C                     l6089:	
  5898                           
  5899                           ;Main_B1.c: 317: if (getDimmerLights_Status(2) == 1) {
  5900  0F9C  3002               	movlw	2
  5901  0F9D  3188  20CF  318F   	fcall	_getDimmerLights_Status
  5902  0FA0  3A01               	xorlw	1
  5903  0FA1  1903               	btfsc	3,2
  5904  0FA2  2FA5               	goto	l6091
  5905  0FA3  0020               	movlb	0	; select bank0
  5906  0FA4  0008               	return
  5907  0FA5                     l6091:	
  5908                           
  5909                           ;Main_B1.c: 318: setDimmerLights_Trigger(2, 0);
  5910  0FA5  0020               	movlb	0	; select bank0
  5911  0FA6  01A2               	clrf	setDimmerLights_Trigger@command
  5912  0FA7  3002               	movlw	2
  5913  0FA8  318A  2252         	fcall	_setDimmerLights_Trigger
  5914  0FAA  0020               	movlb	0	; select bank0
  5915  0FAB  0008               	return
  5916  0FAC                     __end_of_setMain_Exception:	
  5917                           
  5918                           	psect	text22
  5919  08CF                     __ptext22:	
  5920 ;; *************** function _getDimmerLights_Status *****************
  5921 ;; Defined at:
  5922 ;;		line 488 in file "../src/Dimmer_B1.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  lights          1    wreg     unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  lights          1    2[BANK0 ] unsigned char 
  5927 ;;  status          1    3[BANK0 ] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      unsigned char 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;Total ram usage:        2 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    6
  5944 ;; This function calls:
  5945 ;;		_DimmerLightsPointSelect
  5946 ;; This function is called by:
  5947 ;;		_setMain_Exception
  5948 ;;		_getMain_LightsStatus
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _getDimmerLights_Status
  5954  08CF                     _getDimmerLights_Status:	
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5958                           ;getDimmerLights_Status@lights stored from wreg
  5959  08CF  0020               	movlb	0	; select bank0
  5960  08D0  00A2               	movwf	getDimmerLights_Status@lights
  5961                           
  5962                           ;Dimmer_B1.c: 489: DimmerLightsPointSelect(lights);
  5963  08D1  0822               	movf	getDimmerLights_Status@lights,w
  5964  08D2  3189  2176         	fcall	_DimmerLightsPointSelect
  5965                           
  5966                           ;Dimmer_B1.c: 490: char status = DimmerLights->Status == 1 ? 1 : 0;
  5967  08D4  0020               	movlb	0	; select bank0
  5968  08D5  0865               	movf	_DimmerLights,w
  5969  08D6  0086               	movwf	6
  5970  08D7  0187               	clrf	7
  5971  08D8  3000               	movlw	0
  5972  08D9  1A81               	btfsc	1,5
  5973  08DA  3001               	movlw	1
  5974  08DB  00A3               	movwf	getDimmerLights_Status@status
  5975                           
  5976                           ;Dimmer_B1.c: 491: return status;
  5977  08DC  0823               	movf	getDimmerLights_Status@status,w
  5978  08DD  0008               	return
  5979  08DE                     __end_of_getDimmerLights_Status:	
  5980                           
  5981                           	psect	text23
  5982  0A6E                     __ptext23:	
  5983 ;; *************** function _getMain_All_Error_Status *****************
  5984 ;; Defined at:
  5985 ;;		line 398 in file "../src/Main_B1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  command         1    wreg     unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  command         1    1[BANK0 ] unsigned char 
  5990 ;;  status          1    4[BANK0 ] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      unsigned char 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:        5 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    5
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_setTemp_Main
  6011 ;;		_Switch_Main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _getMain_All_Error_Status
  6017  0A6E                     _getMain_All_Error_Status:	
  6018                           
  6019                           ;incstack = 0
  6020                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6021                           ;getMain_All_Error_Status@command stored from wreg
  6022  0A6E  0020               	movlb	0	; select bank0
  6023  0A6F  00A1               	movwf	getMain_All_Error_Status@command
  6024                           
  6025                           ;Main_B1.c: 399: char status = 0;
  6026  0A70  01A4               	clrf	getMain_All_Error_Status@status
  6027                           
  6028                           ;Main_B1.c: 410: if (status == 0 && command != 2) {
  6029  0A71  08A4               	movf	getMain_All_Error_Status@status,f
  6030  0A72  1D03               	skipz
  6031  0A73  2A88               	goto	l1089
  6032  0A74  0821               	movf	getMain_All_Error_Status@command,w
  6033  0A75  3A02               	xorlw	2
  6034  0A76  1903               	skipnz
  6035  0A77  2A88               	goto	l1089
  6036                           
  6037                           ;Main_B1.c: 411: status = Temp.ERROR == 1 ? 2 : 0;
  6038  0A78  0021               	movlb	1	; select bank1
  6039  0A79  18B0               	btfsc	_Temp^(0+128),1
  6040  0A7A  2A7F               	goto	l5763
  6041  0A7B  0020               	movlb	0	; select bank0
  6042  0A7C  01A2               	clrf	_getMain_All_Error_Status$3040
  6043  0A7D  01A3               	clrf	_getMain_All_Error_Status$3040+1
  6044  0A7E  2A84               	goto	l1093
  6045  0A7F                     l5763:	
  6046  0A7F  3002               	movlw	2
  6047  0A80  0020               	movlb	0	; select bank0
  6048  0A81  00A2               	movwf	_getMain_All_Error_Status$3040
  6049  0A82  3000               	movlw	0
  6050  0A83  00A3               	movwf	_getMain_All_Error_Status$3040+1
  6051  0A84                     l1093:	
  6052  0A84  0822               	movf	_getMain_All_Error_Status$3040,w
  6053  0A85  00A0               	movwf	??_getMain_All_Error_Status
  6054  0A86  0820               	movf	??_getMain_All_Error_Status,w
  6055  0A87  00A4               	movwf	getMain_All_Error_Status@status
  6056  0A88                     l1089:	
  6057                           
  6058                           ;Main_B1.c: 412: }
  6059                           ;Main_B1.c: 435: return status;
  6060  0A88  0824               	movf	getMain_All_Error_Status@status,w
  6061  0A89  0008               	return
  6062  0A8A                     __end_of_getMain_All_Error_Status:	
  6063                           
  6064                           	psect	text24
  6065  08A5                     __ptext24:	
  6066 ;; *************** function _Switch_Initialization *****************
  6067 ;; Defined at:
  6068 ;;		line 46 in file "../src/Switch_B1.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;		None
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;		None               void
  6075 ;; Registers used:
  6076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;Total ram usage:        0 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    8
  6089 ;; This function calls:
  6090 ;;		_TouchPower
  6091 ;;		_setSw_Initialization
  6092 ;; This function is called by:
  6093 ;;		_main
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _Switch_Initialization
  6099  08A5                     _Switch_Initialization:	
  6100                           
  6101                           ;Switch_B1.c: 47: TouchPower();
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6105  08A5  3189  21DB  3188   	fcall	_TouchPower
  6106                           
  6107                           ;Switch_B1.c: 49: WPUB1 = 0;
  6108  08A8  0024               	movlb	4	; select bank4
  6109  08A9  108D               	bcf	13,1	;volatile
  6110                           
  6111                           ;Switch_B1.c: 58: setSw_Initialization(1);
  6112  08AA  3001               	movlw	1
  6113  08AB  3188  2044  3188   	fcall	_setSw_Initialization
  6114                           
  6115                           ;Switch_B1.c: 62: setSw_Initialization(2);
  6116  08AE  3002               	movlw	2
  6117  08AF  3188  2044         	fcall	_setSw_Initialization
  6118  08B1  0008               	return
  6119  08B2                     __end_of_Switch_Initialization:	
  6120                           
  6121                           	psect	text25
  6122  0844                     __ptext25:	
  6123 ;; *************** function _setSw_Initialization *****************
  6124 ;; Defined at:
  6125 ;;		line 109 in file "../src/Switch_B1.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  sw              1    wreg     unsigned char 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  sw              1    4[BANK0 ] unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;		None               void
  6132 ;; Registers used:
  6133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        1 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    7
  6146 ;; This function calls:
  6147 ;;		_setLED
  6148 ;; This function is called by:
  6149 ;;		_Switch_Initialization
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function _setSw_Initialization
  6155  0844                     _setSw_Initialization:	
  6156                           
  6157                           ;incstack = 0
  6158                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6159                           ;setSw_Initialization@sw stored from wreg
  6160  0844  0020               	movlb	0	; select bank0
  6161  0845  00A4               	movwf	setSw_Initialization@sw
  6162                           
  6163                           ;Switch_B1.c: 110: setLED(sw, 1);
  6164  0846  01A2               	clrf	setLED@command
  6165  0847  0AA2               	incf	setLED@command,f
  6166  0848  0824               	movf	setSw_Initialization@sw,w
  6167  0849  3186  26F9         	fcall	_setLED
  6168  084B  0008               	return
  6169  084C                     __end_of_setSw_Initialization:	
  6170                           
  6171                           	psect	text26
  6172  09DB                     __ptext26:	
  6173 ;; *************** function _TouchPower *****************
  6174 ;; Defined at:
  6175 ;;		line 10 in file "../src/Switch_B1.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;		None               void
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    6
  6196 ;; This function calls:
  6197 ;;		_Timeout_Counter
  6198 ;;		_set_TimeoutCleared
  6199 ;; This function is called by:
  6200 ;;		_Switch_Initialization
  6201 ;;		_Switch_Main
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           
  6206                           ;psect for function _TouchPower
  6207  09DB                     _TouchPower:	
  6208                           
  6209                           ;Switch_B1.c: 11: if (RC5 == 0) {
  6210                           
  6211                           ;incstack = 0
  6212                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6213  09DB  0020               	movlb	0	; select bank0
  6214  09DC  1A8E               	btfsc	14,5	;volatile
  6215  09DD  0008               	return
  6216                           
  6217                           ;Switch_B1.c: 12: if (myMain.PowerON == 1) {
  6218  09DE  0021               	movlb	1	; select bank1
  6219  09DF  1C20               	btfss	_myMain^(0+128),0
  6220  09E0  0008               	return
  6221  09E1  29E7               	goto	l6161
  6222  09E2                     l1621:	
  6223                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  6224                           
  6225                           
  6226                           ;Switch_B1.c: 14: RC5 = 1;
  6227  09E2  0020               	movlb	0	; select bank0
  6228  09E3  168E               	bsf	14,5	;volatile
  6229                           
  6230                           ;Switch_B1.c: 15: Timeout_Counter();
  6231  09E4  3189  21C6  3189   	fcall	_Timeout_Counter
  6232  09E7                     l6161:	
  6233  09E7  0020               	movlb	0	; select bank0
  6234  09E8  1A8E               	btfsc	14,5	;volatile
  6235  09E9  29ED               	goto	l6165
  6236  09EA  0021               	movlb	1	; select bank1
  6237  09EB  1D2D               	btfss	(_myMain^(0+128)+13),2
  6238  09EC  29E2               	goto	l1621
  6239  09ED                     l6165:	
  6240                           
  6241                           ;Switch_B1.c: 16: }
  6242                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6243  09ED  3188  2014         	fcall	_set_TimeoutCleared
  6244  09EF  0008               	return
  6245  09F0                     __end_of_TouchPower:	
  6246                           
  6247                           	psect	text27
  6248  0814                     __ptext27:	
  6249 ;; *************** function _set_TimeoutCleared *****************
  6250 ;; Defined at:
  6251 ;;		line 270 in file "../src/Main_B1.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		status,2
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    5
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_getAD
  6276 ;;		_TouchPower
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           
  6281                           ;psect for function _set_TimeoutCleared
  6282  0814                     _set_TimeoutCleared:	
  6283                           
  6284                           ;Main_B1.c: 271: myMain.Timeout = 0;
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in _set_TimeoutCleared: [status,2]
  6288  0814  0021               	movlb	1	; select bank1
  6289  0815  112D               	bcf	(_myMain^(0+128)+13),2
  6290                           
  6291                           ;Main_B1.c: 272: myMain.Timeout_Counter = 0;
  6292  0816  01AE               	clrf	(_myMain^(0+128)+14)
  6293  0817  01AF               	clrf	((_myMain+1)^(0+128)+14)
  6294  0818  0008               	return
  6295  0819                     __end_of_set_TimeoutCleared:	
  6296                           
  6297                           	psect	text28
  6298  09C6                     __ptext28:	
  6299 ;; *************** function _Timeout_Counter *****************
  6300 ;; Defined at:
  6301 ;;		line 261 in file "../src/Main_B1.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;		None               void
  6308 ;; Registers used:
  6309 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    5
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_getAD
  6326 ;;		_TouchPower
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _Timeout_Counter
  6332  09C6                     _Timeout_Counter:	
  6333                           
  6334                           ;Main_B1.c: 262: myMain.Timeout_Counter++;
  6335                           
  6336                           ;incstack = 0
  6337                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6338  09C6  3001               	movlw	1
  6339  09C7  0021               	movlb	1	; select bank1
  6340  09C8  07AE               	addwf	(_myMain^(0+128)+14),f
  6341  09C9  3000               	movlw	0
  6342  09CA  3DAF               	addwfc	((_myMain+1)^(0+128)+14),f
  6343                           
  6344                           ;Main_B1.c: 263: if (myMain.Timeout_Counter == 10000) {
  6345  09CB  300E               	movlw	14
  6346  09CC  3EA0               	addlw	_myMain& (0+255)
  6347  09CD  0086               	movwf	6
  6348  09CE  0187               	clrf	7
  6349  09CF  3F40               	moviw [0]fsr1
  6350  09D0  3A10               	xorlw	16
  6351  09D1  1D03               	skipz
  6352  09D2  29D5               	goto	u5875
  6353  09D3  3F41               	moviw [1]fsr1
  6354  09D4  3A27               	xorlw	39
  6355  09D5                     u5875:	
  6356  09D5  1D03               	skipz
  6357  09D6  0008               	return
  6358                           
  6359                           ;Main_B1.c: 264: myMain.Timeout_Counter = 0;
  6360  09D7  01AE               	clrf	(_myMain^(0+128)+14)
  6361  09D8  01AF               	clrf	((_myMain+1)^(0+128)+14)
  6362                           
  6363                           ;Main_B1.c: 265: myMain.Timeout = 1;
  6364  09D9  152D               	bsf	(_myMain^(0+128)+13),2
  6365  09DA  0008               	return
  6366  09DB                     __end_of_Timeout_Counter:	
  6367                           
  6368                           	psect	text29
  6369  0952                     __ptext29:	
  6370 ;; *************** function _Mcu_Initialization *****************
  6371 ;; Defined at:
  6372 ;;		line 30 in file "../src/MCU_B1.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0, pclath, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    6
  6393 ;; This function calls:
  6394 ;;		_ADC_Set
  6395 ;;		_Fosc_Set
  6396 ;;		_IOC_Set
  6397 ;;		_IO_Set
  6398 ;;		_TMR1_Set
  6399 ;;		_WDT_Set
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _Mcu_Initialization
  6407  0952                     _Mcu_Initialization:	
  6408                           
  6409                           ;MCU_B1.c: 32: Fosc_Set();
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6413  0952  3188  2010  3189   	fcall	_Fosc_Set
  6414                           
  6415                           ;MCU_B1.c: 34: IO_Set();
  6416  0955  318A  221F  3189   	fcall	_IO_Set
  6417                           
  6418                           ;MCU_B1.c: 36: ;;
  6419                           ;MCU_B1.c: 38: TMR1_Set();
  6420  0958  3188  2099  3189   	fcall	_TMR1_Set
  6421                           
  6422                           ;MCU_B1.c: 40: ADC_Set();
  6423  095B  3188  2025  3189   	fcall	_ADC_Set
  6424                           
  6425                           ;MCU_B1.c: 42: ;;
  6426                           ;MCU_B1.c: 44: ;;
  6427                           ;MCU_B1.c: 46: IOC_Set();
  6428  095E  3188  20FD  3189   	fcall	_IOC_Set
  6429                           
  6430                           ;MCU_B1.c: 48: ;;
  6431                           ;MCU_B1.c: 50: ;;
  6432                           ;MCU_B1.c: 52: WDT_Set();
  6433  0961  3188  2055         	fcall	_WDT_Set
  6434  0963  0008               	return
  6435  0964                     __end_of_Mcu_Initialization:	
  6436                           
  6437                           	psect	text30
  6438  0855                     __ptext30:	
  6439 ;; *************** function _WDT_Set *****************
  6440 ;; Defined at:
  6441 ;;		line 1005 in file "../src/MCU_B1.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;		None               void
  6448 ;; Registers used:
  6449 ;;		wreg
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;Total ram usage:        1 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    5
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_Mcu_Initialization
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _WDT_Set
  6471  0855                     _WDT_Set:	
  6472                           
  6473                           ;MCU_B1.c: 1012: WDTCON = 0b00010111;;
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _WDT_Set: [wreg]
  6477  0855  3017               	movlw	23
  6478  0856  0021               	movlb	1	; select bank1
  6479  0857  0097               	movwf	23	;volatile
  6480                           
  6481                           ;MCU_B1.c: 1014: WDT.Enable = 1;
  6482  0858  1470               	bsf	_WDT,0
  6483                           
  6484                           ;MCU_B1.c: 1015: WDT.Timer = 10;
  6485  0859  300A               	movlw	10
  6486  085A  0020               	movlb	0	; select bank0
  6487  085B  00A0               	movwf	??_WDT_Set
  6488  085C  0820               	movf	??_WDT_Set,w
  6489  085D  00F1               	movwf	_WDT+1
  6490  085E  0008               	return
  6491  085F                     __end_of_WDT_Set:	
  6492                           
  6493                           	psect	text31
  6494  0899                     __ptext31:	
  6495 ;; *************** function _TMR1_Set *****************
  6496 ;; Defined at:
  6497 ;;		line 199 in file "../src/MCU_B1.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;		None               void
  6504 ;; Registers used:
  6505 ;;		wreg
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;Total ram usage:        0 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    5
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_Mcu_Initialization
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           
  6526                           ;psect for function _TMR1_Set
  6527  0899                     _TMR1_Set:	
  6528                           
  6529                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  6530                           
  6531                           ;incstack = 0
  6532                           ; Regs used in _TMR1_Set: [wreg]
  6533  0899  3041               	movlw	65
  6534  089A  0020               	movlb	0	; select bank0
  6535  089B  0098               	movwf	24	;volatile
  6536                           
  6537                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  6538  089C  30FA               	movlw	250
  6539  089D  0097               	movwf	23	;volatile
  6540                           
  6541                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  6542  089E  3038               	movlw	56
  6543  089F  0096               	movwf	22	;volatile
  6544                           
  6545                           ;MCU_B1.c: 203: TMR1IE = 1;
  6546  08A0  0021               	movlb	1	; select bank1
  6547  08A1  1411               	bsf	17,0	;volatile
  6548                           
  6549                           ;MCU_B1.c: 204: PEIE = 1;
  6550  08A2  170B               	bsf	11,6	;volatile
  6551                           
  6552                           ;MCU_B1.c: 205: GIE = 1;
  6553  08A3  178B               	bsf	11,7	;volatile
  6554  08A4  0008               	return
  6555  08A5                     __end_of_TMR1_Set:	
  6556                           
  6557                           	psect	text32
  6558  0A1F                     __ptext32:	
  6559 ;; *************** function _IO_Set *****************
  6560 ;; Defined at:
  6561 ;;		line 60 in file "../src/MCU_B1.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		wreg, status,2
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    5
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_Mcu_Initialization
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _IO_Set
  6591  0A1F                     _IO_Set:	
  6592                           
  6593                           ;MCU_B1.c: 88: TRISA = 0b01110111;;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _IO_Set: [wreg+status,2]
  6597  0A1F  3077               	movlw	119
  6598  0A20  0021               	movlb	1	; select bank1
  6599  0A21  008C               	movwf	12	;volatile
  6600                           
  6601                           ;MCU_B1.c: 89: TRISB = 0b00000111;;
  6602  0A22  3007               	movlw	7
  6603  0A23  008D               	movwf	13	;volatile
  6604                           
  6605                           ;MCU_B1.c: 90: TRISC = 0b00001100;;
  6606  0A24  300C               	movlw	12
  6607  0A25  008E               	movwf	14	;volatile
  6608                           
  6609                           ;MCU_B1.c: 91: LATA = 0b00000000;;
  6610  0A26  0022               	movlb	2	; select bank2
  6611  0A27  018C               	clrf	12	;volatile
  6612                           
  6613                           ;MCU_B1.c: 92: LATB = 0b00000010;;
  6614  0A28  3002               	movlw	2
  6615  0A29  008D               	movwf	13	;volatile
  6616                           
  6617                           ;MCU_B1.c: 93: LATC = 0b00000000;;
  6618  0A2A  018E               	clrf	14	;volatile
  6619                           
  6620                           ;MCU_B1.c: 94: ANSELA = 0b00100010;;
  6621  0A2B  3022               	movlw	34
  6622  0A2C  0023               	movlb	3	; select bank3
  6623  0A2D  008C               	movwf	12	;volatile
  6624                           
  6625                           ;MCU_B1.c: 95: ANSELB = 0b00000000;;
  6626  0A2E  018D               	clrf	13	;volatile
  6627                           
  6628                           ;MCU_B1.c: 96: ANSELC = 0b00000000;;
  6629  0A2F  018E               	clrf	14	;volatile
  6630                           
  6631                           ;MCU_B1.c: 97: PORTA = 0b01110111;;
  6632  0A30  3077               	movlw	119
  6633  0A31  0020               	movlb	0	; select bank0
  6634  0A32  008C               	movwf	12	;volatile
  6635                           
  6636                           ;MCU_B1.c: 98: PORTB = 0b00000111;;
  6637  0A33  3007               	movlw	7
  6638  0A34  008D               	movwf	13	;volatile
  6639                           
  6640                           ;MCU_B1.c: 99: PORTC = 0b00001100;;
  6641  0A35  300C               	movlw	12
  6642  0A36  008E               	movwf	14	;volatile
  6643  0A37  0008               	return
  6644  0A38                     __end_of_IO_Set:	
  6645                           
  6646                           	psect	text33
  6647  08FD                     __ptext33:	
  6648 ;; *************** function _IOC_Set *****************
  6649 ;; Defined at:
  6650 ;;		line 367 in file "../src/MCU_B1.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, status,2
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    5
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_Mcu_Initialization
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function _IOC_Set
  6680  08FD                     _IOC_Set:	
  6681                           
  6682                           ;MCU_B1.c: 368: WPUB2 = 0;
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _IOC_Set: [wreg+status,2]
  6686  08FD  0024               	movlb	4	; select bank4
  6687  08FE  110D               	bcf	13,2	;volatile
  6688                           
  6689                           ;MCU_B1.c: 371: IOCBP = 0b00000100;
  6690  08FF  3004               	movlw	4
  6691  0900  0027               	movlb	7	; select bank7
  6692  0901  0094               	movwf	20	;volatile
  6693                           
  6694                           ;MCU_B1.c: 372: IOCBN = 0b00000100;
  6695  0902  3004               	movlw	4
  6696  0903  0095               	movwf	21	;volatile
  6697                           
  6698                           ;MCU_B1.c: 375: IOCBP = 0b00000000;
  6699  0904  0194               	clrf	20	;volatile
  6700                           
  6701                           ;MCU_B1.c: 376: IOCBN = 0b00000100;
  6702  0905  3004               	movlw	4
  6703  0906  0095               	movwf	21	;volatile
  6704                           
  6705                           ;MCU_B1.c: 392: IOCBF = 0b00000000;
  6706  0907  0196               	clrf	22	;volatile
  6707                           
  6708                           ;MCU_B1.c: 394: IOCIE = 1;
  6709  0908  158B               	bsf	11,3	;volatile
  6710                           
  6711                           ;MCU_B1.c: 395: IOCIF = 0;
  6712  0909  100B               	bcf	11,0	;volatile
  6713                           
  6714                           ;MCU_B1.c: 396: PEIE = 1;
  6715  090A  170B               	bsf	11,6	;volatile
  6716                           
  6717                           ;MCU_B1.c: 397: GIE = 1;
  6718  090B  178B               	bsf	11,7	;volatile
  6719  090C  0008               	return
  6720  090D                     __end_of_IOC_Set:	
  6721                           
  6722                           	psect	text34
  6723  0810                     __ptext34:	
  6724 ;; *************** function _Fosc_Set *****************
  6725 ;; Defined at:
  6726 ;;		line 56 in file "../src/MCU_B1.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;		None               void
  6733 ;; Registers used:
  6734 ;;		wreg
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    5
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_Mcu_Initialization
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function _Fosc_Set
  6756  0810                     _Fosc_Set:	
  6757                           
  6758                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6759                           
  6760                           ;incstack = 0
  6761                           ; Regs used in _Fosc_Set: [wreg]
  6762  0810  3078               	movlw	120
  6763  0811  0021               	movlb	1	; select bank1
  6764  0812  0099               	movwf	25	;volatile
  6765  0813  0008               	return
  6766  0814                     __end_of_Fosc_Set:	
  6767                           
  6768                           	psect	text35
  6769  0825                     __ptext35:	
  6770 ;; *************** function _ADC_Set *****************
  6771 ;; Defined at:
  6772 ;;		line 419 in file "../src/MCU_B1.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;		None               void
  6779 ;; Registers used:
  6780 ;;		wreg
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    5
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_Mcu_Initialization
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _ADC_Set
  6802  0825                     _ADC_Set:	
  6803                           
  6804                           ;MCU_B1.c: 420: ADCON1 = 0xf3;
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _ADC_Set: [wreg]
  6808  0825  30F3               	movlw	243
  6809  0826  0021               	movlb	1	; select bank1
  6810  0827  009E               	movwf	30	;volatile
  6811                           
  6812                           ;MCU_B1.c: 421: FVRCON = 0xc0;
  6813  0828  30C0               	movlw	192
  6814  0829  0022               	movlb	2	; select bank2
  6815  082A  0097               	movwf	23	;volatile
  6816  082B  0008               	return
  6817  082C                     __end_of_ADC_Set:	
  6818                           
  6819                           	psect	text36
  6820  088D                     __ptext36:	
  6821 ;; *************** function _LED_Main *****************
  6822 ;; Defined at:
  6823 ;;		line 47 in file "../src/LED_B1.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    7
  6844 ;; This function calls:
  6845 ;;		_setLED_Main
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           
  6852                           ;psect for function _LED_Main
  6853  088D                     _LED_Main:	
  6854                           
  6855                           ;LED_B1.c: 49: setLED_Main(1);
  6856                           
  6857                           ;incstack = 0
  6858                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6859  088D  3001               	movlw	1
  6860  088E  318C  24B5  3188   	fcall	_setLED_Main
  6861                           
  6862                           ;LED_B1.c: 52: setLED_Main(2);
  6863  0891  3002               	movlw	2
  6864  0892  318C  24B5  3188   	fcall	_setLED_Main
  6865                           
  6866                           ;LED_B1.c: 58: setLED_Main(99);
  6867  0895  3063               	movlw	99
  6868  0896  318C  24B5         	fcall	_setLED_Main
  6869  0898  0008               	return
  6870  0899                     __end_of_LED_Main:	
  6871                           
  6872                           	psect	text37
  6873  0CB5                     __ptext37:	
  6874 ;; *************** function _setLED_Main *****************
  6875 ;; Defined at:
  6876 ;;		line 215 in file "../src/LED_B1.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  led             1    wreg     unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  led             1    4[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;Total ram usage:        3 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    6
  6897 ;; This function calls:
  6898 ;;		_LedPointSelect
  6899 ;; This function is called by:
  6900 ;;		_LED_Main
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           
  6905                           ;psect for function _setLED_Main
  6906  0CB5                     _setLED_Main:	
  6907                           
  6908                           ;incstack = 0
  6909                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6910                           ;setLED_Main@led stored from wreg
  6911  0CB5  0020               	movlb	0	; select bank0
  6912  0CB6  00A4               	movwf	setLED_Main@led
  6913                           
  6914                           ;LED_B1.c: 216: LedPointSelect(led);
  6915  0CB7  0824               	movf	setLED_Main@led,w
  6916  0CB8  318A  228A  318C   	fcall	_LedPointSelect
  6917                           
  6918                           ;LED_B1.c: 217: if (LED->GO == 1) {
  6919  0CBB  0020               	movlb	0	; select bank0
  6920  0CBC  0866               	movf	_LED,w
  6921  0CBD  0086               	movwf	6
  6922  0CBE  0187               	clrf	7
  6923  0CBF  1C81               	btfss	1,1
  6924  0CC0  0008               	return
  6925                           
  6926                           ;LED_B1.c: 218: LED->Time++;
  6927  0CC1  0A66               	incf	_LED,w
  6928  0CC2  0086               	movwf	6
  6929  0CC3  0187               	clrf	7
  6930  0CC4  3001               	movlw	1
  6931  0CC5  0781               	addwf	1,f
  6932  0CC6  3141               	addfsr 1,1
  6933  0CC7  1803               	skipnc
  6934  0CC8  0A81               	incf	1,f
  6935                           
  6936                           ;LED_B1.c: 219: if (LED->Time >= 500 / 10) {
  6937  0CC9  0A66               	incf	_LED,w
  6938  0CCA  0086               	movwf	6
  6939  0CCB  0187               	clrf	7
  6940  0CCC  3F40               	moviw [0]fsr1
  6941  0CCD  00A2               	movwf	??_setLED_Main
  6942  0CCE  3F41               	moviw [1]fsr1
  6943  0CCF  00A3               	movwf	??_setLED_Main+1
  6944  0CD0  3000               	movlw	0
  6945  0CD1  0223               	subwf	??_setLED_Main+1,w
  6946  0CD2  3032               	movlw	50
  6947  0CD3  1903               	skipnz
  6948  0CD4  0222               	subwf	??_setLED_Main,w
  6949  0CD5  1C03               	skipc
  6950  0CD6  0008               	return
  6951                           
  6952                           ;LED_B1.c: 220: LED->Time = 0;
  6953  0CD7  0A66               	incf	_LED,w
  6954  0CD8  0086               	movwf	6
  6955  0CD9  0187               	clrf	7
  6956  0CDA  3000               	movlw	0
  6957  0CDB  3FC0               	movwi [0]fsr1
  6958  0CDC  3FC1               	movwi [1]fsr1
  6959                           
  6960                           ;LED_B1.c: 222: if (led == 1) {
  6961  0CDD  0824               	movf	setLED_Main@led,w
  6962  0CDE  3A01               	xorlw	1
  6963  0CDF  1D03               	skipz
  6964  0CE0  2CE4               	goto	l5961
  6965                           
  6966                           ;LED_B1.c: 223: RA3 = RA3 == 1 ? 0 : 1;
  6967  0CE1  3008               	movlw	8
  6968  0CE2  068C               	xorwf	12,f
  6969                           
  6970                           ;LED_B1.c: 224: }
  6971  0CE3  0008               	return
  6972  0CE4                     l5961:	
  6973                           
  6974                           ;LED_B1.c: 227: else if (led == 2) {
  6975  0CE4  0824               	movf	setLED_Main@led,w
  6976  0CE5  3A02               	xorlw	2
  6977  0CE6  1D03               	skipz
  6978  0CE7  2CEB               	goto	l5965
  6979                           
  6980                           ;LED_B1.c: 228: RC7 = RC7 == 1 ? 0 : 1;
  6981  0CE8  3080               	movlw	128
  6982  0CE9  068E               	xorwf	14,f
  6983                           
  6984                           ;LED_B1.c: 229: }
  6985  0CEA  0008               	return
  6986  0CEB                     l5965:	
  6987                           
  6988                           ;LED_B1.c: 237: else if (led == 99) {
  6989  0CEB  0824               	movf	setLED_Main@led,w
  6990  0CEC  3A63               	xorlw	99
  6991  0CED  1D03               	skipz
  6992  0CEE  0008               	return
  6993                           
  6994                           ;LED_B1.c: 238: RB5 = RB5 == 1 ? 0 : 1;
  6995  0CEF  3020               	movlw	32
  6996  0CF0  068D               	xorwf	13,f
  6997  0CF1  0008               	return
  6998  0CF2                     __end_of_setLED_Main:	
  6999                           
  7000                           	psect	text38
  7001  0881                     __ptext38:	
  7002 ;; *************** function _LED_Initialization *****************
  7003 ;; Defined at:
  7004 ;;		line 31 in file "../src/LED_B1.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;		None               void
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;Total ram usage:        0 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    8
  7025 ;; This function calls:
  7026 ;;		_setLED_Initialization
  7027 ;; This function is called by:
  7028 ;;		_main
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           
  7033                           ;psect for function _LED_Initialization
  7034  0881                     _LED_Initialization:	
  7035                           
  7036                           ;LED_B1.c: 33: setLED_Initialization(1);
  7037                           
  7038                           ;incstack = 0
  7039                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7040  0881  3001               	movlw	1
  7041  0882  3188  20ED  3188   	fcall	_setLED_Initialization
  7042                           
  7043                           ;LED_B1.c: 36: setLED_Initialization(2);
  7044  0885  3002               	movlw	2
  7045  0886  3188  20ED  3188   	fcall	_setLED_Initialization
  7046                           
  7047                           ;LED_B1.c: 42: setLED_Initialization(99);
  7048  0889  3063               	movlw	99
  7049  088A  3188  20ED         	fcall	_setLED_Initialization
  7050  088C  0008               	return
  7051  088D                     __end_of_LED_Initialization:	
  7052                           
  7053                           	psect	text39
  7054  08ED                     __ptext39:	
  7055 ;; *************** function _setLED_Initialization *****************
  7056 ;; Defined at:
  7057 ;;		line 66 in file "../src/LED_B1.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  led             1    wreg     unsigned char 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  led             1    4[BANK0 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7074 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;Total ram usage:        1 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    7
  7078 ;; This function calls:
  7079 ;;		_LedPointSelect
  7080 ;;		_setLED
  7081 ;; This function is called by:
  7082 ;;		_LED_Initialization
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function _setLED_Initialization
  7088  08ED                     _setLED_Initialization:	
  7089                           
  7090                           ;incstack = 0
  7091                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7092                           ;setLED_Initialization@led stored from wreg
  7093  08ED  0020               	movlb	0	; select bank0
  7094  08EE  00A4               	movwf	setLED_Initialization@led
  7095                           
  7096                           ;LED_B1.c: 67: LedPointSelect(led);
  7097  08EF  0824               	movf	setLED_Initialization@led,w
  7098  08F0  318A  228A  3188   	fcall	_LedPointSelect
  7099                           
  7100                           ;LED_B1.c: 68: LED->Enable = 1;
  7101  08F3  0020               	movlb	0	; select bank0
  7102  08F4  0866               	movf	_LED,w
  7103  08F5  0086               	movwf	6
  7104  08F6  0187               	clrf	7
  7105  08F7  1401               	bsf	1,0
  7106                           
  7107                           ;LED_B1.c: 69: setLED(led, 0);
  7108  08F8  01A2               	clrf	setLED@command
  7109  08F9  0824               	movf	setLED_Initialization@led,w
  7110  08FA  3186  26F9         	fcall	_setLED
  7111  08FC  0008               	return
  7112  08FD                     __end_of_setLED_Initialization:	
  7113                           
  7114                           	psect	text40
  7115  0AC5                     __ptext40:	
  7116 ;; *************** function _Flash_Memory_Main *****************
  7117 ;; Defined at:
  7118 ;;		line 900 in file "../src/MCU_B1.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;		None               void
  7125 ;; Registers used:
  7126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;Total ram usage:        0 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    8
  7139 ;; This function calls:
  7140 ;;		_Flash_Memory_Modify
  7141 ;; This function is called by:
  7142 ;;		_main
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           
  7147                           ;psect for function _Flash_Memory_Main
  7148  0AC5                     _Flash_Memory_Main:	
  7149                           
  7150                           ;MCU_B1.c: 901: if (Memory.GO == 1) {
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7154  0AC5  0022               	movlb	2	; select bank2
  7155  0AC6  1CC4               	btfss	(_Memory^(0+256)+36),1
  7156  0AC7  0008               	return
  7157                           
  7158                           ;MCU_B1.c: 902: if (Memory.Modify == 1) {
  7159  0AC8  1C44               	btfss	(_Memory^(0+256)+36),0
  7160  0AC9  2AE2               	goto	l891
  7161                           
  7162                           ;MCU_B1.c: 903: Memory.Time++;
  7163  0ACA  3001               	movlw	1
  7164  0ACB  07C2               	addwf	(_Memory^(0+256)+34),f
  7165  0ACC  3000               	movlw	0
  7166  0ACD  3DC3               	addwfc	((_Memory+1)^(0+256)+34),f
  7167                           
  7168                           ;MCU_B1.c: 904: if (Memory.Time == 25)
  7169  0ACE  3022               	movlw	34
  7170  0ACF  3E20               	addlw	_Memory& (0+255)
  7171  0AD0  0086               	movwf	6
  7172  0AD1  3001               	movlw	1	; select bank2/3
  7173  0AD2  0087               	movwf	7
  7174  0AD3  3F40               	moviw [0]fsr1
  7175  0AD4  3A19               	xorlw	25
  7176  0AD5  1D03               	skipz
  7177  0AD6  2AD9               	goto	u6865
  7178  0AD7  3F41               	moviw [1]fsr1
  7179  0AD8  3A00               	xorlw	0
  7180  0AD9                     u6865:	
  7181  0AD9  1D03               	skipz
  7182  0ADA  0008               	return
  7183                           
  7184                           ;MCU_B1.c: 905: {
  7185                           ;MCU_B1.c: 906: Memory.Time = 0;
  7186  0ADB  01C2               	clrf	(_Memory^(0+256)+34)
  7187  0ADC  01C3               	clrf	((_Memory+1)^(0+256)+34)
  7188                           
  7189                           ;MCU_B1.c: 907: Memory.Modify = 0;
  7190  0ADD  1044               	bcf	(_Memory^(0+256)+36),0
  7191                           
  7192                           ;MCU_B1.c: 908: Memory.GO = 0;
  7193  0ADE  10C4               	bcf	(_Memory^(0+256)+36),1
  7194                           
  7195                           ;MCU_B1.c: 909: Flash_Memory_Modify();
  7196  0ADF  318D  25B1         	fcall	_Flash_Memory_Modify
  7197                           
  7198                           ;MCU_B1.c: 910: }
  7199                           ;MCU_B1.c: 911: } else {
  7200  0AE1  0008               	return
  7201  0AE2                     l891:	
  7202                           
  7203                           ;MCU_B1.c: 912: Memory.GO = 0;
  7204  0AE2  10C4               	bcf	(_Memory^(0+256)+36),1
  7205  0AE3  0008               	return
  7206  0AE4                     __end_of_Flash_Memory_Main:	
  7207                           
  7208                           	psect	text41
  7209  0DB1                     __ptext41:	
  7210 ;; *************** function _Flash_Memory_Modify *****************
  7211 ;; Defined at:
  7212 ;;		line 969 in file "../src/MCU_B1.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  i               1    5[BANK0 ] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;		None               void
  7219 ;; Registers used:
  7220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;Total ram usage:        2 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    7
  7233 ;; This function calls:
  7234 ;;		_Flash_Memory_Erasing
  7235 ;;		_Flash_Memory_Read
  7236 ;;		_Flash_Memory_Write
  7237 ;; This function is called by:
  7238 ;;		_Flash_Memory_Main
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           
  7243                           ;psect for function _Flash_Memory_Modify
  7244  0DB1                     _Flash_Memory_Modify:	
  7245                           
  7246                           ;MCU_B1.c: 970: char i = 0;
  7247                           
  7248                           ;incstack = 0
  7249                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7250  0DB1  0020               	movlb	0	; select bank0
  7251  0DB2  01A5               	clrf	Flash_Memory_Modify@i
  7252                           
  7253                           ;MCU_B1.c: 971: for (i = 0; i < 32; i++) {
  7254  0DB3  01A5               	clrf	Flash_Memory_Modify@i
  7255  0DB4  3020               	movlw	32
  7256  0DB5  0225               	subwf	Flash_Memory_Modify@i,w
  7257  0DB6  1803               	btfsc	3,0
  7258  0DB7  2DCD               	goto	l6047
  7259  0DB8                     l6041:	
  7260                           
  7261                           ;MCU_B1.c: 972: Memory.Data[i] = Flash_Memory_Read(i);
  7262  0DB8  0825               	movf	Flash_Memory_Modify@i,w
  7263  0DB9  318A  2238  318D   	fcall	_Flash_Memory_Read
  7264  0DBC  0020               	movlb	0	; select bank0
  7265  0DBD  00A4               	movwf	??_Flash_Memory_Modify
  7266  0DBE  0825               	movf	Flash_Memory_Modify@i,w
  7267  0DBF  3E20               	addlw	_Memory& (0+255)
  7268  0DC0  0086               	movwf	6
  7269  0DC1  3001               	movlw	1	; select bank2/3
  7270  0DC2  0087               	movwf	7
  7271  0DC3  0824               	movf	??_Flash_Memory_Modify,w
  7272  0DC4  0081               	movwf	1
  7273  0DC5  3001               	movlw	1
  7274  0DC6  00A4               	movwf	??_Flash_Memory_Modify
  7275  0DC7  0824               	movf	??_Flash_Memory_Modify,w
  7276  0DC8  07A5               	addwf	Flash_Memory_Modify@i,f
  7277  0DC9  3020               	movlw	32
  7278  0DCA  0225               	subwf	Flash_Memory_Modify@i,w
  7279  0DCB  1C03               	skipc
  7280  0DCC  2DB8               	goto	l6041
  7281  0DCD                     l6047:	
  7282                           
  7283                           ;MCU_B1.c: 973: }
  7284                           ;MCU_B1.c: 974: Memory.Data[0]=product->Data[12];
  7285  0DCD  086D               	movf	_product,w
  7286  0DCE  0086               	movwf	6
  7287  0DCF  3001               	movlw	1	; select bank2/3
  7288  0DD0  0087               	movwf	7
  7289  0DD1  3001               	movlw	1	; select bank2/3
  7290  0DD2  3F4C               	moviw [12]fsr1
  7291  0DD3  0022               	movlb	2	; select bank2
  7292  0DD4  00A0               	movwf	_Memory^(0+256)
  7293                           
  7294                           ;MCU_B1.c: 975: Memory.Data[1]=product->Data[13];
  7295  0DD5  0020               	movlb	0	; select bank0
  7296  0DD6  086D               	movf	_product,w
  7297  0DD7  0086               	movwf	6
  7298  0DD8  3001               	movlw	1	; select bank2/3
  7299  0DD9  0087               	movwf	7
  7300  0DDA  3001               	movlw	1	; select bank2/3
  7301  0DDB  3F4D               	moviw [13]fsr1
  7302  0DDC  0022               	movlb	2	; select bank2
  7303  0DDD  00A1               	movwf	(_Memory^(0+256)+1)
  7304                           
  7305                           ;MCU_B1.c: 976: Memory.Data[2]=product->Data[14];
  7306  0DDE  0020               	movlb	0	; select bank0
  7307  0DDF  086D               	movf	_product,w
  7308  0DE0  0086               	movwf	6
  7309  0DE1  3001               	movlw	1	; select bank2/3
  7310  0DE2  0087               	movwf	7
  7311  0DE3  3001               	movlw	1	; select bank2/3
  7312  0DE4  3F4E               	moviw [14]fsr1
  7313  0DE5  0022               	movlb	2	; select bank2
  7314  0DE6  00A2               	movwf	(_Memory^(0+256)+2)
  7315                           
  7316                           ;MCU_B1.c: 982: if (Memory.LoopSave == 1) {
  7317  0DE7  1D44               	btfss	(_Memory^(0+256)+36),2
  7318  0DE8  2DED               	goto	l913
  7319                           
  7320                           ;MCU_B1.c: 983: Memory.LoopSave = 0;
  7321  0DE9  1144               	bcf	(_Memory^(0+256)+36),2
  7322                           
  7323                           ;MCU_B1.c: 984: myMain.FirstOpen = 0;
  7324  0DEA  0021               	movlb	1	; select bank1
  7325  0DEB  11A0               	bcf	_myMain^(0+128),3
  7326                           
  7327                           ;MCU_B1.c: 985: myMain.First = 0;
  7328  0DEC  12A0               	bcf	_myMain^(0+128),5
  7329  0DED                     l913:	
  7330                           
  7331                           ;MCU_B1.c: 987: }
  7332                           ;MCU_B1.c: 988: GIE = 0;
  7333  0DED  138B               	bcf	11,7	;volatile
  7334                           
  7335                           ;MCU_B1.c: 989: Flash_Memory_Erasing();
  7336  0DEE  3188  2075  318D   	fcall	_Flash_Memory_Erasing
  7337                           
  7338                           ;MCU_B1.c: 990: Flash_Memory_Write();
  7339  0DF1  318C  244F         	fcall	_Flash_Memory_Write
  7340                           
  7341                           ;MCU_B1.c: 991: GIE = 1;
  7342  0DF3  178B               	bsf	11,7	;volatile
  7343  0DF4  0008               	return
  7344  0DF5                     __end_of_Flash_Memory_Modify:	
  7345                           
  7346                           	psect	text42
  7347  0875                     __ptext42:	
  7348 ;; *************** function _Flash_Memory_Erasing *****************
  7349 ;; Defined at:
  7350 ;;		line 958 in file "../src/MCU_B1.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;		None               void
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0, pclath, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    6
  7371 ;; This function calls:
  7372 ;;		_Flash_Memory_Unlock
  7373 ;; This function is called by:
  7374 ;;		_Flash_Memory_Modify
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _Flash_Memory_Erasing
  7380  0875                     _Flash_Memory_Erasing:	
  7381                           
  7382                           ;MCU_B1.c: 959: CFGS = 0;
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  7386  0875  0023               	movlb	3	; select bank3
  7387  0876  1315               	bcf	21,6	;volatile
  7388                           
  7389                           ;MCU_B1.c: 960: PMADRH = 0x30;
  7390  0877  3030               	movlw	48
  7391  0878  0092               	movwf	18	;volatile
  7392                           
  7393                           ;MCU_B1.c: 961: PMADRL = 0x00;
  7394  0879  0191               	clrf	17	;volatile
  7395                           
  7396                           ;MCU_B1.c: 962: FREE = 1;
  7397  087A  1615               	bsf	21,4	;volatile
  7398                           
  7399                           ;MCU_B1.c: 963: WREN = 1;
  7400  087B  1515               	bsf	21,2	;volatile
  7401                           
  7402                           ;MCU_B1.c: 964: Flash_Memory_Unlock();
  7403  087C  3188  204C         	fcall	_Flash_Memory_Unlock
  7404                           
  7405                           ;MCU_B1.c: 965: WREN = 0;
  7406  087E  0023               	movlb	3	; select bank3
  7407  087F  1115               	bcf	21,2	;volatile
  7408  0880  0008               	return
  7409  0881                     __end_of_Flash_Memory_Erasing:	
  7410                           
  7411                           	psect	text43
  7412  033D                     __ptext43:	
  7413 ;; *************** function _Flash_Memory_Initialization *****************
  7414 ;; Defined at:
  7415 ;;		line 859 in file "../src/MCU_B1.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  i               1   49[BANK0 ] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;		None               void
  7422 ;; Registers used:
  7423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;Total ram usage:        2 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    8
  7436 ;; This function calls:
  7437 ;;		_Flash_Memory_Read
  7438 ;;		_Flash_Memory_Write
  7439 ;;		_setPercentValue
  7440 ;; This function is called by:
  7441 ;;		_main
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function _Flash_Memory_Initialization
  7447  033D                     _Flash_Memory_Initialization:	
  7448                           
  7449                           ;MCU_B1.c: 860: char i = 0;
  7450                           
  7451                           ;incstack = 0
  7452                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7453  033D  0020               	movlb	0	; select bank0
  7454  033E  01D1               	clrf	Flash_Memory_Initialization@i
  7455                           
  7456                           ;MCU_B1.c: 861: if (Flash_Memory_Read(31) == 0xaa) {
  7457  033F  301F               	movlw	31
  7458  0340  318A  2238  3183   	fcall	_Flash_Memory_Read
  7459  0343  3AAA               	xorlw	170
  7460  0344  1D03               	skipz
  7461  0345  2BAF               	goto	l6343
  7462                           
  7463                           ;MCU_B1.c: 862: product->Data[12] = Flash_Memory_Read(0);
  7464  0346  3000               	movlw	0
  7465  0347  318A  2238  3183   	fcall	_Flash_Memory_Read
  7466  034A  0020               	movlb	0	; select bank0
  7467  034B  00D0               	movwf	??_Flash_Memory_Initialization
  7468  034C  086D               	movf	_product,w
  7469  034D  3E0C               	addlw	12
  7470  034E  0086               	movwf	6
  7471  034F  3001               	movlw	1	; select bank2/3
  7472  0350  0087               	movwf	7
  7473  0351  0850               	movf	??_Flash_Memory_Initialization,w
  7474  0352  0081               	movwf	1
  7475                           
  7476                           ;MCU_B1.c: 863: product->Data[13] = Flash_Memory_Read(1);
  7477  0353  3001               	movlw	1
  7478  0354  318A  2238  3183   	fcall	_Flash_Memory_Read
  7479  0357  0020               	movlb	0	; select bank0
  7480  0358  00D0               	movwf	??_Flash_Memory_Initialization
  7481  0359  086D               	movf	_product,w
  7482  035A  3E0D               	addlw	13
  7483  035B  0086               	movwf	6
  7484  035C  3001               	movlw	1	; select bank2/3
  7485  035D  0087               	movwf	7
  7486  035E  0850               	movf	??_Flash_Memory_Initialization,w
  7487  035F  0081               	movwf	1
  7488                           
  7489                           ;MCU_B1.c: 864: product->Data[14] = Flash_Memory_Read(2);
  7490  0360  3002               	movlw	2
  7491  0361  318A  2238  3183   	fcall	_Flash_Memory_Read
  7492  0364  0020               	movlb	0	; select bank0
  7493  0365  00D0               	movwf	??_Flash_Memory_Initialization
  7494  0366  086D               	movf	_product,w
  7495  0367  3E0E               	addlw	14
  7496  0368  0086               	movwf	6
  7497  0369  3001               	movlw	1	; select bank2/3
  7498  036A  0087               	movwf	7
  7499  036B  0850               	movf	??_Flash_Memory_Initialization,w
  7500  036C  0081               	movwf	1
  7501                           
  7502                           ;MCU_B1.c: 870: i = setPercentValue(((char)((100-60)*0.8)));
  7503  036D  3020               	movlw	32
  7504  036E  318E  263A  3183   	fcall	_setPercentValue
  7505  0371  0020               	movlb	0	; select bank0
  7506  0372  00D0               	movwf	??_Flash_Memory_Initialization
  7507  0373  0850               	movf	??_Flash_Memory_Initialization,w
  7508  0374  00D1               	movwf	Flash_Memory_Initialization@i
  7509                           
  7510                           ;MCU_B1.c: 871: product->Data[21] = i;
  7511  0375  0851               	movf	Flash_Memory_Initialization@i,w
  7512  0376  00D0               	movwf	??_Flash_Memory_Initialization
  7513  0377  086D               	movf	_product,w
  7514  0378  3E15               	addlw	21
  7515  0379  0086               	movwf	6
  7516  037A  3001               	movlw	1	; select bank2/3
  7517  037B  0087               	movwf	7
  7518  037C  0850               	movf	??_Flash_Memory_Initialization,w
  7519  037D  0081               	movwf	1
  7520                           
  7521                           ;MCU_B1.c: 872: product->Data[22] = i;
  7522  037E  0851               	movf	Flash_Memory_Initialization@i,w
  7523  037F  00D0               	movwf	??_Flash_Memory_Initialization
  7524  0380  086D               	movf	_product,w
  7525  0381  3E16               	addlw	22
  7526  0382  0086               	movwf	6
  7527  0383  3001               	movlw	1	; select bank2/3
  7528  0384  0087               	movwf	7
  7529  0385  0850               	movf	??_Flash_Memory_Initialization,w
  7530  0386  0081               	movwf	1
  7531                           
  7532                           ;MCU_B1.c: 873: product->Data[23] = i;
  7533  0387  0851               	movf	Flash_Memory_Initialization@i,w
  7534  0388  00D0               	movwf	??_Flash_Memory_Initialization
  7535  0389  086D               	movf	_product,w
  7536  038A  3E17               	addlw	23
  7537  038B  0086               	movwf	6
  7538  038C  3001               	movlw	1	; select bank2/3
  7539  038D  0087               	movwf	7
  7540  038E  0850               	movf	??_Flash_Memory_Initialization,w
  7541  038F  0081               	movwf	1
  7542                           
  7543                           ;MCU_B1.c: 875: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  7544  0390  086D               	movf	_product,w
  7545  0391  3E0C               	addlw	12
  7546  0392  0086               	movwf	6
  7547  0393  3001               	movlw	1	; select bank2/3
  7548  0394  0087               	movwf	7
  7549  0395  0801               	movf	1,w
  7550  0396  3AFF               	xorlw	255
  7551  0397  1D03               	skipz
  7552  0398  0008               	return
  7553  0399  086D               	movf	_product,w
  7554  039A  3E0D               	addlw	13
  7555  039B  0086               	movwf	6
  7556  039C  3001               	movlw	1	; select bank2/3
  7557  039D  0087               	movwf	7
  7558  039E  0801               	movf	1,w
  7559  039F  3AFF               	xorlw	255
  7560  03A0  1D03               	skipz
  7561  03A1  0008               	return
  7562  03A2  086D               	movf	_product,w
  7563  03A3  3E0E               	addlw	14
  7564  03A4  0086               	movwf	6
  7565  03A5  3001               	movlw	1	; select bank2/3
  7566  03A6  0087               	movwf	7
  7567  03A7  0801               	movf	1,w
  7568  03A8  3AFF               	xorlw	255
  7569  03A9  1D03               	skipz
  7570  03AA  0008               	return
  7571                           
  7572                           ;MCU_B1.c: 876: myMain.FirstOpen = 1;
  7573  03AB  0021               	movlb	1	; select bank1
  7574  03AC  15A0               	bsf	_myMain^(0+128),3
  7575                           
  7576                           ;MCU_B1.c: 877: myMain.First = 1;
  7577  03AD  16A0               	bsf	_myMain^(0+128),5
  7578                           
  7579                           ;MCU_B1.c: 878: }
  7580                           ;MCU_B1.c: 879: } else {
  7581  03AE  0008               	return
  7582  03AF                     l6343:	
  7583                           
  7584                           ;MCU_B1.c: 880: i = setPercentValue(((char)((100-60)*0.8)));
  7585  03AF  3020               	movlw	32
  7586  03B0  318E  263A  3183   	fcall	_setPercentValue
  7587  03B3  0020               	movlb	0	; select bank0
  7588  03B4  00D0               	movwf	??_Flash_Memory_Initialization
  7589  03B5  0850               	movf	??_Flash_Memory_Initialization,w
  7590  03B6  00D1               	movwf	Flash_Memory_Initialization@i
  7591                           
  7592                           ;MCU_B1.c: 881: Memory.Data[0]=0xff;
  7593  03B7  30FF               	movlw	255
  7594  03B8  00D0               	movwf	??_Flash_Memory_Initialization
  7595  03B9  0850               	movf	??_Flash_Memory_Initialization,w
  7596  03BA  0022               	movlb	2	; select bank2
  7597  03BB  00A0               	movwf	_Memory^(0+256)
  7598                           
  7599                           ;MCU_B1.c: 882: Memory.Data[1]=0xff;
  7600  03BC  30FF               	movlw	255
  7601  03BD  0020               	movlb	0	; select bank0
  7602  03BE  00D0               	movwf	??_Flash_Memory_Initialization
  7603  03BF  0850               	movf	??_Flash_Memory_Initialization,w
  7604  03C0  0022               	movlb	2	; select bank2
  7605  03C1  00A1               	movwf	(_Memory^(0+256)+1)
  7606                           
  7607                           ;MCU_B1.c: 883: Memory.Data[2]=0xff;
  7608  03C2  30FF               	movlw	255
  7609  03C3  0020               	movlb	0	; select bank0
  7610  03C4  00D0               	movwf	??_Flash_Memory_Initialization
  7611  03C5  0850               	movf	??_Flash_Memory_Initialization,w
  7612  03C6  0022               	movlb	2	; select bank2
  7613  03C7  00A2               	movwf	(_Memory^(0+256)+2)
  7614                           
  7615                           ;MCU_B1.c: 884: Memory.Data[3]=0xff;
  7616  03C8  30FF               	movlw	255
  7617  03C9  0020               	movlb	0	; select bank0
  7618  03CA  00D0               	movwf	??_Flash_Memory_Initialization
  7619  03CB  0850               	movf	??_Flash_Memory_Initialization,w
  7620  03CC  0022               	movlb	2	; select bank2
  7621  03CD  00A3               	movwf	(_Memory^(0+256)+3)
  7622                           
  7623                           ;MCU_B1.c: 885: Memory.Data[4]=0xff;
  7624  03CE  30FF               	movlw	255
  7625  03CF  0020               	movlb	0	; select bank0
  7626  03D0  00D0               	movwf	??_Flash_Memory_Initialization
  7627  03D1  0850               	movf	??_Flash_Memory_Initialization,w
  7628  03D2  0022               	movlb	2	; select bank2
  7629  03D3  00A4               	movwf	(_Memory^(0+256)+4)
  7630                           
  7631                           ;MCU_B1.c: 886: Memory.Data[5]=0xff;
  7632  03D4  30FF               	movlw	255
  7633  03D5  0020               	movlb	0	; select bank0
  7634  03D6  00D0               	movwf	??_Flash_Memory_Initialization
  7635  03D7  0850               	movf	??_Flash_Memory_Initialization,w
  7636  03D8  0022               	movlb	2	; select bank2
  7637  03D9  00A5               	movwf	(_Memory^(0+256)+5)
  7638                           
  7639                           ;MCU_B1.c: 887: Memory.Data[31]=0xaa;
  7640  03DA  30AA               	movlw	170
  7641  03DB  0020               	movlb	0	; select bank0
  7642  03DC  00D0               	movwf	??_Flash_Memory_Initialization
  7643  03DD  0850               	movf	??_Flash_Memory_Initialization,w
  7644  03DE  0022               	movlb	2	; select bank2
  7645  03DF  00BF               	movwf	(_Memory^(0+256)+31)
  7646                           
  7647                           ;MCU_B1.c: 888: product->Data[21] = i;
  7648  03E0  0020               	movlb	0	; select bank0
  7649  03E1  0851               	movf	Flash_Memory_Initialization@i,w
  7650  03E2  00D0               	movwf	??_Flash_Memory_Initialization
  7651  03E3  086D               	movf	_product,w
  7652  03E4  3E15               	addlw	21
  7653  03E5  0086               	movwf	6
  7654  03E6  3001               	movlw	1	; select bank2/3
  7655  03E7  0087               	movwf	7
  7656  03E8  0850               	movf	??_Flash_Memory_Initialization,w
  7657  03E9  0081               	movwf	1
  7658                           
  7659                           ;MCU_B1.c: 889: product->Data[22] = i;
  7660  03EA  0851               	movf	Flash_Memory_Initialization@i,w
  7661  03EB  00D0               	movwf	??_Flash_Memory_Initialization
  7662  03EC  086D               	movf	_product,w
  7663  03ED  3E16               	addlw	22
  7664  03EE  0086               	movwf	6
  7665  03EF  3001               	movlw	1	; select bank2/3
  7666  03F0  0087               	movwf	7
  7667  03F1  0850               	movf	??_Flash_Memory_Initialization,w
  7668  03F2  0081               	movwf	1
  7669                           
  7670                           ;MCU_B1.c: 890: product->Data[23] = i;
  7671  03F3  0851               	movf	Flash_Memory_Initialization@i,w
  7672  03F4  00D0               	movwf	??_Flash_Memory_Initialization
  7673  03F5  086D               	movf	_product,w
  7674  03F6  3E17               	addlw	23
  7675  03F7  0086               	movwf	6
  7676  03F8  3001               	movlw	1	; select bank2/3
  7677  03F9  0087               	movwf	7
  7678  03FA  0850               	movf	??_Flash_Memory_Initialization,w
  7679  03FB  0081               	movwf	1
  7680                           
  7681                           ;MCU_B1.c: 891: GIE = 0;
  7682  03FC  138B               	bcf	11,7	;volatile
  7683                           
  7684                           ;MCU_B1.c: 892: Flash_Memory_Write();
  7685  03FD  318C  244F         	fcall	_Flash_Memory_Write
  7686                           
  7687                           ;MCU_B1.c: 893: GIE = 1;
  7688  03FF  178B               	bsf	11,7	;volatile
  7689                           
  7690                           ;MCU_B1.c: 894: myMain.FirstOpen = 1;
  7691  0400  0021               	movlb	1	; select bank1
  7692  0401  15A0               	bsf	_myMain^(0+128),3
  7693                           
  7694                           ;MCU_B1.c: 895: myMain.First = 1;
  7695  0402  16A0               	bsf	_myMain^(0+128),5
  7696  0403  0008               	return
  7697  0404                     __end_of_Flash_Memory_Initialization:	
  7698                           
  7699                           	psect	text44
  7700  0E3A                     __ptext44:	
  7701 ;; *************** function _setPercentValue *****************
  7702 ;; Defined at:
  7703 ;;		line 776 in file "../src/Dimmer_B1.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  value           1    wreg     unsigned char 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  value           1   44[BANK0 ] unsigned char 
  7708 ;;  i               3   45[BANK0 ] float 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      unsigned char 
  7711 ;; Registers used:
  7712 ;;		wreg, status,2, status,0, pclath, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        4 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    7
  7725 ;; This function calls:
  7726 ;;		___awtoft
  7727 ;;		___ftdiv
  7728 ;;		___fttol
  7729 ;; This function is called by:
  7730 ;;		_Flash_Memory_Initialization
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _setPercentValue
  7736  0E3A                     _setPercentValue:	
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  7740                           ;setPercentValue@value stored from wreg
  7741  0E3A  0020               	movlb	0	; select bank0
  7742  0E3B  00CC               	movwf	setPercentValue@value
  7743                           
  7744                           ;Dimmer_B1.c: 778: float i = ((char)((100-25)*0.8)) - ((char)((100-60)*0.8));
  7745  0E3C  3000               	movlw	0
  7746  0E3D  00CD               	movwf	setPercentValue@i
  7747  0E3E  30E0               	movlw	224
  7748  0E3F  00CE               	movwf	setPercentValue@i+1
  7749  0E40  3041               	movlw	65
  7750  0E41  00CF               	movwf	setPercentValue@i+2
  7751                           
  7752                           ;Dimmer_B1.c: 779: i /= 100;
  7753  0E42  3000               	movlw	0
  7754  0E43  00AE               	movwf	___ftdiv@f2
  7755  0E44  30C8               	movlw	200
  7756  0E45  00AF               	movwf	___ftdiv@f2+1
  7757  0E46  3042               	movlw	66
  7758  0E47  00B0               	movwf	___ftdiv@f2+2
  7759  0E48  084D               	movf	setPercentValue@i,w
  7760  0E49  00B1               	movwf	___ftdiv@f1
  7761  0E4A  084E               	movf	setPercentValue@i+1,w
  7762  0E4B  00B2               	movwf	___ftdiv@f1+1
  7763  0E4C  084F               	movf	setPercentValue@i+2,w
  7764  0E4D  00B3               	movwf	___ftdiv@f1+2
  7765  0E4E  3184  2404  318E   	fcall	___ftdiv
  7766  0E51  0020               	movlb	0	; select bank0
  7767  0E52  082E               	movf	?___ftdiv,w
  7768  0E53  00CD               	movwf	setPercentValue@i
  7769  0E54  082F               	movf	?___ftdiv+1,w
  7770  0E55  00CE               	movwf	setPercentValue@i+1
  7771  0E56  0830               	movf	?___ftdiv+2,w
  7772  0E57  00CF               	movwf	setPercentValue@i+2
  7773                           
  7774                           ;Dimmer_B1.c: 780: return (100 - (char) ((value - ((char)((100-60)*0.8))) / i));
  7775  0E58  084C               	movf	setPercentValue@value,w
  7776  0E59  3EE0               	addlw	224
  7777  0E5A  00A8               	movwf	___awtoft@c
  7778  0E5B  30FF               	movlw	255
  7779  0E5C  1803               	skipnc
  7780  0E5D  3000               	movlw	0
  7781  0E5E  00A9               	movwf	___awtoft@c+1
  7782  0E5F  318B  2385  318E   	fcall	___awtoft
  7783  0E62  0020               	movlb	0	; select bank0
  7784  0E63  0828               	movf	?___awtoft,w
  7785  0E64  00B1               	movwf	___ftdiv@f1
  7786  0E65  0829               	movf	?___awtoft+1,w
  7787  0E66  00B2               	movwf	___ftdiv@f1+1
  7788  0E67  082A               	movf	?___awtoft+2,w
  7789  0E68  00B3               	movwf	___ftdiv@f1+2
  7790  0E69  084D               	movf	setPercentValue@i,w
  7791  0E6A  00AE               	movwf	___ftdiv@f2
  7792  0E6B  084E               	movf	setPercentValue@i+1,w
  7793  0E6C  00AF               	movwf	___ftdiv@f2+1
  7794  0E6D  084F               	movf	setPercentValue@i+2,w
  7795  0E6E  00B0               	movwf	___ftdiv@f2+2
  7796  0E6F  3184  2404  318E   	fcall	___ftdiv
  7797  0E72  0020               	movlb	0	; select bank0
  7798  0E73  082E               	movf	?___ftdiv,w
  7799  0E74  00BE               	movwf	___fttol@f1
  7800  0E75  082F               	movf	?___ftdiv+1,w
  7801  0E76  00BF               	movwf	___fttol@f1+1
  7802  0E77  0830               	movf	?___ftdiv+2,w
  7803  0E78  00C0               	movwf	___fttol@f1+2
  7804  0E79  3185  2546         	fcall	___fttol
  7805  0E7B  0020               	movlb	0	; select bank0
  7806  0E7C  033E               	decf	?___fttol,w
  7807  0E7D  3AFF               	xorlw	255
  7808  0E7E  3E64               	addlw	100
  7809  0E7F  0008               	return
  7810  0E80                     __end_of_setPercentValue:	
  7811                           
  7812                           	psect	text45
  7813  0546                     __ptext45:	
  7814 ;; *************** function ___fttol *****************
  7815 ;; Defined at:
  7816 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  f1              3   30[BANK0 ] float 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  lval            4   39[BANK0 ] unsigned long 
  7821 ;;  exp1            1   43[BANK0 ] unsigned char 
  7822 ;;  sign1           1   38[BANK0 ] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  4   30[BANK0 ] long 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;Total ram usage:       14 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    5
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_setPercentValue
  7843 ;;		_getPercentValue
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function ___fttol
  7849  0546                     ___fttol:	
  7850                           
  7851                           ;incstack = 0
  7852                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7853  0546  0020               	movlb	0	; select bank0
  7854  0547  083E               	movf	___fttol@f1,w
  7855  0548  00C2               	movwf	??___fttol
  7856  0549  083F               	movf	___fttol@f1+1,w
  7857  054A  00C3               	movwf	??___fttol+1
  7858  054B  0840               	movf	___fttol@f1+2,w
  7859  054C  00C4               	movwf	??___fttol+2
  7860  054D  1003               	clrc
  7861  054E  0D43               	rlf	??___fttol+1,w
  7862  054F  0D44               	rlf	??___fttol+2,w
  7863  0550  00C5               	movwf	??___fttol+3
  7864  0551  0845               	movf	??___fttol+3,w
  7865  0552  00CB               	movwf	___fttol@exp1
  7866  0553  08CB               	movf	___fttol@exp1,f
  7867  0554  1D03               	skipz
  7868  0555  2D5F               	goto	l4299
  7869  0556  3000               	movlw	0
  7870  0557  00C1               	movwf	?___fttol+3
  7871  0558  3000               	movlw	0
  7872  0559  00C0               	movwf	?___fttol+2
  7873  055A  3000               	movlw	0
  7874  055B  00BF               	movwf	?___fttol+1
  7875  055C  3000               	movlw	0
  7876  055D  00BE               	movwf	?___fttol
  7877  055E  0008               	return
  7878  055F                     l4299:	
  7879  055F  083E               	movf	___fttol@f1,w
  7880  0560  00C2               	movwf	??___fttol
  7881  0561  083F               	movf	___fttol@f1+1,w
  7882  0562  00C3               	movwf	??___fttol+1
  7883  0563  0840               	movf	___fttol@f1+2,w
  7884  0564  00C4               	movwf	??___fttol+2
  7885  0565  3017               	movlw	23
  7886  0566                     u3545:	
  7887  0566  36C4               	lsrf	??___fttol+2,f
  7888  0567  0CC3               	rrf	??___fttol+1,f
  7889  0568  0CC2               	rrf	??___fttol,f
  7890  0569  0B89               	decfsz	9,f
  7891  056A  2D66               	goto	u3545
  7892  056B  0842               	movf	??___fttol,w
  7893  056C  00C5               	movwf	??___fttol+3
  7894  056D  0845               	movf	??___fttol+3,w
  7895  056E  00C6               	movwf	___fttol@sign1
  7896  056F  17BF               	bsf	___fttol@f1+1,7
  7897  0570  30FF               	movlw	255
  7898  0571  05BE               	andwf	___fttol@f1,f
  7899  0572  30FF               	movlw	255
  7900  0573  05BF               	andwf	___fttol@f1+1,f
  7901  0574  3000               	movlw	0
  7902  0575  05C0               	andwf	___fttol@f1+2,f
  7903  0576  083E               	movf	___fttol@f1,w
  7904  0577  00C7               	movwf	___fttol@lval
  7905  0578  083F               	movf	___fttol@f1+1,w
  7906  0579  00C8               	movwf	___fttol@lval+1
  7907  057A  0840               	movf	___fttol@f1+2,w
  7908  057B  00C9               	movwf	___fttol@lval+2
  7909  057C  01CA               	clrf	___fttol@lval+3
  7910  057D  308E               	movlw	142
  7911  057E  02CB               	subwf	___fttol@exp1,f
  7912  057F  1FCB               	btfss	___fttol@exp1,7
  7913  0580  2D9D               	goto	l4319
  7914  0581  084B               	movf	___fttol@exp1,w
  7915  0582  3A80               	xorlw	128
  7916  0583  3E8F               	addlw	143
  7917  0584  1803               	skipnc
  7918  0585  2D8F               	goto	l4317
  7919  0586  3000               	movlw	0
  7920  0587  00C1               	movwf	?___fttol+3
  7921  0588  3000               	movlw	0
  7922  0589  00C0               	movwf	?___fttol+2
  7923  058A  3000               	movlw	0
  7924  058B  00BF               	movwf	?___fttol+1
  7925  058C  3000               	movlw	0
  7926  058D  00BE               	movwf	?___fttol
  7927  058E  0008               	return
  7928  058F                     l4317:	
  7929  058F  3001               	movlw	1
  7930  0590                     u3575:	
  7931  0590  36CA               	lsrf	___fttol@lval+3,f
  7932  0591  0CC9               	rrf	___fttol@lval+2,f
  7933  0592  0CC8               	rrf	___fttol@lval+1,f
  7934  0593  0CC7               	rrf	___fttol@lval,f
  7935  0594  0B89               	decfsz	9,f
  7936  0595  2D90               	goto	u3575
  7937  0596  3001               	movlw	1
  7938  0597  00C2               	movwf	??___fttol
  7939  0598  0842               	movf	??___fttol,w
  7940  0599  07CB               	addwf	___fttol@exp1,f
  7941  059A  1903               	btfsc	3,2
  7942  059B  2DB6               	goto	l4329
  7943  059C  2D8F               	goto	l4317
  7944  059D                     l4319:	
  7945  059D  3018               	movlw	24
  7946  059E  024B               	subwf	___fttol@exp1,w
  7947  059F  1C03               	skipc
  7948  05A0  2DB3               	goto	l4327
  7949  05A1  3000               	movlw	0
  7950  05A2  00C1               	movwf	?___fttol+3
  7951  05A3  3000               	movlw	0
  7952  05A4  00C0               	movwf	?___fttol+2
  7953  05A5  3000               	movlw	0
  7954  05A6  00BF               	movwf	?___fttol+1
  7955  05A7  3000               	movlw	0
  7956  05A8  00BE               	movwf	?___fttol
  7957  05A9  0008               	return
  7958  05AA                     l4325:	
  7959  05AA  3001               	movlw	1
  7960  05AB                     u3605:	
  7961  05AB  35C7               	lslf	___fttol@lval,f
  7962  05AC  0DC8               	rlf	___fttol@lval+1,f
  7963  05AD  0DC9               	rlf	___fttol@lval+2,f
  7964  05AE  0DCA               	rlf	___fttol@lval+3,f
  7965  05AF  0B89               	decfsz	9,f
  7966  05B0  2DAB               	goto	u3605
  7967  05B1  3001               	movlw	1
  7968  05B2  02CB               	subwf	___fttol@exp1,f
  7969  05B3                     l4327:	
  7970  05B3  08CB               	movf	___fttol@exp1,f
  7971  05B4  1D03               	skipz
  7972  05B5  2DAA               	goto	l4325
  7973  05B6                     l4329:	
  7974  05B6  0846               	movf	___fttol@sign1,w
  7975  05B7  1903               	btfsc	3,2
  7976  05B8  2DC4               	goto	l4333
  7977  05B9  09C7               	comf	___fttol@lval,f
  7978  05BA  09C8               	comf	___fttol@lval+1,f
  7979  05BB  09C9               	comf	___fttol@lval+2,f
  7980  05BC  09CA               	comf	___fttol@lval+3,f
  7981  05BD  0AC7               	incf	___fttol@lval,f
  7982  05BE  1903               	skipnz
  7983  05BF  0AC8               	incf	___fttol@lval+1,f
  7984  05C0  1903               	skipnz
  7985  05C1  0AC9               	incf	___fttol@lval+2,f
  7986  05C2  1903               	skipnz
  7987  05C3  0ACA               	incf	___fttol@lval+3,f
  7988  05C4                     l4333:	
  7989  05C4  084A               	movf	___fttol@lval+3,w
  7990  05C5  00C1               	movwf	?___fttol+3
  7991  05C6  0849               	movf	___fttol@lval+2,w
  7992  05C7  00C0               	movwf	?___fttol+2
  7993  05C8  0848               	movf	___fttol@lval+1,w
  7994  05C9  00BF               	movwf	?___fttol+1
  7995  05CA  0847               	movf	___fttol@lval,w
  7996  05CB  00BE               	movwf	?___fttol
  7997  05CC  0008               	return
  7998  05CD                     __end_of___fttol:	
  7999                           
  8000                           	psect	text46
  8001  0404                     __ptext46:	
  8002 ;; *************** function ___ftdiv *****************
  8003 ;; Defined at:
  8004 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  f2              3   14[BANK0 ] float 
  8007 ;;  f1              3   17[BANK0 ] float 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  f3              3   25[BANK0 ] float 
  8010 ;;  sign            1   29[BANK0 ] unsigned char 
  8011 ;;  exp             1   28[BANK0 ] unsigned char 
  8012 ;;  cntr            1   24[BANK0 ] unsigned char 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  3   14[BANK0 ] float 
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0, pclath, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:       16 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    6
  8029 ;; This function calls:
  8030 ;;		___ftpack
  8031 ;; This function is called by:
  8032 ;;		_setPercentValue
  8033 ;;		_getPercentValue
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function ___ftdiv
  8039  0404                     ___ftdiv:	
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8043  0404  0020               	movlb	0	; select bank0
  8044  0405  0831               	movf	___ftdiv@f1,w
  8045  0406  00B4               	movwf	??___ftdiv
  8046  0407  0832               	movf	___ftdiv@f1+1,w
  8047  0408  00B5               	movwf	??___ftdiv+1
  8048  0409  0833               	movf	___ftdiv@f1+2,w
  8049  040A  00B6               	movwf	??___ftdiv+2
  8050  040B  1003               	clrc
  8051  040C  0D35               	rlf	??___ftdiv+1,w
  8052  040D  0D36               	rlf	??___ftdiv+2,w
  8053  040E  00B7               	movwf	??___ftdiv+3
  8054  040F  0837               	movf	??___ftdiv+3,w
  8055  0410  00BC               	movwf	___ftdiv@exp
  8056  0411  08BC               	movf	___ftdiv@exp,f
  8057  0412  1D03               	skipz
  8058  0413  2C1B               	goto	l4257
  8059  0414  3000               	movlw	0
  8060  0415  00AE               	movwf	?___ftdiv
  8061  0416  3000               	movlw	0
  8062  0417  00AF               	movwf	?___ftdiv+1
  8063  0418  3000               	movlw	0
  8064  0419  00B0               	movwf	?___ftdiv+2
  8065  041A  0008               	return
  8066  041B                     l4257:	
  8067  041B  082E               	movf	___ftdiv@f2,w
  8068  041C  00B4               	movwf	??___ftdiv
  8069  041D  082F               	movf	___ftdiv@f2+1,w
  8070  041E  00B5               	movwf	??___ftdiv+1
  8071  041F  0830               	movf	___ftdiv@f2+2,w
  8072  0420  00B6               	movwf	??___ftdiv+2
  8073  0421  1003               	clrc
  8074  0422  0D35               	rlf	??___ftdiv+1,w
  8075  0423  0D36               	rlf	??___ftdiv+2,w
  8076  0424  00B7               	movwf	??___ftdiv+3
  8077  0425  0837               	movf	??___ftdiv+3,w
  8078  0426  00BD               	movwf	___ftdiv@sign
  8079  0427  08BD               	movf	___ftdiv@sign,f
  8080  0428  1D03               	skipz
  8081  0429  2C31               	goto	l4263
  8082  042A  3000               	movlw	0
  8083  042B  00AE               	movwf	?___ftdiv
  8084  042C  3000               	movlw	0
  8085  042D  00AF               	movwf	?___ftdiv+1
  8086  042E  3000               	movlw	0
  8087  042F  00B0               	movwf	?___ftdiv+2
  8088  0430  0008               	return
  8089  0431                     l4263:	
  8090  0431  3000               	movlw	0
  8091  0432  00B9               	movwf	___ftdiv@f3
  8092  0433  3000               	movlw	0
  8093  0434  00BA               	movwf	___ftdiv@f3+1
  8094  0435  3000               	movlw	0
  8095  0436  00BB               	movwf	___ftdiv@f3+2
  8096  0437  3089               	movlw	137
  8097  0438  073D               	addwf	___ftdiv@sign,w
  8098  0439  00B4               	movwf	??___ftdiv
  8099  043A  0834               	movf	??___ftdiv,w
  8100  043B  02BC               	subwf	___ftdiv@exp,f
  8101  043C  0831               	movf	___ftdiv@f1,w
  8102  043D  00B4               	movwf	??___ftdiv
  8103  043E  0832               	movf	___ftdiv@f1+1,w
  8104  043F  00B5               	movwf	??___ftdiv+1
  8105  0440  0833               	movf	___ftdiv@f1+2,w
  8106  0441  00B6               	movwf	??___ftdiv+2
  8107  0442  3010               	movlw	16
  8108  0443                     u3475:	
  8109  0443  36B6               	lsrf	??___ftdiv+2,f
  8110  0444  0CB5               	rrf	??___ftdiv+1,f
  8111  0445  0CB4               	rrf	??___ftdiv,f
  8112  0446  0B89               	decfsz	9,f
  8113  0447  2C43               	goto	u3475
  8114  0448  0834               	movf	??___ftdiv,w
  8115  0449  00B7               	movwf	??___ftdiv+3
  8116  044A  0837               	movf	??___ftdiv+3,w
  8117  044B  00BD               	movwf	___ftdiv@sign
  8118  044C  082E               	movf	___ftdiv@f2,w
  8119  044D  00B4               	movwf	??___ftdiv
  8120  044E  082F               	movf	___ftdiv@f2+1,w
  8121  044F  00B5               	movwf	??___ftdiv+1
  8122  0450  0830               	movf	___ftdiv@f2+2,w
  8123  0451  00B6               	movwf	??___ftdiv+2
  8124  0452  3010               	movlw	16
  8125  0453                     u3485:	
  8126  0453  36B6               	lsrf	??___ftdiv+2,f
  8127  0454  0CB5               	rrf	??___ftdiv+1,f
  8128  0455  0CB4               	rrf	??___ftdiv,f
  8129  0456  0B89               	decfsz	9,f
  8130  0457  2C53               	goto	u3485
  8131  0458  0834               	movf	??___ftdiv,w
  8132  0459  00B7               	movwf	??___ftdiv+3
  8133  045A  0837               	movf	??___ftdiv+3,w
  8134  045B  06BD               	xorwf	___ftdiv@sign,f
  8135  045C  3080               	movlw	128
  8136  045D  00B4               	movwf	??___ftdiv
  8137  045E  0834               	movf	??___ftdiv,w
  8138  045F  05BD               	andwf	___ftdiv@sign,f
  8139  0460  17B2               	bsf	___ftdiv@f1+1,7
  8140  0461  30FF               	movlw	255
  8141  0462  05B1               	andwf	___ftdiv@f1,f
  8142  0463  30FF               	movlw	255
  8143  0464  05B2               	andwf	___ftdiv@f1+1,f
  8144  0465  3000               	movlw	0
  8145  0466  05B3               	andwf	___ftdiv@f1+2,f
  8146  0467  17AF               	bsf	___ftdiv@f2+1,7
  8147  0468  30FF               	movlw	255
  8148  0469  05AE               	andwf	___ftdiv@f2,f
  8149  046A  30FF               	movlw	255
  8150  046B  05AF               	andwf	___ftdiv@f2+1,f
  8151  046C  3000               	movlw	0
  8152  046D  05B0               	andwf	___ftdiv@f2+2,f
  8153  046E  3018               	movlw	24
  8154  046F  00B4               	movwf	??___ftdiv
  8155  0470  0834               	movf	??___ftdiv,w
  8156  0471  00B8               	movwf	___ftdiv@cntr
  8157  0472                     l4277:	
  8158  0472  3001               	movlw	1
  8159  0473                     u3495:	
  8160  0473  35B9               	lslf	___ftdiv@f3,f
  8161  0474  0DBA               	rlf	___ftdiv@f3+1,f
  8162  0475  0DBB               	rlf	___ftdiv@f3+2,f
  8163  0476  0B89               	decfsz	9,f
  8164  0477  2C73               	goto	u3495
  8165  0478  0830               	movf	___ftdiv@f2+2,w
  8166  0479  0233               	subwf	___ftdiv@f1+2,w
  8167  047A  1D03               	skipz
  8168  047B  2C82               	goto	u3505
  8169  047C  082F               	movf	___ftdiv@f2+1,w
  8170  047D  0232               	subwf	___ftdiv@f1+1,w
  8171  047E  1D03               	skipz
  8172  047F  2C82               	goto	u3505
  8173  0480  082E               	movf	___ftdiv@f2,w
  8174  0481  0231               	subwf	___ftdiv@f1,w
  8175  0482                     u3505:	
  8176  0482  1C03               	skipc
  8177  0483  2C8B               	goto	l4285
  8178  0484  082E               	movf	___ftdiv@f2,w
  8179  0485  02B1               	subwf	___ftdiv@f1,f
  8180  0486  082F               	movf	___ftdiv@f2+1,w
  8181  0487  3BB2               	subwfb	___ftdiv@f1+1,f
  8182  0488  0830               	movf	___ftdiv@f2+2,w
  8183  0489  3BB3               	subwfb	___ftdiv@f1+2,f
  8184  048A  1439               	bsf	___ftdiv@f3,0
  8185  048B                     l4285:	
  8186  048B  3001               	movlw	1
  8187  048C                     u3515:	
  8188  048C  35B1               	lslf	___ftdiv@f1,f
  8189  048D  0DB2               	rlf	___ftdiv@f1+1,f
  8190  048E  0DB3               	rlf	___ftdiv@f1+2,f
  8191  048F  0B89               	decfsz	9,f
  8192  0490  2C8C               	goto	u3515
  8193  0491  3001               	movlw	1
  8194  0492  02B8               	subwf	___ftdiv@cntr,f
  8195  0493  1D03               	btfss	3,2
  8196  0494  2C72               	goto	l4277
  8197  0495  0839               	movf	___ftdiv@f3,w
  8198  0496  00A0               	movwf	___ftpack@arg
  8199  0497  083A               	movf	___ftdiv@f3+1,w
  8200  0498  00A1               	movwf	___ftpack@arg+1
  8201  0499  083B               	movf	___ftdiv@f3+2,w
  8202  049A  00A2               	movwf	___ftpack@arg+2
  8203  049B  083C               	movf	___ftdiv@exp,w
  8204  049C  00B4               	movwf	??___ftdiv
  8205  049D  0834               	movf	??___ftdiv,w
  8206  049E  00A3               	movwf	___ftpack@exp
  8207  049F  083D               	movf	___ftdiv@sign,w
  8208  04A0  00B5               	movwf	??___ftdiv+1
  8209  04A1  0835               	movf	??___ftdiv+1,w
  8210  04A2  00A4               	movwf	___ftpack@sign
  8211  04A3  3186  2639         	fcall	___ftpack
  8212  04A5  0020               	movlb	0	; select bank0
  8213  04A6  0820               	movf	?___ftpack,w
  8214  04A7  00AE               	movwf	?___ftdiv
  8215  04A8  0821               	movf	?___ftpack+1,w
  8216  04A9  00AF               	movwf	?___ftdiv+1
  8217  04AA  0822               	movf	?___ftpack+2,w
  8218  04AB  00B0               	movwf	?___ftdiv+2
  8219  04AC  0008               	return
  8220  04AD                     __end_of___ftdiv:	
  8221                           
  8222                           	psect	text47
  8223  0B85                     __ptext47:	
  8224 ;; *************** function ___awtoft *****************
  8225 ;; Defined at:
  8226 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  c               2    8[BANK0 ] int 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  sign            1   13[BANK0 ] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  3    8[BANK0 ] float 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0, pclath, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8240 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;Total ram usage:        6 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    6
  8247 ;; This function calls:
  8248 ;;		___ftpack
  8249 ;; This function is called by:
  8250 ;;		_setPercentValue
  8251 ;;		_getPercentValue
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           
  8256                           ;psect for function ___awtoft
  8257  0B85                     ___awtoft:	
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8261  0B85  0020               	movlb	0	; select bank0
  8262  0B86  01AD               	clrf	___awtoft@sign
  8263  0B87  1FA9               	btfss	___awtoft@c+1,7
  8264  0B88  2B90               	goto	l5857
  8265  0B89  09A8               	comf	___awtoft@c,f
  8266  0B8A  09A9               	comf	___awtoft@c+1,f
  8267  0B8B  0AA8               	incf	___awtoft@c,f
  8268  0B8C  1903               	skipnz
  8269  0B8D  0AA9               	incf	___awtoft@c+1,f
  8270  0B8E  01AD               	clrf	___awtoft@sign
  8271  0B8F  0AAD               	incf	___awtoft@sign,f
  8272  0B90                     l5857:	
  8273  0B90  0828               	movf	___awtoft@c,w
  8274  0B91  00A0               	movwf	___ftpack@arg
  8275  0B92  0829               	movf	___awtoft@c+1,w
  8276  0B93  00A1               	movwf	___ftpack@arg+1
  8277  0B94  01A2               	clrf	___ftpack@arg+2
  8278  0B95  308E               	movlw	142
  8279  0B96  00AB               	movwf	??___awtoft
  8280  0B97  082B               	movf	??___awtoft,w
  8281  0B98  00A3               	movwf	___ftpack@exp
  8282  0B99  082D               	movf	___awtoft@sign,w
  8283  0B9A  00AC               	movwf	??___awtoft+1
  8284  0B9B  082C               	movf	??___awtoft+1,w
  8285  0B9C  00A4               	movwf	___ftpack@sign
  8286  0B9D  3186  2639         	fcall	___ftpack
  8287  0B9F  0020               	movlb	0	; select bank0
  8288  0BA0  0820               	movf	?___ftpack,w
  8289  0BA1  00A8               	movwf	?___awtoft
  8290  0BA2  0821               	movf	?___ftpack+1,w
  8291  0BA3  00A9               	movwf	?___awtoft+1
  8292  0BA4  0822               	movf	?___ftpack+2,w
  8293  0BA5  00AA               	movwf	?___awtoft+2
  8294  0BA6  0008               	return
  8295  0BA7                     __end_of___awtoft:	
  8296                           
  8297                           	psect	text48
  8298  0639                     __ptext48:	
  8299 ;; *************** function ___ftpack *****************
  8300 ;; Defined at:
  8301 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  arg             3    0[BANK0 ] unsigned um
  8304 ;;  exp             1    3[BANK0 ] unsigned char 
  8305 ;;  sign            1    4[BANK0 ] unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  3    0[BANK0 ] float 
  8310 ;; Registers used:
  8311 ;;		wreg, status,2, status,0
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        8 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    5
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		___awtoft
  8328 ;;		___ftdiv
  8329 ;;		___ftmul
  8330 ;;		___ftadd
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function ___ftpack
  8336  0639                     ___ftpack:	
  8337                           
  8338                           ;incstack = 0
  8339                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8340  0639  0020               	movlb	0	; select bank0
  8341  063A  0823               	movf	___ftpack@exp,w
  8342  063B  1903               	btfsc	3,2
  8343  063C  2E42               	goto	l3955
  8344  063D  0822               	movf	___ftpack@arg+2,w
  8345  063E  0421               	iorwf	___ftpack@arg+1,w
  8346  063F  0420               	iorwf	___ftpack@arg,w
  8347  0640  1D03               	skipz
  8348  0641  2E53               	goto	l3961
  8349  0642                     l3955:	
  8350  0642  3000               	movlw	0
  8351  0643  00A0               	movwf	?___ftpack
  8352  0644  3000               	movlw	0
  8353  0645  00A1               	movwf	?___ftpack+1
  8354  0646  3000               	movlw	0
  8355  0647  00A2               	movwf	?___ftpack+2
  8356  0648  0008               	return
  8357  0649                     l3959:	
  8358  0649  3001               	movlw	1
  8359  064A  00A5               	movwf	??___ftpack
  8360  064B  0825               	movf	??___ftpack,w
  8361  064C  07A3               	addwf	___ftpack@exp,f
  8362  064D  3001               	movlw	1
  8363  064E                     u3015:	
  8364  064E  36A2               	lsrf	___ftpack@arg+2,f
  8365  064F  0CA1               	rrf	___ftpack@arg+1,f
  8366  0650  0CA0               	rrf	___ftpack@arg,f
  8367  0651  0B89               	decfsz	9,f
  8368  0652  2E4E               	goto	u3015
  8369  0653                     l3961:	
  8370  0653  30FE               	movlw	254
  8371  0654  0522               	andwf	___ftpack@arg+2,w
  8372  0655  1903               	btfsc	3,2
  8373  0656  2E6C               	goto	l1925
  8374  0657  2E49               	goto	l3959
  8375  0658                     l3963:	
  8376  0658  3001               	movlw	1
  8377  0659  00A5               	movwf	??___ftpack
  8378  065A  0825               	movf	??___ftpack,w
  8379  065B  07A3               	addwf	___ftpack@exp,f
  8380  065C  3001               	movlw	1
  8381  065D  07A0               	addwf	___ftpack@arg,f
  8382  065E  3000               	movlw	0
  8383  065F  1803               	skipnc
  8384  0660  3001               	movlw	1
  8385  0661  07A1               	addwf	___ftpack@arg+1,f
  8386  0662  3000               	movlw	0
  8387  0663  1803               	skipnc
  8388  0664  3001               	movlw	1
  8389  0665  07A2               	addwf	___ftpack@arg+2,f
  8390  0666  3001               	movlw	1
  8391  0667                     u3035:	
  8392  0667  36A2               	lsrf	___ftpack@arg+2,f
  8393  0668  0CA1               	rrf	___ftpack@arg+1,f
  8394  0669  0CA0               	rrf	___ftpack@arg,f
  8395  066A  0B89               	decfsz	9,f
  8396  066B  2E67               	goto	u3035
  8397  066C                     l1925:	
  8398  066C  30FF               	movlw	255
  8399  066D  0522               	andwf	___ftpack@arg+2,w
  8400  066E  1903               	btfsc	3,2
  8401  066F  2E79               	goto	l3971
  8402  0670  2E58               	goto	l3963
  8403  0671                     l3969:	
  8404  0671  3001               	movlw	1
  8405  0672  02A3               	subwf	___ftpack@exp,f
  8406  0673  3001               	movlw	1
  8407  0674                     u3055:	
  8408  0674  35A0               	lslf	___ftpack@arg,f
  8409  0675  0DA1               	rlf	___ftpack@arg+1,f
  8410  0676  0DA2               	rlf	___ftpack@arg+2,f
  8411  0677  0B89               	decfsz	9,f
  8412  0678  2E74               	goto	u3055
  8413  0679                     l3971:	
  8414  0679  1FA1               	btfss	___ftpack@arg+1,7
  8415  067A  2E71               	goto	l3969
  8416  067B  1823               	btfsc	___ftpack@exp,0
  8417  067C  2E83               	goto	l1931
  8418  067D  30FF               	movlw	255
  8419  067E  05A0               	andwf	___ftpack@arg,f
  8420  067F  307F               	movlw	127
  8421  0680  05A1               	andwf	___ftpack@arg+1,f
  8422  0681  30FF               	movlw	255
  8423  0682  05A2               	andwf	___ftpack@arg+2,f
  8424  0683                     l1931:	
  8425  0683  1003               	clrc
  8426  0684  0CA3               	rrf	___ftpack@exp,f
  8427  0685  0823               	movf	___ftpack@exp,w
  8428  0686  00A5               	movwf	??___ftpack
  8429  0687  01A6               	clrf	??___ftpack+1
  8430  0688  01A7               	clrf	??___ftpack+2
  8431  0689  3010               	movlw	16
  8432  068A                     u3085:	
  8433  068A  35A5               	lslf	??___ftpack,f
  8434  068B  0DA6               	rlf	??___ftpack+1,f
  8435  068C  0DA7               	rlf	??___ftpack+2,f
  8436  068D  0B89               	decfsz	9,f
  8437  068E  2E8A               	goto	u3085
  8438  068F  0825               	movf	??___ftpack,w
  8439  0690  04A0               	iorwf	___ftpack@arg,f
  8440  0691  0826               	movf	??___ftpack+1,w
  8441  0692  04A1               	iorwf	___ftpack@arg+1,f
  8442  0693  0827               	movf	??___ftpack+2,w
  8443  0694  04A2               	iorwf	___ftpack@arg+2,f
  8444  0695  0824               	movf	___ftpack@sign,w
  8445  0696  1903               	btfsc	3,2
  8446  0697  0008               	return
  8447  0698  17A2               	bsf	___ftpack@arg+2,7
  8448  0699  0008               	return
  8449  069A                     __end_of___ftpack:	
  8450                           
  8451                           	psect	text49
  8452  0C4F                     __ptext49:	
  8453 ;; *************** function _Flash_Memory_Write *****************
  8454 ;; Defined at:
  8455 ;;		line 939 in file "../src/MCU_B1.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  i               1    1[BANK0 ] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;		None               void
  8462 ;; Registers used:
  8463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;Total ram usage:        2 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:    6
  8476 ;; This function calls:
  8477 ;;		_Flash_Memory_Unlock
  8478 ;; This function is called by:
  8479 ;;		_Flash_Memory_Initialization
  8480 ;;		_Flash_Memory_Modify
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           
  8485                           ;psect for function _Flash_Memory_Write
  8486  0C4F                     _Flash_Memory_Write:	
  8487                           
  8488                           ;MCU_B1.c: 940: char i = 0;
  8489                           
  8490                           ;incstack = 0
  8491                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8492  0C4F  0020               	movlb	0	; select bank0
  8493  0C50  01A1               	clrf	Flash_Memory_Write@i
  8494                           
  8495                           ;MCU_B1.c: 941: CFGS = 0;
  8496  0C51  0023               	movlb	3	; select bank3
  8497  0C52  1315               	bcf	21,6	;volatile
  8498                           
  8499                           ;MCU_B1.c: 942: PMADRH = 0x30;
  8500  0C53  3030               	movlw	48
  8501  0C54  0092               	movwf	18	;volatile
  8502                           
  8503                           ;MCU_B1.c: 943: PMDATH = 0;
  8504  0C55  0194               	clrf	20	;volatile
  8505                           
  8506                           ;MCU_B1.c: 944: FREE = 0;
  8507  0C56  1215               	bcf	21,4	;volatile
  8508                           
  8509                           ;MCU_B1.c: 945: LWLO = 1;
  8510  0C57  1695               	bsf	21,5	;volatile
  8511                           
  8512                           ;MCU_B1.c: 946: WREN = 1;
  8513  0C58  1515               	bsf	21,2	;volatile
  8514                           
  8515                           ;MCU_B1.c: 947: for (i = 0; i < 32; i++) {
  8516  0C59  0020               	movlb	0	; select bank0
  8517  0C5A  01A1               	clrf	Flash_Memory_Write@i
  8518  0C5B  3020               	movlw	32
  8519  0C5C  0221               	subwf	Flash_Memory_Write@i,w
  8520  0C5D  1803               	btfsc	3,0
  8521  0C5E  2C77               	goto	l904
  8522  0C5F                     l5725:	
  8523                           
  8524                           ;MCU_B1.c: 948: PMADRL = i;
  8525  0C5F  0821               	movf	Flash_Memory_Write@i,w
  8526  0C60  0023               	movlb	3	; select bank3
  8527  0C61  0091               	movwf	17	;volatile
  8528                           
  8529                           ;MCU_B1.c: 949: PMDATL = Memory.Data[i];
  8530  0C62  0020               	movlb	0	; select bank0
  8531  0C63  0821               	movf	Flash_Memory_Write@i,w
  8532  0C64  3E20               	addlw	_Memory& (0+255)
  8533  0C65  0086               	movwf	6
  8534  0C66  3001               	movlw	1	; select bank2/3
  8535  0C67  0087               	movwf	7
  8536  0C68  0801               	movf	1,w
  8537  0C69  0023               	movlb	3	; select bank3
  8538  0C6A  0093               	movwf	19	;volatile
  8539                           
  8540                           ;MCU_B1.c: 950: Flash_Memory_Unlock();
  8541  0C6B  3188  204C  318C   	fcall	_Flash_Memory_Unlock
  8542  0C6E  3001               	movlw	1
  8543  0C6F  0020               	movlb	0	; select bank0
  8544  0C70  00A0               	movwf	??_Flash_Memory_Write
  8545  0C71  0820               	movf	??_Flash_Memory_Write,w
  8546  0C72  07A1               	addwf	Flash_Memory_Write@i,f
  8547  0C73  3020               	movlw	32
  8548  0C74  0221               	subwf	Flash_Memory_Write@i,w
  8549  0C75  1C03               	skipc
  8550  0C76  2C5F               	goto	l5725
  8551  0C77                     l904:	
  8552                           
  8553                           ;MCU_B1.c: 951: }
  8554                           ;MCU_B1.c: 952: LWLO = 0;
  8555  0C77  0023               	movlb	3	; select bank3
  8556  0C78  1295               	bcf	21,5	;volatile
  8557                           
  8558                           ;MCU_B1.c: 953: Flash_Memory_Unlock();
  8559  0C79  3188  204C         	fcall	_Flash_Memory_Unlock
  8560                           
  8561                           ;MCU_B1.c: 954: WREN = 0;
  8562  0C7B  0023               	movlb	3	; select bank3
  8563  0C7C  1115               	bcf	21,2	;volatile
  8564  0C7D  0008               	return
  8565  0C7E                     __end_of_Flash_Memory_Write:	
  8566                           
  8567                           	psect	text50
  8568  084C                     __ptext50:	
  8569 ;; *************** function _Flash_Memory_Unlock *****************
  8570 ;; Defined at:
  8571 ;;		line 918 in file "../src/MCU_B1.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;		None               void
  8578 ;; Registers used:
  8579 ;;		wreg
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;Total ram usage:        0 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    5
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_Flash_Memory_Write
  8596 ;;		_Flash_Memory_Erasing
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           
  8601                           ;psect for function _Flash_Memory_Unlock
  8602  084C                     _Flash_Memory_Unlock:	
  8603                           
  8604                           ;MCU_B1.c: 919: PMCON2 = 0x55;
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  8608  084C  3055               	movlw	85
  8609  084D  0023               	movlb	3	; select bank3
  8610  084E  0096               	movwf	22	;volatile
  8611                           
  8612                           ;MCU_B1.c: 920: PMCON2 = 0xaa;
  8613  084F  30AA               	movlw	170
  8614  0850  0096               	movwf	22	;volatile
  8615                           
  8616                           ;MCU_B1.c: 921: WR = 1;
  8617  0851  1495               	bsf	21,1	;volatile
  8618                           
  8619                           ;MCU_B1.c: 922: __nop();
  8620  0852  0000               	nop
  8621                           
  8622                           ;MCU_B1.c: 923: __nop();
  8623  0853  0000               	nop
  8624  0854  0008               	return
  8625  0855                     __end_of_Flash_Memory_Unlock:	
  8626                           
  8627                           	psect	text51
  8628  0A38                     __ptext51:	
  8629 ;; *************** function _Flash_Memory_Read *****************
  8630 ;; Defined at:
  8631 ;;		line 927 in file "../src/MCU_B1.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  address         1    wreg     unsigned char 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  address         1    2[BANK0 ] unsigned char 
  8636 ;;  ret             1    3[BANK0 ] unsigned char 
  8637 ;;  i               1    1[BANK0 ] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      unsigned char 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;Total ram usage:        4 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    5
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_Flash_Memory_Initialization
  8658 ;;		_Flash_Memory_Modify
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           
  8663                           ;psect for function _Flash_Memory_Read
  8664  0A38                     _Flash_Memory_Read:	
  8665                           
  8666                           ;incstack = 0
  8667                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  8668                           ;Flash_Memory_Read@address stored from wreg
  8669  0A38  0020               	movlb	0	; select bank0
  8670  0A39  00A2               	movwf	Flash_Memory_Read@address
  8671                           
  8672                           ;MCU_B1.c: 928: char i = 0, ret = 0;
  8673  0A3A  01A1               	clrf	Flash_Memory_Read@i
  8674  0A3B  01A3               	clrf	Flash_Memory_Read@ret
  8675                           
  8676                           ;MCU_B1.c: 929: PMADRH = 0x30;
  8677  0A3C  3030               	movlw	48
  8678  0A3D  0023               	movlb	3	; select bank3
  8679  0A3E  0092               	movwf	18	;volatile
  8680                           
  8681                           ;MCU_B1.c: 930: PMADRL = address;
  8682  0A3F  0020               	movlb	0	; select bank0
  8683  0A40  0822               	movf	Flash_Memory_Read@address,w
  8684  0A41  0023               	movlb	3	; select bank3
  8685  0A42  0091               	movwf	17	;volatile
  8686                           
  8687                           ;MCU_B1.c: 931: CFGS = 0;
  8688  0A43  1315               	bcf	21,6	;volatile
  8689                           
  8690                           ;MCU_B1.c: 932: RD = 1;
  8691  0A44  1415               	bsf	21,0	;volatile
  8692                           
  8693                           ;MCU_B1.c: 933: i = PMDATH;
  8694  0A45  0814               	movf	20,w	;volatile
  8695  0A46  0020               	movlb	0	; select bank0
  8696  0A47  00A0               	movwf	??_Flash_Memory_Read
  8697  0A48  0820               	movf	??_Flash_Memory_Read,w
  8698  0A49  00A1               	movwf	Flash_Memory_Read@i
  8699                           
  8700                           ;MCU_B1.c: 934: ret = PMDATL;
  8701  0A4A  0023               	movlb	3	; select bank3
  8702  0A4B  0813               	movf	19,w	;volatile
  8703  0A4C  0020               	movlb	0	; select bank0
  8704  0A4D  00A0               	movwf	??_Flash_Memory_Read
  8705  0A4E  0820               	movf	??_Flash_Memory_Read,w
  8706  0A4F  00A3               	movwf	Flash_Memory_Read@ret
  8707                           
  8708                           ;MCU_B1.c: 935: return ret;
  8709  0A50  0823               	movf	Flash_Memory_Read@ret,w
  8710  0A51  0008               	return
  8711  0A52                     __end_of_Flash_Memory_Read:	
  8712                           
  8713                           	psect	text52
  8714  086A                     __ptext52:	
  8715 ;; *************** function _DimmerLights_Main *****************
  8716 ;; Defined at:
  8717 ;;		line 418 in file "../src/Dimmer_B1.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;		None
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;		None
  8722 ;; Return value:  Size  Location     Type
  8723 ;;		None               void
  8724 ;; Registers used:
  8725 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;Total ram usage:        0 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    9
  8738 ;; This function calls:
  8739 ;;		_DimmerLights_Close
  8740 ;;		_setDimmerLights_Main
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _DimmerLights_Main
  8748  086A                     _DimmerLights_Main:	
  8749                           
  8750                           ;Dimmer_B1.c: 421: setDimmerLights_Main(1);
  8751                           
  8752                           ;incstack = 0
  8753                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8754  086A  3001               	movlw	1
  8755  086B  3187  2754  3188   	fcall	_setDimmerLights_Main
  8756                           
  8757                           ;Dimmer_B1.c: 425: setDimmerLights_Main(2);
  8758  086E  3002               	movlw	2
  8759  086F  3187  2754  3188   	fcall	_setDimmerLights_Main
  8760                           
  8761                           ;Dimmer_B1.c: 432: DimmerLights_Close();
  8762  0872  3188  20B2         	fcall	_DimmerLights_Close
  8763  0874  0008               	return
  8764  0875                     __end_of_DimmerLights_Main:	
  8765                           
  8766                           	psect	text53
  8767  0754                     __ptext53:	
  8768 ;; *************** function _setDimmerLights_Main *****************
  8769 ;; Defined at:
  8770 ;;		line 436 in file "../src/Dimmer_B1.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  lights          1    wreg     unsigned char 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  lights          1   14[BANK0 ] unsigned char 
  8775 ;;  clear           1   13[BANK0 ] unsigned char 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;		None               void
  8778 ;; Registers used:
  8779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;Total ram usage:        2 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    8
  8792 ;; This function calls:
  8793 ;;		_DimmerLightsPointSelect
  8794 ;;		_setBuz
  8795 ;;		_setDimmerLights
  8796 ;;		_setDimmerLights_Adj
  8797 ;; This function is called by:
  8798 ;;		_DimmerLights_Main
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           
  8803                           ;psect for function _setDimmerLights_Main
  8804  0754                     _setDimmerLights_Main:	
  8805                           
  8806                           ;incstack = 0
  8807                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8808                           ;setDimmerLights_Main@lights stored from wreg
  8809  0754  0020               	movlb	0	; select bank0
  8810  0755  00AE               	movwf	setDimmerLights_Main@lights
  8811                           
  8812                           ;Dimmer_B1.c: 437: char clear = 1;
  8813  0756  01AD               	clrf	setDimmerLights_Main@clear
  8814  0757  0AAD               	incf	setDimmerLights_Main@clear,f
  8815                           
  8816                           ;Dimmer_B1.c: 438: DimmerLightsPointSelect(lights);
  8817  0758  082E               	movf	setDimmerLights_Main@lights,w
  8818  0759  3189  2176  3187   	fcall	_DimmerLightsPointSelect
  8819                           
  8820                           ;Dimmer_B1.c: 460: if (DimmerLights->Trigger == 1) {
  8821  075C  0020               	movlb	0	; select bank0
  8822  075D  0865               	movf	_DimmerLights,w
  8823  075E  3E08               	addlw	8
  8824  075F  0086               	movwf	6
  8825  0760  0187               	clrf	7
  8826  0761  1D01               	btfss	1,2
  8827  0762  2F7E               	goto	l5921
  8828                           
  8829                           ;Dimmer_B1.c: 461: if (clear == 1) {
  8830  0763  082D               	movf	setDimmerLights_Main@clear,w
  8831  0764  3A01               	xorlw	1
  8832  0765  1D03               	skipz
  8833  0766  0008               	return
  8834                           
  8835                           ;Dimmer_B1.c: 462: DimmerLights->Trigger = 0;
  8836  0767  0865               	movf	_DimmerLights,w
  8837  0768  3E08               	addlw	8
  8838  0769  0086               	movwf	6
  8839  076A  0187               	clrf	7
  8840  076B  1101               	bcf	1,2
  8841                           
  8842                           ;Dimmer_B1.c: 463: if (DimmerLights->Switch == 1) {
  8843  076C  0865               	movf	_DimmerLights,w
  8844  076D  3E08               	addlw	8
  8845  076E  0086               	movwf	6
  8846  076F  0187               	clrf	7
  8847  0770  1C81               	btfss	1,1
  8848  0771  2F78               	goto	l5919
  8849                           
  8850                           ;Dimmer_B1.c: 464: setDimmerLights(lights, 1);
  8851  0772  01A4               	clrf	setDimmerLights@status
  8852  0773  0AA4               	incf	setDimmerLights@status,f
  8853  0774  082E               	movf	setDimmerLights_Main@lights,w
  8854  0775  3185  25CD         	fcall	_setDimmerLights
  8855                           
  8856                           ;Dimmer_B1.c: 465: } else {
  8857  0777  0008               	return
  8858  0778                     l5919:	
  8859                           
  8860                           ;Dimmer_B1.c: 466: setDimmerLights(lights, 0);
  8861  0778  0020               	movlb	0	; select bank0
  8862  0779  01A4               	clrf	setDimmerLights@status
  8863  077A  082E               	movf	setDimmerLights_Main@lights,w
  8864  077B  3185  25CD         	fcall	_setDimmerLights
  8865                           
  8866                           ;Dimmer_B1.c: 467: }
  8867                           ;Dimmer_B1.c: 471: }
  8868                           ;Dimmer_B1.c: 472: } else {
  8869  077D  0008               	return
  8870  077E                     l5921:	
  8871                           
  8872                           ;Dimmer_B1.c: 473: if (DimmerLights->TriggerAdj == 1) {
  8873  077E  0020               	movlb	0	; select bank0
  8874  077F  0865               	movf	_DimmerLights,w
  8875  0780  3E08               	addlw	8
  8876  0781  0086               	movwf	6
  8877  0782  0187               	clrf	7
  8878  0783  1E01               	btfss	1,4
  8879  0784  0008               	return
  8880                           
  8881                           ;Dimmer_B1.c: 474: if (clear == 1) {
  8882  0785  082D               	movf	setDimmerLights_Main@clear,w
  8883  0786  3A01               	xorlw	1
  8884  0787  1D03               	skipz
  8885  0788  0008               	return
  8886                           
  8887                           ;Dimmer_B1.c: 475: DimmerLights->TriggerAdj = 0;
  8888  0789  0865               	movf	_DimmerLights,w
  8889  078A  3E08               	addlw	8
  8890  078B  0086               	movwf	6
  8891  078C  0187               	clrf	7
  8892  078D  1201               	bcf	1,4
  8893                           
  8894                           ;Dimmer_B1.c: 476: if (DimmerLights->AdjGo == 1) {
  8895  078E  0865               	movf	_DimmerLights,w
  8896  078F  3E08               	addlw	8
  8897  0790  0086               	movwf	6
  8898  0791  0187               	clrf	7
  8899  0792  1D81               	btfss	1,3
  8900  0793  2FA3               	goto	l5931
  8901                           
  8902                           ;Dimmer_B1.c: 477: setDimmerLights_Adj(lights, 1);
  8903  0794  01A2               	clrf	setDimmerLights_Adj@status
  8904  0795  0AA2               	incf	setDimmerLights_Adj@status,f
  8905  0796  082E               	movf	setDimmerLights_Main@lights,w
  8906  0797  318C  2421  3187   	fcall	_setDimmerLights_Adj
  8907                           
  8908                           ;Dimmer_B1.c: 478: setBuz(1, 100);
  8909  079A  3064               	movlw	100
  8910  079B  0020               	movlb	0	; select bank0
  8911  079C  00A9               	movwf	setBuz@time
  8912  079D  3000               	movlw	0
  8913  079E  00AA               	movwf	setBuz@time+1
  8914  079F  3001               	movlw	1
  8915  07A0  318D  25F5         	fcall	_setBuz
  8916                           
  8917                           ;Dimmer_B1.c: 479: } else {
  8918  07A2  0008               	return
  8919  07A3                     l5931:	
  8920                           
  8921                           ;Dimmer_B1.c: 480: setDimmerLights_Adj(lights, 0);
  8922  07A3  0020               	movlb	0	; select bank0
  8923  07A4  01A2               	clrf	setDimmerLights_Adj@status
  8924  07A5  082E               	movf	setDimmerLights_Main@lights,w
  8925  07A6  318C  2421         	fcall	_setDimmerLights_Adj
  8926  07A8  0008               	return
  8927  07A9                     __end_of_setDimmerLights_Main:	
  8928                           
  8929                           	psect	text54
  8930  0C21                     __ptext54:	
  8931 ;; *************** function _setDimmerLights_Adj *****************
  8932 ;; Defined at:
  8933 ;;		line 666 in file "../src/Dimmer_B1.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  lights          1    wreg     unsigned char 
  8936 ;;  status          1    2[BANK0 ] unsigned char 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  lights          1    4[BANK0 ] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;		None               void
  8941 ;; Registers used:
  8942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8948 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;Total ram usage:        3 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    6
  8955 ;; This function calls:
  8956 ;;		_DimmerLightsPointSelect
  8957 ;; This function is called by:
  8958 ;;		_setDimmerLights_Main
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _setDimmerLights_Adj
  8964  0C21                     _setDimmerLights_Adj:	
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8968                           ;setDimmerLights_Adj@lights stored from wreg
  8969  0C21  0020               	movlb	0	; select bank0
  8970  0C22  00A4               	movwf	setDimmerLights_Adj@lights
  8971                           
  8972                           ;Dimmer_B1.c: 667: DimmerLightsPointSelect(lights);
  8973  0C23  0824               	movf	setDimmerLights_Adj@lights,w
  8974  0C24  3189  2176  318C   	fcall	_DimmerLightsPointSelect
  8975                           
  8976                           ;Dimmer_B1.c: 668: if (status == 1) {
  8977  0C27  0020               	movlb	0	; select bank0
  8978  0C28  0822               	movf	setDimmerLights_Adj@status,w
  8979  0C29  3A01               	xorlw	1
  8980  0C2A  1D03               	skipz
  8981  0C2B  2C35               	goto	l5663
  8982                           
  8983                           ;Dimmer_B1.c: 669: DimmerLights->AdjFlag = 1;
  8984  0C2C  0865               	movf	_DimmerLights,w
  8985  0C2D  0086               	movwf	6
  8986  0C2E  0187               	clrf	7
  8987  0C2F  1581               	bsf	1,3
  8988                           
  8989                           ;Dimmer_B1.c: 670: DimmerLights->Signal = 1;
  8990  0C30  0865               	movf	_DimmerLights,w
  8991  0C31  0086               	movwf	6
  8992  0C32  0187               	clrf	7
  8993  0C33  1481               	bsf	1,1
  8994                           
  8995                           ;Dimmer_B1.c: 671: } else {
  8996  0C34  0008               	return
  8997  0C35                     l5663:	
  8998                           
  8999                           ;Dimmer_B1.c: 672: if (DimmerLights->AdjFlag == 1) {
  9000  0C35  0865               	movf	_DimmerLights,w
  9001  0C36  0086               	movwf	6
  9002  0C37  0187               	clrf	7
  9003  0C38  1D81               	btfss	1,3
  9004  0C39  0008               	return
  9005                           
  9006                           ;Dimmer_B1.c: 674: DimmerLights->Signal = 0;
  9007  0C3A  0865               	movf	_DimmerLights,w
  9008  0C3B  0086               	movwf	6
  9009  0C3C  0187               	clrf	7
  9010  0C3D  1081               	bcf	1,1
  9011                           
  9012                           ;Dimmer_B1.c: 675: DimmerLights->AdjFlag = 0;
  9013  0C3E  0865               	movf	_DimmerLights,w
  9014  0C3F  0086               	movwf	6
  9015  0C40  0187               	clrf	7
  9016  0C41  1181               	bcf	1,3
  9017                           
  9018                           ;Dimmer_B1.c: 676: ;;
  9019                           ;Dimmer_B1.c: 677: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  9020  0C42  0865               	movf	_DimmerLights,w
  9021  0C43  3E04               	addlw	4
  9022  0C44  0086               	movwf	6
  9023  0C45  0187               	clrf	7
  9024  0C46  0801               	movf	1,w
  9025  0C47  00A3               	movwf	??_setDimmerLights_Adj
  9026  0C48  0865               	movf	_DimmerLights,w
  9027  0C49  3E05               	addlw	5
  9028  0C4A  0086               	movwf	6
  9029  0C4B  0187               	clrf	7
  9030  0C4C  0823               	movf	??_setDimmerLights_Adj,w
  9031  0C4D  0081               	movwf	1
  9032                           
  9033                           ;Dimmer_B1.c: 685: ;;
  9034                           ;Dimmer_B1.c: 686: ;;
  9035  0C4E  0008               	return
  9036  0C4F                     __end_of_setDimmerLights_Adj:	
  9037                           
  9038                           	psect	text55
  9039  05CD                     __ptext55:	
  9040 ;; *************** function _setDimmerLights *****************
  9041 ;; Defined at:
  9042 ;;		line 613 in file "../src/Dimmer_B1.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  lights          1    wreg     unsigned char 
  9045 ;;  status          1    4[BANK0 ] unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  lights          1    6[BANK0 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;		None               void
  9050 ;; Registers used:
  9051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9057 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;Total ram usage:        3 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    7
  9064 ;; This function calls:
  9065 ;;		_DimmerLightsPointSelect
  9066 ;;		_setLED
  9067 ;;		_setMemory_GO
  9068 ;; This function is called by:
  9069 ;;		_setDimmerLights_Main
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           
  9074                           ;psect for function _setDimmerLights
  9075  05CD                     _setDimmerLights:	
  9076                           
  9077                           ;incstack = 0
  9078                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9079                           ;setDimmerLights@lights stored from wreg
  9080  05CD  0020               	movlb	0	; select bank0
  9081  05CE  00A6               	movwf	setDimmerLights@lights
  9082                           
  9083                           ;Dimmer_B1.c: 614: DimmerLightsPointSelect(lights);
  9084  05CF  0826               	movf	setDimmerLights@lights,w
  9085  05D0  3189  2176  3185   	fcall	_DimmerLightsPointSelect
  9086                           
  9087                           ;Dimmer_B1.c: 615: Dimmer.Load = lights;
  9088  05D3  0020               	movlb	0	; select bank0
  9089  05D4  0826               	movf	setDimmerLights@lights,w
  9090  05D5  00A5               	movwf	??_setDimmerLights
  9091  05D6  0825               	movf	??_setDimmerLights,w
  9092  05D7  00DF               	movwf	_Dimmer+1
  9093                           
  9094                           ;Dimmer_B1.c: 616: if (status == 1) {
  9095  05D8  0824               	movf	setDimmerLights@status,w
  9096  05D9  3A01               	xorlw	1
  9097  05DA  1D03               	skipz
  9098  05DB  2E14               	goto	l5655
  9099                           
  9100                           ;Dimmer_B1.c: 617: DimmerLights->Status = 1;
  9101  05DC  0865               	movf	_DimmerLights,w
  9102  05DD  0086               	movwf	6
  9103  05DE  0187               	clrf	7
  9104  05DF  1681               	bsf	1,5
  9105                           
  9106                           ;Dimmer_B1.c: 618: setLED(lights, 0);
  9107  05E0  01A2               	clrf	setLED@command
  9108  05E1  0826               	movf	setDimmerLights@lights,w
  9109  05E2  3186  26F9  3185   	fcall	_setLED
  9110                           
  9111                           ;Dimmer_B1.c: 620: ;;
  9112                           ;Dimmer_B1.c: 622: DimmerLights->Signal = 1;
  9113  05E5  0020               	movlb	0	; select bank0
  9114  05E6  0865               	movf	_DimmerLights,w
  9115  05E7  0086               	movwf	6
  9116  05E8  0187               	clrf	7
  9117  05E9  1481               	bsf	1,1
  9118                           
  9119                           ;Dimmer_B1.c: 623: DimmerLights->DimmingTimeValue = 7;
  9120  05EA  3007               	movlw	7
  9121  05EB  00A5               	movwf	??_setDimmerLights
  9122  05EC  0865               	movf	_DimmerLights,w
  9123  05ED  3E02               	addlw	2
  9124  05EE  0086               	movwf	6
  9125  05EF  0187               	clrf	7
  9126  05F0  0825               	movf	??_setDimmerLights,w
  9127  05F1  0081               	movwf	1
  9128                           
  9129                           ;Dimmer_B1.c: 625: if (DimmerLights->StatusFlag == 0) {
  9130  05F2  0865               	movf	_DimmerLights,w
  9131  05F3  0086               	movwf	6
  9132  05F4  0187               	clrf	7
  9133  05F5  1B01               	btfsc	1,6
  9134  05F6  0008               	return
  9135                           
  9136                           ;Dimmer_B1.c: 626: DimmerLights->StatusFlag = 1;
  9137  05F7  0865               	movf	_DimmerLights,w
  9138  05F8  0086               	movwf	6
  9139  05F9  0187               	clrf	7
  9140  05FA  1701               	bsf	1,6
  9141                           
  9142                           ;Dimmer_B1.c: 627: ;;
  9143                           ;Dimmer_B1.c: 628: setMemory_GO(0);
  9144  05FB  3000               	movlw	0
  9145  05FC  3189  21F0         	fcall	_setMemory_GO
  9146                           
  9147                           ;Dimmer_B1.c: 631: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9148  05FE  0020               	movlb	0	; select bank0
  9149  05FF  0865               	movf	_DimmerLights,w
  9150  0600  3E05               	addlw	5
  9151  0601  0086               	movwf	6
  9152  0602  0187               	clrf	7
  9153  0603  0801               	movf	1,w
  9154  0604  00A5               	movwf	??_setDimmerLights
  9155  0605  0865               	movf	_DimmerLights,w
  9156  0606  3E04               	addlw	4
  9157  0607  0086               	movwf	6
  9158  0608  0187               	clrf	7
  9159  0609  0825               	movf	??_setDimmerLights,w
  9160  060A  0081               	movwf	1
  9161                           
  9162                           ;Dimmer_B1.c: 635: DimmerLights->DimmingValue = ((char)((100-60)*0.8));
  9163  060B  3020               	movlw	32
  9164  060C  00A5               	movwf	??_setDimmerLights
  9165  060D  0865               	movf	_DimmerLights,w
  9166  060E  3E04               	addlw	4
  9167  060F  0086               	movwf	6
  9168  0610  0187               	clrf	7
  9169  0611  0825               	movf	??_setDimmerLights,w
  9170  0612  0081               	movwf	1
  9171                           
  9172                           ;Dimmer_B1.c: 637: }
  9173                           ;Dimmer_B1.c: 638: } else {
  9174  0613  0008               	return
  9175  0614                     l5655:	
  9176                           
  9177                           ;Dimmer_B1.c: 639: DimmerLights->Status = 0;
  9178  0614  0865               	movf	_DimmerLights,w
  9179  0615  0086               	movwf	6
  9180  0616  0187               	clrf	7
  9181  0617  1281               	bcf	1,5
  9182                           
  9183                           ;Dimmer_B1.c: 641: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9184  0618  0865               	movf	_DimmerLights,w
  9185  0619  3E06               	addlw	6
  9186  061A  0086               	movwf	6
  9187  061B  0187               	clrf	7
  9188  061C  0801               	movf	1,w
  9189  061D  00A5               	movwf	??_setDimmerLights
  9190  061E  0865               	movf	_DimmerLights,w
  9191  061F  3E04               	addlw	4
  9192  0620  0086               	movwf	6
  9193  0621  0187               	clrf	7
  9194  0622  0825               	movf	??_setDimmerLights,w
  9195  0623  0081               	movwf	1
  9196                           
  9197                           ;Dimmer_B1.c: 648: DimmerLights->Signal = 1;
  9198  0624  0865               	movf	_DimmerLights,w
  9199  0625  0086               	movwf	6
  9200  0626  0187               	clrf	7
  9201  0627  1481               	bsf	1,1
  9202                           
  9203                           ;Dimmer_B1.c: 649: DimmerLights->AdjFlag = 0;
  9204  0628  0865               	movf	_DimmerLights,w
  9205  0629  0086               	movwf	6
  9206  062A  0187               	clrf	7
  9207  062B  1181               	bcf	1,3
  9208                           
  9209                           ;Dimmer_B1.c: 650: DimmerLights->AdjStatus = 0;
  9210  062C  0865               	movf	_DimmerLights,w
  9211  062D  0086               	movwf	6
  9212  062E  0187               	clrf	7
  9213  062F  1201               	bcf	1,4
  9214                           
  9215                           ;Dimmer_B1.c: 651: DimmerLights->DimmingTimeValue = 7;
  9216  0630  3007               	movlw	7
  9217  0631  00A5               	movwf	??_setDimmerLights
  9218  0632  0865               	movf	_DimmerLights,w
  9219  0633  3E02               	addlw	2
  9220  0634  0086               	movwf	6
  9221  0635  0187               	clrf	7
  9222  0636  0825               	movf	??_setDimmerLights,w
  9223  0637  0081               	movwf	1
  9224  0638  0008               	return
  9225  0639                     __end_of_setDimmerLights:	
  9226                           
  9227                           	psect	text56
  9228  06F9                     __ptext56:	
  9229 ;; *************** function _setLED *****************
  9230 ;; Defined at:
  9231 ;;		line 73 in file "../src/LED_B1.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  led             1    wreg     unsigned char 
  9234 ;;  command         1    2[BANK0 ] unsigned char 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  led             1    3[BANK0 ] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;		None               void
  9239 ;; Registers used:
  9240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:        2 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    6
  9253 ;; This function calls:
  9254 ;;		_LedPointSelect
  9255 ;; This function is called by:
  9256 ;;		_setDimmerLights
  9257 ;;		_setLED_Initialization
  9258 ;;		_setMain_Exception
  9259 ;;		_setSw_Initialization
  9260 ;;		_setDimmerLights_ERROR
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _setLED
  9266  06F9                     _setLED:	
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9270                           ;setLED@led stored from wreg
  9271  06F9  0020               	movlb	0	; select bank0
  9272  06FA  00A3               	movwf	setLED@led
  9273                           
  9274                           ;LED_B1.c: 74: LedPointSelect(led);
  9275  06FB  0823               	movf	setLED@led,w
  9276  06FC  318A  228A  3186   	fcall	_LedPointSelect
  9277                           
  9278                           ;LED_B1.c: 75: if (command == 0) {
  9279  06FF  0020               	movlb	0	; select bank0
  9280  0700  08A2               	movf	setLED@command,f
  9281  0701  1D03               	skipz
  9282  0702  2F15               	goto	l5555
  9283                           
  9284                           ;LED_B1.c: 77: if (led == 1) {
  9285  0703  0823               	movf	setLED@led,w
  9286  0704  3A01               	xorlw	1
  9287  0705  1D03               	skipz
  9288  0706  2F09               	goto	l5547
  9289                           
  9290                           ;LED_B1.c: 81: RA3 = 1;
  9291  0707  158C               	bsf	12,3	;volatile
  9292                           
  9293                           ;LED_B1.c: 83: }
  9294  0708  0008               	return
  9295  0709                     l5547:	
  9296                           
  9297                           ;LED_B1.c: 86: else if (led == 2) {
  9298  0709  0823               	movf	setLED@led,w
  9299  070A  3A02               	xorlw	2
  9300  070B  1D03               	skipz
  9301  070C  2F0F               	goto	l5551
  9302                           
  9303                           ;LED_B1.c: 90: RC7 = 1;
  9304  070D  178E               	bsf	14,7	;volatile
  9305                           
  9306                           ;LED_B1.c: 92: }
  9307  070E  0008               	return
  9308  070F                     l5551:	
  9309                           
  9310                           ;LED_B1.c: 104: else if (led == 99) {
  9311  070F  0823               	movf	setLED@led,w
  9312  0710  3A63               	xorlw	99
  9313  0711  1D03               	skipz
  9314  0712  0008               	return
  9315                           
  9316                           ;LED_B1.c: 108: RB5 = 1;
  9317  0713  168D               	bsf	13,5	;volatile
  9318                           
  9319                           ;LED_B1.c: 110: }
  9320                           ;LED_B1.c: 112: } else if (command == 1) {
  9321  0714  0008               	return
  9322  0715                     l5555:	
  9323  0715  0822               	movf	setLED@command,w
  9324  0716  3A01               	xorlw	1
  9325  0717  1D03               	skipz
  9326  0718  2F2B               	goto	l5569
  9327                           
  9328                           ;LED_B1.c: 114: if (led == 1) {
  9329  0719  0823               	movf	setLED@led,w
  9330  071A  3A01               	xorlw	1
  9331  071B  1D03               	skipz
  9332  071C  2F1F               	goto	l5561
  9333                           
  9334                           ;LED_B1.c: 118: RA3 = 0;
  9335  071D  118C               	bcf	12,3	;volatile
  9336                           
  9337                           ;LED_B1.c: 120: }
  9338  071E  0008               	return
  9339  071F                     l5561:	
  9340                           
  9341                           ;LED_B1.c: 123: else if (led == 2) {
  9342  071F  0823               	movf	setLED@led,w
  9343  0720  3A02               	xorlw	2
  9344  0721  1D03               	skipz
  9345  0722  2F25               	goto	l5565
  9346                           
  9347                           ;LED_B1.c: 127: RC7 = 0;
  9348  0723  138E               	bcf	14,7	;volatile
  9349                           
  9350                           ;LED_B1.c: 129: }
  9351  0724  0008               	return
  9352  0725                     l5565:	
  9353                           
  9354                           ;LED_B1.c: 141: else if (led == 99) {
  9355  0725  0823               	movf	setLED@led,w
  9356  0726  3A63               	xorlw	99
  9357  0727  1D03               	skipz
  9358  0728  0008               	return
  9359                           
  9360                           ;LED_B1.c: 145: RB5 = 0;
  9361  0729  128D               	bcf	13,5	;volatile
  9362                           
  9363                           ;LED_B1.c: 147: }
  9364                           ;LED_B1.c: 149: } else if (command == 10) {
  9365  072A  0008               	return
  9366  072B                     l5569:	
  9367  072B  0822               	movf	setLED@command,w
  9368  072C  3A0A               	xorlw	10
  9369  072D  1D03               	skipz
  9370  072E  2F4B               	goto	l5585
  9371                           
  9372                           ;LED_B1.c: 150: LED->GO = 0;
  9373  072F  0866               	movf	_LED,w
  9374  0730  0086               	movwf	6
  9375  0731  0187               	clrf	7
  9376  0732  1081               	bcf	1,1
  9377                           
  9378                           ;LED_B1.c: 151: LED->Time = 0;
  9379  0733  0A66               	incf	_LED,w
  9380  0734  0086               	movwf	6
  9381  0735  0187               	clrf	7
  9382  0736  3000               	movlw	0
  9383  0737  3FC0               	movwi [0]fsr1
  9384  0738  3FC1               	movwi [1]fsr1
  9385                           
  9386                           ;LED_B1.c: 153: if (led == 1) {
  9387  0739  0823               	movf	setLED@led,w
  9388  073A  3A01               	xorlw	1
  9389  073B  1D03               	skipz
  9390  073C  2F3F               	goto	l5577
  9391                           
  9392                           ;LED_B1.c: 157: RA3 = 1;
  9393  073D  158C               	bsf	12,3	;volatile
  9394                           
  9395                           ;LED_B1.c: 159: }
  9396  073E  0008               	return
  9397  073F                     l5577:	
  9398                           
  9399                           ;LED_B1.c: 162: else if (led == 2) {
  9400  073F  0823               	movf	setLED@led,w
  9401  0740  3A02               	xorlw	2
  9402  0741  1D03               	skipz
  9403  0742  2F45               	goto	l5581
  9404                           
  9405                           ;LED_B1.c: 166: RC7 = 1;
  9406  0743  178E               	bsf	14,7	;volatile
  9407                           
  9408                           ;LED_B1.c: 168: }
  9409  0744  0008               	return
  9410  0745                     l5581:	
  9411                           
  9412                           ;LED_B1.c: 180: else if (led == 99) {
  9413  0745  0823               	movf	setLED@led,w
  9414  0746  3A63               	xorlw	99
  9415  0747  1D03               	skipz
  9416  0748  0008               	return
  9417                           
  9418                           ;LED_B1.c: 184: RB5 = 1;
  9419  0749  168D               	bsf	13,5	;volatile
  9420                           
  9421                           ;LED_B1.c: 186: }
  9422                           ;LED_B1.c: 188: } else if (command == 11) {
  9423  074A  0008               	return
  9424  074B                     l5585:	
  9425  074B  0822               	movf	setLED@command,w
  9426  074C  3A0B               	xorlw	11
  9427  074D  1D03               	skipz
  9428  074E  0008               	return
  9429                           
  9430                           ;LED_B1.c: 189: LED->GO = 1;
  9431  074F  0866               	movf	_LED,w
  9432  0750  0086               	movwf	6
  9433  0751  0187               	clrf	7
  9434  0752  1481               	bsf	1,1
  9435  0753  0008               	return
  9436  0754                     __end_of_setLED:	
  9437                           
  9438                           	psect	text57
  9439  0A8A                     __ptext57:	
  9440 ;; *************** function _LedPointSelect *****************
  9441 ;; Defined at:
  9442 ;;		line 7 in file "../src/LED_B1.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  led             1    wreg     unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  led             1    1[BANK0 ] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;		None               void
  9449 ;; Registers used:
  9450 ;;		wreg
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        2 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    5
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_setLED_Initialization
  9467 ;;		_setLED
  9468 ;;		_setLED_Main
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _LedPointSelect
  9474  0A8A                     _LedPointSelect:	
  9475                           
  9476                           ;incstack = 0
  9477                           ; Regs used in _LedPointSelect: [wreg]
  9478                           ;LedPointSelect@led stored from wreg
  9479  0A8A  0020               	movlb	0	; select bank0
  9480  0A8B  00A1               	movwf	LedPointSelect@led
  9481                           
  9482                           ;LED_B1.c: 9: if (led == 1) {
  9483  0A8C  0821               	movf	LedPointSelect@led,w
  9484  0A8D  3A01               	xorlw	1
  9485  0A8E  1D03               	skipz
  9486  0A8F  2A95               	goto	l5419
  9487                           
  9488                           ;LED_B1.c: 10: LED = &VarLED1;
  9489  0A90  30E4               	movlw	_VarLED1& (0+255)
  9490  0A91  00A0               	movwf	??_LedPointSelect
  9491  0A92  0820               	movf	??_LedPointSelect,w
  9492  0A93  00E6               	movwf	_LED
  9493                           
  9494                           ;LED_B1.c: 11: }
  9495  0A94  0008               	return
  9496  0A95                     l5419:	
  9497                           
  9498                           ;LED_B1.c: 14: else if (led == 2) {
  9499  0A95  0821               	movf	LedPointSelect@led,w
  9500  0A96  3A02               	xorlw	2
  9501  0A97  1D03               	skipz
  9502  0A98  2A9E               	goto	l5423
  9503                           
  9504                           ;LED_B1.c: 15: LED = &VarLED2;
  9505  0A99  30E8               	movlw	_VarLED2& (0+255)
  9506  0A9A  00A0               	movwf	??_LedPointSelect
  9507  0A9B  0820               	movf	??_LedPointSelect,w
  9508  0A9C  00E6               	movwf	_LED
  9509                           
  9510                           ;LED_B1.c: 16: }
  9511  0A9D  0008               	return
  9512  0A9E                     l5423:	
  9513                           
  9514                           ;LED_B1.c: 24: else if (led == 99) {
  9515  0A9E  0821               	movf	LedPointSelect@led,w
  9516  0A9F  3A63               	xorlw	99
  9517  0AA0  1D03               	skipz
  9518  0AA1  0008               	return
  9519                           
  9520                           ;LED_B1.c: 25: LED = &VarErrLED;
  9521  0AA2  30E0               	movlw	_VarErrLED& (0+255)
  9522  0AA3  00A0               	movwf	??_LedPointSelect
  9523  0AA4  0820               	movf	??_LedPointSelect,w
  9524  0AA5  00E6               	movwf	_LED
  9525  0AA6  0008               	return
  9526  0AA7                     __end_of_LedPointSelect:	
  9527                           
  9528                           	psect	text58
  9529  08B2                     __ptext58:	
  9530 ;; *************** function _DimmerLights_Close *****************
  9531 ;; Defined at:
  9532 ;;		line 407 in file "../src/Dimmer_B1.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;		None               void
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0, pclath, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;Total ram usage:        0 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    6
  9553 ;; This function calls:
  9554 ;;		_getDimmerLights_StatusFlag
  9555 ;;		_setMemory_GO
  9556 ;; This function is called by:
  9557 ;;		_DimmerLights_Main
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           
  9562                           ;psect for function _DimmerLights_Close
  9563  08B2                     _DimmerLights_Close:	
  9564                           
  9565                           ;Dimmer_B1.c: 408: if (Dimmer.Detect == 1) {
  9566                           
  9567                           ;incstack = 0
  9568                           ; Regs used in _DimmerLights_Close: [wreg+status,2+status,0+pclath+cstack]
  9569  08B2  0020               	movlb	0	; select bank0
  9570  08B3  1C5E               	btfss	_Dimmer,0
  9571  08B4  0008               	return
  9572                           
  9573                           ;Dimmer_B1.c: 409: Dimmer.Detect = 0;
  9574  08B5  105E               	bcf	_Dimmer,0
  9575                           
  9576                           ;Dimmer_B1.c: 410: if (getDimmerLights_StatusFlag() == 0) {
  9577  08B6  3189  211D  3188   	fcall	_getDimmerLights_StatusFlag
  9578  08B9  3800               	iorlw	0
  9579  08BA  1D03               	skipz
  9580  08BB  0008               	return
  9581                           
  9582                           ;Dimmer_B1.c: 411: ;;
  9583                           ;Dimmer_B1.c: 412: setMemory_GO(1);
  9584  08BC  3001               	movlw	1
  9585  08BD  3189  21F0         	fcall	_setMemory_GO
  9586  08BF  0008               	return
  9587  08C0                     __end_of_DimmerLights_Close:	
  9588                           
  9589                           	psect	text59
  9590  09F0                     __ptext59:	
  9591 ;; *************** function _setMemory_GO *****************
  9592 ;; Defined at:
  9593 ;;		line 995 in file "../src/MCU_B1.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  command         1    wreg     unsigned char 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  command         1    2[BANK0 ] unsigned char 
  9598 ;; Return value:  Size  Location     Type
  9599 ;;		None               void
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;Total ram usage:        3 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; Hardware stack levels required when called:    5
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_DimmerLights_Close
  9618 ;;		_setDimmerLights
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _setMemory_GO
  9624  09F0                     _setMemory_GO:	
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _setMemory_GO: [wreg+status,2+status,0]
  9628                           ;setMemory_GO@command stored from wreg
  9629  09F0  0020               	movlb	0	; select bank0
  9630  09F1  00A2               	movwf	setMemory_GO@command
  9631                           
  9632                           ;MCU_B1.c: 996: Memory.GO = command;
  9633  09F2  0822               	movf	setMemory_GO@command,w
  9634  09F3  0022               	movlb	2	; select bank2
  9635  09F4  10C4               	bcf	(_Memory^(0+256)+36),1
  9636  09F5  1D03               	skipz
  9637  09F6  14C4               	bsf	(_Memory^(0+256)+36),1
  9638                           
  9639                           ;MCU_B1.c: 997: if (command == 0) {
  9640  09F7  0020               	movlb	0	; select bank0
  9641  09F8  08A2               	movf	setMemory_GO@command,f
  9642  09F9  1D03               	skipz
  9643  09FA  0008               	return
  9644                           
  9645                           ;MCU_B1.c: 998: Memory.Time = command;
  9646  09FB  0822               	movf	setMemory_GO@command,w
  9647  09FC  00A0               	movwf	??_setMemory_GO
  9648  09FD  01A1               	clrf	??_setMemory_GO+1
  9649  09FE  0820               	movf	??_setMemory_GO,w
  9650  09FF  0022               	movlb	2	; select bank2
  9651  0A00  00C2               	movwf	(_Memory^(0+256)+34)
  9652  0A01  0020               	movlb	0	; select bank0
  9653  0A02  0821               	movf	??_setMemory_GO+1,w
  9654  0A03  0022               	movlb	2	; select bank2
  9655  0A04  00C3               	movwf	((_Memory+1)^(0+256)+34)
  9656  0A05  0008               	return
  9657  0A06                     __end_of_setMemory_GO:	
  9658                           
  9659                           	psect	text60
  9660  091D                     __ptext60:	
  9661 ;; *************** function _getDimmerLights_StatusFlag *****************
  9662 ;; Defined at:
  9663 ;;		line 495 in file "../src/Dimmer_B1.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  Status          1    1[BANK0 ] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      unsigned char 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;Total ram usage:        3 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    5
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_DimmerLights_Close
  9688 ;;		_DimmerLights_Exceptions
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           
  9693                           ;psect for function _getDimmerLights_StatusFlag
  9694  091D                     _getDimmerLights_StatusFlag:	
  9695                           
  9696                           ;Dimmer_B1.c: 496: char Status = 0;
  9697                           
  9698                           ;incstack = 0
  9699                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+status,2]
  9700  091D  0020               	movlb	0	; select bank0
  9701  091E  01A1               	clrf	getDimmerLights_StatusFlag@Status
  9702                           
  9703                           ;Dimmer_B1.c: 503: Status = (DimmerLights1.StatusFlag == 1 || DimmerLights2.StatusFlag =
      +                          = 1) ? 1 : 0;
  9704  091F  01A2               	clrf	_getDimmerLights_StatusFlag$1940
  9705  0920  0AA2               	incf	_getDimmerLights_StatusFlag$1940,f
  9706  0921  0021               	movlb	1	; select bank1
  9707  0922  1F42               	btfss	_DimmerLights1^(0+128),6
  9708  0923  1B51               	btfsc	_DimmerLights2^(0+128),6
  9709  0924  2927               	goto	l5625
  9710  0925  0020               	movlb	0	; select bank0
  9711  0926  01A2               	clrf	_getDimmerLights_StatusFlag$1940
  9712  0927                     l5625:	
  9713  0927  0020               	movlb	0	; select bank0
  9714  0928  0822               	movf	_getDimmerLights_StatusFlag$1940,w
  9715  0929  00A0               	movwf	??_getDimmerLights_StatusFlag
  9716  092A  0820               	movf	??_getDimmerLights_StatusFlag,w
  9717  092B  00A1               	movwf	getDimmerLights_StatusFlag@Status
  9718                           
  9719                           ;Dimmer_B1.c: 510: return Status;
  9720  092C  0821               	movf	getDimmerLights_StatusFlag@Status,w
  9721  092D  0008               	return
  9722  092E                     __end_of_getDimmerLights_StatusFlag:	
  9723                           
  9724                           	psect	text61
  9725  09B1                     __ptext61:	
  9726 ;; *************** function _DimmerLights_Initialization *****************
  9727 ;; Defined at:
  9728 ;;		line 345 in file "../src/Dimmer_B1.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;		None               void
  9735 ;; Registers used:
  9736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;Total ram usage:        1 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    7
  9749 ;; This function calls:
  9750 ;;		_Dimmer_Initialization
  9751 ;;		_setDimmerLights_Initialization
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function _DimmerLights_Initialization
  9759  09B1                     _DimmerLights_Initialization:	
  9760                           
  9761                           ;Dimmer_B1.c: 348: DimmerLights11 = &DimmerLights1;
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9765  09B1  30C2               	movlw	_DimmerLights1& (0+255)
  9766  09B2  0020               	movlb	0	; select bank0
  9767  09B3  00A4               	movwf	??_DimmerLights_Initialization
  9768  09B4  0824               	movf	??_DimmerLights_Initialization,w
  9769  09B5  00F2               	movwf	_DimmerLights11
  9770                           
  9771                           ;Dimmer_B1.c: 349: setDimmerLights_Initialization(1);
  9772  09B6  3001               	movlw	1
  9773  09B7  318B  23CF  3189   	fcall	_setDimmerLights_Initialization
  9774                           
  9775                           ;Dimmer_B1.c: 353: DimmerLights22 = &DimmerLights2;
  9776  09BA  30D1               	movlw	_DimmerLights2& (0+255)
  9777  09BB  0020               	movlb	0	; select bank0
  9778  09BC  00A4               	movwf	??_DimmerLights_Initialization
  9779  09BD  0824               	movf	??_DimmerLights_Initialization,w
  9780  09BE  00F3               	movwf	_DimmerLights22
  9781                           
  9782                           ;Dimmer_B1.c: 354: setDimmerLights_Initialization(2);
  9783  09BF  3002               	movlw	2
  9784  09C0  318B  23CF  3189   	fcall	_setDimmerLights_Initialization
  9785                           
  9786                           ;Dimmer_B1.c: 363: Dimmer_Initialization();
  9787  09C3  3180  2002         	fcall	_Dimmer_Initialization
  9788  09C5  0008               	return
  9789  09C6                     __end_of_DimmerLights_Initialization:	
  9790                           
  9791                           	psect	text62
  9792  0BCF                     __ptext62:	
  9793 ;; *************** function _setDimmerLights_Initialization *****************
  9794 ;; Defined at:
  9795 ;;		line 368 in file "../src/Dimmer_B1.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  lights          1    wreg     unsigned char 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  lights          1    3[BANK0 ] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;		None               void
  9802 ;; Registers used:
  9803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:        2 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    6
  9816 ;; This function calls:
  9817 ;;		_DimmerLightsPointSelect
  9818 ;; This function is called by:
  9819 ;;		_DimmerLights_Initialization
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           
  9824                           ;psect for function _setDimmerLights_Initialization
  9825  0BCF                     _setDimmerLights_Initialization:	
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9829                           ;setDimmerLights_Initialization@lights stored from wreg
  9830  0BCF  0020               	movlb	0	; select bank0
  9831  0BD0  00A3               	movwf	setDimmerLights_Initialization@lights
  9832                           
  9833                           ;Dimmer_B1.c: 370: DimmerLightsPointSelect(lights);
  9834  0BD1  0823               	movf	setDimmerLights_Initialization@lights,w
  9835  0BD2  3189  2176         	fcall	_DimmerLightsPointSelect
  9836                           
  9837                           ;Dimmer_B1.c: 371: DimmerLights->Clear = 1;
  9838  0BD4  0020               	movlb	0	; select bank0
  9839  0BD5  0865               	movf	_DimmerLights,w
  9840  0BD6  3E09               	addlw	9
  9841  0BD7  0086               	movwf	6
  9842  0BD8  0187               	clrf	7
  9843  0BD9  1501               	bsf	1,2
  9844                           
  9845                           ;Dimmer_B1.c: 377: DimmerLights->MaxmumValue = ((char)((100-60)*0.8));
  9846  0BDA  3020               	movlw	32
  9847  0BDB  00A2               	movwf	??_setDimmerLights_Initialization
  9848  0BDC  0865               	movf	_DimmerLights,w
  9849  0BDD  3E05               	addlw	5
  9850  0BDE  0086               	movwf	6
  9851  0BDF  0187               	clrf	7
  9852  0BE0  0822               	movf	??_setDimmerLights_Initialization,w
  9853  0BE1  0081               	movwf	1
  9854                           
  9855                           ;Dimmer_B1.c: 378: DimmerLights->MinimumValue = ((char)((100-25)*0.8));
  9856  0BE2  303C               	movlw	60
  9857  0BE3  00A2               	movwf	??_setDimmerLights_Initialization
  9858  0BE4  0865               	movf	_DimmerLights,w
  9859  0BE5  3E06               	addlw	6
  9860  0BE6  0086               	movwf	6
  9861  0BE7  0187               	clrf	7
  9862  0BE8  0822               	movf	??_setDimmerLights_Initialization,w
  9863  0BE9  0081               	movwf	1
  9864                           
  9865                           ;Dimmer_B1.c: 388: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  9866  0BEA  0865               	movf	_DimmerLights,w
  9867  0BEB  3E06               	addlw	6
  9868  0BEC  0086               	movwf	6
  9869  0BED  0187               	clrf	7
  9870  0BEE  0801               	movf	1,w
  9871  0BEF  00A2               	movwf	??_setDimmerLights_Initialization
  9872  0BF0  0865               	movf	_DimmerLights,w
  9873  0BF1  3E04               	addlw	4
  9874  0BF2  0086               	movwf	6
  9875  0BF3  0187               	clrf	7
  9876  0BF4  0822               	movf	??_setDimmerLights_Initialization,w
  9877  0BF5  0081               	movwf	1
  9878  0BF6  0008               	return
  9879  0BF7                     __end_of_setDimmerLights_Initialization:	
  9880                           
  9881                           	psect	text63
  9882  0002                     __ptext63:	
  9883 ;; *************** function _Dimmer_Initialization *****************
  9884 ;; Defined at:
  9885 ;;		line 794 in file "../src/Dimmer_B1.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;		None
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;		None               void
  9892 ;; Registers used:
  9893 ;;		None
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;Total ram usage:        0 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:    5
  9906 ;; This function calls:
  9907 ;;		Nothing
  9908 ;; This function is called by:
  9909 ;;		_DimmerLights_Initialization
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           
  9914                           ;psect for function _Dimmer_Initialization
  9915  0002                     _Dimmer_Initialization:	
  9916                           
  9917                           ;incstack = 0
  9918                           ; Regs used in _Dimmer_Initialization: []
  9919  0002  0008               	return
  9920  0003                     __end_of_Dimmer_Initialization:	
  9921                           
  9922                           	psect	text64
  9923  083C                     __ptext64:	
  9924 ;; *************** function _DelayOff_Main *****************
  9925 ;; Defined at:
  9926 ;;		line 41 in file "../src/DelayOff_B1.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;		None
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;		None               void
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;Total ram usage:        0 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    8
  9947 ;; This function calls:
  9948 ;;		_DlyOff_Main
  9949 ;; This function is called by:
  9950 ;;		_main
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _DelayOff_Main
  9956  083C                     _DelayOff_Main:	
  9957                           
  9958                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9962  083C  3001               	movlw	1
  9963  083D  3187  27A9  3188   	fcall	_DlyOff_Main
  9964                           
  9965                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
  9966  0840  3002               	movlw	2
  9967  0841  3187  27A9         	fcall	_DlyOff_Main
  9968  0843  0008               	return
  9969  0844                     __end_of_DelayOff_Main:	
  9970                           
  9971                           	psect	text65
  9972  07A9                     __ptext65:	
  9973 ;; *************** function _DlyOff_Main *****************
  9974 ;; Defined at:
  9975 ;;		line 62 in file "../src/DelayOff_B1.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  sw              1    wreg     unsigned char 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  sw              1   15[BANK0 ] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;		None               void
  9982 ;; Registers used:
  9983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:        3 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    7
  9996 ;; This function calls:
  9997 ;;		_DelayOffPointSelect
  9998 ;;		_setBuz
  9999 ;;		_setDimmerLights_Trigger
 10000 ;;		_setSw_Status
 10001 ;; This function is called by:
 10002 ;;		_DelayOff_Main
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           
 10007                           ;psect for function _DlyOff_Main
 10008  07A9                     _DlyOff_Main:	
 10009                           
 10010                           ;incstack = 0
 10011                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10012                           ;DlyOff_Main@sw stored from wreg
 10013  07A9  0020               	movlb	0	; select bank0
 10014  07AA  00AF               	movwf	DlyOff_Main@sw
 10015                           
 10016                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 10017  07AB  082F               	movf	DlyOff_Main@sw,w
 10018  07AC  3189  2189  3187   	fcall	_DelayOffPointSelect
 10019                           
 10020                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 10021  07AF  0020               	movlb	0	; select bank0
 10022  07B0  0864               	movf	_DelayOff,w
 10023  07B1  0086               	movwf	6
 10024  07B2  0187               	clrf	7
 10025  07B3  1C81               	btfss	1,1
 10026  07B4  0008               	return
 10027                           
 10028                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 10029  07B5  0864               	movf	_DelayOff,w
 10030  07B6  0086               	movwf	6
 10031  07B7  0187               	clrf	7
 10032  07B8  3001               	movlw	1
 10033  07B9  0781               	addwf	1,f
 10034  07BA  3141               	addfsr 1,1
 10035  07BB  1803               	skipnc
 10036  07BC  0A81               	incf	1,f
 10037                           
 10038                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= 5650) {
 10039  07BD  0864               	movf	_DelayOff,w
 10040  07BE  0086               	movwf	6
 10041  07BF  0187               	clrf	7
 10042  07C0  3F40               	moviw [0]fsr1
 10043  07C1  00AD               	movwf	??_DlyOff_Main
 10044  07C2  3F41               	moviw [1]fsr1
 10045  07C3  00AE               	movwf	??_DlyOff_Main+1
 10046  07C4  3016               	movlw	22
 10047  07C5  022E               	subwf	??_DlyOff_Main+1,w
 10048  07C6  3012               	movlw	18
 10049  07C7  1903               	skipnz
 10050  07C8  022D               	subwf	??_DlyOff_Main,w
 10051  07C9  1C03               	skipc
 10052  07CA  0008               	return
 10053                           
 10054                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 10055  07CB  0864               	movf	_DelayOff,w
 10056  07CC  0086               	movwf	6
 10057  07CD  0187               	clrf	7
 10058  07CE  3000               	movlw	0
 10059  07CF  3FC0               	movwi [0]fsr1
 10060  07D0  3FC1               	movwi [1]fsr1
 10061                           
 10062                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 10063  07D1  3001               	movlw	1
 10064  07D2  00AD               	movwf	??_DlyOff_Main
 10065  07D3  0864               	movf	_DelayOff,w
 10066  07D4  0086               	movwf	6
 10067  07D5  0187               	clrf	7
 10068  07D6  082D               	movf	??_DlyOff_Main,w
 10069  07D7  0781               	addwf	1,f
 10070                           
 10071                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 10072  07D8  0864               	movf	_DelayOff,w
 10073  07D9  0086               	movwf	6
 10074  07DA  0187               	clrf	7
 10075  07DB  0864               	movf	_DelayOff,w
 10076  07DC  0084               	movwf	4
 10077  07DD  0185               	clrf	5
 10078  07DE  0800               	movf	0,w
 10079  07DF  0201               	subwf	1,w
 10080  07E0  1C03               	skipc
 10081  07E1  0008               	return
 10082                           
 10083                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 10084  07E2  0864               	movf	_DelayOff,w
 10085  07E3  0086               	movwf	6
 10086  07E4  0187               	clrf	7
 10087  07E5  0181               	clrf	1
 10088                           
 10089                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 10090  07E6  0864               	movf	_DelayOff,w
 10091  07E7  0086               	movwf	6
 10092  07E8  0187               	clrf	7
 10093  07E9  1081               	bcf	1,1
 10094                           
 10095                           ;DelayOff_B1.c: 73: setSw_Status(sw, 0);
 10096  07EA  01A2               	clrf	setSw_Status@command
 10097  07EB  082F               	movf	DlyOff_Main@sw,w
 10098  07EC  318A  2206  3187   	fcall	_setSw_Status
 10099                           
 10100                           ;DelayOff_B1.c: 74: ;;
 10101                           ;DelayOff_B1.c: 75: ;;
 10102                           ;DelayOff_B1.c: 76: setDimmerLights_Trigger(sw, 0);
 10103  07EF  0020               	movlb	0	; select bank0
 10104  07F0  01A2               	clrf	setDimmerLights_Trigger@command
 10105  07F1  082F               	movf	DlyOff_Main@sw,w
 10106  07F2  318A  2252  3187   	fcall	_setDimmerLights_Trigger
 10107                           
 10108                           ;DelayOff_B1.c: 77: ;;
 10109                           ;DelayOff_B1.c: 78: setBuz(1, 100);
 10110  07F5  3064               	movlw	100
 10111  07F6  0020               	movlb	0	; select bank0
 10112  07F7  00A9               	movwf	setBuz@time
 10113  07F8  3000               	movlw	0
 10114  07F9  00AA               	movwf	setBuz@time+1
 10115  07FA  3001               	movlw	1
 10116  07FB  318D  25F5         	fcall	_setBuz
 10117  07FD  0008               	return
 10118  07FE                     __end_of_DlyOff_Main:	
 10119                           
 10120                           	psect	text66
 10121  0A06                     __ptext66:	
 10122 ;; *************** function _setSw_Status *****************
 10123 ;; Defined at:
 10124 ;;		line 137 in file "../src/Switch_B1.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  sw              1    wreg     unsigned char 
 10127 ;;  command         1    2[BANK0 ] unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  sw              1    4[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;		None               void
 10132 ;; Registers used:
 10133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10139 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;Total ram usage:        3 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    6
 10146 ;; This function calls:
 10147 ;;		_SwPointSelect
 10148 ;; This function is called by:
 10149 ;;		_DlyOff_Main
 10150 ;;		_setDimmerLights_ERROR
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _setSw_Status
 10156  0A06                     _setSw_Status:	
 10157                           
 10158                           ;incstack = 0
 10159                           ; Regs used in _setSw_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10160                           ;setSw_Status@sw stored from wreg
 10161  0A06  0020               	movlb	0	; select bank0
 10162  0A07  00A4               	movwf	setSw_Status@sw
 10163                           
 10164                           ;Switch_B1.c: 138: SwPointSelect(sw);
 10165  0A08  0824               	movf	setSw_Status@sw,w
 10166  0A09  3189  219D         	fcall	_SwPointSelect
 10167                           
 10168                           ;Switch_B1.c: 139: Sw->Status = command == 1 ? 1 : 0;
 10169  0A0B  0020               	movlb	0	; select bank0
 10170  0A0C  0822               	movf	setSw_Status@command,w
 10171  0A0D  3A01               	xorlw	1
 10172  0A0E  3000               	movlw	0
 10173  0A0F  1903               	skipnz
 10174  0A10  3001               	movlw	1
 10175  0A11  00A3               	movwf	??_setSw_Status
 10176  0A12  0867               	movf	_Sw,w
 10177  0A13  0086               	movwf	6
 10178  0A14  3001               	movlw	1	; select bank2/3
 10179  0A15  0087               	movwf	7
 10180  0A16  0EA3               	swapf	??_setSw_Status,f
 10181  0A17  0DA3               	rlf	??_setSw_Status,f
 10182  0A18  0DA3               	rlf	??_setSw_Status,f
 10183  0A19  0801               	movf	1,w
 10184  0A1A  0623               	xorwf	??_setSw_Status,w
 10185  0A1B  39BF               	andlw	-65
 10186  0A1C  0623               	xorwf	??_setSw_Status,w
 10187  0A1D  0081               	movwf	1
 10188  0A1E  0008               	return
 10189  0A1F                     __end_of_setSw_Status:	
 10190                           
 10191                           	psect	text67
 10192  099D                     __ptext67:	
 10193 ;; *************** function _SwPointSelect *****************
 10194 ;; Defined at:
 10195 ;;		line 25 in file "../src/Switch_B1.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  sw              1    wreg     unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  sw              1    1[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;		None               void
 10202 ;; Registers used:
 10203 ;;		wreg
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;Total ram usage:        2 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    5
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_setSw_Status
 10220 ;;		_setSw_Main
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           
 10225                           ;psect for function _SwPointSelect
 10226  099D                     _SwPointSelect:	
 10227                           
 10228                           ;incstack = 0
 10229                           ; Regs used in _SwPointSelect: [wreg]
 10230                           ;SwPointSelect@sw stored from wreg
 10231  099D  0020               	movlb	0	; select bank0
 10232  099E  00A1               	movwf	SwPointSelect@sw
 10233                           
 10234                           ;Switch_B1.c: 28: if (sw == 1) {
 10235  099F  0821               	movf	SwPointSelect@sw,w
 10236  09A0  3A01               	xorlw	1
 10237  09A1  1D03               	skipz
 10238  09A2  29A8               	goto	l5607
 10239                           
 10240                           ;Switch_B1.c: 29: Sw = &Sw1;
 10241  09A3  3045               	movlw	_Sw1& (0+255)
 10242  09A4  00A0               	movwf	??_SwPointSelect
 10243  09A5  0820               	movf	??_SwPointSelect,w
 10244  09A6  00E7               	movwf	_Sw
 10245                           
 10246                           ;Switch_B1.c: 30: }
 10247  09A7  0008               	return
 10248  09A8                     l5607:	
 10249                           
 10250                           ;Switch_B1.c: 33: else if (sw == 2) {
 10251  09A8  0821               	movf	SwPointSelect@sw,w
 10252  09A9  3A02               	xorlw	2
 10253  09AA  1D03               	skipz
 10254  09AB  0008               	return
 10255                           
 10256                           ;Switch_B1.c: 34: Sw = &Sw2;
 10257  09AC  304E               	movlw	_Sw2& (0+255)
 10258  09AD  00A0               	movwf	??_SwPointSelect
 10259  09AE  0820               	movf	??_SwPointSelect,w
 10260  09AF  00E7               	movwf	_Sw
 10261  09B0  0008               	return
 10262  09B1                     __end_of_SwPointSelect:	
 10263                           
 10264                           	psect	text68
 10265  0A52                     __ptext68:	
 10266 ;; *************** function _setDimmerLights_Trigger *****************
 10267 ;; Defined at:
 10268 ;;		line 713 in file "../src/Dimmer_B1.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;  lights          1    wreg     unsigned char 
 10271 ;;  command         1    2[BANK0 ] unsigned char 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  lights          1    4[BANK0 ] unsigned char 
 10274 ;; Return value:  Size  Location     Type
 10275 ;;		None               void
 10276 ;; Registers used:
 10277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;Total ram usage:        3 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    6
 10290 ;; This function calls:
 10291 ;;		_DimmerLightsPointSelect
 10292 ;; This function is called by:
 10293 ;;		_DlyOff_Main
 10294 ;;		_setMain_Exception
 10295 ;;		_Sw_DimmerOnFunc
 10296 ;;		_Sw_DimmerOffFunc
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           
 10301                           ;psect for function _setDimmerLights_Trigger
 10302  0A52                     _setDimmerLights_Trigger:	
 10303                           
 10304                           ;incstack = 0
 10305                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10306                           ;setDimmerLights_Trigger@lights stored from wreg
 10307  0A52  0020               	movlb	0	; select bank0
 10308  0A53  00A4               	movwf	setDimmerLights_Trigger@lights
 10309                           
 10310                           ;Dimmer_B1.c: 714: DimmerLightsPointSelect(lights);
 10311  0A54  0824               	movf	setDimmerLights_Trigger@lights,w
 10312  0A55  3189  2176         	fcall	_DimmerLightsPointSelect
 10313                           
 10314                           ;Dimmer_B1.c: 715: DimmerLights->Trigger = 1;
 10315  0A57  0020               	movlb	0	; select bank0
 10316  0A58  0865               	movf	_DimmerLights,w
 10317  0A59  3E08               	addlw	8
 10318  0A5A  0086               	movwf	6
 10319  0A5B  0187               	clrf	7
 10320  0A5C  1501               	bsf	1,2
 10321                           
 10322                           ;Dimmer_B1.c: 716: DimmerLights->Switch = command == 1 ? 1 : 0;
 10323  0A5D  0822               	movf	setDimmerLights_Trigger@command,w
 10324  0A5E  3A01               	xorlw	1
 10325  0A5F  3000               	movlw	0
 10326  0A60  1903               	skipnz
 10327  0A61  3001               	movlw	1
 10328  0A62  00A3               	movwf	??_setDimmerLights_Trigger
 10329  0A63  0865               	movf	_DimmerLights,w
 10330  0A64  3E08               	addlw	8
 10331  0A65  0086               	movwf	6
 10332  0A66  0187               	clrf	7
 10333  0A67  0DA3               	rlf	??_setDimmerLights_Trigger,f
 10334  0A68  0801               	movf	1,w
 10335  0A69  0623               	xorwf	??_setDimmerLights_Trigger,w
 10336  0A6A  39FD               	andlw	-3
 10337  0A6B  0623               	xorwf	??_setDimmerLights_Trigger,w
 10338  0A6C  0081               	movwf	1
 10339  0A6D  0008               	return
 10340  0A6E                     __end_of_setDimmerLights_Trigger:	
 10341                           
 10342                           	psect	text69
 10343  0976                     __ptext69:	
 10344 ;; *************** function _DimmerLightsPointSelect *****************
 10345 ;; Defined at:
 10346 ;;		line 326 in file "../src/Dimmer_B1.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  lights          1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  lights          1    1[BANK0 ] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;		None               void
 10353 ;; Registers used:
 10354 ;;		wreg
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:        2 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    5
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_setDimmerLights_Initialization
 10371 ;;		_setDimmerLights_Main
 10372 ;;		_getDimmerLights_Status
 10373 ;;		_setDimmerLights
 10374 ;;		_setDimmerLights_Adj
 10375 ;;		_setDimmerLights_Trigger
 10376 ;;		_setDimmerLights_TriggerAdj
 10377 ;;		_setDimmerLights_ERROR
 10378 ;;		_setDimmerLights_TriggerERROR
 10379 ;;		_setDimmerLights_GO
 10380 ;;		_setDimmerLights_AdjRF
 10381 ;;		_setDimmerLights_MaxmumValue
 10382 ;;		_setDimmerLights_Clear
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _DimmerLightsPointSelect
 10388  0976                     _DimmerLightsPointSelect:	
 10389                           
 10390                           ;incstack = 0
 10391                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 10392                           ;DimmerLightsPointSelect@lights stored from wreg
 10393  0976  0020               	movlb	0	; select bank0
 10394  0977  00A1               	movwf	DimmerLightsPointSelect@lights
 10395                           
 10396                           ;Dimmer_B1.c: 328: if (lights == 1) {
 10397  0978  0821               	movf	DimmerLightsPointSelect@lights,w
 10398  0979  3A01               	xorlw	1
 10399  097A  1D03               	skipz
 10400  097B  2980               	goto	l444
 10401                           
 10402                           ;Dimmer_B1.c: 329: DimmerLights = &DimmerLights1;
 10403  097C  30C2               	movlw	_DimmerLights1& (0+255)
 10404  097D  00A0               	movwf	??_DimmerLightsPointSelect
 10405  097E  0820               	movf	??_DimmerLightsPointSelect,w
 10406  097F  00E5               	movwf	_DimmerLights
 10407  0980                     l444:	
 10408                           
 10409                           ;Dimmer_B1.c: 330: }
 10410                           ;Dimmer_B1.c: 333: if (lights == 2) {
 10411  0980  0821               	movf	DimmerLightsPointSelect@lights,w
 10412  0981  3A02               	xorlw	2
 10413  0982  1D03               	skipz
 10414  0983  0008               	return
 10415                           
 10416                           ;Dimmer_B1.c: 334: DimmerLights = &DimmerLights2;
 10417  0984  30D1               	movlw	_DimmerLights2& (0+255)
 10418  0985  00A0               	movwf	??_DimmerLightsPointSelect
 10419  0986  0820               	movf	??_DimmerLightsPointSelect,w
 10420  0987  00E5               	movwf	_DimmerLights
 10421  0988  0008               	return
 10422  0989                     __end_of_DimmerLightsPointSelect:	
 10423                           
 10424                           	psect	text70
 10425  0DF5                     __ptext70:	
 10426 ;; *************** function _setBuz *****************
 10427 ;; Defined at:
 10428 ;;		line 22 in file "../src/Buzzer_B1.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  count           1    wreg     unsigned char 
 10431 ;;  time            2    9[BANK0 ] int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  count           1   12[BANK0 ] unsigned char 
 10434 ;; Return value:  Size  Location     Type
 10435 ;;		None               void
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0, pclath, cstack
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;Total ram usage:        4 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    6
 10450 ;; This function calls:
 10451 ;;		___awdiv
 10452 ;; This function is called by:
 10453 ;;		_DlyOff_Main
 10454 ;;		_setDimmerLights_Main
 10455 ;;		_my_MainTimer
 10456 ;;		_setSw_Main
 10457 ;;		_Sw_DimmerOnFunc
 10458 ;;		_DimmerLights_Exceptions
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function _setBuz
 10464  0DF5                     _setBuz:	
 10465                           
 10466                           ;incstack = 0
 10467                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 10468                           ;setBuz@count stored from wreg
 10469  0DF5  0020               	movlb	0	; select bank0
 10470  0DF6  00AC               	movwf	setBuz@count
 10471                           
 10472                           ;Buzzer_B1.c: 23: time /= 10;
 10473  0DF7  300A               	movlw	10
 10474  0DF8  00A0               	movwf	___awdiv@divisor
 10475  0DF9  3000               	movlw	0
 10476  0DFA  00A1               	movwf	___awdiv@divisor+1
 10477  0DFB  082A               	movf	setBuz@time+1,w
 10478  0DFC  01A3               	clrf	___awdiv@dividend+1
 10479  0DFD  07A3               	addwf	___awdiv@dividend+1,f
 10480  0DFE  0829               	movf	setBuz@time,w
 10481  0DFF  01A2               	clrf	___awdiv@dividend
 10482  0E00  07A2               	addwf	___awdiv@dividend,f
 10483  0E01  318F  27AC  318D   	fcall	___awdiv
 10484  0E04  0020               	movlb	0	; select bank0
 10485  0E05  0821               	movf	?___awdiv+1,w
 10486  0E06  01AA               	clrf	setBuz@time+1
 10487  0E07  07AA               	addwf	setBuz@time+1,f
 10488  0E08  0820               	movf	?___awdiv,w
 10489  0E09  01A9               	clrf	setBuz@time
 10490  0E0A  07A9               	addwf	setBuz@time,f
 10491                           
 10492                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 10493  0E0B  1C52               	btfss	_Buz1,0
 10494  0E0C  0008               	return
 10495                           
 10496                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 10497  0E0D  18D2               	btfsc	_Buz1,1
 10498  0E0E  2E1E               	goto	l66
 10499                           
 10500                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 10501  0E0F  14D2               	bsf	_Buz1,1
 10502                           
 10503                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 10504  0E10  01D3               	clrf	_Buz1+1
 10505  0E11  01D4               	clrf	_Buz1+2
 10506                           
 10507                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 10508  0E12  082C               	movf	setBuz@count,w
 10509  0E13  00AB               	movwf	??_setBuz
 10510  0E14  082B               	movf	??_setBuz,w
 10511  0E15  00D5               	movwf	_Buz1+3
 10512                           
 10513                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 10514  0E16  082A               	movf	setBuz@time+1,w
 10515  0E17  01D9               	clrf	_Buz1+7
 10516  0E18  07D9               	addwf	_Buz1+7,f
 10517  0E19  0829               	movf	setBuz@time,w
 10518  0E1A  01D8               	clrf	_Buz1+6
 10519  0E1B  07D8               	addwf	_Buz1+6,f
 10520                           
 10521                           ;Buzzer_B1.c: 30: RB3 = 1;
 10522  0E1C  158D               	bsf	13,3	;volatile
 10523                           
 10524                           ;Buzzer_B1.c: 31: } else {
 10525  0E1D  0008               	return
 10526  0E1E                     l66:	
 10527                           
 10528                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 10529  0E1E  19D2               	btfsc	_Buz1,3
 10530  0E1F  2E2C               	goto	l68
 10531                           
 10532                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 10533  0E20  15D2               	bsf	_Buz1,3
 10534                           
 10535                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 10536  0E21  082C               	movf	setBuz@count,w
 10537  0E22  00AB               	movwf	??_setBuz
 10538  0E23  082B               	movf	??_setBuz,w
 10539  0E24  00D6               	movwf	_Buz1+4
 10540                           
 10541                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 10542  0E25  082A               	movf	setBuz@time+1,w
 10543  0E26  01DB               	clrf	_Buz1+9
 10544  0E27  07DB               	addwf	_Buz1+9,f
 10545  0E28  0829               	movf	setBuz@time,w
 10546  0E29  01DA               	clrf	_Buz1+8
 10547  0E2A  07DA               	addwf	_Buz1+8,f
 10548                           
 10549                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 10550  0E2B  0008               	return
 10551  0E2C                     l68:	
 10552  0E2C  1A52               	btfsc	_Buz1,4
 10553  0E2D  0008               	return
 10554                           
 10555                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 10556  0E2E  1652               	bsf	_Buz1,4
 10557                           
 10558                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 10559  0E2F  082C               	movf	setBuz@count,w
 10560  0E30  00AB               	movwf	??_setBuz
 10561  0E31  082B               	movf	??_setBuz,w
 10562  0E32  00D7               	movwf	_Buz1+5
 10563                           
 10564                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 10565  0E33  082A               	movf	setBuz@time+1,w
 10566  0E34  01DD               	clrf	_Buz1+11
 10567  0E35  07DD               	addwf	_Buz1+11,f
 10568  0E36  0829               	movf	setBuz@time,w
 10569  0E37  01DC               	clrf	_Buz1+10
 10570  0E38  07DC               	addwf	_Buz1+10,f
 10571  0E39  0008               	return
 10572  0E3A                     __end_of_setBuz:	
 10573                           
 10574                           	psect	text71
 10575  0FAC                     __ptext71:	
 10576 ;; *************** function ___awdiv *****************
 10577 ;; Defined at:
 10578 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  divisor         2    0[BANK0 ] int 
 10581 ;;  dividend        2    2[BANK0 ] int 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;  quotient        2    7[BANK0 ] int 
 10584 ;;  sign            1    6[BANK0 ] unsigned char 
 10585 ;;  counter         1    5[BANK0 ] unsigned char 
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2    0[BANK0 ] int 
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;Total ram usage:        9 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    5
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_setBuz
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function ___awdiv
 10611  0FAC                     ___awdiv:	
 10612                           
 10613                           ;incstack = 0
 10614                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10615  0FAC  0020               	movlb	0	; select bank0
 10616  0FAD  01A6               	clrf	___awdiv@sign
 10617  0FAE  1FA1               	btfss	___awdiv@divisor+1,7
 10618  0FAF  2FB7               	goto	l5435
 10619  0FB0  09A0               	comf	___awdiv@divisor,f
 10620  0FB1  09A1               	comf	___awdiv@divisor+1,f
 10621  0FB2  0AA0               	incf	___awdiv@divisor,f
 10622  0FB3  1903               	skipnz
 10623  0FB4  0AA1               	incf	___awdiv@divisor+1,f
 10624  0FB5  01A6               	clrf	___awdiv@sign
 10625  0FB6  0AA6               	incf	___awdiv@sign,f
 10626  0FB7                     l5435:	
 10627  0FB7  1FA3               	btfss	___awdiv@dividend+1,7
 10628  0FB8  2FC2               	goto	l5441
 10629  0FB9  09A2               	comf	___awdiv@dividend,f
 10630  0FBA  09A3               	comf	___awdiv@dividend+1,f
 10631  0FBB  0AA2               	incf	___awdiv@dividend,f
 10632  0FBC  1903               	skipnz
 10633  0FBD  0AA3               	incf	___awdiv@dividend+1,f
 10634  0FBE  3001               	movlw	1
 10635  0FBF  00A4               	movwf	??___awdiv
 10636  0FC0  0824               	movf	??___awdiv,w
 10637  0FC1  06A6               	xorwf	___awdiv@sign,f
 10638  0FC2                     l5441:	
 10639  0FC2  01A7               	clrf	___awdiv@quotient
 10640  0FC3  01A8               	clrf	___awdiv@quotient+1
 10641  0FC4  0821               	movf	___awdiv@divisor+1,w
 10642  0FC5  0420               	iorwf	___awdiv@divisor,w
 10643  0FC6  1903               	skipnz
 10644  0FC7  2FF1               	goto	l5463
 10645  0FC8  01A5               	clrf	___awdiv@counter
 10646  0FC9  0AA5               	incf	___awdiv@counter,f
 10647  0FCA                     l5451:	
 10648  0FCA  1BA1               	btfsc	___awdiv@divisor+1,7
 10649  0FCB  2FD6               	goto	l5453
 10650  0FCC  3001               	movlw	1
 10651  0FCD                     u5485:	
 10652  0FCD  35A0               	lslf	___awdiv@divisor,f
 10653  0FCE  0DA1               	rlf	___awdiv@divisor+1,f
 10654  0FCF  0B89               	decfsz	9,f
 10655  0FD0  2FCD               	goto	u5485
 10656  0FD1  3001               	movlw	1
 10657  0FD2  00A4               	movwf	??___awdiv
 10658  0FD3  0824               	movf	??___awdiv,w
 10659  0FD4  07A5               	addwf	___awdiv@counter,f
 10660  0FD5  2FCA               	goto	l5451
 10661  0FD6                     l5453:	
 10662  0FD6  3001               	movlw	1
 10663  0FD7                     u5505:	
 10664  0FD7  35A7               	lslf	___awdiv@quotient,f
 10665  0FD8  0DA8               	rlf	___awdiv@quotient+1,f
 10666  0FD9  0B89               	decfsz	9,f
 10667  0FDA  2FD7               	goto	u5505
 10668  0FDB  0821               	movf	___awdiv@divisor+1,w
 10669  0FDC  0223               	subwf	___awdiv@dividend+1,w
 10670  0FDD  1D03               	skipz
 10671  0FDE  2FE1               	goto	u5515
 10672  0FDF  0820               	movf	___awdiv@divisor,w
 10673  0FE0  0222               	subwf	___awdiv@dividend,w
 10674  0FE1                     u5515:	
 10675  0FE1  1C03               	skipc
 10676  0FE2  2FE8               	goto	l5459
 10677  0FE3  0820               	movf	___awdiv@divisor,w
 10678  0FE4  02A2               	subwf	___awdiv@dividend,f
 10679  0FE5  0821               	movf	___awdiv@divisor+1,w
 10680  0FE6  3BA3               	subwfb	___awdiv@dividend+1,f
 10681  0FE7  1427               	bsf	___awdiv@quotient,0
 10682  0FE8                     l5459:	
 10683  0FE8  3001               	movlw	1
 10684  0FE9                     u5525:	
 10685  0FE9  36A1               	lsrf	___awdiv@divisor+1,f
 10686  0FEA  0CA0               	rrf	___awdiv@divisor,f
 10687  0FEB  0B89               	decfsz	9,f
 10688  0FEC  2FE9               	goto	u5525
 10689  0FED  3001               	movlw	1
 10690  0FEE  02A5               	subwf	___awdiv@counter,f
 10691  0FEF  1D03               	btfss	3,2
 10692  0FF0  2FD6               	goto	l5453
 10693  0FF1                     l5463:	
 10694  0FF1  0826               	movf	___awdiv@sign,w
 10695  0FF2  1903               	btfsc	3,2
 10696  0FF3  2FF9               	goto	l5467
 10697  0FF4  09A7               	comf	___awdiv@quotient,f
 10698  0FF5  09A8               	comf	___awdiv@quotient+1,f
 10699  0FF6  0AA7               	incf	___awdiv@quotient,f
 10700  0FF7  1903               	skipnz
 10701  0FF8  0AA8               	incf	___awdiv@quotient+1,f
 10702  0FF9                     l5467:	
 10703  0FF9  0828               	movf	___awdiv@quotient+1,w
 10704  0FFA  01A1               	clrf	?___awdiv+1
 10705  0FFB  07A1               	addwf	?___awdiv+1,f
 10706  0FFC  0827               	movf	___awdiv@quotient,w
 10707  0FFD  01A0               	clrf	?___awdiv
 10708  0FFE  07A0               	addwf	?___awdiv,f
 10709  0FFF  0008               	return
 10710  1000                     __end_of___awdiv:	
 10711                           
 10712                           	psect	text72
 10713  0834                     __ptext72:	
 10714 ;; *************** function _DelayOff_Initialization *****************
 10715 ;; Defined at:
 10716 ;;		line 26 in file "../src/DelayOff_B1.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;		None               void
 10723 ;; Registers used:
 10724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    7
 10737 ;; This function calls:
 10738 ;;		_DlyOff_Initialization
 10739 ;; This function is called by:
 10740 ;;		_main
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _DelayOff_Initialization
 10746  0834                     _DelayOff_Initialization:	
 10747                           
 10748                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 10749                           
 10750                           ;incstack = 0
 10751                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10752  0834  3001               	movlw	1
 10753  0835  3188  205F  3188   	fcall	_DlyOff_Initialization
 10754                           
 10755                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 10756  0838  3002               	movlw	2
 10757  0839  3188  205F         	fcall	_DlyOff_Initialization
 10758  083B  0008               	return
 10759  083C                     __end_of_DelayOff_Initialization:	
 10760                           
 10761                           	psect	text73
 10762  085F                     __ptext73:	
 10763 ;; *************** function _DlyOff_Initialization *****************
 10764 ;; Defined at:
 10765 ;;		line 56 in file "../src/DelayOff_B1.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;  sw              1    wreg     unsigned char 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  sw              1    2[BANK0 ] unsigned char 
 10770 ;; Return value:  Size  Location     Type
 10771 ;;		None               void
 10772 ;; Registers used:
 10773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10774 ;; Tracked objects:
 10775 ;;		On entry : 0/0
 10776 ;;		On exit  : 0/0
 10777 ;;		Unchanged: 0/0
 10778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;Total ram usage:        1 bytes
 10784 ;; Hardware stack levels used:    1
 10785 ;; Hardware stack levels required when called:    6
 10786 ;; This function calls:
 10787 ;;		_DelayOffPointSelect
 10788 ;; This function is called by:
 10789 ;;		_DelayOff_Initialization
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           
 10794                           ;psect for function _DlyOff_Initialization
 10795  085F                     _DlyOff_Initialization:	
 10796                           
 10797                           ;incstack = 0
 10798                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10799                           ;DlyOff_Initialization@sw stored from wreg
 10800  085F  0020               	movlb	0	; select bank0
 10801  0860  00A2               	movwf	DlyOff_Initialization@sw
 10802                           
 10803                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 10804  0861  0822               	movf	DlyOff_Initialization@sw,w
 10805  0862  3189  2189         	fcall	_DelayOffPointSelect
 10806                           
 10807                           ;DelayOff_B1.c: 58: DelayOff->Enable = 1;
 10808  0864  0020               	movlb	0	; select bank0
 10809  0865  0864               	movf	_DelayOff,w
 10810  0866  0086               	movwf	6
 10811  0867  0187               	clrf	7
 10812  0868  1401               	bsf	1,0
 10813  0869  0008               	return
 10814  086A                     __end_of_DlyOff_Initialization:	
 10815                           
 10816                           	psect	text74
 10817  0989                     __ptext74:	
 10818 ;; *************** function _DelayOffPointSelect *****************
 10819 ;; Defined at:
 10820 ;;		line 7 in file "../src/DelayOff_B1.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  sw              1    wreg     unsigned char 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;  sw              1    1[BANK0 ] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;		None               void
 10827 ;; Registers used:
 10828 ;;		wreg
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;Total ram usage:        2 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    5
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_DlyOff_Initialization
 10845 ;;		_DlyOff_Main
 10846 ;;		_setDelayOff_GO
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _DelayOffPointSelect
 10852  0989                     _DelayOffPointSelect:	
 10853                           
 10854                           ;incstack = 0
 10855                           ; Regs used in _DelayOffPointSelect: [wreg]
 10856                           ;DelayOffPointSelect@sw stored from wreg
 10857  0989  0020               	movlb	0	; select bank0
 10858  098A  00A1               	movwf	DelayOffPointSelect@sw
 10859                           
 10860                           ;DelayOff_B1.c: 9: if (sw == 1) {
 10861  098B  0821               	movf	DelayOffPointSelect@sw,w
 10862  098C  3A01               	xorlw	1
 10863  098D  1D03               	skipz
 10864  098E  2994               	goto	l5389
 10865                           
 10866                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 10867  098F  3069               	movlw	_DlySw1& (0+255)
 10868  0990  00A0               	movwf	??_DelayOffPointSelect
 10869  0991  0820               	movf	??_DelayOffPointSelect,w
 10870  0992  00E4               	movwf	_DelayOff
 10871                           
 10872                           ;DelayOff_B1.c: 11: }
 10873  0993  0008               	return
 10874  0994                     l5389:	
 10875                           
 10876                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 10877  0994  0821               	movf	DelayOffPointSelect@sw,w
 10878  0995  3A02               	xorlw	2
 10879  0996  1D03               	skipz
 10880  0997  0008               	return
 10881                           
 10882                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 10883  0998  306B               	movlw	_DlySw2& (0+255)
 10884  0999  00A0               	movwf	??_DelayOffPointSelect
 10885  099A  0820               	movf	??_DelayOffPointSelect,w
 10886  099B  00E4               	movwf	_DelayOff
 10887  099C  0008               	return
 10888  099D                     __end_of_DelayOffPointSelect:	
 10889                           
 10890                           	psect	text75
 10891  0D30                     __ptext75:	
 10892 ;; *************** function _Buzzer_Main *****************
 10893 ;; Defined at:
 10894 ;;		line 46 in file "../src/Buzzer_B1.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;		None               void
 10901 ;; Registers used:
 10902 ;;		wreg, status,2, status,0
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;Total ram usage:        1 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; Hardware stack levels required when called:    5
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_main
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           
 10923                           ;psect for function _Buzzer_Main
 10924  0D30                     _Buzzer_Main:	
 10925                           
 10926                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 10927                           
 10928                           ;incstack = 0
 10929                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 10930  0D30  0020               	movlb	0	; select bank0
 10931  0D31  1CD2               	btfss	_Buz1,1
 10932  0D32  0008               	return
 10933                           
 10934                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 10935  0D33  3001               	movlw	1
 10936  0D34  07D3               	addwf	_Buz1+1,f
 10937  0D35  3000               	movlw	0
 10938  0D36  3DD4               	addwfc	_Buz1+2,f
 10939                           
 10940                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 10941  0D37  0859               	movf	_Buz1+7,w
 10942  0D38  0254               	subwf	_Buz1+2,w
 10943  0D39  1D03               	skipz
 10944  0D3A  2D3D               	goto	u6745
 10945  0D3B  0858               	movf	_Buz1+6,w
 10946  0D3C  0253               	subwf	_Buz1+1,w
 10947  0D3D                     u6745:	
 10948  0D3D  1C03               	skipc
 10949  0D3E  0008               	return
 10950                           
 10951                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 10952  0D3F  01D3               	clrf	_Buz1+1
 10953  0D40  01D4               	clrf	_Buz1+2
 10954                           
 10955                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 10956  0D41  12D2               	bcf	_Buz1,5
 10957  0D42  198D               	btfsc	13,3	;volatile
 10958  0D43  16D2               	bsf	_Buz1,5
 10959                           
 10960                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 10961  0D44  0020               	movlb	0	; select bank0
 10962  0D45  1AD2               	btfsc	_Buz1,5
 10963  0D46  2D6B               	goto	l76
 10964                           
 10965                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 10966  0D47  08D5               	movf	_Buz1+3,f
 10967  0D48  1D03               	skipz
 10968  0D49  2D68               	goto	l77
 10969                           
 10970                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 10971  0D4A  1DD2               	btfss	_Buz1,3
 10972  0D4B  2D58               	goto	l78
 10973                           
 10974                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 10975  0D4C  11D2               	bcf	_Buz1,3
 10976                           
 10977                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 10978  0D4D  0856               	movf	_Buz1+4,w
 10979  0D4E  00A0               	movwf	??_Buzzer_Main
 10980  0D4F  0820               	movf	??_Buzzer_Main,w
 10981  0D50  00D5               	movwf	_Buz1+3
 10982                           
 10983                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 10984  0D51  085B               	movf	_Buz1+9,w
 10985  0D52  01D9               	clrf	_Buz1+7
 10986  0D53  07D9               	addwf	_Buz1+7,f
 10987  0D54  085A               	movf	_Buz1+8,w
 10988  0D55  01D8               	clrf	_Buz1+6
 10989  0D56  07D8               	addwf	_Buz1+6,f
 10990                           
 10991                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 10992  0D57  0008               	return
 10993  0D58                     l78:	
 10994  0D58  1E52               	btfss	_Buz1,4
 10995  0D59  2D66               	goto	l80
 10996                           
 10997                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 10998  0D5A  1252               	bcf	_Buz1,4
 10999                           
 11000                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 11001  0D5B  0857               	movf	_Buz1+5,w
 11002  0D5C  00A0               	movwf	??_Buzzer_Main
 11003  0D5D  0820               	movf	??_Buzzer_Main,w
 11004  0D5E  00D5               	movwf	_Buz1+3
 11005                           
 11006                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 11007  0D5F  085D               	movf	_Buz1+11,w
 11008  0D60  01D9               	clrf	_Buz1+7
 11009  0D61  07D9               	addwf	_Buz1+7,f
 11010  0D62  085C               	movf	_Buz1+10,w
 11011  0D63  01D8               	clrf	_Buz1+6
 11012  0D64  07D8               	addwf	_Buz1+6,f
 11013                           
 11014                           ;Buzzer_B1.c: 62: } else {
 11015  0D65  0008               	return
 11016  0D66                     l80:	
 11017                           
 11018                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 11019  0D66  10D2               	bcf	_Buz1,1
 11020                           
 11021                           ;Buzzer_B1.c: 64: }
 11022                           ;Buzzer_B1.c: 65: } else {
 11023  0D67  0008               	return
 11024  0D68                     l77:	
 11025                           
 11026                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 11027  0D68  16D2               	bsf	_Buz1,5
 11028                           
 11029                           ;Buzzer_B1.c: 68: RB3 = 1;
 11030  0D69  158D               	bsf	13,3	;volatile
 11031                           
 11032                           ;Buzzer_B1.c: 69: }
 11033                           ;Buzzer_B1.c: 70: } else {
 11034  0D6A  0008               	return
 11035  0D6B                     l76:	
 11036                           
 11037                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 11038  0D6B  12D2               	bcf	_Buz1,5
 11039                           
 11040                           ;Buzzer_B1.c: 73: RB3 = 0;
 11041  0D6C  118D               	bcf	13,3	;volatile
 11042                           
 11043                           ;Buzzer_B1.c: 75: Buz1.Count--;
 11044  0D6D  3001               	movlw	1
 11045  0D6E  02D5               	subwf	_Buz1+3,f
 11046  0D6F  0008               	return
 11047  0D70                     __end_of_Buzzer_Main:	
 11048                           
 11049                           	psect	text76
 11050  0807                     __ptext76:	
 11051 ;; *************** function _Buzzer_Initialization *****************
 11052 ;; Defined at:
 11053 ;;		line 11 in file "../src/Buzzer_B1.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;		None               void
 11060 ;; Registers used:
 11061 ;;		None
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11071 ;;Total ram usage:        0 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    5
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		_main
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           
 11082                           ;psect for function _Buzzer_Initialization
 11083  0807                     _Buzzer_Initialization:	
 11084                           
 11085                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 11086                           
 11087                           ;incstack = 0
 11088                           ; Regs used in _Buzzer_Initialization: []
 11089  0807  0020               	movlb	0	; select bank0
 11090  0808  1452               	bsf	_Buz1,0
 11091  0809  0008               	return
 11092  080A                     __end_of_Buzzer_Initialization:	
 11093                           
 11094                           	psect	intentry
 11095  0004                     __pintentry:	
 11096 ;; *************** function _ISR *****************
 11097 ;; Defined at:
 11098 ;;		line 107 in file "../src/MCU_B1.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;		None
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;		None               void
 11105 ;; Registers used:
 11106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11116 ;;Total ram usage:        1 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    4
 11119 ;; This function calls:
 11120 ;;		_IOC_ISR
 11121 ;;		_TMR1_ISR
 11122 ;; This function is called by:
 11123 ;;		Interrupt level 1
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127  0004                     _ISR:	
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11131  0004  147E               	bsf	126,0	;set compiler interrupt flag
 11132  0005  3180               	pagesel	$
 11133  0006  0020               	movlb	0	; select bank0
 11134  0007  087F               	movf	127,w
 11135  0008  00FB               	movwf	??_ISR
 11136                           
 11137                           ;MCU_B1.c: 109: IOC_ISR();
 11138  0009  3188  20C0  3180   	fcall	_IOC_ISR
 11139                           
 11140                           ;MCU_B1.c: 111: ;;
 11141                           ;MCU_B1.c: 113: TMR1_ISR();
 11142  000C  318B  23A7         	fcall	_TMR1_ISR
 11143  000E  087B               	movf	??_ISR,w
 11144  000F  0020               	movlb	0	; select bank0
 11145  0010  00FF               	movwf	127
 11146  0011  107E               	bcf	126,0	;clear compiler interrupt flag
 11147  0012  0009               	retfie
 11148  0013                     __end_of_ISR:	
 11149                           
 11150                           	psect	text78
 11151  0BA7                     __ptext78:	
 11152 ;; *************** function _TMR1_ISR *****************
 11153 ;; Defined at:
 11154 ;;		line 209 in file "../src/MCU_B1.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;		None               void
 11161 ;; Registers used:
 11162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;Total ram usage:        0 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    2
 11175 ;; This function calls:
 11176 ;;		_setDimmerLights_IntrControl
 11177 ;; This function is called by:
 11178 ;;		_ISR
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           
 11183                           ;psect for function _TMR1_ISR
 11184  0BA7                     _TMR1_ISR:	
 11185                           
 11186                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
 11187                           
 11188                           ;incstack = 0
 11189                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11190  0BA7  0021               	movlb	1	; select bank1
 11191  0BA8  1C11               	btfss	17,0	;volatile
 11192  0BA9  0008               	return
 11193  0BAA  0020               	movlb	0	; select bank0
 11194  0BAB  1C11               	btfss	17,0	;volatile
 11195  0BAC  0008               	return
 11196                           
 11197                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
 11198  0BAD  30FA               	movlw	250
 11199  0BAE  0097               	movwf	23	;volatile
 11200                           
 11201                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
 11202  0BAF  3038               	movlw	56
 11203  0BB0  0096               	movwf	22	;volatile
 11204                           
 11205                           ;MCU_B1.c: 214: TMR1IF = 0;
 11206  0BB1  1011               	bcf	17,0	;volatile
 11207                           
 11208                           ;MCU_B1.c: 219: setDimmerLights_IntrControl(1);
 11209  0BB2  3001               	movlw	1
 11210  0BB3  3181  21C4  318B   	fcall	_setDimmerLights_IntrControl
 11211                           
 11212                           ;MCU_B1.c: 224: setDimmerLights_IntrControl(2);
 11213  0BB6  3002               	movlw	2
 11214  0BB7  3181  21C4  318B   	fcall	_setDimmerLights_IntrControl
 11215                           
 11216                           ;MCU_B1.c: 234: Timer1.Count++;
 11217  0BBA  3001               	movlw	1
 11218  0BBB  0020               	movlb	0	; select bank0
 11219  0BBC  07E2               	addwf	_Timer1+1,f
 11220  0BBD  3000               	movlw	0
 11221  0BBE  3DE3               	addwfc	_Timer1+2,f
 11222                           
 11223                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
 11224  0BBF  3001               	movlw	1
 11225  0BC0  3E61               	addlw	_Timer1& (0+255)
 11226  0BC1  0086               	movwf	6
 11227  0BC2  0187               	clrf	7
 11228  0BC3  3F40               	moviw [0]fsr1
 11229  0BC4  3A64               	xorlw	100
 11230  0BC5  1D03               	skipz
 11231  0BC6  2BC9               	goto	u465_25
 11232  0BC7  3F41               	moviw [1]fsr1
 11233  0BC8  3A00               	xorlw	0
 11234  0BC9                     u465_25:	
 11235  0BC9  1D03               	skipz
 11236  0BCA  0008               	return
 11237                           
 11238                           ;MCU_B1.c: 236: {
 11239                           ;MCU_B1.c: 237: Timer1.Count = 0;
 11240  0BCB  01E2               	clrf	_Timer1+1
 11241  0BCC  01E3               	clrf	_Timer1+2
 11242                           
 11243                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
 11244  0BCD  1461               	bsf	_Timer1,0
 11245  0BCE  0008               	return
 11246  0BCF                     __end_of_TMR1_ISR:	
 11247                           
 11248                           	psect	text79
 11249  01C4                     __ptext79:	
 11250 ;; *************** function _setDimmerLights_IntrControl *****************
 11251 ;; Defined at:
 11252 ;;		line 94 in file "../src/Dimmer_B1.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  lights          1    wreg     unsigned char 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  lights          1    4[COMMON] unsigned char 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;		None               void
 11259 ;; Registers used:
 11260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;Total ram usage:        3 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:    1
 11273 ;; This function calls:
 11274 ;;		_DimmerIntrPointSelect
 11275 ;; This function is called by:
 11276 ;;		_TMR1_ISR
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function _setDimmerLights_IntrControl
 11282  01C4                     _setDimmerLights_IntrControl:	
 11283                           
 11284                           ;incstack = 0
 11285                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11286                           ;setDimmerLights_IntrControl@lights stored from wreg
 11287  01C4  00FA               	movwf	setDimmerLights_IntrControl@lights
 11288                           
 11289                           ;Dimmer_B1.c: 96: DimmerIntrPointSelect(lights);
 11290  01C5  087A               	movf	setDimmerLights_IntrControl@lights,w
 11291  01C6  3189  2140  3181   	fcall	_DimmerIntrPointSelect
 11292                           
 11293                           ;Dimmer_B1.c: 97: if (DimmerLightsIntr->GO == 1) {
 11294  01C9  0874               	movf	_DimmerLightsIntr,w
 11295  01CA  0086               	movwf	6
 11296  01CB  0187               	clrf	7
 11297  01CC  1C01               	btfss	1,0
 11298  01CD  2A12               	goto	i1l4389
 11299                           
 11300                           ;Dimmer_B1.c: 98: DimmerLightsIntr->Count++;
 11301  01CE  3001               	movlw	1
 11302  01CF  00F8               	movwf	??_setDimmerLights_IntrControl
 11303  01D0  0874               	movf	_DimmerLightsIntr,w
 11304  01D1  3E03               	addlw	3
 11305  01D2  0086               	movwf	6
 11306  01D3  0187               	clrf	7
 11307  01D4  0878               	movf	??_setDimmerLights_IntrControl,w
 11308  01D5  0781               	addwf	1,f
 11309                           
 11310                           ;Dimmer_B1.c: 99: if (DimmerLightsIntr->Count >= (DimmerLightsIntr->DimmingValue + Dimme
      +                          r.Correction)) {
 11311  01D6  0874               	movf	_DimmerLightsIntr,w
 11312  01D7  3E04               	addlw	4
 11313  01D8  0086               	movwf	6
 11314  01D9  0187               	clrf	7
 11315  01DA  0801               	movf	1,w
 11316  01DB  0020               	movlb	0	; select bank0
 11317  01DC  0760               	addwf	_Dimmer+2,w
 11318  01DD  00F8               	movwf	??_setDimmerLights_IntrControl
 11319  01DE  01F9               	clrf	??_setDimmerLights_IntrControl+1
 11320  01DF  0DF9               	rlf	??_setDimmerLights_IntrControl+1,f
 11321  01E0  0874               	movf	_DimmerLightsIntr,w
 11322  01E1  3E03               	addlw	3
 11323  01E2  0086               	movwf	6
 11324  01E3  0187               	clrf	7
 11325  01E4  0879               	movf	??_setDimmerLights_IntrControl+1,w
 11326  01E5  3A80               	xorlw	128
 11327  01E6  3C80               	sublw	128
 11328  01E7  1D03               	skipz
 11329  01E8  29EB               	goto	u367_25
 11330  01E9  0878               	movf	??_setDimmerLights_IntrControl,w
 11331  01EA  0201               	subwf	1,w
 11332  01EB                     u367_25:	
 11333  01EB  1C03               	skipc
 11334  01EC  2AF0               	goto	i1l4453
 11335                           
 11336                           ;Dimmer_B1.c: 100: DimmerLightsIntr->Count = 0;
 11337  01ED  0874               	movf	_DimmerLightsIntr,w
 11338  01EE  3E03               	addlw	3
 11339  01EF  0086               	movwf	6
 11340  01F0  0187               	clrf	7
 11341  01F1  0181               	clrf	1
 11342                           
 11343                           ;Dimmer_B1.c: 101: DimmerLightsIntr->GO = 0;
 11344  01F2  0874               	movf	_DimmerLightsIntr,w
 11345  01F3  0086               	movwf	6
 11346  01F4  0187               	clrf	7
 11347  01F5  1001               	bcf	1,0
 11348                           
 11349                           ;Dimmer_B1.c: 103: if (DimmerLightsIntr->StatusFlag == 1) {
 11350  01F6  0874               	movf	_DimmerLightsIntr,w
 11351  01F7  0086               	movwf	6
 11352  01F8  0187               	clrf	7
 11353  01F9  1F01               	btfss	1,6
 11354  01FA  2AF0               	goto	i1l4453
 11355                           
 11356                           ;Dimmer_B1.c: 104: DimmerLightsIntr->Flag = 1;
 11357  01FB  0874               	movf	_DimmerLightsIntr,w
 11358  01FC  3E08               	addlw	8
 11359  01FD  0086               	movwf	6
 11360  01FE  0187               	clrf	7
 11361  01FF  1401               	bsf	1,0
 11362                           
 11363                           ;Dimmer_B1.c: 105: DimmerLightsIntr->Triac = 1;
 11364  0200  0874               	movf	_DimmerLightsIntr,w
 11365  0201  3E08               	addlw	8
 11366  0202  0086               	movwf	6
 11367  0203  0187               	clrf	7
 11368  0204  1681               	bsf	1,5
 11369                           
 11370                           ;Dimmer_B1.c: 107: if (lights == 1) {
 11371  0205  087A               	movf	setDimmerLights_IntrControl@lights,w
 11372  0206  3A01               	xorlw	1
 11373  0207  1D03               	skipz
 11374  0208  2A0B               	goto	i1l4385
 11375                           
 11376                           ;Dimmer_B1.c: 108: RA7 = 1;
 11377  0209  0020               	movlb	0	; select bank0
 11378  020A  178C               	bsf	12,7	;volatile
 11379  020B                     i1l4385:	
 11380                           ;Dimmer_B1.c: 109: ;;
 11381                           
 11382                           
 11383                           ;Dimmer_B1.c: 110: }
 11384                           ;Dimmer_B1.c: 113: if (lights == 2) {
 11385  020B  087A               	movf	setDimmerLights_IntrControl@lights,w
 11386  020C  3A02               	xorlw	2
 11387  020D  1D03               	skipz
 11388  020E  2AF0               	goto	i1l4453
 11389                           
 11390                           ;Dimmer_B1.c: 114: RB4 = 1;
 11391  020F  0020               	movlb	0	; select bank0
 11392  0210  160D               	bsf	13,4	;volatile
 11393                           
 11394                           ;Dimmer_B1.c: 115: }
 11395                           ;Dimmer_B1.c: 122: }
 11396                           ;Dimmer_B1.c: 123: }
 11397                           ;Dimmer_B1.c: 124: } else {
 11398  0211  2AF0               	goto	i1l4453
 11399  0212                     i1l4389:	
 11400                           
 11401                           ;Dimmer_B1.c: 125: if (DimmerLightsIntr->Flag == 1) {
 11402  0212  0874               	movf	_DimmerLightsIntr,w
 11403  0213  3E08               	addlw	8
 11404  0214  0086               	movwf	6
 11405  0215  0187               	clrf	7
 11406  0216  1C01               	btfss	1,0
 11407  0217  2AF0               	goto	i1l4453
 11408                           
 11409                           ;Dimmer_B1.c: 126: DimmerLightsIntr->Flag = 0;
 11410  0218  0874               	movf	_DimmerLightsIntr,w
 11411  0219  3E08               	addlw	8
 11412  021A  0086               	movwf	6
 11413  021B  0187               	clrf	7
 11414  021C  1001               	bcf	1,0
 11415                           
 11416                           ;Dimmer_B1.c: 127: if (DimmerLightsIntr->Signal == 1) {
 11417  021D  0874               	movf	_DimmerLightsIntr,w
 11418  021E  0086               	movwf	6
 11419  021F  0187               	clrf	7
 11420  0220  1C81               	btfss	1,1
 11421  0221  2AF0               	goto	i1l4453
 11422                           
 11423                           ;Dimmer_B1.c: 128: DimmerLightsIntr->DimmingTime++;
 11424  0222  3001               	movlw	1
 11425  0223  00F8               	movwf	??_setDimmerLights_IntrControl
 11426  0224  0A74               	incf	_DimmerLightsIntr,w
 11427  0225  0086               	movwf	6
 11428  0226  0187               	clrf	7
 11429  0227  0878               	movf	??_setDimmerLights_IntrControl,w
 11430  0228  0781               	addwf	1,f
 11431                           
 11432                           ;Dimmer_B1.c: 129: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 11433  0229  0A74               	incf	_DimmerLightsIntr,w
 11434  022A  0086               	movwf	6
 11435  022B  0187               	clrf	7
 11436  022C  0874               	movf	_DimmerLightsIntr,w
 11437  022D  3E02               	addlw	2
 11438  022E  0084               	movwf	4
 11439  022F  0185               	clrf	5
 11440  0230  0800               	movf	0,w
 11441  0231  0201               	subwf	1,w
 11442  0232  1C03               	skipc
 11443  0233  2AF0               	goto	i1l4453
 11444                           
 11445                           ;Dimmer_B1.c: 130: DimmerLightsIntr->DimmingTime = 0;
 11446  0234  0A74               	incf	_DimmerLightsIntr,w
 11447  0235  0086               	movwf	6
 11448  0236  0187               	clrf	7
 11449  0237  0181               	clrf	1
 11450                           
 11451                           ;Dimmer_B1.c: 131: if (DimmerLightsIntr->AdjFlag == 1) {
 11452  0238  0874               	movf	_DimmerLightsIntr,w
 11453  0239  0086               	movwf	6
 11454  023A  0187               	clrf	7
 11455  023B  1D81               	btfss	1,3
 11456  023C  2A6C               	goto	i1l4415
 11457                           
 11458                           ;Dimmer_B1.c: 132: if (DimmerLightsIntr->AdjStatus == 0) {
 11459  023D  0874               	movf	_DimmerLightsIntr,w
 11460  023E  0086               	movwf	6
 11461  023F  0187               	clrf	7
 11462  0240  1A01               	btfsc	1,4
 11463  0241  2A56               	goto	i1l4409
 11464                           
 11465                           ;Dimmer_B1.c: 133: if (DimmerLightsIntr->DimmingValue > ((char)((100-60)*0.8))) {
 11466  0242  0874               	movf	_DimmerLightsIntr,w
 11467  0243  3E04               	addlw	4
 11468  0244  0086               	movwf	6
 11469  0245  0187               	clrf	7
 11470  0246  3021               	movlw	33
 11471  0247  0201               	subwf	1,w
 11472  0248  1C03               	skipc
 11473  0249  2A51               	goto	i1l4407
 11474                           
 11475                           ;Dimmer_B1.c: 134: DimmerLightsIntr->DimmingValue--;
 11476  024A  0874               	movf	_DimmerLightsIntr,w
 11477  024B  3E04               	addlw	4
 11478  024C  0086               	movwf	6
 11479  024D  0187               	clrf	7
 11480  024E  3001               	movlw	1
 11481  024F  0281               	subwf	1,f
 11482                           
 11483                           ;Dimmer_B1.c: 135: } else {
 11484  0250  2AF0               	goto	i1l4453
 11485  0251                     i1l4407:	
 11486                           
 11487                           ;Dimmer_B1.c: 136: DimmerLightsIntr->AdjStatus = 1;
 11488  0251  0874               	movf	_DimmerLightsIntr,w
 11489  0252  0086               	movwf	6
 11490  0253  0187               	clrf	7
 11491  0254  1601               	bsf	1,4
 11492                           
 11493                           ;Dimmer_B1.c: 137: }
 11494                           ;Dimmer_B1.c: 138: } else {
 11495  0255  2AF0               	goto	i1l4453
 11496  0256                     i1l4409:	
 11497                           
 11498                           ;Dimmer_B1.c: 139: if (DimmerLightsIntr->DimmingValue < ((char)((100-25)*0.8))) {
 11499  0256  0874               	movf	_DimmerLightsIntr,w
 11500  0257  3E04               	addlw	4
 11501  0258  0086               	movwf	6
 11502  0259  0187               	clrf	7
 11503  025A  303C               	movlw	60
 11504  025B  0201               	subwf	1,w
 11505  025C  1803               	skipnc
 11506  025D  2A67               	goto	i1l4413
 11507                           
 11508                           ;Dimmer_B1.c: 140: DimmerLightsIntr->DimmingValue++;
 11509  025E  3001               	movlw	1
 11510  025F  00F8               	movwf	??_setDimmerLights_IntrControl
 11511  0260  0874               	movf	_DimmerLightsIntr,w
 11512  0261  3E04               	addlw	4
 11513  0262  0086               	movwf	6
 11514  0263  0187               	clrf	7
 11515  0264  0878               	movf	??_setDimmerLights_IntrControl,w
 11516  0265  0781               	addwf	1,f
 11517                           
 11518                           ;Dimmer_B1.c: 141: } else {
 11519  0266  2AF0               	goto	i1l4453
 11520  0267                     i1l4413:	
 11521                           
 11522                           ;Dimmer_B1.c: 142: DimmerLightsIntr->AdjStatus = 0;
 11523  0267  0874               	movf	_DimmerLightsIntr,w
 11524  0268  0086               	movwf	6
 11525  0269  0187               	clrf	7
 11526  026A  1201               	bcf	1,4
 11527                           
 11528                           ;Dimmer_B1.c: 143: }
 11529                           ;Dimmer_B1.c: 144: }
 11530                           ;Dimmer_B1.c: 145: } else if (DimmerLightsIntr->AdjRF == 1) {
 11531  026B  2AF0               	goto	i1l4453
 11532  026C                     i1l4415:	
 11533  026C  0874               	movf	_DimmerLightsIntr,w
 11534  026D  0086               	movwf	6
 11535  026E  0187               	clrf	7
 11536  026F  1D01               	btfss	1,2
 11537  0270  2AA9               	goto	i1l4429
 11538                           
 11539                           ;Dimmer_B1.c: 146: if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumValue) {
 11540  0271  0874               	movf	_DimmerLightsIntr,w
 11541  0272  3E05               	addlw	5
 11542  0273  0086               	movwf	6
 11543  0274  0187               	clrf	7
 11544  0275  0874               	movf	_DimmerLightsIntr,w
 11545  0276  3E04               	addlw	4
 11546  0277  0084               	movwf	4
 11547  0278  0185               	clrf	5
 11548  0279  0800               	movf	0,w
 11549  027A  0201               	subwf	1,w
 11550  027B  1803               	skipnc
 11551  027C  2A84               	goto	i1l4421
 11552                           
 11553                           ;Dimmer_B1.c: 147: DimmerLightsIntr->DimmingValue--;
 11554  027D  0874               	movf	_DimmerLightsIntr,w
 11555  027E  3E04               	addlw	4
 11556  027F  0086               	movwf	6
 11557  0280  0187               	clrf	7
 11558  0281  3001               	movlw	1
 11559  0282  0281               	subwf	1,f
 11560                           
 11561                           ;Dimmer_B1.c: 148: } else if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumV
      +                          alue) {
 11562  0283  2A98               	goto	i1l4425
 11563  0284                     i1l4421:	
 11564  0284  0874               	movf	_DimmerLightsIntr,w
 11565  0285  3E04               	addlw	4
 11566  0286  0086               	movwf	6
 11567  0287  0187               	clrf	7
 11568  0288  0874               	movf	_DimmerLightsIntr,w
 11569  0289  3E05               	addlw	5
 11570  028A  0084               	movwf	4
 11571  028B  0185               	clrf	5
 11572  028C  0800               	movf	0,w
 11573  028D  0201               	subwf	1,w
 11574  028E  1803               	skipnc
 11575  028F  2A98               	goto	i1l4425
 11576                           
 11577                           ;Dimmer_B1.c: 149: DimmerLightsIntr->DimmingValue++;
 11578  0290  3001               	movlw	1
 11579  0291  00F8               	movwf	??_setDimmerLights_IntrControl
 11580  0292  0874               	movf	_DimmerLightsIntr,w
 11581  0293  3E04               	addlw	4
 11582  0294  0086               	movwf	6
 11583  0295  0187               	clrf	7
 11584  0296  0878               	movf	??_setDimmerLights_IntrControl,w
 11585  0297  0781               	addwf	1,f
 11586  0298                     i1l4425:	
 11587                           
 11588                           ;Dimmer_B1.c: 150: }
 11589                           ;Dimmer_B1.c: 151: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 11590  0298  0874               	movf	_DimmerLightsIntr,w
 11591  0299  3E05               	addlw	5
 11592  029A  0086               	movwf	6
 11593  029B  0187               	clrf	7
 11594  029C  0874               	movf	_DimmerLightsIntr,w
 11595  029D  3E04               	addlw	4
 11596  029E  0084               	movwf	4
 11597  029F  0185               	clrf	5
 11598  02A0  0800               	movf	0,w
 11599  02A1  0601               	xorwf	1,w
 11600  02A2  1D03               	skipz
 11601  02A3  2AF0               	goto	i1l4453
 11602                           
 11603                           ;Dimmer_B1.c: 152: DimmerLightsIntr->AdjRF = 0;
 11604  02A4  0874               	movf	_DimmerLightsIntr,w
 11605  02A5  0086               	movwf	6
 11606  02A6  0187               	clrf	7
 11607  02A7  1101               	bcf	1,2
 11608  02A8  2AC0               	goto	i1l4435
 11609  02A9                     i1l4429:	
 11610                           ;Dimmer_B1.c: 154: }
 11611                           ;Dimmer_B1.c: 155: } else {
 11612                           
 11613                           ;Dimmer_B1.c: 153: DimmerLightsIntr->Signal = 0;
 11614                           
 11615                           
 11616                           ;Dimmer_B1.c: 156: if (DimmerLightsIntr->Status == 1) {
 11617  02A9  0874               	movf	_DimmerLightsIntr,w
 11618  02AA  0086               	movwf	6
 11619  02AB  0187               	clrf	7
 11620  02AC  1E81               	btfss	1,5
 11621  02AD  2AC5               	goto	i1l4437
 11622                           
 11623                           ;Dimmer_B1.c: 157: DimmerLightsIntr->DimmingValue--;
 11624  02AE  0874               	movf	_DimmerLightsIntr,w
 11625  02AF  3E04               	addlw	4
 11626  02B0  0086               	movwf	6
 11627  02B1  0187               	clrf	7
 11628  02B2  3001               	movlw	1
 11629  02B3  0281               	subwf	1,f
 11630                           
 11631                           ;Dimmer_B1.c: 158: if (DimmerLightsIntr->DimmingValue <= DimmerLightsIntr->MaxmumValue) 
      +                          {
 11632  02B4  0874               	movf	_DimmerLightsIntr,w
 11633  02B5  3E05               	addlw	5
 11634  02B6  0086               	movwf	6
 11635  02B7  0187               	clrf	7
 11636  02B8  0874               	movf	_DimmerLightsIntr,w
 11637  02B9  3E04               	addlw	4
 11638  02BA  0084               	movwf	4
 11639  02BB  0185               	clrf	5
 11640  02BC  0800               	movf	0,w
 11641  02BD  0201               	subwf	1,w
 11642  02BE  1C03               	skipc
 11643  02BF  2AF0               	goto	i1l4453
 11644  02C0                     i1l4435:	
 11645                           
 11646                           ;Dimmer_B1.c: 159: DimmerLightsIntr->Signal = 0;
 11647  02C0  0874               	movf	_DimmerLightsIntr,w
 11648  02C1  0086               	movwf	6
 11649  02C2  0187               	clrf	7
 11650  02C3  1081               	bcf	1,1
 11651                           
 11652                           ;Dimmer_B1.c: 160: }
 11653                           ;Dimmer_B1.c: 161: } else {
 11654  02C4  2AF0               	goto	i1l4453
 11655  02C5                     i1l4437:	
 11656                           
 11657                           ;Dimmer_B1.c: 162: DimmerLightsIntr->DimmingValue++;
 11658  02C5  3001               	movlw	1
 11659  02C6  00F8               	movwf	??_setDimmerLights_IntrControl
 11660  02C7  0874               	movf	_DimmerLightsIntr,w
 11661  02C8  3E04               	addlw	4
 11662  02C9  0086               	movwf	6
 11663  02CA  0187               	clrf	7
 11664  02CB  0878               	movf	??_setDimmerLights_IntrControl,w
 11665  02CC  0781               	addwf	1,f
 11666                           
 11667                           ;Dimmer_B1.c: 163: if (DimmerLightsIntr->DimmingValue >= DimmerLightsIntr->MinimumValue)
      +                           {
 11668  02CD  0874               	movf	_DimmerLightsIntr,w
 11669  02CE  3E04               	addlw	4
 11670  02CF  0086               	movwf	6
 11671  02D0  0187               	clrf	7
 11672  02D1  0874               	movf	_DimmerLightsIntr,w
 11673  02D2  3E06               	addlw	6
 11674  02D3  0084               	movwf	4
 11675  02D4  0185               	clrf	5
 11676  02D5  0800               	movf	0,w
 11677  02D6  0201               	subwf	1,w
 11678  02D7  1C03               	skipc
 11679  02D8  2AF0               	goto	i1l4453
 11680                           
 11681                           ;Dimmer_B1.c: 164: DimmerLightsIntr->Signal = 0;
 11682  02D9  0874               	movf	_DimmerLightsIntr,w
 11683  02DA  0086               	movwf	6
 11684  02DB  0187               	clrf	7
 11685  02DC  1081               	bcf	1,1
 11686                           
 11687                           ;Dimmer_B1.c: 165: DimmerLightsIntr->StatusFlag = 0;
 11688  02DD  0874               	movf	_DimmerLightsIntr,w
 11689  02DE  0086               	movwf	6
 11690  02DF  0187               	clrf	7
 11691  02E0  1301               	bcf	1,6
 11692                           
 11693                           ;Dimmer_B1.c: 166: DimmerLightsIntr->Clear = 1;
 11694  02E1  0874               	movf	_DimmerLightsIntr,w
 11695  02E2  3E09               	addlw	9
 11696  02E3  0086               	movwf	6
 11697  02E4  0187               	clrf	7
 11698  02E5  1501               	bsf	1,2
 11699                           
 11700                           ;Dimmer_B1.c: 167: Dimmer.Detect = 1;
 11701  02E6  0020               	movlb	0	; select bank0
 11702  02E7  145E               	bsf	_Dimmer,0
 11703                           
 11704                           ;Dimmer_B1.c: 169: if (lights == 1) {
 11705  02E8  087A               	movf	setDimmerLights_IntrControl@lights,w
 11706  02E9  3A01               	xorlw	1
 11707  02EA  1903               	btfsc	3,2
 11708                           
 11709                           ;Dimmer_B1.c: 170: RA3 = 0;
 11710  02EB  118C               	bcf	12,3	;volatile
 11711                           
 11712                           ;Dimmer_B1.c: 172: }
 11713                           ;Dimmer_B1.c: 175: if (lights == 2) {
 11714  02EC  087A               	movf	setDimmerLights_IntrControl@lights,w
 11715  02ED  3A02               	xorlw	2
 11716  02EE  1903               	btfsc	3,2
 11717                           
 11718                           ;Dimmer_B1.c: 176: RC7 = 0;
 11719  02EF  138E               	bcf	14,7	;volatile
 11720  02F0                     i1l4453:	
 11721                           ;Dimmer_B1.c: 177: }
 11722                           ;Dimmer_B1.c: 184: ;;
 11723                           
 11724                           
 11725                           ;Dimmer_B1.c: 185: }
 11726                           ;Dimmer_B1.c: 186: }
 11727                           ;Dimmer_B1.c: 187: }
 11728                           ;Dimmer_B1.c: 188: }
 11729                           ;Dimmer_B1.c: 189: }
 11730                           ;Dimmer_B1.c: 190: }
 11731                           ;Dimmer_B1.c: 191: }
 11732                           ;Dimmer_B1.c: 192: if (DimmerLightsIntr->Triac == 1) {
 11733  02F0  0874               	movf	_DimmerLightsIntr,w
 11734  02F1  3E08               	addlw	8
 11735  02F2  0086               	movwf	6
 11736  02F3  0187               	clrf	7
 11737  02F4  1E81               	btfss	1,5
 11738  02F5  2B1C               	goto	i1l4471
 11739                           
 11740                           ;Dimmer_B1.c: 193: DimmerLightsIntr->TriacTime++;
 11741  02F6  3001               	movlw	1
 11742  02F7  00F8               	movwf	??_setDimmerLights_IntrControl
 11743  02F8  0874               	movf	_DimmerLightsIntr,w
 11744  02F9  3E07               	addlw	7
 11745  02FA  0086               	movwf	6
 11746  02FB  0187               	clrf	7
 11747  02FC  0878               	movf	??_setDimmerLights_IntrControl,w
 11748  02FD  0781               	addwf	1,f
 11749                           
 11750                           ;Dimmer_B1.c: 194: if (DimmerLightsIntr->TriacTime >= 5) {
 11751  02FE  0874               	movf	_DimmerLightsIntr,w
 11752  02FF  3E07               	addlw	7
 11753  0300  0086               	movwf	6
 11754  0301  0187               	clrf	7
 11755  0302  3005               	movlw	5
 11756  0303  0201               	subwf	1,w
 11757  0304  1C03               	skipc
 11758  0305  2B1C               	goto	i1l4471
 11759                           
 11760                           ;Dimmer_B1.c: 195: DimmerLightsIntr->TriacTime = 0;
 11761  0306  0874               	movf	_DimmerLightsIntr,w
 11762  0307  3E07               	addlw	7
 11763  0308  0086               	movwf	6
 11764  0309  0187               	clrf	7
 11765  030A  0181               	clrf	1
 11766                           
 11767                           ;Dimmer_B1.c: 196: DimmerLightsIntr->Triac = 0;
 11768  030B  0874               	movf	_DimmerLightsIntr,w
 11769  030C  3E08               	addlw	8
 11770  030D  0086               	movwf	6
 11771  030E  0187               	clrf	7
 11772  030F  1281               	bcf	1,5
 11773                           
 11774                           ;Dimmer_B1.c: 199: if (lights == 1) {
 11775  0310  087A               	movf	setDimmerLights_IntrControl@lights,w
 11776  0311  3A01               	xorlw	1
 11777  0312  1D03               	skipz
 11778  0313  2B16               	goto	i1l4467
 11779                           
 11780                           ;Dimmer_B1.c: 200: RA7 = 0;
 11781  0314  0020               	movlb	0	; select bank0
 11782  0315  138C               	bcf	12,7	;volatile
 11783  0316                     i1l4467:	
 11784                           ;Dimmer_B1.c: 201: ;;
 11785                           
 11786                           
 11787                           ;Dimmer_B1.c: 202: }
 11788                           ;Dimmer_B1.c: 205: if (lights == 2) {
 11789  0316  087A               	movf	setDimmerLights_IntrControl@lights,w
 11790  0317  3A02               	xorlw	2
 11791  0318  1D03               	skipz
 11792  0319  2B1C               	goto	i1l4471
 11793                           
 11794                           ;Dimmer_B1.c: 206: RB4 = 0;
 11795  031A  0020               	movlb	0	; select bank0
 11796  031B  120D               	bcf	13,4	;volatile
 11797  031C                     i1l4471:	
 11798                           
 11799                           ;Dimmer_B1.c: 207: }
 11800                           ;Dimmer_B1.c: 214: }
 11801                           ;Dimmer_B1.c: 215: }
 11802                           ;Dimmer_B1.c: 216: if (DimmerLightsIntr->TriacFlag == 1) {
 11803  031C  0874               	movf	_DimmerLightsIntr,w
 11804  031D  3E09               	addlw	9
 11805  031E  0086               	movwf	6
 11806  031F  0187               	clrf	7
 11807  0320  1E81               	btfss	1,5
 11808  0321  0008               	return
 11809                           
 11810                           ;Dimmer_B1.c: 217: DimmerLightsIntr->TriacCount++;
 11811  0322  3001               	movlw	1
 11812  0323  00F8               	movwf	??_setDimmerLights_IntrControl
 11813  0324  0874               	movf	_DimmerLightsIntr,w
 11814  0325  3E0A               	addlw	10
 11815  0326  0086               	movwf	6
 11816  0327  0187               	clrf	7
 11817  0328  0878               	movf	??_setDimmerLights_IntrControl,w
 11818  0329  0781               	addwf	1,f
 11819                           
 11820                           ;Dimmer_B1.c: 218: if (DimmerLightsIntr->TriacCount == 70) {
 11821  032A  0874               	movf	_DimmerLightsIntr,w
 11822  032B  3E0A               	addlw	10
 11823  032C  0086               	movwf	6
 11824  032D  0187               	clrf	7
 11825  032E  0801               	movf	1,w
 11826  032F  3A46               	xorlw	70
 11827  0330  1D03               	skipz
 11828  0331  0008               	return
 11829                           
 11830                           ;Dimmer_B1.c: 219: DimmerLightsIntr->TriacCount = 0;
 11831  0332  0874               	movf	_DimmerLightsIntr,w
 11832  0333  3E0A               	addlw	10
 11833  0334  0086               	movwf	6
 11834  0335  0187               	clrf	7
 11835  0336  0181               	clrf	1
 11836                           
 11837                           ;Dimmer_B1.c: 220: DimmerLightsIntr->TriacFlag = 0;
 11838  0337  0874               	movf	_DimmerLightsIntr,w
 11839  0338  3E09               	addlw	9
 11840  0339  0086               	movwf	6
 11841  033A  0187               	clrf	7
 11842  033B  1281               	bcf	1,5
 11843  033C  0008               	return
 11844  033D                     __end_of_setDimmerLights_IntrControl:	
 11845                           
 11846                           	psect	text80
 11847  0940                     __ptext80:	
 11848 ;; *************** function _DimmerIntrPointSelect *****************
 11849 ;; Defined at:
 11850 ;;		line 72 in file "../src/Dimmer_B1.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  lights          1    wreg     unsigned char 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  lights          1    1[COMMON] unsigned char 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;		None               void
 11857 ;; Registers used:
 11858 ;;		wreg
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;Total ram usage:        2 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_setDimmerLights_IntrControl
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           
 11878                           ;psect for function _DimmerIntrPointSelect
 11879  0940                     _DimmerIntrPointSelect:	
 11880                           
 11881                           ;incstack = 0
 11882                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 11883                           ;DimmerIntrPointSelect@lights stored from wreg
 11884  0940  00F7               	movwf	DimmerIntrPointSelect@lights
 11885                           
 11886                           ;Dimmer_B1.c: 74: if (lights == 1) {
 11887  0941  0877               	movf	DimmerIntrPointSelect@lights,w
 11888  0942  3A01               	xorlw	1
 11889  0943  1D03               	skipz
 11890  0944  2949               	goto	i1l401
 11891                           
 11892                           ;Dimmer_B1.c: 75: DimmerLightsIntr = &DimmerLights1;
 11893  0945  30C2               	movlw	_DimmerLights1& (0+255)
 11894  0946  00F6               	movwf	??_DimmerIntrPointSelect
 11895  0947  0876               	movf	??_DimmerIntrPointSelect,w
 11896  0948  00F4               	movwf	_DimmerLightsIntr
 11897  0949                     i1l401:	
 11898                           
 11899                           ;Dimmer_B1.c: 76: }
 11900                           ;Dimmer_B1.c: 79: if (lights == 2) {
 11901  0949  0877               	movf	DimmerIntrPointSelect@lights,w
 11902  094A  3A02               	xorlw	2
 11903  094B  1D03               	skipz
 11904  094C  0008               	return
 11905                           
 11906                           ;Dimmer_B1.c: 80: DimmerLightsIntr = &DimmerLights2;
 11907  094D  30D1               	movlw	_DimmerLights2& (0+255)
 11908  094E  00F6               	movwf	??_DimmerIntrPointSelect
 11909  094F  0876               	movf	??_DimmerIntrPointSelect,w
 11910  0950  00F4               	movwf	_DimmerLightsIntr
 11911  0951  0008               	return
 11912  0952                     __end_of_DimmerIntrPointSelect:	
 11913                           
 11914                           	psect	text81
 11915  08C0                     __ptext81:	
 11916 ;; *************** function _IOC_ISR *****************
 11917 ;; Defined at:
 11918 ;;		line 401 in file "../src/MCU_B1.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;		None               void
 11925 ;; Registers used:
 11926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    3
 11939 ;; This function calls:
 11940 ;;		_setDimmerReClock
 11941 ;; This function is called by:
 11942 ;;		_ISR
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           
 11947                           ;psect for function _IOC_ISR
 11948  08C0                     _IOC_ISR:	
 11949                           
 11950                           ;MCU_B1.c: 402: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 11951                           
 11952                           ;incstack = 0
 11953                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11954  08C0  1D8B               	btfss	11,3	;volatile
 11955  08C1  0008               	return
 11956  08C2  1C0B               	btfss	11,0	;volatile
 11957  08C3  0008               	return
 11958  08C4  0027               	movlb	7	; select bank7
 11959  08C5  1D16               	btfss	22,2	;volatile
 11960  08C6  0008               	return
 11961                           
 11962                           ;MCU_B1.c: 403: IOCBF2 = 0;
 11963  08C7  1116               	bcf	22,2	;volatile
 11964                           
 11965                           ;MCU_B1.c: 404: IOCIF = 0;
 11966  08C8  100B               	bcf	11,0	;volatile
 11967                           
 11968                           ;MCU_B1.c: 405: if (myMain.PowerON == 1) {
 11969  08C9  0021               	movlb	1	; select bank1
 11970  08CA  1C20               	btfss	_myMain^(0+128),0
 11971  08CB  0008               	return
 11972                           
 11973                           ;MCU_B1.c: 407: setDimmerReClock();
 11974  08CC  3188  202C         	fcall	_setDimmerReClock
 11975  08CE  0008               	return
 11976  08CF                     __end_of_IOC_ISR:	
 11977                           
 11978                           	psect	text82
 11979  082C                     __ptext82:	
 11980 ;; *************** function _setDimmerReClock *****************
 11981 ;; Defined at:
 11982 ;;		line 244 in file "../src/MCU_B1.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;		None               void
 11989 ;; Registers used:
 11990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;Total ram usage:        0 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    2
 12003 ;; This function calls:
 12004 ;;		_setDimmerLights_IntrIOC_GO
 12005 ;; This function is called by:
 12006 ;;		_IOC_ISR
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           
 12011                           ;psect for function _setDimmerReClock
 12012  082C                     _setDimmerReClock:	
 12013                           
 12014                           ;MCU_B1.c: 249: setDimmerLights_IntrIOC_GO(1);
 12015                           
 12016                           ;incstack = 0
 12017                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12018  082C  3001               	movlw	1
 12019  082D  318B  2343  3188   	fcall	_setDimmerLights_IntrIOC_GO
 12020                           
 12021                           ;MCU_B1.c: 253: setDimmerLights_IntrIOC_GO(2);
 12022  0830  3002               	movlw	2
 12023  0831  318B  2343         	fcall	_setDimmerLights_IntrIOC_GO
 12024  0833  0008               	return
 12025  0834                     __end_of_setDimmerReClock:	
 12026                           
 12027                           	psect	text83
 12028  0B43                     __ptext83:	
 12029 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 12030 ;; Defined at:
 12031 ;;		line 28 in file "../src/Dimmer_B1.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  lights          1    wreg     unsigned char 
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;  lights          1    2[COMMON] unsigned char 
 12036 ;; Return value:  Size  Location     Type
 12037 ;;		None               void
 12038 ;; Registers used:
 12039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12040 ;; Tracked objects:
 12041 ;;		On entry : 0/0
 12042 ;;		On exit  : 0/0
 12043 ;;		Unchanged: 0/0
 12044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;Total ram usage:        1 bytes
 12050 ;; Hardware stack levels used:    1
 12051 ;; Hardware stack levels required when called:    1
 12052 ;; This function calls:
 12053 ;;		_DimmerIntrIOCPointSelect
 12054 ;; This function is called by:
 12055 ;;		_setDimmerReClock
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _setDimmerLights_IntrIOC_GO
 12061  0B43                     _setDimmerLights_IntrIOC_GO:	
 12062                           
 12063                           ;incstack = 0
 12064                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12065                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 12066  0B43  00F8               	movwf	setDimmerLights_IntrIOC_GO@lights
 12067                           
 12068                           ;Dimmer_B1.c: 30: DimmerIntrIOCPointSelect(lights);
 12069  0B44  0878               	movf	setDimmerLights_IntrIOC_GO@lights,w
 12070  0B45  3189  212E  318B   	fcall	_DimmerIntrIOCPointSelect
 12071                           
 12072                           ;Dimmer_B1.c: 32: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->TriacFlag == 
      +                          0) {
 12073  0B48  0875               	movf	_DimmerLightsIntrIOC,w
 12074  0B49  0086               	movwf	6
 12075  0B4A  0187               	clrf	7
 12076  0B4B  1801               	btfsc	1,0
 12077  0B4C  0008               	return
 12078  0B4D  0875               	movf	_DimmerLightsIntrIOC,w
 12079  0B4E  3E09               	addlw	9
 12080  0B4F  0086               	movwf	6
 12081  0B50  0187               	clrf	7
 12082  0B51  1A81               	btfsc	1,5
 12083  0B52  0008               	return
 12084                           
 12085                           ;Dimmer_B1.c: 33: DimmerLightsIntrIOC->GO = 1;
 12086  0B53  0875               	movf	_DimmerLightsIntrIOC,w
 12087  0B54  0086               	movwf	6
 12088  0B55  0187               	clrf	7
 12089  0B56  1401               	bsf	1,0
 12090                           
 12091                           ;Dimmer_B1.c: 34: DimmerLightsIntrIOC->TriacFlag = 1;
 12092  0B57  0875               	movf	_DimmerLightsIntrIOC,w
 12093  0B58  3E09               	addlw	9
 12094  0B59  0086               	movwf	6
 12095  0B5A  0187               	clrf	7
 12096  0B5B  1681               	bsf	1,5
 12097                           
 12098                           ;Dimmer_B1.c: 35: if (RB2 == 1) {
 12099  0B5C  0020               	movlb	0	; select bank0
 12100  0B5D  1D0D               	btfss	13,2	;volatile
 12101  0B5E  2B62               	goto	i1l3997
 12102                           
 12103                           ;Dimmer_B1.c: 36: Dimmer.Correction = 1;
 12104  0B5F  01E0               	clrf	_Dimmer+2
 12105  0B60  0AE0               	incf	_Dimmer+2,f
 12106                           
 12107                           ;Dimmer_B1.c: 37: } else {
 12108  0B61  0008               	return
 12109  0B62                     i1l3997:	
 12110                           
 12111                           ;Dimmer_B1.c: 38: Dimmer.Correction = 0;
 12112  0B62  01E0               	clrf	_Dimmer+2
 12113  0B63  0008               	return
 12114  0B64                     __end_of_setDimmerLights_IntrIOC_GO:	
 12115                           
 12116                           	psect	text84
 12117  092E                     __ptext84:	
 12118 ;; *************** function _DimmerIntrIOCPointSelect *****************
 12119 ;; Defined at:
 12120 ;;		line 8 in file "../src/Dimmer_B1.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  lights          1    wreg     unsigned char 
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  lights          1    1[COMMON] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;		None               void
 12127 ;; Registers used:
 12128 ;;		wreg
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;Total ram usage:        2 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_setDimmerLights_IntrIOC_GO
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           
 12148                           ;psect for function _DimmerIntrIOCPointSelect
 12149  092E                     _DimmerIntrIOCPointSelect:	
 12150                           
 12151                           ;incstack = 0
 12152                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 12153                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 12154  092E  00F7               	movwf	DimmerIntrIOCPointSelect@lights
 12155                           
 12156                           ;Dimmer_B1.c: 10: if (lights == 1) {
 12157  092F  0877               	movf	DimmerIntrIOCPointSelect@lights,w
 12158  0930  3A01               	xorlw	1
 12159  0931  1D03               	skipz
 12160  0932  2937               	goto	i1l390
 12161                           
 12162                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 12163  0933  30C2               	movlw	_DimmerLights1& (0+255)
 12164  0934  00F6               	movwf	??_DimmerIntrIOCPointSelect
 12165  0935  0876               	movf	??_DimmerIntrIOCPointSelect,w
 12166  0936  00F5               	movwf	_DimmerLightsIntrIOC
 12167  0937                     i1l390:	
 12168                           
 12169                           ;Dimmer_B1.c: 12: }
 12170                           ;Dimmer_B1.c: 15: if (lights == 2) {
 12171  0937  0877               	movf	DimmerIntrIOCPointSelect@lights,w
 12172  0938  3A02               	xorlw	2
 12173  0939  1D03               	skipz
 12174  093A  0008               	return
 12175                           
 12176                           ;Dimmer_B1.c: 16: DimmerLightsIntrIOC = &DimmerLights2;
 12177  093B  30D1               	movlw	_DimmerLights2& (0+255)
 12178  093C  00F6               	movwf	??_DimmerIntrIOCPointSelect
 12179  093D  0876               	movf	??_DimmerIntrIOCPointSelect,w
 12180  093E  00F5               	movwf	_DimmerLightsIntrIOC
 12181  093F  0008               	return
 12182  0940                     __end_of_DimmerIntrIOCPointSelect:	
 12183  007E                     btemp	set	126	;btemp
 12184  007E                     pic14e$flags	set	126
 12185  007E                     wtemp	set	126
 12186  007E                     wtemp0	set	126
 12187  0080                     wtemp1	set	128
 12188  0082                     wtemp2	set	130
 12189  0084                     wtemp3	set	132
 12190  0086                     wtemp4	set	134
 12191  0088                     wtemp5	set	136
 12192  007F                     wtemp6	set	127
 12193  007E                     ttemp	set	126
 12194  007E                     ttemp0	set	126
 12195  0081                     ttemp1	set	129
 12196  0084                     ttemp2	set	132
 12197  0087                     ttemp3	set	135
 12198  007F                     ttemp4	set	127
 12199  007E                     ltemp	set	126
 12200  007E                     ltemp0	set	126
 12201  0082                     ltemp1	set	130
 12202  0086                     ltemp2	set	134
 12203  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         164
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     50      78
    BANK1            80      4      80
    BANK2            80      0      55
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK2[9]), Sw1(BANK2[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 

    DimmerLights22	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights2(BANK1[15]), DimmerLights1(BANK1[15]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 2
		 -> NULL(NULL[0]), DlySw2(BANK0[2]), DlySw1(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _Switch_Main->_setSw_Main
    _setSw_Main->_Sw_DimmerOffFunc
    _Sw_DimmerOnFunc->_setBuz
    _Sw_DimmerOffFunc->_setDelayOff_GO
    _setDelayOff_GO->_DelayTimejudge
    _DelayTimejudge->___bmul
    _Sw_DimmerAdjFunc->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setMain_Exception->_setDimmerLights_Trigger
    _getDimmerLights_Status->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _DimmerLights_Close->_getDimmerLights_StatusFlag
    _DimmerLights_Close->_setMemory_GO
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setBuz
    _setSw_Status->_SwPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _setBuz->___awdiv
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   29042
                                              0 BANK1      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0    1601
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           2     2      0     197
                                              4 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     166
                                              0 BANK0      4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     136
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         2     2      0     136
                                              5 BANK0      2     2      0
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          2     2      0    9437
                                             21 BANK0      2     2      0
                         _TouchPower
           _getMain_All_Error_Status
                  _setMain_Exception
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    7023
                                             18 BANK0      3     3      0
                      _SwPointSelect
                   _Sw_DimmerAdjFunc
                   _Sw_DimmerOffFunc
                    _Sw_DimmerOnFunc
                    _getSw_KeyStatus
                             _setBuz
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      5     5      0     176
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOnFunc                                      2     2      0    2378
                                             13 BANK0      2     2      0
                             _setBuz
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerOffFunc                                     3     3      0    2186
                                             15 BANK0      3     3      0
                     _setDelayOff_GO
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       5     3      2    1086
                                             10 BANK0      5     3      2
                _DelayOffPointSelect
                     _DelayTimejudge
 ---------------------------------------------------------------------------------
 (5) _DelayTimejudge                                       6     6      0     444
                                              4 BANK0      6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               4     3      1     240
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Sw_DimmerAdjFunc                                     2     2      0     465
                                              5 BANK0      2     2      0
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           3     2      1     332
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    5     5      0    2182
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
            _setDimmerLights_Trigger
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Status                               2     2      0     127
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1182
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1182
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1306
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1306
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     340
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0     340
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    7688
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    7286
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     430
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3615
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    3142
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2801
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4020
                 _DimmerLights_Close
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 2     2      0    3853
                                             13 BANK0      2     2      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     332
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1638
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
                             _setLED
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1151
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_Close                                   0     0      0     167
         _getDimmerLights_StatusFlag
                       _setMemory_GO
 ---------------------------------------------------------------------------------
 (4) _setMemory_GO                                         3     3      0      93
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_StatusFlag                           3     3      0      74
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      93
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      93
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2732
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2732
                                             13 BANK0      3     3      0
                _DelayOffPointSelect
                             _setBuz
            _setDimmerLights_Trigger
                       _setSw_Status
 ---------------------------------------------------------------------------------
 (3) _setSw_Status                                         3     2      1     332
                                              2 BANK0      3     2      1
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              3     2      1     644
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1601
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      93
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      93
                                              2 BANK0      1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0     264
                                              5 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     198
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (9) _setDimmerLights_IntrControl                          3     3      0     198
                                              2 COMMON     3     3      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (10) _DimmerIntrPointSelect                               2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0      66
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (9) _setDimmerReClock                                     0     0      0      66
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrIOC_GO                          1     1      0      66
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrIOCPointSelect                            2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setSw_Status
         _SwPointSelect
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _DimmerLights_Close
       _getDimmerLights_StatusFlag
       _setMemory_GO
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setLED
           _LedPointSelect
         _setMemory_GO
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _getMain_All_Error_Status
     _setMain_Exception
       _getDimmerLights_Status
         _DimmerLightsPointSelect
       _setDimmerLights_Trigger
         _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
     _setSw_Main
       _SwPointSelect
       _Sw_DimmerAdjFunc
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOffFunc
         _setDelayOff_GO
           _DelayOffPointSelect
           _DelayTimejudge
             ___bmul
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _Sw_DimmerOnFunc
         _setBuz
           ___awdiv
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
       _getSw_KeyStatus
       _setBuz
         ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
   _WDT_Main
     _WDT_Clearing
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR1_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     101      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     101      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Nov 06 17:33:08 2014

                   __size_of_Switch_Main 0021                    ?_Flash_Memory_Erasing 0076  
                           _WDT_Clearing 07FE             ??_setDimmerLights_TriggerAdj 0023  
                         ___bmul@product 0022                                       l80 0D66  
                                     l66 0E1E                                       l76 0D6B  
                                     l68 0E2C                                       l77 0D68  
                                     l78 0D58                                       _RD 0CA8  
                                     _WR 0CA9                             ___awdiv@sign 0026  
                                     _Sw 0067       __end_of_getDimmerLights_StatusFlag 092E  
             _getDimmerLights_StatusFlag 091D                   __end_of_setDelayOff_GO 06F9  
              setDimmerLights_Adj@lights 0024                     _setDimmerLights_Main 0754  
                                    l444 0980                                      l904 0C77  
                                    l913 0DED                                      l891 0AE2  
                                    _GIE 005F                                      _RA0 0060  
   __size_of_DimmerLights_Initialization 0015                                      _RB1 0069  
                                    _RA3 0063                                      _RB2 006A  
                                    _RA4 0064                                      _LED 0066  
                                    _RB3 006B                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC5 0075  
                                    _RC7 0077                                      _ISR 0004  
                                    _WDT 0070             getDimmerLights_Status@lights 0022  
                                    _Sw1 0145                                      _Sw2 014E  
              setDimmerLights_Adj@status 0022                    _Buzzer_Initialization 0807  
                        __end_of_ADC_Set 082C                          ?_DelayTimejudge 0076  
                                    wreg 0009     setDimmerLights_Initialization@lights 0023  
           getDimmerLights_Status@status 0023                   _setMain_Exception$3025 0026  
                        _setDimmerLights 05CD                        ??_getSw_KeyStatus 0020  
                                   ?_ISR 0076                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 08CF                             ___ftdiv@sign 003D  
                                   l1050 0F47                                     l1232 0542  
                                   l1093 0A84                                     l1089 0A88  
               ?_DimmerLightsPointSelect 0076                                     l1621 09E2  
                                   l1650 01BA                          __end_of_IOC_Set 090D  
                                   l1637 0B73                                     l1639 0B7A  
                                   l1931 0683                                     l1925 066C  
                                   l4333 05C4                                     l4325 05AA  
                                   l4317 058F                                     l4263 0431  
                                   l4327 05B3                                     l4319 059D  
                                   l6103 04C1                                     l6023 0B0E  
                                   l4257 041B                                     l4329 05B6  
                                   l6041 0DB8                                     l6025 0B11  
                                   l6203 00C4                                     l4285 048B  
                                   l4277 0472                                     l5405 0C1F  
                                   l6133 0511                                     l6029 0B16  
                                   l5423 0A9E                                     l6047 0DCD  
                                   l6215 00FE                                     l6223 012D  
                                   l6143 0526                                     l5441 0FC2  
                                   l6161 09E7                                     l6081 0F86  
                                   l6073 0F71                                     l6145 0527  
                                   l5451 0FCA                                     l5435 0FB7  
                                   l5419 0A95                                     l4299 055F  
                                   l6091 0FA5                                     l6067 0F64  
                                   l5371 0967                                     l5523 06D5  
                                   l5453 0FD6                                     l6165 09ED  
                                   l6085 0F93                                     l5525 06E2  
                                   l5463 0FF1                                     l5607 09A8  
                                   l5551 070F                                     l6343 03AF  
                                   l5375 096D                                     l5519 06CF  
                                   l6247 017B                                     l5625 0927  
                                   l5561 071F                                     l3961 0653  
                                   l6089 0F9C                                     l5529 06EE  
                                   l6193 0097                                     l6417 0CA6  
                                   l5467 0FF9                                     l5459 0FE8  
                                   l5547 0709                                     l5555 0715  
                                   l3971 0679                                     l3963 0658  
                                   l3955 0642                                     l5803 0EE5  
                                   l6435 0F31                                     l5389 0994  
                                   l5581 0745                                     l5565 0725  
                                   l5725 0C5F                                     l6445 0F48  
                                   l5655 0614                                     l5663 0C35  
                                   l3959 0649                                     l5823 0D04  
                                   l5815 0F08                                     l5577 073F  
                                   l5585 074B                                     l5569 072B  
                                   l5921 077E                                     l3969 0671  
                                   l5931 07A3                                     l5763 0A7F  
                                   l5827 0D11                                     l6563 0E9C  
                                   l5919 0778                                     l5847 0DA5  
                                   l6567 0EA3                                     l5857 0B90  
                                   l5961 0CE4                                     l5777 0AF1  
                                   l5787 0AFD                                     l5779 0AF3  
                                   l5965 0CEB                                     l5789 0B01  
                                   l5799 0ED8                    _myMain_Initialization 08DE  
                                   _CFGS 0CAE                             __CFG_WDTE$ON 0000  
                                   _FREE 0CAC                                     _LATA 010C  
                                   _LATB 010D                                     u3015 064E  
                                   _LATC 010E                                     u3035 0667  
                                   u3055 0674                                     u3085 068A  
                                   u3505 0482                                     u3515 048C  
                                   u3605 05AB                                     u3545 0566  
                                   u3475 0443                                     _PEIE 005E  
                                   u3485 0453                                     u3495 0473  
                                   u3575 0590                                     u5505 0FD7  
                                   u5515 0FE1                                     u5525 0FE9  
                                   u6505 0517                                     u5395 0C0B  
                                   u5485 0FCD                                     u6485 0502  
                                   u6745 0D3D                                     u6905 0C9D  
                                   u5875 09D5                                     u6915 0CAC  
                                   u6935 0F20                                     u6865 0AD9  
                                   u6945 0F3F                                     u6965 0F56  
                                   _LWLO 0CAD                                     _WREN 0CAA  
                                   _Buz1 0052                                     _Temp 00B0  
                                   _main 0E80                             ___ftpack@arg 0020  
                    __end_of_DlyOff_Main 07FE                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 001E                                     btemp 007E  
                        __end_of_WDT_Set 085F                                     ltemp 007E  
                       _setDimmerReClock 082C                                     start 0013  
                                   ttemp 007E                                     wtemp 007E  
                    DelayTimejudge@value 0029                        ___bmul@multiplier 0023  
           __size_of_Temp_Initialization 0003                                    ??_ISR 007B  
                           ___fttol@exp1 004B                             ___fttol@lval 0047  
                 _getDimmerLights_Status 08CF           __size_of_DimmerIntrPointSelect 0012  
                       __end_of_LED_Main 0899            __end_of_DimmerIntrPointSelect 0952  
                  ?_setDimmerLights_Main 0076                          ?_setDelayOff_GO 002A  
                                  ?_main 00EC                          __end_of___awdiv 1000  
                        __end_of___ftdiv 04AD                          ___awdiv@divisor 0020  
                                  _T1CON 0018                          __end_of___fttol 05CD  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                                    i1l401 0949  
                                  i1l390 0937                          ___awdiv@counter 0025  
                                  _TMR1H 0017                                    _TMR1L 0016  
                                  _PORTA 000C                                    _PORTB 000D  
                                  _PORTC 000E                             ?_setLED_Main 0076  
                                  _TRISA 008C                                    _TRISB 008D  
                                  _TRISC 008E                                    _WPUB1 1069  
                                  _WPUB2 106A                  __end_of_Timeout_Counter 09DB  
                          __CFG_WRT$HALF 0000       __end_of_setDimmerLights_IntrIOC_GO 0B64  
             _setDimmerLights_IntrIOC_GO 0B43                         __end_of_TMR1_ISR 0BCF  
                       __end_of_TMR1_Set 08A5                                    _getAD 0B03  
                          ___awtoft@sign 002D              DimmerIntrPointSelect@lights 0077  
                          ___ftpack@sign 0024                            ??_Buzzer_Main 0020  
                       __end_of_WDT_Main 091D                      setMemory_GO@command 0022  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010            __end_of_setLED_Initialization 08FD  
                                  ttemp0 007E                                    ttemp1 0081  
                                  ttemp2 0084                                    ttemp3 0087  
                                  ttemp4 007F                                    status 0003  
                                  wtemp0 007E                                    wtemp1 0080  
                                  wtemp2 0082                                    wtemp3 0084  
                                  wtemp4 0086                                    wtemp5 0088  
                                  wtemp6 007F              __size_of_Flash_Memory_Write 002F  
                         setSw_Status@sw 0024         __size_of_DelayOff_Initialization 0008  
              setDimmerLights_Main@clear 002D                   ??_Flash_Memory_Erasing 0020  
                        __initialization 0015                        ??_Sw_DimmerOnFunc 002D  
                      ??_setPercentValue 004C                             __end_of_main 0EC6  
                       __end_of_Fosc_Set 0814                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 0639                     _setSw_Initialization 0844  
                                 ??_main 0052                            ___fttol@sign1 0046  
                 ?_Buzzer_Initialization 0076        __size_of_DimmerIntrIOCPointSelect 0012  
                ??_DlyOff_Initialization 0022                ?_DimmerIntrIOCPointSelect 0076  
                              ??_IOC_ISR 0079                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 0989                  ??_Switch_Initialization 0025  
                                 ?_getAD 0020                              _DlyOff_Main 07A9  
                 ?_myMain_Initialization 0076                                   _ADCON0 009D  
                                 _ADCON1 009E                                   _ADRESH 009C  
                                 _ADRESL 009B                         ___awdiv@dividend 0022  
                              ??_WDT_Set 0020                         __end_of___awtoft 0BA7  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 069A  
               _getMain_All_Error_Status 0A6E                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 0A52                                   i1l4421 0284  
                                 i1l4413 0267                                   i1l4407 0251  
                                 i1l4415 026C                                   i1l4425 0298  
                                 i1l4409 0256                                   i1l4435 02C0  
                                 i1l4437 02C5                                   i1l4429 02A9  
                                 i1l4453 02F0                                   i1l4471 031C  
                                 i1l4385 020B                                   i1l4467 0316  
                                 i1l4389 0212                                   i1l3997 0B62  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                                 u367_25 01EB                                   u465_25 0BC9  
                                 _OSCCON 0099                                   _TMR1IE 0488  
                                 _TMR1IF 0088                                   _IO_Set 0A1F  
                                 _WDTCON 0097                    _Dimmer_Initialization 0002  
                                 _Dimmer 005E                                   _DlySw1 0069  
                                 _DlySw2 006B               __end_of_Mcu_Initialization 0964  
                    __end_of_Buzzer_Main 0D70                                   _Memory 0120  
                                 _Timer1 0061       __end_of_setDimmerLights_TriggerAdj 0AC5  
             _setDimmerLights_TriggerAdj 0AA7                                   ___bmul 0964  
                              ??___awdiv 0024             __size_of_DelayOffPointSelect 0014  
                              ??___ftdiv 0034                    setDimmerLights@lights 0026  
                              ??___fttol 0042             ?_Flash_Memory_Initialization 0076  
                 ??_setDimmerLights_Main 002D                                   _setLED 06F9  
                                 _myMain 00A0                         _DimmerLightsIntr 0074  
                  ?_setSw_Initialization 0076                    setDimmerLights@status 0024  
                       ___awdiv@quotient 0027                                   _setBuz 0DF5  
                     __size_of_Temp_Main 0003         ??_setDimmerLights_Initialization 0022  
        ?_setDimmerLights_Initialization 0076             ??_getDimmerLights_StatusFlag 0020  
    __end_of_setDimmerLights_IntrControl 033D              _setDimmerLights_IntrControl 01C4  
               Flash_Memory_Read@address 0022                         ?_Timeout_Counter 0076  
                  __end_of_SwPointSelect 09B1             __size_of_Flash_Memory_Modify 0044  
      setDimmerLights_IntrControl@lights 007A              __size_of_DimmerLights_Close 000E  
                __size_of_LedPointSelect 001D                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 09DB  
                      ?_Sw_DimmerAdjFunc 0076                  __end_of__initialization 003E  
                              ?_LED_Main 0076                       ??_Sw_DimmerAdjFunc 0025  
                          ?_my_MainTimer 0076                               ___ftdiv@f1 0031  
                             ___ftdiv@f2 002E                               ___ftdiv@f3 0039  
                      ?_Sw_DimmerOffFunc 0076                               ___awtoft@c 0028  
                    ___bmul@multiplicand 0020             ?_DimmerLights_Initialization 0076  
                             ___fttol@f1 003E                           __pcstackCOMMON 0076  
         DimmerIntrIOCPointSelect@lights 0077                       ??_Sw_DimmerOffFunc 002F  
                           __pidataBANK3 0B23                            __end_of_getAD 0B23  
                              ?_TMR1_ISR 0076                                ?_TMR1_Set 0076  
           __size_of_setDimmerLights_Adj 002E                       _LED_Initialization 0881  
                        _getSw_KeyStatus 0AE4                         ??_DelayTimejudge 0024  
            ?_getDimmerLights_StatusFlag 0076            ??_Flash_Memory_Initialization 0050  
                       ?_setDimmerLights 0024                                ?_WDT_Main 0076  
             __end_of_set_TimeoutCleared 0819                 __end_of_setDimmerReClock 0834  
                    ?_LED_Initialization 0076                           _DimmerLights11 0072  
                         _DimmerLights22 0073                     __size_of_setLED_Main 003D  
              ??_setDimmerLights_Trigger 0023                                  ??_getAD 0023  
                    _Temp_Initialization 080A                               __pbssBANK0 0052  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                              ?_Fosc_Set 0076                              _Buzzer_Main 0D30  
                      __end_of_Temp_Main 0810                   ?_Dimmer_Initialization 0076  
                                ?_IO_Set 0076                           ??_my_MainTimer 002D  
                             ??_LED_Main 0025                            ?_setMemory_GO 0076  
                        __CFG_VCAPEN$OFF 0000                  _DelayOff_Initialization 0834  
                          ??_Switch_Main 0035                     ??_LED_Initialization 0025  
                           _DimmerLights 0065                        LedPointSelect@led 0021  
                 __size_of_DelayOff_Main 0008                              setBuz@count 002C  
                ?_getDimmerLights_Status 0076                               __pmaintext 0E80  
                   ?_Temp_Initialization 0076                                  ?___bmul 0020  
       __size_of_DimmerLightsPointSelect 0013                         ??_setDelayOff_GO 002C  
          ??_DimmerLights_Initialization 0024                               ??_TMR1_ISR 007B  
                          ?_setTemp_Main 0076                               ??_TMR1_Set 0020  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                   Sw_DimmerAdjFunc@Idle 0025                                  ?_setLED 0022  
                                _ADC_Set 0825                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             _getTemp_AD 0C7E                               ??_WDT_Main 0020  
                          ?_setSw_Status 0022                        Sw_DimmerOnFunc@sw 002E  
                                _IOC_ISR 08C0                                  _IOC_Set 08FD  
                      _Flash_Memory_Main 0AC5                        _Flash_Memory_Read 0A38  
            ?_setDimmerLights_IntrIOC_GO 0076                       ?_Flash_Memory_Main 0076  
                     ?_Flash_Memory_Read 0076                                  _WDT_Set 0855  
                             ??_Fosc_Set 0020                              ?_TouchPower 0076  
                        _Sw_DimmerOnFunc 0EC6                          _setPercentValue 0E3A  
                         ??_setMemory_GO 0020                          __size_of_IO_Set 0019  
                    ??_Flash_Memory_Main 0026                      ??_Flash_Memory_Read 0020  
                                _VarLED1 00E4                                  _VarLED2 00E8  
         __end_of_getDimmerLights_Status 08DE                  __end_of_getSw_KeyStatus 0B03  
       __end_of_DimmerIntrIOCPointSelect 0940                    ??_Temp_Initialization 0020  
        __end_of_setDimmerLights_Trigger 0A6E                           ??_setTemp_Main 0025  
                        __size_of___bmul 0012                                  ___awdiv 0FAC  
                                ___ftdiv 0404                                  ___fttol 0546  
                    __end_of_Switch_Main 0B85                  ??_Buzzer_Initialization 0020  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 005B                          __size_of_setBuz 0045  
                         ??_setSw_Status 0023                                  __ptext1 0F0F  
                                __ptext2 08DE                                  __ptext3 0C7E  
                                __ptext4 0B03                                  __ptext5 090D  
                                __ptext6 07FE                                  __ptext7 080D  
                                __ptext8 04AD                                  __ptext9 080A  
                    Sw_DimmerOnFunc@Idle 002D                    _DimmerIntrPointSelect 0940  
                           __size_of_ISR 000F               ??_getMain_All_Error_Status 0020  
              __end_of_Flash_Memory_Main 0AE4                __end_of_Flash_Memory_Read 0A52  
                ??_myMain_Initialization 0020                            _DelayOff_Main 083C  
                      _DimmerLights_Main 086A           __size_of_DlyOff_Initialization 000B  
          __end_of_DlyOff_Initialization 086A                 ??_setTemp_Initialization 0020  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0076  
                     ?_DimmerLights_Main 0076                                  _product 006D  
                         _LedPointSelect 0A8A                      _DelayOffPointSelect 0989  
                                clrloop0 0820           __size_of_Switch_Initialization 000D  
          __end_of_Switch_Initialization 08B2                     end_of_initialization 003E  
              ??_DelayOff_Initialization 0023               __end_of_Flash_Memory_Write 0C7E  
                                init_ram 0819                      ??_DimmerLights_Main 002F  
                   Flash_Memory_Read@ret 0023                                  initloop 081A  
                             _setSw_Main 0042                     Flash_Memory_Modify@i 0025  
                  _setLED_Initialization 08ED              ?_setDimmerLights_TriggerAdj 0022  
          __size_of_Flash_Memory_Erasing 000C                     ?_DelayOffPointSelect 0076  
                    _Flash_Memory_Modify 0DB1                      _Flash_Memory_Unlock 084C  
       getDimmerLights_StatusFlag@Status 0021                              ?_getTemp_AD 0076  
                    __size_of_TouchPower 0015                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 0875  
                     _Mcu_Initialization 0952                     __end_of_my_MainTimer 0F5B  
                         ?_DelayOff_Main 0076                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 0AA7                  __end_of_Sw_DimmerOnFunc 0F0F  
                __end_of_setPercentValue 0E80                      ?_Mcu_Initialization 0076  
                   ?_Flash_Memory_Modify 0076                      _setDimmerLights_Adj 0C21  
                   ?_Flash_Memory_Unlock 0076          getMain_All_Error_Status@command 0021  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 0A38  
                            _Switch_Main 0B64                        __size_of_LED_Main 000C  
                       ?_getSw_KeyStatus 0076                  _DimmerLightsPointSelect 0976  
                      _setMain_Exception 0F5B                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                            ?_WDT_Clearing 0076  
                     ?_setMain_Exception 0076                     ?_setDimmerLights_Adj 0022  
                         __end_of___bmul 0976                __size_of_Sw_DimmerAdjFunc 003E  
               setMain_Exception@command 0028                 _DimmerIntrIOCPointSelect 092E  
                      getSw_KeyStatus@sw 0024                        __size_of_TMR1_ISR 0028  
                 ?_DimmerIntrPointSelect 0076                        __size_of_TMR1_Set 000C  
                   __end_of_setMemory_GO 0A06            __size_of_setDimmerLights_Main 0055  
                         __end_of_setLED 0754                           __end_of_setBuz 0E3A  
        _getDimmerLights_StatusFlag$1940 0022                      ??_setMain_Exception 0025  
              __size_of_Sw_DimmerOffFunc 0041               __size_of_Flash_Memory_Main 001F  
             __size_of_Flash_Memory_Read 001A                        __size_of_WDT_Main 0010  
                      ?_setDimmerReClock 0076                      start_initialization 0015  
                        ?_LedPointSelect 0076               __end_of_DimmerLights_Close 08C0  
                            __end_of_ISR 0013                    ??_Flash_Memory_Modify 0024  
                     ??_setDimmerReClock 0079          __size_of_setTemp_Initialization 0001  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                   __end_of_setTemp_Main 0546                             ?_Buzzer_Main 0076  
                     _set_TimeoutCleared 0814                                 ??_IO_Set 0020  
               __size_of_Timeout_Counter 0015                                _VarErrLED 00E0  
                            ?_setSw_Main 0076                      __size_of_getTemp_AD 0037  
                 ?_setLED_Initialization 0076                     __end_of_setSw_Status 0A1F  
                     Sw_DimmerAdjFunc@sw 0026                        __size_of_Fosc_Set 0004  
              __end_of_setMain_Exception 0FAC                                _Temp_Main 080D  
                    ?_set_TimeoutCleared 0076                           ??_WDT_Clearing 0020  
                               ??___bmul 0021                    ??_setDimmerLights_Adj 0023  
                 __size_of_SwPointSelect 0014                              __pdataBANK3 01A0  
                               ??_setLED 0023                                 ?_ADC_Set 0076  
                               ??_setBuz 002B                          ??_DelayOff_Main 0030  
       __end_of_getMain_All_Error_Status 0A8A               __size_of_DimmerLights_Main 000B  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0076  
                            __pbssCOMMON 0070                                 ?_IOC_Set 0076  
                              ___latbits 0003                         ?_Sw_DimmerOnFunc 0076  
                          __pcstackBANK0 0020                            __pcstackBANK1 00EC  
                   ??_set_TimeoutCleared 0020                         ?_setPercentValue 0076  
               __size_of_setDimmerLights 006C                            DlyOff_Main@sw 002F  
                               ?_WDT_Set 0076                             ??_TouchPower 0020  
                   __size_of_DlyOff_Main 0055                            _DimmerLights1 00C2  
                          _DimmerLights2 00D1                    setDelayOff_GO@command 002A  
              ??_DimmerLightsPointSelect 0020                                __pnvBANK0 006D  
            __size_of_LED_Initialization 000C                               ?_Temp_Main 0076  
                  DelayOffPointSelect@sw 0021                               setBuz@time 0029  
                    setDelayOff_GO@value 002B                   _setTemp_Initialization 0003  
    __end_of_Flash_Memory_Initialization 0404              _Flash_Memory_Initialization 033D  
                               ?___awdiv 0020                                 ?___ftdiv 002E  
                               ?___fttol 003E                    __size_of_my_MainTimer 004C  
          __size_of_setSw_Initialization 0008           __size_of_Buzzer_Initialization 0003  
          __end_of_Buzzer_Initialization 080A                         setPercentValue@i 004D  
                     __end_of_TouchPower 09F0                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0026                          DelayTimejudge@j 0027  
                        DelayTimejudge@k 0028                      __size_of_setSw_Main 0182  
         __size_of_myMain_Initialization 000F            __end_of_myMain_Initialization 08ED  
                         __size_of_getAD 0020                  __size_of_DelayTimejudge 002A  
                          _SwPointSelect 099D                       Sw_DimmerOffFunc@sw 0031  
                    __end_of_setLED_Main 0CF2                      _DimmerLightsIntrIOC 0075  
            __end_of_Temp_Initialization 080D                                 _LED_Main 088D  
                        SwPointSelect@sw 0021                                clear_ram0 081F  
             __size_of_setMain_Exception 0051                             _my_MainTimer 0F0F  
    __end_of_DimmerLights_Initialization 09C6              _DimmerLights_Initialization 09B1  
         setDimmerLights_Trigger@command 0022                                 _GO_nDONE 04E9  
                      ??_Timeout_Counter 0020                    __size_of_setMemory_GO 0016  
                     _Flash_Memory_Write 0C4F                                 _TMR1_ISR 0BA7  
                               _TMR1_Set 0899                         _Sw_DimmerAdjFunc 0CF2  
      setDimmerLights_TriggerAdj@command 0022                             ??_getTemp_AD 0024  
                               _WDT_Main 090D                  DlyOff_Initialization@sw 0022  
                  getSw_KeyStatus@status 0023                         __size_of_ADC_Set 0007  
                    ?_Flash_Memory_Write 0076                         _Sw_DimmerOffFunc 0D70  
                  __size_of_setTemp_Main 0099                  __size_of_setDelayOff_GO 005F  
                               _DelayOff 0064                             setSw_Main@sw 0034  
       setDimmerLights_IntrIOC_GO@lights 0078                         __size_of_IOC_ISR 000F  
           ?_setDimmerLights_IntrControl 0076           getMain_All_Error_Status@status 0024  
                       __size_of_IOC_Set 0010             __end_of_Flash_Memory_Erasing 0881  
                         ?_SwPointSelect 0076                              getAD@adcon0 0023  
                            getAD@adcon1 0020                           setLED_Main@led 0024  
                   __end_of_WDT_Clearing 0800                    _DlyOff_Initialization 085F  
                  __size_of_setSw_Status 0019                                 _Fosc_Set 0810  
                       __size_of_WDT_Set 000A                  setMain_Exception@status 0029  
                  _Switch_Initialization 08A5        __size_of_getMain_All_Error_Status 001C  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
                           _setMemory_GO 09F0                ?_getMain_All_Error_Status 0076  
                   __size_of_Buzzer_Main 0040                       __end_of_getTemp_AD 0CB5  
                           ?_Switch_Main 0076               ??_DimmerIntrIOCPointSelect 0076  
           Flash_Memory_Initialization@i 0051                                 _SwDetect 0068  
                            ??_Temp_Main 0027            _getMain_All_Error_Status$3040 0022  
                              setLED@led 0023                  ??_DimmerIntrPointSelect 0076  
                           _setTemp_Main 04AD                         __size_of___awdiv 0054  
                       __size_of___ftdiv 00A9                         __size_of___fttol 0087  
                               ___awtoft 0B85                         ??_LedPointSelect 0020  
                               ___ftpack 0639                             _setSw_Status 0A06  
                      getTemp_AD@channel 0025                              _setLED_Main 0CB5  
               ?_DelayOff_Initialization 0076                         setDelayOff_GO@sw 002E  
                               __ptext10 0003                                 __ptext11 0B64  
                               __ptext20 0AA7                                 __ptext12 0042  
                               __ptext21 0F5B                                 __ptext13 0AE4  
                               __ptext30 0855                                 __ptext22 08CF  
                               __ptext14 0EC6                                 __ptext31 0899  
                               __ptext23 0A6E                                 __ptext15 0D70  
                               __ptext40 0AC5                                 __ptext32 0A1F  
                               __ptext24 08A5                                 __ptext16 069A  
                               __ptext41 0DB1                                 __ptext33 08FD  
                               __ptext25 0844                                 __ptext17 0BF7  
                               __ptext50 084C                                 __ptext42 0875  
                               __ptext34 0810                                 __ptext26 09DB  
                               __ptext18 0964                                 __ptext51 0A38  
                               __ptext43 033D                                 __ptext35 0825  
                               __ptext27 0814                                 __ptext19 0CF2  
                               __ptext60 091D                                 __ptext52 086A  
                               __ptext44 0E3A                                 __ptext36 088D  
                               __ptext28 09C6                                 __ptext61 09B1  
                               __ptext53 0754                                 __ptext45 0546  
                               __ptext37 0CB5                                 __ptext29 0952  
                               __ptext70 0DF5                                 __ptext62 0BCF  
                               __ptext54 0C21                                 __ptext46 0404  
                               __ptext38 0881                                 __ptext71 0FAC  
                               __ptext63 0002                                 __ptext55 05CD  
                               __ptext47 0B85                                 __ptext39 08ED  
                               __ptext80 0940                                 __ptext72 0834  
                               __ptext64 083C                                 __ptext56 06F9  
                               __ptext48 0639                                 __ptext81 08C0  
                               __ptext73 085F                                 __ptext65 07A9  
                               __ptext57 0A8A                                 __ptext49 0C4F  
                               __ptext82 082C                                 __ptext74 0989  
                               __ptext66 0A06                                 __ptext58 08B2  
                               __ptext83 0B43                                 __ptext75 0D30  
                               __ptext67 099D                                 __ptext59 09F0  
                               __ptext84 092E                                 __ptext76 0807  
                               __ptext68 0A52                                 __ptext69 0976  
                               __ptext78 0BA7                                 __ptext79 01C4  
                               __product 01A0            ??_setDimmerLights_IntrControl 0078  
                ??_setLED_Initialization 0024                 ??_getDimmerLights_Status 0022  
         __size_of_Dimmer_Initialization 0001            __end_of_Dimmer_Initialization 0003  
           __end_of_setDimmerLights_Main 07A9                         Switch_Main@error 0036  
                           ??_setSw_Main 0032                            setLED@command 0022  
                          __size_of_main 0046               setDimmerLights_Main@lights 002E  
            __end_of_DelayOffPointSelect 099D                       _DimmerLights_Close 08B2  
              __size_of_setDimmerReClock 0008      __size_of_getDimmerLights_StatusFlag 0011  
          setDimmerLights_Trigger@lights 0024              __size_of_Mcu_Initialization 0012  
                    ?_DimmerLights_Close 0076         setDimmerLights_TriggerAdj@lights 0024  
                               main@argc 00EC                                 main@argv 00EE  
                   _getSw_KeyStatus$5104 0021                     _getSw_KeyStatus$5105 0022  
               __size_of_getSw_KeyStatus 001F              __end_of_Flash_Memory_Modify 0DF5  
            __end_of_Flash_Memory_Unlock 0855                          ??_SwPointSelect 0020  
                     __end_of_setSw_Main 01C4                   ?_DlyOff_Initialization 0076  
                         _DelayTimejudge 0BF7                              pic14e$flags 007E  
                   ??_DimmerLights_Close 0023             ??_setDimmerLights_IntrIOC_GO 0078  
                               intlevel1 0000                   ?_Switch_Initialization 0076  
 __end_of_setDimmerLights_Initialization 0BF7  __size_of_setDimmerLights_Initialization 0028  
         _setDimmerLights_Initialization 0BCF              __end_of_setDimmerLights_Adj 0C4F  
                ?_setTemp_Initialization 0076     __size_of_setDimmerLights_IntrControl 0179  
                   _Flash_Memory_Erasing 0875          __end_of_DelayOff_Initialization 083C  
    __size_of_setDimmerLights_IntrIOC_GO 0021                    __size_of_WDT_Clearing 0002  
                  __end_of_DelayOff_Main 0844                           _setDelayOff_GO 069A  
                 __end_of_DelayTimejudge 0C21     __size_of_Flash_Memory_Initialization 00C7  
            __size_of_set_TimeoutCleared 0005                            ??_DlyOff_Main 002D  
               __end_of_Sw_DimmerAdjFunc 0D30             __end_of_setSw_Initialization 084C  
                        _Timeout_Counter 09C6          __size_of_getDimmerLights_Status 000F  
             __end_of_LED_Initialization 088D         __size_of_setDimmerLights_Trigger 001C  
         __end_of_setTemp_Initialization 0004                 __size_of_Sw_DimmerOnFunc 0049  
               __size_of_setPercentValue 0046                     setPercentValue@value 004C  
               __end_of_Sw_DimmerOffFunc 0DB1                      setSw_Status@command 0022  
