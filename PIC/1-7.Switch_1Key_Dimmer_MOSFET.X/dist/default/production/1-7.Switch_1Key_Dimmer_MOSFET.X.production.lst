

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Nov 13 17:32:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    91                           	dabs	1,0x7E,2
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  011D                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  018E                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0197                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020D                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  0394                     	;# 
   190  0395                     	;# 
   191  0396                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0090                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  011D                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  0191                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0193                     	;# 
   259  0193                     	;# 
   260  0194                     	;# 
   261  0195                     	;# 
   262  0196                     	;# 
   263  0197                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019C                     	;# 
   271  019C                     	;# 
   272  019D                     	;# 
   273  019E                     	;# 
   274  019F                     	;# 
   275  020D                     	;# 
   276  0210                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0214                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0291                     	;# 
   293  0291                     	;# 
   294  0292                     	;# 
   295  0293                     	;# 
   296  0298                     	;# 
   297  0298                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  0394                     	;# 
   301  0395                     	;# 
   302  0396                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  0116                     	;# 
   361  0117                     	;# 
   362  011D                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  018E                     	;# 
   366  0191                     	;# 
   367  0191                     	;# 
   368  0192                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0197                     	;# 
   375  0199                     	;# 
   376  019A                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019C                     	;# 
   382  019C                     	;# 
   383  019D                     	;# 
   384  019E                     	;# 
   385  019F                     	;# 
   386  020D                     	;# 
   387  0210                     	;# 
   388  0211                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0214                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0291                     	;# 
   404  0291                     	;# 
   405  0292                     	;# 
   406  0293                     	;# 
   407  0298                     	;# 
   408  0298                     	;# 
   409  0299                     	;# 
   410  029A                     	;# 
   411  0394                     	;# 
   412  0395                     	;# 
   413  0396                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  0010                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  0090                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  0116                     	;# 
   472  0117                     	;# 
   473  011D                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  018E                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0194                     	;# 
   483  0195                     	;# 
   484  0196                     	;# 
   485  0197                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020D                     	;# 
   498  0210                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0291                     	;# 
   515  0291                     	;# 
   516  0292                     	;# 
   517  0293                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0090                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  010C                     	;# 
   580  010D                     	;# 
   581  010E                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  011D                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  018E                     	;# 
   588  0191                     	;# 
   589  0191                     	;# 
   590  0192                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0197                     	;# 
   597  0199                     	;# 
   598  019A                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019F                     	;# 
   608  020D                     	;# 
   609  0210                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0298                     	;# 
   630  0298                     	;# 
   631  0299                     	;# 
   632  029A                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  0090                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0099                     	;# 
   684  009A                     	;# 
   685  009B                     	;# 
   686  009B                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009E                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  011D                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  0199                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020D                     	;# 
   720  0210                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0298                     	;# 
   741  0298                     	;# 
   742  0299                     	;# 
   743  029A                     	;# 
   744  0394                     	;# 
   745  0395                     	;# 
   746  0396                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0015                     	;# 
   777  0016                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001C                     	;# 
   785  008C                     	;# 
   786  008D                     	;# 
   787  008E                     	;# 
   788  0090                     	;# 
   789  0091                     	;# 
   790  0092                     	;# 
   791  0095                     	;# 
   792  0096                     	;# 
   793  0097                     	;# 
   794  0099                     	;# 
   795  009A                     	;# 
   796  009B                     	;# 
   797  009B                     	;# 
   798  009C                     	;# 
   799  009D                     	;# 
   800  009E                     	;# 
   801  010C                     	;# 
   802  010D                     	;# 
   803  010E                     	;# 
   804  0116                     	;# 
   805  0117                     	;# 
   806  011D                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  018E                     	;# 
   810  0191                     	;# 
   811  0191                     	;# 
   812  0192                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0197                     	;# 
   819  0199                     	;# 
   820  019A                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019E                     	;# 
   829  019F                     	;# 
   830  020D                     	;# 
   831  0210                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0291                     	;# 
   848  0291                     	;# 
   849  0292                     	;# 
   850  0293                     	;# 
   851  0298                     	;# 
   852  0298                     	;# 
   853  0299                     	;# 
   854  029A                     	;# 
   855  0394                     	;# 
   856  0395                     	;# 
   857  0396                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  0010                     	;# 
   885  0011                     	;# 
   886  0012                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0016                     	;# 
   890  0017                     	;# 
   891  0018                     	;# 
   892  0019                     	;# 
   893  001A                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  008C                     	;# 
   897  008D                     	;# 
   898  008E                     	;# 
   899  0090                     	;# 
   900  0091                     	;# 
   901  0092                     	;# 
   902  0095                     	;# 
   903  0096                     	;# 
   904  0097                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0116                     	;# 
   916  0117                     	;# 
   917  011D                     	;# 
   918  018C                     	;# 
   919  018D                     	;# 
   920  018E                     	;# 
   921  0191                     	;# 
   922  0191                     	;# 
   923  0192                     	;# 
   924  0193                     	;# 
   925  0193                     	;# 
   926  0194                     	;# 
   927  0195                     	;# 
   928  0196                     	;# 
   929  0197                     	;# 
   930  0199                     	;# 
   931  019A                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019C                     	;# 
   937  019C                     	;# 
   938  019D                     	;# 
   939  019E                     	;# 
   940  019F                     	;# 
   941  020D                     	;# 
   942  0210                     	;# 
   943  0211                     	;# 
   944  0211                     	;# 
   945  0212                     	;# 
   946  0212                     	;# 
   947  0213                     	;# 
   948  0213                     	;# 
   949  0214                     	;# 
   950  0214                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0215                     	;# 
   954  0216                     	;# 
   955  0216                     	;# 
   956  0217                     	;# 
   957  0217                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0298                     	;# 
   963  0298                     	;# 
   964  0299                     	;# 
   965  029A                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0FE4                     	;# 
   970  0FE5                     	;# 
   971  0FE6                     	;# 
   972  0FE7                     	;# 
   973  0FE8                     	;# 
   974  0FE9                     	;# 
   975  0FEA                     	;# 
   976  0FEB                     	;# 
   977  0FED                     	;# 
   978  0FEE                     	;# 
   979  0FEF                     	;# 
   980  0000                     	;# 
   981  0001                     	;# 
   982  0002                     	;# 
   983  0003                     	;# 
   984  0004                     	;# 
   985  0005                     	;# 
   986  0006                     	;# 
   987  0007                     	;# 
   988  0008                     	;# 
   989  0009                     	;# 
   990  000A                     	;# 
   991  000B                     	;# 
   992  000C                     	;# 
   993  000D                     	;# 
   994  000E                     	;# 
   995  0010                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0015                     	;# 
   999  0016                     	;# 
  1000  0016                     	;# 
  1001  0017                     	;# 
  1002  0018                     	;# 
  1003  0019                     	;# 
  1004  001A                     	;# 
  1005  001B                     	;# 
  1006  001C                     	;# 
  1007  008C                     	;# 
  1008  008D                     	;# 
  1009  008E                     	;# 
  1010  0090                     	;# 
  1011  0091                     	;# 
  1012  0092                     	;# 
  1013  0095                     	;# 
  1014  0096                     	;# 
  1015  0097                     	;# 
  1016  0099                     	;# 
  1017  009A                     	;# 
  1018  009B                     	;# 
  1019  009B                     	;# 
  1020  009C                     	;# 
  1021  009D                     	;# 
  1022  009E                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  0116                     	;# 
  1027  0117                     	;# 
  1028  011D                     	;# 
  1029  018C                     	;# 
  1030  018D                     	;# 
  1031  018E                     	;# 
  1032  0191                     	;# 
  1033  0191                     	;# 
  1034  0192                     	;# 
  1035  0193                     	;# 
  1036  0193                     	;# 
  1037  0194                     	;# 
  1038  0195                     	;# 
  1039  0196                     	;# 
  1040  0197                     	;# 
  1041  0199                     	;# 
  1042  019A                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019C                     	;# 
  1048  019C                     	;# 
  1049  019D                     	;# 
  1050  019E                     	;# 
  1051  019F                     	;# 
  1052  020D                     	;# 
  1053  0210                     	;# 
  1054  0211                     	;# 
  1055  0211                     	;# 
  1056  0212                     	;# 
  1057  0212                     	;# 
  1058  0213                     	;# 
  1059  0213                     	;# 
  1060  0214                     	;# 
  1061  0214                     	;# 
  1062  0215                     	;# 
  1063  0215                     	;# 
  1064  0215                     	;# 
  1065  0216                     	;# 
  1066  0216                     	;# 
  1067  0217                     	;# 
  1068  0217                     	;# 
  1069  0291                     	;# 
  1070  0291                     	;# 
  1071  0292                     	;# 
  1072  0293                     	;# 
  1073  0298                     	;# 
  1074  0298                     	;# 
  1075  0299                     	;# 
  1076  029A                     	;# 
  1077  0394                     	;# 
  1078  0395                     	;# 
  1079  0396                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0015                     	;# 
  1110  0016                     	;# 
  1111  0016                     	;# 
  1112  0017                     	;# 
  1113  0018                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0092                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0099                     	;# 
  1128  009A                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  0116                     	;# 
  1138  0117                     	;# 
  1139  011D                     	;# 
  1140  018C                     	;# 
  1141  018D                     	;# 
  1142  018E                     	;# 
  1143  0191                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  0193                     	;# 
  1147  0193                     	;# 
  1148  0194                     	;# 
  1149  0195                     	;# 
  1150  0196                     	;# 
  1151  0197                     	;# 
  1152  0199                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019C                     	;# 
  1159  019C                     	;# 
  1160  019D                     	;# 
  1161  019E                     	;# 
  1162  019F                     	;# 
  1163  020D                     	;# 
  1164  0210                     	;# 
  1165  0211                     	;# 
  1166  0211                     	;# 
  1167  0212                     	;# 
  1168  0212                     	;# 
  1169  0213                     	;# 
  1170  0213                     	;# 
  1171  0214                     	;# 
  1172  0214                     	;# 
  1173  0215                     	;# 
  1174  0215                     	;# 
  1175  0215                     	;# 
  1176  0216                     	;# 
  1177  0216                     	;# 
  1178  0217                     	;# 
  1179  0217                     	;# 
  1180  0291                     	;# 
  1181  0291                     	;# 
  1182  0292                     	;# 
  1183  0293                     	;# 
  1184  0298                     	;# 
  1185  0298                     	;# 
  1186  0299                     	;# 
  1187  029A                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  0FE4                     	;# 
  1192  0FE5                     	;# 
  1193  0FE6                     	;# 
  1194  0FE7                     	;# 
  1195  0FE8                     	;# 
  1196  0FE9                     	;# 
  1197  0FEA                     	;# 
  1198  0FEB                     	;# 
  1199  0FED                     	;# 
  1200  0FEE                     	;# 
  1201  0FEF                     	;# 
  1202  0000                     	;# 
  1203  0001                     	;# 
  1204  0002                     	;# 
  1205  0003                     	;# 
  1206  0004                     	;# 
  1207  0005                     	;# 
  1208  0006                     	;# 
  1209  0007                     	;# 
  1210  0008                     	;# 
  1211  0009                     	;# 
  1212  000A                     	;# 
  1213  000B                     	;# 
  1214  000C                     	;# 
  1215  000D                     	;# 
  1216  000E                     	;# 
  1217  0010                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0015                     	;# 
  1221  0016                     	;# 
  1222  0016                     	;# 
  1223  0017                     	;# 
  1224  0018                     	;# 
  1225  0019                     	;# 
  1226  001A                     	;# 
  1227  001B                     	;# 
  1228  001C                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  008E                     	;# 
  1232  0090                     	;# 
  1233  0091                     	;# 
  1234  0092                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  011D                     	;# 
  1251  018C                     	;# 
  1252  018D                     	;# 
  1253  018E                     	;# 
  1254  0191                     	;# 
  1255  0191                     	;# 
  1256  0192                     	;# 
  1257  0193                     	;# 
  1258  0193                     	;# 
  1259  0194                     	;# 
  1260  0195                     	;# 
  1261  0196                     	;# 
  1262  0197                     	;# 
  1263  0199                     	;# 
  1264  019A                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020D                     	;# 
  1275  0210                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  0394                     	;# 
  1300  0395                     	;# 
  1301  0396                     	;# 
  1302  0FE4                     	;# 
  1303  0FE5                     	;# 
  1304  0FE6                     	;# 
  1305  0FE7                     	;# 
  1306  0FE8                     	;# 
  1307  0FE9                     	;# 
  1308  0FEA                     	;# 
  1309  0FEB                     	;# 
  1310  0FED                     	;# 
  1311  0FEE                     	;# 
  1312  0FEF                     	;# 
  1313  0000                     	;# 
  1314  0001                     	;# 
  1315  0002                     	;# 
  1316  0003                     	;# 
  1317  0004                     	;# 
  1318  0005                     	;# 
  1319  0006                     	;# 
  1320  0007                     	;# 
  1321  0008                     	;# 
  1322  0009                     	;# 
  1323  000A                     	;# 
  1324  000B                     	;# 
  1325  000C                     	;# 
  1326  000D                     	;# 
  1327  000E                     	;# 
  1328  0010                     	;# 
  1329  0011                     	;# 
  1330  0012                     	;# 
  1331  0015                     	;# 
  1332  0016                     	;# 
  1333  0016                     	;# 
  1334  0017                     	;# 
  1335  0018                     	;# 
  1336  0019                     	;# 
  1337  001A                     	;# 
  1338  001B                     	;# 
  1339  001C                     	;# 
  1340  008C                     	;# 
  1341  008D                     	;# 
  1342  008E                     	;# 
  1343  0090                     	;# 
  1344  0091                     	;# 
  1345  0092                     	;# 
  1346  0095                     	;# 
  1347  0096                     	;# 
  1348  0097                     	;# 
  1349  0099                     	;# 
  1350  009A                     	;# 
  1351  009B                     	;# 
  1352  009B                     	;# 
  1353  009C                     	;# 
  1354  009D                     	;# 
  1355  009E                     	;# 
  1356  010C                     	;# 
  1357  010D                     	;# 
  1358  010E                     	;# 
  1359  0116                     	;# 
  1360  0117                     	;# 
  1361  011D                     	;# 
  1362  018C                     	;# 
  1363  018D                     	;# 
  1364  018E                     	;# 
  1365  0191                     	;# 
  1366  0191                     	;# 
  1367  0192                     	;# 
  1368  0193                     	;# 
  1369  0193                     	;# 
  1370  0194                     	;# 
  1371  0195                     	;# 
  1372  0196                     	;# 
  1373  0197                     	;# 
  1374  0199                     	;# 
  1375  019A                     	;# 
  1376  019B                     	;# 
  1377  019B                     	;# 
  1378  019B                     	;# 
  1379  019B                     	;# 
  1380  019C                     	;# 
  1381  019C                     	;# 
  1382  019D                     	;# 
  1383  019E                     	;# 
  1384  019F                     	;# 
  1385  020D                     	;# 
  1386  0210                     	;# 
  1387  0211                     	;# 
  1388  0211                     	;# 
  1389  0212                     	;# 
  1390  0212                     	;# 
  1391  0213                     	;# 
  1392  0213                     	;# 
  1393  0214                     	;# 
  1394  0214                     	;# 
  1395  0215                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0216                     	;# 
  1399  0216                     	;# 
  1400  0217                     	;# 
  1401  0217                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  029A                     	;# 
  1410  0394                     	;# 
  1411  0395                     	;# 
  1412  0396                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  0010                     	;# 
  1440  0011                     	;# 
  1441  0012                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001C                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0095                     	;# 
  1458  0096                     	;# 
  1459  0097                     	;# 
  1460  0099                     	;# 
  1461  009A                     	;# 
  1462  009B                     	;# 
  1463  009B                     	;# 
  1464  009C                     	;# 
  1465  009D                     	;# 
  1466  009E                     	;# 
  1467  010C                     	;# 
  1468  010D                     	;# 
  1469  010E                     	;# 
  1470  0116                     	;# 
  1471  0117                     	;# 
  1472  011D                     	;# 
  1473  018C                     	;# 
  1474  018D                     	;# 
  1475  018E                     	;# 
  1476  0191                     	;# 
  1477  0191                     	;# 
  1478  0192                     	;# 
  1479  0193                     	;# 
  1480  0193                     	;# 
  1481  0194                     	;# 
  1482  0195                     	;# 
  1483  0196                     	;# 
  1484  0197                     	;# 
  1485  0199                     	;# 
  1486  019A                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019B                     	;# 
  1491  019C                     	;# 
  1492  019C                     	;# 
  1493  019D                     	;# 
  1494  019E                     	;# 
  1495  019F                     	;# 
  1496  020D                     	;# 
  1497  0210                     	;# 
  1498  0211                     	;# 
  1499  0211                     	;# 
  1500  0212                     	;# 
  1501  0212                     	;# 
  1502  0213                     	;# 
  1503  0213                     	;# 
  1504  0214                     	;# 
  1505  0214                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0215                     	;# 
  1509  0216                     	;# 
  1510  0216                     	;# 
  1511  0217                     	;# 
  1512  0217                     	;# 
  1513  0291                     	;# 
  1514  0291                     	;# 
  1515  0292                     	;# 
  1516  0293                     	;# 
  1517  0298                     	;# 
  1518  0298                     	;# 
  1519  0299                     	;# 
  1520  029A                     	;# 
  1521  0394                     	;# 
  1522  0395                     	;# 
  1523  0396                     	;# 
  1524  0FE4                     	;# 
  1525  0FE5                     	;# 
  1526  0FE6                     	;# 
  1527  0FE7                     	;# 
  1528  0FE8                     	;# 
  1529  0FE9                     	;# 
  1530  0FEA                     	;# 
  1531  0FEB                     	;# 
  1532  0FED                     	;# 
  1533  0FEE                     	;# 
  1534  0FEF                     	;# 
  1535  0000                     	;# 
  1536  0001                     	;# 
  1537  0002                     	;# 
  1538  0003                     	;# 
  1539  0004                     	;# 
  1540  0005                     	;# 
  1541  0006                     	;# 
  1542  0007                     	;# 
  1543  0008                     	;# 
  1544  0009                     	;# 
  1545  000A                     	;# 
  1546  000B                     	;# 
  1547  000C                     	;# 
  1548  000D                     	;# 
  1549  000E                     	;# 
  1550  0010                     	;# 
  1551  0011                     	;# 
  1552  0012                     	;# 
  1553  0015                     	;# 
  1554  0016                     	;# 
  1555  0016                     	;# 
  1556  0017                     	;# 
  1557  0018                     	;# 
  1558  0019                     	;# 
  1559  001A                     	;# 
  1560  001B                     	;# 
  1561  001C                     	;# 
  1562  008C                     	;# 
  1563  008D                     	;# 
  1564  008E                     	;# 
  1565  0090                     	;# 
  1566  0091                     	;# 
  1567  0092                     	;# 
  1568  0095                     	;# 
  1569  0096                     	;# 
  1570  0097                     	;# 
  1571  0099                     	;# 
  1572  009A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009E                     	;# 
  1578  010C                     	;# 
  1579  010D                     	;# 
  1580  010E                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  011D                     	;# 
  1584  018C                     	;# 
  1585  018D                     	;# 
  1586  018E                     	;# 
  1587  0191                     	;# 
  1588  0191                     	;# 
  1589  0192                     	;# 
  1590  0193                     	;# 
  1591  0193                     	;# 
  1592  0194                     	;# 
  1593  0195                     	;# 
  1594  0196                     	;# 
  1595  0197                     	;# 
  1596  0199                     	;# 
  1597  019A                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019C                     	;# 
  1603  019C                     	;# 
  1604  019D                     	;# 
  1605  019E                     	;# 
  1606  019F                     	;# 
  1607  020D                     	;# 
  1608  0210                     	;# 
  1609  0211                     	;# 
  1610  0211                     	;# 
  1611  0212                     	;# 
  1612  0212                     	;# 
  1613  0213                     	;# 
  1614  0213                     	;# 
  1615  0214                     	;# 
  1616  0214                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0216                     	;# 
  1621  0216                     	;# 
  1622  0217                     	;# 
  1623  0217                     	;# 
  1624  0291                     	;# 
  1625  0291                     	;# 
  1626  0292                     	;# 
  1627  0293                     	;# 
  1628  0298                     	;# 
  1629  0298                     	;# 
  1630  0299                     	;# 
  1631  029A                     	;# 
  1632  0394                     	;# 
  1633  0395                     	;# 
  1634  0396                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0015                     	;# 
  1665  0016                     	;# 
  1666  0016                     	;# 
  1667  0017                     	;# 
  1668  0018                     	;# 
  1669  0019                     	;# 
  1670  001A                     	;# 
  1671  001B                     	;# 
  1672  001C                     	;# 
  1673  008C                     	;# 
  1674  008D                     	;# 
  1675  008E                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0092                     	;# 
  1679  0095                     	;# 
  1680  0096                     	;# 
  1681  0097                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  0116                     	;# 
  1693  0117                     	;# 
  1694  011D                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018E                     	;# 
  1698  0191                     	;# 
  1699  0191                     	;# 
  1700  0192                     	;# 
  1701  0193                     	;# 
  1702  0193                     	;# 
  1703  0194                     	;# 
  1704  0195                     	;# 
  1705  0196                     	;# 
  1706  0197                     	;# 
  1707  0199                     	;# 
  1708  019A                     	;# 
  1709  019B                     	;# 
  1710  019B                     	;# 
  1711  019B                     	;# 
  1712  019B                     	;# 
  1713  019C                     	;# 
  1714  019C                     	;# 
  1715  019D                     	;# 
  1716  019E                     	;# 
  1717  019F                     	;# 
  1718  020D                     	;# 
  1719  0210                     	;# 
  1720  0211                     	;# 
  1721  0211                     	;# 
  1722  0212                     	;# 
  1723  0212                     	;# 
  1724  0213                     	;# 
  1725  0213                     	;# 
  1726  0214                     	;# 
  1727  0214                     	;# 
  1728  0215                     	;# 
  1729  0215                     	;# 
  1730  0215                     	;# 
  1731  0216                     	;# 
  1732  0216                     	;# 
  1733  0217                     	;# 
  1734  0217                     	;# 
  1735  0291                     	;# 
  1736  0291                     	;# 
  1737  0292                     	;# 
  1738  0293                     	;# 
  1739  0298                     	;# 
  1740  0298                     	;# 
  1741  0299                     	;# 
  1742  029A                     	;# 
  1743  0394                     	;# 
  1744  0395                     	;# 
  1745  0396                     	;# 
  1746  0FE4                     	;# 
  1747  0FE5                     	;# 
  1748  0FE6                     	;# 
  1749  0FE7                     	;# 
  1750  0FE8                     	;# 
  1751  0FE9                     	;# 
  1752  0FEA                     	;# 
  1753  0FEB                     	;# 
  1754  0FED                     	;# 
  1755  0FEE                     	;# 
  1756  0FEF                     	;# 
  1757  0000                     	;# 
  1758  0001                     	;# 
  1759  0002                     	;# 
  1760  0003                     	;# 
  1761  0004                     	;# 
  1762  0005                     	;# 
  1763  0006                     	;# 
  1764  0007                     	;# 
  1765  0008                     	;# 
  1766  0009                     	;# 
  1767  000A                     	;# 
  1768  000B                     	;# 
  1769  000C                     	;# 
  1770  000D                     	;# 
  1771  000E                     	;# 
  1772  0010                     	;# 
  1773  0011                     	;# 
  1774  0012                     	;# 
  1775  0015                     	;# 
  1776  0016                     	;# 
  1777  0016                     	;# 
  1778  0017                     	;# 
  1779  0018                     	;# 
  1780  0019                     	;# 
  1781  001A                     	;# 
  1782  001B                     	;# 
  1783  001C                     	;# 
  1784  008C                     	;# 
  1785  008D                     	;# 
  1786  008E                     	;# 
  1787  0090                     	;# 
  1788  0091                     	;# 
  1789  0092                     	;# 
  1790  0095                     	;# 
  1791  0096                     	;# 
  1792  0097                     	;# 
  1793  0099                     	;# 
  1794  009A                     	;# 
  1795  009B                     	;# 
  1796  009B                     	;# 
  1797  009C                     	;# 
  1798  009D                     	;# 
  1799  009E                     	;# 
  1800  010C                     	;# 
  1801  010D                     	;# 
  1802  010E                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  011D                     	;# 
  1806  018C                     	;# 
  1807  018D                     	;# 
  1808  018E                     	;# 
  1809  0191                     	;# 
  1810  0191                     	;# 
  1811  0192                     	;# 
  1812  0193                     	;# 
  1813  0193                     	;# 
  1814  0194                     	;# 
  1815  0195                     	;# 
  1816  0196                     	;# 
  1817  0197                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019E                     	;# 
  1828  019F                     	;# 
  1829  020D                     	;# 
  1830  0210                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0212                     	;# 
  1835  0213                     	;# 
  1836  0213                     	;# 
  1837  0214                     	;# 
  1838  0214                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0215                     	;# 
  1842  0216                     	;# 
  1843  0216                     	;# 
  1844  0217                     	;# 
  1845  0217                     	;# 
  1846  0291                     	;# 
  1847  0291                     	;# 
  1848  0292                     	;# 
  1849  0293                     	;# 
  1850  0298                     	;# 
  1851  0298                     	;# 
  1852  0299                     	;# 
  1853  029A                     	;# 
  1854  0394                     	;# 
  1855  0395                     	;# 
  1856  0396                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0015                     	;# 
  1887  0016                     	;# 
  1888  0016                     	;# 
  1889  0017                     	;# 
  1890  0018                     	;# 
  1891  0019                     	;# 
  1892  001A                     	;# 
  1893  001B                     	;# 
  1894  001C                     	;# 
  1895  008C                     	;# 
  1896  008D                     	;# 
  1897  008E                     	;# 
  1898  0090                     	;# 
  1899  0091                     	;# 
  1900  0092                     	;# 
  1901  0095                     	;# 
  1902  0096                     	;# 
  1903  0097                     	;# 
  1904  0099                     	;# 
  1905  009A                     	;# 
  1906  009B                     	;# 
  1907  009B                     	;# 
  1908  009C                     	;# 
  1909  009D                     	;# 
  1910  009E                     	;# 
  1911  010C                     	;# 
  1912  010D                     	;# 
  1913  010E                     	;# 
  1914  0116                     	;# 
  1915  0117                     	;# 
  1916  011D                     	;# 
  1917  018C                     	;# 
  1918  018D                     	;# 
  1919  018E                     	;# 
  1920  0191                     	;# 
  1921  0191                     	;# 
  1922  0192                     	;# 
  1923  0193                     	;# 
  1924  0193                     	;# 
  1925  0194                     	;# 
  1926  0195                     	;# 
  1927  0196                     	;# 
  1928  0197                     	;# 
  1929  0199                     	;# 
  1930  019A                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019B                     	;# 
  1935  019C                     	;# 
  1936  019C                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  020D                     	;# 
  1941  0210                     	;# 
  1942  0211                     	;# 
  1943  0211                     	;# 
  1944  0212                     	;# 
  1945  0212                     	;# 
  1946  0213                     	;# 
  1947  0213                     	;# 
  1948  0214                     	;# 
  1949  0214                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0216                     	;# 
  1954  0216                     	;# 
  1955  0217                     	;# 
  1956  0217                     	;# 
  1957  0291                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0298                     	;# 
  1962  0298                     	;# 
  1963  0299                     	;# 
  1964  029A                     	;# 
  1965  0394                     	;# 
  1966  0395                     	;# 
  1967  0396                     	;# 
  1968  0FE4                     	;# 
  1969  0FE5                     	;# 
  1970  0FE6                     	;# 
  1971  0FE7                     	;# 
  1972  0FE8                     	;# 
  1973  0FE9                     	;# 
  1974  0FEA                     	;# 
  1975  0FEB                     	;# 
  1976  0FED                     	;# 
  1977  0FEE                     	;# 
  1978  0FEF                     	;# 
  1979                           
  1980                           	psect	idataBANK1
  1981  0D19                     __pidataBANK1:	
  1982                           
  1983                           ;initializer for __product
  1984  0D19  3463               	retlw	99
  1985  0D1A  3402               	retlw	2
  1986  0D1B  3400               	retlw	0
  1987  0D1C  3400               	retlw	0
  1988  0D1D  3400               	retlw	0
  1989  0D1E  3400               	retlw	0
  1990  0D1F  3400               	retlw	0
  1991  0D20  3400               	retlw	0
  1992  0D21  3400               	retlw	0
  1993  0D22  3400               	retlw	0
  1994  0D23  3400               	retlw	0
  1995  0D24  3400               	retlw	0
  1996  0D25  34FF               	retlw	255
  1997  0D26  34FF               	retlw	255
  1998  0D27  34FF               	retlw	255
  1999  0D28  3400               	retlw	0
  2000  0D29  3400               	retlw	0
  2001  0D2A  3400               	retlw	0
  2002  0D2B  3400               	retlw	0
  2003  0D2C  3400               	retlw	0
  2004  0D2D  3400               	retlw	0
  2005  0D2E  3400               	retlw	0
  2006  0D2F  3400               	retlw	0
  2007  0D30  3400               	retlw	0
  2008  0D31  3400               	retlw	0
  2009  0D32  3400               	retlw	0
  2010  0D33  3400               	retlw	0
  2011  0D34  3400               	retlw	0
  2012  0D35  3400               	retlw	0
  2013  0D36  3400               	retlw	0
  2014  0D37  3400               	retlw	0
  2015  0D38  3400               	retlw	0
  2016                           
  2017                           	psect	nvBANK0
  2018  006D                     __pnvBANK0:	
  2019  006D                     _product:	
  2020  006D                     	ds	1
  2021  000C                     _PORTA	set	12
  2022  000D                     _PORTB	set	13
  2023  000E                     _PORTC	set	14
  2024  0018                     _T1CON	set	24
  2025  0017                     _TMR1H	set	23
  2026  0016                     _TMR1L	set	22
  2027  005F                     _GIE	set	95
  2028  005B                     _IOCIE	set	91
  2029  0058                     _IOCIF	set	88
  2030  005E                     _PEIE	set	94
  2031  0060                     _RA0	set	96
  2032  0064                     _RA4	set	100
  2033  0066                     _RA6	set	102
  2034  0067                     _RA7	set	103
  2035  0068                     _RB0	set	104
  2036  0069                     _RB1	set	105
  2037  006B                     _RB3	set	107
  2038  006C                     _RB4	set	108
  2039  006D                     _RB5	set	109
  2040  0088                     _TMR1IF	set	136
  2041  009D                     _ADCON0	set	157
  2042  009E                     _ADCON1	set	158
  2043  009C                     _ADRESH	set	156
  2044  009B                     _ADRESL	set	155
  2045  0099                     _OSCCON	set	153
  2046  008C                     _TRISA	set	140
  2047  008D                     _TRISB	set	141
  2048  008E                     _TRISC	set	142
  2049  0097                     _WDTCON	set	151
  2050  04E9                     _GO_nDONE	set	1257
  2051  0488                     _TMR1IE	set	1160
  2052  0117                     _FVRCON	set	279
  2053  010C                     _LATA	set	268
  2054  010D                     _LATB	set	269
  2055  010E                     _LATC	set	270
  2056  018C                     _ANSELA	set	396
  2057  018D                     _ANSELB	set	397
  2058  018E                     _ANSELC	set	398
  2059  0192                     _PMADRH	set	402
  2060  0191                     _PMADRL	set	401
  2061  0196                     _PMCON2	set	406
  2062  0194                     _PMDATH	set	404
  2063  0193                     _PMDATL	set	403
  2064  0CAE                     _CFGS	set	3246
  2065  0CAC                     _FREE	set	3244
  2066  0CAD                     _LWLO	set	3245
  2067  0CA8                     _RD	set	3240
  2068  0CA9                     _WR	set	3241
  2069  0CAA                     _WREN	set	3242
  2070  1069                     _WPUB1	set	4201
  2071  106A                     _WPUB2	set	4202
  2072  0396                     _IOCBF	set	918
  2073  0395                     _IOCBN	set	917
  2074  0394                     _IOCBP	set	916
  2075  1CB2                     _IOCBF2	set	7346
  2076                           
  2077                           ; #config settings
  2078  0000                     
  2079                           	psect	cinit
  2080  0015                     start_initialization:	
  2081  0015                     __initialization:	
  2082                           
  2083                           ; Clear objects allocated to COMMON
  2084  0015  01FA               	clrf	__pbssCOMMON& (0+127)
  2085  0016  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2086  0017  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  2087  0018  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  2088                           
  2089                           ; Clear objects allocated to BANK0
  2090  0019  3056               	movlw	low __pbssBANK0
  2091  001A  0084               	movwf	4
  2092  001B  3000               	movlw	high __pbssBANK0
  2093  001C  0085               	movwf	5
  2094  001D  3017               	movlw	23
  2095  001E  318B  2320  3180   	fcall	clear_ram0
  2096                           
  2097                           ; Clear objects allocated to BANK1
  2098  0021  30A0               	movlw	low __pbssBANK1
  2099  0022  0084               	movwf	4
  2100  0023  3000               	movlw	high __pbssBANK1
  2101  0024  0085               	movwf	5
  2102  0025  302C               	movlw	44
  2103  0026  318B  2320  3180   	fcall	clear_ram0
  2104                           
  2105                           ; Clear objects allocated to BANK2
  2106  0029  3020               	movlw	low __pbssBANK2
  2107  002A  0084               	movwf	4
  2108  002B  3001               	movlw	high __pbssBANK2
  2109  002C  0085               	movwf	5
  2110  002D  3025               	movlw	37
  2111  002E  318B  2320  3180   	fcall	clear_ram0
  2112                           
  2113                           ; Initialize objects allocated to BANK1
  2114  0031  3019               	movlw	low __pidataBANK1
  2115  0032  0084               	movwf	4
  2116  0033  308D               	movlw	(high __pidataBANK1)| (0+128)
  2117  0034  0085               	movwf	5
  2118  0035  30CC               	movlw	low __pdataBANK1
  2119  0036  0086               	movwf	6
  2120  0037  3000               	movlw	high __pdataBANK1
  2121  0038  0087               	movwf	7
  2122  0039  3020               	movlw	32
  2123  003A  318B  231A         	fcall	init_ram
  2124  003C                     end_of_initialization:	
  2125                           ;End of C runtime variable initialization code
  2126                           
  2127  003C                     __end_of__initialization:	
  2128  003C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2129  003D  0020               	movlb	0
  2130  003E  318E  2EE9         	ljmp	_main	;jump to C main() function
  2131                           
  2132                           	psect	bssCOMMON
  2133  007A                     __pbssCOMMON:	
  2134  007A                     _DimmerLights:	
  2135  007A                     	ds	1
  2136  007B                     _DimmerLights11:	
  2137  007B                     	ds	1
  2138  007C                     _DimmerLightsIntr:	
  2139  007C                     	ds	1
  2140  007D                     _DimmerLightsIntrIOC:	
  2141  007D                     	ds	1
  2142                           
  2143                           	psect	bssBANK0
  2144  0056                     __pbssBANK0:	
  2145  0056                     _Buz1:	
  2146  0056                     	ds	12
  2147  0062                     _Dimmer:	
  2148  0062                     	ds	3
  2149  0065                     _Timer1:	
  2150  0065                     	ds	3
  2151  0068                     _WDT:	
  2152  0068                     	ds	2
  2153  006A                     _LED:	
  2154  006A                     	ds	1
  2155  006B                     _Sw:	
  2156  006B                     	ds	1
  2157  006C                     _SwDetect:	
  2158  006C                     	ds	1
  2159                           
  2160                           	psect	bssBANK1
  2161  00A0                     __pbssBANK1:	
  2162  00A0                     _myMain:	
  2163  00A0                     	ds	16
  2164  00B0                     _DimmerLights1:	
  2165  00B0                     	ds	15
  2166  00BF                     _Sw1:	
  2167  00BF                     	ds	9
  2168  00C8                     _VarErrLED:	
  2169  00C8                     	ds	4
  2170                           
  2171                           	psect	dataBANK1
  2172  00CC                     __pdataBANK1:	
  2173  00CC                     __product:	
  2174  00CC                     	ds	32
  2175                           
  2176                           	psect	bssBANK2
  2177  0120                     __pbssBANK2:	
  2178  0120                     _Memory:	
  2179  0120                     	ds	37
  2180                           
  2181                           	psect	clrtext
  2182  0B20                     clear_ram0:	
  2183                           ;	Called with FSR0 containing the base address, and
  2184                           ;	WREG with the size to clear
  2185                           
  2186  0B20  0064               	clrwdt	;clear the watchdog before getting into this loop
  2187  0B21                     clrloop0:	
  2188  0B21  0180               	clrf	0	;clear RAM location pointed to by FSR
  2189  0B22  3101               	addfsr 0,1
  2190  0B23  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2191  0B24  2B21               	goto	clrloop0	;have we reached the end yet?
  2192  0B25  3400               	retlw	0	;all done for this memory range, return
  2193                           
  2194                           	psect	inittext
  2195  0B1A                     init_ram:	
  2196  0B1A  00FE               	movwf	126
  2197  0B1B                     initloop:	
  2198  0B1B  0012               	moviw fsr0++
  2199  0B1C  001E               	movwi fsr1++
  2200  0B1D  0BFE               	decfsz	126,f
  2201  0B1E  2B1B               	goto	initloop
  2202  0B1F  3400               	retlw	0
  2203                           
  2204                           	psect	cstackCOMMON
  2205  0070                     __pcstackCOMMON:	
  2206  0070                     ?_setDimmerLights_Initialization:	
  2207  0070                     ?_Dimmer_Initialization:	
  2208                           ; 0 bytes @ 0x0
  2209                           
  2210  0070                     ?_setDimmerLights_Main:	
  2211                           ; 0 bytes @ 0x0
  2212                           
  2213  0070                     ?_setDimmerLights_Line:	
  2214                           ; 0 bytes @ 0x0
  2215                           
  2216  0070                     ?_setLED_Initialization:	
  2217                           ; 0 bytes @ 0x0
  2218                           
  2219  0070                     ?_setLED_Main:	
  2220                           ; 0 bytes @ 0x0
  2221                           
  2222  0070                     ?_Fosc_Set:	
  2223                           ; 0 bytes @ 0x0
  2224                           
  2225  0070                     ?_IO_Set:	
  2226                           ; 0 bytes @ 0x0
  2227                           
  2228  0070                     ?_TMR1_Set:	
  2229                           ; 0 bytes @ 0x0
  2230                           
  2231  0070                     ?_ADC_Set:	
  2232                           ; 0 bytes @ 0x0
  2233                           
  2234  0070                     ?_IOC_Set:	
  2235                           ; 0 bytes @ 0x0
  2236                           
  2237  0070                     ?_WDT_Set:	
  2238                           ; 0 bytes @ 0x0
  2239                           
  2240  0070                     ?_IOC_ISR:	
  2241                           ; 0 bytes @ 0x0
  2242                           
  2243  0070                     ?_TMR1_ISR:	
  2244                           ; 0 bytes @ 0x0
  2245                           
  2246  0070                     ?_Timeout_Counter:	
  2247                           ; 0 bytes @ 0x0
  2248                           
  2249  0070                     ?_set_TimeoutCleared:	
  2250                           ; 0 bytes @ 0x0
  2251                           
  2252  0070                     ?_Flash_Memory_Write:	
  2253                           ; 0 bytes @ 0x0
  2254                           
  2255  0070                     ?_Flash_Memory_Modify:	
  2256                           ; 0 bytes @ 0x0
  2257                           
  2258  0070                     ?_WDT_Clearing:	
  2259                           ; 0 bytes @ 0x0
  2260                           
  2261  0070                     ?_myMain_Initialization:	
  2262                           ; 0 bytes @ 0x0
  2263                           
  2264  0070                     ?_Switch_Initialization:	
  2265                           ; 0 bytes @ 0x0
  2266                           
  2267  0070                     ?_my_MainTimer:	
  2268                           ; 0 bytes @ 0x0
  2269                           
  2270  0070                     ?_Switch_Main:	
  2271                           ; 0 bytes @ 0x0
  2272                           
  2273  0070                     ?_setSw_Initialization:	
  2274                           ; 0 bytes @ 0x0
  2275                           
  2276  0070                     ?_setSw_Main:	
  2277                           ; 0 bytes @ 0x0
  2278                           
  2279  0070                     ?_Buzzer_Initialization:	
  2280                           ; 0 bytes @ 0x0
  2281                           
  2282  0070                     ?_Buzzer_Main:	
  2283                           ; 0 bytes @ 0x0
  2284                           
  2285  0070                     ?_DimmerIntrIOCPointSelect:	
  2286                           ; 0 bytes @ 0x0
  2287                           
  2288  0070                     ??_DimmerIntrIOCPointSelect:	
  2289                           ; 0 bytes @ 0x0
  2290                           
  2291  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2292                           ; 0 bytes @ 0x0
  2293                           
  2294  0070                     ?_DimmerIntrPointSelect:	
  2295                           ; 0 bytes @ 0x0
  2296                           
  2297  0070                     ??_DimmerIntrPointSelect:	
  2298                           ; 0 bytes @ 0x0
  2299                           
  2300  0070                     ?_setDimmerLights_IntrControl:	
  2301                           ; 0 bytes @ 0x0
  2302                           
  2303  0070                     ?_DimmerLightsPointSelect:	
  2304                           ; 0 bytes @ 0x0
  2305                           
  2306  0070                     ?_DimmerLights_Initialization:	
  2307                           ; 0 bytes @ 0x0
  2308                           
  2309  0070                     ?_DimmerLights_Main:	
  2310                           ; 0 bytes @ 0x0
  2311                           
  2312  0070                     ?_setDimmerLights_SwOn:	
  2313                           ; 0 bytes @ 0x0
  2314                           
  2315  0070                     ?_setDimmerLights_SwOff:	
  2316                           ; 0 bytes @ 0x0
  2317                           
  2318  0070                     ?_setDimmerLights_AdjControl:	
  2319                           ; 0 bytes @ 0x0
  2320                           
  2321  0070                     ?_setDimmerLights_ErrorClose:	
  2322                           ; 0 bytes @ 0x0
  2323                           
  2324  0070                     ?_LedPointSelect:	
  2325                           ; 0 bytes @ 0x0
  2326                           
  2327  0070                     ?_LED_Initialization:	
  2328                           ; 0 bytes @ 0x0
  2329                           
  2330  0070                     ?_LED_Main:	
  2331                           ; 0 bytes @ 0x0
  2332                           
  2333  0070                     ?_Mcu_Initialization:	
  2334                           ; 0 bytes @ 0x0
  2335                           
  2336  0070                     ?_ISR:	
  2337                           ; 0 bytes @ 0x0
  2338                           
  2339  0070                     ?_setDimmerReClock:	
  2340                           ; 0 bytes @ 0x0
  2341                           
  2342  0070                     ?_Flash_Memory_Initialization:	
  2343                           ; 0 bytes @ 0x0
  2344                           
  2345  0070                     ?_Flash_Memory_Main:	
  2346                           ; 0 bytes @ 0x0
  2347                           
  2348  0070                     ?_Flash_Memory_Unlock:	
  2349                           ; 0 bytes @ 0x0
  2350                           
  2351  0070                     ?_Flash_Memory_Erasing:	
  2352                           ; 0 bytes @ 0x0
  2353                           
  2354  0070                     ?_WDT_Main:	
  2355                           ; 0 bytes @ 0x0
  2356                           
  2357  0070                     ?_setMain_Exception:	
  2358                           ; 0 bytes @ 0x0
  2359                           
  2360  0070                     ?_TouchPower:	
  2361                           ; 0 bytes @ 0x0
  2362                           
  2363  0070                     ?_SwPointSelect:	
  2364                           ; 0 bytes @ 0x0
  2365                           
  2366  0070                     ?i1_LedPointSelect:	
  2367                           ; 0 bytes @ 0x0
  2368                           
  2369  0070                     ??i1_LedPointSelect:	
  2370                           ; 0 bytes @ 0x0
  2371                           
  2372  0070                     ?_Flash_Memory_Read:	
  2373                           ; 0 bytes @ 0x0
  2374                           
  2375  0070                     ?_getMain_LightsStatus:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_getSw_KeyStatus:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_getDimmerLights_Status:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_getAll_DimmerLights_AdjGO:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_getDimmerLights_Line:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_setPercentValue:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_getMain_All_Error_Status:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     getMain_All_Error_Status@command:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     getSw_KeyStatus@sw:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402                           
  2403                           ; 1 bytes @ 0x0
  2404  0070                     	ds	1
  2405  0071                     DimmerIntrIOCPointSelect@lights:	
  2406  0071                     DimmerIntrPointSelect@lights:	
  2407                           ; 1 bytes @ 0x1
  2408                           
  2409  0071                     i1LedPointSelect@led:	
  2410                           ; 1 bytes @ 0x1
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x1
  2414  0071                     	ds	1
  2415  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2416  0072                     ?i1_setLED:	
  2417                           ; 0 bytes @ 0x2
  2418                           
  2419  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2420                           ; 0 bytes @ 0x2
  2421                           
  2422  0072                     i1setLED@command:	
  2423                           ; 1 bytes @ 0x2
  2424                           
  2425                           
  2426                           ; 1 bytes @ 0x2
  2427  0072                     	ds	1
  2428  0073                     ??_IOC_ISR:	
  2429  0073                     ??_setDimmerReClock:	
  2430                           ; 0 bytes @ 0x3
  2431                           
  2432  0073                     ??i1_setLED:	
  2433                           ; 0 bytes @ 0x3
  2434                           
  2435  0073                     i1setLED@led:	
  2436                           ; 0 bytes @ 0x3
  2437                           
  2438                           
  2439                           ; 1 bytes @ 0x3
  2440  0073                     	ds	1
  2441  0074                     ??_setDimmerLights_IntrControl:	
  2442                           
  2443                           ; 0 bytes @ 0x4
  2444  0074                     	ds	4
  2445  0078                     setDimmerLights_IntrControl@lights:	
  2446                           
  2447                           ; 1 bytes @ 0x8
  2448  0078                     	ds	1
  2449  0079                     ??_TMR1_ISR:	
  2450  0079                     ??_ISR:	
  2451                           ; 0 bytes @ 0x9
  2452                           
  2453                           
  2454                           ; 0 bytes @ 0x9
  2455  0079                     	ds	1
  2456                           
  2457                           	psect	cstackBANK0
  2458  0020                     __pcstackBANK0:	
  2459  0020                     ??_Dimmer_Initialization:	
  2460  0020                     ??_setDimmerLights_Line:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0020                     ??_Fosc_Set:	
  2464                           ; 0 bytes @ 0x0
  2465                           
  2466  0020                     ??_IO_Set:	
  2467                           ; 0 bytes @ 0x0
  2468                           
  2469  0020                     ??_TMR1_Set:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0020                     ??_ADC_Set:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0020                     ??_IOC_Set:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0020                     ??_WDT_Set:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0020                     ??_Timeout_Counter:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0020                     ??_set_TimeoutCleared:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0020                     ??_Flash_Memory_Read:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0020                     ?_setMemory_Data:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0020                     ??_Flash_Memory_Write:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0020                     ??_WDT_Clearing:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0020                     ??_myMain_Initialization:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0020                     ??_getSw_KeyStatus:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0020                     ??_Buzzer_Initialization:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0020                     ??_Buzzer_Main:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0020                     ??_DimmerLightsPointSelect:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0020                     ??_getAll_DimmerLights_AdjGO:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0020                     ??_getDimmerLights_Line:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0020                     ??_LedPointSelect:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0020                     ??_Flash_Memory_Unlock:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0020                     ??_Flash_Memory_Erasing:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0020                     ??_WDT_Main:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0020                     ??_getMain_All_Error_Status:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0020                     ??_TouchPower:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0020                     ??_SwPointSelect:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0020                     ?___awdiv:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0020                     ?___ftpack:	
  2545                           ; 2 bytes @ 0x0
  2546                           
  2547  0020                     getAll_DimmerLights_AdjGO@adjgo:	
  2548                           ; 3 bytes @ 0x0
  2549                           
  2550  0020                     setDimmerLights_Line@lights:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0020                     getDimmerLights_Line@line:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0020                     setMemory_Data@data:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0020                     getMain_All_Error_Status@status:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0020                     ___awdiv@divisor:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0020                     ___ftpack@arg:	
  2566                           ; 2 bytes @ 0x0
  2567                           
  2568                           
  2569                           ; 3 bytes @ 0x0
  2570  0020                     	ds	1
  2571  0021                     ??_setMemory_Data:	
  2572  0021                     ??_Mcu_Initialization:	
  2573                           ; 0 bytes @ 0x1
  2574                           
  2575  0021                     DimmerLightsPointSelect@lights:	
  2576                           ; 0 bytes @ 0x1
  2577                           
  2578  0021                     LedPointSelect@led:	
  2579                           ; 1 bytes @ 0x1
  2580                           
  2581  0021                     Flash_Memory_Read@i:	
  2582                           ; 1 bytes @ 0x1
  2583                           
  2584  0021                     Flash_Memory_Write@i:	
  2585                           ; 1 bytes @ 0x1
  2586                           
  2587  0021                     SwPointSelect@sw:	
  2588                           ; 1 bytes @ 0x1
  2589                           
  2590  0021                     getSw_KeyStatus@status:	
  2591                           ; 1 bytes @ 0x1
  2592                           
  2593                           
  2594                           ; 1 bytes @ 0x1
  2595  0021                     	ds	1
  2596  0022                     ?_setLED:	
  2597  0022                     ??_setDimmerLights_Initialization:	
  2598                           ; 0 bytes @ 0x2
  2599                           
  2600  0022                     ?_setDimmerLights_Adj:	
  2601                           ; 0 bytes @ 0x2
  2602                           
  2603  0022                     ?_setDimmerLights_Trigger:	
  2604                           ; 0 bytes @ 0x2
  2605                           
  2606  0022                     ?_setDimmerLights_TriggerAdj:	
  2607                           ; 0 bytes @ 0x2
  2608                           
  2609  0022                     ??_setLED_Main:	
  2610                           ; 0 bytes @ 0x2
  2611                           
  2612  0022                     ??_getDimmerLights_Status:	
  2613                           ; 0 bytes @ 0x2
  2614                           
  2615  0022                     getDimmerLights_Status@lights:	
  2616                           ; 0 bytes @ 0x2
  2617                           
  2618  0022                     setDimmerLights_Adj@status:	
  2619                           ; 1 bytes @ 0x2
  2620                           
  2621  0022                     setDimmerLights_Trigger@command:	
  2622                           ; 1 bytes @ 0x2
  2623                           
  2624  0022                     setDimmerLights_TriggerAdj@command:	
  2625                           ; 1 bytes @ 0x2
  2626                           
  2627  0022                     setLED@command:	
  2628                           ; 1 bytes @ 0x2
  2629                           
  2630  0022                     Flash_Memory_Read@address:	
  2631                           ; 1 bytes @ 0x2
  2632                           
  2633  0022                     setMemory_Data@address:	
  2634                           ; 1 bytes @ 0x2
  2635                           
  2636  0022                     _getSw_KeyStatus$4283:	
  2637                           ; 1 bytes @ 0x2
  2638                           
  2639  0022                     ___awdiv@dividend:	
  2640                           ; 1 bytes @ 0x2
  2641                           
  2642                           
  2643                           ; 2 bytes @ 0x2
  2644  0022                     	ds	1
  2645  0023                     ??_setLED:	
  2646  0023                     ??_setDimmerLights_Adj:	
  2647                           ; 0 bytes @ 0x3
  2648                           
  2649  0023                     ??_setDimmerLights_Trigger:	
  2650                           ; 0 bytes @ 0x3
  2651                           
  2652  0023                     ??_setDimmerLights_TriggerAdj:	
  2653                           ; 0 bytes @ 0x3
  2654                           
  2655  0023                     setDimmerLights_Initialization@lights:	
  2656                           ; 0 bytes @ 0x3
  2657                           
  2658  0023                     getDimmerLights_Status@status:	
  2659                           ; 1 bytes @ 0x3
  2660                           
  2661  0023                     setLED@led:	
  2662                           ; 1 bytes @ 0x3
  2663                           
  2664  0023                     Flash_Memory_Read@ret:	
  2665                           ; 1 bytes @ 0x3
  2666                           
  2667  0023                     ___ftpack@exp:	
  2668                           ; 1 bytes @ 0x3
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x3
  2672  0023                     	ds	1
  2673  0024                     ?_setDimmerLights:	
  2674  0024                     ??_setLED_Initialization:	
  2675                           ; 0 bytes @ 0x4
  2676                           
  2677  0024                     ??_getMain_LightsStatus:	
  2678                           ; 0 bytes @ 0x4
  2679                           
  2680  0024                     ??_Flash_Memory_Modify:	
  2681                           ; 0 bytes @ 0x4
  2682                           
  2683  0024                     ??_setSw_Initialization:	
  2684                           ; 0 bytes @ 0x4
  2685                           
  2686  0024                     ??_DimmerLights_Initialization:	
  2687                           ; 0 bytes @ 0x4
  2688                           
  2689  0024                     ??___awdiv:	
  2690                           ; 0 bytes @ 0x4
  2691                           
  2692  0024                     setDimmerLights@status:	
  2693                           ; 0 bytes @ 0x4
  2694                           
  2695  0024                     setDimmerLights_Adj@lights:	
  2696                           ; 1 bytes @ 0x4
  2697                           
  2698  0024                     setDimmerLights_Trigger@lights:	
  2699                           ; 1 bytes @ 0x4
  2700                           
  2701  0024                     setDimmerLights_TriggerAdj@lights:	
  2702                           ; 1 bytes @ 0x4
  2703                           
  2704  0024                     setLED_Initialization@led:	
  2705                           ; 1 bytes @ 0x4
  2706                           
  2707  0024                     setLED_Main@led:	
  2708                           ; 1 bytes @ 0x4
  2709                           
  2710  0024                     setSw_Initialization@sw:	
  2711                           ; 1 bytes @ 0x4
  2712                           
  2713  0024                     ___ftpack@sign:	
  2714                           ; 1 bytes @ 0x4
  2715                           
  2716                           
  2717                           ; 1 bytes @ 0x4
  2718  0024                     	ds	1
  2719  0025                     ??_setDimmerLights:	
  2720  0025                     ??_Switch_Initialization:	
  2721                           ; 0 bytes @ 0x5
  2722                           
  2723  0025                     ??___ftpack:	
  2724                           ; 0 bytes @ 0x5
  2725                           
  2726  0025                     ??_setDimmerLights_SwOff:	
  2727                           ; 0 bytes @ 0x5
  2728                           
  2729  0025                     ??_setDimmerLights_AdjControl:	
  2730                           ; 0 bytes @ 0x5
  2731                           
  2732  0025                     ??_LED_Initialization:	
  2733                           ; 0 bytes @ 0x5
  2734                           
  2735  0025                     ??_LED_Main:	
  2736                           ; 0 bytes @ 0x5
  2737                           
  2738  0025                     Flash_Memory_Modify@i:	
  2739                           ; 0 bytes @ 0x5
  2740                           
  2741  0025                     getMain_LightsStatus@count:	
  2742                           ; 1 bytes @ 0x5
  2743                           
  2744  0025                     ___awdiv@counter:	
  2745                           ; 1 bytes @ 0x5
  2746                           
  2747                           
  2748                           ; 1 bytes @ 0x5
  2749  0025                     	ds	1
  2750  0026                     setDimmerLights_AdjControl@idle:	
  2751  0026                     setDimmerLights@lights:	
  2752                           ; 1 bytes @ 0x6
  2753                           
  2754  0026                     ___awdiv@sign:	
  2755                           ; 1 bytes @ 0x6
  2756                           
  2757  0026                     getMain_LightsStatus@i:	
  2758                           ; 1 bytes @ 0x6
  2759                           
  2760                           
  2761                           ; 2 bytes @ 0x6
  2762  0026                     	ds	1
  2763  0027                     setDimmerLights_SwOff@command:	
  2764  0027                     _setDimmerLights_AdjControl$1571:	
  2765                           ; 1 bytes @ 0x7
  2766                           
  2767  0027                     ___awdiv@quotient:	
  2768                           ; 1 bytes @ 0x7
  2769                           
  2770                           
  2771                           ; 2 bytes @ 0x7
  2772  0027                     	ds	1
  2773  0028                     ?___awtoft:	
  2774  0028                     setDimmerLights_SwOff@sw:	
  2775                           ; 3 bytes @ 0x8
  2776                           
  2777  0028                     setDimmerLights_AdjControl@sw:	
  2778                           ; 1 bytes @ 0x8
  2779                           
  2780  0028                     getMain_LightsStatus@status:	
  2781                           ; 1 bytes @ 0x8
  2782                           
  2783  0028                     ___awtoft@c:	
  2784                           ; 1 bytes @ 0x8
  2785                           
  2786                           
  2787                           ; 2 bytes @ 0x8
  2788  0028                     	ds	1
  2789  0029                     ?_setBuz:	
  2790  0029                     ??_setDimmerLights_ErrorClose:	
  2791                           ; 0 bytes @ 0x9
  2792                           
  2793  0029                     ??_Flash_Memory_Main:	
  2794                           ; 0 bytes @ 0x9
  2795                           
  2796  0029                     setBuz@time:	
  2797                           ; 0 bytes @ 0x9
  2798                           
  2799                           
  2800                           ; 2 bytes @ 0x9
  2801  0029                     	ds	1
  2802  002A                     setDimmerLights_ErrorClose@count:	
  2803                           
  2804                           ; 1 bytes @ 0xA
  2805  002A                     	ds	1
  2806  002B                     ??_setBuz:	
  2807  002B                     ??___awtoft:	
  2808                           ; 0 bytes @ 0xB
  2809                           
  2810  002B                     setDimmerLights_ErrorClose@lights:	
  2811                           ; 0 bytes @ 0xB
  2812                           
  2813                           
  2814                           ; 1 bytes @ 0xB
  2815  002B                     	ds	1
  2816  002C                     setBuz@count:	
  2817  002C                     setDimmerLights_ErrorClose@i:	
  2818                           ; 1 bytes @ 0xC
  2819                           
  2820                           
  2821                           ; 2 bytes @ 0xC
  2822  002C                     	ds	1
  2823  002D                     ??_setDimmerLights_Main:	
  2824  002D                     ??_my_MainTimer:	
  2825                           ; 0 bytes @ 0xD
  2826                           
  2827  002D                     ??_setDimmerLights_SwOn:	
  2828                           ; 0 bytes @ 0xD
  2829                           
  2830  002D                     setDimmerLights_Main@lights:	
  2831                           ; 0 bytes @ 0xD
  2832                           
  2833  002D                     ___awtoft@sign:	
  2834                           ; 1 bytes @ 0xD
  2835                           
  2836                           
  2837                           ; 1 bytes @ 0xD
  2838  002D                     	ds	1
  2839  002E                     ??_DimmerLights_Main:	
  2840  002E                     ??_setMain_Exception:	
  2841                           ; 0 bytes @ 0xE
  2842                           
  2843  002E                     ?___ftdiv:	
  2844                           ; 0 bytes @ 0xE
  2845                           
  2846  002E                     setDimmerLights_SwOn@idle:	
  2847                           ; 3 bytes @ 0xE
  2848                           
  2849  002E                     ___ftdiv@f2:	
  2850                           ; 1 bytes @ 0xE
  2851                           
  2852                           
  2853                           ; 3 bytes @ 0xE
  2854  002E                     	ds	1
  2855  002F                     setDimmerLights_SwOn@sw:	
  2856                           
  2857                           ; 1 bytes @ 0xF
  2858  002F                     	ds	1
  2859  0030                     ??_setSw_Main:	
  2860  0030                     setMain_Exception@buz:	
  2861                           ; 0 bytes @ 0x10
  2862                           
  2863                           
  2864                           ; 1 bytes @ 0x10
  2865  0030                     	ds	1
  2866  0031                     _setMain_Exception$2531:	
  2867  0031                     ___ftdiv@f1:	
  2868                           ; 2 bytes @ 0x11
  2869                           
  2870                           
  2871                           ; 3 bytes @ 0x11
  2872  0031                     	ds	1
  2873  0032                     setSw_Main@sw:	
  2874                           
  2875                           ; 1 bytes @ 0x12
  2876  0032                     	ds	1
  2877  0033                     setMain_Exception@status:	
  2878                           
  2879                           ; 1 bytes @ 0x13
  2880  0033                     	ds	1
  2881  0034                     ??___ftdiv:	
  2882  0034                     setMain_Exception@command:	
  2883                           ; 0 bytes @ 0x14
  2884                           
  2885                           
  2886                           ; 1 bytes @ 0x14
  2887  0034                     	ds	1
  2888  0035                     ??_Switch_Main:	
  2889                           
  2890                           ; 0 bytes @ 0x15
  2891  0035                     	ds	1
  2892  0036                     Switch_Main@error:	
  2893                           
  2894                           ; 1 bytes @ 0x16
  2895  0036                     	ds	2
  2896  0038                     ___ftdiv@cntr:	
  2897                           
  2898                           ; 1 bytes @ 0x18
  2899  0038                     	ds	1
  2900  0039                     ___ftdiv@f3:	
  2901                           
  2902                           ; 3 bytes @ 0x19
  2903  0039                     	ds	3
  2904  003C                     ___ftdiv@exp:	
  2905                           
  2906                           ; 1 bytes @ 0x1C
  2907  003C                     	ds	1
  2908  003D                     ___ftdiv@sign:	
  2909                           
  2910                           ; 1 bytes @ 0x1D
  2911  003D                     	ds	1
  2912  003E                     ?___fttol:	
  2913  003E                     ___fttol@f1:	
  2914                           ; 4 bytes @ 0x1E
  2915                           
  2916                           
  2917                           ; 3 bytes @ 0x1E
  2918  003E                     	ds	4
  2919  0042                     ??___fttol:	
  2920                           
  2921                           ; 0 bytes @ 0x22
  2922  0042                     	ds	4
  2923  0046                     ___fttol@sign1:	
  2924                           
  2925                           ; 1 bytes @ 0x26
  2926  0046                     	ds	1
  2927  0047                     ___fttol@lval:	
  2928                           
  2929                           ; 4 bytes @ 0x27
  2930  0047                     	ds	4
  2931  004B                     ___fttol@exp1:	
  2932                           
  2933                           ; 1 bytes @ 0x2B
  2934  004B                     	ds	1
  2935  004C                     ??_setPercentValue:	
  2936  004C                     setPercentValue@value:	
  2937                           ; 0 bytes @ 0x2C
  2938                           
  2939                           
  2940                           ; 1 bytes @ 0x2C
  2941  004C                     	ds	1
  2942  004D                     setPercentValue@i:	
  2943                           
  2944                           ; 3 bytes @ 0x2D
  2945  004D                     	ds	3
  2946  0050                     ??_Flash_Memory_Initialization:	
  2947                           
  2948                           ; 0 bytes @ 0x30
  2949  0050                     	ds	1
  2950  0051                     Flash_Memory_Initialization@i:	
  2951                           
  2952                           ; 1 bytes @ 0x31
  2953  0051                     	ds	1
  2954  0052                     ?_main:	
  2955  0052                     main@argc:	
  2956                           ; 2 bytes @ 0x32
  2957                           
  2958                           
  2959                           ; 2 bytes @ 0x32
  2960  0052                     	ds	2
  2961  0054                     main@argv:	
  2962                           
  2963                           ; 2 bytes @ 0x34
  2964  0054                     	ds	2
  2965  0056                     ??_main:	
  2966                           
  2967                           	psect	maintext
  2968  0EE9                     __pmaintext:	
  2969                           ; 0 bytes @ 0x36
  2970 ;;
  2971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2972 ;;
  2973 ;; *************** function _main *****************
  2974 ;; Defined at:
  2975 ;;		line 7 in file "../src/Main_B1.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  argc            2   50[BANK0 ] int 
  2978 ;;  argv            2   52[BANK0 ] PTR PTR unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2   50[BANK0 ] int 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 17F/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2990 ;;      Params:         0       4       0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0
  2993 ;;      Totals:         0       4       0       0       0       0       0       0
  2994 ;;Total ram usage:        4 bytes
  2995 ;; Hardware stack levels required when called:   11
  2996 ;; This function calls:
  2997 ;;		_Buzzer_Initialization
  2998 ;;		_Buzzer_Main
  2999 ;;		_DimmerLights_Initialization
  3000 ;;		_DimmerLights_Main
  3001 ;;		_Flash_Memory_Initialization
  3002 ;;		_Flash_Memory_Main
  3003 ;;		_LED_Initialization
  3004 ;;		_LED_Main
  3005 ;;		_Mcu_Initialization
  3006 ;;		_Switch_Initialization
  3007 ;;		_Switch_Main
  3008 ;;		_WDT_Main
  3009 ;;		_myMain_Initialization
  3010 ;;		_my_MainTimer
  3011 ;; This function is called by:
  3012 ;;		Startup code after reset
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _main
  3018  0EE9                     _main:	
  3019                           
  3020                           ;Main_B1.c: 8: myMain_Initialization();
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3024  0EE9  318B  23E7  318E   	fcall	_myMain_Initialization
  3025                           
  3026                           ;Main_B1.c: 9: Mcu_Initialization();
  3027  0EEC  318C  2454  318E   	fcall	_Mcu_Initialization
  3028                           
  3029                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  3030  0EEF  3182  2298  318E   	fcall	_Flash_Memory_Initialization
  3031                           
  3032                           ;Main_B1.c: 11: LED_Initialization();
  3033  0EF2  318B  2305  318E   	fcall	_LED_Initialization
  3034                           
  3035                           ;Main_B1.c: 12: Buzzer_Initialization();
  3036  0EF5  318A  22FA  318E   	fcall	_Buzzer_Initialization
  3037                           
  3038                           ;Main_B1.c: 14: ;;
  3039                           ;Main_B1.c: 15: ;;
  3040                           ;Main_B1.c: 16: ;;
  3041                           ;Main_B1.c: 17: ;;
  3042                           ;Main_B1.c: 18: ;;
  3043                           ;Main_B1.c: 20: DimmerLights_Initialization();
  3044  0EF8  318B  239E  318E   	fcall	_DimmerLights_Initialization
  3045                           
  3046                           ;Main_B1.c: 21: ;;
  3047                           ;Main_B1.c: 22: ;;
  3048                           ;Main_B1.c: 23: ;;
  3049                           ;Main_B1.c: 24: Switch_Initialization();
  3050  0EFB  318B  2336  318E   	fcall	_Switch_Initialization
  3051                           
  3052                           ;Main_B1.c: 25: ;;
  3053                           ;Main_B1.c: 26: __nop();
  3054  0EFE  0000               	nop
  3055  0EFF                     l819:	
  3056                           ;Main_B1.c: 27: ;;
  3057                           ;Main_B1.c: 29: while (1) {
  3058                           
  3059                           
  3060                           ;Main_B1.c: 56: }
  3061                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3062  0EFF  0020               	movlb	0	; select bank0
  3063  0F00  1C65               	btfss	_Timer1,0
  3064  0F01  2EFF               	goto	l819
  3065                           
  3066                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3067  0F02  1065               	bcf	_Timer1,0
  3068                           
  3069                           ;Main_B1.c: 94: my_MainTimer();
  3070  0F03  318F  2787  318E   	fcall	_my_MainTimer
  3071                           
  3072                           ;Main_B1.c: 95: WDT_Main();
  3073  0F06  318C  2433  318E   	fcall	_WDT_Main
  3074                           
  3075                           ;Main_B1.c: 96: ;;
  3076                           ;Main_B1.c: 97: ;;
  3077                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  3078  0F09  0021               	movlb	1	; select bank1
  3079  0F0A  1C20               	btfss	_myMain^(0+128),0
  3080  0F0B  2EFF               	goto	l819
  3081                           
  3082                           ;Main_B1.c: 99: Flash_Memory_Main();
  3083  0F0C  318F  2751  318E   	fcall	_Flash_Memory_Main
  3084                           
  3085                           ;Main_B1.c: 101: LED_Main();
  3086  0F0F  318B  2309  318E   	fcall	_LED_Main
  3087                           
  3088                           ;Main_B1.c: 102: Buzzer_Main();
  3089  0F12  318F  27C0  318E   	fcall	_Buzzer_Main
  3090                           
  3091                           ;Main_B1.c: 104: ;;
  3092                           ;Main_B1.c: 105: ;;
  3093                           ;Main_B1.c: 106: ;;
  3094                           ;Main_B1.c: 107: ;;
  3095                           ;Main_B1.c: 109: ;;
  3096                           ;Main_B1.c: 110: DimmerLights_Main();
  3097  0F15  318B  2301  318E   	fcall	_DimmerLights_Main
  3098                           
  3099                           ;Main_B1.c: 111: Switch_Main();
  3100  0F18  318C  24DE  318E   	fcall	_Switch_Main
  3101                           
  3102                           ;Main_B1.c: 112: ;;
  3103                           ;Main_B1.c: 113: ;;
  3104                           ;Main_B1.c: 115: ;;
  3105                           ;Main_B1.c: 116: ;;
  3106                           ;Main_B1.c: 117: ;;
  3107  0F1B  2EFF               	goto	l819
  3108  0F1C                     __end_of_main:	
  3109                           ;Main_B1.c: 125: }
  3110                           ;Main_B1.c: 126: }
  3111                           ;Main_B1.c: 160: }
  3112                           ;Main_B1.c: 161: return (0);
  3113                           ;	Return value of _main is never used
  3114                           
  3115                           
  3116                           	psect	text1
  3117  0F87                     __ptext1:	
  3118 ;; *************** function _my_MainTimer *****************
  3119 ;; Defined at:
  3120 ;;		line 180 in file "../src/Main_B1.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;		None               void
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3134 ;;      Params:         0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    7
  3141 ;; This function calls:
  3142 ;;		_setBuz
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _my_MainTimer
  3150  0F87                     _my_MainTimer:	
  3151                           
  3152                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  3153                           
  3154                           ;incstack = 0
  3155                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3156  0F87  0021               	movlb	1	; select bank1
  3157  0F88  1820               	btfsc	_myMain^(0+128),0
  3158  0F89  2FA8               	goto	l4047
  3159                           
  3160                           ;Main_B1.c: 183: myMain.PowerCount++;
  3161  0F8A  3001               	movlw	1
  3162  0F8B  07A2               	addwf	(_myMain^(0+128)+2),f
  3163  0F8C  3000               	movlw	0
  3164  0F8D  3DA3               	addwfc	((_myMain+1)^(0+128)+2),f
  3165                           
  3166                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  3167  0F8E  3002               	movlw	2
  3168  0F8F  3EA0               	addlw	_myMain& (0+255)
  3169  0F90  0086               	movwf	6
  3170  0F91  0187               	clrf	7
  3171  0F92  3F40               	moviw [0]fsr1
  3172  0F93  3A96               	xorlw	150
  3173  0F94  1D03               	skipz
  3174  0F95  2F98               	goto	u3655
  3175  0F96  3F41               	moviw [1]fsr1
  3176  0F97  3A00               	xorlw	0
  3177  0F98                     u3655:	
  3178  0F98  1D03               	skipz
  3179  0F99  0008               	return
  3180                           
  3181                           ;Main_B1.c: 185: {
  3182                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  3183  0F9A  01A2               	clrf	(_myMain^(0+128)+2)
  3184  0F9B  01A3               	clrf	((_myMain+1)^(0+128)+2)
  3185                           
  3186                           ;Main_B1.c: 187: myMain.PowerON = 1;
  3187  0F9C  1420               	bsf	_myMain^(0+128),0
  3188                           
  3189                           ;Main_B1.c: 193: setBuz(3, 50);
  3190  0F9D  3032               	movlw	50
  3191  0F9E  0020               	movlb	0	; select bank0
  3192  0F9F  00A9               	movwf	setBuz@time
  3193  0FA0  3000               	movlw	0
  3194  0FA1  00AA               	movwf	setBuz@time+1
  3195  0FA2  3003               	movlw	3
  3196  0FA3  3187  273A         	fcall	_setBuz
  3197                           
  3198                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  3199  0FA5  0021               	movlb	1	; select bank1
  3200  0FA6  1620               	bsf	_myMain^(0+128),4
  3201                           
  3202                           ;Main_B1.c: 203: }
  3203                           ;Main_B1.c: 204: } else {
  3204  0FA7  0008               	return
  3205  0FA8                     l4047:	
  3206                           
  3207                           ;Main_B1.c: 212: myMain.Count1++;
  3208  0FA8  3001               	movlw	1
  3209  0FA9  07A6               	addwf	(_myMain^(0+128)+6),f
  3210  0FAA  3000               	movlw	0
  3211  0FAB  3DA7               	addwfc	((_myMain+1)^(0+128)+6),f
  3212                           
  3213                           ;Main_B1.c: 213: if (myMain.Count1 == 100)
  3214  0FAC  3006               	movlw	6
  3215  0FAD  3EA0               	addlw	_myMain& (0+255)
  3216  0FAE  0086               	movwf	6
  3217  0FAF  0187               	clrf	7
  3218  0FB0  3F40               	moviw [0]fsr1
  3219  0FB1  3A64               	xorlw	100
  3220  0FB2  1D03               	skipz
  3221  0FB3  2FB6               	goto	u3665
  3222  0FB4  3F41               	moviw [1]fsr1
  3223  0FB5  3A00               	xorlw	0
  3224  0FB6                     u3665:	
  3225  0FB6  1D03               	skipz
  3226  0FB7  0008               	return
  3227                           
  3228                           ;Main_B1.c: 214: {
  3229                           ;Main_B1.c: 215: myMain.Count1 = 0;
  3230  0FB8  01A6               	clrf	(_myMain^(0+128)+6)
  3231  0FB9  01A7               	clrf	((_myMain+1)^(0+128)+6)
  3232                           
  3233                           ;Main_B1.c: 227: if (myMain.Flag) {
  3234  0FBA  1CA0               	btfss	_myMain^(0+128),1
  3235  0FBB  2FBE               	goto	l834
  3236                           
  3237                           ;Main_B1.c: 228: myMain.Flag = 0;
  3238  0FBC  10A0               	bcf	_myMain^(0+128),1
  3239                           
  3240                           ;Main_B1.c: 237: } else {
  3241  0FBD  0008               	return
  3242  0FBE                     l834:	
  3243                           
  3244                           ;Main_B1.c: 238: myMain.Flag = 1;
  3245  0FBE  14A0               	bsf	_myMain^(0+128),1
  3246  0FBF  0008               	return
  3247  0FC0                     __end_of_my_MainTimer:	
  3248                           
  3249                           	psect	text2
  3250  0BE7                     __ptext2:	
  3251 ;; *************** function _myMain_Initialization *****************
  3252 ;; Defined at:
  3253 ;;		line 167 in file "../src/Main_B1.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr1l, fsr1h
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3267 ;;      Params:         0       0       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       1       0       0       0       0       0       0
  3270 ;;      Totals:         0       1       0       0       0       0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    5
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _myMain_Initialization
  3283  0BE7                     _myMain_Initialization:	
  3284                           
  3285                           ;Main_B1.c: 169: product = &_product;
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3289  0BE7  30CC               	movlw	__product& (0+255)
  3290  0BE8  0020               	movlb	0	; select bank0
  3291  0BE9  00A0               	movwf	??_myMain_Initialization
  3292  0BEA  0820               	movf	??_myMain_Initialization,w
  3293  0BEB  00ED               	movwf	_product
  3294                           
  3295                           ;Main_B1.c: 170: product->Data[20] = 209;
  3296  0BEC  30D1               	movlw	209
  3297  0BED  00A0               	movwf	??_myMain_Initialization
  3298  0BEE  086D               	movf	_product,w
  3299  0BEF  3E14               	addlw	20
  3300  0BF0  0086               	movwf	6
  3301  0BF1  0187               	clrf	7
  3302  0BF2  0820               	movf	??_myMain_Initialization,w
  3303  0BF3  0081               	movwf	1
  3304  0BF4  0008               	return
  3305  0BF5                     __end_of_myMain_Initialization:	
  3306                           
  3307                           	psect	text3
  3308  0C33                     __ptext3:	
  3309 ;; *************** function _WDT_Main *****************
  3310 ;; Defined at:
  3311 ;;		line 1033 in file "../src/MCU_B1.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3325 ;;      Params:         0       0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0
  3327 ;;      Temps:          0       1       0       0       0       0       0       0
  3328 ;;      Totals:         0       1       0       0       0       0       0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    6
  3332 ;; This function calls:
  3333 ;;		_WDT_Clearing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _WDT_Main
  3341  0C33                     _WDT_Main:	
  3342                           
  3343                           ;MCU_B1.c: 1034: if (WDT.Enable == 1) {
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3347  0C33  0020               	movlb	0	; select bank0
  3348  0C34  1C68               	btfss	_WDT,0
  3349  0C35  0008               	return
  3350                           
  3351                           ;MCU_B1.c: 1035: if (WDT.Timer-- > 0) {
  3352  0C36  3001               	movlw	1
  3353  0C37  02E9               	subwf	_WDT+1,f
  3354  0C38  0869               	movf	_WDT+1,w
  3355  0C39  3AFF               	xorlw	255
  3356  0C3A  1903               	skipnz
  3357  0C3B  0008               	return
  3358                           
  3359                           ;MCU_B1.c: 1036: WDT.Timer = 100;
  3360  0C3C  3064               	movlw	100
  3361  0C3D  00A0               	movwf	??_WDT_Main
  3362  0C3E  0820               	movf	??_WDT_Main,w
  3363  0C3F  00E9               	movwf	_WDT+1
  3364                           
  3365                           ;MCU_B1.c: 1037: WDT_Clearing();
  3366  0C40  3180  2002         	fcall	_WDT_Clearing
  3367  0C42  0008               	return
  3368  0C43                     __end_of_WDT_Main:	
  3369                           
  3370                           	psect	text4
  3371  0002                     __ptext4:	
  3372 ;; *************** function _WDT_Clearing *****************
  3373 ;; Defined at:
  3374 ;;		line 1043 in file "../src/MCU_B1.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;		None               void
  3381 ;; Registers used:
  3382 ;;		None
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3388 ;;      Params:         0       0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    5
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_WDT_Main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           
  3403                           ;psect for function _WDT_Clearing
  3404  0002                     _WDT_Clearing:	
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _WDT_Clearing: []
  3408  0002  0064               	clrwdt	;# 
  3409  0003  0008               	return
  3410  0004                     __end_of_WDT_Clearing:	
  3411                           
  3412                           	psect	text5
  3413  0CDE                     __ptext5:	
  3414 ;; *************** function _Switch_Main *****************
  3415 ;; Defined at:
  3416 ;;		line 72 in file "../src/Switch_B1.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  error           1   22[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3430 ;;      Params:         0       0       0       0       0       0       0       0
  3431 ;;      Locals:         0       1       0       0       0       0       0       0
  3432 ;;      Temps:          0       1       0       0       0       0       0       0
  3433 ;;      Totals:         0       2       0       0       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:   10
  3437 ;; This function calls:
  3438 ;;		_TouchPower
  3439 ;;		_getMain_All_Error_Status
  3440 ;;		_setMain_Exception
  3441 ;;		_setSw_Main
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _Switch_Main
  3449  0CDE                     _Switch_Main:	
  3450                           
  3451                           ;Switch_B1.c: 73: char error = getMain_All_Error_Status(0);
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _Switch_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3455  0CDE  3000               	movlw	0
  3456  0CDF  318B  2311  318C   	fcall	_getMain_All_Error_Status
  3457  0CE2  0020               	movlb	0	; select bank0
  3458  0CE3  00B5               	movwf	??_Switch_Main
  3459  0CE4  0835               	movf	??_Switch_Main,w
  3460  0CE5  00B6               	movwf	Switch_Main@error
  3461                           
  3462                           ;Switch_B1.c: 74: if (error != 0) {
  3463  0CE6  0836               	movf	Switch_Main@error,w
  3464  0CE7  1903               	btfsc	3,2
  3465  0CE8  2CED               	goto	l1222
  3466                           
  3467                           ;Switch_B1.c: 75: if (SwDetect.Error == 0) {
  3468  0CE9  186C               	btfsc	_SwDetect,0
  3469  0CEA  2CF4               	goto	l4071
  3470                           
  3471                           ;Switch_B1.c: 76: SwDetect.Error = 1;
  3472  0CEB  146C               	bsf	_SwDetect,0
  3473  0CEC  2CF0               	goto	L1
  3474  0CED                     l1222:	
  3475                           ;Switch_B1.c: 80: }
  3476                           ;Switch_B1.c: 81: } else {
  3477                           
  3478                           ;Switch_B1.c: 78: setMain_Exception(error);
  3479                           
  3480                           
  3481                           ;Switch_B1.c: 82: if (SwDetect.Error == 1) {
  3482  0CED  1C6C               	btfss	_SwDetect,0
  3483  0CEE  2CF4               	goto	l4071
  3484                           
  3485                           ;Switch_B1.c: 83: SwDetect.Error = 0;
  3486  0CEF  106C               	bcf	_SwDetect,0
  3487  0CF0                     L1:	
  3488                           
  3489                           ;Switch_B1.c: 85: setMain_Exception(error);
  3490  0CF0  0836               	movf	Switch_Main@error,w
  3491  0CF1  3185  2559  318C   	fcall	_setMain_Exception
  3492  0CF4                     l4071:	
  3493                           
  3494                           ;Switch_B1.c: 87: }
  3495                           ;Switch_B1.c: 88: }
  3496                           ;Switch_B1.c: 91: setSw_Main(1);
  3497  0CF4  3001               	movlw	1
  3498  0CF5  3180  2040  318C   	fcall	_setSw_Main
  3499                           
  3500                           ;Switch_B1.c: 103: TouchPower();
  3501  0CF8  318C  247B         	fcall	_TouchPower
  3502  0CFA  0008               	return
  3503  0CFB                     __end_of_Switch_Main:	
  3504                           
  3505                           	psect	text6
  3506  0040                     __ptext6:	
  3507 ;; *************** function _setSw_Main *****************
  3508 ;; Defined at:
  3509 ;;		line 137 in file "../src/Switch_B1.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  sw              1    wreg     unsigned char 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  sw              1   18[BANK0 ] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;		None               void
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3523 ;;      Params:         0       0       0       0       0       0       0       0
  3524 ;;      Locals:         0       1       0       0       0       0       0       0
  3525 ;;      Temps:          0       2       0       0       0       0       0       0
  3526 ;;      Totals:         0       3       0       0       0       0       0       0
  3527 ;;Total ram usage:        3 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    8
  3530 ;; This function calls:
  3531 ;;		_SwPointSelect
  3532 ;;		_getSw_KeyStatus
  3533 ;;		_setBuz
  3534 ;;		_setDimmerLights_AdjControl
  3535 ;;		_setDimmerLights_SwOff
  3536 ;;		_setDimmerLights_SwOn
  3537 ;; This function is called by:
  3538 ;;		_Switch_Main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           
  3543                           ;psect for function _setSw_Main
  3544  0040                     _setSw_Main:	
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3548                           ;setSw_Main@sw stored from wreg
  3549  0040  0020               	movlb	0	; select bank0
  3550  0041  00B2               	movwf	setSw_Main@sw
  3551                           
  3552                           ;Switch_B1.c: 138: SwPointSelect(sw);
  3553  0042  0832               	movf	setSw_Main@sw,w
  3554  0043  318B  2393  3180   	fcall	_SwPointSelect
  3555                           
  3556                           ;Switch_B1.c: 139: if (Sw->Enable == 1) {
  3557  0046  0020               	movlb	0	; select bank0
  3558  0047  086B               	movf	_Sw,w
  3559  0048  0086               	movwf	6
  3560  0049  0187               	clrf	7
  3561  004A  1C01               	btfss	1,0
  3562  004B  296F               	goto	l1232
  3563                           
  3564                           ;Switch_B1.c: 140: if (SwDetect.Error == 0) {
  3565  004C  186C               	btfsc	_SwDetect,0
  3566  004D  2866               	goto	l3787
  3567                           
  3568                           ;Switch_B1.c: 141: Sw->Detect = 0;
  3569  004E  0A6B               	incf	_Sw,w
  3570  004F  0086               	movwf	6
  3571  0050  0187               	clrf	7
  3572  0051  1081               	bcf	1,1
  3573                           
  3574                           ;Switch_B1.c: 142: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  3575  0052  0832               	movf	setSw_Main@sw,w
  3576  0053  318C  2443  3180   	fcall	_getSw_KeyStatus
  3577  0056  3A01               	xorlw	1
  3578  0057  3000               	movlw	0
  3579  0058  1903               	skipnz
  3580  0059  3001               	movlw	1
  3581  005A  0020               	movlb	0	; select bank0
  3582  005B  00B0               	movwf	??_setSw_Main
  3583  005C  086B               	movf	_Sw,w
  3584  005D  0086               	movwf	6
  3585  005E  0187               	clrf	7
  3586  005F  0DB0               	rlf	??_setSw_Main,f
  3587  0060  0801               	movf	1,w
  3588  0061  0630               	xorwf	??_setSw_Main,w
  3589  0062  39FD               	andlw	-3
  3590  0063  0630               	xorwf	??_setSw_Main,w
  3591  0064  0081               	movwf	1
  3592                           
  3593                           ;Switch_B1.c: 143: } else {
  3594  0065  2877               	goto	l1234
  3595  0066                     l3787:	
  3596                           
  3597                           ;Switch_B1.c: 144: if (Sw->Detect == 0) {
  3598  0066  0A6B               	incf	_Sw,w
  3599  0067  0086               	movwf	6
  3600  0068  0187               	clrf	7
  3601  0069  1881               	btfsc	1,1
  3602  006A  2877               	goto	l1234
  3603                           
  3604                           ;Switch_B1.c: 145: Sw->Detect = 1;
  3605  006B  0A6B               	incf	_Sw,w
  3606  006C  0086               	movwf	6
  3607  006D  0187               	clrf	7
  3608  006E  1481               	bsf	1,1
  3609                           
  3610                           ;Switch_B1.c: 146: Sw->Touch = 0;
  3611  006F  086B               	movf	_Sw,w
  3612  0070  0086               	movwf	6
  3613  0071  0187               	clrf	7
  3614  0072  1081               	bcf	1,1
  3615                           
  3616                           ;Switch_B1.c: 147: Sw->Debounce = 1;
  3617  0073  086B               	movf	_Sw,w
  3618  0074  0086               	movwf	6
  3619  0075  0187               	clrf	7
  3620  0076  1501               	bsf	1,2
  3621  0077                     l1234:	
  3622                           
  3623                           ;Switch_B1.c: 148: }
  3624                           ;Switch_B1.c: 149: }
  3625                           ;Switch_B1.c: 152: if (Sw->Touch == 1) {
  3626  0077  086B               	movf	_Sw,w
  3627  0078  0086               	movwf	6
  3628  0079  0187               	clrf	7
  3629  007A  1C81               	btfss	1,1
  3630  007B  292A               	goto	l3833
  3631                           
  3632                           ;Switch_B1.c: 153: if (Sw->Debounce == 0) {
  3633  007C  086B               	movf	_Sw,w
  3634  007D  0086               	movwf	6
  3635  007E  0187               	clrf	7
  3636  007F  1901               	btfsc	1,2
  3637  0080  289E               	goto	l3803
  3638                           
  3639                           ;Switch_B1.c: 154: Sw->DebounceTime++;
  3640  0081  3001               	movlw	1
  3641  0082  00B0               	movwf	??_setSw_Main
  3642  0083  086B               	movf	_Sw,w
  3643  0084  3E02               	addlw	2
  3644  0085  0086               	movwf	6
  3645  0086  0187               	clrf	7
  3646  0087  0830               	movf	??_setSw_Main,w
  3647  0088  0781               	addwf	1,f
  3648                           
  3649                           ;Switch_B1.c: 155: if (Sw->DebounceTime >= 5) {
  3650  0089  086B               	movf	_Sw,w
  3651  008A  3E02               	addlw	2
  3652  008B  0086               	movwf	6
  3653  008C  0187               	clrf	7
  3654  008D  3005               	movlw	5
  3655  008E  0201               	subwf	1,w
  3656  008F  1C03               	skipc
  3657  0090  0008               	return
  3658                           
  3659                           ;Switch_B1.c: 156: Sw->DebounceTime = 0;
  3660  0091  086B               	movf	_Sw,w
  3661  0092  3E02               	addlw	2
  3662  0093  0086               	movwf	6
  3663  0094  0187               	clrf	7
  3664  0095  0181               	clrf	1
  3665                           
  3666                           ;Switch_B1.c: 157: Sw->Debounce = 1;
  3667  0096  086B               	movf	_Sw,w
  3668  0097  0086               	movwf	6
  3669  0098  0187               	clrf	7
  3670  0099  1501               	bsf	1,2
  3671                           
  3672                           ;Switch_B1.c: 160: setDimmerLights_SwOn(sw);
  3673  009A  0832               	movf	setSw_Main@sw,w
  3674  009B  3187  27C2         	fcall	_setDimmerLights_SwOn
  3675                           
  3676                           ;Switch_B1.c: 162: }
  3677                           ;Switch_B1.c: 163: } else {
  3678  009D  0008               	return
  3679  009E                     l3803:	
  3680                           
  3681                           ;Switch_B1.c: 164: if (Sw->Hold1 == 0) {
  3682  009E  0020               	movlb	0	; select bank0
  3683  009F  086B               	movf	_Sw,w
  3684  00A0  0086               	movwf	6
  3685  00A1  0187               	clrf	7
  3686  00A2  1981               	btfsc	1,3
  3687  00A3  28CB               	goto	l3813
  3688                           
  3689                           ;Switch_B1.c: 165: Sw->Hold1Time++;
  3690  00A4  086B               	movf	_Sw,w
  3691  00A5  3E03               	addlw	3
  3692  00A6  0086               	movwf	6
  3693  00A7  0187               	clrf	7
  3694  00A8  3001               	movlw	1
  3695  00A9  0781               	addwf	1,f
  3696  00AA  3141               	addfsr 1,1
  3697  00AB  1803               	skipnc
  3698  00AC  0A81               	incf	1,f
  3699                           
  3700                           ;Switch_B1.c: 166: if (Sw->Hold1Time >= 150) {
  3701  00AD  086B               	movf	_Sw,w
  3702  00AE  3E03               	addlw	3
  3703  00AF  0086               	movwf	6
  3704  00B0  0187               	clrf	7
  3705  00B1  3F40               	moviw [0]fsr1
  3706  00B2  00B0               	movwf	??_setSw_Main
  3707  00B3  3F41               	moviw [1]fsr1
  3708  00B4  00B1               	movwf	??_setSw_Main+1
  3709  00B5  3000               	movlw	0
  3710  00B6  0231               	subwf	??_setSw_Main+1,w
  3711  00B7  3096               	movlw	150
  3712  00B8  1903               	skipnz
  3713  00B9  0230               	subwf	??_setSw_Main,w
  3714  00BA  1C03               	skipc
  3715  00BB  0008               	return
  3716                           
  3717                           ;Switch_B1.c: 167: Sw->Hold1Time = 0;
  3718  00BC  086B               	movf	_Sw,w
  3719  00BD  3E03               	addlw	3
  3720  00BE  0086               	movwf	6
  3721  00BF  0187               	clrf	7
  3722  00C0  3000               	movlw	0
  3723  00C1  3FC0               	movwi [0]fsr1
  3724  00C2  3FC1               	movwi [1]fsr1
  3725                           
  3726                           ;Switch_B1.c: 170: Sw->Hold1 = 1;
  3727  00C3  086B               	movf	_Sw,w
  3728  00C4  0086               	movwf	6
  3729  00C5  0187               	clrf	7
  3730  00C6  1581               	bsf	1,3
  3731                           
  3732                           ;Switch_B1.c: 171: setDimmerLights_AdjControl(sw);
  3733  00C7  0832               	movf	setSw_Main@sw,w
  3734  00C8  318E  2685         	fcall	_setDimmerLights_AdjControl
  3735                           
  3736                           ;Switch_B1.c: 174: }
  3737                           ;Switch_B1.c: 175: } else {
  3738  00CA  0008               	return
  3739  00CB                     l3813:	
  3740                           
  3741                           ;Switch_B1.c: 176: if (Sw->Hold2 == 0) {
  3742  00CB  0020               	movlb	0	; select bank0
  3743  00CC  086B               	movf	_Sw,w
  3744  00CD  0086               	movwf	6
  3745  00CE  0187               	clrf	7
  3746  00CF  1A01               	btfsc	1,4
  3747  00D0  2900               	goto	l3825
  3748                           
  3749                           ;Switch_B1.c: 177: Sw->Hold2Time++;
  3750  00D1  086B               	movf	_Sw,w
  3751  00D2  3E05               	addlw	5
  3752  00D3  0086               	movwf	6
  3753  00D4  0187               	clrf	7
  3754  00D5  3001               	movlw	1
  3755  00D6  0781               	addwf	1,f
  3756  00D7  3141               	addfsr 1,1
  3757  00D8  1803               	skipnc
  3758  00D9  0A81               	incf	1,f
  3759                           
  3760                           ;Switch_B1.c: 178: if (Sw->Hold2Time >= 150) {
  3761  00DA  086B               	movf	_Sw,w
  3762  00DB  3E05               	addlw	5
  3763  00DC  0086               	movwf	6
  3764  00DD  0187               	clrf	7
  3765  00DE  3F40               	moviw [0]fsr1
  3766  00DF  00B0               	movwf	??_setSw_Main
  3767  00E0  3F41               	moviw [1]fsr1
  3768  00E1  00B1               	movwf	??_setSw_Main+1
  3769  00E2  3000               	movlw	0
  3770  00E3  0231               	subwf	??_setSw_Main+1,w
  3771  00E4  3096               	movlw	150
  3772  00E5  1903               	skipnz
  3773  00E6  0230               	subwf	??_setSw_Main,w
  3774  00E7  1C03               	skipc
  3775  00E8  0008               	return
  3776                           
  3777                           ;Switch_B1.c: 179: Sw->Hold2Time = 0;
  3778  00E9  086B               	movf	_Sw,w
  3779  00EA  3E05               	addlw	5
  3780  00EB  0086               	movwf	6
  3781  00EC  0187               	clrf	7
  3782  00ED  3000               	movlw	0
  3783  00EE  3FC0               	movwi [0]fsr1
  3784  00EF  3FC1               	movwi [1]fsr1
  3785                           
  3786                           ;Switch_B1.c: 180: Sw->Hold2 = 1;
  3787  00F0  086B               	movf	_Sw,w
  3788  00F1  0086               	movwf	6
  3789  00F2  0187               	clrf	7
  3790  00F3  1601               	bsf	1,4
  3791                           
  3792                           ;Switch_B1.c: 185: if (myMain.First == 1) {
  3793  00F4  0021               	movlb	1	; select bank1
  3794  00F5  1EA0               	btfss	_myMain^(0+128),5
  3795  00F6  0008               	return
  3796                           
  3797                           ;Switch_B1.c: 186: setBuz(2, 100);
  3798  00F7  3064               	movlw	100
  3799  00F8  0020               	movlb	0	; select bank0
  3800  00F9  00A9               	movwf	setBuz@time
  3801  00FA  3000               	movlw	0
  3802  00FB  00AA               	movwf	setBuz@time+1
  3803  00FC  3002               	movlw	2
  3804  00FD  3187  273A         	fcall	_setBuz
  3805                           
  3806                           ;Switch_B1.c: 187: }
  3807                           ;Switch_B1.c: 189: }
  3808                           ;Switch_B1.c: 190: } else {
  3809  00FF  0008               	return
  3810  0100                     l3825:	
  3811                           
  3812                           ;Switch_B1.c: 191: if (Sw->Hold3 == 0) {
  3813  0100  0020               	movlb	0	; select bank0
  3814  0101  086B               	movf	_Sw,w
  3815  0102  0086               	movwf	6
  3816  0103  0187               	clrf	7
  3817  0104  1A81               	btfsc	1,5
  3818  0105  0008               	return
  3819                           
  3820                           ;Switch_B1.c: 192: Sw->Hold3Time++;
  3821  0106  086B               	movf	_Sw,w
  3822  0107  3E07               	addlw	7
  3823  0108  0086               	movwf	6
  3824  0109  0187               	clrf	7
  3825  010A  3001               	movlw	1
  3826  010B  0781               	addwf	1,f
  3827  010C  3141               	addfsr 1,1
  3828  010D  1803               	skipnc
  3829  010E  0A81               	incf	1,f
  3830                           
  3831                           ;Switch_B1.c: 193: if (Sw->Hold3Time >= 300) {
  3832  010F  086B               	movf	_Sw,w
  3833  0110  3E07               	addlw	7
  3834  0111  0086               	movwf	6
  3835  0112  0187               	clrf	7
  3836  0113  3F40               	moviw [0]fsr1
  3837  0114  00B0               	movwf	??_setSw_Main
  3838  0115  3F41               	moviw [1]fsr1
  3839  0116  00B1               	movwf	??_setSw_Main+1
  3840  0117  3001               	movlw	1
  3841  0118  0231               	subwf	??_setSw_Main+1,w
  3842  0119  302C               	movlw	44
  3843  011A  1903               	skipnz
  3844  011B  0230               	subwf	??_setSw_Main,w
  3845  011C  1C03               	skipc
  3846  011D  0008               	return
  3847                           
  3848                           ;Switch_B1.c: 194: Sw->Hold3Time = 0;
  3849  011E  086B               	movf	_Sw,w
  3850  011F  3E07               	addlw	7
  3851  0120  0086               	movwf	6
  3852  0121  0187               	clrf	7
  3853  0122  3000               	movlw	0
  3854  0123  3FC0               	movwi [0]fsr1
  3855  0124  3FC1               	movwi [1]fsr1
  3856                           
  3857                           ;Switch_B1.c: 195: Sw->Hold3 = 1;
  3858  0125  086B               	movf	_Sw,w
  3859  0126  0086               	movwf	6
  3860  0127  0187               	clrf	7
  3861  0128  1681               	bsf	1,5
  3862                           
  3863                           ;Switch_B1.c: 201: }
  3864                           ;Switch_B1.c: 202: }
  3865                           ;Switch_B1.c: 203: }
  3866                           ;Switch_B1.c: 204: }
  3867                           ;Switch_B1.c: 205: }
  3868                           ;Switch_B1.c: 206: } else {
  3869  0129  0008               	return
  3870  012A                     l3833:	
  3871                           
  3872                           ;Switch_B1.c: 207: if (Sw->Debounce == 1) {
  3873  012A  086B               	movf	_Sw,w
  3874  012B  0086               	movwf	6
  3875  012C  0187               	clrf	7
  3876  012D  1D01               	btfss	1,2
  3877  012E  0008               	return
  3878                           
  3879                           ;Switch_B1.c: 208: Sw->DebounceTime++;
  3880  012F  3001               	movlw	1
  3881  0130  00B0               	movwf	??_setSw_Main
  3882  0131  086B               	movf	_Sw,w
  3883  0132  3E02               	addlw	2
  3884  0133  0086               	movwf	6
  3885  0134  0187               	clrf	7
  3886  0135  0830               	movf	??_setSw_Main,w
  3887  0136  0781               	addwf	1,f
  3888                           
  3889                           ;Switch_B1.c: 209: if (Sw->DebounceTime >= 5) {
  3890  0137  086B               	movf	_Sw,w
  3891  0138  3E02               	addlw	2
  3892  0139  0086               	movwf	6
  3893  013A  0187               	clrf	7
  3894  013B  3005               	movlw	5
  3895  013C  0201               	subwf	1,w
  3896  013D  1C03               	skipc
  3897  013E  0008               	return
  3898                           
  3899                           ;Switch_B1.c: 210: Sw->DebounceTime = 0;
  3900  013F  086B               	movf	_Sw,w
  3901  0140  3E02               	addlw	2
  3902  0141  0086               	movwf	6
  3903  0142  0187               	clrf	7
  3904  0143  0181               	clrf	1
  3905                           
  3906                           ;Switch_B1.c: 211: Sw->Debounce = 0;
  3907  0144  086B               	movf	_Sw,w
  3908  0145  0086               	movwf	6
  3909  0146  0187               	clrf	7
  3910  0147  1101               	bcf	1,2
  3911                           
  3912                           ;Switch_B1.c: 212: Sw->Hold1Time = 0;
  3913  0148  086B               	movf	_Sw,w
  3914  0149  3E03               	addlw	3
  3915  014A  0086               	movwf	6
  3916  014B  0187               	clrf	7
  3917  014C  3000               	movlw	0
  3918  014D  3FC0               	movwi [0]fsr1
  3919  014E  3FC1               	movwi [1]fsr1
  3920                           
  3921                           ;Switch_B1.c: 213: Sw->Hold1 = 0;
  3922  014F  086B               	movf	_Sw,w
  3923  0150  0086               	movwf	6
  3924  0151  0187               	clrf	7
  3925  0152  1181               	bcf	1,3
  3926                           
  3927                           ;Switch_B1.c: 214: Sw->Hold2Time = 0;
  3928  0153  086B               	movf	_Sw,w
  3929  0154  3E05               	addlw	5
  3930  0155  0086               	movwf	6
  3931  0156  0187               	clrf	7
  3932  0157  3000               	movlw	0
  3933  0158  3FC0               	movwi [0]fsr1
  3934  0159  3FC1               	movwi [1]fsr1
  3935                           
  3936                           ;Switch_B1.c: 215: Sw->Hold2 = 0;
  3937  015A  086B               	movf	_Sw,w
  3938  015B  0086               	movwf	6
  3939  015C  0187               	clrf	7
  3940  015D  1201               	bcf	1,4
  3941                           
  3942                           ;Switch_B1.c: 216: Sw->Hold3Time = 0;
  3943  015E  086B               	movf	_Sw,w
  3944  015F  3E07               	addlw	7
  3945  0160  0086               	movwf	6
  3946  0161  0187               	clrf	7
  3947  0162  3000               	movlw	0
  3948  0163  3FC0               	movwi [0]fsr1
  3949  0164  3FC1               	movwi [1]fsr1
  3950                           
  3951                           ;Switch_B1.c: 217: Sw->Hold3 = 0;
  3952  0165  086B               	movf	_Sw,w
  3953  0166  0086               	movwf	6
  3954  0167  0187               	clrf	7
  3955  0168  1281               	bcf	1,5
  3956                           
  3957                           ;Switch_B1.c: 219: if (SwDetect.Error == 0) {
  3958  0169  186C               	btfsc	_SwDetect,0
  3959  016A  0008               	return
  3960                           
  3961                           ;Switch_B1.c: 220: setDimmerLights_SwOff(sw);
  3962  016B  0832               	movf	setSw_Main@sw,w
  3963  016C  3187  277F         	fcall	_setDimmerLights_SwOff
  3964                           
  3965                           ;Switch_B1.c: 221: }
  3966                           ;Switch_B1.c: 226: }
  3967                           ;Switch_B1.c: 227: }
  3968                           ;Switch_B1.c: 228: }
  3969                           ;Switch_B1.c: 229: } else {
  3970  016E  0008               	return
  3971  016F                     l1232:	
  3972                           
  3973                           ;Switch_B1.c: 230: if (myMain.PowerON == 1) {
  3974  016F  0021               	movlb	1	; select bank1
  3975  0170  1C20               	btfss	_myMain^(0+128),0
  3976  0171  0008               	return
  3977                           
  3978                           ;Switch_B1.c: 231: Sw->Enable = 1;
  3979  0172  0020               	movlb	0	; select bank0
  3980  0173  086B               	movf	_Sw,w
  3981  0174  0086               	movwf	6
  3982  0175  0187               	clrf	7
  3983  0176  1401               	bsf	1,0
  3984  0177  0008               	return
  3985  0178                     __end_of_setSw_Main:	
  3986                           
  3987                           	psect	text7
  3988  07C2                     __ptext7:	
  3989 ;; *************** function _setDimmerLights_SwOn *****************
  3990 ;; Defined at:
  3991 ;;		line 513 in file "../src/Dimmer_B1.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  sw              1    wreg     unsigned char 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  sw              1   15[BANK0 ] unsigned char 
  3996 ;;  idle            1   14[BANK0 ] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4006 ;;      Params:         0       0       0       0       0       0       0       0
  4007 ;;      Locals:         0       2       0       0       0       0       0       0
  4008 ;;      Temps:          0       1       0       0       0       0       0       0
  4009 ;;      Totals:         0       3       0       0       0       0       0       0
  4010 ;;Total ram usage:        3 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    7
  4013 ;; This function calls:
  4014 ;;		_DimmerLightsPointSelect
  4015 ;;		_getAll_DimmerLights_AdjGO
  4016 ;;		_setBuz
  4017 ;;		_setDimmerLights_Trigger
  4018 ;; This function is called by:
  4019 ;;		_setSw_Main
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function _setDimmerLights_SwOn
  4025  07C2                     _setDimmerLights_SwOn:	
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4029                           ;setDimmerLights_SwOn@sw stored from wreg
  4030  07C2  0020               	movlb	0	; select bank0
  4031  07C3  00AF               	movwf	setDimmerLights_SwOn@sw
  4032                           
  4033                           ;Dimmer_B1.c: 514: DimmerLightsPointSelect(sw);
  4034  07C4  082F               	movf	setDimmerLights_SwOn@sw,w
  4035  07C5  318B  2372  3187   	fcall	_DimmerLightsPointSelect
  4036                           
  4037                           ;Dimmer_B1.c: 515: char idle = 0;
  4038  07C8  0020               	movlb	0	; select bank0
  4039  07C9  01AE               	clrf	setDimmerLights_SwOn@idle
  4040                           
  4041                           ;Dimmer_B1.c: 517: idle = getAll_DimmerLights_AdjGO() == 1 ? 1 : 0;
  4042  07CA  318B  235D  3187   	fcall	_getAll_DimmerLights_AdjGO
  4043  07CD  3A01               	xorlw	1
  4044  07CE  3000               	movlw	0
  4045  07CF  1903               	skipnz
  4046  07D0  3001               	movlw	1
  4047  07D1  0020               	movlb	0	; select bank0
  4048  07D2  00AD               	movwf	??_setDimmerLights_SwOn
  4049  07D3  082D               	movf	??_setDimmerLights_SwOn,w
  4050  07D4  00AE               	movwf	setDimmerLights_SwOn@idle
  4051                           
  4052                           ;Dimmer_B1.c: 519: if (idle == 0) {
  4053  07D5  08AE               	movf	setDimmerLights_SwOn@idle,f
  4054  07D6  1D03               	skipz
  4055  07D7  0008               	return
  4056                           
  4057                           ;Dimmer_B1.c: 520: DimmerLights->SwFlag = 1;
  4058  07D8  087A               	movf	_DimmerLights,w
  4059  07D9  3E09               	addlw	9
  4060  07DA  0086               	movwf	6
  4061  07DB  0187               	clrf	7
  4062  07DC  1701               	bsf	1,6
  4063                           
  4064                           ;Dimmer_B1.c: 521: setBuz(1, 100);
  4065  07DD  3064               	movlw	100
  4066  07DE  00A9               	movwf	setBuz@time
  4067  07DF  3000               	movlw	0
  4068  07E0  00AA               	movwf	setBuz@time+1
  4069  07E1  3001               	movlw	1
  4070  07E2  3187  273A  3187   	fcall	_setBuz
  4071                           
  4072                           ;Dimmer_B1.c: 522: if (DimmerLights->Status == 0) {
  4073  07E5  087A               	movf	_DimmerLights,w
  4074  07E6  0086               	movwf	6
  4075  07E7  0187               	clrf	7
  4076  07E8  1A81               	btfsc	1,5
  4077  07E9  2FFA               	goto	l3209
  4078                           
  4079                           ;Dimmer_B1.c: 523: DimmerLights->Status = 1;
  4080  07EA  087A               	movf	_DimmerLights,w
  4081  07EB  0086               	movwf	6
  4082  07EC  0187               	clrf	7
  4083  07ED  1681               	bsf	1,5
  4084                           
  4085                           ;Dimmer_B1.c: 524: DimmerLights->Loop = 1;
  4086  07EE  087A               	movf	_DimmerLights,w
  4087  07EF  3E09               	addlw	9
  4088  07F0  0086               	movwf	6
  4089  07F1  0187               	clrf	7
  4090  07F2  1481               	bsf	1,1
  4091                           
  4092                           ;Dimmer_B1.c: 525: setDimmerLights_Trigger(sw, 1);
  4093  07F3  0020               	movlb	0	; select bank0
  4094  07F4  01A2               	clrf	setDimmerLights_Trigger@command
  4095  07F5  0AA2               	incf	setDimmerLights_Trigger@command,f
  4096  07F6  082F               	movf	setDimmerLights_SwOn@sw,w
  4097  07F7  318C  24C2         	fcall	_setDimmerLights_Trigger
  4098                           
  4099                           ;Dimmer_B1.c: 526: ;;
  4100                           ;Dimmer_B1.c: 527: ;;
  4101                           ;Dimmer_B1.c: 528: } else {
  4102  07F9  0008               	return
  4103  07FA                     l3209:	
  4104                           
  4105                           ;Dimmer_B1.c: 529: DimmerLights->Status = 0;
  4106  07FA  087A               	movf	_DimmerLights,w
  4107  07FB  0086               	movwf	6
  4108  07FC  0187               	clrf	7
  4109  07FD  1281               	bcf	1,5
  4110  07FE  0008               	return
  4111  07FF                     __end_of_setDimmerLights_SwOn:	
  4112                           
  4113                           	psect	text8
  4114  0E85                     __ptext8:	
  4115 ;; *************** function _setDimmerLights_AdjControl *****************
  4116 ;; Defined at:
  4117 ;;		line 560 in file "../src/Dimmer_B1.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  sw              1    wreg     unsigned char 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  sw              1    8[BANK0 ] unsigned char 
  4122 ;;  idle            1    6[BANK0 ] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;		None               void
  4125 ;; Registers used:
  4126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4132 ;;      Params:         0       0       0       0       0       0       0       0
  4133 ;;      Locals:         0       3       0       0       0       0       0       0
  4134 ;;      Temps:          0       1       0       0       0       0       0       0
  4135 ;;      Totals:         0       4       0       0       0       0       0       0
  4136 ;;Total ram usage:        4 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    7
  4139 ;; This function calls:
  4140 ;;		_DimmerLightsPointSelect
  4141 ;;		_getAll_DimmerLights_AdjGO
  4142 ;;		_setDimmerLights_TriggerAdj
  4143 ;; This function is called by:
  4144 ;;		_setSw_Main
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _setDimmerLights_AdjControl
  4150  0E85                     _setDimmerLights_AdjControl:	
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _setDimmerLights_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4154                           ;setDimmerLights_AdjControl@sw stored from wreg
  4155  0E85  0020               	movlb	0	; select bank0
  4156  0E86  00A8               	movwf	setDimmerLights_AdjControl@sw
  4157                           
  4158                           ;Dimmer_B1.c: 561: DimmerLightsPointSelect(sw);
  4159  0E87  0828               	movf	setDimmerLights_AdjControl@sw,w
  4160  0E88  318B  2372  318E   	fcall	_DimmerLightsPointSelect
  4161                           
  4162                           ;Dimmer_B1.c: 562: char idle = 0;
  4163  0E8B  0020               	movlb	0	; select bank0
  4164  0E8C  01A6               	clrf	setDimmerLights_AdjControl@idle
  4165                           
  4166                           ;Dimmer_B1.c: 564: idle = getAll_DimmerLights_AdjGO() == 1 && Dimmer.LoadOK == 1 ? 1 : 0
      +                          ;
  4167  0E8D  01A7               	clrf	_setDimmerLights_AdjControl$1571
  4168  0E8E  318B  235D  318E   	fcall	_getAll_DimmerLights_AdjGO
  4169  0E91  3A01               	xorlw	1
  4170  0E92  1D03               	skipz
  4171  0E93  2E99               	goto	l3223
  4172  0E94  0020               	movlb	0	; select bank0
  4173  0E95  1CE2               	btfss	_Dimmer,1
  4174  0E96  2E99               	goto	l3223
  4175  0E97  01A7               	clrf	_setDimmerLights_AdjControl$1571
  4176  0E98  0AA7               	incf	_setDimmerLights_AdjControl$1571,f
  4177  0E99                     l3223:	
  4178  0E99  0020               	movlb	0	; select bank0
  4179  0E9A  0827               	movf	_setDimmerLights_AdjControl$1571,w
  4180  0E9B  00A5               	movwf	??_setDimmerLights_AdjControl
  4181  0E9C  0825               	movf	??_setDimmerLights_AdjControl,w
  4182  0E9D  00A6               	movwf	setDimmerLights_AdjControl@idle
  4183                           
  4184                           ;Dimmer_B1.c: 566: if (idle == 0) {
  4185  0E9E  08A6               	movf	setDimmerLights_AdjControl@idle,f
  4186  0E9F  1D03               	skipz
  4187  0EA0  0008               	return
  4188                           
  4189                           ;Dimmer_B1.c: 567: if (DimmerLights->SwFlag == 1) {
  4190  0EA1  087A               	movf	_DimmerLights,w
  4191  0EA2  3E09               	addlw	9
  4192  0EA3  0086               	movwf	6
  4193  0EA4  0187               	clrf	7
  4194  0EA5  1F01               	btfss	1,6
  4195  0EA6  0008               	return
  4196                           
  4197                           ;Dimmer_B1.c: 568: DimmerLights->SwAdj = 1;
  4198  0EA7  087A               	movf	_DimmerLights,w
  4199  0EA8  3E09               	addlw	9
  4200  0EA9  0086               	movwf	6
  4201  0EAA  0187               	clrf	7
  4202  0EAB  1781               	bsf	1,7
  4203                           
  4204                           ;Dimmer_B1.c: 569: DimmerLights->Status = 1;
  4205  0EAC  087A               	movf	_DimmerLights,w
  4206  0EAD  0086               	movwf	6
  4207  0EAE  0187               	clrf	7
  4208  0EAF  1681               	bsf	1,5
  4209                           
  4210                           ;Dimmer_B1.c: 570: setDimmerLights_TriggerAdj(sw, 1);
  4211  0EB0  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4212  0EB1  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4213  0EB2  0828               	movf	setDimmerLights_AdjControl@sw,w
  4214  0EB3  318C  24FB         	fcall	_setDimmerLights_TriggerAdj
  4215  0EB5  0008               	return
  4216  0EB6                     __end_of_setDimmerLights_AdjControl:	
  4217                           
  4218                           	psect	text9
  4219  0B5D                     __ptext9:	
  4220 ;; *************** function _getAll_DimmerLights_AdjGO *****************
  4221 ;; Defined at:
  4222 ;;		line 498 in file "../src/Dimmer_B1.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  adjgo           1    0[BANK0 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4236 ;;      Params:         0       0       0       0       0       0       0       0
  4237 ;;      Locals:         0       1       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0
  4239 ;;      Totals:         0       1       0       0       0       0       0       0
  4240 ;;Total ram usage:        1 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    5
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_setDimmerLights_SwOn
  4247 ;;		_setDimmerLights_AdjControl
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _getAll_DimmerLights_AdjGO
  4253  0B5D                     _getAll_DimmerLights_AdjGO:	
  4254                           
  4255                           ;Dimmer_B1.c: 499: char adjgo = 0;
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _getAll_DimmerLights_AdjGO: [wreg+status,2]
  4259  0B5D  0020               	movlb	0	; select bank0
  4260  0B5E  01A0               	clrf	getAll_DimmerLights_AdjGO@adjgo
  4261                           
  4262                           ;Dimmer_B1.c: 507: adjgo = DimmerLights1.AdjGo == 1;
  4263  0B5F  3000               	movlw	0
  4264  0B60  0021               	movlb	1	; select bank1
  4265  0B61  19B8               	btfsc	(_DimmerLights1^(0+128)+8),3
  4266  0B62  3001               	movlw	1
  4267  0B63  0020               	movlb	0	; select bank0
  4268  0B64  00A0               	movwf	getAll_DimmerLights_AdjGO@adjgo
  4269                           
  4270                           ;Dimmer_B1.c: 509: return adjgo;
  4271  0B65  0820               	movf	getAll_DimmerLights_AdjGO@adjgo,w
  4272  0B66  0008               	return
  4273  0B67                     __end_of_getAll_DimmerLights_AdjGO:	
  4274                           
  4275                           	psect	text10
  4276  0C43                     __ptext10:	
  4277 ;; *************** function _getSw_KeyStatus *****************
  4278 ;; Defined at:
  4279 ;;		line 237 in file "../src/Switch_B1.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  sw              1    wreg     unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  sw              1    0[COMMON] unsigned char 
  4284 ;;  status          1    1[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      unsigned char 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4294 ;;      Params:         0       0       0       0       0       0       0       0
  4295 ;;      Locals:         0       2       0       0       0       0       0       0
  4296 ;;      Temps:          0       1       0       0       0       0       0       0
  4297 ;;      Totals:         0       3       0       0       0       0       0       0
  4298 ;;Total ram usage:        3 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    5
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_setSw_Main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _getSw_KeyStatus
  4310  0C43                     _getSw_KeyStatus:	
  4311                           
  4312                           ;Switch_B1.c: 238: char status = 0;
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  4316  0C43  0020               	movlb	0	; select bank0
  4317  0C44  01A1               	clrf	getSw_KeyStatus@status
  4318                           
  4319                           ;Switch_B1.c: 258: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  4320  0C45  01A2               	clrf	_getSw_KeyStatus$4283
  4321  0C46  0AA2               	incf	_getSw_KeyStatus$4283,f
  4322  0C47  1F0C               	btfss	12,6	;volatile
  4323  0C48  1A0C               	btfsc	12,4	;volatile
  4324  0C49  2C4E               	goto	l3383
  4325  0C4A  1C0C               	btfss	12,0	;volatile
  4326  0C4B  1B8C               	btfsc	12,7	;volatile
  4327  0C4C  2C4E               	goto	l3383
  4328  0C4D  01A2               	clrf	_getSw_KeyStatus$4283
  4329  0C4E                     l3383:	
  4330  0C4E  0822               	movf	_getSw_KeyStatus$4283,w
  4331  0C4F  00A0               	movwf	??_getSw_KeyStatus
  4332  0C50  0820               	movf	??_getSw_KeyStatus,w
  4333  0C51  00A1               	movwf	getSw_KeyStatus@status
  4334                           
  4335                           ;Switch_B1.c: 261: return status;
  4336  0C52  0821               	movf	getSw_KeyStatus@status,w
  4337  0C53  0008               	return
  4338  0C54                     __end_of_getSw_KeyStatus:	
  4339                           
  4340                           	psect	text11
  4341  0B93                     __ptext11:	
  4342 ;; *************** function _SwPointSelect *****************
  4343 ;; Defined at:
  4344 ;;		line 25 in file "../src/Switch_B1.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  sw              1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  sw              1    1[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;		None               void
  4351 ;; Registers used:
  4352 ;;		wreg
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4358 ;;      Params:         0       0       0       0       0       0       0       0
  4359 ;;      Locals:         0       1       0       0       0       0       0       0
  4360 ;;      Temps:          0       1       0       0       0       0       0       0
  4361 ;;      Totals:         0       2       0       0       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    5
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_setSw_Main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _SwPointSelect
  4374  0B93                     _SwPointSelect:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _SwPointSelect: [wreg]
  4378                           ;SwPointSelect@sw stored from wreg
  4379  0B93  0020               	movlb	0	; select bank0
  4380  0B94  00A1               	movwf	SwPointSelect@sw
  4381                           
  4382                           ;Switch_B1.c: 28: if (sw == 1) {
  4383  0B95  0821               	movf	SwPointSelect@sw,w
  4384  0B96  3A01               	xorlw	1
  4385  0B97  1D03               	skipz
  4386  0B98  0008               	return
  4387                           
  4388                           ;Switch_B1.c: 29: Sw = &Sw1;
  4389  0B99  30BF               	movlw	_Sw1& (0+255)
  4390  0B9A  00A0               	movwf	??_SwPointSelect
  4391  0B9B  0820               	movf	??_SwPointSelect,w
  4392  0B9C  00EB               	movwf	_Sw
  4393  0B9D  0008               	return
  4394  0B9E                     __end_of_SwPointSelect:	
  4395                           
  4396                           	psect	text12
  4397  0559                     __ptext12:	
  4398 ;; *************** function _setMain_Exception *****************
  4399 ;; Defined at:
  4400 ;;		line 276 in file "../src/Main_B1.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  command         1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  command         1   20[BANK0 ] unsigned char 
  4405 ;;  status          1   19[BANK0 ] unsigned char 
  4406 ;;  buz             1   16[BANK0 ] unsigned char 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;		None               void
  4409 ;; Registers used:
  4410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4416 ;;      Params:         0       0       0       0       0       0       0       0
  4417 ;;      Locals:         0       5       0       0       0       0       0       0
  4418 ;;      Temps:          0       2       0       0       0       0       0       0
  4419 ;;      Totals:         0       7       0       0       0       0       0       0
  4420 ;;Total ram usage:        7 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    9
  4423 ;; This function calls:
  4424 ;;		_getDimmerLights_Line
  4425 ;;		_getMain_LightsStatus
  4426 ;;		_setBuz
  4427 ;;		_setDimmerLights_ErrorClose
  4428 ;;		_setLED
  4429 ;; This function is called by:
  4430 ;;		_Switch_Main
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _setMain_Exception
  4436  0559                     _setMain_Exception:	
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in _setMain_Exception: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4440                           ;setMain_Exception@command stored from wreg
  4441  0559  0020               	movlb	0	; select bank0
  4442  055A  00B4               	movwf	setMain_Exception@command
  4443                           
  4444                           ;Main_B1.c: 277: char status = 0, buz = 0;
  4445  055B  01B3               	clrf	setMain_Exception@status
  4446  055C  01B0               	clrf	setMain_Exception@buz
  4447                           
  4448                           ;Main_B1.c: 292: status = command == 3 ? getDimmerLights_Line() : 255;
  4449  055D  0834               	movf	setMain_Exception@command,w
  4450  055E  3A03               	xorlw	3
  4451  055F  1903               	skipnz
  4452  0560  2D65               	goto	l3727
  4453  0561  30FF               	movlw	255
  4454  0562  00B1               	movwf	_setMain_Exception$2531
  4455  0563  3000               	movlw	0
  4456  0564  2D6E               	goto	L2
  4457  0565                     l3727:	
  4458  0565  318B  2388  3185   	fcall	_getDimmerLights_Line
  4459  0568  0020               	movlb	0	; select bank0
  4460  0569  00AE               	movwf	??_setMain_Exception
  4461  056A  01AF               	clrf	??_setMain_Exception+1
  4462  056B  082E               	movf	??_setMain_Exception,w
  4463  056C  00B1               	movwf	_setMain_Exception$2531
  4464  056D  082F               	movf	??_setMain_Exception+1,w
  4465  056E                     L2:	
  4466  056E  00B2               	movwf	_setMain_Exception$2531+1
  4467  056F  0831               	movf	_setMain_Exception$2531,w
  4468  0570  00AE               	movwf	??_setMain_Exception
  4469  0571  082E               	movf	??_setMain_Exception,w
  4470  0572  00B3               	movwf	setMain_Exception@status
  4471                           
  4472                           ;Main_B1.c: 294: if (command == 0) {
  4473  0573  08B4               	movf	setMain_Exception@command,f
  4474  0574  1D03               	skipz
  4475  0575  2D78               	goto	l3735
  4476                           
  4477                           ;Main_B1.c: 295: setLED(99, 10);
  4478  0576  300A               	movlw	10
  4479  0577  2D7A               	goto	L3
  4480  0578                     l3735:	
  4481                           ;Main_B1.c: 296: } else {
  4482                           
  4483                           
  4484                           ;Main_B1.c: 297: setLED(99, 11);
  4485  0578  300B               	movlw	11
  4486  0579  0020               	movlb	0	; select bank0
  4487  057A                     L3:	
  4488  057A  00AE               	movwf	??_setMain_Exception
  4489  057B  082E               	movf	??_setMain_Exception,w
  4490  057C  00A2               	movwf	setLED@command
  4491  057D  3063               	movlw	99
  4492  057E  318E  26B6  3185   	fcall	_setLED
  4493                           
  4494                           ;Main_B1.c: 298: }
  4495                           ;Main_B1.c: 300: if (command != 0) {
  4496  0581  0020               	movlb	0	; select bank0
  4497  0582  0834               	movf	setMain_Exception@command,w
  4498  0583  1903               	btfsc	3,2
  4499  0584  0008               	return
  4500                           
  4501                           ;Main_B1.c: 301: switch (command) {
  4502  0585  2DA6               	goto	l3751
  4503  0586                     l3741:	
  4504                           ;Main_B1.c: 302: case 2:
  4505                           
  4506                           
  4507                           ;Main_B1.c: 303: if (getMain_LightsStatus() == 1) {
  4508  0586  318D  25A2  3185   	fcall	_getMain_LightsStatus
  4509  0589  3A01               	xorlw	1
  4510  058A  1D03               	skipz
  4511  058B  2DAF               	goto	l3753
  4512                           
  4513                           ;Main_B1.c: 304: setBuz(10, 300);
  4514  058C  302C               	movlw	44
  4515  058D  0020               	movlb	0	; select bank0
  4516  058E  00A9               	movwf	setBuz@time
  4517  058F  3001               	movlw	1
  4518  0590  00AA               	movwf	setBuz@time+1
  4519  0591  300A               	movlw	10
  4520  0592  3187  273A  3185   	fcall	_setBuz
  4521                           
  4522                           ;Main_B1.c: 305: }
  4523                           ;Main_B1.c: 306: break;
  4524  0595  2DAF               	goto	l3753
  4525  0596                     l3745:	
  4526                           ;Main_B1.c: 307: case 3:
  4527                           
  4528                           
  4529                           ;Main_B1.c: 308: if (getMain_LightsStatus() == 1) {
  4530  0596  318D  25A2  3185   	fcall	_getMain_LightsStatus
  4531  0599  3A01               	xorlw	1
  4532  059A  1D03               	skipz
  4533  059B  2DAF               	goto	l3753
  4534                           
  4535                           ;Main_B1.c: 309: setBuz(5, 300);
  4536  059C  302C               	movlw	44
  4537  059D  0020               	movlb	0	; select bank0
  4538  059E  00A9               	movwf	setBuz@time
  4539  059F  3001               	movlw	1
  4540  05A0  00AA               	movwf	setBuz@time+1
  4541  05A1  3005               	movlw	5
  4542  05A2  3187  273A  3185   	fcall	_setBuz
  4543                           
  4544                           ;Main_B1.c: 312: }
  4545                           
  4546                           ;Main_B1.c: 310: }
  4547                           ;Main_B1.c: 311: break;
  4548  05A5  2DAF               	goto	l3753
  4549  05A6                     l3751:	
  4550  05A6  0020               	movlb	0	; select bank0
  4551  05A7  0834               	movf	setMain_Exception@command,w
  4552                           
  4553                           ; Switch size 1, requested type "space"
  4554                           ; Number of cases is 2, Range of values is 2 to 3
  4555                           ; switch strategies available:
  4556                           ; Name         Instructions Cycles
  4557                           ; simple_byte            7     4 (average)
  4558                           ; direct_byte           13     9 (fixed)
  4559                           ; jumptable            263     9 (fixed)
  4560                           ;	Chosen strategy is simple_byte
  4561  05A8  3A02               	xorlw	2	; case 2
  4562  05A9  1903               	skipnz
  4563  05AA  2D86               	goto	l3741
  4564  05AB  3A01               	xorlw	1	; case 3
  4565  05AC  1903               	skipnz
  4566  05AD  2D96               	goto	l3745
  4567  05AE  2DAF               	goto	l3753
  4568  05AF                     l3753:	
  4569                           
  4570                           ;Main_B1.c: 313: setDimmerLights_ErrorClose(status);
  4571  05AF  0020               	movlb	0	; select bank0
  4572  05B0  0833               	movf	setMain_Exception@status,w
  4573  05B1  3185  25B5         	fcall	_setDimmerLights_ErrorClose
  4574  05B3  0020               	movlb	0	; select bank0
  4575  05B4  0008               	return
  4576  05B5                     __end_of_setMain_Exception:	
  4577                           
  4578                           	psect	text13
  4579  05B5                     __ptext13:	
  4580 ;; *************** function _setDimmerLights_ErrorClose *****************
  4581 ;; Defined at:
  4582 ;;		line 576 in file "../src/Dimmer_B1.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  lights          1    wreg     unsigned char 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  lights          1   11[BANK0 ] unsigned char 
  4587 ;;  i               2   12[BANK0 ] int 
  4588 ;;  count           1   10[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4598 ;;      Params:         0       0       0       0       0       0       0       0
  4599 ;;      Locals:         0       4       0       0       0       0       0       0
  4600 ;;      Temps:          0       1       0       0       0       0       0       0
  4601 ;;      Totals:         0       5       0       0       0       0       0       0
  4602 ;;Total ram usage:        5 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    8
  4605 ;; This function calls:
  4606 ;;		_DimmerLightsPointSelect
  4607 ;;		_getDimmerLights_Status
  4608 ;;		_setDimmerLights_SwOff
  4609 ;; This function is called by:
  4610 ;;		_setMain_Exception
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _setDimmerLights_ErrorClose
  4616  05B5                     _setDimmerLights_ErrorClose:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _setDimmerLights_ErrorClose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4620                           ;setDimmerLights_ErrorClose@lights stored from wreg
  4621  05B5  0020               	movlb	0	; select bank0
  4622  05B6  00AB               	movwf	setDimmerLights_ErrorClose@lights
  4623                           
  4624                           ;Dimmer_B1.c: 577: if (lights == 255) {
  4625  05B7  082B               	movf	setDimmerLights_ErrorClose@lights,w
  4626  05B8  3AFF               	xorlw	255
  4627  05B9  1D03               	skipz
  4628  05BA  2DEE               	goto	l3251
  4629                           
  4630                           ;Dimmer_B1.c: 579: char count = 1;
  4631  05BB  01AA               	clrf	setDimmerLights_ErrorClose@count
  4632  05BC  0AAA               	incf	setDimmerLights_ErrorClose@count,f
  4633                           
  4634                           ;Dimmer_B1.c: 587: for (int i = 0; i < count; i++) {
  4635  05BD  01AC               	clrf	setDimmerLights_ErrorClose@i
  4636  05BE  01AD               	clrf	setDimmerLights_ErrorClose@i+1
  4637  05BF                     l3249:	
  4638  05BF  082D               	movf	setDimmerLights_ErrorClose@i+1,w
  4639  05C0  3A80               	xorlw	128
  4640  05C1  00A9               	movwf	??_setDimmerLights_ErrorClose
  4641  05C2  3080               	movlw	128
  4642  05C3  0229               	subwf	??_setDimmerLights_ErrorClose,w
  4643  05C4  1D03               	skipz
  4644  05C5  2DC8               	goto	u2455
  4645  05C6  082A               	movf	setDimmerLights_ErrorClose@count,w
  4646  05C7  022C               	subwf	setDimmerLights_ErrorClose@i,w
  4647  05C8                     u2455:	
  4648  05C8  1803               	btfsc	3,0
  4649  05C9  0008               	return
  4650                           
  4651                           ;Dimmer_B1.c: 588: DimmerLightsPointSelect(i + 1);
  4652  05CA  0020               	movlb	0	; select bank0
  4653  05CB  082C               	movf	setDimmerLights_ErrorClose@i,w
  4654  05CC  3E01               	addlw	1
  4655  05CD  318B  2372  3185   	fcall	_DimmerLightsPointSelect
  4656                           
  4657                           ;Dimmer_B1.c: 589: if (getDimmerLights_Status(i + 1) == 1) {
  4658  05D0  0020               	movlb	0	; select bank0
  4659  05D1  082C               	movf	setDimmerLights_ErrorClose@i,w
  4660  05D2  3E01               	addlw	1
  4661  05D3  318C  2404  3185   	fcall	_getDimmerLights_Status
  4662  05D6  3A01               	xorlw	1
  4663  05D7  1D03               	skipz
  4664  05D8  2DE8               	goto	l3247
  4665                           
  4666                           ;Dimmer_B1.c: 590: DimmerLights->SwFlag = 1;
  4667  05D9  087A               	movf	_DimmerLights,w
  4668  05DA  3E09               	addlw	9
  4669  05DB  0086               	movwf	6
  4670  05DC  0187               	clrf	7
  4671  05DD  1701               	bsf	1,6
  4672                           
  4673                           ;Dimmer_B1.c: 591: DimmerLights->Status = 0;
  4674  05DE  087A               	movf	_DimmerLights,w
  4675  05DF  0086               	movwf	6
  4676  05E0  0187               	clrf	7
  4677  05E1  1281               	bcf	1,5
  4678                           
  4679                           ;Dimmer_B1.c: 592: setDimmerLights_SwOff(i + 1);
  4680  05E2  0020               	movlb	0	; select bank0
  4681  05E3  082C               	movf	setDimmerLights_ErrorClose@i,w
  4682  05E4  3E01               	addlw	1
  4683  05E5  3187  277F  3185   	fcall	_setDimmerLights_SwOff
  4684  05E8                     l3247:	
  4685  05E8  3001               	movlw	1
  4686  05E9  0020               	movlb	0	; select bank0
  4687  05EA  07AC               	addwf	setDimmerLights_ErrorClose@i,f
  4688  05EB  3000               	movlw	0
  4689  05EC  3DAD               	addwfc	setDimmerLights_ErrorClose@i+1,f
  4690  05ED  2DBF               	goto	l3249
  4691  05EE                     l3251:	
  4692                           ;Dimmer_B1.c: 593: }
  4693                           ;Dimmer_B1.c: 594: }
  4694                           ;Dimmer_B1.c: 595: } else {
  4695                           
  4696                           
  4697                           ;Dimmer_B1.c: 596: DimmerLightsPointSelect(lights);
  4698  05EE  0020               	movlb	0	; select bank0
  4699  05EF  082B               	movf	setDimmerLights_ErrorClose@lights,w
  4700  05F0  318B  2372  3185   	fcall	_DimmerLightsPointSelect
  4701                           
  4702                           ;Dimmer_B1.c: 597: if (getDimmerLights_Status(lights) == 1) {
  4703  05F3  0020               	movlb	0	; select bank0
  4704  05F4  082B               	movf	setDimmerLights_ErrorClose@lights,w
  4705  05F5  318C  2404  3185   	fcall	_getDimmerLights_Status
  4706  05F8  3A01               	xorlw	1
  4707  05F9  1D03               	skipz
  4708  05FA  0008               	return
  4709                           
  4710                           ;Dimmer_B1.c: 598: DimmerLights->SwFlag = 1;
  4711  05FB  087A               	movf	_DimmerLights,w
  4712  05FC  3E09               	addlw	9
  4713  05FD  0086               	movwf	6
  4714  05FE  0187               	clrf	7
  4715  05FF  1701               	bsf	1,6
  4716                           
  4717                           ;Dimmer_B1.c: 599: DimmerLights->Status = 0;
  4718  0600  087A               	movf	_DimmerLights,w
  4719  0601  0086               	movwf	6
  4720  0602  0187               	clrf	7
  4721  0603  1281               	bcf	1,5
  4722                           
  4723                           ;Dimmer_B1.c: 600: setDimmerLights_SwOff(lights);
  4724  0604  0020               	movlb	0	; select bank0
  4725  0605  082B               	movf	setDimmerLights_ErrorClose@lights,w
  4726  0606  3187  277F         	fcall	_setDimmerLights_SwOff
  4727  0608  0008               	return
  4728  0609                     __end_of_setDimmerLights_ErrorClose:	
  4729                           
  4730                           	psect	text14
  4731  077F                     __ptext14:	
  4732 ;; *************** function _setDimmerLights_SwOff *****************
  4733 ;; Defined at:
  4734 ;;		line 535 in file "../src/Dimmer_B1.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  sw              1    wreg     unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  sw              1    8[BANK0 ] unsigned char 
  4739 ;;  command         1    7[BANK0 ] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;		None               void
  4742 ;; Registers used:
  4743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4749 ;;      Params:         0       0       0       0       0       0       0       0
  4750 ;;      Locals:         0       2       0       0       0       0       0       0
  4751 ;;      Temps:          0       2       0       0       0       0       0       0
  4752 ;;      Totals:         0       4       0       0       0       0       0       0
  4753 ;;Total ram usage:        4 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    7
  4756 ;; This function calls:
  4757 ;;		_DimmerLightsPointSelect
  4758 ;;		_setDimmerLights_Trigger
  4759 ;;		_setDimmerLights_TriggerAdj
  4760 ;; This function is called by:
  4761 ;;		_setDimmerLights_ErrorClose
  4762 ;;		_setSw_Main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _setDimmerLights_SwOff
  4768  077F                     _setDimmerLights_SwOff:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4772                           ;setDimmerLights_SwOff@sw stored from wreg
  4773  077F  0020               	movlb	0	; select bank0
  4774  0780  00A8               	movwf	setDimmerLights_SwOff@sw
  4775                           
  4776                           ;Dimmer_B1.c: 536: DimmerLightsPointSelect(sw);
  4777  0781  0828               	movf	setDimmerLights_SwOff@sw,w
  4778  0782  318B  2372  3187   	fcall	_DimmerLightsPointSelect
  4779                           
  4780                           ;Dimmer_B1.c: 537: char command = DimmerLights->Status == 1 ? 1 : 0;
  4781  0785  087A               	movf	_DimmerLights,w
  4782  0786  0086               	movwf	6
  4783  0787  0187               	clrf	7
  4784  0788  3000               	movlw	0
  4785  0789  1A81               	btfsc	1,5
  4786  078A  3001               	movlw	1
  4787  078B  0020               	movlb	0	; select bank0
  4788  078C  00A7               	movwf	setDimmerLights_SwOff@command
  4789                           
  4790                           ;Dimmer_B1.c: 538: if (DimmerLights->SwFlag == 1) {
  4791  078D  087A               	movf	_DimmerLights,w
  4792  078E  3E09               	addlw	9
  4793  078F  0086               	movwf	6
  4794  0790  0187               	clrf	7
  4795  0791  1F01               	btfss	1,6
  4796  0792  0008               	return
  4797                           
  4798                           ;Dimmer_B1.c: 539: DimmerLights->SwFlag = 0;
  4799  0793  087A               	movf	_DimmerLights,w
  4800  0794  3E09               	addlw	9
  4801  0795  0086               	movwf	6
  4802  0796  0187               	clrf	7
  4803  0797  1301               	bcf	1,6
  4804                           
  4805                           ;Dimmer_B1.c: 540: if (DimmerLights->Status == 1) {
  4806  0798  087A               	movf	_DimmerLights,w
  4807  0799  0086               	movwf	6
  4808  079A  0187               	clrf	7
  4809  079B  1E81               	btfss	1,5
  4810  079C  2FBD               	goto	l3095
  4811                           
  4812                           ;Dimmer_B1.c: 541: if (DimmerLights->SwAdj == 1) {
  4813  079D  087A               	movf	_DimmerLights,w
  4814  079E  3E09               	addlw	9
  4815  079F  0086               	movwf	6
  4816  07A0  0187               	clrf	7
  4817  07A1  1F81               	btfss	1,7
  4818  07A2  0008               	return
  4819                           
  4820                           ;Dimmer_B1.c: 542: DimmerLights->SwAdj = 0;
  4821  07A3  087A               	movf	_DimmerLights,w
  4822  07A4  3E09               	addlw	9
  4823  07A5  0086               	movwf	6
  4824  07A6  0187               	clrf	7
  4825  07A7  1381               	bcf	1,7
  4826                           
  4827                           ;Dimmer_B1.c: 543: setDimmerLights_TriggerAdj(sw, 0);
  4828  07A8  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4829  07A9  0828               	movf	setDimmerLights_SwOff@sw,w
  4830  07AA  318C  24FB         	fcall	_setDimmerLights_TriggerAdj
  4831                           
  4832                           ;Dimmer_B1.c: 544: product->Data[17]=product->Data[26 + sw];
  4833  07AC  0020               	movlb	0	; select bank0
  4834  07AD  0828               	movf	setDimmerLights_SwOff@sw,w
  4835  07AE  3E1A               	addlw	26
  4836  07AF  076D               	addwf	_product,w
  4837  07B0  00A5               	movwf	??_setDimmerLights_SwOff
  4838  07B1  0825               	movf	??_setDimmerLights_SwOff,w
  4839  07B2  0086               	movwf	6
  4840  07B3  0187               	clrf	7
  4841  07B4  0801               	movf	1,w
  4842  07B5  00A6               	movwf	??_setDimmerLights_SwOff+1
  4843  07B6  086D               	movf	_product,w
  4844  07B7  3E11               	addlw	17
  4845  07B8  0086               	movwf	6
  4846  07B9  0187               	clrf	7
  4847  07BA  0826               	movf	??_setDimmerLights_SwOff+1,w
  4848  07BB  0081               	movwf	1
  4849                           
  4850                           ;Dimmer_B1.c: 547: }
  4851                           ;Dimmer_B1.c: 548: } else {
  4852  07BC  0008               	return
  4853  07BD                     l3095:	
  4854                           
  4855                           ;Dimmer_B1.c: 549: setDimmerLights_Trigger(sw, 0);
  4856  07BD  01A2               	clrf	setDimmerLights_Trigger@command
  4857  07BE  0828               	movf	setDimmerLights_SwOff@sw,w
  4858  07BF  318C  24C2         	fcall	_setDimmerLights_Trigger
  4859                           
  4860                           ;Dimmer_B1.c: 550: ;;
  4861  07C1  0008               	return
  4862  07C2                     __end_of_setDimmerLights_SwOff:	
  4863                           ;Dimmer_B1.c: 553: }
  4864                           ;Dimmer_B1.c: 554: ;;
  4865                           ;Dimmer_B1.c: 555: ;;
  4866                           
  4867                           
  4868                           	psect	text15
  4869  0CFB                     __ptext15:	
  4870 ;; *************** function _setDimmerLights_TriggerAdj *****************
  4871 ;; Defined at:
  4872 ;;		line 782 in file "../src/Dimmer_B1.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  lights          1    wreg     unsigned char 
  4875 ;;  command         1    2[BANK0 ] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  lights          1    4[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4887 ;;      Params:         0       1       0       0       0       0       0       0
  4888 ;;      Locals:         0       1       0       0       0       0       0       0
  4889 ;;      Temps:          0       1       0       0       0       0       0       0
  4890 ;;      Totals:         0       3       0       0       0       0       0       0
  4891 ;;Total ram usage:        3 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    6
  4894 ;; This function calls:
  4895 ;;		_DimmerLightsPointSelect
  4896 ;; This function is called by:
  4897 ;;		_setDimmerLights_SwOff
  4898 ;;		_setDimmerLights_AdjControl
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           
  4903                           ;psect for function _setDimmerLights_TriggerAdj
  4904  0CFB                     _setDimmerLights_TriggerAdj:	
  4905                           
  4906                           ;incstack = 0
  4907                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4908                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  4909  0CFB  0020               	movlb	0	; select bank0
  4910  0CFC  00A4               	movwf	setDimmerLights_TriggerAdj@lights
  4911                           
  4912                           ;Dimmer_B1.c: 783: DimmerLightsPointSelect(lights);
  4913  0CFD  0824               	movf	setDimmerLights_TriggerAdj@lights,w
  4914  0CFE  318B  2372         	fcall	_DimmerLightsPointSelect
  4915                           
  4916                           ;Dimmer_B1.c: 784: DimmerLights->TriggerAdj = 1;
  4917  0D00  087A               	movf	_DimmerLights,w
  4918  0D01  3E08               	addlw	8
  4919  0D02  0086               	movwf	6
  4920  0D03  0187               	clrf	7
  4921  0D04  1601               	bsf	1,4
  4922                           
  4923                           ;Dimmer_B1.c: 785: DimmerLights->AdjGo = command == 1 ? 1 : 0;
  4924  0D05  0020               	movlb	0	; select bank0
  4925  0D06  0822               	movf	setDimmerLights_TriggerAdj@command,w
  4926  0D07  3A01               	xorlw	1
  4927  0D08  3000               	movlw	0
  4928  0D09  1903               	skipnz
  4929  0D0A  3001               	movlw	1
  4930  0D0B  00A3               	movwf	??_setDimmerLights_TriggerAdj
  4931  0D0C  087A               	movf	_DimmerLights,w
  4932  0D0D  3E08               	addlw	8
  4933  0D0E  0086               	movwf	6
  4934  0D0F  0187               	clrf	7
  4935  0D10  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4936  0D11  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4937  0D12  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4938  0D13  0801               	movf	1,w
  4939  0D14  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  4940  0D15  39F7               	andlw	-9
  4941  0D16  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  4942  0D17  0081               	movwf	1
  4943  0D18  0008               	return
  4944  0D19                     __end_of_setDimmerLights_TriggerAdj:	
  4945                           
  4946                           	psect	text16
  4947  0CC2                     __ptext16:	
  4948 ;; *************** function _setDimmerLights_Trigger *****************
  4949 ;; Defined at:
  4950 ;;		line 776 in file "../src/Dimmer_B1.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  lights          1    wreg     unsigned char 
  4953 ;;  command         1    2[BANK0 ] unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  lights          1    4[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4965 ;;      Params:         0       1       0       0       0       0       0       0
  4966 ;;      Locals:         0       1       0       0       0       0       0       0
  4967 ;;      Temps:          0       1       0       0       0       0       0       0
  4968 ;;      Totals:         0       3       0       0       0       0       0       0
  4969 ;;Total ram usage:        3 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    6
  4972 ;; This function calls:
  4973 ;;		_DimmerLightsPointSelect
  4974 ;; This function is called by:
  4975 ;;		_setDimmerLights_SwOn
  4976 ;;		_setDimmerLights_SwOff
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _setDimmerLights_Trigger
  4982  0CC2                     _setDimmerLights_Trigger:	
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4986                           ;setDimmerLights_Trigger@lights stored from wreg
  4987  0CC2  0020               	movlb	0	; select bank0
  4988  0CC3  00A4               	movwf	setDimmerLights_Trigger@lights
  4989                           
  4990                           ;Dimmer_B1.c: 777: DimmerLightsPointSelect(lights);
  4991  0CC4  0824               	movf	setDimmerLights_Trigger@lights,w
  4992  0CC5  318B  2372         	fcall	_DimmerLightsPointSelect
  4993                           
  4994                           ;Dimmer_B1.c: 778: DimmerLights->Trigger = 1;
  4995  0CC7  087A               	movf	_DimmerLights,w
  4996  0CC8  3E08               	addlw	8
  4997  0CC9  0086               	movwf	6
  4998  0CCA  0187               	clrf	7
  4999  0CCB  1501               	bsf	1,2
  5000                           
  5001                           ;Dimmer_B1.c: 779: DimmerLights->Switch = command == 1 ? 1 : 0;
  5002  0CCC  0020               	movlb	0	; select bank0
  5003  0CCD  0822               	movf	setDimmerLights_Trigger@command,w
  5004  0CCE  3A01               	xorlw	1
  5005  0CCF  3000               	movlw	0
  5006  0CD0  1903               	skipnz
  5007  0CD1  3001               	movlw	1
  5008  0CD2  00A3               	movwf	??_setDimmerLights_Trigger
  5009  0CD3  087A               	movf	_DimmerLights,w
  5010  0CD4  3E08               	addlw	8
  5011  0CD5  0086               	movwf	6
  5012  0CD6  0187               	clrf	7
  5013  0CD7  0DA3               	rlf	??_setDimmerLights_Trigger,f
  5014  0CD8  0801               	movf	1,w
  5015  0CD9  0623               	xorwf	??_setDimmerLights_Trigger,w
  5016  0CDA  39FD               	andlw	-3
  5017  0CDB  0623               	xorwf	??_setDimmerLights_Trigger,w
  5018  0CDC  0081               	movwf	1
  5019  0CDD  0008               	return
  5020  0CDE                     __end_of_setDimmerLights_Trigger:	
  5021                           
  5022                           	psect	text17
  5023  0B88                     __ptext17:	
  5024 ;; *************** function _getDimmerLights_Line *****************
  5025 ;; Defined at:
  5026 ;;		line 705 in file "../src/Dimmer_B1.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  line            1    0[BANK0 ] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      unsigned char 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5040 ;;      Params:         0       0       0       0       0       0       0       0
  5041 ;;      Locals:         0       1       0       0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0
  5043 ;;      Totals:         0       1       0       0       0       0       0       0
  5044 ;;Total ram usage:        1 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    5
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_setMain_Exception
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           
  5055                           ;psect for function _getDimmerLights_Line
  5056  0B88                     _getDimmerLights_Line:	
  5057                           
  5058                           ;Dimmer_B1.c: 706: char line = 0;
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  5062  0B88  0020               	movlb	0	; select bank0
  5063  0B89  01A0               	clrf	getDimmerLights_Line@line
  5064                           
  5065                           ;Dimmer_B1.c: 708: if (DimmerLights1.Line == 1) {
  5066  0B8A  0021               	movlb	1	; select bank1
  5067  0B8B  1C39               	btfss	(_DimmerLights1^(0+128)+9),0
  5068  0B8C  2B90               	goto	l3265
  5069                           
  5070                           ;Dimmer_B1.c: 709: line = 1;
  5071  0B8D  0020               	movlb	0	; select bank0
  5072  0B8E  01A0               	clrf	getDimmerLights_Line@line
  5073  0B8F  0AA0               	incf	getDimmerLights_Line@line,f
  5074  0B90                     l3265:	
  5075                           
  5076                           ;Dimmer_B1.c: 710: }
  5077                           ;Dimmer_B1.c: 722: return line;
  5078  0B90  0020               	movlb	0	; select bank0
  5079  0B91  0820               	movf	getDimmerLights_Line@line,w
  5080  0B92  0008               	return
  5081  0B93                     __end_of_getDimmerLights_Line:	
  5082                           
  5083                           	psect	text18
  5084  0B11                     __ptext18:	
  5085 ;; *************** function _getMain_All_Error_Status *****************
  5086 ;; Defined at:
  5087 ;;		line 361 in file "../src/Main_B1.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  command         1    wreg     unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  command         1    0[COMMON] unsigned char 
  5092 ;;  status          1    0[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5102 ;;      Params:         0       0       0       0       0       0       0       0
  5103 ;;      Locals:         0       1       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0
  5105 ;;      Totals:         0       1       0       0       0       0       0       0
  5106 ;;Total ram usage:        1 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    5
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_Switch_Main
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _getMain_All_Error_Status
  5118  0B11                     _getMain_All_Error_Status:	
  5119                           
  5120                           ;Main_B1.c: 362: char status = 0;
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  5124  0B11  0020               	movlb	0	; select bank0
  5125  0B12  01A0               	clrf	getMain_All_Error_Status@status
  5126                           
  5127                           ;Main_B1.c: 398: return status;
  5128  0B13  0820               	movf	getMain_All_Error_Status@status,w
  5129  0B14  0008               	return
  5130  0B15                     __end_of_getMain_All_Error_Status:	
  5131                           
  5132                           	psect	text19
  5133  0B36                     __ptext19:	
  5134 ;; *************** function _Switch_Initialization *****************
  5135 ;; Defined at:
  5136 ;;		line 46 in file "../src/Switch_B1.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5150 ;;      Params:         0       0       0       0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    8
  5157 ;; This function calls:
  5158 ;;		_TouchPower
  5159 ;;		_setSw_Initialization
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _Switch_Initialization
  5167  0B36                     _Switch_Initialization:	
  5168                           
  5169                           ;Switch_B1.c: 47: TouchPower();
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5173  0B36  318C  247B  318B   	fcall	_TouchPower
  5174                           
  5175                           ;Switch_B1.c: 49: WPUB1 = 0;
  5176  0B39  0024               	movlb	4	; select bank4
  5177  0B3A  108D               	bcf	13,1	;volatile
  5178                           
  5179                           ;Switch_B1.c: 58: setSw_Initialization(1);
  5180  0B3B  3001               	movlw	1
  5181  0B3C  318C  2423         	fcall	_setSw_Initialization
  5182  0B3E  0008               	return
  5183  0B3F                     __end_of_Switch_Initialization:	
  5184                           
  5185                           	psect	text20
  5186  0C23                     __ptext20:	
  5187 ;; *************** function _setSw_Initialization *****************
  5188 ;; Defined at:
  5189 ;;		line 109 in file "../src/Switch_B1.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  sw              1    wreg     unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  sw              1    4[BANK0 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;		None               void
  5196 ;; Registers used:
  5197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5203 ;;      Params:         0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       1       0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0
  5206 ;;      Totals:         0       1       0       0       0       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    7
  5210 ;; This function calls:
  5211 ;;		_setLED
  5212 ;; This function is called by:
  5213 ;;		_Switch_Initialization
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _setSw_Initialization
  5219  0C23                     _setSw_Initialization:	
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5223                           ;setSw_Initialization@sw stored from wreg
  5224  0C23  0020               	movlb	0	; select bank0
  5225  0C24  00A4               	movwf	setSw_Initialization@sw
  5226                           
  5227                           ;Switch_B1.c: 110: setLED(sw, 1);
  5228  0C25  01A2               	clrf	setLED@command
  5229  0C26  0AA2               	incf	setLED@command,f
  5230  0C27  0824               	movf	setSw_Initialization@sw,w
  5231  0C28  318E  26B6  318C   	fcall	_setLED
  5232                           
  5233                           ;Switch_B1.c: 112: setLED(sw + 1, 1);
  5234  0C2B  0020               	movlb	0	; select bank0
  5235  0C2C  01A2               	clrf	setLED@command
  5236  0C2D  0AA2               	incf	setLED@command,f
  5237  0C2E  0824               	movf	setSw_Initialization@sw,w
  5238  0C2F  3E01               	addlw	1
  5239  0C30  318E  26B6         	fcall	_setLED
  5240  0C32  0008               	return
  5241  0C33                     __end_of_setSw_Initialization:	
  5242                           
  5243                           	psect	text21
  5244  0C7B                     __ptext21:	
  5245 ;; *************** function _TouchPower *****************
  5246 ;; Defined at:
  5247 ;;		line 10 in file "../src/Switch_B1.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;		None               void
  5254 ;; Registers used:
  5255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5261 ;;      Params:         0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0
  5264 ;;      Totals:         0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    6
  5268 ;; This function calls:
  5269 ;;		_Timeout_Counter
  5270 ;;		_set_TimeoutCleared
  5271 ;; This function is called by:
  5272 ;;		_Switch_Initialization
  5273 ;;		_Switch_Main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _TouchPower
  5279  0C7B                     _TouchPower:	
  5280                           
  5281                           ;Switch_B1.c: 11: if (RB0 == 0) {
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5285  0C7B  0020               	movlb	0	; select bank0
  5286  0C7C  180D               	btfsc	13,0	;volatile
  5287  0C7D  0008               	return
  5288                           
  5289                           ;Switch_B1.c: 12: if (myMain.PowerON == 1) {
  5290  0C7E  0021               	movlb	1	; select bank1
  5291  0C7F  1C20               	btfss	_myMain^(0+128),0
  5292  0C80  0008               	return
  5293  0C81  2C87               	goto	l3769
  5294  0C82                     l1208:	
  5295                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  5296                           
  5297                           
  5298                           ;Switch_B1.c: 14: RB0 = 1;
  5299  0C82  0020               	movlb	0	; select bank0
  5300  0C83  140D               	bsf	13,0	;volatile
  5301                           
  5302                           ;Switch_B1.c: 15: Timeout_Counter();
  5303  0C84  318C  2466  318C   	fcall	_Timeout_Counter
  5304  0C87                     l3769:	
  5305  0C87  0020               	movlb	0	; select bank0
  5306  0C88  180D               	btfsc	13,0	;volatile
  5307  0C89  2C8D               	goto	l3773
  5308  0C8A  0021               	movlb	1	; select bank1
  5309  0C8B  1D2D               	btfss	(_myMain^(0+128)+13),2
  5310  0C8C  2C82               	goto	l1208
  5311  0C8D                     l3773:	
  5312                           
  5313                           ;Switch_B1.c: 16: }
  5314                           ;Switch_B1.c: 17: set_TimeoutCleared();
  5315  0C8D  318B  2315         	fcall	_set_TimeoutCleared
  5316  0C8F  0008               	return
  5317  0C90                     __end_of_TouchPower:	
  5318                           
  5319                           	psect	text22
  5320  0B15                     __ptext22:	
  5321 ;; *************** function _set_TimeoutCleared *****************
  5322 ;; Defined at:
  5323 ;;		line 270 in file "../src/Main_B1.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		status,2
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5337 ;;      Params:         0       0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    5
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_TouchPower
  5348 ;;		_getAD
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _set_TimeoutCleared
  5354  0B15                     _set_TimeoutCleared:	
  5355                           
  5356                           ;Main_B1.c: 271: myMain.Timeout = 0;
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _set_TimeoutCleared: [status,2]
  5360  0B15  0021               	movlb	1	; select bank1
  5361  0B16  112D               	bcf	(_myMain^(0+128)+13),2
  5362                           
  5363                           ;Main_B1.c: 272: myMain.Timeout_Counter = 0;
  5364  0B17  01AE               	clrf	(_myMain^(0+128)+14)
  5365  0B18  01AF               	clrf	((_myMain+1)^(0+128)+14)
  5366  0B19  0008               	return
  5367  0B1A                     __end_of_set_TimeoutCleared:	
  5368                           
  5369                           	psect	text23
  5370  0C66                     __ptext23:	
  5371 ;; *************** function _Timeout_Counter *****************
  5372 ;; Defined at:
  5373 ;;		line 261 in file "../src/Main_B1.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;		None               void
  5380 ;; Registers used:
  5381 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5387 ;;      Params:         0       0       0       0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    5
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_TouchPower
  5398 ;;		_getAD
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _Timeout_Counter
  5404  0C66                     _Timeout_Counter:	
  5405                           
  5406                           ;Main_B1.c: 262: myMain.Timeout_Counter++;
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5410  0C66  3001               	movlw	1
  5411  0C67  0021               	movlb	1	; select bank1
  5412  0C68  07AE               	addwf	(_myMain^(0+128)+14),f
  5413  0C69  3000               	movlw	0
  5414  0C6A  3DAF               	addwfc	((_myMain+1)^(0+128)+14),f
  5415                           
  5416                           ;Main_B1.c: 263: if (myMain.Timeout_Counter == 10000) {
  5417  0C6B  300E               	movlw	14
  5418  0C6C  3EA0               	addlw	_myMain& (0+255)
  5419  0C6D  0086               	movwf	6
  5420  0C6E  0187               	clrf	7
  5421  0C6F  3F40               	moviw [0]fsr1
  5422  0C70  3A10               	xorlw	16
  5423  0C71  1D03               	skipz
  5424  0C72  2C75               	goto	u2485
  5425  0C73  3F41               	moviw [1]fsr1
  5426  0C74  3A27               	xorlw	39
  5427  0C75                     u2485:	
  5428  0C75  1D03               	skipz
  5429  0C76  0008               	return
  5430                           
  5431                           ;Main_B1.c: 264: myMain.Timeout_Counter = 0;
  5432  0C77  01AE               	clrf	(_myMain^(0+128)+14)
  5433  0C78  01AF               	clrf	((_myMain+1)^(0+128)+14)
  5434                           
  5435                           ;Main_B1.c: 265: myMain.Timeout = 1;
  5436  0C79  152D               	bsf	(_myMain^(0+128)+13),2
  5437  0C7A  0008               	return
  5438  0C7B                     __end_of_Timeout_Counter:	
  5439                           
  5440                           	psect	text24
  5441  0C54                     __ptext24:	
  5442 ;; *************** function _Mcu_Initialization *****************
  5443 ;; Defined at:
  5444 ;;		line 30 in file "../src/MCU_B1.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;		None               void
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5458 ;;      Params:         0       0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0
  5461 ;;      Totals:         0       0       0       0       0       0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    6
  5465 ;; This function calls:
  5466 ;;		_ADC_Set
  5467 ;;		_Fosc_Set
  5468 ;;		_IOC_Set
  5469 ;;		_IO_Set
  5470 ;;		_TMR1_Set
  5471 ;;		_WDT_Set
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _Mcu_Initialization
  5479  0C54                     _Mcu_Initialization:	
  5480                           
  5481                           ;MCU_B1.c: 32: Fosc_Set();
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5485  0C54  318B  230D  318C   	fcall	_Fosc_Set
  5486                           
  5487                           ;MCU_B1.c: 34: IO_Set();
  5488  0C57  318C  2490  318C   	fcall	_IO_Set
  5489                           
  5490                           ;MCU_B1.c: 36: ;;
  5491                           ;MCU_B1.c: 38: TMR1_Set();
  5492  0C5A  318B  23CE  318C   	fcall	_TMR1_Set
  5493                           
  5494                           ;MCU_B1.c: 40: ADC_Set();
  5495  0C5D  318B  2326  318C   	fcall	_ADC_Set
  5496                           
  5497                           ;MCU_B1.c: 42: ;;
  5498                           ;MCU_B1.c: 44: ;;
  5499                           ;MCU_B1.c: 46: IOC_Set();
  5500  0C60  318B  23DA  318C   	fcall	_IOC_Set
  5501                           
  5502                           ;MCU_B1.c: 48: ;;
  5503                           ;MCU_B1.c: 50: ;;
  5504                           ;MCU_B1.c: 52: WDT_Set();
  5505  0C63  318B  2353         	fcall	_WDT_Set
  5506  0C65  0008               	return
  5507  0C66                     __end_of_Mcu_Initialization:	
  5508                           
  5509                           	psect	text25
  5510  0B53                     __ptext25:	
  5511 ;; *************** function _WDT_Set *****************
  5512 ;; Defined at:
  5513 ;;		line 1019 in file "../src/MCU_B1.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;		None               void
  5520 ;; Registers used:
  5521 ;;		wreg
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5527 ;;      Params:         0       0       0       0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0
  5529 ;;      Temps:          0       1       0       0       0       0       0       0
  5530 ;;      Totals:         0       1       0       0       0       0       0       0
  5531 ;;Total ram usage:        1 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    5
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_Mcu_Initialization
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _WDT_Set
  5543  0B53                     _WDT_Set:	
  5544                           
  5545                           ;MCU_B1.c: 1026: WDTCON = 0b00010111;;
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in _WDT_Set: [wreg]
  5549  0B53  3017               	movlw	23
  5550  0B54  0021               	movlb	1	; select bank1
  5551  0B55  0097               	movwf	23	;volatile
  5552                           
  5553                           ;MCU_B1.c: 1028: WDT.Enable = 1;
  5554  0B56  0020               	movlb	0	; select bank0
  5555  0B57  1468               	bsf	_WDT,0
  5556                           
  5557                           ;MCU_B1.c: 1029: WDT.Timer = 10;
  5558  0B58  300A               	movlw	10
  5559  0B59  00A0               	movwf	??_WDT_Set
  5560  0B5A  0820               	movf	??_WDT_Set,w
  5561  0B5B  00E9               	movwf	_WDT+1
  5562  0B5C  0008               	return
  5563  0B5D                     __end_of_WDT_Set:	
  5564                           
  5565                           	psect	text26
  5566  0BCE                     __ptext26:	
  5567 ;; *************** function _TMR1_Set *****************
  5568 ;; Defined at:
  5569 ;;		line 199 in file "../src/MCU_B1.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5583 ;;      Params:         0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    5
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_Mcu_Initialization
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _TMR1_Set
  5599  0BCE                     _TMR1_Set:	
  5600                           
  5601                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in _TMR1_Set: [wreg]
  5605  0BCE  3041               	movlw	65
  5606  0BCF  0020               	movlb	0	; select bank0
  5607  0BD0  0098               	movwf	24	;volatile
  5608                           
  5609                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5610  0BD1  30FA               	movlw	250
  5611  0BD2  0097               	movwf	23	;volatile
  5612                           
  5613                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5614  0BD3  3038               	movlw	56
  5615  0BD4  0096               	movwf	22	;volatile
  5616                           
  5617                           ;MCU_B1.c: 203: TMR1IE = 1;
  5618  0BD5  0021               	movlb	1	; select bank1
  5619  0BD6  1411               	bsf	17,0	;volatile
  5620                           
  5621                           ;MCU_B1.c: 204: PEIE = 1;
  5622  0BD7  170B               	bsf	11,6	;volatile
  5623                           
  5624                           ;MCU_B1.c: 205: GIE = 1;
  5625  0BD8  178B               	bsf	11,7	;volatile
  5626  0BD9  0008               	return
  5627  0BDA                     __end_of_TMR1_Set:	
  5628                           
  5629                           	psect	text27
  5630  0C90                     __ptext27:	
  5631 ;; *************** function _IO_Set *****************
  5632 ;; Defined at:
  5633 ;;		line 60 in file "../src/MCU_B1.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;		None               void
  5640 ;; Registers used:
  5641 ;;		wreg, status,2
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5647 ;;      Params:         0       0       0       0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    5
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_Mcu_Initialization
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _IO_Set
  5663  0C90                     _IO_Set:	
  5664                           
  5665                           ;MCU_B1.c: 73: TRISA = 0b11110111;;
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _IO_Set: [wreg+status,2]
  5669  0C90  30F7               	movlw	247
  5670  0C91  0021               	movlb	1	; select bank1
  5671  0C92  008C               	movwf	12	;volatile
  5672                           
  5673                           ;MCU_B1.c: 74: TRISB = 0b00000100;;
  5674  0C93  3004               	movlw	4
  5675  0C94  008D               	movwf	13	;volatile
  5676                           
  5677                           ;MCU_B1.c: 75: TRISC = 0b00100110;;
  5678  0C95  3026               	movlw	38
  5679  0C96  008E               	movwf	14	;volatile
  5680                           
  5681                           ;MCU_B1.c: 76: LATA = 0b00000000;;
  5682  0C97  0022               	movlb	2	; select bank2
  5683  0C98  018C               	clrf	12	;volatile
  5684                           
  5685                           ;MCU_B1.c: 77: LATB = 0b00000000;;
  5686  0C99  018D               	clrf	13	;volatile
  5687                           
  5688                           ;MCU_B1.c: 78: LATC = 0b00000000;;
  5689  0C9A  018E               	clrf	14	;volatile
  5690                           
  5691                           ;MCU_B1.c: 79: ANSELA = 0b00001110;;
  5692  0C9B  300E               	movlw	14
  5693  0C9C  0023               	movlb	3	; select bank3
  5694  0C9D  008C               	movwf	12	;volatile
  5695                           
  5696                           ;MCU_B1.c: 80: ANSELB = 0b00000000;;
  5697  0C9E  018D               	clrf	13	;volatile
  5698                           
  5699                           ;MCU_B1.c: 81: ANSELC = 0b00000000;;
  5700  0C9F  018E               	clrf	14	;volatile
  5701                           
  5702                           ;MCU_B1.c: 82: PORTA = 0b11110111;;
  5703  0CA0  30F7               	movlw	247
  5704  0CA1  0020               	movlb	0	; select bank0
  5705  0CA2  008C               	movwf	12	;volatile
  5706                           
  5707                           ;MCU_B1.c: 83: PORTB = 0b00000100;;
  5708  0CA3  3004               	movlw	4
  5709  0CA4  008D               	movwf	13	;volatile
  5710                           
  5711                           ;MCU_B1.c: 84: PORTC = 0b00100110;;
  5712  0CA5  3026               	movlw	38
  5713  0CA6  008E               	movwf	14	;volatile
  5714  0CA7  0008               	return
  5715  0CA8                     __end_of_IO_Set:	
  5716                           
  5717                           	psect	text28
  5718  0BDA                     __ptext28:	
  5719 ;; *************** function _IOC_Set *****************
  5720 ;; Defined at:
  5721 ;;		line 366 in file "../src/MCU_B1.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;		None               void
  5728 ;; Registers used:
  5729 ;;		wreg, status,2
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5735 ;;      Params:         0       0       0       0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    5
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_Mcu_Initialization
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           
  5750                           ;psect for function _IOC_Set
  5751  0BDA                     _IOC_Set:	
  5752                           
  5753                           ;MCU_B1.c: 367: WPUB2 = 0;
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _IOC_Set: [wreg+status,2]
  5757  0BDA  0024               	movlb	4	; select bank4
  5758  0BDB  110D               	bcf	13,2	;volatile
  5759                           
  5760                           ;MCU_B1.c: 382: IOCBP = 0b00000100;
  5761  0BDC  3004               	movlw	4
  5762  0BDD  0027               	movlb	7	; select bank7
  5763  0BDE  0094               	movwf	20	;volatile
  5764                           
  5765                           ;MCU_B1.c: 383: IOCBN = 0b00000100;
  5766  0BDF  3004               	movlw	4
  5767  0BE0  0095               	movwf	21	;volatile
  5768                           
  5769                           ;MCU_B1.c: 392: IOCBF = 0b00000000;
  5770  0BE1  0196               	clrf	22	;volatile
  5771                           
  5772                           ;MCU_B1.c: 394: IOCIE = 1;
  5773  0BE2  158B               	bsf	11,3	;volatile
  5774                           
  5775                           ;MCU_B1.c: 395: IOCIF = 0;
  5776  0BE3  100B               	bcf	11,0	;volatile
  5777                           
  5778                           ;MCU_B1.c: 396: PEIE = 1;
  5779  0BE4  170B               	bsf	11,6	;volatile
  5780                           
  5781                           ;MCU_B1.c: 397: GIE = 1;
  5782  0BE5  178B               	bsf	11,7	;volatile
  5783  0BE6  0008               	return
  5784  0BE7                     __end_of_IOC_Set:	
  5785                           
  5786                           	psect	text29
  5787  0B0D                     __ptext29:	
  5788 ;; *************** function _Fosc_Set *****************
  5789 ;; Defined at:
  5790 ;;		line 56 in file "../src/MCU_B1.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;		None               void
  5797 ;; Registers used:
  5798 ;;		wreg
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5804 ;;      Params:         0       0       0       0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    5
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_Mcu_Initialization
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function _Fosc_Set
  5820  0B0D                     _Fosc_Set:	
  5821                           
  5822                           ;MCU_B1.c: 57: OSCCON = 0x78;
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in _Fosc_Set: [wreg]
  5826  0B0D  3078               	movlw	120
  5827  0B0E  0021               	movlb	1	; select bank1
  5828  0B0F  0099               	movwf	25	;volatile
  5829  0B10  0008               	return
  5830  0B11                     __end_of_Fosc_Set:	
  5831                           
  5832                           	psect	text30
  5833  0B26                     __ptext30:	
  5834 ;; *************** function _ADC_Set *****************
  5835 ;; Defined at:
  5836 ;;		line 420 in file "../src/MCU_B1.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		wreg
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5850 ;;      Params:         0       0       0       0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    5
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_Mcu_Initialization
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _ADC_Set
  5866  0B26                     _ADC_Set:	
  5867                           
  5868                           ;MCU_B1.c: 421: ADCON1 = 0xf3;
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _ADC_Set: [wreg]
  5872  0B26  30F3               	movlw	243
  5873  0B27  0021               	movlb	1	; select bank1
  5874  0B28  009E               	movwf	30	;volatile
  5875                           
  5876                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5877  0B29  30C1               	movlw	193
  5878  0B2A  0022               	movlb	2	; select bank2
  5879  0B2B  0097               	movwf	23	;volatile
  5880  0B2C  0008               	return
  5881  0B2D                     __end_of_ADC_Set:	
  5882                           
  5883                           	psect	text31
  5884  0B09                     __ptext31:	
  5885 ;; *************** function _LED_Main *****************
  5886 ;; Defined at:
  5887 ;;		line 47 in file "../src/LED_B1.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;		None               void
  5894 ;; Registers used:
  5895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5901 ;;      Params:         0       0       0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    7
  5908 ;; This function calls:
  5909 ;;		_setLED_Main
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function _LED_Main
  5917  0B09                     _LED_Main:	
  5918                           
  5919                           ;LED_B1.c: 58: setLED_Main(99);
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5923  0B09  3063               	movlw	99
  5924  0B0A  318E  2656         	fcall	_setLED_Main
  5925  0B0C  0008               	return
  5926  0B0D                     __end_of_LED_Main:	
  5927                           
  5928                           	psect	text32
  5929  0E56                     __ptext32:	
  5930 ;; *************** function _setLED_Main *****************
  5931 ;; Defined at:
  5932 ;;		line 216 in file "../src/LED_B1.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  led             1    wreg     unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  led             1    4[BANK0 ] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;		None               void
  5939 ;; Registers used:
  5940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5946 ;;      Params:         0       0       0       0       0       0       0       0
  5947 ;;      Locals:         0       1       0       0       0       0       0       0
  5948 ;;      Temps:          0       2       0       0       0       0       0       0
  5949 ;;      Totals:         0       3       0       0       0       0       0       0
  5950 ;;Total ram usage:        3 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    6
  5953 ;; This function calls:
  5954 ;;		_LedPointSelect
  5955 ;; This function is called by:
  5956 ;;		_LED_Main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function _setLED_Main
  5962  0E56                     _setLED_Main:	
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5966                           ;setLED_Main@led stored from wreg
  5967  0E56  0020               	movlb	0	; select bank0
  5968  0E57  00A4               	movwf	setLED_Main@led
  5969                           
  5970                           ;LED_B1.c: 217: LedPointSelect(led);
  5971  0E58  0824               	movf	setLED_Main@led,w
  5972  0E59  318B  237D  318E   	fcall	_LedPointSelect
  5973                           
  5974                           ;LED_B1.c: 218: if (LED->GO == 1) {
  5975  0E5C  0020               	movlb	0	; select bank0
  5976  0E5D  086A               	movf	_LED,w
  5977  0E5E  0086               	movwf	6
  5978  0E5F  0187               	clrf	7
  5979  0E60  1C81               	btfss	1,1
  5980  0E61  0008               	return
  5981                           
  5982                           ;LED_B1.c: 219: LED->Time++;
  5983  0E62  0A6A               	incf	_LED,w
  5984  0E63  0086               	movwf	6
  5985  0E64  0187               	clrf	7
  5986  0E65  3001               	movlw	1
  5987  0E66  0781               	addwf	1,f
  5988  0E67  3141               	addfsr 1,1
  5989  0E68  1803               	skipnc
  5990  0E69  0A81               	incf	1,f
  5991                           
  5992                           ;LED_B1.c: 220: if (LED->Time >= 500 / 10) {
  5993  0E6A  0A6A               	incf	_LED,w
  5994  0E6B  0086               	movwf	6
  5995  0E6C  0187               	clrf	7
  5996  0E6D  3F40               	moviw [0]fsr1
  5997  0E6E  00A2               	movwf	??_setLED_Main
  5998  0E6F  3F41               	moviw [1]fsr1
  5999  0E70  00A3               	movwf	??_setLED_Main+1
  6000  0E71  3000               	movlw	0
  6001  0E72  0223               	subwf	??_setLED_Main+1,w
  6002  0E73  3032               	movlw	50
  6003  0E74  1903               	skipnz
  6004  0E75  0222               	subwf	??_setLED_Main,w
  6005  0E76  1C03               	skipc
  6006  0E77  0008               	return
  6007                           
  6008                           ;LED_B1.c: 221: LED->Time = 0;
  6009  0E78  0A6A               	incf	_LED,w
  6010  0E79  0086               	movwf	6
  6011  0E7A  0187               	clrf	7
  6012  0E7B  3000               	movlw	0
  6013  0E7C  3FC0               	movwi [0]fsr1
  6014  0E7D  3FC1               	movwi [1]fsr1
  6015                           
  6016                           ;LED_B1.c: 238: if (led == 99) {
  6017  0E7E  0824               	movf	setLED_Main@led,w
  6018  0E7F  3A63               	xorlw	99
  6019  0E80  1D03               	skipz
  6020  0E81  0008               	return
  6021                           
  6022                           ;LED_B1.c: 239: RB5 = RB5 == 1 ? 0 : 1;
  6023  0E82  3020               	movlw	32
  6024  0E83  068D               	xorwf	13,f
  6025  0E84  0008               	return
  6026  0E85                     __end_of_setLED_Main:	
  6027                           
  6028                           	psect	text33
  6029  0B05                     __ptext33:	
  6030 ;; *************** function _LED_Initialization *****************
  6031 ;; Defined at:
  6032 ;;		line 31 in file "../src/LED_B1.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;		None               void
  6039 ;; Registers used:
  6040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6046 ;;      Params:         0       0       0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0       0       0       0
  6049 ;;      Totals:         0       0       0       0       0       0       0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    8
  6053 ;; This function calls:
  6054 ;;		_setLED_Initialization
  6055 ;; This function is called by:
  6056 ;;		_main
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           
  6061                           ;psect for function _LED_Initialization
  6062  0B05                     _LED_Initialization:	
  6063                           
  6064                           ;LED_B1.c: 42: setLED_Initialization(99);
  6065                           
  6066                           ;incstack = 0
  6067                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6068  0B05  3063               	movlw	99
  6069  0B06  318C  2413         	fcall	_setLED_Initialization
  6070  0B08  0008               	return
  6071  0B09                     __end_of_LED_Initialization:	
  6072                           
  6073                           	psect	text34
  6074  0C13                     __ptext34:	
  6075 ;; *************** function _setLED_Initialization *****************
  6076 ;; Defined at:
  6077 ;;		line 66 in file "../src/LED_B1.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  led             1    wreg     unsigned char 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  led             1    4[BANK0 ] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;		None               void
  6084 ;; Registers used:
  6085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6091 ;;      Params:         0       0       0       0       0       0       0       0
  6092 ;;      Locals:         0       1       0       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0
  6094 ;;      Totals:         0       1       0       0       0       0       0       0
  6095 ;;Total ram usage:        1 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    7
  6098 ;; This function calls:
  6099 ;;		_LedPointSelect
  6100 ;;		_setLED
  6101 ;; This function is called by:
  6102 ;;		_LED_Initialization
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _setLED_Initialization
  6108  0C13                     _setLED_Initialization:	
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6112                           ;setLED_Initialization@led stored from wreg
  6113  0C13  0020               	movlb	0	; select bank0
  6114  0C14  00A4               	movwf	setLED_Initialization@led
  6115                           
  6116                           ;LED_B1.c: 67: LedPointSelect(led);
  6117  0C15  0824               	movf	setLED_Initialization@led,w
  6118  0C16  318B  237D  318C   	fcall	_LedPointSelect
  6119                           
  6120                           ;LED_B1.c: 68: LED->Enable = 1;
  6121  0C19  0020               	movlb	0	; select bank0
  6122  0C1A  086A               	movf	_LED,w
  6123  0C1B  0086               	movwf	6
  6124  0C1C  0187               	clrf	7
  6125  0C1D  1401               	bsf	1,0
  6126                           
  6127                           ;LED_B1.c: 69: setLED(led, 0);
  6128  0C1E  01A2               	clrf	setLED@command
  6129  0C1F  0824               	movf	setLED_Initialization@led,w
  6130  0C20  318E  26B6         	fcall	_setLED
  6131  0C22  0008               	return
  6132  0C23                     __end_of_setLED_Initialization:	
  6133                           
  6134                           	psect	text35
  6135  0F51                     __ptext35:	
  6136 ;; *************** function _Flash_Memory_Main *****************
  6137 ;; Defined at:
  6138 ;;		line 901 in file "../src/MCU_B1.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;		None               void
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6152 ;;      Params:         0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0
  6154 ;;      Temps:          0       1       0       0       0       0       0       0
  6155 ;;      Totals:         0       1       0       0       0       0       0       0
  6156 ;;Total ram usage:        1 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    8
  6159 ;; This function calls:
  6160 ;;		_Flash_Memory_Modify
  6161 ;;		_getMain_LightsStatus
  6162 ;; This function is called by:
  6163 ;;		_main
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           
  6168                           ;psect for function _Flash_Memory_Main
  6169  0F51                     _Flash_Memory_Main:	
  6170                           
  6171                           ;MCU_B1.c: 902: if (Memory.Modify == 1) {
  6172                           
  6173                           ;incstack = 0
  6174                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6175  0F51  0022               	movlb	2	; select bank2
  6176  0F52  1C44               	btfss	(_Memory^(0+256)+36),0
  6177  0F53  0008               	return
  6178                           
  6179                           ;MCU_B1.c: 903: Memory.GO = getMain_LightsStatus() == 0 ? 1 : 0;
  6180  0F54  318D  25A2  318F   	fcall	_getMain_LightsStatus
  6181  0F57  3A00               	xorlw	0
  6182  0F58  3000               	movlw	0
  6183  0F59  1903               	skipnz
  6184  0F5A  3001               	movlw	1
  6185  0F5B  0020               	movlb	0	; select bank0
  6186  0F5C  00A9               	movwf	??_Flash_Memory_Main
  6187  0F5D  0DA9               	rlf	??_Flash_Memory_Main,f
  6188  0F5E  0022               	movlb	2	; select bank2
  6189  0F5F  0844               	movf	(_Memory^(0+256)+36),w
  6190  0F60  0020               	movlb	0	; select bank0
  6191  0F61  0629               	xorwf	??_Flash_Memory_Main,w
  6192  0F62  39FD               	andlw	-3
  6193  0F63  0629               	xorwf	??_Flash_Memory_Main,w
  6194  0F64  0022               	movlb	2	; select bank2
  6195  0F65  00C4               	movwf	(_Memory^(0+256)+36)
  6196                           
  6197                           ;MCU_B1.c: 904: if (Memory.GO == 1) {
  6198  0F66  1CC4               	btfss	(_Memory^(0+256)+36),1
  6199  0F67  2F81               	goto	l691
  6200                           
  6201                           ;MCU_B1.c: 905: Memory.Runtime = 1;
  6202  0F68  15C4               	bsf	(_Memory^(0+256)+36),3
  6203                           
  6204                           ;MCU_B1.c: 906: Memory.Time++;
  6205  0F69  3001               	movlw	1
  6206  0F6A  07C2               	addwf	(_Memory^(0+256)+34),f
  6207  0F6B  3000               	movlw	0
  6208  0F6C  3DC3               	addwfc	((_Memory+1)^(0+256)+34),f
  6209                           
  6210                           ;MCU_B1.c: 907: if (Memory.Time == 25) {
  6211  0F6D  3022               	movlw	34
  6212  0F6E  3E20               	addlw	_Memory& (0+255)
  6213  0F6F  0086               	movwf	6
  6214  0F70  3001               	movlw	1	; select bank2/3
  6215  0F71  0087               	movwf	7
  6216  0F72  3F40               	moviw [0]fsr1
  6217  0F73  3A19               	xorlw	25
  6218  0F74  1D03               	skipz
  6219  0F75  2F78               	goto	u3605
  6220  0F76  3F41               	moviw [1]fsr1
  6221  0F77  3A00               	xorlw	0
  6222  0F78                     u3605:	
  6223  0F78  1D03               	skipz
  6224  0F79  0008               	return
  6225                           
  6226                           ;MCU_B1.c: 908: Memory.Time = 0;
  6227  0F7A  01C2               	clrf	(_Memory^(0+256)+34)
  6228  0F7B  01C3               	clrf	((_Memory+1)^(0+256)+34)
  6229                           
  6230                           ;MCU_B1.c: 909: Memory.Modify = 0;
  6231  0F7C  1044               	bcf	(_Memory^(0+256)+36),0
  6232                           
  6233                           ;MCU_B1.c: 910: Memory.GO = 0;
  6234  0F7D  10C4               	bcf	(_Memory^(0+256)+36),1
  6235                           
  6236                           ;MCU_B1.c: 911: Flash_Memory_Modify();
  6237  0F7E  3186  26AC         	fcall	_Flash_Memory_Modify
  6238                           
  6239                           ;MCU_B1.c: 912: }
  6240                           ;MCU_B1.c: 913: } else {
  6241  0F80  0008               	return
  6242  0F81                     l691:	
  6243                           
  6244                           ;MCU_B1.c: 914: if (Memory.Runtime == 1) {
  6245  0F81  1DC4               	btfss	(_Memory^(0+256)+36),3
  6246  0F82  0008               	return
  6247                           
  6248                           ;MCU_B1.c: 915: Memory.Runtime = 0;
  6249  0F83  11C4               	bcf	(_Memory^(0+256)+36),3
  6250                           
  6251                           ;MCU_B1.c: 916: Memory.Time = 0;
  6252  0F84  01C2               	clrf	(_Memory^(0+256)+34)
  6253  0F85  01C3               	clrf	((_Memory+1)^(0+256)+34)
  6254  0F86  0008               	return
  6255  0F87                     __end_of_Flash_Memory_Main:	
  6256                           
  6257                           	psect	text36
  6258  0DA2                     __ptext36:	
  6259 ;; *************** function _getMain_LightsStatus *****************
  6260 ;; Defined at:
  6261 ;;		line 334 in file "../src/Main_B1.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;		None
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  i               2    6[BANK0 ] int 
  6266 ;;  status          1    8[BANK0 ] unsigned char 
  6267 ;;  count           1    5[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      unsigned char 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6277 ;;      Params:         0       0       0       0       0       0       0       0
  6278 ;;      Locals:         0       4       0       0       0       0       0       0
  6279 ;;      Temps:          0       1       0       0       0       0       0       0
  6280 ;;      Totals:         0       5       0       0       0       0       0       0
  6281 ;;Total ram usage:        5 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    7
  6284 ;; This function calls:
  6285 ;;		_getDimmerLights_Status
  6286 ;; This function is called by:
  6287 ;;		_Flash_Memory_Main
  6288 ;;		_setMain_Exception
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _getMain_LightsStatus
  6294  0DA2                     _getMain_LightsStatus:	
  6295                           
  6296                           ;Main_B1.c: 335: char status = 0;
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in _getMain_LightsStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6300  0DA2  0020               	movlb	0	; select bank0
  6301  0DA3  01A8               	clrf	getMain_LightsStatus@status
  6302                           
  6303                           ;Main_B1.c: 338: char count = 1;
  6304  0DA4  01A5               	clrf	getMain_LightsStatus@count
  6305  0DA5  0AA5               	incf	getMain_LightsStatus@count,f
  6306                           
  6307                           ;Main_B1.c: 347: for (int i = 0; i < count; i++) {
  6308  0DA6  01A6               	clrf	getMain_LightsStatus@i
  6309  0DA7  01A7               	clrf	getMain_LightsStatus@i+1
  6310  0DA8                     l3345:	
  6311  0DA8  0827               	movf	getMain_LightsStatus@i+1,w
  6312  0DA9  3A80               	xorlw	128
  6313  0DAA  00A4               	movwf	??_getMain_LightsStatus
  6314  0DAB  3080               	movlw	128
  6315  0DAC  0224               	subwf	??_getMain_LightsStatus,w
  6316  0DAD  1D03               	skipz
  6317  0DAE  2DB1               	goto	u2525
  6318  0DAF  0825               	movf	getMain_LightsStatus@count,w
  6319  0DB0  0226               	subwf	getMain_LightsStatus@i,w
  6320  0DB1                     u2525:	
  6321  0DB1  1803               	btfsc	3,0
  6322  0DB2  2DC9               	goto	l3347
  6323                           
  6324                           ;Main_B1.c: 348: if (status == 0) {
  6325  0DB3  0020               	movlb	0	; select bank0
  6326  0DB4  08A8               	movf	getMain_LightsStatus@status,f
  6327  0DB5  1D03               	skipz
  6328  0DB6  2DC4               	goto	l3343
  6329                           
  6330                           ;Main_B1.c: 353: status = getDimmerLights_Status(i + 1) == 1 ? 1 : 0;
  6331  0DB7  0826               	movf	getMain_LightsStatus@i,w
  6332  0DB8  3E01               	addlw	1
  6333  0DB9  318C  2404  318D   	fcall	_getDimmerLights_Status
  6334  0DBC  3A01               	xorlw	1
  6335  0DBD  3000               	movlw	0
  6336  0DBE  1903               	skipnz
  6337  0DBF  3001               	movlw	1
  6338  0DC0  0020               	movlb	0	; select bank0
  6339  0DC1  00A4               	movwf	??_getMain_LightsStatus
  6340  0DC2  0824               	movf	??_getMain_LightsStatus,w
  6341  0DC3  00A8               	movwf	getMain_LightsStatus@status
  6342  0DC4                     l3343:	
  6343  0DC4  3001               	movlw	1
  6344  0DC5  07A6               	addwf	getMain_LightsStatus@i,f
  6345  0DC6  3000               	movlw	0
  6346  0DC7  3DA7               	addwfc	getMain_LightsStatus@i+1,f
  6347  0DC8  2DA8               	goto	l3345
  6348  0DC9                     l3347:	
  6349                           
  6350                           ;Main_B1.c: 355: }
  6351                           ;Main_B1.c: 356: }
  6352                           ;Main_B1.c: 357: return status;
  6353  0DC9  0020               	movlb	0	; select bank0
  6354  0DCA  0828               	movf	getMain_LightsStatus@status,w
  6355  0DCB  0008               	return
  6356  0DCC                     __end_of_getMain_LightsStatus:	
  6357                           
  6358                           	psect	text37
  6359  0C04                     __ptext37:	
  6360 ;; *************** function _getDimmerLights_Status *****************
  6361 ;; Defined at:
  6362 ;;		line 453 in file "../src/Dimmer_B1.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  lights          1    wreg     unsigned char 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  lights          1    2[BANK0 ] unsigned char 
  6367 ;;  status          1    3[BANK0 ] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      unsigned char 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6377 ;;      Params:         0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       2       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0
  6380 ;;      Totals:         0       2       0       0       0       0       0       0
  6381 ;;Total ram usage:        2 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    6
  6384 ;; This function calls:
  6385 ;;		_DimmerLightsPointSelect
  6386 ;; This function is called by:
  6387 ;;		_setDimmerLights_ErrorClose
  6388 ;;		_getMain_LightsStatus
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           
  6393                           ;psect for function _getDimmerLights_Status
  6394  0C04                     _getDimmerLights_Status:	
  6395                           
  6396                           ;incstack = 0
  6397                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6398                           ;getDimmerLights_Status@lights stored from wreg
  6399  0C04  0020               	movlb	0	; select bank0
  6400  0C05  00A2               	movwf	getDimmerLights_Status@lights
  6401                           
  6402                           ;Dimmer_B1.c: 454: DimmerLightsPointSelect(lights);
  6403  0C06  0822               	movf	getDimmerLights_Status@lights,w
  6404  0C07  318B  2372         	fcall	_DimmerLightsPointSelect
  6405                           
  6406                           ;Dimmer_B1.c: 455: char status = DimmerLights->Status == 1 ? 1 : 0;
  6407  0C09  087A               	movf	_DimmerLights,w
  6408  0C0A  0086               	movwf	6
  6409  0C0B  0187               	clrf	7
  6410  0C0C  3000               	movlw	0
  6411  0C0D  1A81               	btfsc	1,5
  6412  0C0E  3001               	movlw	1
  6413  0C0F  0020               	movlb	0	; select bank0
  6414  0C10  00A3               	movwf	getDimmerLights_Status@status
  6415                           
  6416                           ;Dimmer_B1.c: 456: return status;
  6417  0C11  0823               	movf	getDimmerLights_Status@status,w
  6418  0C12  0008               	return
  6419  0C13                     __end_of_getDimmerLights_Status:	
  6420                           
  6421                           	psect	text38
  6422  06AC                     __ptext38:	
  6423 ;; *************** function _Flash_Memory_Modify *****************
  6424 ;; Defined at:
  6425 ;;		line 974 in file "../src/MCU_B1.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  i               1    5[BANK0 ] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6439 ;;      Params:         0       0       0       0       0       0       0       0
  6440 ;;      Locals:         0       1       0       0       0       0       0       0
  6441 ;;      Temps:          0       1       0       0       0       0       0       0
  6442 ;;      Totals:         0       2       0       0       0       0       0       0
  6443 ;;Total ram usage:        2 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    7
  6446 ;; This function calls:
  6447 ;;		_Flash_Memory_Erasing
  6448 ;;		_Flash_Memory_Read
  6449 ;;		_Flash_Memory_Write
  6450 ;;		_setMemory_Data
  6451 ;; This function is called by:
  6452 ;;		_Flash_Memory_Main
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _Flash_Memory_Modify
  6458  06AC                     _Flash_Memory_Modify:	
  6459                           
  6460                           ;MCU_B1.c: 975: char i = 0;
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6464  06AC  0020               	movlb	0	; select bank0
  6465  06AD  01A5               	clrf	Flash_Memory_Modify@i
  6466                           
  6467                           ;MCU_B1.c: 976: for (i = 0; i < 32; i++) {
  6468  06AE  01A5               	clrf	Flash_Memory_Modify@i
  6469  06AF  3020               	movlw	32
  6470  06B0  0225               	subwf	Flash_Memory_Modify@i,w
  6471  06B1  1803               	btfsc	3,0
  6472  06B2  2EC8               	goto	l3707
  6473  06B3                     l3701:	
  6474                           
  6475                           ;MCU_B1.c: 977: Memory.Data[i] = Flash_Memory_Read(i);
  6476  06B3  0825               	movf	Flash_Memory_Modify@i,w
  6477  06B4  318C  24A8  3186   	fcall	_Flash_Memory_Read
  6478  06B7  0020               	movlb	0	; select bank0
  6479  06B8  00A4               	movwf	??_Flash_Memory_Modify
  6480  06B9  0825               	movf	Flash_Memory_Modify@i,w
  6481  06BA  3E20               	addlw	_Memory& (0+255)
  6482  06BB  0086               	movwf	6
  6483  06BC  3001               	movlw	1	; select bank2/3
  6484  06BD  0087               	movwf	7
  6485  06BE  0824               	movf	??_Flash_Memory_Modify,w
  6486  06BF  0081               	movwf	1
  6487  06C0  3001               	movlw	1
  6488  06C1  00A4               	movwf	??_Flash_Memory_Modify
  6489  06C2  0824               	movf	??_Flash_Memory_Modify,w
  6490  06C3  07A5               	addwf	Flash_Memory_Modify@i,f
  6491  06C4  3020               	movlw	32
  6492  06C5  0225               	subwf	Flash_Memory_Modify@i,w
  6493  06C6  1C03               	skipc
  6494  06C7  2EB3               	goto	l3701
  6495  06C8                     l3707:	
  6496                           
  6497                           ;MCU_B1.c: 978: }
  6498                           ;MCU_B1.c: 979: setMemory_Data(0, product->Data[12]);
  6499  06C8  086D               	movf	_product,w
  6500  06C9  0086               	movwf	6
  6501  06CA  0187               	clrf	7
  6502  06CB  3F4C               	moviw [12]fsr1
  6503  06CC  00A0               	movwf	setMemory_Data@data
  6504  06CD  3000               	movlw	0
  6505  06CE  318B  23B6  3186   	fcall	_setMemory_Data
  6506                           
  6507                           ;MCU_B1.c: 980: setMemory_Data(1, product->Data[13]);
  6508  06D1  0020               	movlb	0	; select bank0
  6509  06D2  086D               	movf	_product,w
  6510  06D3  0086               	movwf	6
  6511  06D4  0187               	clrf	7
  6512  06D5  3F4D               	moviw [13]fsr1
  6513  06D6  00A0               	movwf	setMemory_Data@data
  6514  06D7  3001               	movlw	1
  6515  06D8  318B  23B6  3186   	fcall	_setMemory_Data
  6516                           
  6517                           ;MCU_B1.c: 981: setMemory_Data(2, product->Data[14]);
  6518  06DB  0020               	movlb	0	; select bank0
  6519  06DC  086D               	movf	_product,w
  6520  06DD  0086               	movwf	6
  6521  06DE  0187               	clrf	7
  6522  06DF  3F4E               	moviw [14]fsr1
  6523  06E0  00A0               	movwf	setMemory_Data@data
  6524  06E1  3002               	movlw	2
  6525  06E2  318B  23B6  3186   	fcall	_setMemory_Data
  6526                           
  6527                           ;MCU_B1.c: 987: if (Memory.LoopSave == 1) {
  6528  06E5  0022               	movlb	2	; select bank2
  6529  06E6  1D44               	btfss	(_Memory^(0+256)+36),2
  6530  06E7  2EEC               	goto	l714
  6531                           
  6532                           ;MCU_B1.c: 988: Memory.LoopSave = 0;
  6533  06E8  1144               	bcf	(_Memory^(0+256)+36),2
  6534                           
  6535                           ;MCU_B1.c: 989: myMain.FirstOpen = 0;
  6536  06E9  0021               	movlb	1	; select bank1
  6537  06EA  11A0               	bcf	_myMain^(0+128),3
  6538                           
  6539                           ;MCU_B1.c: 990: myMain.First = 0;
  6540  06EB  12A0               	bcf	_myMain^(0+128),5
  6541  06EC                     l714:	
  6542                           
  6543                           ;MCU_B1.c: 992: }
  6544                           ;MCU_B1.c: 993: GIE = 0;
  6545  06EC  138B               	bcf	11,7	;volatile
  6546                           
  6547                           ;MCU_B1.c: 994: Flash_Memory_Erasing();
  6548  06ED  318B  23C2  3186   	fcall	_Flash_Memory_Erasing
  6549                           
  6550                           ;MCU_B1.c: 995: Flash_Memory_Write();
  6551  06F0  318E  2627         	fcall	_Flash_Memory_Write
  6552                           
  6553                           ;MCU_B1.c: 996: GIE = 1;
  6554  06F2  178B               	bsf	11,7	;volatile
  6555  06F3  0008               	return
  6556  06F4                     __end_of_Flash_Memory_Modify:	
  6557                           
  6558                           	psect	text39
  6559  0BC2                     __ptext39:	
  6560 ;; *************** function _Flash_Memory_Erasing *****************
  6561 ;; Defined at:
  6562 ;;		line 963 in file "../src/MCU_B1.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;		None               void
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6576 ;;      Params:         0       0       0       0       0       0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0
  6578 ;;      Temps:          0       0       0       0       0       0       0       0
  6579 ;;      Totals:         0       0       0       0       0       0       0       0
  6580 ;;Total ram usage:        0 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    6
  6583 ;; This function calls:
  6584 ;;		_Flash_Memory_Unlock
  6585 ;; This function is called by:
  6586 ;;		_Flash_Memory_Modify
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function _Flash_Memory_Erasing
  6592  0BC2                     _Flash_Memory_Erasing:	
  6593                           
  6594                           ;MCU_B1.c: 964: CFGS = 0;
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  6598  0BC2  0023               	movlb	3	; select bank3
  6599  0BC3  1315               	bcf	21,6	;volatile
  6600                           
  6601                           ;MCU_B1.c: 965: PMADRH = 0x30;
  6602  0BC4  3030               	movlw	48
  6603  0BC5  0092               	movwf	18	;volatile
  6604                           
  6605                           ;MCU_B1.c: 966: PMADRL = 0x00;
  6606  0BC6  0191               	clrf	17	;volatile
  6607                           
  6608                           ;MCU_B1.c: 967: FREE = 1;
  6609  0BC7  1615               	bsf	21,4	;volatile
  6610                           
  6611                           ;MCU_B1.c: 968: WREN = 1;
  6612  0BC8  1515               	bsf	21,2	;volatile
  6613                           
  6614                           ;MCU_B1.c: 969: Flash_Memory_Unlock();
  6615  0BC9  318B  232D         	fcall	_Flash_Memory_Unlock
  6616                           
  6617                           ;MCU_B1.c: 970: WREN = 0;
  6618  0BCB  0023               	movlb	3	; select bank3
  6619  0BCC  1115               	bcf	21,2	;volatile
  6620  0BCD  0008               	return
  6621  0BCE                     __end_of_Flash_Memory_Erasing:	
  6622                           
  6623                           	psect	text40
  6624  0298                     __ptext40:	
  6625 ;; *************** function _Flash_Memory_Initialization *****************
  6626 ;; Defined at:
  6627 ;;		line 860 in file "../src/MCU_B1.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  i               1   49[BANK0 ] unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;		None               void
  6634 ;; Registers used:
  6635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6641 ;;      Params:         0       0       0       0       0       0       0       0
  6642 ;;      Locals:         0       1       0       0       0       0       0       0
  6643 ;;      Temps:          0       1       0       0       0       0       0       0
  6644 ;;      Totals:         0       2       0       0       0       0       0       0
  6645 ;;Total ram usage:        2 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:    8
  6648 ;; This function calls:
  6649 ;;		_Flash_Memory_Read
  6650 ;;		_Flash_Memory_Write
  6651 ;;		_setMemory_Data
  6652 ;;		_setPercentValue
  6653 ;; This function is called by:
  6654 ;;		_main
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           
  6659                           ;psect for function _Flash_Memory_Initialization
  6660  0298                     _Flash_Memory_Initialization:	
  6661                           
  6662                           ;MCU_B1.c: 861: char i = 0;
  6663                           
  6664                           ;incstack = 0
  6665                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6666  0298  0020               	movlb	0	; select bank0
  6667  0299  01D1               	clrf	Flash_Memory_Initialization@i
  6668                           
  6669                           ;MCU_B1.c: 862: if (Flash_Memory_Read(31) == 0xaa) {
  6670  029A  301F               	movlw	31
  6671  029B  318C  24A8  3182   	fcall	_Flash_Memory_Read
  6672  029E  3AAA               	xorlw	170
  6673  029F  1D03               	skipz
  6674  02A0  2B01               	goto	l3961
  6675                           
  6676                           ;MCU_B1.c: 863: product->Data[12] = Flash_Memory_Read(0);
  6677  02A1  3000               	movlw	0
  6678  02A2  318C  24A8  3182   	fcall	_Flash_Memory_Read
  6679  02A5  0020               	movlb	0	; select bank0
  6680  02A6  00D0               	movwf	??_Flash_Memory_Initialization
  6681  02A7  086D               	movf	_product,w
  6682  02A8  3E0C               	addlw	12
  6683  02A9  0086               	movwf	6
  6684  02AA  0187               	clrf	7
  6685  02AB  0850               	movf	??_Flash_Memory_Initialization,w
  6686  02AC  0081               	movwf	1
  6687                           
  6688                           ;MCU_B1.c: 864: product->Data[13] = Flash_Memory_Read(1);
  6689  02AD  3001               	movlw	1
  6690  02AE  318C  24A8  3182   	fcall	_Flash_Memory_Read
  6691  02B1  0020               	movlb	0	; select bank0
  6692  02B2  00D0               	movwf	??_Flash_Memory_Initialization
  6693  02B3  086D               	movf	_product,w
  6694  02B4  3E0D               	addlw	13
  6695  02B5  0086               	movwf	6
  6696  02B6  0187               	clrf	7
  6697  02B7  0850               	movf	??_Flash_Memory_Initialization,w
  6698  02B8  0081               	movwf	1
  6699                           
  6700                           ;MCU_B1.c: 865: product->Data[14] = Flash_Memory_Read(2);
  6701  02B9  3002               	movlw	2
  6702  02BA  318C  24A8  3182   	fcall	_Flash_Memory_Read
  6703  02BD  0020               	movlb	0	; select bank0
  6704  02BE  00D0               	movwf	??_Flash_Memory_Initialization
  6705  02BF  086D               	movf	_product,w
  6706  02C0  3E0E               	addlw	14
  6707  02C1  0086               	movwf	6
  6708  02C2  0187               	clrf	7
  6709  02C3  0850               	movf	??_Flash_Memory_Initialization,w
  6710  02C4  0081               	movwf	1
  6711                           
  6712                           ;MCU_B1.c: 871: i = setPercentValue(((char)(65*0.8)));
  6713  02C5  3034               	movlw	52
  6714  02C6  3186  26F4  3182   	fcall	_setPercentValue
  6715  02C9  0020               	movlb	0	; select bank0
  6716  02CA  00D0               	movwf	??_Flash_Memory_Initialization
  6717  02CB  0850               	movf	??_Flash_Memory_Initialization,w
  6718  02CC  00D1               	movwf	Flash_Memory_Initialization@i
  6719                           
  6720                           ;MCU_B1.c: 872: product->Data[21] = i;
  6721  02CD  0851               	movf	Flash_Memory_Initialization@i,w
  6722  02CE  00D0               	movwf	??_Flash_Memory_Initialization
  6723  02CF  086D               	movf	_product,w
  6724  02D0  3E15               	addlw	21
  6725  02D1  0086               	movwf	6
  6726  02D2  0187               	clrf	7
  6727  02D3  0850               	movf	??_Flash_Memory_Initialization,w
  6728  02D4  0081               	movwf	1
  6729                           
  6730                           ;MCU_B1.c: 873: product->Data[22] = i;
  6731  02D5  0851               	movf	Flash_Memory_Initialization@i,w
  6732  02D6  00D0               	movwf	??_Flash_Memory_Initialization
  6733  02D7  086D               	movf	_product,w
  6734  02D8  3E16               	addlw	22
  6735  02D9  0086               	movwf	6
  6736  02DA  0187               	clrf	7
  6737  02DB  0850               	movf	??_Flash_Memory_Initialization,w
  6738  02DC  0081               	movwf	1
  6739                           
  6740                           ;MCU_B1.c: 874: product->Data[23] = i;
  6741  02DD  0851               	movf	Flash_Memory_Initialization@i,w
  6742  02DE  00D0               	movwf	??_Flash_Memory_Initialization
  6743  02DF  086D               	movf	_product,w
  6744  02E0  3E17               	addlw	23
  6745  02E1  0086               	movwf	6
  6746  02E2  0187               	clrf	7
  6747  02E3  0850               	movf	??_Flash_Memory_Initialization,w
  6748  02E4  0081               	movwf	1
  6749                           
  6750                           ;MCU_B1.c: 876: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  6751  02E5  086D               	movf	_product,w
  6752  02E6  3E0C               	addlw	12
  6753  02E7  0086               	movwf	6
  6754  02E8  0187               	clrf	7
  6755  02E9  0801               	movf	1,w
  6756  02EA  3AFF               	xorlw	255
  6757  02EB  1D03               	skipz
  6758  02EC  0008               	return
  6759  02ED  086D               	movf	_product,w
  6760  02EE  3E0D               	addlw	13
  6761  02EF  0086               	movwf	6
  6762  02F0  0187               	clrf	7
  6763  02F1  0801               	movf	1,w
  6764  02F2  3AFF               	xorlw	255
  6765  02F3  1D03               	skipz
  6766  02F4  0008               	return
  6767  02F5  086D               	movf	_product,w
  6768  02F6  3E0E               	addlw	14
  6769  02F7  0086               	movwf	6
  6770  02F8  0187               	clrf	7
  6771  02F9  0801               	movf	1,w
  6772  02FA  3AFF               	xorlw	255
  6773  02FB  1D03               	skipz
  6774  02FC  0008               	return
  6775                           
  6776                           ;MCU_B1.c: 877: myMain.FirstOpen = 1;
  6777  02FD  0021               	movlb	1	; select bank1
  6778  02FE  15A0               	bsf	_myMain^(0+128),3
  6779                           
  6780                           ;MCU_B1.c: 878: myMain.First = 1;
  6781  02FF  16A0               	bsf	_myMain^(0+128),5
  6782                           
  6783                           ;MCU_B1.c: 879: }
  6784                           ;MCU_B1.c: 880: } else {
  6785  0300  0008               	return
  6786  0301                     l3961:	
  6787                           
  6788                           ;MCU_B1.c: 881: i = setPercentValue(((char)(65*0.8)));
  6789  0301  3034               	movlw	52
  6790  0302  3186  26F4  3182   	fcall	_setPercentValue
  6791  0305  0020               	movlb	0	; select bank0
  6792  0306  00D0               	movwf	??_Flash_Memory_Initialization
  6793  0307  0850               	movf	??_Flash_Memory_Initialization,w
  6794  0308  00D1               	movwf	Flash_Memory_Initialization@i
  6795                           
  6796                           ;MCU_B1.c: 882: setMemory_Data(0, 0xff);
  6797  0309  30FF               	movlw	255
  6798  030A  00D0               	movwf	??_Flash_Memory_Initialization
  6799  030B  0850               	movf	??_Flash_Memory_Initialization,w
  6800  030C  00A0               	movwf	setMemory_Data@data
  6801  030D  3000               	movlw	0
  6802  030E  318B  23B6  3182   	fcall	_setMemory_Data
  6803                           
  6804                           ;MCU_B1.c: 883: setMemory_Data(1, 0xff);
  6805  0311  30FF               	movlw	255
  6806  0312  0020               	movlb	0	; select bank0
  6807  0313  00D0               	movwf	??_Flash_Memory_Initialization
  6808  0314  0850               	movf	??_Flash_Memory_Initialization,w
  6809  0315  00A0               	movwf	setMemory_Data@data
  6810  0316  3001               	movlw	1
  6811  0317  318B  23B6  3182   	fcall	_setMemory_Data
  6812                           
  6813                           ;MCU_B1.c: 884: setMemory_Data(2, 0xff);
  6814  031A  30FF               	movlw	255
  6815  031B  0020               	movlb	0	; select bank0
  6816  031C  00D0               	movwf	??_Flash_Memory_Initialization
  6817  031D  0850               	movf	??_Flash_Memory_Initialization,w
  6818  031E  00A0               	movwf	setMemory_Data@data
  6819  031F  3002               	movlw	2
  6820  0320  318B  23B6  3182   	fcall	_setMemory_Data
  6821                           
  6822                           ;MCU_B1.c: 885: setMemory_Data(3, 0xff);
  6823  0323  30FF               	movlw	255
  6824  0324  0020               	movlb	0	; select bank0
  6825  0325  00D0               	movwf	??_Flash_Memory_Initialization
  6826  0326  0850               	movf	??_Flash_Memory_Initialization,w
  6827  0327  00A0               	movwf	setMemory_Data@data
  6828  0328  3003               	movlw	3
  6829  0329  318B  23B6  3182   	fcall	_setMemory_Data
  6830                           
  6831                           ;MCU_B1.c: 886: setMemory_Data(4, 0xff);
  6832  032C  30FF               	movlw	255
  6833  032D  0020               	movlb	0	; select bank0
  6834  032E  00D0               	movwf	??_Flash_Memory_Initialization
  6835  032F  0850               	movf	??_Flash_Memory_Initialization,w
  6836  0330  00A0               	movwf	setMemory_Data@data
  6837  0331  3004               	movlw	4
  6838  0332  318B  23B6  3182   	fcall	_setMemory_Data
  6839                           
  6840                           ;MCU_B1.c: 887: setMemory_Data(5, 0xff);
  6841  0335  30FF               	movlw	255
  6842  0336  0020               	movlb	0	; select bank0
  6843  0337  00D0               	movwf	??_Flash_Memory_Initialization
  6844  0338  0850               	movf	??_Flash_Memory_Initialization,w
  6845  0339  00A0               	movwf	setMemory_Data@data
  6846  033A  3005               	movlw	5
  6847  033B  318B  23B6  3182   	fcall	_setMemory_Data
  6848                           
  6849                           ;MCU_B1.c: 888: setMemory_Data(31, 0xaa);
  6850  033E  30AA               	movlw	170
  6851  033F  0020               	movlb	0	; select bank0
  6852  0340  00D0               	movwf	??_Flash_Memory_Initialization
  6853  0341  0850               	movf	??_Flash_Memory_Initialization,w
  6854  0342  00A0               	movwf	setMemory_Data@data
  6855  0343  301F               	movlw	31
  6856  0344  318B  23B6  3182   	fcall	_setMemory_Data
  6857                           
  6858                           ;MCU_B1.c: 889: product->Data[21] = i;
  6859  0347  0020               	movlb	0	; select bank0
  6860  0348  0851               	movf	Flash_Memory_Initialization@i,w
  6861  0349  00D0               	movwf	??_Flash_Memory_Initialization
  6862  034A  086D               	movf	_product,w
  6863  034B  3E15               	addlw	21
  6864  034C  0086               	movwf	6
  6865  034D  0187               	clrf	7
  6866  034E  0850               	movf	??_Flash_Memory_Initialization,w
  6867  034F  0081               	movwf	1
  6868                           
  6869                           ;MCU_B1.c: 890: product->Data[22] = i;
  6870  0350  0851               	movf	Flash_Memory_Initialization@i,w
  6871  0351  00D0               	movwf	??_Flash_Memory_Initialization
  6872  0352  086D               	movf	_product,w
  6873  0353  3E16               	addlw	22
  6874  0354  0086               	movwf	6
  6875  0355  0187               	clrf	7
  6876  0356  0850               	movf	??_Flash_Memory_Initialization,w
  6877  0357  0081               	movwf	1
  6878                           
  6879                           ;MCU_B1.c: 891: product->Data[23] = i;
  6880  0358  0851               	movf	Flash_Memory_Initialization@i,w
  6881  0359  00D0               	movwf	??_Flash_Memory_Initialization
  6882  035A  086D               	movf	_product,w
  6883  035B  3E17               	addlw	23
  6884  035C  0086               	movwf	6
  6885  035D  0187               	clrf	7
  6886  035E  0850               	movf	??_Flash_Memory_Initialization,w
  6887  035F  0081               	movwf	1
  6888                           
  6889                           ;MCU_B1.c: 892: GIE = 0;
  6890  0360  138B               	bcf	11,7	;volatile
  6891                           
  6892                           ;MCU_B1.c: 893: Flash_Memory_Write();
  6893  0361  318E  2627         	fcall	_Flash_Memory_Write
  6894                           
  6895                           ;MCU_B1.c: 894: GIE = 1;
  6896  0363  178B               	bsf	11,7	;volatile
  6897                           
  6898                           ;MCU_B1.c: 895: myMain.FirstOpen = 1;
  6899  0364  0021               	movlb	1	; select bank1
  6900  0365  15A0               	bsf	_myMain^(0+128),3
  6901                           
  6902                           ;MCU_B1.c: 896: myMain.First = 1;
  6903  0366  16A0               	bsf	_myMain^(0+128),5
  6904  0367  0008               	return
  6905  0368                     __end_of_Flash_Memory_Initialization:	
  6906                           
  6907                           	psect	text41
  6908  06F4                     __ptext41:	
  6909 ;; *************** function _setPercentValue *****************
  6910 ;; Defined at:
  6911 ;;		line 883 in file "../src/Dimmer_B1.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  value           1    wreg     unsigned char 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  value           1   44[BANK0 ] unsigned char 
  6916 ;;  i               3   45[BANK0 ] float 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      unsigned char 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0, pclath, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6926 ;;      Params:         0       0       0       0       0       0       0       0
  6927 ;;      Locals:         0       4       0       0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0
  6929 ;;      Totals:         0       4       0       0       0       0       0       0
  6930 ;;Total ram usage:        4 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    7
  6933 ;; This function calls:
  6934 ;;		___awtoft
  6935 ;;		___ftdiv
  6936 ;;		___fttol
  6937 ;; This function is called by:
  6938 ;;		_Flash_Memory_Initialization
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           
  6943                           ;psect for function _setPercentValue
  6944  06F4                     _setPercentValue:	
  6945                           
  6946                           ;incstack = 0
  6947                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  6948                           ;setPercentValue@value stored from wreg
  6949  06F4  0020               	movlb	0	; select bank0
  6950  06F5  00CC               	movwf	setPercentValue@value
  6951                           
  6952                           ;Dimmer_B1.c: 891: float i = ((char)(65*0.8)) - ((char)(25*0.8));
  6953  06F6  3000               	movlw	0
  6954  06F7  00CD               	movwf	setPercentValue@i
  6955  06F8  3000               	movlw	0
  6956  06F9  00CE               	movwf	setPercentValue@i+1
  6957  06FA  3042               	movlw	66
  6958  06FB  00CF               	movwf	setPercentValue@i+2
  6959                           
  6960                           ;Dimmer_B1.c: 892: i /= 100;
  6961  06FC  3000               	movlw	0
  6962  06FD  00AE               	movwf	___ftdiv@f2
  6963  06FE  30C8               	movlw	200
  6964  06FF  00AF               	movwf	___ftdiv@f2+1
  6965  0700  3042               	movlw	66
  6966  0701  00B0               	movwf	___ftdiv@f2+2
  6967  0702  084D               	movf	setPercentValue@i,w
  6968  0703  00B1               	movwf	___ftdiv@f1
  6969  0704  084E               	movf	setPercentValue@i+1,w
  6970  0705  00B2               	movwf	___ftdiv@f1+1
  6971  0706  084F               	movf	setPercentValue@i+2,w
  6972  0707  00B3               	movwf	___ftdiv@f1+2
  6973  0708  3183  2368  3186   	fcall	___ftdiv
  6974  070B  0020               	movlb	0	; select bank0
  6975  070C  082E               	movf	?___ftdiv,w
  6976  070D  00CD               	movwf	setPercentValue@i
  6977  070E  082F               	movf	?___ftdiv+1,w
  6978  070F  00CE               	movwf	setPercentValue@i+1
  6979  0710  0830               	movf	?___ftdiv+2,w
  6980  0711  00CF               	movwf	setPercentValue@i+2
  6981                           
  6982                           ;Dimmer_B1.c: 894: return (100 - (char) ((value - ((char)(65*0.8))) / i));
  6983  0712  084C               	movf	setPercentValue@value,w
  6984  0713  3ECC               	addlw	204
  6985  0714  00A8               	movwf	___awtoft@c
  6986  0715  30FF               	movlw	255
  6987  0716  1803               	skipnc
  6988  0717  3000               	movlw	0
  6989  0718  00A9               	movwf	___awtoft@c+1
  6990  0719  318D  2539  3186   	fcall	___awtoft
  6991  071C  0020               	movlb	0	; select bank0
  6992  071D  0828               	movf	?___awtoft,w
  6993  071E  00B1               	movwf	___ftdiv@f1
  6994  071F  0829               	movf	?___awtoft+1,w
  6995  0720  00B2               	movwf	___ftdiv@f1+1
  6996  0721  082A               	movf	?___awtoft+2,w
  6997  0722  00B3               	movwf	___ftdiv@f1+2
  6998  0723  084D               	movf	setPercentValue@i,w
  6999  0724  00AE               	movwf	___ftdiv@f2
  7000  0725  084E               	movf	setPercentValue@i+1,w
  7001  0726  00AF               	movwf	___ftdiv@f2+1
  7002  0727  084F               	movf	setPercentValue@i+2,w
  7003  0728  00B0               	movwf	___ftdiv@f2+2
  7004  0729  3183  2368  3186   	fcall	___ftdiv
  7005  072C  0020               	movlb	0	; select bank0
  7006  072D  082E               	movf	?___ftdiv,w
  7007  072E  00BE               	movwf	___fttol@f1
  7008  072F  082F               	movf	?___ftdiv+1,w
  7009  0730  00BF               	movwf	___fttol@f1+1
  7010  0731  0830               	movf	?___ftdiv+2,w
  7011  0732  00C0               	movwf	___fttol@f1+2
  7012  0733  3184  2411         	fcall	___fttol
  7013  0735  0020               	movlb	0	; select bank0
  7014  0736  033E               	decf	?___fttol,w
  7015  0737  3AFF               	xorlw	255
  7016  0738  3E64               	addlw	100
  7017  0739  0008               	return
  7018  073A                     __end_of_setPercentValue:	
  7019                           
  7020                           	psect	text42
  7021  0411                     __ptext42:	
  7022 ;; *************** function ___fttol *****************
  7023 ;; Defined at:
  7024 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  f1              3   30[BANK0 ] float 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  lval            4   39[BANK0 ] unsigned long 
  7029 ;;  exp1            1   43[BANK0 ] unsigned char 
  7030 ;;  sign1           1   38[BANK0 ] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  4   30[BANK0 ] long 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7040 ;;      Params:         0       4       0       0       0       0       0       0
  7041 ;;      Locals:         0       6       0       0       0       0       0       0
  7042 ;;      Temps:          0       4       0       0       0       0       0       0
  7043 ;;      Totals:         0      14       0       0       0       0       0       0
  7044 ;;Total ram usage:       14 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    5
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_setPercentValue
  7051 ;;		_getPercentValue
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function ___fttol
  7057  0411                     ___fttol:	
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7061  0411  0020               	movlb	0	; select bank0
  7062  0412  083E               	movf	___fttol@f1,w
  7063  0413  00C2               	movwf	??___fttol
  7064  0414  083F               	movf	___fttol@f1+1,w
  7065  0415  00C3               	movwf	??___fttol+1
  7066  0416  0840               	movf	___fttol@f1+2,w
  7067  0417  00C4               	movwf	??___fttol+2
  7068  0418  1003               	clrc
  7069  0419  0D43               	rlf	??___fttol+1,w
  7070  041A  0D44               	rlf	??___fttol+2,w
  7071  041B  00C5               	movwf	??___fttol+3
  7072  041C  0845               	movf	??___fttol+3,w
  7073  041D  00CB               	movwf	___fttol@exp1
  7074  041E  08CB               	movf	___fttol@exp1,f
  7075  041F  1D03               	skipz
  7076  0420  2C2A               	goto	l3449
  7077  0421  3000               	movlw	0
  7078  0422  00C1               	movwf	?___fttol+3
  7079  0423  3000               	movlw	0
  7080  0424  00C0               	movwf	?___fttol+2
  7081  0425  3000               	movlw	0
  7082  0426  00BF               	movwf	?___fttol+1
  7083  0427  3000               	movlw	0
  7084  0428  00BE               	movwf	?___fttol
  7085  0429  0008               	return
  7086  042A                     l3449:	
  7087  042A  083E               	movf	___fttol@f1,w
  7088  042B  00C2               	movwf	??___fttol
  7089  042C  083F               	movf	___fttol@f1+1,w
  7090  042D  00C3               	movwf	??___fttol+1
  7091  042E  0840               	movf	___fttol@f1+2,w
  7092  042F  00C4               	movwf	??___fttol+2
  7093  0430  3017               	movlw	23
  7094  0431                     u2685:	
  7095  0431  36C4               	lsrf	??___fttol+2,f
  7096  0432  0CC3               	rrf	??___fttol+1,f
  7097  0433  0CC2               	rrf	??___fttol,f
  7098  0434  0B89               	decfsz	9,f
  7099  0435  2C31               	goto	u2685
  7100  0436  0842               	movf	??___fttol,w
  7101  0437  00C5               	movwf	??___fttol+3
  7102  0438  0845               	movf	??___fttol+3,w
  7103  0439  00C6               	movwf	___fttol@sign1
  7104  043A  17BF               	bsf	___fttol@f1+1,7
  7105  043B  30FF               	movlw	255
  7106  043C  05BE               	andwf	___fttol@f1,f
  7107  043D  30FF               	movlw	255
  7108  043E  05BF               	andwf	___fttol@f1+1,f
  7109  043F  3000               	movlw	0
  7110  0440  05C0               	andwf	___fttol@f1+2,f
  7111  0441  083E               	movf	___fttol@f1,w
  7112  0442  00C7               	movwf	___fttol@lval
  7113  0443  083F               	movf	___fttol@f1+1,w
  7114  0444  00C8               	movwf	___fttol@lval+1
  7115  0445  0840               	movf	___fttol@f1+2,w
  7116  0446  00C9               	movwf	___fttol@lval+2
  7117  0447  01CA               	clrf	___fttol@lval+3
  7118  0448  308E               	movlw	142
  7119  0449  02CB               	subwf	___fttol@exp1,f
  7120  044A  1FCB               	btfss	___fttol@exp1,7
  7121  044B  2C68               	goto	l3469
  7122  044C  084B               	movf	___fttol@exp1,w
  7123  044D  3A80               	xorlw	128
  7124  044E  3E8F               	addlw	143
  7125  044F  1803               	skipnc
  7126  0450  2C5A               	goto	l3467
  7127  0451  3000               	movlw	0
  7128  0452  00C1               	movwf	?___fttol+3
  7129  0453  3000               	movlw	0
  7130  0454  00C0               	movwf	?___fttol+2
  7131  0455  3000               	movlw	0
  7132  0456  00BF               	movwf	?___fttol+1
  7133  0457  3000               	movlw	0
  7134  0458  00BE               	movwf	?___fttol
  7135  0459  0008               	return
  7136  045A                     l3467:	
  7137  045A  3001               	movlw	1
  7138  045B                     u2715:	
  7139  045B  36CA               	lsrf	___fttol@lval+3,f
  7140  045C  0CC9               	rrf	___fttol@lval+2,f
  7141  045D  0CC8               	rrf	___fttol@lval+1,f
  7142  045E  0CC7               	rrf	___fttol@lval,f
  7143  045F  0B89               	decfsz	9,f
  7144  0460  2C5B               	goto	u2715
  7145  0461  3001               	movlw	1
  7146  0462  00C2               	movwf	??___fttol
  7147  0463  0842               	movf	??___fttol,w
  7148  0464  07CB               	addwf	___fttol@exp1,f
  7149  0465  1903               	btfsc	3,2
  7150  0466  2C81               	goto	l3479
  7151  0467  2C5A               	goto	l3467
  7152  0468                     l3469:	
  7153  0468  3018               	movlw	24
  7154  0469  024B               	subwf	___fttol@exp1,w
  7155  046A  1C03               	skipc
  7156  046B  2C7E               	goto	l3477
  7157  046C  3000               	movlw	0
  7158  046D  00C1               	movwf	?___fttol+3
  7159  046E  3000               	movlw	0
  7160  046F  00C0               	movwf	?___fttol+2
  7161  0470  3000               	movlw	0
  7162  0471  00BF               	movwf	?___fttol+1
  7163  0472  3000               	movlw	0
  7164  0473  00BE               	movwf	?___fttol
  7165  0474  0008               	return
  7166  0475                     l3475:	
  7167  0475  3001               	movlw	1
  7168  0476                     u2745:	
  7169  0476  35C7               	lslf	___fttol@lval,f
  7170  0477  0DC8               	rlf	___fttol@lval+1,f
  7171  0478  0DC9               	rlf	___fttol@lval+2,f
  7172  0479  0DCA               	rlf	___fttol@lval+3,f
  7173  047A  0B89               	decfsz	9,f
  7174  047B  2C76               	goto	u2745
  7175  047C  3001               	movlw	1
  7176  047D  02CB               	subwf	___fttol@exp1,f
  7177  047E                     l3477:	
  7178  047E  08CB               	movf	___fttol@exp1,f
  7179  047F  1D03               	skipz
  7180  0480  2C75               	goto	l3475
  7181  0481                     l3479:	
  7182  0481  0846               	movf	___fttol@sign1,w
  7183  0482  1903               	btfsc	3,2
  7184  0483  2C8F               	goto	l3483
  7185  0484  09C7               	comf	___fttol@lval,f
  7186  0485  09C8               	comf	___fttol@lval+1,f
  7187  0486  09C9               	comf	___fttol@lval+2,f
  7188  0487  09CA               	comf	___fttol@lval+3,f
  7189  0488  0AC7               	incf	___fttol@lval,f
  7190  0489  1903               	skipnz
  7191  048A  0AC8               	incf	___fttol@lval+1,f
  7192  048B  1903               	skipnz
  7193  048C  0AC9               	incf	___fttol@lval+2,f
  7194  048D  1903               	skipnz
  7195  048E  0ACA               	incf	___fttol@lval+3,f
  7196  048F                     l3483:	
  7197  048F  084A               	movf	___fttol@lval+3,w
  7198  0490  00C1               	movwf	?___fttol+3
  7199  0491  0849               	movf	___fttol@lval+2,w
  7200  0492  00C0               	movwf	?___fttol+2
  7201  0493  0848               	movf	___fttol@lval+1,w
  7202  0494  00BF               	movwf	?___fttol+1
  7203  0495  0847               	movf	___fttol@lval,w
  7204  0496  00BE               	movwf	?___fttol
  7205  0497  0008               	return
  7206  0498                     __end_of___fttol:	
  7207                           
  7208                           	psect	text43
  7209  0368                     __ptext43:	
  7210 ;; *************** function ___ftdiv *****************
  7211 ;; Defined at:
  7212 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  f2              3   14[BANK0 ] float 
  7215 ;;  f1              3   17[BANK0 ] float 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  f3              3   25[BANK0 ] float 
  7218 ;;  sign            1   29[BANK0 ] unsigned char 
  7219 ;;  exp             1   28[BANK0 ] unsigned char 
  7220 ;;  cntr            1   24[BANK0 ] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  3   14[BANK0 ] float 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7230 ;;      Params:         0       6       0       0       0       0       0       0
  7231 ;;      Locals:         0       6       0       0       0       0       0       0
  7232 ;;      Temps:          0       4       0       0       0       0       0       0
  7233 ;;      Totals:         0      16       0       0       0       0       0       0
  7234 ;;Total ram usage:       16 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    6
  7237 ;; This function calls:
  7238 ;;		___ftpack
  7239 ;; This function is called by:
  7240 ;;		_setPercentValue
  7241 ;;		_getPercentValue
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function ___ftdiv
  7247  0368                     ___ftdiv:	
  7248                           
  7249                           ;incstack = 0
  7250                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7251  0368  0020               	movlb	0	; select bank0
  7252  0369  0831               	movf	___ftdiv@f1,w
  7253  036A  00B4               	movwf	??___ftdiv
  7254  036B  0832               	movf	___ftdiv@f1+1,w
  7255  036C  00B5               	movwf	??___ftdiv+1
  7256  036D  0833               	movf	___ftdiv@f1+2,w
  7257  036E  00B6               	movwf	??___ftdiv+2
  7258  036F  1003               	clrc
  7259  0370  0D35               	rlf	??___ftdiv+1,w
  7260  0371  0D36               	rlf	??___ftdiv+2,w
  7261  0372  00B7               	movwf	??___ftdiv+3
  7262  0373  0837               	movf	??___ftdiv+3,w
  7263  0374  00BC               	movwf	___ftdiv@exp
  7264  0375  08BC               	movf	___ftdiv@exp,f
  7265  0376  1D03               	skipz
  7266  0377  2B7F               	goto	l3407
  7267  0378  3000               	movlw	0
  7268  0379  00AE               	movwf	?___ftdiv
  7269  037A  3000               	movlw	0
  7270  037B  00AF               	movwf	?___ftdiv+1
  7271  037C  3000               	movlw	0
  7272  037D  00B0               	movwf	?___ftdiv+2
  7273  037E  0008               	return
  7274  037F                     l3407:	
  7275  037F  082E               	movf	___ftdiv@f2,w
  7276  0380  00B4               	movwf	??___ftdiv
  7277  0381  082F               	movf	___ftdiv@f2+1,w
  7278  0382  00B5               	movwf	??___ftdiv+1
  7279  0383  0830               	movf	___ftdiv@f2+2,w
  7280  0384  00B6               	movwf	??___ftdiv+2
  7281  0385  1003               	clrc
  7282  0386  0D35               	rlf	??___ftdiv+1,w
  7283  0387  0D36               	rlf	??___ftdiv+2,w
  7284  0388  00B7               	movwf	??___ftdiv+3
  7285  0389  0837               	movf	??___ftdiv+3,w
  7286  038A  00BD               	movwf	___ftdiv@sign
  7287  038B  08BD               	movf	___ftdiv@sign,f
  7288  038C  1D03               	skipz
  7289  038D  2B95               	goto	l3413
  7290  038E  3000               	movlw	0
  7291  038F  00AE               	movwf	?___ftdiv
  7292  0390  3000               	movlw	0
  7293  0391  00AF               	movwf	?___ftdiv+1
  7294  0392  3000               	movlw	0
  7295  0393  00B0               	movwf	?___ftdiv+2
  7296  0394  0008               	return
  7297  0395                     l3413:	
  7298  0395  3000               	movlw	0
  7299  0396  00B9               	movwf	___ftdiv@f3
  7300  0397  3000               	movlw	0
  7301  0398  00BA               	movwf	___ftdiv@f3+1
  7302  0399  3000               	movlw	0
  7303  039A  00BB               	movwf	___ftdiv@f3+2
  7304  039B  3089               	movlw	137
  7305  039C  073D               	addwf	___ftdiv@sign,w
  7306  039D  00B4               	movwf	??___ftdiv
  7307  039E  0834               	movf	??___ftdiv,w
  7308  039F  02BC               	subwf	___ftdiv@exp,f
  7309  03A0  0831               	movf	___ftdiv@f1,w
  7310  03A1  00B4               	movwf	??___ftdiv
  7311  03A2  0832               	movf	___ftdiv@f1+1,w
  7312  03A3  00B5               	movwf	??___ftdiv+1
  7313  03A4  0833               	movf	___ftdiv@f1+2,w
  7314  03A5  00B6               	movwf	??___ftdiv+2
  7315  03A6  3010               	movlw	16
  7316  03A7                     u2615:	
  7317  03A7  36B6               	lsrf	??___ftdiv+2,f
  7318  03A8  0CB5               	rrf	??___ftdiv+1,f
  7319  03A9  0CB4               	rrf	??___ftdiv,f
  7320  03AA  0B89               	decfsz	9,f
  7321  03AB  2BA7               	goto	u2615
  7322  03AC  0834               	movf	??___ftdiv,w
  7323  03AD  00B7               	movwf	??___ftdiv+3
  7324  03AE  0837               	movf	??___ftdiv+3,w
  7325  03AF  00BD               	movwf	___ftdiv@sign
  7326  03B0  082E               	movf	___ftdiv@f2,w
  7327  03B1  00B4               	movwf	??___ftdiv
  7328  03B2  082F               	movf	___ftdiv@f2+1,w
  7329  03B3  00B5               	movwf	??___ftdiv+1
  7330  03B4  0830               	movf	___ftdiv@f2+2,w
  7331  03B5  00B6               	movwf	??___ftdiv+2
  7332  03B6  3010               	movlw	16
  7333  03B7                     u2625:	
  7334  03B7  36B6               	lsrf	??___ftdiv+2,f
  7335  03B8  0CB5               	rrf	??___ftdiv+1,f
  7336  03B9  0CB4               	rrf	??___ftdiv,f
  7337  03BA  0B89               	decfsz	9,f
  7338  03BB  2BB7               	goto	u2625
  7339  03BC  0834               	movf	??___ftdiv,w
  7340  03BD  00B7               	movwf	??___ftdiv+3
  7341  03BE  0837               	movf	??___ftdiv+3,w
  7342  03BF  06BD               	xorwf	___ftdiv@sign,f
  7343  03C0  3080               	movlw	128
  7344  03C1  00B4               	movwf	??___ftdiv
  7345  03C2  0834               	movf	??___ftdiv,w
  7346  03C3  05BD               	andwf	___ftdiv@sign,f
  7347  03C4  17B2               	bsf	___ftdiv@f1+1,7
  7348  03C5  30FF               	movlw	255
  7349  03C6  05B1               	andwf	___ftdiv@f1,f
  7350  03C7  30FF               	movlw	255
  7351  03C8  05B2               	andwf	___ftdiv@f1+1,f
  7352  03C9  3000               	movlw	0
  7353  03CA  05B3               	andwf	___ftdiv@f1+2,f
  7354  03CB  17AF               	bsf	___ftdiv@f2+1,7
  7355  03CC  30FF               	movlw	255
  7356  03CD  05AE               	andwf	___ftdiv@f2,f
  7357  03CE  30FF               	movlw	255
  7358  03CF  05AF               	andwf	___ftdiv@f2+1,f
  7359  03D0  3000               	movlw	0
  7360  03D1  05B0               	andwf	___ftdiv@f2+2,f
  7361  03D2  3018               	movlw	24
  7362  03D3  00B4               	movwf	??___ftdiv
  7363  03D4  0834               	movf	??___ftdiv,w
  7364  03D5  00B8               	movwf	___ftdiv@cntr
  7365  03D6                     l3427:	
  7366  03D6  3001               	movlw	1
  7367  03D7                     u2635:	
  7368  03D7  35B9               	lslf	___ftdiv@f3,f
  7369  03D8  0DBA               	rlf	___ftdiv@f3+1,f
  7370  03D9  0DBB               	rlf	___ftdiv@f3+2,f
  7371  03DA  0B89               	decfsz	9,f
  7372  03DB  2BD7               	goto	u2635
  7373  03DC  0830               	movf	___ftdiv@f2+2,w
  7374  03DD  0233               	subwf	___ftdiv@f1+2,w
  7375  03DE  1D03               	skipz
  7376  03DF  2BE6               	goto	u2645
  7377  03E0  082F               	movf	___ftdiv@f2+1,w
  7378  03E1  0232               	subwf	___ftdiv@f1+1,w
  7379  03E2  1D03               	skipz
  7380  03E3  2BE6               	goto	u2645
  7381  03E4  082E               	movf	___ftdiv@f2,w
  7382  03E5  0231               	subwf	___ftdiv@f1,w
  7383  03E6                     u2645:	
  7384  03E6  1C03               	skipc
  7385  03E7  2BEF               	goto	l3435
  7386  03E8  082E               	movf	___ftdiv@f2,w
  7387  03E9  02B1               	subwf	___ftdiv@f1,f
  7388  03EA  082F               	movf	___ftdiv@f2+1,w
  7389  03EB  3BB2               	subwfb	___ftdiv@f1+1,f
  7390  03EC  0830               	movf	___ftdiv@f2+2,w
  7391  03ED  3BB3               	subwfb	___ftdiv@f1+2,f
  7392  03EE  1439               	bsf	___ftdiv@f3,0
  7393  03EF                     l3435:	
  7394  03EF  3001               	movlw	1
  7395  03F0                     u2655:	
  7396  03F0  35B1               	lslf	___ftdiv@f1,f
  7397  03F1  0DB2               	rlf	___ftdiv@f1+1,f
  7398  03F2  0DB3               	rlf	___ftdiv@f1+2,f
  7399  03F3  0B89               	decfsz	9,f
  7400  03F4  2BF0               	goto	u2655
  7401  03F5  3001               	movlw	1
  7402  03F6  02B8               	subwf	___ftdiv@cntr,f
  7403  03F7  1D03               	btfss	3,2
  7404  03F8  2BD6               	goto	l3427
  7405  03F9  0839               	movf	___ftdiv@f3,w
  7406  03FA  00A0               	movwf	___ftpack@arg
  7407  03FB  083A               	movf	___ftdiv@f3+1,w
  7408  03FC  00A1               	movwf	___ftpack@arg+1
  7409  03FD  083B               	movf	___ftdiv@f3+2,w
  7410  03FE  00A2               	movwf	___ftpack@arg+2
  7411  03FF  083C               	movf	___ftdiv@exp,w
  7412  0400  00B4               	movwf	??___ftdiv
  7413  0401  0834               	movf	??___ftdiv,w
  7414  0402  00A3               	movwf	___ftpack@exp
  7415  0403  083D               	movf	___ftdiv@sign,w
  7416  0404  00B5               	movwf	??___ftdiv+1
  7417  0405  0835               	movf	??___ftdiv+1,w
  7418  0406  00A4               	movwf	___ftpack@sign
  7419  0407  3184  2498         	fcall	___ftpack
  7420  0409  0020               	movlb	0	; select bank0
  7421  040A  0820               	movf	?___ftpack,w
  7422  040B  00AE               	movwf	?___ftdiv
  7423  040C  0821               	movf	?___ftpack+1,w
  7424  040D  00AF               	movwf	?___ftdiv+1
  7425  040E  0822               	movf	?___ftpack+2,w
  7426  040F  00B0               	movwf	?___ftdiv+2
  7427  0410  0008               	return
  7428  0411                     __end_of___ftdiv:	
  7429                           
  7430                           	psect	text44
  7431  0D39                     __ptext44:	
  7432 ;; *************** function ___awtoft *****************
  7433 ;; Defined at:
  7434 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  c               2    8[BANK0 ] int 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  sign            1   13[BANK0 ] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  3    8[BANK0 ] float 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7448 ;;      Params:         0       3       0       0       0       0       0       0
  7449 ;;      Locals:         0       1       0       0       0       0       0       0
  7450 ;;      Temps:          0       2       0       0       0       0       0       0
  7451 ;;      Totals:         0       6       0       0       0       0       0       0
  7452 ;;Total ram usage:        6 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    6
  7455 ;; This function calls:
  7456 ;;		___ftpack
  7457 ;; This function is called by:
  7458 ;;		_setPercentValue
  7459 ;;		_getPercentValue
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           
  7464                           ;psect for function ___awtoft
  7465  0D39                     ___awtoft:	
  7466                           
  7467                           ;incstack = 0
  7468                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7469  0D39  0020               	movlb	0	; select bank0
  7470  0D3A  01AD               	clrf	___awtoft@sign
  7471  0D3B  1FA9               	btfss	___awtoft@c+1,7
  7472  0D3C  2D44               	goto	l3397
  7473  0D3D  09A8               	comf	___awtoft@c,f
  7474  0D3E  09A9               	comf	___awtoft@c+1,f
  7475  0D3F  0AA8               	incf	___awtoft@c,f
  7476  0D40  1903               	skipnz
  7477  0D41  0AA9               	incf	___awtoft@c+1,f
  7478  0D42  01AD               	clrf	___awtoft@sign
  7479  0D43  0AAD               	incf	___awtoft@sign,f
  7480  0D44                     l3397:	
  7481  0D44  0828               	movf	___awtoft@c,w
  7482  0D45  00A0               	movwf	___ftpack@arg
  7483  0D46  0829               	movf	___awtoft@c+1,w
  7484  0D47  00A1               	movwf	___ftpack@arg+1
  7485  0D48  01A2               	clrf	___ftpack@arg+2
  7486  0D49  308E               	movlw	142
  7487  0D4A  00AB               	movwf	??___awtoft
  7488  0D4B  082B               	movf	??___awtoft,w
  7489  0D4C  00A3               	movwf	___ftpack@exp
  7490  0D4D  082D               	movf	___awtoft@sign,w
  7491  0D4E  00AC               	movwf	??___awtoft+1
  7492  0D4F  082C               	movf	??___awtoft+1,w
  7493  0D50  00A4               	movwf	___ftpack@sign
  7494  0D51  3184  2498         	fcall	___ftpack
  7495  0D53  0020               	movlb	0	; select bank0
  7496  0D54  0820               	movf	?___ftpack,w
  7497  0D55  00A8               	movwf	?___awtoft
  7498  0D56  0821               	movf	?___ftpack+1,w
  7499  0D57  00A9               	movwf	?___awtoft+1
  7500  0D58  0822               	movf	?___ftpack+2,w
  7501  0D59  00AA               	movwf	?___awtoft+2
  7502  0D5A  0008               	return
  7503  0D5B                     __end_of___awtoft:	
  7504                           
  7505                           	psect	text45
  7506  0498                     __ptext45:	
  7507 ;; *************** function ___ftpack *****************
  7508 ;; Defined at:
  7509 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  arg             3    0[BANK0 ] unsigned um
  7512 ;;  exp             1    3[BANK0 ] unsigned char 
  7513 ;;  sign            1    4[BANK0 ] unsigned char 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  3    0[BANK0 ] float 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7525 ;;      Params:         0       5       0       0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0
  7527 ;;      Temps:          0       3       0       0       0       0       0       0
  7528 ;;      Totals:         0       8       0       0       0       0       0       0
  7529 ;;Total ram usage:        8 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    5
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		___awtoft
  7536 ;;		___ftdiv
  7537 ;;		___ftmul
  7538 ;;		___ftadd
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function ___ftpack
  7544  0498                     ___ftpack:	
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7548  0498  0020               	movlb	0	; select bank0
  7549  0499  0823               	movf	___ftpack@exp,w
  7550  049A  1903               	btfsc	3,2
  7551  049B  2CA1               	goto	l3115
  7552  049C  0822               	movf	___ftpack@arg+2,w
  7553  049D  0421               	iorwf	___ftpack@arg+1,w
  7554  049E  0420               	iorwf	___ftpack@arg,w
  7555  049F  1D03               	skipz
  7556  04A0  2CB2               	goto	l3121
  7557  04A1                     l3115:	
  7558  04A1  3000               	movlw	0
  7559  04A2  00A0               	movwf	?___ftpack
  7560  04A3  3000               	movlw	0
  7561  04A4  00A1               	movwf	?___ftpack+1
  7562  04A5  3000               	movlw	0
  7563  04A6  00A2               	movwf	?___ftpack+2
  7564  04A7  0008               	return
  7565  04A8                     l3119:	
  7566  04A8  3001               	movlw	1
  7567  04A9  00A5               	movwf	??___ftpack
  7568  04AA  0825               	movf	??___ftpack,w
  7569  04AB  07A3               	addwf	___ftpack@exp,f
  7570  04AC  3001               	movlw	1
  7571  04AD                     u2185:	
  7572  04AD  36A2               	lsrf	___ftpack@arg+2,f
  7573  04AE  0CA1               	rrf	___ftpack@arg+1,f
  7574  04AF  0CA0               	rrf	___ftpack@arg,f
  7575  04B0  0B89               	decfsz	9,f
  7576  04B1  2CAD               	goto	u2185
  7577  04B2                     l3121:	
  7578  04B2  30FE               	movlw	254
  7579  04B3  0522               	andwf	___ftpack@arg+2,w
  7580  04B4  1903               	btfsc	3,2
  7581  04B5  2CCB               	goto	l1461
  7582  04B6  2CA8               	goto	l3119
  7583  04B7                     l3123:	
  7584  04B7  3001               	movlw	1
  7585  04B8  00A5               	movwf	??___ftpack
  7586  04B9  0825               	movf	??___ftpack,w
  7587  04BA  07A3               	addwf	___ftpack@exp,f
  7588  04BB  3001               	movlw	1
  7589  04BC  07A0               	addwf	___ftpack@arg,f
  7590  04BD  3000               	movlw	0
  7591  04BE  1803               	skipnc
  7592  04BF  3001               	movlw	1
  7593  04C0  07A1               	addwf	___ftpack@arg+1,f
  7594  04C1  3000               	movlw	0
  7595  04C2  1803               	skipnc
  7596  04C3  3001               	movlw	1
  7597  04C4  07A2               	addwf	___ftpack@arg+2,f
  7598  04C5  3001               	movlw	1
  7599  04C6                     u2205:	
  7600  04C6  36A2               	lsrf	___ftpack@arg+2,f
  7601  04C7  0CA1               	rrf	___ftpack@arg+1,f
  7602  04C8  0CA0               	rrf	___ftpack@arg,f
  7603  04C9  0B89               	decfsz	9,f
  7604  04CA  2CC6               	goto	u2205
  7605  04CB                     l1461:	
  7606  04CB  30FF               	movlw	255
  7607  04CC  0522               	andwf	___ftpack@arg+2,w
  7608  04CD  1903               	btfsc	3,2
  7609  04CE  2CD8               	goto	l3131
  7610  04CF  2CB7               	goto	l3123
  7611  04D0                     l3129:	
  7612  04D0  3001               	movlw	1
  7613  04D1  02A3               	subwf	___ftpack@exp,f
  7614  04D2  3001               	movlw	1
  7615  04D3                     u2225:	
  7616  04D3  35A0               	lslf	___ftpack@arg,f
  7617  04D4  0DA1               	rlf	___ftpack@arg+1,f
  7618  04D5  0DA2               	rlf	___ftpack@arg+2,f
  7619  04D6  0B89               	decfsz	9,f
  7620  04D7  2CD3               	goto	u2225
  7621  04D8                     l3131:	
  7622  04D8  1FA1               	btfss	___ftpack@arg+1,7
  7623  04D9  2CD0               	goto	l3129
  7624  04DA  1823               	btfsc	___ftpack@exp,0
  7625  04DB  2CE2               	goto	l1467
  7626  04DC  30FF               	movlw	255
  7627  04DD  05A0               	andwf	___ftpack@arg,f
  7628  04DE  307F               	movlw	127
  7629  04DF  05A1               	andwf	___ftpack@arg+1,f
  7630  04E0  30FF               	movlw	255
  7631  04E1  05A2               	andwf	___ftpack@arg+2,f
  7632  04E2                     l1467:	
  7633  04E2  1003               	clrc
  7634  04E3  0CA3               	rrf	___ftpack@exp,f
  7635  04E4  0823               	movf	___ftpack@exp,w
  7636  04E5  00A5               	movwf	??___ftpack
  7637  04E6  01A6               	clrf	??___ftpack+1
  7638  04E7  01A7               	clrf	??___ftpack+2
  7639  04E8  3010               	movlw	16
  7640  04E9                     u2255:	
  7641  04E9  35A5               	lslf	??___ftpack,f
  7642  04EA  0DA6               	rlf	??___ftpack+1,f
  7643  04EB  0DA7               	rlf	??___ftpack+2,f
  7644  04EC  0B89               	decfsz	9,f
  7645  04ED  2CE9               	goto	u2255
  7646  04EE  0825               	movf	??___ftpack,w
  7647  04EF  04A0               	iorwf	___ftpack@arg,f
  7648  04F0  0826               	movf	??___ftpack+1,w
  7649  04F1  04A1               	iorwf	___ftpack@arg+1,f
  7650  04F2  0827               	movf	??___ftpack+2,w
  7651  04F3  04A2               	iorwf	___ftpack@arg+2,f
  7652  04F4  0824               	movf	___ftpack@sign,w
  7653  04F5  1903               	btfsc	3,2
  7654  04F6  0008               	return
  7655  04F7  17A2               	bsf	___ftpack@arg+2,7
  7656  04F8  0008               	return
  7657  04F9                     __end_of___ftpack:	
  7658                           
  7659                           	psect	text46
  7660  0BB6                     __ptext46:	
  7661 ;; *************** function _setMemory_Data *****************
  7662 ;; Defined at:
  7663 ;;		line 1011 in file "../src/MCU_B1.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  address         1    wreg     unsigned char 
  7666 ;;  data            1    0[BANK0 ] unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  address         1    2[BANK0 ] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;		None               void
  7671 ;; Registers used:
  7672 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7678 ;;      Params:         0       1       0       0       0       0       0       0
  7679 ;;      Locals:         0       1       0       0       0       0       0       0
  7680 ;;      Temps:          0       1       0       0       0       0       0       0
  7681 ;;      Totals:         0       3       0       0       0       0       0       0
  7682 ;;Total ram usage:        3 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    5
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_Flash_Memory_Initialization
  7689 ;;		_Flash_Memory_Modify
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _setMemory_Data
  7695  0BB6                     _setMemory_Data:	
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  7699                           ;setMemory_Data@address stored from wreg
  7700  0BB6  0020               	movlb	0	; select bank0
  7701  0BB7  00A2               	movwf	setMemory_Data@address
  7702                           
  7703                           ;MCU_B1.c: 1012: Memory.Data[address] = data;
  7704  0BB8  0820               	movf	setMemory_Data@data,w
  7705  0BB9  00A1               	movwf	??_setMemory_Data
  7706  0BBA  0822               	movf	setMemory_Data@address,w
  7707  0BBB  3E20               	addlw	_Memory& (0+255)
  7708  0BBC  0086               	movwf	6
  7709  0BBD  3001               	movlw	1	; select bank2/3
  7710  0BBE  0087               	movwf	7
  7711  0BBF  0821               	movf	??_setMemory_Data,w
  7712  0BC0  0081               	movwf	1
  7713  0BC1  0008               	return
  7714  0BC2                     __end_of_setMemory_Data:	
  7715                           
  7716                           	psect	text47
  7717  0E27                     __ptext47:	
  7718 ;; *************** function _Flash_Memory_Write *****************
  7719 ;; Defined at:
  7720 ;;		line 944 in file "../src/MCU_B1.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;		None
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  i               1    1[BANK0 ] unsigned char 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;		None               void
  7727 ;; Registers used:
  7728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7734 ;;      Params:         0       0       0       0       0       0       0       0
  7735 ;;      Locals:         0       1       0       0       0       0       0       0
  7736 ;;      Temps:          0       1       0       0       0       0       0       0
  7737 ;;      Totals:         0       2       0       0       0       0       0       0
  7738 ;;Total ram usage:        2 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    6
  7741 ;; This function calls:
  7742 ;;		_Flash_Memory_Unlock
  7743 ;; This function is called by:
  7744 ;;		_Flash_Memory_Initialization
  7745 ;;		_Flash_Memory_Modify
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _Flash_Memory_Write
  7751  0E27                     _Flash_Memory_Write:	
  7752                           
  7753                           ;MCU_B1.c: 945: char i = 0;
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7757  0E27  0020               	movlb	0	; select bank0
  7758  0E28  01A1               	clrf	Flash_Memory_Write@i
  7759                           
  7760                           ;MCU_B1.c: 946: CFGS = 0;
  7761  0E29  0023               	movlb	3	; select bank3
  7762  0E2A  1315               	bcf	21,6	;volatile
  7763                           
  7764                           ;MCU_B1.c: 947: PMADRH = 0x30;
  7765  0E2B  3030               	movlw	48
  7766  0E2C  0092               	movwf	18	;volatile
  7767                           
  7768                           ;MCU_B1.c: 948: PMDATH = 0;
  7769  0E2D  0194               	clrf	20	;volatile
  7770                           
  7771                           ;MCU_B1.c: 949: FREE = 0;
  7772  0E2E  1215               	bcf	21,4	;volatile
  7773                           
  7774                           ;MCU_B1.c: 950: LWLO = 1;
  7775  0E2F  1695               	bsf	21,5	;volatile
  7776                           
  7777                           ;MCU_B1.c: 951: WREN = 1;
  7778  0E30  1515               	bsf	21,2	;volatile
  7779                           
  7780                           ;MCU_B1.c: 952: for (i = 0; i < 32; i++) {
  7781  0E31  0020               	movlb	0	; select bank0
  7782  0E32  01A1               	clrf	Flash_Memory_Write@i
  7783  0E33  3020               	movlw	32
  7784  0E34  0221               	subwf	Flash_Memory_Write@i,w
  7785  0E35  1803               	btfsc	3,0
  7786  0E36  2E4F               	goto	l705
  7787  0E37                     l3321:	
  7788                           
  7789                           ;MCU_B1.c: 953: PMADRL = i;
  7790  0E37  0821               	movf	Flash_Memory_Write@i,w
  7791  0E38  0023               	movlb	3	; select bank3
  7792  0E39  0091               	movwf	17	;volatile
  7793                           
  7794                           ;MCU_B1.c: 954: PMDATL = Memory.Data[i];
  7795  0E3A  0020               	movlb	0	; select bank0
  7796  0E3B  0821               	movf	Flash_Memory_Write@i,w
  7797  0E3C  3E20               	addlw	_Memory& (0+255)
  7798  0E3D  0086               	movwf	6
  7799  0E3E  3001               	movlw	1	; select bank2/3
  7800  0E3F  0087               	movwf	7
  7801  0E40  0801               	movf	1,w
  7802  0E41  0023               	movlb	3	; select bank3
  7803  0E42  0093               	movwf	19	;volatile
  7804                           
  7805                           ;MCU_B1.c: 955: Flash_Memory_Unlock();
  7806  0E43  318B  232D  318E   	fcall	_Flash_Memory_Unlock
  7807  0E46  3001               	movlw	1
  7808  0E47  0020               	movlb	0	; select bank0
  7809  0E48  00A0               	movwf	??_Flash_Memory_Write
  7810  0E49  0820               	movf	??_Flash_Memory_Write,w
  7811  0E4A  07A1               	addwf	Flash_Memory_Write@i,f
  7812  0E4B  3020               	movlw	32
  7813  0E4C  0221               	subwf	Flash_Memory_Write@i,w
  7814  0E4D  1C03               	skipc
  7815  0E4E  2E37               	goto	l3321
  7816  0E4F                     l705:	
  7817                           
  7818                           ;MCU_B1.c: 956: }
  7819                           ;MCU_B1.c: 957: LWLO = 0;
  7820  0E4F  0023               	movlb	3	; select bank3
  7821  0E50  1295               	bcf	21,5	;volatile
  7822                           
  7823                           ;MCU_B1.c: 958: Flash_Memory_Unlock();
  7824  0E51  318B  232D         	fcall	_Flash_Memory_Unlock
  7825                           
  7826                           ;MCU_B1.c: 959: WREN = 0;
  7827  0E53  0023               	movlb	3	; select bank3
  7828  0E54  1115               	bcf	21,2	;volatile
  7829  0E55  0008               	return
  7830  0E56                     __end_of_Flash_Memory_Write:	
  7831                           
  7832                           	psect	text48
  7833  0B2D                     __ptext48:	
  7834 ;; *************** function _Flash_Memory_Unlock *****************
  7835 ;; Defined at:
  7836 ;;		line 923 in file "../src/MCU_B1.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;		None               void
  7843 ;; Registers used:
  7844 ;;		wreg
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7850 ;;      Params:         0       0       0       0       0       0       0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0
  7853 ;;      Totals:         0       0       0       0       0       0       0       0
  7854 ;;Total ram usage:        0 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    5
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_Flash_Memory_Write
  7861 ;;		_Flash_Memory_Erasing
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _Flash_Memory_Unlock
  7867  0B2D                     _Flash_Memory_Unlock:	
  7868                           
  7869                           ;MCU_B1.c: 924: PMCON2 = 0x55;
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  7873  0B2D  3055               	movlw	85
  7874  0B2E  0023               	movlb	3	; select bank3
  7875  0B2F  0096               	movwf	22	;volatile
  7876                           
  7877                           ;MCU_B1.c: 925: PMCON2 = 0xaa;
  7878  0B30  30AA               	movlw	170
  7879  0B31  0096               	movwf	22	;volatile
  7880                           
  7881                           ;MCU_B1.c: 926: WR = 1;
  7882  0B32  1495               	bsf	21,1	;volatile
  7883                           
  7884                           ;MCU_B1.c: 927: __nop();
  7885  0B33  0000               	nop
  7886                           
  7887                           ;MCU_B1.c: 928: __nop();
  7888  0B34  0000               	nop
  7889  0B35  0008               	return
  7890  0B36                     __end_of_Flash_Memory_Unlock:	
  7891                           
  7892                           	psect	text49
  7893  0CA8                     __ptext49:	
  7894 ;; *************** function _Flash_Memory_Read *****************
  7895 ;; Defined at:
  7896 ;;		line 932 in file "../src/MCU_B1.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  address         1    wreg     unsigned char 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  address         1    2[BANK0 ] unsigned char 
  7901 ;;  ret             1    3[BANK0 ] unsigned char 
  7902 ;;  i               1    1[BANK0 ] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      unsigned char 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7912 ;;      Params:         0       0       0       0       0       0       0       0
  7913 ;;      Locals:         0       3       0       0       0       0       0       0
  7914 ;;      Temps:          0       1       0       0       0       0       0       0
  7915 ;;      Totals:         0       4       0       0       0       0       0       0
  7916 ;;Total ram usage:        4 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    5
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_Flash_Memory_Initialization
  7923 ;;		_Flash_Memory_Modify
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           
  7928                           ;psect for function _Flash_Memory_Read
  7929  0CA8                     _Flash_Memory_Read:	
  7930                           
  7931                           ;incstack = 0
  7932                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  7933                           ;Flash_Memory_Read@address stored from wreg
  7934  0CA8  0020               	movlb	0	; select bank0
  7935  0CA9  00A2               	movwf	Flash_Memory_Read@address
  7936                           
  7937                           ;MCU_B1.c: 933: char i = 0, ret = 0;
  7938  0CAA  01A1               	clrf	Flash_Memory_Read@i
  7939  0CAB  01A3               	clrf	Flash_Memory_Read@ret
  7940                           
  7941                           ;MCU_B1.c: 934: PMADRH = 0x30;
  7942  0CAC  3030               	movlw	48
  7943  0CAD  0023               	movlb	3	; select bank3
  7944  0CAE  0092               	movwf	18	;volatile
  7945                           
  7946                           ;MCU_B1.c: 935: PMADRL = address;
  7947  0CAF  0020               	movlb	0	; select bank0
  7948  0CB0  0822               	movf	Flash_Memory_Read@address,w
  7949  0CB1  0023               	movlb	3	; select bank3
  7950  0CB2  0091               	movwf	17	;volatile
  7951                           
  7952                           ;MCU_B1.c: 936: CFGS = 0;
  7953  0CB3  1315               	bcf	21,6	;volatile
  7954                           
  7955                           ;MCU_B1.c: 937: RD = 1;
  7956  0CB4  1415               	bsf	21,0	;volatile
  7957                           
  7958                           ;MCU_B1.c: 938: i = PMDATH;
  7959  0CB5  0814               	movf	20,w	;volatile
  7960  0CB6  0020               	movlb	0	; select bank0
  7961  0CB7  00A0               	movwf	??_Flash_Memory_Read
  7962  0CB8  0820               	movf	??_Flash_Memory_Read,w
  7963  0CB9  00A1               	movwf	Flash_Memory_Read@i
  7964                           
  7965                           ;MCU_B1.c: 939: ret = PMDATL;
  7966  0CBA  0023               	movlb	3	; select bank3
  7967  0CBB  0813               	movf	19,w	;volatile
  7968  0CBC  0020               	movlb	0	; select bank0
  7969  0CBD  00A0               	movwf	??_Flash_Memory_Read
  7970  0CBE  0820               	movf	??_Flash_Memory_Read,w
  7971  0CBF  00A3               	movwf	Flash_Memory_Read@ret
  7972                           
  7973                           ;MCU_B1.c: 940: return ret;
  7974  0CC0  0823               	movf	Flash_Memory_Read@ret,w
  7975  0CC1  0008               	return
  7976  0CC2                     __end_of_Flash_Memory_Read:	
  7977                           
  7978                           	psect	text50
  7979  0B01                     __ptext50:	
  7980 ;; *************** function _DimmerLights_Main *****************
  7981 ;; Defined at:
  7982 ;;		line 398 in file "../src/Dimmer_B1.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;		None               void
  7989 ;; Registers used:
  7990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7996 ;;      Params:         0       0       0       0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0
  7998 ;;      Temps:          0       0       0       0       0       0       0       0
  7999 ;;      Totals:         0       0       0       0       0       0       0       0
  8000 ;;Total ram usage:        0 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    9
  8003 ;; This function calls:
  8004 ;;		_setDimmerLights_Main
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _DimmerLights_Main
  8012  0B01                     _DimmerLights_Main:	
  8013                           
  8014                           ;Dimmer_B1.c: 410: setDimmerLights_Main(1);
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8018  0B01  3001               	movlw	1
  8019  0B02  3186  265D         	fcall	_setDimmerLights_Main
  8020  0B04  0008               	return
  8021  0B05                     __end_of_DimmerLights_Main:	
  8022                           
  8023                           	psect	text51
  8024  065D                     __ptext51:	
  8025 ;; *************** function _setDimmerLights_Main *****************
  8026 ;; Defined at:
  8027 ;;		line 424 in file "../src/Dimmer_B1.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  lights          1    wreg     unsigned char 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  lights          1   13[BANK0 ] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;		None               void
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8041 ;;      Params:         0       0       0       0       0       0       0       0
  8042 ;;      Locals:         0       1       0       0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0
  8044 ;;      Totals:         0       1       0       0       0       0       0       0
  8045 ;;Total ram usage:        1 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    8
  8048 ;; This function calls:
  8049 ;;		_DimmerLightsPointSelect
  8050 ;;		_setBuz
  8051 ;;		_setDimmerLights
  8052 ;;		_setDimmerLights_Adj
  8053 ;; This function is called by:
  8054 ;;		_DimmerLights_Main
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           
  8059                           ;psect for function _setDimmerLights_Main
  8060  065D                     _setDimmerLights_Main:	
  8061                           
  8062                           ;incstack = 0
  8063                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8064                           ;setDimmerLights_Main@lights stored from wreg
  8065  065D  0020               	movlb	0	; select bank0
  8066  065E  00AD               	movwf	setDimmerLights_Main@lights
  8067                           
  8068                           ;Dimmer_B1.c: 425: DimmerLightsPointSelect(lights);
  8069  065F  082D               	movf	setDimmerLights_Main@lights,w
  8070  0660  318B  2372  3186   	fcall	_DimmerLightsPointSelect
  8071                           
  8072                           ;Dimmer_B1.c: 426: if (DimmerLights->Trigger == 1) {
  8073  0663  087A               	movf	_DimmerLights,w
  8074  0664  3E08               	addlw	8
  8075  0665  0086               	movwf	6
  8076  0666  0187               	clrf	7
  8077  0667  1D01               	btfss	1,2
  8078  0668  2E83               	goto	l3607
  8079                           
  8080                           ;Dimmer_B1.c: 428: if (Dimmer.LoadOK == 0) {
  8081  0669  0020               	movlb	0	; select bank0
  8082  066A  18E2               	btfsc	_Dimmer,1
  8083  066B  0008               	return
  8084                           
  8085                           ;Dimmer_B1.c: 429: DimmerLights->Trigger = 0;
  8086  066C  087A               	movf	_DimmerLights,w
  8087  066D  3E08               	addlw	8
  8088  066E  0086               	movwf	6
  8089  066F  0187               	clrf	7
  8090  0670  1101               	bcf	1,2
  8091                           
  8092                           ;Dimmer_B1.c: 431: if (DimmerLights->Switch == 1) {
  8093  0671  087A               	movf	_DimmerLights,w
  8094  0672  3E08               	addlw	8
  8095  0673  0086               	movwf	6
  8096  0674  0187               	clrf	7
  8097  0675  1C81               	btfss	1,1
  8098  0676  2E7D               	goto	l3605
  8099                           
  8100                           ;Dimmer_B1.c: 432: setDimmerLights(lights, 1);
  8101  0677  01A4               	clrf	setDimmerLights@status
  8102  0678  0AA4               	incf	setDimmerLights@status,f
  8103  0679  082D               	movf	setDimmerLights_Main@lights,w
  8104  067A  3184  24F9         	fcall	_setDimmerLights
  8105                           
  8106                           ;Dimmer_B1.c: 433: } else {
  8107  067C  0008               	return
  8108  067D                     l3605:	
  8109                           
  8110                           ;Dimmer_B1.c: 434: setDimmerLights(lights, 0);
  8111  067D  0020               	movlb	0	; select bank0
  8112  067E  01A4               	clrf	setDimmerLights@status
  8113  067F  082D               	movf	setDimmerLights_Main@lights,w
  8114  0680  3184  24F9         	fcall	_setDimmerLights
  8115                           
  8116                           ;Dimmer_B1.c: 435: }
  8117                           ;Dimmer_B1.c: 436: }
  8118                           ;Dimmer_B1.c: 437: } else {
  8119  0682  0008               	return
  8120  0683                     l3607:	
  8121                           
  8122                           ;Dimmer_B1.c: 438: if (DimmerLights->TriggerAdj == 1) {
  8123  0683  087A               	movf	_DimmerLights,w
  8124  0684  3E08               	addlw	8
  8125  0685  0086               	movwf	6
  8126  0686  0187               	clrf	7
  8127  0687  1E01               	btfss	1,4
  8128  0688  0008               	return
  8129                           
  8130                           ;Dimmer_B1.c: 439: if (Dimmer.LoadOK == 0) {
  8131  0689  0020               	movlb	0	; select bank0
  8132  068A  18E2               	btfsc	_Dimmer,1
  8133  068B  0008               	return
  8134                           
  8135                           ;Dimmer_B1.c: 440: DimmerLights->TriggerAdj = 0;
  8136  068C  087A               	movf	_DimmerLights,w
  8137  068D  3E08               	addlw	8
  8138  068E  0086               	movwf	6
  8139  068F  0187               	clrf	7
  8140  0690  1201               	bcf	1,4
  8141                           
  8142                           ;Dimmer_B1.c: 441: if (DimmerLights->AdjGo == 1) {
  8143  0691  087A               	movf	_DimmerLights,w
  8144  0692  3E08               	addlw	8
  8145  0693  0086               	movwf	6
  8146  0694  0187               	clrf	7
  8147  0695  1D81               	btfss	1,3
  8148  0696  2EA6               	goto	l3617
  8149                           
  8150                           ;Dimmer_B1.c: 442: setDimmerLights_Adj(lights, 1);
  8151  0697  01A2               	clrf	setDimmerLights_Adj@status
  8152  0698  0AA2               	incf	setDimmerLights_Adj@status,f
  8153  0699  082D               	movf	setDimmerLights_Main@lights,w
  8154  069A  318D  25F9  3186   	fcall	_setDimmerLights_Adj
  8155                           
  8156                           ;Dimmer_B1.c: 443: setBuz(1, 100);
  8157  069D  3064               	movlw	100
  8158  069E  0020               	movlb	0	; select bank0
  8159  069F  00A9               	movwf	setBuz@time
  8160  06A0  3000               	movlw	0
  8161  06A1  00AA               	movwf	setBuz@time+1
  8162  06A2  3001               	movlw	1
  8163  06A3  3187  273A         	fcall	_setBuz
  8164                           
  8165                           ;Dimmer_B1.c: 444: } else {
  8166  06A5  0008               	return
  8167  06A6                     l3617:	
  8168                           
  8169                           ;Dimmer_B1.c: 445: setDimmerLights_Adj(lights, 0);
  8170  06A6  0020               	movlb	0	; select bank0
  8171  06A7  01A2               	clrf	setDimmerLights_Adj@status
  8172  06A8  082D               	movf	setDimmerLights_Main@lights,w
  8173  06A9  318D  25F9         	fcall	_setDimmerLights_Adj
  8174  06AB  0008               	return
  8175  06AC                     __end_of_setDimmerLights_Main:	
  8176                           
  8177                           	psect	text52
  8178  0DF9                     __ptext52:	
  8179 ;; *************** function _setDimmerLights_Adj *****************
  8180 ;; Defined at:
  8181 ;;		line 726 in file "../src/Dimmer_B1.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  lights          1    wreg     unsigned char 
  8184 ;;  status          1    2[BANK0 ] unsigned char 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  lights          1    4[BANK0 ] unsigned char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;		None               void
  8189 ;; Registers used:
  8190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8196 ;;      Params:         0       1       0       0       0       0       0       0
  8197 ;;      Locals:         0       1       0       0       0       0       0       0
  8198 ;;      Temps:          0       1       0       0       0       0       0       0
  8199 ;;      Totals:         0       3       0       0       0       0       0       0
  8200 ;;Total ram usage:        3 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    6
  8203 ;; This function calls:
  8204 ;;		_DimmerLightsPointSelect
  8205 ;; This function is called by:
  8206 ;;		_setDimmerLights_Main
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           
  8211                           ;psect for function _setDimmerLights_Adj
  8212  0DF9                     _setDimmerLights_Adj:	
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8216                           ;setDimmerLights_Adj@lights stored from wreg
  8217  0DF9  0020               	movlb	0	; select bank0
  8218  0DFA  00A4               	movwf	setDimmerLights_Adj@lights
  8219                           
  8220                           ;Dimmer_B1.c: 727: DimmerLightsPointSelect(lights);
  8221  0DFB  0824               	movf	setDimmerLights_Adj@lights,w
  8222  0DFC  318B  2372  318D   	fcall	_DimmerLightsPointSelect
  8223                           
  8224                           ;Dimmer_B1.c: 728: if (status == 1) {
  8225  0DFF  0020               	movlb	0	; select bank0
  8226  0E00  0822               	movf	setDimmerLights_Adj@status,w
  8227  0E01  3A01               	xorlw	1
  8228  0E02  1D03               	skipz
  8229  0E03  2E0D               	goto	l3189
  8230                           
  8231                           ;Dimmer_B1.c: 729: DimmerLights->AdjFlag = 1;
  8232  0E04  087A               	movf	_DimmerLights,w
  8233  0E05  0086               	movwf	6
  8234  0E06  0187               	clrf	7
  8235  0E07  1581               	bsf	1,3
  8236                           
  8237                           ;Dimmer_B1.c: 730: DimmerLights->Signal = 1;
  8238  0E08  087A               	movf	_DimmerLights,w
  8239  0E09  0086               	movwf	6
  8240  0E0A  0187               	clrf	7
  8241  0E0B  1481               	bsf	1,1
  8242                           
  8243                           ;Dimmer_B1.c: 731: } else {
  8244  0E0C  0008               	return
  8245  0E0D                     l3189:	
  8246                           
  8247                           ;Dimmer_B1.c: 732: if (DimmerLights->AdjFlag == 1) {
  8248  0E0D  087A               	movf	_DimmerLights,w
  8249  0E0E  0086               	movwf	6
  8250  0E0F  0187               	clrf	7
  8251  0E10  1D81               	btfss	1,3
  8252  0E11  0008               	return
  8253                           
  8254                           ;Dimmer_B1.c: 733: DimmerLights->Signal = 0;
  8255  0E12  087A               	movf	_DimmerLights,w
  8256  0E13  0086               	movwf	6
  8257  0E14  0187               	clrf	7
  8258  0E15  1081               	bcf	1,1
  8259                           
  8260                           ;Dimmer_B1.c: 734: DimmerLights->AdjFlag = 0;
  8261  0E16  087A               	movf	_DimmerLights,w
  8262  0E17  0086               	movwf	6
  8263  0E18  0187               	clrf	7
  8264  0E19  1181               	bcf	1,3
  8265                           
  8266                           ;Dimmer_B1.c: 735: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  8267  0E1A  087A               	movf	_DimmerLights,w
  8268  0E1B  3E04               	addlw	4
  8269  0E1C  0086               	movwf	6
  8270  0E1D  0187               	clrf	7
  8271  0E1E  0801               	movf	1,w
  8272  0E1F  00A3               	movwf	??_setDimmerLights_Adj
  8273  0E20  087A               	movf	_DimmerLights,w
  8274  0E21  3E05               	addlw	5
  8275  0E22  0086               	movwf	6
  8276  0E23  0187               	clrf	7
  8277  0E24  0823               	movf	??_setDimmerLights_Adj,w
  8278  0E25  0081               	movwf	1
  8279                           
  8280                           ;Dimmer_B1.c: 748: ;;
  8281                           ;Dimmer_B1.c: 749: ;;
  8282  0E26  0008               	return
  8283  0E27                     __end_of_setDimmerLights_Adj:	
  8284                           
  8285                           	psect	text53
  8286  04F9                     __ptext53:	
  8287 ;; *************** function _setDimmerLights *****************
  8288 ;; Defined at:
  8289 ;;		line 625 in file "../src/Dimmer_B1.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  lights          1    wreg     unsigned char 
  8292 ;;  status          1    4[BANK0 ] unsigned char 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  lights          1    6[BANK0 ] unsigned char 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;		None               void
  8297 ;; Registers used:
  8298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8304 ;;      Params:         0       1       0       0       0       0       0       0
  8305 ;;      Locals:         0       1       0       0       0       0       0       0
  8306 ;;      Temps:          0       1       0       0       0       0       0       0
  8307 ;;      Totals:         0       3       0       0       0       0       0       0
  8308 ;;Total ram usage:        3 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    7
  8311 ;; This function calls:
  8312 ;;		_DimmerLightsPointSelect
  8313 ;;		_setDimmerLights_Line
  8314 ;;		_setLED
  8315 ;; This function is called by:
  8316 ;;		_setDimmerLights_Main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _setDimmerLights
  8322  04F9                     _setDimmerLights:	
  8323                           
  8324                           ;incstack = 0
  8325                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8326                           ;setDimmerLights@lights stored from wreg
  8327  04F9  0020               	movlb	0	; select bank0
  8328  04FA  00A6               	movwf	setDimmerLights@lights
  8329                           
  8330                           ;Dimmer_B1.c: 626: DimmerLightsPointSelect(lights);
  8331  04FB  0826               	movf	setDimmerLights@lights,w
  8332  04FC  318B  2372  3184   	fcall	_DimmerLightsPointSelect
  8333                           
  8334                           ;Dimmer_B1.c: 633: if (status == 1) {
  8335  04FF  0020               	movlb	0	; select bank0
  8336  0500  0824               	movf	setDimmerLights@status,w
  8337  0501  3A01               	xorlw	1
  8338  0502  1D03               	skipz
  8339  0503  2D2F               	goto	l3181
  8340                           
  8341                           ;Dimmer_B1.c: 634: setLED(lights, 0);
  8342  0504  01A2               	clrf	setLED@command
  8343  0505  0826               	movf	setDimmerLights@lights,w
  8344  0506  318E  26B6  3184   	fcall	_setLED
  8345                           
  8346                           ;Dimmer_B1.c: 635: ;;
  8347                           ;Dimmer_B1.c: 636: setDimmerLights_Line(lights);
  8348  0509  0020               	movlb	0	; select bank0
  8349  050A  0826               	movf	setDimmerLights@lights,w
  8350  050B  318B  23AA         	fcall	_setDimmerLights_Line
  8351                           
  8352                           ;Dimmer_B1.c: 637: DimmerLights->StatusFlag = 1;
  8353  050D  087A               	movf	_DimmerLights,w
  8354  050E  0086               	movwf	6
  8355  050F  0187               	clrf	7
  8356  0510  1701               	bsf	1,6
  8357                           
  8358                           ;Dimmer_B1.c: 639: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  8359  0511  087A               	movf	_DimmerLights,w
  8360  0512  3E05               	addlw	5
  8361  0513  0086               	movwf	6
  8362  0514  0187               	clrf	7
  8363  0515  0801               	movf	1,w
  8364  0516  0020               	movlb	0	; select bank0
  8365  0517  00A5               	movwf	??_setDimmerLights
  8366  0518  087A               	movf	_DimmerLights,w
  8367  0519  3E04               	addlw	4
  8368  051A  0086               	movwf	6
  8369  051B  0187               	clrf	7
  8370  051C  0825               	movf	??_setDimmerLights,w
  8371  051D  0081               	movwf	1
  8372                           
  8373                           ;Dimmer_B1.c: 643: DimmerLights->DimmingValue = ((char)(65*0.8));
  8374  051E  3034               	movlw	52
  8375  051F  00A5               	movwf	??_setDimmerLights
  8376  0520  087A               	movf	_DimmerLights,w
  8377  0521  3E04               	addlw	4
  8378  0522  0086               	movwf	6
  8379  0523  0187               	clrf	7
  8380  0524  0825               	movf	??_setDimmerLights,w
  8381  0525  0081               	movwf	1
  8382                           
  8383                           ;Dimmer_B1.c: 650: DimmerLights->DimmingTimeValue = 7;
  8384  0526  3007               	movlw	7
  8385  0527  00A5               	movwf	??_setDimmerLights
  8386  0528  087A               	movf	_DimmerLights,w
  8387  0529  3E02               	addlw	2
  8388  052A  0086               	movwf	6
  8389  052B  0187               	clrf	7
  8390  052C  0825               	movf	??_setDimmerLights,w
  8391  052D  0081               	movwf	1
  8392                           
  8393                           ;Dimmer_B1.c: 652: } else {
  8394  052E  0008               	return
  8395  052F                     l3181:	
  8396                           
  8397                           ;Dimmer_B1.c: 654: DimmerLights->DimmingValue = DimmerLights->MinimumValue;
  8398  052F  087A               	movf	_DimmerLights,w
  8399  0530  3E06               	addlw	6
  8400  0531  0086               	movwf	6
  8401  0532  0187               	clrf	7
  8402  0533  0801               	movf	1,w
  8403  0534  00A5               	movwf	??_setDimmerLights
  8404  0535  087A               	movf	_DimmerLights,w
  8405  0536  3E04               	addlw	4
  8406  0537  0086               	movwf	6
  8407  0538  0187               	clrf	7
  8408  0539  0825               	movf	??_setDimmerLights,w
  8409  053A  0081               	movwf	1
  8410                           
  8411                           ;Dimmer_B1.c: 659: DimmerLights->MosfetClose = 1;
  8412  053B  087A               	movf	_DimmerLights,w
  8413  053C  3E08               	addlw	8
  8414  053D  0086               	movwf	6
  8415  053E  0187               	clrf	7
  8416  053F  1781               	bsf	1,7
  8417                           
  8418                           ;Dimmer_B1.c: 661: DimmerLights->Signal = 1;
  8419  0540  087A               	movf	_DimmerLights,w
  8420  0541  0086               	movwf	6
  8421  0542  0187               	clrf	7
  8422  0543  1481               	bsf	1,1
  8423                           
  8424                           ;Dimmer_B1.c: 662: DimmerLights->AdjFlag = 0;
  8425  0544  087A               	movf	_DimmerLights,w
  8426  0545  0086               	movwf	6
  8427  0546  0187               	clrf	7
  8428  0547  1181               	bcf	1,3
  8429                           
  8430                           ;Dimmer_B1.c: 663: DimmerLights->AdjStatus = 0;
  8431  0548  087A               	movf	_DimmerLights,w
  8432  0549  0086               	movwf	6
  8433  054A  0187               	clrf	7
  8434  054B  1201               	bcf	1,4
  8435                           
  8436                           ;Dimmer_B1.c: 664: DimmerLights->AdjRF = 0;
  8437  054C  087A               	movf	_DimmerLights,w
  8438  054D  0086               	movwf	6
  8439  054E  0187               	clrf	7
  8440  054F  1101               	bcf	1,2
  8441                           
  8442                           ;Dimmer_B1.c: 665: DimmerLights->DimmingTimeValue = 7;
  8443  0550  3007               	movlw	7
  8444  0551  00A5               	movwf	??_setDimmerLights
  8445  0552  087A               	movf	_DimmerLights,w
  8446  0553  3E02               	addlw	2
  8447  0554  0086               	movwf	6
  8448  0555  0187               	clrf	7
  8449  0556  0825               	movf	??_setDimmerLights,w
  8450  0557  0081               	movwf	1
  8451  0558  0008               	return
  8452  0559                     __end_of_setDimmerLights:	
  8453                           
  8454                           	psect	text54
  8455  0EB6                     __ptext54:	
  8456 ;; *************** function _setLED *****************
  8457 ;; Defined at:
  8458 ;;		line 73 in file "../src/LED_B1.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  led             1    wreg     unsigned char 
  8461 ;;  command         1    2[BANK0 ] unsigned char 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  led             1    3[BANK0 ] unsigned char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;		None               void
  8466 ;; Registers used:
  8467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8473 ;;      Params:         0       1       0       0       0       0       0       0
  8474 ;;      Locals:         0       1       0       0       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0
  8476 ;;      Totals:         0       2       0       0       0       0       0       0
  8477 ;;Total ram usage:        2 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    6
  8480 ;; This function calls:
  8481 ;;		_LedPointSelect
  8482 ;; This function is called by:
  8483 ;;		_setDimmerLights
  8484 ;;		_setLED_Initialization
  8485 ;;		_setMain_Exception
  8486 ;;		_setSw_Initialization
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _setLED
  8492  0EB6                     _setLED:	
  8493                           
  8494                           ;incstack = 0
  8495                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8496                           ;setLED@led stored from wreg
  8497  0EB6  0020               	movlb	0	; select bank0
  8498  0EB7  00A3               	movwf	setLED@led
  8499                           
  8500                           ;LED_B1.c: 74: LedPointSelect(led);
  8501  0EB8  0823               	movf	setLED@led,w
  8502  0EB9  318B  237D  318E   	fcall	_LedPointSelect
  8503                           
  8504                           ;LED_B1.c: 75: if (command == 0) {
  8505  0EBC  0020               	movlb	0	; select bank0
  8506  0EBD  08A2               	movf	setLED@command,f
  8507  0EBE  1D03               	skipz
  8508  0EBF  2EC5               	goto	l3047
  8509                           
  8510                           ;LED_B1.c: 104: if (led == 99) {
  8511  0EC0  0823               	movf	setLED@led,w
  8512  0EC1  3A63               	xorlw	99
  8513  0EC2  1D03               	skipz
  8514  0EC3  2EC5               	goto	l3047
  8515                           
  8516                           ;LED_B1.c: 108: RB5 = 1;
  8517  0EC4  168D               	bsf	13,5	;volatile
  8518  0EC5                     l3047:	
  8519                           
  8520                           ;LED_B1.c: 110: }
  8521                           ;LED_B1.c: 112: } if (command == 1) {
  8522  0EC5  0822               	movf	setLED@command,w
  8523  0EC6  3A01               	xorlw	1
  8524  0EC7  1D03               	skipz
  8525  0EC8  2ECE               	goto	l3053
  8526                           
  8527                           ;LED_B1.c: 141: if (led == 99) {
  8528  0EC9  0823               	movf	setLED@led,w
  8529  0ECA  3A63               	xorlw	99
  8530  0ECB  1D03               	skipz
  8531  0ECC  2ECE               	goto	l3053
  8532                           
  8533                           ;LED_B1.c: 145: RB5 = 0;
  8534  0ECD  128D               	bcf	13,5	;volatile
  8535  0ECE                     l3053:	
  8536                           
  8537                           ;LED_B1.c: 147: }
  8538                           ;LED_B1.c: 149: } if (command == 10) {
  8539  0ECE  0822               	movf	setLED@command,w
  8540  0ECF  3A0A               	xorlw	10
  8541  0ED0  1D03               	skipz
  8542  0ED1  2EE0               	goto	l3061
  8543                           
  8544                           ;LED_B1.c: 150: LED->GO = 0;
  8545  0ED2  086A               	movf	_LED,w
  8546  0ED3  0086               	movwf	6
  8547  0ED4  0187               	clrf	7
  8548  0ED5  1081               	bcf	1,1
  8549                           
  8550                           ;LED_B1.c: 151: LED->Time = 0;
  8551  0ED6  0A6A               	incf	_LED,w
  8552  0ED7  0086               	movwf	6
  8553  0ED8  0187               	clrf	7
  8554  0ED9  3000               	movlw	0
  8555  0EDA  3FC0               	movwi [0]fsr1
  8556  0EDB  3FC1               	movwi [1]fsr1
  8557                           
  8558                           ;LED_B1.c: 180: if (led == 99) {
  8559  0EDC  0823               	movf	setLED@led,w
  8560  0EDD  3A63               	xorlw	99
  8561  0EDE  1903               	btfsc	3,2
  8562                           
  8563                           ;LED_B1.c: 184: RB5 = 1;
  8564  0EDF  168D               	bsf	13,5	;volatile
  8565  0EE0                     l3061:	
  8566                           
  8567                           ;LED_B1.c: 186: }
  8568                           ;LED_B1.c: 188: }
  8569                           ;LED_B1.c: 189: if (command == 11) {
  8570  0EE0  0822               	movf	setLED@command,w
  8571  0EE1  3A0B               	xorlw	11
  8572  0EE2  1D03               	skipz
  8573  0EE3  0008               	return
  8574                           
  8575                           ;LED_B1.c: 190: LED->GO = 1;
  8576  0EE4  086A               	movf	_LED,w
  8577  0EE5  0086               	movwf	6
  8578  0EE6  0187               	clrf	7
  8579  0EE7  1481               	bsf	1,1
  8580  0EE8  0008               	return
  8581  0EE9                     __end_of_setLED:	
  8582                           
  8583                           	psect	text55
  8584  0B7D                     __ptext55:	
  8585 ;; *************** function _LedPointSelect *****************
  8586 ;; Defined at:
  8587 ;;		line 7 in file "../src/LED_B1.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  led             1    wreg     unsigned char 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  led             1    1[BANK0 ] unsigned char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;		None               void
  8594 ;; Registers used:
  8595 ;;		wreg
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8601 ;;      Params:         0       0       0       0       0       0       0       0
  8602 ;;      Locals:         0       1       0       0       0       0       0       0
  8603 ;;      Temps:          0       1       0       0       0       0       0       0
  8604 ;;      Totals:         0       2       0       0       0       0       0       0
  8605 ;;Total ram usage:        2 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    5
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_setLED_Initialization
  8612 ;;		_setLED
  8613 ;;		_setLED_Main
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           
  8618                           ;psect for function _LedPointSelect
  8619  0B7D                     _LedPointSelect:	
  8620                           
  8621                           ;incstack = 0
  8622                           ; Regs used in _LedPointSelect: [wreg]
  8623                           ;LedPointSelect@led stored from wreg
  8624  0B7D  0020               	movlb	0	; select bank0
  8625  0B7E  00A1               	movwf	LedPointSelect@led
  8626                           
  8627                           ;LED_B1.c: 24: if (led == 99) {
  8628  0B7F  0821               	movf	LedPointSelect@led,w
  8629  0B80  3A63               	xorlw	99
  8630  0B81  1D03               	skipz
  8631  0B82  0008               	return
  8632                           
  8633                           ;LED_B1.c: 25: LED = &VarErrLED;
  8634  0B83  30C8               	movlw	_VarErrLED& (0+255)
  8635  0B84  00A0               	movwf	??_LedPointSelect
  8636  0B85  0820               	movf	??_LedPointSelect,w
  8637  0B86  00EA               	movwf	_LED
  8638  0B87  0008               	return
  8639  0B88                     __end_of_LedPointSelect:	
  8640                           
  8641                           	psect	text56
  8642  0BAA                     __ptext56:	
  8643 ;; *************** function _setDimmerLights_Line *****************
  8644 ;; Defined at:
  8645 ;;		line 677 in file "../src/Dimmer_B1.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  lights          1    wreg     unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  lights          1    0[BANK0 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;		None               void
  8652 ;; Registers used:
  8653 ;;		wreg
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8659 ;;      Params:         0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       1       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       1       0       0       0       0       0       0
  8663 ;;Total ram usage:        1 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    5
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_setDimmerLights
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _setDimmerLights_Line
  8675  0BAA                     _setDimmerLights_Line:	
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in _setDimmerLights_Line: [wreg]
  8679                           ;setDimmerLights_Line@lights stored from wreg
  8680  0BAA  0020               	movlb	0	; select bank0
  8681  0BAB  00A0               	movwf	setDimmerLights_Line@lights
  8682                           
  8683                           ;Dimmer_B1.c: 679: DimmerLights1.Line = 0;
  8684  0BAC  0021               	movlb	1	; select bank1
  8685  0BAD  1039               	bcf	(_DimmerLights1^(0+128)+9),0
  8686                           
  8687                           ;Dimmer_B1.c: 688: if (lights == 1) {
  8688  0BAE  0020               	movlb	0	; select bank0
  8689  0BAF  0820               	movf	setDimmerLights_Line@lights,w
  8690  0BB0  3A01               	xorlw	1
  8691  0BB1  1D03               	skipz
  8692  0BB2  0008               	return
  8693                           
  8694                           ;Dimmer_B1.c: 689: DimmerLights1.Line = 1;
  8695  0BB3  0021               	movlb	1	; select bank1
  8696  0BB4  1439               	bsf	(_DimmerLights1^(0+128)+9),0
  8697  0BB5  0008               	return
  8698  0BB6                     __end_of_setDimmerLights_Line:	
  8699                           
  8700                           	psect	text57
  8701  073A                     __ptext57:	
  8702 ;; *************** function _setBuz *****************
  8703 ;; Defined at:
  8704 ;;		line 22 in file "../src/Buzzer_B1.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  count           1    wreg     unsigned char 
  8707 ;;  time            2    9[BANK0 ] int 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  count           1   12[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;		None               void
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8719 ;;      Params:         0       2       0       0       0       0       0       0
  8720 ;;      Locals:         0       1       0       0       0       0       0       0
  8721 ;;      Temps:          0       1       0       0       0       0       0       0
  8722 ;;      Totals:         0       4       0       0       0       0       0       0
  8723 ;;Total ram usage:        4 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    6
  8726 ;; This function calls:
  8727 ;;		___awdiv
  8728 ;; This function is called by:
  8729 ;;		_setDimmerLights_Main
  8730 ;;		_setDimmerLights_SwOn
  8731 ;;		_my_MainTimer
  8732 ;;		_setMain_Exception
  8733 ;;		_setSw_Main
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _setBuz
  8739  073A                     _setBuz:	
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
  8743                           ;setBuz@count stored from wreg
  8744  073A  0020               	movlb	0	; select bank0
  8745  073B  00AC               	movwf	setBuz@count
  8746                           
  8747                           ;Buzzer_B1.c: 23: time /= 10;
  8748  073C  300A               	movlw	10
  8749  073D  00A0               	movwf	___awdiv@divisor
  8750  073E  3000               	movlw	0
  8751  073F  00A1               	movwf	___awdiv@divisor+1
  8752  0740  082A               	movf	setBuz@time+1,w
  8753  0741  01A3               	clrf	___awdiv@dividend+1
  8754  0742  07A3               	addwf	___awdiv@dividend+1,f
  8755  0743  0829               	movf	setBuz@time,w
  8756  0744  01A2               	clrf	___awdiv@dividend
  8757  0745  07A2               	addwf	___awdiv@dividend,f
  8758  0746  3186  2609  3187   	fcall	___awdiv
  8759  0749  0020               	movlb	0	; select bank0
  8760  074A  0821               	movf	?___awdiv+1,w
  8761  074B  01AA               	clrf	setBuz@time+1
  8762  074C  07AA               	addwf	setBuz@time+1,f
  8763  074D  0820               	movf	?___awdiv,w
  8764  074E  01A9               	clrf	setBuz@time
  8765  074F  07A9               	addwf	setBuz@time,f
  8766                           
  8767                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
  8768  0750  1C56               	btfss	_Buz1,0
  8769  0751  0008               	return
  8770                           
  8771                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
  8772  0752  18D6               	btfsc	_Buz1,1
  8773  0753  2F63               	goto	l48
  8774                           
  8775                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
  8776  0754  14D6               	bsf	_Buz1,1
  8777                           
  8778                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
  8779  0755  01D7               	clrf	_Buz1+1
  8780  0756  01D8               	clrf	_Buz1+2
  8781                           
  8782                           ;Buzzer_B1.c: 28: Buz1.Count = count;
  8783  0757  082C               	movf	setBuz@count,w
  8784  0758  00AB               	movwf	??_setBuz
  8785  0759  082B               	movf	??_setBuz,w
  8786  075A  00D9               	movwf	_Buz1+3
  8787                           
  8788                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
  8789  075B  082A               	movf	setBuz@time+1,w
  8790  075C  01DD               	clrf	_Buz1+7
  8791  075D  07DD               	addwf	_Buz1+7,f
  8792  075E  0829               	movf	setBuz@time,w
  8793  075F  01DC               	clrf	_Buz1+6
  8794  0760  07DC               	addwf	_Buz1+6,f
  8795                           
  8796                           ;Buzzer_B1.c: 30: RB3 = 1;
  8797  0761  158D               	bsf	13,3	;volatile
  8798                           
  8799                           ;Buzzer_B1.c: 31: } else {
  8800  0762  0008               	return
  8801  0763                     l48:	
  8802                           
  8803                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
  8804  0763  19D6               	btfsc	_Buz1,3
  8805  0764  2F71               	goto	l50
  8806                           
  8807                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
  8808  0765  15D6               	bsf	_Buz1,3
  8809                           
  8810                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
  8811  0766  082C               	movf	setBuz@count,w
  8812  0767  00AB               	movwf	??_setBuz
  8813  0768  082B               	movf	??_setBuz,w
  8814  0769  00DA               	movwf	_Buz1+4
  8815                           
  8816                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
  8817  076A  082A               	movf	setBuz@time+1,w
  8818  076B  01DF               	clrf	_Buz1+9
  8819  076C  07DF               	addwf	_Buz1+9,f
  8820  076D  0829               	movf	setBuz@time,w
  8821  076E  01DE               	clrf	_Buz1+8
  8822  076F  07DE               	addwf	_Buz1+8,f
  8823                           
  8824                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
  8825  0770  0008               	return
  8826  0771                     l50:	
  8827  0771  1A56               	btfsc	_Buz1,4
  8828  0772  0008               	return
  8829                           
  8830                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
  8831  0773  1656               	bsf	_Buz1,4
  8832                           
  8833                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
  8834  0774  082C               	movf	setBuz@count,w
  8835  0775  00AB               	movwf	??_setBuz
  8836  0776  082B               	movf	??_setBuz,w
  8837  0777  00DB               	movwf	_Buz1+5
  8838                           
  8839                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
  8840  0778  082A               	movf	setBuz@time+1,w
  8841  0779  01E1               	clrf	_Buz1+11
  8842  077A  07E1               	addwf	_Buz1+11,f
  8843  077B  0829               	movf	setBuz@time,w
  8844  077C  01E0               	clrf	_Buz1+10
  8845  077D  07E0               	addwf	_Buz1+10,f
  8846  077E  0008               	return
  8847  077F                     __end_of_setBuz:	
  8848                           
  8849                           	psect	text58
  8850  0609                     __ptext58:	
  8851 ;; *************** function ___awdiv *****************
  8852 ;; Defined at:
  8853 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;  divisor         2    0[BANK0 ] int 
  8856 ;;  dividend        2    2[BANK0 ] int 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  quotient        2    7[BANK0 ] int 
  8859 ;;  sign            1    6[BANK0 ] unsigned char 
  8860 ;;  counter         1    5[BANK0 ] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  2    0[BANK0 ] int 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8870 ;;      Params:         0       4       0       0       0       0       0       0
  8871 ;;      Locals:         0       4       0       0       0       0       0       0
  8872 ;;      Temps:          0       1       0       0       0       0       0       0
  8873 ;;      Totals:         0       9       0       0       0       0       0       0
  8874 ;;Total ram usage:        9 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    5
  8877 ;; This function calls:
  8878 ;;		Nothing
  8879 ;; This function is called by:
  8880 ;;		_setBuz
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           
  8885                           ;psect for function ___awdiv
  8886  0609                     ___awdiv:	
  8887                           
  8888                           ;incstack = 0
  8889                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8890  0609  0020               	movlb	0	; select bank0
  8891  060A  01A6               	clrf	___awdiv@sign
  8892  060B  1FA1               	btfss	___awdiv@divisor+1,7
  8893  060C  2E14               	goto	l2971
  8894  060D  09A0               	comf	___awdiv@divisor,f
  8895  060E  09A1               	comf	___awdiv@divisor+1,f
  8896  060F  0AA0               	incf	___awdiv@divisor,f
  8897  0610  1903               	skipnz
  8898  0611  0AA1               	incf	___awdiv@divisor+1,f
  8899  0612  01A6               	clrf	___awdiv@sign
  8900  0613  0AA6               	incf	___awdiv@sign,f
  8901  0614                     l2971:	
  8902  0614  1FA3               	btfss	___awdiv@dividend+1,7
  8903  0615  2E1F               	goto	l2977
  8904  0616  09A2               	comf	___awdiv@dividend,f
  8905  0617  09A3               	comf	___awdiv@dividend+1,f
  8906  0618  0AA2               	incf	___awdiv@dividend,f
  8907  0619  1903               	skipnz
  8908  061A  0AA3               	incf	___awdiv@dividend+1,f
  8909  061B  3001               	movlw	1
  8910  061C  00A4               	movwf	??___awdiv
  8911  061D  0824               	movf	??___awdiv,w
  8912  061E  06A6               	xorwf	___awdiv@sign,f
  8913  061F                     l2977:	
  8914  061F  01A7               	clrf	___awdiv@quotient
  8915  0620  01A8               	clrf	___awdiv@quotient+1
  8916  0621  0821               	movf	___awdiv@divisor+1,w
  8917  0622  0420               	iorwf	___awdiv@divisor,w
  8918  0623  1903               	skipnz
  8919  0624  2E4E               	goto	l2999
  8920  0625  01A5               	clrf	___awdiv@counter
  8921  0626  0AA5               	incf	___awdiv@counter,f
  8922  0627                     l2987:	
  8923  0627  1BA1               	btfsc	___awdiv@divisor+1,7
  8924  0628  2E33               	goto	l2989
  8925  0629  3001               	movlw	1
  8926  062A                     u1935:	
  8927  062A  35A0               	lslf	___awdiv@divisor,f
  8928  062B  0DA1               	rlf	___awdiv@divisor+1,f
  8929  062C  0B89               	decfsz	9,f
  8930  062D  2E2A               	goto	u1935
  8931  062E  3001               	movlw	1
  8932  062F  00A4               	movwf	??___awdiv
  8933  0630  0824               	movf	??___awdiv,w
  8934  0631  07A5               	addwf	___awdiv@counter,f
  8935  0632  2E27               	goto	l2987
  8936  0633                     l2989:	
  8937  0633  3001               	movlw	1
  8938  0634                     u1955:	
  8939  0634  35A7               	lslf	___awdiv@quotient,f
  8940  0635  0DA8               	rlf	___awdiv@quotient+1,f
  8941  0636  0B89               	decfsz	9,f
  8942  0637  2E34               	goto	u1955
  8943  0638  0821               	movf	___awdiv@divisor+1,w
  8944  0639  0223               	subwf	___awdiv@dividend+1,w
  8945  063A  1D03               	skipz
  8946  063B  2E3E               	goto	u1965
  8947  063C  0820               	movf	___awdiv@divisor,w
  8948  063D  0222               	subwf	___awdiv@dividend,w
  8949  063E                     u1965:	
  8950  063E  1C03               	skipc
  8951  063F  2E45               	goto	l2995
  8952  0640  0820               	movf	___awdiv@divisor,w
  8953  0641  02A2               	subwf	___awdiv@dividend,f
  8954  0642  0821               	movf	___awdiv@divisor+1,w
  8955  0643  3BA3               	subwfb	___awdiv@dividend+1,f
  8956  0644  1427               	bsf	___awdiv@quotient,0
  8957  0645                     l2995:	
  8958  0645  3001               	movlw	1
  8959  0646                     u1975:	
  8960  0646  36A1               	lsrf	___awdiv@divisor+1,f
  8961  0647  0CA0               	rrf	___awdiv@divisor,f
  8962  0648  0B89               	decfsz	9,f
  8963  0649  2E46               	goto	u1975
  8964  064A  3001               	movlw	1
  8965  064B  02A5               	subwf	___awdiv@counter,f
  8966  064C  1D03               	btfss	3,2
  8967  064D  2E33               	goto	l2989
  8968  064E                     l2999:	
  8969  064E  0826               	movf	___awdiv@sign,w
  8970  064F  1903               	btfsc	3,2
  8971  0650  2E56               	goto	l3003
  8972  0651  09A7               	comf	___awdiv@quotient,f
  8973  0652  09A8               	comf	___awdiv@quotient+1,f
  8974  0653  0AA7               	incf	___awdiv@quotient,f
  8975  0654  1903               	skipnz
  8976  0655  0AA8               	incf	___awdiv@quotient+1,f
  8977  0656                     l3003:	
  8978  0656  0828               	movf	___awdiv@quotient+1,w
  8979  0657  01A1               	clrf	?___awdiv+1
  8980  0658  07A1               	addwf	?___awdiv+1,f
  8981  0659  0827               	movf	___awdiv@quotient,w
  8982  065A  01A0               	clrf	?___awdiv
  8983  065B  07A0               	addwf	?___awdiv,f
  8984  065C  0008               	return
  8985  065D                     __end_of___awdiv:	
  8986                           
  8987                           	psect	text59
  8988  0B9E                     __ptext59:	
  8989 ;; *************** function _DimmerLights_Initialization *****************
  8990 ;; Defined at:
  8991 ;;		line 336 in file "../src/Dimmer_B1.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;		None               void
  8998 ;; Registers used:
  8999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9005 ;;      Params:         0       0       0       0       0       0       0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0
  9007 ;;      Temps:          0       1       0       0       0       0       0       0
  9008 ;;      Totals:         0       1       0       0       0       0       0       0
  9009 ;;Total ram usage:        1 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    7
  9012 ;; This function calls:
  9013 ;;		_Dimmer_Initialization
  9014 ;;		_setDimmerLights_Initialization
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _DimmerLights_Initialization
  9022  0B9E                     _DimmerLights_Initialization:	
  9023                           
  9024                           ;Dimmer_B1.c: 339: DimmerLights11 = &DimmerLights1;
  9025                           
  9026                           ;incstack = 0
  9027                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9028  0B9E  30B0               	movlw	_DimmerLights1& (0+255)
  9029  0B9F  0020               	movlb	0	; select bank0
  9030  0BA0  00A4               	movwf	??_DimmerLights_Initialization
  9031  0BA1  0824               	movf	??_DimmerLights_Initialization,w
  9032  0BA2  00FB               	movwf	_DimmerLights11
  9033                           
  9034                           ;Dimmer_B1.c: 340: setDimmerLights_Initialization(1);
  9035  0BA3  3001               	movlw	1
  9036  0BA4  318D  255B  318B   	fcall	_setDimmerLights_Initialization
  9037                           
  9038                           ;Dimmer_B1.c: 354: Dimmer_Initialization();
  9039  0BA7  3187  27FF         	fcall	_Dimmer_Initialization
  9040  0BA9  0008               	return
  9041  0BAA                     __end_of_DimmerLights_Initialization:	
  9042                           
  9043                           	psect	text60
  9044  0D5B                     __ptext60:	
  9045 ;; *************** function _setDimmerLights_Initialization *****************
  9046 ;; Defined at:
  9047 ;;		line 360 in file "../src/Dimmer_B1.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  lights          1    wreg     unsigned char 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  lights          1    3[BANK0 ] unsigned char 
  9052 ;; Return value:  Size  Location     Type
  9053 ;;		None               void
  9054 ;; Registers used:
  9055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9061 ;;      Params:         0       0       0       0       0       0       0       0
  9062 ;;      Locals:         0       1       0       0       0       0       0       0
  9063 ;;      Temps:          0       1       0       0       0       0       0       0
  9064 ;;      Totals:         0       2       0       0       0       0       0       0
  9065 ;;Total ram usage:        2 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    6
  9068 ;; This function calls:
  9069 ;;		_DimmerLightsPointSelect
  9070 ;; This function is called by:
  9071 ;;		_DimmerLights_Initialization
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _setDimmerLights_Initialization
  9077  0D5B                     _setDimmerLights_Initialization:	
  9078                           
  9079                           ;incstack = 0
  9080                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9081                           ;setDimmerLights_Initialization@lights stored from wreg
  9082  0D5B  0020               	movlb	0	; select bank0
  9083  0D5C  00A3               	movwf	setDimmerLights_Initialization@lights
  9084                           
  9085                           ;Dimmer_B1.c: 362: DimmerLightsPointSelect(lights);
  9086  0D5D  0823               	movf	setDimmerLights_Initialization@lights,w
  9087  0D5E  318B  2372         	fcall	_DimmerLightsPointSelect
  9088                           
  9089                           ;Dimmer_B1.c: 368: DimmerLights->MaxmumValue = ((char)(65*0.8));
  9090  0D60  3034               	movlw	52
  9091  0D61  0020               	movlb	0	; select bank0
  9092  0D62  00A2               	movwf	??_setDimmerLights_Initialization
  9093  0D63  087A               	movf	_DimmerLights,w
  9094  0D64  3E05               	addlw	5
  9095  0D65  0086               	movwf	6
  9096  0D66  0187               	clrf	7
  9097  0D67  0822               	movf	??_setDimmerLights_Initialization,w
  9098  0D68  0081               	movwf	1
  9099                           
  9100                           ;Dimmer_B1.c: 369: DimmerLights->MinimumValue = ((char)(25*0.8));
  9101  0D69  3014               	movlw	20
  9102  0D6A  00A2               	movwf	??_setDimmerLights_Initialization
  9103  0D6B  087A               	movf	_DimmerLights,w
  9104  0D6C  3E06               	addlw	6
  9105  0D6D  0086               	movwf	6
  9106  0D6E  0187               	clrf	7
  9107  0D6F  0822               	movf	??_setDimmerLights_Initialization,w
  9108  0D70  0081               	movwf	1
  9109                           
  9110                           ;Dimmer_B1.c: 383: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9111  0D71  087A               	movf	_DimmerLights,w
  9112  0D72  3E05               	addlw	5
  9113  0D73  0086               	movwf	6
  9114  0D74  0187               	clrf	7
  9115  0D75  0801               	movf	1,w
  9116  0D76  00A2               	movwf	??_setDimmerLights_Initialization
  9117  0D77  087A               	movf	_DimmerLights,w
  9118  0D78  3E04               	addlw	4
  9119  0D79  0086               	movwf	6
  9120  0D7A  0187               	clrf	7
  9121  0D7B  0822               	movf	??_setDimmerLights_Initialization,w
  9122  0D7C  0081               	movwf	1
  9123  0D7D  0008               	return
  9124  0D7E                     __end_of_setDimmerLights_Initialization:	
  9125                           
  9126                           	psect	text61
  9127  0B72                     __ptext61:	
  9128 ;; *************** function _DimmerLightsPointSelect *****************
  9129 ;; Defined at:
  9130 ;;		line 317 in file "../src/Dimmer_B1.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  lights          1    wreg     unsigned char 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  lights          1    1[BANK0 ] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;		None               void
  9137 ;; Registers used:
  9138 ;;		wreg
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9144 ;;      Params:         0       0       0       0       0       0       0       0
  9145 ;;      Locals:         0       1       0       0       0       0       0       0
  9146 ;;      Temps:          0       1       0       0       0       0       0       0
  9147 ;;      Totals:         0       2       0       0       0       0       0       0
  9148 ;;Total ram usage:        2 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    5
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_setDimmerLights_Initialization
  9155 ;;		_setDimmerLights_Main
  9156 ;;		_getDimmerLights_Status
  9157 ;;		_setDimmerLights_SwOn
  9158 ;;		_setDimmerLights_SwOff
  9159 ;;		_setDimmerLights_AdjControl
  9160 ;;		_setDimmerLights_ErrorClose
  9161 ;;		_setDimmerLights
  9162 ;;		_setDimmerLights_Adj
  9163 ;;		_setDimmerLights_Trigger
  9164 ;;		_setDimmerLights_TriggerAdj
  9165 ;;		_setDimmerLights_Status
  9166 ;;		_setDimmerLights_AdjRF
  9167 ;;		_setDimmerLights_GO
  9168 ;;		_setDimmerLights_MaxmumValue
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _DimmerLightsPointSelect
  9174  0B72                     _DimmerLightsPointSelect:	
  9175                           
  9176                           ;incstack = 0
  9177                           ; Regs used in _DimmerLightsPointSelect: [wreg]
  9178                           ;DimmerLightsPointSelect@lights stored from wreg
  9179  0B72  0020               	movlb	0	; select bank0
  9180  0B73  00A1               	movwf	DimmerLightsPointSelect@lights
  9181                           
  9182                           ;Dimmer_B1.c: 319: if (lights == 1) {
  9183  0B74  0821               	movf	DimmerLightsPointSelect@lights,w
  9184  0B75  3A01               	xorlw	1
  9185  0B76  1D03               	skipz
  9186  0B77  0008               	return
  9187                           
  9188                           ;Dimmer_B1.c: 320: DimmerLights = &DimmerLights1;
  9189  0B78  30B0               	movlw	_DimmerLights1& (0+255)
  9190  0B79  00A0               	movwf	??_DimmerLightsPointSelect
  9191  0B7A  0820               	movf	??_DimmerLightsPointSelect,w
  9192  0B7B  00FA               	movwf	_DimmerLights
  9193  0B7C  0008               	return
  9194  0B7D                     __end_of_DimmerLightsPointSelect:	
  9195                           
  9196                           	psect	text62
  9197  07FF                     __ptext62:	
  9198 ;; *************** function _Dimmer_Initialization *****************
  9199 ;; Defined at:
  9200 ;;		line 901 in file "../src/Dimmer_B1.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;		None               void
  9207 ;; Registers used:
  9208 ;;		None
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9214 ;;      Params:         0       0       0       0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    5
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_DimmerLights_Initialization
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           
  9229                           ;psect for function _Dimmer_Initialization
  9230  07FF                     _Dimmer_Initialization:	
  9231                           
  9232                           ;incstack = 0
  9233                           ; Regs used in _Dimmer_Initialization: []
  9234  07FF  0008               	return
  9235  0800                     __end_of_Dimmer_Initialization:	
  9236                           
  9237                           	psect	text63
  9238  0FC0                     __ptext63:	
  9239 ;; *************** function _Buzzer_Main *****************
  9240 ;; Defined at:
  9241 ;;		line 46 in file "../src/Buzzer_B1.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;		None               void
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9255 ;;      Params:         0       0       0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0
  9257 ;;      Temps:          0       1       0       0       0       0       0       0
  9258 ;;      Totals:         0       1       0       0       0       0       0       0
  9259 ;;Total ram usage:        1 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    5
  9262 ;; This function calls:
  9263 ;;		Nothing
  9264 ;; This function is called by:
  9265 ;;		_main
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           
  9270                           ;psect for function _Buzzer_Main
  9271  0FC0                     _Buzzer_Main:	
  9272                           
  9273                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
  9274                           
  9275                           ;incstack = 0
  9276                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
  9277  0FC0  0020               	movlb	0	; select bank0
  9278  0FC1  1CD6               	btfss	_Buz1,1
  9279  0FC2  0008               	return
  9280                           
  9281                           ;Buzzer_B1.c: 48: Buz1.Counter++;
  9282  0FC3  3001               	movlw	1
  9283  0FC4  07D7               	addwf	_Buz1+1,f
  9284  0FC5  3000               	movlw	0
  9285  0FC6  3DD8               	addwfc	_Buz1+2,f
  9286                           
  9287                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
  9288  0FC7  085D               	movf	_Buz1+7,w
  9289  0FC8  0258               	subwf	_Buz1+2,w
  9290  0FC9  1D03               	skipz
  9291  0FCA  2FCD               	goto	u3415
  9292  0FCB  085C               	movf	_Buz1+6,w
  9293  0FCC  0257               	subwf	_Buz1+1,w
  9294  0FCD                     u3415:	
  9295  0FCD  1C03               	skipc
  9296  0FCE  0008               	return
  9297                           
  9298                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
  9299  0FCF  01D7               	clrf	_Buz1+1
  9300  0FD0  01D8               	clrf	_Buz1+2
  9301                           
  9302                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
  9303  0FD1  12D6               	bcf	_Buz1,5
  9304  0FD2  198D               	btfsc	13,3	;volatile
  9305  0FD3  16D6               	bsf	_Buz1,5
  9306                           
  9307                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
  9308  0FD4  0020               	movlb	0	; select bank0
  9309  0FD5  1AD6               	btfsc	_Buz1,5
  9310  0FD6  2FFB               	goto	l58
  9311                           
  9312                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
  9313  0FD7  08D9               	movf	_Buz1+3,f
  9314  0FD8  1D03               	skipz
  9315  0FD9  2FF8               	goto	l59
  9316                           
  9317                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
  9318  0FDA  1DD6               	btfss	_Buz1,3
  9319  0FDB  2FE8               	goto	l60
  9320                           
  9321                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
  9322  0FDC  11D6               	bcf	_Buz1,3
  9323                           
  9324                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
  9325  0FDD  085A               	movf	_Buz1+4,w
  9326  0FDE  00A0               	movwf	??_Buzzer_Main
  9327  0FDF  0820               	movf	??_Buzzer_Main,w
  9328  0FE0  00D9               	movwf	_Buz1+3
  9329                           
  9330                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
  9331  0FE1  085F               	movf	_Buz1+9,w
  9332  0FE2  01DD               	clrf	_Buz1+7
  9333  0FE3  07DD               	addwf	_Buz1+7,f
  9334  0FE4  085E               	movf	_Buz1+8,w
  9335  0FE5  01DC               	clrf	_Buz1+6
  9336  0FE6  07DC               	addwf	_Buz1+6,f
  9337                           
  9338                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
  9339  0FE7  0008               	return
  9340  0FE8                     l60:	
  9341  0FE8  1E56               	btfss	_Buz1,4
  9342  0FE9  2FF6               	goto	l62
  9343                           
  9344                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
  9345  0FEA  1256               	bcf	_Buz1,4
  9346                           
  9347                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
  9348  0FEB  085B               	movf	_Buz1+5,w
  9349  0FEC  00A0               	movwf	??_Buzzer_Main
  9350  0FED  0820               	movf	??_Buzzer_Main,w
  9351  0FEE  00D9               	movwf	_Buz1+3
  9352                           
  9353                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
  9354  0FEF  0861               	movf	_Buz1+11,w
  9355  0FF0  01DD               	clrf	_Buz1+7
  9356  0FF1  07DD               	addwf	_Buz1+7,f
  9357  0FF2  0860               	movf	_Buz1+10,w
  9358  0FF3  01DC               	clrf	_Buz1+6
  9359  0FF4  07DC               	addwf	_Buz1+6,f
  9360                           
  9361                           ;Buzzer_B1.c: 62: } else {
  9362  0FF5  0008               	return
  9363  0FF6                     l62:	
  9364                           
  9365                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
  9366  0FF6  10D6               	bcf	_Buz1,1
  9367                           
  9368                           ;Buzzer_B1.c: 64: }
  9369                           ;Buzzer_B1.c: 65: } else {
  9370  0FF7  0008               	return
  9371  0FF8                     l59:	
  9372                           
  9373                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
  9374  0FF8  16D6               	bsf	_Buz1,5
  9375                           
  9376                           ;Buzzer_B1.c: 68: RB3 = 1;
  9377  0FF9  158D               	bsf	13,3	;volatile
  9378                           
  9379                           ;Buzzer_B1.c: 69: }
  9380                           ;Buzzer_B1.c: 70: } else {
  9381  0FFA  0008               	return
  9382  0FFB                     l58:	
  9383                           
  9384                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
  9385  0FFB  12D6               	bcf	_Buz1,5
  9386                           
  9387                           ;Buzzer_B1.c: 73: RB3 = 0;
  9388  0FFC  118D               	bcf	13,3	;volatile
  9389                           
  9390                           ;Buzzer_B1.c: 75: Buz1.Count--;
  9391  0FFD  3001               	movlw	1
  9392  0FFE  02D9               	subwf	_Buz1+3,f
  9393  0FFF  0008               	return
  9394  1000                     __end_of_Buzzer_Main:	
  9395                           
  9396                           	psect	text64
  9397  0AFA                     __ptext64:	
  9398 ;; *************** function _Buzzer_Initialization *****************
  9399 ;; Defined at:
  9400 ;;		line 11 in file "../src/Buzzer_B1.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;		None               void
  9407 ;; Registers used:
  9408 ;;		None
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9414 ;;      Params:         0       0       0       0       0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0       0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0
  9417 ;;      Totals:         0       0       0       0       0       0       0       0
  9418 ;;Total ram usage:        0 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    5
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_main
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           
  9429                           ;psect for function _Buzzer_Initialization
  9430  0AFA                     _Buzzer_Initialization:	
  9431                           
  9432                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _Buzzer_Initialization: []
  9436  0AFA  0020               	movlb	0	; select bank0
  9437  0AFB  1456               	bsf	_Buz1,0
  9438  0AFC  0008               	return
  9439  0AFD                     __end_of_Buzzer_Initialization:	
  9440                           
  9441                           	psect	intentry
  9442  0004                     __pintentry:	
  9443 ;; *************** function _ISR *****************
  9444 ;; Defined at:
  9445 ;;		line 107 in file "../src/MCU_B1.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;		None               void
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9459 ;;      Params:         0       0       0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0
  9461 ;;      Temps:          1       0       0       0       0       0       0       0
  9462 ;;      Totals:         1       0       0       0       0       0       0       0
  9463 ;;Total ram usage:        1 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    4
  9466 ;; This function calls:
  9467 ;;		_IOC_ISR
  9468 ;;		_TMR1_ISR
  9469 ;; This function is called by:
  9470 ;;		Interrupt level 1
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474  0004                     _ISR:	
  9475                           
  9476                           ;incstack = 0
  9477                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9478  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9479  0005  3180               	pagesel	$
  9480  0006  0020               	movlb	0	; select bank0
  9481  0007  087F               	movf	127,w
  9482  0008  00F9               	movwf	??_ISR
  9483                           
  9484                           ;MCU_B1.c: 109: IOC_ISR();
  9485  0009  318B  23F5  3180   	fcall	_IOC_ISR
  9486                           
  9487                           ;MCU_B1.c: 111: ;;
  9488                           ;MCU_B1.c: 113: TMR1_ISR();
  9489  000C  318D  257E         	fcall	_TMR1_ISR
  9490  000E  0879               	movf	??_ISR,w
  9491  000F  0020               	movlb	0	; select bank0
  9492  0010  00FF               	movwf	127
  9493  0011  107E               	bcf	126,0	;clear compiler interrupt flag
  9494  0012  0009               	retfie
  9495  0013                     __end_of_ISR:	
  9496                           
  9497                           	psect	text66
  9498  0D7E                     __ptext66:	
  9499 ;; *************** function _TMR1_ISR *****************
  9500 ;; Defined at:
  9501 ;;		line 209 in file "../src/MCU_B1.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;		None               void
  9508 ;; Registers used:
  9509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9515 ;;      Params:         0       0       0       0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    3
  9522 ;; This function calls:
  9523 ;;		_setDimmerLights_IntrControl
  9524 ;; This function is called by:
  9525 ;;		_ISR
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function _TMR1_ISR
  9531  0D7E                     _TMR1_ISR:	
  9532                           
  9533                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9537  0D7E  0021               	movlb	1	; select bank1
  9538  0D7F  1C11               	btfss	17,0	;volatile
  9539  0D80  0008               	return
  9540  0D81  0020               	movlb	0	; select bank0
  9541  0D82  1C11               	btfss	17,0	;volatile
  9542  0D83  0008               	return
  9543                           
  9544                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  9545  0D84  30FA               	movlw	250
  9546  0D85  0097               	movwf	23	;volatile
  9547                           
  9548                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  9549  0D86  3038               	movlw	56
  9550  0D87  0096               	movwf	22	;volatile
  9551                           
  9552                           ;MCU_B1.c: 214: TMR1IF = 0;
  9553  0D88  1011               	bcf	17,0	;volatile
  9554                           
  9555                           ;MCU_B1.c: 219: setDimmerLights_IntrControl(1);
  9556  0D89  3001               	movlw	1
  9557  0D8A  3181  2178  318D   	fcall	_setDimmerLights_IntrControl
  9558                           
  9559                           ;MCU_B1.c: 234: Timer1.Count++;
  9560  0D8D  3001               	movlw	1
  9561  0D8E  0020               	movlb	0	; select bank0
  9562  0D8F  07E6               	addwf	_Timer1+1,f
  9563  0D90  3000               	movlw	0
  9564  0D91  3DE7               	addwfc	_Timer1+2,f
  9565                           
  9566                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  9567  0D92  3001               	movlw	1
  9568  0D93  3E65               	addlw	_Timer1& (0+255)
  9569  0D94  0086               	movwf	6
  9570  0D95  0187               	clrf	7
  9571  0D96  3F40               	moviw [0]fsr1
  9572  0D97  3A64               	xorlw	100
  9573  0D98  1D03               	skipz
  9574  0D99  2D9C               	goto	u353_25
  9575  0D9A  3F41               	moviw [1]fsr1
  9576  0D9B  3A00               	xorlw	0
  9577  0D9C                     u353_25:	
  9578  0D9C  1D03               	skipz
  9579  0D9D  0008               	return
  9580                           
  9581                           ;MCU_B1.c: 236: {
  9582                           ;MCU_B1.c: 237: Timer1.Count = 0;
  9583  0D9E  01E6               	clrf	_Timer1+1
  9584  0D9F  01E7               	clrf	_Timer1+2
  9585                           
  9586                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  9587  0DA0  1465               	bsf	_Timer1,0
  9588  0DA1  0008               	return
  9589  0DA2                     __end_of_TMR1_ISR:	
  9590                           
  9591                           	psect	text67
  9592  0178                     __ptext67:	
  9593 ;; *************** function _setDimmerLights_IntrControl *****************
  9594 ;; Defined at:
  9595 ;;		line 93 in file "../src/Dimmer_B1.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  lights          1    wreg     unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  lights          1    8[COMMON] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;		None               void
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9609 ;;      Params:         0       0       0       0       0       0       0       0
  9610 ;;      Locals:         1       0       0       0       0       0       0       0
  9611 ;;      Temps:          4       0       0       0       0       0       0       0
  9612 ;;      Totals:         5       0       0       0       0       0       0       0
  9613 ;;Total ram usage:        5 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    2
  9616 ;; This function calls:
  9617 ;;		_DimmerIntrPointSelect
  9618 ;;		i1_setLED
  9619 ;; This function is called by:
  9620 ;;		_TMR1_ISR
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function _setDimmerLights_IntrControl
  9626  0178                     _setDimmerLights_IntrControl:	
  9627                           
  9628                           ;incstack = 0
  9629                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9630                           ;setDimmerLights_IntrControl@lights stored from wreg
  9631  0178  00F8               	movwf	setDimmerLights_IntrControl@lights
  9632                           
  9633                           ;Dimmer_B1.c: 226: DimmerIntrPointSelect(lights);
  9634  0179  0878               	movf	setDimmerLights_IntrControl@lights,w
  9635  017A  318B  2349  3181   	fcall	_DimmerIntrPointSelect
  9636                           
  9637                           ;Dimmer_B1.c: 227: if (DimmerLightsIntr->GO == 1) {
  9638  017D  087C               	movf	_DimmerLightsIntr,w
  9639  017E  0086               	movwf	6
  9640  017F  0187               	clrf	7
  9641  0180  1C01               	btfss	1,0
  9642  0181  29C6               	goto	i1l3531
  9643                           
  9644                           ;Dimmer_B1.c: 228: DimmerLightsIntr->Count++;
  9645  0182  3001               	movlw	1
  9646  0183  00F4               	movwf	??_setDimmerLights_IntrControl
  9647  0184  087C               	movf	_DimmerLightsIntr,w
  9648  0185  3E03               	addlw	3
  9649  0186  0086               	movwf	6
  9650  0187  0187               	clrf	7
  9651  0188  0874               	movf	??_setDimmerLights_IntrControl,w
  9652  0189  0781               	addwf	1,f
  9653                           
  9654                           ;Dimmer_B1.c: 229: if (DimmerLightsIntr->Count
  9655                           ;Dimmer_B1.c: 230: >= (DimmerLightsIntr->DimmingValue - Dimmer.Correction)) {
  9656  018A  0020               	movlb	0	; select bank0
  9657  018B  0864               	movf	_Dimmer+2,w
  9658  018C  00F4               	movwf	??_setDimmerLights_IntrControl
  9659  018D  01F5               	clrf	??_setDimmerLights_IntrControl+1
  9660  018E  09F4               	comf	??_setDimmerLights_IntrControl,f
  9661  018F  09F5               	comf	??_setDimmerLights_IntrControl+1,f
  9662  0190  0AF4               	incf	??_setDimmerLights_IntrControl,f
  9663  0191  1903               	skipnz
  9664  0192  0AF5               	incf	??_setDimmerLights_IntrControl+1,f
  9665  0193  087C               	movf	_DimmerLightsIntr,w
  9666  0194  3E04               	addlw	4
  9667  0195  0086               	movwf	6
  9668  0196  0187               	clrf	7
  9669  0197  0801               	movf	1,w
  9670  0198  0774               	addwf	??_setDimmerLights_IntrControl,w
  9671  0199  00F6               	movwf	??_setDimmerLights_IntrControl+2
  9672  019A  0875               	movf	??_setDimmerLights_IntrControl+1,w
  9673  019B  1803               	skipnc
  9674  019C  0A75               	incf	??_setDimmerLights_IntrControl+1,w
  9675  019D  00F7               	movwf	??_setDimmerLights_IntrControl+3
  9676  019E  087C               	movf	_DimmerLightsIntr,w
  9677  019F  3E03               	addlw	3
  9678  01A0  0086               	movwf	6
  9679  01A1  0187               	clrf	7
  9680  01A2  0877               	movf	??_setDimmerLights_IntrControl+3,w
  9681  01A3  3A80               	xorlw	128
  9682  01A4  3C80               	sublw	128
  9683  01A5  1D03               	skipz
  9684  01A6  29A9               	goto	u285_25
  9685  01A7  0876               	movf	??_setDimmerLights_IntrControl+2,w
  9686  01A8  0201               	subwf	1,w
  9687  01A9                     u285_25:	
  9688  01A9  1C03               	skipc
  9689  01AA  2A77               	goto	i1l3577
  9690                           
  9691                           ;Dimmer_B1.c: 231: DimmerLightsIntr->Count = 0;
  9692  01AB  087C               	movf	_DimmerLightsIntr,w
  9693  01AC  3E03               	addlw	3
  9694  01AD  0086               	movwf	6
  9695  01AE  0187               	clrf	7
  9696  01AF  0181               	clrf	1
  9697                           
  9698                           ;Dimmer_B1.c: 232: DimmerLightsIntr->GO = 0;
  9699  01B0  087C               	movf	_DimmerLightsIntr,w
  9700  01B1  0086               	movwf	6
  9701  01B2  0187               	clrf	7
  9702  01B3  1001               	bcf	1,0
  9703                           
  9704                           ;Dimmer_B1.c: 233: DimmerLightsIntr->Flag = 1;
  9705  01B4  087C               	movf	_DimmerLightsIntr,w
  9706  01B5  3E08               	addlw	8
  9707  01B6  0086               	movwf	6
  9708  01B7  0187               	clrf	7
  9709  01B8  1401               	bsf	1,0
  9710                           
  9711                           ;Dimmer_B1.c: 234: if (DimmerLightsIntr->StatusFlag == 1) {
  9712  01B9  087C               	movf	_DimmerLightsIntr,w
  9713  01BA  0086               	movwf	6
  9714  01BB  0187               	clrf	7
  9715  01BC  1F01               	btfss	1,6
  9716  01BD  2A77               	goto	i1l3577
  9717                           
  9718                           ;Dimmer_B1.c: 236: if (lights == 1) {
  9719  01BE  0878               	movf	setDimmerLights_IntrControl@lights,w
  9720  01BF  3A01               	xorlw	1
  9721  01C0  1D03               	skipz
  9722  01C1  2A77               	goto	i1l3577
  9723                           
  9724                           ;Dimmer_B1.c: 237: RB1 = 0;
  9725  01C2  0020               	movlb	0	; select bank0
  9726  01C3  108D               	bcf	13,1	;volatile
  9727                           
  9728                           ;Dimmer_B1.c: 238: RB4=0;
  9729  01C4  120D               	bcf	13,4	;volatile
  9730                           
  9731                           ;Dimmer_B1.c: 239: }
  9732                           ;Dimmer_B1.c: 246: }
  9733                           ;Dimmer_B1.c: 247: }
  9734                           ;Dimmer_B1.c: 248: } else {
  9735  01C5  2A77               	goto	i1l3577
  9736  01C6                     i1l3531:	
  9737                           
  9738                           ;Dimmer_B1.c: 249: if (DimmerLightsIntr->Flag == 1) {
  9739  01C6  087C               	movf	_DimmerLightsIntr,w
  9740  01C7  3E08               	addlw	8
  9741  01C8  0086               	movwf	6
  9742  01C9  0187               	clrf	7
  9743  01CA  1C01               	btfss	1,0
  9744  01CB  2A77               	goto	i1l3577
  9745                           
  9746                           ;Dimmer_B1.c: 250: DimmerLightsIntr->Flag = 0;
  9747  01CC  087C               	movf	_DimmerLightsIntr,w
  9748  01CD  3E08               	addlw	8
  9749  01CE  0086               	movwf	6
  9750  01CF  0187               	clrf	7
  9751  01D0  1001               	bcf	1,0
  9752                           
  9753                           ;Dimmer_B1.c: 251: if (DimmerLightsIntr->Signal == 1) {
  9754  01D1  087C               	movf	_DimmerLightsIntr,w
  9755  01D2  0086               	movwf	6
  9756  01D3  0187               	clrf	7
  9757  01D4  1C81               	btfss	1,1
  9758  01D5  2A77               	goto	i1l3577
  9759                           
  9760                           ;Dimmer_B1.c: 252: DimmerLightsIntr->DimmingTime++;
  9761  01D6  3001               	movlw	1
  9762  01D7  00F4               	movwf	??_setDimmerLights_IntrControl
  9763  01D8  0A7C               	incf	_DimmerLightsIntr,w
  9764  01D9  0086               	movwf	6
  9765  01DA  0187               	clrf	7
  9766  01DB  0874               	movf	??_setDimmerLights_IntrControl,w
  9767  01DC  0781               	addwf	1,f
  9768                           
  9769                           ;Dimmer_B1.c: 253: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
  9770  01DD  0A7C               	incf	_DimmerLightsIntr,w
  9771  01DE  0086               	movwf	6
  9772  01DF  0187               	clrf	7
  9773  01E0  087C               	movf	_DimmerLightsIntr,w
  9774  01E1  3E02               	addlw	2
  9775  01E2  0084               	movwf	4
  9776  01E3  0185               	clrf	5
  9777  01E4  0800               	movf	0,w
  9778  01E5  0201               	subwf	1,w
  9779  01E6  1C03               	skipc
  9780  01E7  2A77               	goto	i1l3577
  9781                           
  9782                           ;Dimmer_B1.c: 254: DimmerLightsIntr->DimmingTime = 0;
  9783  01E8  0A7C               	incf	_DimmerLightsIntr,w
  9784  01E9  0086               	movwf	6
  9785  01EA  0187               	clrf	7
  9786  01EB  0181               	clrf	1
  9787                           
  9788                           ;Dimmer_B1.c: 255: if (DimmerLightsIntr->AdjFlag == 1) {
  9789  01EC  087C               	movf	_DimmerLightsIntr,w
  9790  01ED  0086               	movwf	6
  9791  01EE  0187               	clrf	7
  9792  01EF  1D81               	btfss	1,3
  9793  01F0  2A20               	goto	i1l3557
  9794                           
  9795                           ;Dimmer_B1.c: 256: if (DimmerLightsIntr->AdjStatus == 0) {
  9796  01F1  087C               	movf	_DimmerLightsIntr,w
  9797  01F2  0086               	movwf	6
  9798  01F3  0187               	clrf	7
  9799  01F4  1A01               	btfsc	1,4
  9800  01F5  2A0C               	goto	i1l3551
  9801                           
  9802                           ;Dimmer_B1.c: 257: if (DimmerLightsIntr->DimmingValue < ((char)(65*0.8))) {
  9803  01F6  087C               	movf	_DimmerLightsIntr,w
  9804  01F7  3E04               	addlw	4
  9805  01F8  0086               	movwf	6
  9806  01F9  0187               	clrf	7
  9807  01FA  3034               	movlw	52
  9808  01FB  0201               	subwf	1,w
  9809  01FC  1803               	skipnc
  9810  01FD  2A07               	goto	i1l3549
  9811                           
  9812                           ;Dimmer_B1.c: 258: DimmerLightsIntr->DimmingValue++;
  9813  01FE  3001               	movlw	1
  9814  01FF  00F4               	movwf	??_setDimmerLights_IntrControl
  9815  0200  087C               	movf	_DimmerLightsIntr,w
  9816  0201  3E04               	addlw	4
  9817  0202  0086               	movwf	6
  9818  0203  0187               	clrf	7
  9819  0204  0874               	movf	??_setDimmerLights_IntrControl,w
  9820  0205  0781               	addwf	1,f
  9821                           
  9822                           ;Dimmer_B1.c: 259: } else {
  9823  0206  2A77               	goto	i1l3577
  9824  0207                     i1l3549:	
  9825                           
  9826                           ;Dimmer_B1.c: 260: DimmerLightsIntr->AdjStatus = 1;
  9827  0207  087C               	movf	_DimmerLightsIntr,w
  9828  0208  0086               	movwf	6
  9829  0209  0187               	clrf	7
  9830  020A  1601               	bsf	1,4
  9831                           
  9832                           ;Dimmer_B1.c: 261: }
  9833                           ;Dimmer_B1.c: 262: } else {
  9834  020B  2A77               	goto	i1l3577
  9835  020C                     i1l3551:	
  9836                           
  9837                           ;Dimmer_B1.c: 263: if (DimmerLightsIntr->DimmingValue > ((char)(25*0.8))) {
  9838  020C  087C               	movf	_DimmerLightsIntr,w
  9839  020D  3E04               	addlw	4
  9840  020E  0086               	movwf	6
  9841  020F  0187               	clrf	7
  9842  0210  3015               	movlw	21
  9843  0211  0201               	subwf	1,w
  9844  0212  1C03               	skipc
  9845  0213  2A1B               	goto	i1l3555
  9846                           
  9847                           ;Dimmer_B1.c: 264: DimmerLightsIntr->DimmingValue--;
  9848  0214  087C               	movf	_DimmerLightsIntr,w
  9849  0215  3E04               	addlw	4
  9850  0216  0086               	movwf	6
  9851  0217  0187               	clrf	7
  9852  0218  3001               	movlw	1
  9853  0219  0281               	subwf	1,f
  9854                           
  9855                           ;Dimmer_B1.c: 265: } else {
  9856  021A  2A77               	goto	i1l3577
  9857  021B                     i1l3555:	
  9858                           
  9859                           ;Dimmer_B1.c: 266: DimmerLightsIntr->AdjStatus = 0;
  9860  021B  087C               	movf	_DimmerLightsIntr,w
  9861  021C  0086               	movwf	6
  9862  021D  0187               	clrf	7
  9863  021E  1201               	bcf	1,4
  9864                           
  9865                           ;Dimmer_B1.c: 267: }
  9866                           ;Dimmer_B1.c: 268: }
  9867                           ;Dimmer_B1.c: 269: } else if (DimmerLightsIntr->AdjRF == 1) {
  9868  021F  2A77               	goto	i1l3577
  9869  0220                     i1l3557:	
  9870  0220  087C               	movf	_DimmerLightsIntr,w
  9871  0221  0086               	movwf	6
  9872  0222  0187               	clrf	7
  9873  0223  1D01               	btfss	1,2
  9874  0224  2A61               	goto	i1l3571
  9875                           
  9876                           ;Dimmer_B1.c: 270: if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumValue) {
  9877  0225  087C               	movf	_DimmerLightsIntr,w
  9878  0226  3E04               	addlw	4
  9879  0227  0086               	movwf	6
  9880  0228  0187               	clrf	7
  9881  0229  087C               	movf	_DimmerLightsIntr,w
  9882  022A  3E05               	addlw	5
  9883  022B  0084               	movwf	4
  9884  022C  0185               	clrf	5
  9885  022D  0800               	movf	0,w
  9886  022E  0201               	subwf	1,w
  9887  022F  1803               	skipnc
  9888  0230  2A3A               	goto	i1l3563
  9889                           
  9890                           ;Dimmer_B1.c: 271: DimmerLightsIntr->DimmingValue++;
  9891  0231  3001               	movlw	1
  9892  0232  00F4               	movwf	??_setDimmerLights_IntrControl
  9893  0233  087C               	movf	_DimmerLightsIntr,w
  9894  0234  3E04               	addlw	4
  9895  0235  0086               	movwf	6
  9896  0236  0187               	clrf	7
  9897  0237  0874               	movf	??_setDimmerLights_IntrControl,w
  9898  0238  0781               	addwf	1,f
  9899                           
  9900                           ;Dimmer_B1.c: 272: } else if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumV
      +                          alue) {
  9901  0239  2A4C               	goto	i1l3567
  9902  023A                     i1l3563:	
  9903  023A  087C               	movf	_DimmerLightsIntr,w
  9904  023B  3E05               	addlw	5
  9905  023C  0086               	movwf	6
  9906  023D  0187               	clrf	7
  9907  023E  087C               	movf	_DimmerLightsIntr,w
  9908  023F  3E04               	addlw	4
  9909  0240  0084               	movwf	4
  9910  0241  0185               	clrf	5
  9911  0242  0800               	movf	0,w
  9912  0243  0201               	subwf	1,w
  9913  0244  1803               	skipnc
  9914  0245  2A4C               	goto	i1l3567
  9915                           
  9916                           ;Dimmer_B1.c: 273: DimmerLightsIntr->DimmingValue--;
  9917  0246  087C               	movf	_DimmerLightsIntr,w
  9918  0247  3E04               	addlw	4
  9919  0248  0086               	movwf	6
  9920  0249  0187               	clrf	7
  9921  024A  3001               	movlw	1
  9922  024B  0281               	subwf	1,f
  9923  024C                     i1l3567:	
  9924                           
  9925                           ;Dimmer_B1.c: 274: }
  9926                           ;Dimmer_B1.c: 275: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
  9927  024C  087C               	movf	_DimmerLightsIntr,w
  9928  024D  3E05               	addlw	5
  9929  024E  0086               	movwf	6
  9930  024F  0187               	clrf	7
  9931  0250  087C               	movf	_DimmerLightsIntr,w
  9932  0251  3E04               	addlw	4
  9933  0252  0084               	movwf	4
  9934  0253  0185               	clrf	5
  9935  0254  0800               	movf	0,w
  9936  0255  0601               	xorwf	1,w
  9937  0256  1D03               	skipz
  9938  0257  2A77               	goto	i1l3577
  9939                           
  9940                           ;Dimmer_B1.c: 276: DimmerLightsIntr->AdjRF = 0;
  9941  0258  087C               	movf	_DimmerLightsIntr,w
  9942  0259  0086               	movwf	6
  9943  025A  0187               	clrf	7
  9944  025B  1101               	bcf	1,2
  9945                           
  9946                           ;Dimmer_B1.c: 277: DimmerLightsIntr->Signal = 0;
  9947  025C  087C               	movf	_DimmerLightsIntr,w
  9948  025D  0086               	movwf	6
  9949  025E  0187               	clrf	7
  9950  025F  1081               	bcf	1,1
  9951                           
  9952                           ;Dimmer_B1.c: 278: }
  9953                           ;Dimmer_B1.c: 279: } else {
  9954  0260  2A77               	goto	i1l3577
  9955  0261                     i1l3571:	
  9956                           
  9957                           ;Dimmer_B1.c: 280: DimmerLightsIntr->Signal = 0;
  9958  0261  087C               	movf	_DimmerLightsIntr,w
  9959  0262  0086               	movwf	6
  9960  0263  0187               	clrf	7
  9961  0264  1081               	bcf	1,1
  9962                           
  9963                           ;Dimmer_B1.c: 281: DimmerLightsIntr->StatusFlag = 0;
  9964  0265  087C               	movf	_DimmerLightsIntr,w
  9965  0266  0086               	movwf	6
  9966  0267  0187               	clrf	7
  9967  0268  1301               	bcf	1,6
  9968                           
  9969                           ;Dimmer_B1.c: 282: DimmerLights->Loop = 0;
  9970  0269  087A               	movf	_DimmerLights,w
  9971  026A  3E09               	addlw	9
  9972  026B  0086               	movwf	6
  9973  026C  0187               	clrf	7
  9974  026D  1081               	bcf	1,1
  9975                           
  9976                           ;Dimmer_B1.c: 284: if (lights == 1) {
  9977  026E  0878               	movf	setDimmerLights_IntrControl@lights,w
  9978  026F  3A01               	xorlw	1
  9979  0270  1D03               	skipz
  9980  0271  2A77               	goto	i1l3577
  9981                           
  9982                           ;Dimmer_B1.c: 285: setLED(1, 0);
  9983  0272  01F2               	clrf	i1setLED@command
  9984  0273  3001               	movlw	1
  9985  0274  318F  271C  3181   	fcall	i1_setLED
  9986  0277                     i1l3577:	
  9987                           ;Dimmer_B1.c: 286: ;;
  9988                           
  9989                           
  9990                           ;Dimmer_B1.c: 287: }
  9991                           ;Dimmer_B1.c: 294: }
  9992                           ;Dimmer_B1.c: 295: }
  9993                           ;Dimmer_B1.c: 296: }
  9994                           ;Dimmer_B1.c: 297: }
  9995                           ;Dimmer_B1.c: 298: }
  9996                           ;Dimmer_B1.c: 299: if (DimmerLightsIntr->MosfetSignal == 1) {
  9997  0277  087C               	movf	_DimmerLightsIntr,w
  9998  0278  3E09               	addlw	9
  9999  0279  0086               	movwf	6
 10000  027A  0187               	clrf	7
 10001  027B  1D81               	btfss	1,3
 10002  027C  0008               	return
 10003                           
 10004                           ;Dimmer_B1.c: 300: DimmerLightsIntr->MosfetSignalCount++;
 10005  027D  3001               	movlw	1
 10006  027E  00F4               	movwf	??_setDimmerLights_IntrControl
 10007  027F  087C               	movf	_DimmerLightsIntr,w
 10008  0280  3E0C               	addlw	12
 10009  0281  0086               	movwf	6
 10010  0282  0187               	clrf	7
 10011  0283  0874               	movf	??_setDimmerLights_IntrControl,w
 10012  0284  0781               	addwf	1,f
 10013                           
 10014                           ;Dimmer_B1.c: 301: if (DimmerLightsIntr->MosfetSignalCount == 60) {
 10015  0285  087C               	movf	_DimmerLightsIntr,w
 10016  0286  3E0C               	addlw	12
 10017  0287  0086               	movwf	6
 10018  0288  0187               	clrf	7
 10019  0289  0801               	movf	1,w
 10020  028A  3A3C               	xorlw	60
 10021  028B  1D03               	skipz
 10022  028C  0008               	return
 10023                           
 10024                           ;Dimmer_B1.c: 302: DimmerLightsIntr->MosfetSignalCount = 0;
 10025  028D  087C               	movf	_DimmerLightsIntr,w
 10026  028E  3E0C               	addlw	12
 10027  028F  0086               	movwf	6
 10028  0290  0187               	clrf	7
 10029  0291  0181               	clrf	1
 10030                           
 10031                           ;Dimmer_B1.c: 303: DimmerLightsIntr->MosfetSignal = 0;
 10032  0292  087C               	movf	_DimmerLightsIntr,w
 10033  0293  3E09               	addlw	9
 10034  0294  0086               	movwf	6
 10035  0295  0187               	clrf	7
 10036  0296  1181               	bcf	1,3
 10037  0297  0008               	return
 10038  0298                     __end_of_setDimmerLights_IntrControl:	
 10039                           
 10040                           	psect	text68
 10041  0F1C                     __ptext68:	
 10042 ;; *************** function i1_setLED *****************
 10043 ;; Defined at:
 10044 ;;		line 73 in file "../src/LED_B1.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  led             1    wreg     unsigned char 
 10047 ;;  command         1    2[COMMON] unsigned char 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  led             1    3[COMMON] unsigned char 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;		None               void
 10052 ;; Registers used:
 10053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10059 ;;      Params:         1       0       0       0       0       0       0       0
 10060 ;;      Locals:         1       0       0       0       0       0       0       0
 10061 ;;      Temps:          0       0       0       0       0       0       0       0
 10062 ;;      Totals:         2       0       0       0       0       0       0       0
 10063 ;;Total ram usage:        2 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    1
 10066 ;; This function calls:
 10067 ;;		i1_LedPointSelect
 10068 ;; This function is called by:
 10069 ;;		_setDimmerLights_IntrControl
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           
 10074                           ;psect for function i1_setLED
 10075  0F1C                     i1_setLED:	
 10076                           
 10077                           ;incstack = 0
 10078                           ; Regs used in i1_setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10079                           ;i1setLED@led stored from wreg
 10080  0F1C  00F3               	movwf	i1setLED@led
 10081                           
 10082                           ;LED_B1.c: 74: LedPointSelect(led);
 10083  0F1D  0873               	movf	i1setLED@led,w
 10084  0F1E  318B  2367  318F   	fcall	i1_LedPointSelect
 10085                           
 10086                           ;LED_B1.c: 75: if (command == 0) {
 10087  0F21  08F2               	movf	i1setLED@command,f
 10088  0F22  1D03               	skipz
 10089  0F23  2F2A               	goto	i1l3495
 10090                           
 10091                           ;LED_B1.c: 104: if (led == 99) {
 10092  0F24  0873               	movf	i1setLED@led,w
 10093  0F25  3A63               	xorlw	99
 10094  0F26  1D03               	skipz
 10095  0F27  2F2A               	goto	i1l3495
 10096                           
 10097                           ;LED_B1.c: 108: RB5 = 1;
 10098  0F28  0020               	movlb	0	; select bank0
 10099  0F29  168D               	bsf	13,5	;volatile
 10100  0F2A                     i1l3495:	
 10101                           
 10102                           ;LED_B1.c: 110: }
 10103                           ;LED_B1.c: 112: } if (command == 1) {
 10104  0F2A  0872               	movf	i1setLED@command,w
 10105  0F2B  3A01               	xorlw	1
 10106  0F2C  1D03               	skipz
 10107  0F2D  2F34               	goto	i1l3501
 10108                           
 10109                           ;LED_B1.c: 141: if (led == 99) {
 10110  0F2E  0873               	movf	i1setLED@led,w
 10111  0F2F  3A63               	xorlw	99
 10112  0F30  1D03               	skipz
 10113  0F31  2F34               	goto	i1l3501
 10114                           
 10115                           ;LED_B1.c: 145: RB5 = 0;
 10116  0F32  0020               	movlb	0	; select bank0
 10117  0F33  128D               	bcf	13,5	;volatile
 10118  0F34                     i1l3501:	
 10119                           
 10120                           ;LED_B1.c: 147: }
 10121                           ;LED_B1.c: 149: } if (command == 10) {
 10122  0F34  0872               	movf	i1setLED@command,w
 10123  0F35  3A0A               	xorlw	10
 10124  0F36  1D03               	skipz
 10125  0F37  2F47               	goto	i1l3509
 10126                           
 10127                           ;LED_B1.c: 150: LED->GO = 0;
 10128  0F38  0020               	movlb	0	; select bank0
 10129  0F39  086A               	movf	_LED,w
 10130  0F3A  0086               	movwf	6
 10131  0F3B  0187               	clrf	7
 10132  0F3C  1081               	bcf	1,1
 10133                           
 10134                           ;LED_B1.c: 151: LED->Time = 0;
 10135  0F3D  0A6A               	incf	_LED,w
 10136  0F3E  0086               	movwf	6
 10137  0F3F  0187               	clrf	7
 10138  0F40  3000               	movlw	0
 10139  0F41  3FC0               	movwi [0]fsr1
 10140  0F42  3FC1               	movwi [1]fsr1
 10141                           
 10142                           ;LED_B1.c: 180: if (led == 99) {
 10143  0F43  0873               	movf	i1setLED@led,w
 10144  0F44  3A63               	xorlw	99
 10145  0F45  1903               	btfsc	3,2
 10146                           
 10147                           ;LED_B1.c: 184: RB5 = 1;
 10148  0F46  168D               	bsf	13,5	;volatile
 10149  0F47                     i1l3509:	
 10150                           
 10151                           ;LED_B1.c: 186: }
 10152                           ;LED_B1.c: 188: }
 10153                           ;LED_B1.c: 189: if (command == 11) {
 10154  0F47  0872               	movf	i1setLED@command,w
 10155  0F48  3A0B               	xorlw	11
 10156  0F49  1D03               	skipz
 10157  0F4A  0008               	return
 10158                           
 10159                           ;LED_B1.c: 190: LED->GO = 1;
 10160  0F4B  0020               	movlb	0	; select bank0
 10161  0F4C  086A               	movf	_LED,w
 10162  0F4D  0086               	movwf	6
 10163  0F4E  0187               	clrf	7
 10164  0F4F  1481               	bsf	1,1
 10165  0F50  0008               	return
 10166  0F51                     __end_ofi1_setLED:	
 10167                           
 10168                           	psect	text69
 10169  0B67                     __ptext69:	
 10170 ;; *************** function i1_LedPointSelect *****************
 10171 ;; Defined at:
 10172 ;;		line 7 in file "../src/LED_B1.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  led             1    wreg     unsigned char 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;  led             1    1[COMMON] unsigned char 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;		None               void
 10179 ;; Registers used:
 10180 ;;		wreg
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10186 ;;      Params:         0       0       0       0       0       0       0       0
 10187 ;;      Locals:         1       0       0       0       0       0       0       0
 10188 ;;      Temps:          1       0       0       0       0       0       0       0
 10189 ;;      Totals:         2       0       0       0       0       0       0       0
 10190 ;;Total ram usage:        2 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		i1_setLED
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function i1_LedPointSelect
 10201  0B67                     i1_LedPointSelect:	
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in i1_LedPointSelect: [wreg]
 10205                           ;i1LedPointSelect@led stored from wreg
 10206  0B67  00F1               	movwf	i1LedPointSelect@led
 10207                           
 10208                           ;LED_B1.c: 24: if (led == 99) {
 10209  0B68  0871               	movf	i1LedPointSelect@led,w
 10210  0B69  3A63               	xorlw	99
 10211  0B6A  1D03               	skipz
 10212  0B6B  0008               	return
 10213                           
 10214                           ;LED_B1.c: 25: LED = &VarErrLED;
 10215  0B6C  30C8               	movlw	_VarErrLED& (0+255)
 10216  0B6D  00F0               	movwf	??i1_LedPointSelect
 10217  0B6E  0870               	movf	??i1_LedPointSelect,w
 10218  0B6F  0020               	movlb	0	; select bank0
 10219  0B70  00EA               	movwf	_LED
 10220  0B71  0008               	return
 10221  0B72                     __end_ofi1_LedPointSelect:	
 10222                           
 10223                           	psect	text70
 10224  0B49                     __ptext70:	
 10225 ;; *************** function _DimmerIntrPointSelect *****************
 10226 ;; Defined at:
 10227 ;;		line 71 in file "../src/Dimmer_B1.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  lights          1    wreg     unsigned char 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  lights          1    1[COMMON] unsigned char 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;		None               void
 10234 ;; Registers used:
 10235 ;;		wreg
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10241 ;;      Params:         0       0       0       0       0       0       0       0
 10242 ;;      Locals:         1       0       0       0       0       0       0       0
 10243 ;;      Temps:          1       0       0       0       0       0       0       0
 10244 ;;      Totals:         2       0       0       0       0       0       0       0
 10245 ;;Total ram usage:        2 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_setDimmerLights_IntrControl
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function _DimmerIntrPointSelect
 10256  0B49                     _DimmerIntrPointSelect:	
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 10260                           ;DimmerIntrPointSelect@lights stored from wreg
 10261  0B49  00F1               	movwf	DimmerIntrPointSelect@lights
 10262                           
 10263                           ;Dimmer_B1.c: 73: if (lights == 1) {
 10264  0B4A  0871               	movf	DimmerIntrPointSelect@lights,w
 10265  0B4B  3A01               	xorlw	1
 10266  0B4C  1D03               	skipz
 10267  0B4D  0008               	return
 10268                           
 10269                           ;Dimmer_B1.c: 74: DimmerLightsIntr = &DimmerLights1;
 10270  0B4E  30B0               	movlw	_DimmerLights1& (0+255)
 10271  0B4F  00F0               	movwf	??_DimmerIntrPointSelect
 10272  0B50  0870               	movf	??_DimmerIntrPointSelect,w
 10273  0B51  00FC               	movwf	_DimmerLightsIntr
 10274  0B52  0008               	return
 10275  0B53                     __end_of_DimmerIntrPointSelect:	
 10276                           
 10277                           	psect	text71
 10278  0BF5                     __ptext71:	
 10279 ;; *************** function _IOC_ISR *****************
 10280 ;; Defined at:
 10281 ;;		line 401 in file "../src/MCU_B1.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;		None
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;		None               void
 10288 ;; Registers used:
 10289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10295 ;;      Params:         0       0       0       0       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0
 10298 ;;      Totals:         0       0       0       0       0       0       0       0
 10299 ;;Total ram usage:        0 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    3
 10302 ;; This function calls:
 10303 ;;		_setDimmerReClock
 10304 ;; This function is called by:
 10305 ;;		_ISR
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function _IOC_ISR
 10311  0BF5                     _IOC_ISR:	
 10312                           
 10313                           ;MCU_B1.c: 402: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 10314                           
 10315                           ;incstack = 0
 10316                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10317  0BF5  1D8B               	btfss	11,3	;volatile
 10318  0BF6  0008               	return
 10319  0BF7  1C0B               	btfss	11,0	;volatile
 10320  0BF8  0008               	return
 10321  0BF9  0027               	movlb	7	; select bank7
 10322  0BFA  1D16               	btfss	22,2	;volatile
 10323  0BFB  0008               	return
 10324                           
 10325                           ;MCU_B1.c: 403: IOCBF2 = 0;
 10326  0BFC  1116               	bcf	22,2	;volatile
 10327                           
 10328                           ;MCU_B1.c: 404: IOCIF = 0;
 10329  0BFD  100B               	bcf	11,0	;volatile
 10330                           
 10331                           ;MCU_B1.c: 405: if (myMain.PowerON == 1) {
 10332  0BFE  0021               	movlb	1	; select bank1
 10333  0BFF  1C20               	btfss	_myMain^(0+128),0
 10334  0C00  0008               	return
 10335                           
 10336                           ;MCU_B1.c: 408: setDimmerReClock();
 10337  0C01  318A  22FD         	fcall	_setDimmerReClock
 10338  0C03  0008               	return
 10339  0C04                     __end_of_IOC_ISR:	
 10340                           
 10341                           	psect	text72
 10342  0AFD                     __ptext72:	
 10343 ;; *************** function _setDimmerReClock *****************
 10344 ;; Defined at:
 10345 ;;		line 244 in file "../src/MCU_B1.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;		None
 10350 ;; Return value:  Size  Location     Type
 10351 ;;		None               void
 10352 ;; Registers used:
 10353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10359 ;;      Params:         0       0       0       0       0       0       0       0
 10360 ;;      Locals:         0       0       0       0       0       0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0
 10362 ;;      Totals:         0       0       0       0       0       0       0       0
 10363 ;;Total ram usage:        0 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:    2
 10366 ;; This function calls:
 10367 ;;		_setDimmerLights_IntrIOC_GO
 10368 ;; This function is called by:
 10369 ;;		_IOC_ISR
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _setDimmerReClock
 10375  0AFD                     _setDimmerReClock:	
 10376                           
 10377                           ;MCU_B1.c: 249: setDimmerLights_IntrIOC_GO(1);
 10378                           
 10379                           ;incstack = 0
 10380                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10381  0AFD  3001               	movlw	1
 10382  0AFE  318D  25CC         	fcall	_setDimmerLights_IntrIOC_GO
 10383  0B00  0008               	return
 10384  0B01                     __end_of_setDimmerReClock:	
 10385                           
 10386                           	psect	text73
 10387  0DCC                     __ptext73:	
 10388 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 10389 ;; Defined at:
 10390 ;;		line 28 in file "../src/Dimmer_B1.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  lights          1    wreg     unsigned char 
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;  lights          1    2[COMMON] unsigned char 
 10395 ;; Return value:  Size  Location     Type
 10396 ;;		None               void
 10397 ;; Registers used:
 10398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10404 ;;      Params:         0       0       0       0       0       0       0       0
 10405 ;;      Locals:         1       0       0       0       0       0       0       0
 10406 ;;      Temps:          0       0       0       0       0       0       0       0
 10407 ;;      Totals:         1       0       0       0       0       0       0       0
 10408 ;;Total ram usage:        1 bytes
 10409 ;; Hardware stack levels used:    1
 10410 ;; Hardware stack levels required when called:    1
 10411 ;; This function calls:
 10412 ;;		_DimmerIntrIOCPointSelect
 10413 ;; This function is called by:
 10414 ;;		_setDimmerReClock
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function _setDimmerLights_IntrIOC_GO
 10420  0DCC                     _setDimmerLights_IntrIOC_GO:	
 10421                           
 10422                           ;incstack = 0
 10423                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10424                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 10425  0DCC  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 10426                           
 10427                           ;Dimmer_B1.c: 29: DimmerIntrIOCPointSelect(lights);
 10428  0DCD  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10429  0DCE  318B  233F  318D   	fcall	_DimmerIntrIOCPointSelect
 10430                           
 10431                           ;Dimmer_B1.c: 45: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->MosfetSignal 
      +                          == 0) {
 10432  0DD1  087D               	movf	_DimmerLightsIntrIOC,w
 10433  0DD2  0086               	movwf	6
 10434  0DD3  0187               	clrf	7
 10435  0DD4  1801               	btfsc	1,0
 10436  0DD5  0008               	return
 10437  0DD6  087D               	movf	_DimmerLightsIntrIOC,w
 10438  0DD7  3E09               	addlw	9
 10439  0DD8  0086               	movwf	6
 10440  0DD9  0187               	clrf	7
 10441  0DDA  1981               	btfsc	1,3
 10442  0DDB  0008               	return
 10443                           
 10444                           ;Dimmer_B1.c: 46: DimmerLightsIntrIOC->GO = 1;
 10445  0DDC  087D               	movf	_DimmerLightsIntrIOC,w
 10446  0DDD  0086               	movwf	6
 10447  0DDE  0187               	clrf	7
 10448  0DDF  1401               	bsf	1,0
 10449                           
 10450                           ;Dimmer_B1.c: 47: DimmerLightsIntrIOC->MosfetSignal = 1;
 10451  0DE0  087D               	movf	_DimmerLightsIntrIOC,w
 10452  0DE1  3E09               	addlw	9
 10453  0DE2  0086               	movwf	6
 10454  0DE3  0187               	clrf	7
 10455  0DE4  1581               	bsf	1,3
 10456                           
 10457                           ;Dimmer_B1.c: 48: if (DimmerLightsIntrIOC->StatusFlag == 1) {
 10458  0DE5  087D               	movf	_DimmerLightsIntrIOC,w
 10459  0DE6  0086               	movwf	6
 10460  0DE7  0187               	clrf	7
 10461  0DE8  1F01               	btfss	1,6
 10462  0DE9  2DF1               	goto	i1l3157
 10463                           
 10464                           ;Dimmer_B1.c: 51: if (lights == 1) {
 10465  0DEA  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10466  0DEB  3A01               	xorlw	1
 10467  0DEC  1D03               	skipz
 10468  0DED  2DF1               	goto	i1l3157
 10469                           
 10470                           ;Dimmer_B1.c: 52: RB1 = 1;
 10471  0DEE  0020               	movlb	0	; select bank0
 10472  0DEF  148D               	bsf	13,1	;volatile
 10473                           
 10474                           ;Dimmer_B1.c: 53: RB4=1;
 10475  0DF0  160D               	bsf	13,4	;volatile
 10476  0DF1                     i1l3157:	
 10477                           
 10478                           ;Dimmer_B1.c: 54: }
 10479                           ;Dimmer_B1.c: 61: }
 10480                           ;Dimmer_B1.c: 63: if (lights == 1) {
 10481  0DF1  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10482  0DF2  3A01               	xorlw	1
 10483  0DF3  1D03               	skipz
 10484  0DF4  0008               	return
 10485                           
 10486                           ;Dimmer_B1.c: 64: RB5 = RB5 == 1 ? 0 : 1;
 10487  0DF5  3020               	movlw	32
 10488  0DF6  0020               	movlb	0	; select bank0
 10489  0DF7  068D               	xorwf	13,f
 10490  0DF8  0008               	return
 10491  0DF9                     __end_of_setDimmerLights_IntrIOC_GO:	
 10492                           
 10493                           	psect	text74
 10494  0B3F                     __ptext74:	
 10495 ;; *************** function _DimmerIntrIOCPointSelect *****************
 10496 ;; Defined at:
 10497 ;;		line 8 in file "../src/Dimmer_B1.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  lights          1    wreg     unsigned char 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  lights          1    1[COMMON] unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;		None               void
 10504 ;; Registers used:
 10505 ;;		wreg
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10511 ;;      Params:         0       0       0       0       0       0       0       0
 10512 ;;      Locals:         1       0       0       0       0       0       0       0
 10513 ;;      Temps:          1       0       0       0       0       0       0       0
 10514 ;;      Totals:         2       0       0       0       0       0       0       0
 10515 ;;Total ram usage:        2 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		_setDimmerLights_IntrIOC_GO
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           
 10525                           ;psect for function _DimmerIntrIOCPointSelect
 10526  0B3F                     _DimmerIntrIOCPointSelect:	
 10527                           
 10528                           ;incstack = 0
 10529                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 10530                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 10531  0B3F  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 10532                           
 10533                           ;Dimmer_B1.c: 10: if (lights == 1) {
 10534  0B40  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 10535  0B41  3A01               	xorlw	1
 10536  0B42  1D03               	skipz
 10537  0B43  0008               	return
 10538                           
 10539                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 10540  0B44  30B0               	movlw	_DimmerLights1& (0+255)
 10541  0B45  00F0               	movwf	??_DimmerIntrIOCPointSelect
 10542  0B46  0870               	movf	??_DimmerIntrIOCPointSelect,w
 10543  0B47  00FD               	movwf	_DimmerLightsIntrIOC
 10544  0B48  0008               	return
 10545  0B49                     __end_of_DimmerIntrIOCPointSelect:	
 10546  007E                     btemp	set	126	;btemp
 10547  007E                     pic14e$flags	set	126
 10548  007E                     wtemp	set	126
 10549  007E                     wtemp0	set	126
 10550  0080                     wtemp1	set	128
 10551  0082                     wtemp2	set	130
 10552  0084                     wtemp3	set	132
 10553  0086                     wtemp4	set	134
 10554  0088                     wtemp5	set	136
 10555  007F                     wtemp6	set	127
 10556  007E                     ttemp	set	126
 10557  007E                     ttemp0	set	126
 10558  0081                     ttemp1	set	129
 10559  0084                     ttemp2	set	132
 10560  0087                     ttemp3	set	135
 10561  007F                     ttemp4	set	127
 10562  007E                     ltemp	set	126
 10563  007E                     ltemp0	set	126
 10564  0082                     ltemp1	set	130
 10565  0086                     ltemp2	set	134
 10566  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         108
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     54      78
    BANK1            80      0      76
    BANK2            80      0      37
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK1[32]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->i1_setLED
    i1_setLED->i1_LedPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _main->_Flash_Memory_Initialization
    _my_MainTimer->_setBuz
    _Switch_Main->_setMain_Exception
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setDimmerLights_AdjControl->_setDimmerLights_TriggerAdj
    _setMain_Exception->_setDimmerLights_ErrorClose
    _setDimmerLights_ErrorClose->_setDimmerLights_SwOff
    _setDimmerLights_SwOff->_setDimmerLights_Trigger
    _setDimmerLights_SwOff->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_getMain_LightsStatus
    _getMain_LightsStatus->_getDimmerLights_Status
    _getDimmerLights_Status->_DimmerLightsPointSelect
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setBuz
    _setDimmerLights_Adj->_DimmerLightsPointSelect
    _setDimmerLights->_setLED
    _setLED->_LedPointSelect
    _setBuz->___awdiv
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   22499
                                             50 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0    1167
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          2     2      0    7137
                                             21 BANK0      2     2      0
                         _TouchPower
           _getMain_All_Error_Status
                  _setMain_Exception
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    3853
                                             16 BANK0      3     3      0
                      _SwPointSelect
                    _getSw_KeyStatus
                             _setBuz
         _setDimmerLights_AdjControl
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 3     3      0    1525
                                             13 BANK0      3     3      0
            _DimmerLightsPointSelect
          _getAll_DimmerLights_AdjGO
                             _setBuz
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_AdjControl                           4     4      0     382
                                              5 BANK0      4     4      0
            _DimmerLightsPointSelect
          _getAll_DimmerLights_AdjGO
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _getAll_DimmerLights_AdjGO                            1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3194
                                             14 BANK0      7     7      0
               _getDimmerLights_Line
               _getMain_LightsStatus
                             _setBuz
         _setDimmerLights_ErrorClose
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_ErrorClose                           5     5      0     889
                                              9 BANK0      5     5      0
            _DimmerLightsPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                4     4      0     599
                                              5 BANK0      4     4      0
            _DimmerLightsPointSelect
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           3     2      1     244
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              3     2      1     244
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Line                                 1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMain_All_Error_Status                             2     2      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     839
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     839
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      66
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      66
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     861
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     861
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    1     1      0    1346
                                              9 BANK0      1     1      0
                _Flash_Memory_Modify
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     182
                                              4 BANK0      5     5      0
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_Status                               2     2      0      67
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    1164
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    8391
                                             48 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      4     4      0    7183
                                             44 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     430
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3615
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    3070
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2801
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1     934
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    2648
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2648
                                             13 BANK0      1     1      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  3     2      1     244
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      3     2      1    1105
                                              4 BANK0      3     2      1
            _DimmerLightsPointSelect
               _setDimmerLights_Line
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     795
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1167
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     478
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      44
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      44
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0     400
                                              9 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     312
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (9) _setDimmerLights_IntrControl                          5     5      0     312
                                              4 COMMON     5     5      0
              _DimmerIntrPointSelect
                           i1_setLED
 ---------------------------------------------------------------------------------
 (10) i1_setLED                                            2     1      1     224
                                              2 COMMON     2     1      1
                   i1_LedPointSelect
 ---------------------------------------------------------------------------------
 (11) i1_LedPointSelect                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _DimmerIntrPointSelect                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0      88
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (9) _setDimmerReClock                                     0     0      0      88
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrIOC_GO                          1     1      0      88
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrIOCPointSelect                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getMain_LightsStatus
       _getDimmerLights_Status
         _DimmerLightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _getMain_All_Error_Status
     _setMain_Exception
       _getDimmerLights_Line
       _getMain_LightsStatus
         _getDimmerLights_Status
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_ErrorClose
         _DimmerLightsPointSelect
         _getDimmerLights_Status
           _DimmerLightsPointSelect
         _setDimmerLights_SwOff
           _DimmerLightsPointSelect
           _setDimmerLights_Trigger
             _DimmerLightsPointSelect
           _setDimmerLights_TriggerAdj
             _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
     _setSw_Main
       _SwPointSelect
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_AdjControl
         _DimmerLightsPointSelect
         _getAll_DimmerLights_AdjGO
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _setDimmerLights_SwOff
         _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _setDimmerLights_SwOn
         _DimmerLightsPointSelect
         _getAll_DimmerLights_AdjGO
         _setBuz
           ___awdiv
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR1_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect
       i1_setLED
         i1_LedPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CD       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     36      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      25      10       46.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      CD      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Nov 13 17:32:37 2014

                   __size_of_Switch_Main 001D                    ?_Flash_Memory_Erasing 0070  
                           _WDT_Clearing 0002             ??_setDimmerLights_TriggerAdj 0023  
                                     l50 0771                                       l60 0FE8  
                                     l62 0FF6                                       l48 0763  
                                     l58 0FFB                                       l59 0FF8  
                                     _RD 0CA8                                       _WR 0CA9  
                           ___awdiv@sign 0026                                       _Sw 006B  
                   _getDimmerLights_Line 0B88                setDimmerLights_Adj@lights 0024  
                   _setDimmerLights_Main 065D                     _setDimmerLights_Line 0BAA  
                   _setDimmerLights_SwOn 07C2                                      l705 0E4F  
                                    l714 06EC                                      l834 0FBE  
                                    l691 0F81                                      l819 0EFF  
                                    _GIE 005F                                      _RA0 0060  
                                    _RB0 0068     __size_of_DimmerLights_Initialization 000C  
                                    _RB1 0069                                      _RA4 0064  
                                    _LED 006A                                      _RB3 006B  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _ISR 0004                                      _WDT 0068  
           getDimmerLights_Status@lights 0022                                      _Sw1 00BF  
              setDimmerLights_Adj@status 0022                    _Buzzer_Initialization 0AFA  
                        __end_of_ADC_Set 0B2D                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023             getDimmerLights_Status@status 0023  
                 _setMain_Exception$2531 0031                          _setDimmerLights 04F9  
                      ??_getSw_KeyStatus 0020                                     ?_ISR 0070  
        setDimmerLights_ErrorClose@count 002A                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 0C04                             ___ftdiv@sign 003D  
                                   l1222 0CED                                     l1208 0C82  
                                   l1232 016F                                     l1234 0077  
                                   l3003 0656                                     l3121 04B2  
               ?_DimmerLightsPointSelect 0070                                     l3131 04D8  
                                   l3123 04B7                                     l3115 04A1  
                                   l3061 0EE0                                     l3053 0ECE  
                                   l1461 04CB                                     l3047 0EC5  
                                   l3119 04A8                                     l3223 0E99  
                                   l3321 0E37                                     l3129 04D0  
                                   l3209 07FA                                     l1467 04E2  
                                   l3251 05EE                                     l3181 052F  
                                   l3413 0395                          __end_of_IOC_Set 0BE7  
                                   l3407 037F                                     l3343 0DC4  
                                   l3095 07BD                                     l3247 05E8  
                                   l4071 0CF4                                     l4047 0FA8  
                                   l3345 0DA8                                     l3265 0B90  
                                   l3249 05BF                                     l3435 03EF  
                                   l3427 03D6                                     l3347 0DC9  
                                   l3189 0E0D                                     l3605 067D  
                                   l3701 06B3                                     l3607 0683  
                                   l3383 0C4E                                     l3617 06A6  
                                   l3449 042A                                     l3483 048F  
                                   l3475 0475                                     l3467 045A  
                                   l3707 06C8                                     l3803 009E  
                                   l3397 0D44                                     l3477 047E  
                                   l3469 0468                                     l3741 0586  
                                   l3813 00CB                                     l3479 0481  
                                   l3751 05A6                                     l3735 0578  
                                   l3727 0565                                     l3745 0596  
                                   l3753 05AF                                     l3825 0100  
                                   l3833 012A                                     l2971 0614  
                                   l3773 0C8D                                     l2977 061F  
                                   l3961 0301                                     l3769 0C87  
                                   l2995 0645                                     l2987 0627  
                                   l3787 0066                    _setDimmerLights_SwOff 077F  
                                   l2989 0633                                     l2999 064E  
                  _myMain_Initialization 0BE7                                     _CFGS 0CAE  
                           __CFG_WDTE$ON 0000                                     _FREE 0CAC  
                                   u2205 04C6                                     _LATA 010C  
                                   _LATB 010D                                     _LATC 010E  
                                   u2225 04D3                                     u2255 04E9  
                                   u2185 04AD                                     u2525 0DB1  
                                   u3415 0FCD                                     u2615 03A7  
                                   u2455 05C8                                     u2625 03B7  
                                   u2635 03D7                                     u2715 045B  
                                   u2645 03E6                                     u3605 0F78  
                                   u2485 0C75                                     u1935 062A  
                                   u2655 03F0                                     u2745 0476  
                                   u1955 0634                                     _PEIE 005E  
                                   u1965 063E                                     u2685 0431  
                                   u1975 0646                                     u3655 0F98  
                                   u3665 0FB6                                     _LWLO 0CAD  
                                   _WREN 0CAA                                     _Buz1 0056  
                                   _main 0EE9                             ___ftpack@arg 0020  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006      __size_of_setDimmerLights_TriggerAdj 001E  
                                   btemp 007E                          __end_of_WDT_Set 0B5D  
                                   ltemp 007E                         _setDimmerReClock 0AFD  
                                   start 0013                                     ttemp 007E  
                                   wtemp 007E                                    ??_ISR 0079  
                           ___fttol@exp1 004B                             ___fttol@lval 0047  
                 _getDimmerLights_Status 0C04           __size_of_DimmerIntrPointSelect 000A  
                       __end_of_LED_Main 0B0D         setDimmerLights_ErrorClose@lights 002B  
          __end_of_DimmerIntrPointSelect 0B53                    ?_getDimmerLights_Line 0070  
                  ?_setDimmerLights_Main 0070                    ?_setDimmerLights_Line 0070  
                  ?_setDimmerLights_SwOn 0070                                    ?_main 0052  
                        __end_of___awdiv 065D                          __end_of___ftdiv 0411  
                        ___awdiv@divisor 0020                                    _T1CON 0018  
                        __end_of___fttol 0498                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                        ___awdiv@counter 0025                                    _TMR1H 0017  
                                  _TMR1L 0016                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB1 1069                                    _WPUB2 106A  
                   setMain_Exception@buz 0030                  __end_of_Timeout_Counter 0C7B  
                          __CFG_WRT$BOOT 0000       __end_of_setDimmerLights_IntrIOC_GO 0DF9  
             _setDimmerLights_IntrIOC_GO 0DCC                         __end_of_TMR1_ISR 0DA2  
     __end_of_setDimmerLights_ErrorClose 0609               _setDimmerLights_ErrorClose 05B5  
                       __end_of_TMR1_Set 0BDA                            ___awtoft@sign 002D  
            DimmerIntrPointSelect@lights 0071                            ___ftpack@sign 0024  
                          ??_Buzzer_Main 0020                         __end_of_WDT_Main 0C43  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010             __end_of_getMain_LightsStatus 0DCC  
          __end_of_setLED_Initialization 0C23                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                       __end_ofi1_setLED 0F51              __size_of_Flash_Memory_Write 002F  
                 ??_Flash_Memory_Erasing 0020                          __initialization 0015  
                      ??_setPercentValue 004C                             __end_of_main 0F1C  
                       __end_of_Fosc_Set 0B11                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 0559                     _setSw_Initialization 0C23  
                                 ??_main 0056                            ___fttol@sign1 0046  
                         _setMemory_Data 0BB6                   ?_Buzzer_Initialization 0070  
      __size_of_DimmerIntrIOCPointSelect 000A                ?_DimmerIntrIOCPointSelect 0070  
                              ??_IOC_ISR 0073                                ??_IOC_Set 0020  
        __end_of_DimmerLightsPointSelect 0B7D                  ??_Switch_Initialization 0025  
           setDimmerLights_AdjControl@sw 0028                   ?_setDimmerLights_SwOff 0070  
                 ?_myMain_Initialization 0070                                   _ADCON0 009D  
                                 _ADCON1 009E                                   _ADRESH 009C  
                                 _ADRESL 009B                         ___awdiv@dividend 0022  
                              ??_WDT_Set 0020                         __end_of___awtoft 0D5B  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 04F9  
               _getMain_All_Error_Status 0B11                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 0CC2                                   i1l3157 0DF1  
                                 i1l3501 0F34                                   i1l3531 01C6  
                                 i1l3509 0F47                                   i1l3551 020C  
                                 i1l3563 023A                                   i1l3571 0261  
                                 i1l3555 021B                                   i1l3549 0207  
                                 i1l3557 0220                                   i1l3495 0F2A  
                                 i1l3567 024C                                   i1l3577 0277  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   u353_25 0D9C  
                                 _PMDATH 0194                                   _PMDATL 0193  
                                 _PMCON2 0196                                   u285_25 01A9  
                                 _OSCCON 0099                                   _TMR1IE 0488  
                                 _TMR1IF 0088                                   _IO_Set 0C90  
                                 _WDTCON 0097                              i1setLED@led 0073  
                  _Dimmer_Initialization 07FF                                   _Dimmer 0062  
             __end_of_Mcu_Initialization 0C66                      __end_of_Buzzer_Main 1000  
                                 _Memory 0120                                   _Timer1 0065  
     __end_of_setDimmerLights_TriggerAdj 0D19               _setDimmerLights_TriggerAdj 0CFB  
                              ??___awdiv 0024                                ??___ftdiv 0034  
                  setDimmerLights@lights 0026                                ??___fttol 0042  
           ?_Flash_Memory_Initialization 0070                   ??_getDimmerLights_Line 0020  
                 ??_setDimmerLights_Main 002D                   ??_setDimmerLights_Line 0020  
                 ??_setDimmerLights_SwOn 002D                                   _setLED 0EB6  
                                 _myMain 00A0                   __end_of_setMemory_Data 0BC2  
                       _DimmerLightsIntr 007C                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0024                         ___awdiv@quotient 0027  
                                 _setBuz 073A         ??_setDimmerLights_Initialization 0022  
        ?_setDimmerLights_Initialization 0070              ?_setDimmerLights_AdjControl 0070  
    __end_of_setDimmerLights_IntrControl 0298              _setDimmerLights_IntrControl 0178  
               Flash_Memory_Read@address 0022                         ?_Timeout_Counter 0070  
                  __end_of_SwPointSelect 0B9E                        ?i1_LedPointSelect 0070  
           __size_of_Flash_Memory_Modify 0048        setDimmerLights_IntrControl@lights 0078  
                __size_of_LedPointSelect 000B                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009               getMain_LightsStatus@status 0028  
                     ??i1_LedPointSelect 0070                               _TouchPower 0C7B  
             ?_getAll_DimmerLights_AdjGO 0070                  __end_of__initialization 003C  
                              ?_LED_Main 0070                            ?_my_MainTimer 0070  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                               ___awtoft@c 0028  
           ?_DimmerLights_Initialization 0070                               ___fttol@f1 003E  
                         __pcstackCOMMON 0070           DimmerIntrIOCPointSelect@lights 0071  
                           __pidataBANK1 0D19                                ?_TMR1_ISR 0070  
                              ?_TMR1_Set 0070             __size_of_setDimmerLights_Adj 002E  
                     _LED_Initialization 0B05                          _getSw_KeyStatus 0C43  
                        ?_setMemory_Data 0020            ??_Flash_Memory_Initialization 0050  
                       ?_setDimmerLights 0024                                ?_WDT_Main 0070  
                   _getMain_LightsStatus 0DA2               __end_of_set_TimeoutCleared 0B1A  
               __end_of_setDimmerReClock 0B01                      ?_LED_Initialization 0070  
                              ?i1_setLED 0072                    getMain_LightsStatus@i 0026  
                         _DimmerLights11 007B                     __size_of_setLED_Main 002F  
              ??_setDimmerLights_Trigger 0023                               __pbssBANK0 0056  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                              ?_Fosc_Set 0070                              _Buzzer_Main 0FC0  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                         ??_my_MainTimer 002D                               ??_LED_Main 0025  
                        __CFG_VCAPEN$OFF 0000                getMain_LightsStatus@count 0025  
                          ??_Switch_Main 0035                     ??_LED_Initialization 0025  
                           _DimmerLights 007A                        LedPointSelect@led 0021  
                            setBuz@count 002C                  ?_getDimmerLights_Status 0070  
                             __pmaintext 0EE9         __size_of_DimmerLightsPointSelect 000B  
          ??_DimmerLights_Initialization 0024                               ??_TMR1_ISR 0079  
                             ??_TMR1_Set 0020                               __pintentry 0004  
                 ??_setSw_Initialization 0024                                  ?_setLED 0022  
                                _ADC_Set 0B26                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             ??_WDT_Main 0020                    ?_getMain_LightsStatus 0070  
                                _IOC_ISR 0BF5                               ??i1_setLED 0073  
                                _IOC_Set 0BDA                        _Flash_Memory_Main 0F51  
                      _Flash_Memory_Read 0CA8              ?_setDimmerLights_IntrIOC_GO 0070  
            ?_setDimmerLights_ErrorClose 0070                       ?_Flash_Memory_Main 0070  
                     ?_Flash_Memory_Read 0070                                  _WDT_Set 0B53  
                             ??_Fosc_Set 0020                              ?_TouchPower 0070  
                        _setPercentValue 06F4                          __size_of_IO_Set 0018  
                    ??_Flash_Memory_Main 0029                      ??_Flash_Memory_Read 0020  
         __end_of_getDimmerLights_Status 0C13                  __end_of_getSw_KeyStatus 0C54  
       __end_of_DimmerIntrIOCPointSelect 0B49          __end_of_setDimmerLights_Trigger 0CDE  
                                ___awdiv 0609                                  ___ftdiv 0368  
                                ___fttol 0411                      __end_of_Switch_Main 0CFB  
                ??_Buzzer_Initialization 0020                               ??___awtoft 002B  
                             ??___ftpack 0025                          __size_of_setLED 0033  
                        __size_of_setBuz 0045                                  __ptext1 0F87  
                                __ptext2 0BE7                                  __ptext3 0C33  
                                __ptext4 0002                                  __ptext5 0CDE  
                                __ptext6 0040                                  __ptext7 07C2  
                                __ptext8 0E85                                  __ptext9 0B5D  
                  _DimmerIntrPointSelect 0B49                             __size_of_ISR 000F  
             ??_getMain_All_Error_Status 0020                __end_of_Flash_Memory_Main 0F87  
              __end_of_Flash_Memory_Read 0CC2                  ??_setDimmerLights_SwOff 0025  
                ??_myMain_Initialization 0020                        _DimmerLights_Main 0B01  
          DimmerLightsPointSelect@lights 0021                       ?_DimmerLights_Main 0070  
                                _product 006D                           _LedPointSelect 0B7D  
                                clrloop0 0B21           __size_of_Switch_Initialization 0009  
          __end_of_Switch_Initialization 0B3F                     end_of_initialization 003C  
             __end_of_Flash_Memory_Write 0E56                                  init_ram 0B1A  
                    ??_DimmerLights_Main 002E                     Flash_Memory_Read@ret 0023  
                                initloop 0B1B                               _setSw_Main 0040  
                 setDimmerLights_SwOn@sw 002F                     Flash_Memory_Modify@i 0025  
                  _setLED_Initialization 0C13              ?_setDimmerLights_TriggerAdj 0022  
          __size_of_Flash_Memory_Erasing 000C                      _Flash_Memory_Modify 06AC  
                    _Flash_Memory_Unlock 0B2D                   ??_getMain_LightsStatus 0024  
                    __size_of_TouchPower 0015                 setLED_Initialization@led 0024  
                 setSw_Initialization@sw 0024                __end_of_DimmerLights_Main 0B05  
                     _Mcu_Initialization 0C54                     __end_of_my_MainTimer 0FC0  
                       __CFG_FOSC$INTOSC 0000                   __end_of_LedPointSelect 0B88  
                __end_of_setPercentValue 073A                      ?_Mcu_Initialization 0070  
                   ?_Flash_Memory_Modify 0070                      _setDimmerLights_Adj 0DF9  
                   ?_Flash_Memory_Unlock 0070              ??_getAll_DimmerLights_AdjGO 0020  
        getMain_All_Error_Status@command 0070                              ___ftdiv@exp 003C  
                         __end_of_IO_Set 0CA8                              _Switch_Main 0CDE  
                      __size_of_LED_Main 0004                         ?_getSw_KeyStatus 0070  
                _DimmerLightsPointSelect 0B72                        _setMain_Exception 0559  
                       ??_setMemory_Data 0021                __size_ofi1_LedPointSelect 000B  
                   ??_Mcu_Initialization 0021                            ?_WDT_Clearing 0070  
                     ?_setMain_Exception 0070                     ?_setDimmerLights_Adj 0022  
               setMain_Exception@command 0034                 _DimmerIntrIOCPointSelect 0B3F  
        _setDimmerLights_AdjControl$1571 0027                        getSw_KeyStatus@sw 0070  
                      __size_of_TMR1_ISR 0024            __size_of_getDimmerLights_Line 000B  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR1_Set 000C  
          __size_of_setDimmerLights_Main 004F                           __end_of_setLED 0EE9  
          __size_of_setDimmerLights_Line 000C            __size_of_setDimmerLights_SwOn 003D  
                         __end_of_setBuz 077F                      ??_setMain_Exception 002E  
             __size_of_Flash_Memory_Main 0036               __size_of_Flash_Memory_Read 001A  
                      __size_of_WDT_Main 0010                        ?_setDimmerReClock 0070  
                    start_initialization 0015                          ?_LedPointSelect 0070  
                            __end_of_ISR 0013                    ??_Flash_Memory_Modify 0024  
                     ??_setDimmerReClock 0073                        __size_ofi1_setLED 0035  
                  ??_Flash_Memory_Unlock 0020                  ??_Dimmer_Initialization 0020  
                           ?_Buzzer_Main 0070                       _set_TimeoutCleared 0B15  
                               ??_IO_Set 0020                 __size_of_Timeout_Counter 0015  
                              _VarErrLED 00C8                              ?_setSw_Main 0070  
                 ?_setLED_Initialization 0070                        __size_of_Fosc_Set 0004  
              __end_of_setMain_Exception 05B5                      ?_set_TimeoutCleared 0070  
                         ??_WDT_Clearing 0020                    ??_setDimmerLights_Adj 0023  
                 __size_of_SwPointSelect 000B                              __pdataBANK1 00CC  
              _getAll_DimmerLights_AdjGO 0B5D                                 ??_setLED 0023  
                               ?_ADC_Set 0070                                 ??_setBuz 002B  
       __end_of_getMain_All_Error_Status 0B15               __size_of_DimmerLights_Main 0004  
                     setMemory_Data@data 0020                            ??_setLED_Main 0022  
                      __size_of___awtoft 0022                        __size_of___ftpack 0061  
                               ?_IOC_ISR 0070                              __pbssCOMMON 007A  
                               ?_IOC_Set 0070                                ___latbits 0002  
                          __pcstackBANK0 0020                     ??_set_TimeoutCleared 0020  
                       ?_setPercentValue 0070                 __size_of_setDimmerLights 0060  
                               ?_WDT_Set 0070                             ??_TouchPower 0020  
                          _DimmerLights1 00B0                ??_DimmerLightsPointSelect 0020  
                              __pnvBANK0 006D              __size_of_LED_Initialization 0004  
                             setBuz@time 0029      __end_of_Flash_Memory_Initialization 0368  
            _Flash_Memory_Initialization 0298                                 ?___awdiv 0020  
                               ?___ftdiv 002E                                 ?___fttol 003E  
                  __size_of_my_MainTimer 0039            __size_of_setSw_Initialization 0010  
         __size_of_Buzzer_Initialization 0003            __end_of_Buzzer_Initialization 0AFD  
                       setPercentValue@i 004D                 getDimmerLights_Line@line 0020  
                     __end_of_TouchPower 0C90                 ?_setDimmerLights_Trigger 0022  
                    __size_of_setSw_Main 0138                      i1LedPointSelect@led 0071  
         __size_of_setDimmerLights_SwOff 0043           __size_of_myMain_Initialization 000E  
          __end_of_setDimmerLights_SwOff 07C2            __end_of_myMain_Initialization 0BF5  
                          _SwPointSelect 0B93                      __end_of_setLED_Main 0E85  
                    _DimmerLightsIntrIOC 007D             setDimmerLights_SwOff@command 0027  
                               _LED_Main 0B09                          SwPointSelect@sw 0021  
                              clear_ram0 0B20               __size_of_setMain_Exception 005C  
                           _my_MainTimer 0F87      __end_of_DimmerLights_Initialization 0BAA  
            _DimmerLights_Initialization 0B9E           setDimmerLights_Trigger@command 0022  
                       i1_LedPointSelect 0B67                                 _GO_nDONE 04E9  
                      ??_Timeout_Counter 0020                       _Flash_Memory_Write 0E27  
                               _TMR1_ISR 0D7E                                 _TMR1_Set 0BCE  
      setDimmerLights_TriggerAdj@command 0022                                 _WDT_Main 0C33  
                  getSw_KeyStatus@status 0021                         __size_of_ADC_Set 0007  
                    ?_Flash_Memory_Write 0070                                 i1_setLED 0F1C  
           ??_setDimmerLights_AdjControl 0025                             setSw_Main@sw 0032  
       setDimmerLights_IntrIOC_GO@lights 0072                         __size_of_IOC_ISR 000F  
           ?_setDimmerLights_IntrControl 0070           getMain_All_Error_Status@status 0020  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 0BCE  
                         ?_SwPointSelect 0070                           setLED_Main@led 0024  
                   __end_of_WDT_Clearing 0004                                 _Fosc_Set 0B0D  
                       __size_of_WDT_Set 000A                  setMain_Exception@status 0033  
                  _Switch_Initialization 0B36        __size_of_getMain_All_Error_Status 0004  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0025  
              ?_getMain_All_Error_Status 0070                     __size_of_Buzzer_Main 0040  
                           ?_Switch_Main 0070               ??_DimmerIntrIOCPointSelect 0070  
           Flash_Memory_Initialization@i 0051                                 _SwDetect 006C  
                              setLED@led 0023                  ??_DimmerIntrPointSelect 0070  
    __size_of_setDimmerLights_AdjControl 0031                         __size_of___awdiv 0054  
                       __size_of___ftdiv 00A9                         __size_of___fttol 0087  
               setDimmerLights_SwOn@idle 002E                                 ___awtoft 0D39  
                       ??_LedPointSelect 0020                                 ___ftpack 0498  
          __size_of_getMain_LightsStatus 002A                              _setLED_Main 0E56  
     __size_of_getAll_DimmerLights_AdjGO 000A                                 __ptext10 0C43  
                               __ptext11 0B93                                 __ptext20 0C23  
                               __ptext12 0559                                 __ptext21 0C7B  
                               __ptext13 05B5                                 __ptext30 0B26  
                               __ptext22 0B15                                 __ptext14 077F  
                               __ptext31 0B09                                 __ptext23 0C66  
                               __ptext15 0CFB                                 __ptext40 0298  
                               __ptext32 0E56                                 __ptext24 0C54  
                               __ptext16 0CC2                                 __ptext41 06F4  
                               __ptext33 0B05                                 __ptext25 0B53  
                               __ptext17 0B88                                 __ptext50 0B01  
                               __ptext42 0411                                 __ptext34 0C13  
                               __ptext26 0BCE                                 __ptext18 0B11  
                               __ptext51 065D                                 __ptext43 0368  
                               __ptext35 0F51                                 __ptext27 0C90  
                               __ptext19 0B36                                 __ptext60 0D5B  
                               __ptext52 0DF9                                 __ptext44 0D39  
                               __ptext36 0DA2                                 __ptext28 0BDA  
                               __ptext61 0B72                                 __ptext53 04F9  
                               __ptext45 0498                                 __ptext37 0C04  
                               __ptext29 0B0D                                 __ptext70 0B49  
                               __ptext62 07FF                                 __ptext54 0EB6  
                               __ptext46 0BB6                                 __ptext38 06AC  
                               __ptext71 0BF5                                 __ptext63 0FC0  
                               __ptext55 0B7D                                 __ptext47 0E27  
                               __ptext39 0BC2                                 __ptext72 0AFD  
                               __ptext64 0AFA                                 __ptext56 0BAA  
                               __ptext48 0B2D                                 __ptext73 0DCC  
                               __ptext57 073A                                 __ptext49 0CA8  
                               __ptext74 0B3F                                 __ptext66 0D7E  
                               __ptext58 0609                                 __ptext67 0178  
                               __ptext59 0B9E                                 __ptext68 0F1C  
                               __ptext69 0B67                                 __product 00CC  
          ??_setDimmerLights_IntrControl 0074                  ??_setLED_Initialization 0024  
               ??_getDimmerLights_Status 0022           __size_of_Dimmer_Initialization 0001  
           __end_of_getDimmerLights_Line 0B93            __end_of_Dimmer_Initialization 0800  
           __end_of_setDimmerLights_Main 06AC             __end_of_setDimmerLights_Line 0BB6  
                       Switch_Main@error 0036             __end_of_setDimmerLights_SwOn 07FF  
                           ??_setSw_Main 0030                            setLED@command 0022  
                          __size_of_main 0033               setDimmerLights_Main@lights 002D  
              __size_of_setDimmerReClock 0004           setDimmerLights_AdjControl@idle 0026  
          setDimmerLights_Trigger@lights 0024              __size_of_Mcu_Initialization 0012  
            setDimmerLights_ErrorClose@i 002C         setDimmerLights_TriggerAdj@lights 0024  
                               main@argc 0052                                 main@argv 0054  
                   _getSw_KeyStatus$4283 0022                 __size_of_getSw_KeyStatus 0011  
            __end_of_Flash_Memory_Modify 06F4              __end_of_Flash_Memory_Unlock 0B36  
                        ??_SwPointSelect 0020                       __end_of_setSw_Main 0178  
                            pic14e$flags 007E             ??_setDimmerLights_IntrIOC_GO 0072  
             setDimmerLights_Line@lights 0020             ??_setDimmerLights_ErrorClose 0029  
                setDimmerLights_SwOff@sw 0028        __end_of_getAll_DimmerLights_AdjGO 0B67  
                               intlevel1 0000                   ?_Switch_Initialization 0070  
 __end_of_setDimmerLights_Initialization 0D7E  __size_of_setDimmerLights_Initialization 0023  
         _setDimmerLights_Initialization 0D5B              __end_of_setDimmerLights_Adj 0E27  
   __size_of_setDimmerLights_IntrControl 0120                     _Flash_Memory_Erasing 0BC2  
    __size_of_setDimmerLights_IntrIOC_GO 002D      __size_of_setDimmerLights_ErrorClose 0054  
                  __size_of_WDT_Clearing 0002       __end_of_setDimmerLights_AdjControl 0EB6  
             _setDimmerLights_AdjControl 0E85                  __size_of_setMemory_Data 000C  
   __size_of_Flash_Memory_Initialization 00D0              __size_of_set_TimeoutCleared 0005  
               __end_ofi1_LedPointSelect 0B72                    setMemory_Data@address 0022  
           __end_of_setSw_Initialization 0C33                          _Timeout_Counter 0C66  
        __size_of_getDimmerLights_Status 000F               __end_of_LED_Initialization 0B09  
       __size_of_setDimmerLights_Trigger 001C                 __size_of_setPercentValue 0046  
                   setPercentValue@value 004C           getAll_DimmerLights_AdjGO@adjgo 0020  
                        i1setLED@command 0072  
