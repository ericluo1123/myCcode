

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Nov 25 16:21:09 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	intentry,global,class=CODE,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    91                           	dabs	1,0x7E,2
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  011D                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  018E                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0197                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020D                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  0394                     	;# 
   190  0395                     	;# 
   191  0396                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0090                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  011D                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  0191                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0193                     	;# 
   259  0193                     	;# 
   260  0194                     	;# 
   261  0195                     	;# 
   262  0196                     	;# 
   263  0197                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019C                     	;# 
   271  019C                     	;# 
   272  019D                     	;# 
   273  019E                     	;# 
   274  019F                     	;# 
   275  020D                     	;# 
   276  0210                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0212                     	;# 
   281  0213                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0214                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0291                     	;# 
   293  0291                     	;# 
   294  0292                     	;# 
   295  0293                     	;# 
   296  0298                     	;# 
   297  0298                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  0394                     	;# 
   301  0395                     	;# 
   302  0396                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  0116                     	;# 
   361  0117                     	;# 
   362  011D                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  018E                     	;# 
   366  0191                     	;# 
   367  0191                     	;# 
   368  0192                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0194                     	;# 
   372  0195                     	;# 
   373  0196                     	;# 
   374  0197                     	;# 
   375  0199                     	;# 
   376  019A                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019C                     	;# 
   382  019C                     	;# 
   383  019D                     	;# 
   384  019E                     	;# 
   385  019F                     	;# 
   386  020D                     	;# 
   387  0210                     	;# 
   388  0211                     	;# 
   389  0211                     	;# 
   390  0212                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0213                     	;# 
   394  0214                     	;# 
   395  0214                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0291                     	;# 
   404  0291                     	;# 
   405  0292                     	;# 
   406  0293                     	;# 
   407  0298                     	;# 
   408  0298                     	;# 
   409  0299                     	;# 
   410  029A                     	;# 
   411  0394                     	;# 
   412  0395                     	;# 
   413  0396                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  0010                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  0090                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  0116                     	;# 
   472  0117                     	;# 
   473  011D                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  018E                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0194                     	;# 
   483  0195                     	;# 
   484  0196                     	;# 
   485  0197                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020D                     	;# 
   498  0210                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0291                     	;# 
   515  0291                     	;# 
   516  0292                     	;# 
   517  0293                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0090                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  010C                     	;# 
   580  010D                     	;# 
   581  010E                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  011D                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  018E                     	;# 
   588  0191                     	;# 
   589  0191                     	;# 
   590  0192                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0197                     	;# 
   597  0199                     	;# 
   598  019A                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019F                     	;# 
   608  020D                     	;# 
   609  0210                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0298                     	;# 
   630  0298                     	;# 
   631  0299                     	;# 
   632  029A                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  0090                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0099                     	;# 
   684  009A                     	;# 
   685  009B                     	;# 
   686  009B                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009E                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  011D                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  0199                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020D                     	;# 
   720  0210                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0298                     	;# 
   741  0298                     	;# 
   742  0299                     	;# 
   743  029A                     	;# 
   744  0394                     	;# 
   745  0395                     	;# 
   746  0396                     	;# 
   747  0FE4                     	;# 
   748  0FE5                     	;# 
   749  0FE6                     	;# 
   750  0FE7                     	;# 
   751  0FE8                     	;# 
   752  0FE9                     	;# 
   753  0FEA                     	;# 
   754  0FEB                     	;# 
   755  0FED                     	;# 
   756  0FEE                     	;# 
   757  0FEF                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0008                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0015                     	;# 
   777  0016                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001C                     	;# 
   785  008C                     	;# 
   786  008D                     	;# 
   787  008E                     	;# 
   788  0090                     	;# 
   789  0091                     	;# 
   790  0092                     	;# 
   791  0095                     	;# 
   792  0096                     	;# 
   793  0097                     	;# 
   794  0099                     	;# 
   795  009A                     	;# 
   796  009B                     	;# 
   797  009B                     	;# 
   798  009C                     	;# 
   799  009D                     	;# 
   800  009E                     	;# 
   801  010C                     	;# 
   802  010D                     	;# 
   803  010E                     	;# 
   804  0116                     	;# 
   805  0117                     	;# 
   806  011D                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  018E                     	;# 
   810  0191                     	;# 
   811  0191                     	;# 
   812  0192                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0197                     	;# 
   819  0199                     	;# 
   820  019A                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019E                     	;# 
   829  019F                     	;# 
   830  020D                     	;# 
   831  0210                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0291                     	;# 
   848  0291                     	;# 
   849  0292                     	;# 
   850  0293                     	;# 
   851  0298                     	;# 
   852  0298                     	;# 
   853  0299                     	;# 
   854  029A                     	;# 
   855  0394                     	;# 
   856  0395                     	;# 
   857  0396                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  0010                     	;# 
   885  0011                     	;# 
   886  0012                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0016                     	;# 
   890  0017                     	;# 
   891  0018                     	;# 
   892  0019                     	;# 
   893  001A                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  008C                     	;# 
   897  008D                     	;# 
   898  008E                     	;# 
   899  0090                     	;# 
   900  0091                     	;# 
   901  0092                     	;# 
   902  0095                     	;# 
   903  0096                     	;# 
   904  0097                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  010E                     	;# 
   915  0116                     	;# 
   916  0117                     	;# 
   917  011D                     	;# 
   918  018C                     	;# 
   919  018D                     	;# 
   920  018E                     	;# 
   921  0191                     	;# 
   922  0191                     	;# 
   923  0192                     	;# 
   924  0193                     	;# 
   925  0193                     	;# 
   926  0194                     	;# 
   927  0195                     	;# 
   928  0196                     	;# 
   929  0197                     	;# 
   930  0199                     	;# 
   931  019A                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019C                     	;# 
   937  019C                     	;# 
   938  019D                     	;# 
   939  019E                     	;# 
   940  019F                     	;# 
   941  020D                     	;# 
   942  0210                     	;# 
   943  0211                     	;# 
   944  0211                     	;# 
   945  0212                     	;# 
   946  0212                     	;# 
   947  0213                     	;# 
   948  0213                     	;# 
   949  0214                     	;# 
   950  0214                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0215                     	;# 
   954  0216                     	;# 
   955  0216                     	;# 
   956  0217                     	;# 
   957  0217                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0298                     	;# 
   963  0298                     	;# 
   964  0299                     	;# 
   965  029A                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0FE4                     	;# 
   970  0FE5                     	;# 
   971  0FE6                     	;# 
   972  0FE7                     	;# 
   973  0FE8                     	;# 
   974  0FE9                     	;# 
   975  0FEA                     	;# 
   976  0FEB                     	;# 
   977  0FED                     	;# 
   978  0FEE                     	;# 
   979  0FEF                     	;# 
   980  0000                     	;# 
   981  0001                     	;# 
   982  0002                     	;# 
   983  0003                     	;# 
   984  0004                     	;# 
   985  0005                     	;# 
   986  0006                     	;# 
   987  0007                     	;# 
   988  0008                     	;# 
   989  0009                     	;# 
   990  000A                     	;# 
   991  000B                     	;# 
   992  000C                     	;# 
   993  000D                     	;# 
   994  000E                     	;# 
   995  0010                     	;# 
   996  0011                     	;# 
   997  0012                     	;# 
   998  0015                     	;# 
   999  0016                     	;# 
  1000  0016                     	;# 
  1001  0017                     	;# 
  1002  0018                     	;# 
  1003  0019                     	;# 
  1004  001A                     	;# 
  1005  001B                     	;# 
  1006  001C                     	;# 
  1007  008C                     	;# 
  1008  008D                     	;# 
  1009  008E                     	;# 
  1010  0090                     	;# 
  1011  0091                     	;# 
  1012  0092                     	;# 
  1013  0095                     	;# 
  1014  0096                     	;# 
  1015  0097                     	;# 
  1016  0099                     	;# 
  1017  009A                     	;# 
  1018  009B                     	;# 
  1019  009B                     	;# 
  1020  009C                     	;# 
  1021  009D                     	;# 
  1022  009E                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  0116                     	;# 
  1027  0117                     	;# 
  1028  011D                     	;# 
  1029  018C                     	;# 
  1030  018D                     	;# 
  1031  018E                     	;# 
  1032  0191                     	;# 
  1033  0191                     	;# 
  1034  0192                     	;# 
  1035  0193                     	;# 
  1036  0193                     	;# 
  1037  0194                     	;# 
  1038  0195                     	;# 
  1039  0196                     	;# 
  1040  0197                     	;# 
  1041  0199                     	;# 
  1042  019A                     	;# 
  1043  019B                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019C                     	;# 
  1048  019C                     	;# 
  1049  019D                     	;# 
  1050  019E                     	;# 
  1051  019F                     	;# 
  1052  020D                     	;# 
  1053  0210                     	;# 
  1054  0211                     	;# 
  1055  0211                     	;# 
  1056  0212                     	;# 
  1057  0212                     	;# 
  1058  0213                     	;# 
  1059  0213                     	;# 
  1060  0214                     	;# 
  1061  0214                     	;# 
  1062  0215                     	;# 
  1063  0215                     	;# 
  1064  0215                     	;# 
  1065  0216                     	;# 
  1066  0216                     	;# 
  1067  0217                     	;# 
  1068  0217                     	;# 
  1069  0291                     	;# 
  1070  0291                     	;# 
  1071  0292                     	;# 
  1072  0293                     	;# 
  1073  0298                     	;# 
  1074  0298                     	;# 
  1075  0299                     	;# 
  1076  029A                     	;# 
  1077  0394                     	;# 
  1078  0395                     	;# 
  1079  0396                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0015                     	;# 
  1110  0016                     	;# 
  1111  0016                     	;# 
  1112  0017                     	;# 
  1113  0018                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0092                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0099                     	;# 
  1128  009A                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  010C                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  0116                     	;# 
  1138  0117                     	;# 
  1139  011D                     	;# 
  1140  018C                     	;# 
  1141  018D                     	;# 
  1142  018E                     	;# 
  1143  0191                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  0193                     	;# 
  1147  0193                     	;# 
  1148  0194                     	;# 
  1149  0195                     	;# 
  1150  0196                     	;# 
  1151  0197                     	;# 
  1152  0199                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019C                     	;# 
  1159  019C                     	;# 
  1160  019D                     	;# 
  1161  019E                     	;# 
  1162  019F                     	;# 
  1163  020D                     	;# 
  1164  0210                     	;# 
  1165  0211                     	;# 
  1166  0211                     	;# 
  1167  0212                     	;# 
  1168  0212                     	;# 
  1169  0213                     	;# 
  1170  0213                     	;# 
  1171  0214                     	;# 
  1172  0214                     	;# 
  1173  0215                     	;# 
  1174  0215                     	;# 
  1175  0215                     	;# 
  1176  0216                     	;# 
  1177  0216                     	;# 
  1178  0217                     	;# 
  1179  0217                     	;# 
  1180  0291                     	;# 
  1181  0291                     	;# 
  1182  0292                     	;# 
  1183  0293                     	;# 
  1184  0298                     	;# 
  1185  0298                     	;# 
  1186  0299                     	;# 
  1187  029A                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  0FE4                     	;# 
  1192  0FE5                     	;# 
  1193  0FE6                     	;# 
  1194  0FE7                     	;# 
  1195  0FE8                     	;# 
  1196  0FE9                     	;# 
  1197  0FEA                     	;# 
  1198  0FEB                     	;# 
  1199  0FED                     	;# 
  1200  0FEE                     	;# 
  1201  0FEF                     	;# 
  1202  0000                     	;# 
  1203  0001                     	;# 
  1204  0002                     	;# 
  1205  0003                     	;# 
  1206  0004                     	;# 
  1207  0005                     	;# 
  1208  0006                     	;# 
  1209  0007                     	;# 
  1210  0008                     	;# 
  1211  0009                     	;# 
  1212  000A                     	;# 
  1213  000B                     	;# 
  1214  000C                     	;# 
  1215  000D                     	;# 
  1216  000E                     	;# 
  1217  0010                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0015                     	;# 
  1221  0016                     	;# 
  1222  0016                     	;# 
  1223  0017                     	;# 
  1224  0018                     	;# 
  1225  0019                     	;# 
  1226  001A                     	;# 
  1227  001B                     	;# 
  1228  001C                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  008E                     	;# 
  1232  0090                     	;# 
  1233  0091                     	;# 
  1234  0092                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  011D                     	;# 
  1251  018C                     	;# 
  1252  018D                     	;# 
  1253  018E                     	;# 
  1254  0191                     	;# 
  1255  0191                     	;# 
  1256  0192                     	;# 
  1257  0193                     	;# 
  1258  0193                     	;# 
  1259  0194                     	;# 
  1260  0195                     	;# 
  1261  0196                     	;# 
  1262  0197                     	;# 
  1263  0199                     	;# 
  1264  019A                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020D                     	;# 
  1275  0210                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  0394                     	;# 
  1300  0395                     	;# 
  1301  0396                     	;# 
  1302  0FE4                     	;# 
  1303  0FE5                     	;# 
  1304  0FE6                     	;# 
  1305  0FE7                     	;# 
  1306  0FE8                     	;# 
  1307  0FE9                     	;# 
  1308  0FEA                     	;# 
  1309  0FEB                     	;# 
  1310  0FED                     	;# 
  1311  0FEE                     	;# 
  1312  0FEF                     	;# 
  1313  0000                     	;# 
  1314  0001                     	;# 
  1315  0002                     	;# 
  1316  0003                     	;# 
  1317  0004                     	;# 
  1318  0005                     	;# 
  1319  0006                     	;# 
  1320  0007                     	;# 
  1321  0008                     	;# 
  1322  0009                     	;# 
  1323  000A                     	;# 
  1324  000B                     	;# 
  1325  000C                     	;# 
  1326  000D                     	;# 
  1327  000E                     	;# 
  1328  0010                     	;# 
  1329  0011                     	;# 
  1330  0012                     	;# 
  1331  0015                     	;# 
  1332  0016                     	;# 
  1333  0016                     	;# 
  1334  0017                     	;# 
  1335  0018                     	;# 
  1336  0019                     	;# 
  1337  001A                     	;# 
  1338  001B                     	;# 
  1339  001C                     	;# 
  1340  008C                     	;# 
  1341  008D                     	;# 
  1342  008E                     	;# 
  1343  0090                     	;# 
  1344  0091                     	;# 
  1345  0092                     	;# 
  1346  0095                     	;# 
  1347  0096                     	;# 
  1348  0097                     	;# 
  1349  0099                     	;# 
  1350  009A                     	;# 
  1351  009B                     	;# 
  1352  009B                     	;# 
  1353  009C                     	;# 
  1354  009D                     	;# 
  1355  009E                     	;# 
  1356  010C                     	;# 
  1357  010D                     	;# 
  1358  010E                     	;# 
  1359  0116                     	;# 
  1360  0117                     	;# 
  1361  011D                     	;# 
  1362  018C                     	;# 
  1363  018D                     	;# 
  1364  018E                     	;# 
  1365  0191                     	;# 
  1366  0191                     	;# 
  1367  0192                     	;# 
  1368  0193                     	;# 
  1369  0193                     	;# 
  1370  0194                     	;# 
  1371  0195                     	;# 
  1372  0196                     	;# 
  1373  0197                     	;# 
  1374  0199                     	;# 
  1375  019A                     	;# 
  1376  019B                     	;# 
  1377  019B                     	;# 
  1378  019B                     	;# 
  1379  019B                     	;# 
  1380  019C                     	;# 
  1381  019C                     	;# 
  1382  019D                     	;# 
  1383  019E                     	;# 
  1384  019F                     	;# 
  1385  020D                     	;# 
  1386  0210                     	;# 
  1387  0211                     	;# 
  1388  0211                     	;# 
  1389  0212                     	;# 
  1390  0212                     	;# 
  1391  0213                     	;# 
  1392  0213                     	;# 
  1393  0214                     	;# 
  1394  0214                     	;# 
  1395  0215                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0216                     	;# 
  1399  0216                     	;# 
  1400  0217                     	;# 
  1401  0217                     	;# 
  1402  0291                     	;# 
  1403  0291                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  029A                     	;# 
  1410  0394                     	;# 
  1411  0395                     	;# 
  1412  0396                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  0010                     	;# 
  1440  0011                     	;# 
  1441  0012                     	;# 
  1442  0015                     	;# 
  1443  0016                     	;# 
  1444  0016                     	;# 
  1445  0017                     	;# 
  1446  0018                     	;# 
  1447  0019                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001C                     	;# 
  1451  008C                     	;# 
  1452  008D                     	;# 
  1453  008E                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0095                     	;# 
  1458  0096                     	;# 
  1459  0097                     	;# 
  1460  0099                     	;# 
  1461  009A                     	;# 
  1462  009B                     	;# 
  1463  009B                     	;# 
  1464  009C                     	;# 
  1465  009D                     	;# 
  1466  009E                     	;# 
  1467  010C                     	;# 
  1468  010D                     	;# 
  1469  010E                     	;# 
  1470  0116                     	;# 
  1471  0117                     	;# 
  1472  011D                     	;# 
  1473  018C                     	;# 
  1474  018D                     	;# 
  1475  018E                     	;# 
  1476  0191                     	;# 
  1477  0191                     	;# 
  1478  0192                     	;# 
  1479  0193                     	;# 
  1480  0193                     	;# 
  1481  0194                     	;# 
  1482  0195                     	;# 
  1483  0196                     	;# 
  1484  0197                     	;# 
  1485  0199                     	;# 
  1486  019A                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019B                     	;# 
  1491  019C                     	;# 
  1492  019C                     	;# 
  1493  019D                     	;# 
  1494  019E                     	;# 
  1495  019F                     	;# 
  1496  020D                     	;# 
  1497  0210                     	;# 
  1498  0211                     	;# 
  1499  0211                     	;# 
  1500  0212                     	;# 
  1501  0212                     	;# 
  1502  0213                     	;# 
  1503  0213                     	;# 
  1504  0214                     	;# 
  1505  0214                     	;# 
  1506  0215                     	;# 
  1507  0215                     	;# 
  1508  0215                     	;# 
  1509  0216                     	;# 
  1510  0216                     	;# 
  1511  0217                     	;# 
  1512  0217                     	;# 
  1513  0291                     	;# 
  1514  0291                     	;# 
  1515  0292                     	;# 
  1516  0293                     	;# 
  1517  0298                     	;# 
  1518  0298                     	;# 
  1519  0299                     	;# 
  1520  029A                     	;# 
  1521  0394                     	;# 
  1522  0395                     	;# 
  1523  0396                     	;# 
  1524  0FE4                     	;# 
  1525  0FE5                     	;# 
  1526  0FE6                     	;# 
  1527  0FE7                     	;# 
  1528  0FE8                     	;# 
  1529  0FE9                     	;# 
  1530  0FEA                     	;# 
  1531  0FEB                     	;# 
  1532  0FED                     	;# 
  1533  0FEE                     	;# 
  1534  0FEF                     	;# 
  1535  0000                     	;# 
  1536  0001                     	;# 
  1537  0002                     	;# 
  1538  0003                     	;# 
  1539  0004                     	;# 
  1540  0005                     	;# 
  1541  0006                     	;# 
  1542  0007                     	;# 
  1543  0008                     	;# 
  1544  0009                     	;# 
  1545  000A                     	;# 
  1546  000B                     	;# 
  1547  000C                     	;# 
  1548  000D                     	;# 
  1549  000E                     	;# 
  1550  0010                     	;# 
  1551  0011                     	;# 
  1552  0012                     	;# 
  1553  0015                     	;# 
  1554  0016                     	;# 
  1555  0016                     	;# 
  1556  0017                     	;# 
  1557  0018                     	;# 
  1558  0019                     	;# 
  1559  001A                     	;# 
  1560  001B                     	;# 
  1561  001C                     	;# 
  1562  008C                     	;# 
  1563  008D                     	;# 
  1564  008E                     	;# 
  1565  0090                     	;# 
  1566  0091                     	;# 
  1567  0092                     	;# 
  1568  0095                     	;# 
  1569  0096                     	;# 
  1570  0097                     	;# 
  1571  0099                     	;# 
  1572  009A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009E                     	;# 
  1578  010C                     	;# 
  1579  010D                     	;# 
  1580  010E                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  011D                     	;# 
  1584  018C                     	;# 
  1585  018D                     	;# 
  1586  018E                     	;# 
  1587  0191                     	;# 
  1588  0191                     	;# 
  1589  0192                     	;# 
  1590  0193                     	;# 
  1591  0193                     	;# 
  1592  0194                     	;# 
  1593  0195                     	;# 
  1594  0196                     	;# 
  1595  0197                     	;# 
  1596  0199                     	;# 
  1597  019A                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019C                     	;# 
  1603  019C                     	;# 
  1604  019D                     	;# 
  1605  019E                     	;# 
  1606  019F                     	;# 
  1607  020D                     	;# 
  1608  0210                     	;# 
  1609  0211                     	;# 
  1610  0211                     	;# 
  1611  0212                     	;# 
  1612  0212                     	;# 
  1613  0213                     	;# 
  1614  0213                     	;# 
  1615  0214                     	;# 
  1616  0214                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0216                     	;# 
  1621  0216                     	;# 
  1622  0217                     	;# 
  1623  0217                     	;# 
  1624  0291                     	;# 
  1625  0291                     	;# 
  1626  0292                     	;# 
  1627  0293                     	;# 
  1628  0298                     	;# 
  1629  0298                     	;# 
  1630  0299                     	;# 
  1631  029A                     	;# 
  1632  0394                     	;# 
  1633  0395                     	;# 
  1634  0396                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0010                     	;# 
  1662  0011                     	;# 
  1663  0012                     	;# 
  1664  0015                     	;# 
  1665  0016                     	;# 
  1666  0016                     	;# 
  1667  0017                     	;# 
  1668  0018                     	;# 
  1669  0019                     	;# 
  1670  001A                     	;# 
  1671  001B                     	;# 
  1672  001C                     	;# 
  1673  008C                     	;# 
  1674  008D                     	;# 
  1675  008E                     	;# 
  1676  0090                     	;# 
  1677  0091                     	;# 
  1678  0092                     	;# 
  1679  0095                     	;# 
  1680  0096                     	;# 
  1681  0097                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  0116                     	;# 
  1693  0117                     	;# 
  1694  011D                     	;# 
  1695  018C                     	;# 
  1696  018D                     	;# 
  1697  018E                     	;# 
  1698  0191                     	;# 
  1699  0191                     	;# 
  1700  0192                     	;# 
  1701  0193                     	;# 
  1702  0193                     	;# 
  1703  0194                     	;# 
  1704  0195                     	;# 
  1705  0196                     	;# 
  1706  0197                     	;# 
  1707  0199                     	;# 
  1708  019A                     	;# 
  1709  019B                     	;# 
  1710  019B                     	;# 
  1711  019B                     	;# 
  1712  019B                     	;# 
  1713  019C                     	;# 
  1714  019C                     	;# 
  1715  019D                     	;# 
  1716  019E                     	;# 
  1717  019F                     	;# 
  1718  020D                     	;# 
  1719  0210                     	;# 
  1720  0211                     	;# 
  1721  0211                     	;# 
  1722  0212                     	;# 
  1723  0212                     	;# 
  1724  0213                     	;# 
  1725  0213                     	;# 
  1726  0214                     	;# 
  1727  0214                     	;# 
  1728  0215                     	;# 
  1729  0215                     	;# 
  1730  0215                     	;# 
  1731  0216                     	;# 
  1732  0216                     	;# 
  1733  0217                     	;# 
  1734  0217                     	;# 
  1735  0291                     	;# 
  1736  0291                     	;# 
  1737  0292                     	;# 
  1738  0293                     	;# 
  1739  0298                     	;# 
  1740  0298                     	;# 
  1741  0299                     	;# 
  1742  029A                     	;# 
  1743  0394                     	;# 
  1744  0395                     	;# 
  1745  0396                     	;# 
  1746  0FE4                     	;# 
  1747  0FE5                     	;# 
  1748  0FE6                     	;# 
  1749  0FE7                     	;# 
  1750  0FE8                     	;# 
  1751  0FE9                     	;# 
  1752  0FEA                     	;# 
  1753  0FEB                     	;# 
  1754  0FED                     	;# 
  1755  0FEE                     	;# 
  1756  0FEF                     	;# 
  1757  0000                     	;# 
  1758  0001                     	;# 
  1759  0002                     	;# 
  1760  0003                     	;# 
  1761  0004                     	;# 
  1762  0005                     	;# 
  1763  0006                     	;# 
  1764  0007                     	;# 
  1765  0008                     	;# 
  1766  0009                     	;# 
  1767  000A                     	;# 
  1768  000B                     	;# 
  1769  000C                     	;# 
  1770  000D                     	;# 
  1771  000E                     	;# 
  1772  0010                     	;# 
  1773  0011                     	;# 
  1774  0012                     	;# 
  1775  0015                     	;# 
  1776  0016                     	;# 
  1777  0016                     	;# 
  1778  0017                     	;# 
  1779  0018                     	;# 
  1780  0019                     	;# 
  1781  001A                     	;# 
  1782  001B                     	;# 
  1783  001C                     	;# 
  1784  008C                     	;# 
  1785  008D                     	;# 
  1786  008E                     	;# 
  1787  0090                     	;# 
  1788  0091                     	;# 
  1789  0092                     	;# 
  1790  0095                     	;# 
  1791  0096                     	;# 
  1792  0097                     	;# 
  1793  0099                     	;# 
  1794  009A                     	;# 
  1795  009B                     	;# 
  1796  009B                     	;# 
  1797  009C                     	;# 
  1798  009D                     	;# 
  1799  009E                     	;# 
  1800  010C                     	;# 
  1801  010D                     	;# 
  1802  010E                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  011D                     	;# 
  1806  018C                     	;# 
  1807  018D                     	;# 
  1808  018E                     	;# 
  1809  0191                     	;# 
  1810  0191                     	;# 
  1811  0192                     	;# 
  1812  0193                     	;# 
  1813  0193                     	;# 
  1814  0194                     	;# 
  1815  0195                     	;# 
  1816  0196                     	;# 
  1817  0197                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019E                     	;# 
  1828  019F                     	;# 
  1829  020D                     	;# 
  1830  0210                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0212                     	;# 
  1835  0213                     	;# 
  1836  0213                     	;# 
  1837  0214                     	;# 
  1838  0214                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0215                     	;# 
  1842  0216                     	;# 
  1843  0216                     	;# 
  1844  0217                     	;# 
  1845  0217                     	;# 
  1846  0291                     	;# 
  1847  0291                     	;# 
  1848  0292                     	;# 
  1849  0293                     	;# 
  1850  0298                     	;# 
  1851  0298                     	;# 
  1852  0299                     	;# 
  1853  029A                     	;# 
  1854  0394                     	;# 
  1855  0395                     	;# 
  1856  0396                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0015                     	;# 
  1887  0016                     	;# 
  1888  0016                     	;# 
  1889  0017                     	;# 
  1890  0018                     	;# 
  1891  0019                     	;# 
  1892  001A                     	;# 
  1893  001B                     	;# 
  1894  001C                     	;# 
  1895  008C                     	;# 
  1896  008D                     	;# 
  1897  008E                     	;# 
  1898  0090                     	;# 
  1899  0091                     	;# 
  1900  0092                     	;# 
  1901  0095                     	;# 
  1902  0096                     	;# 
  1903  0097                     	;# 
  1904  0099                     	;# 
  1905  009A                     	;# 
  1906  009B                     	;# 
  1907  009B                     	;# 
  1908  009C                     	;# 
  1909  009D                     	;# 
  1910  009E                     	;# 
  1911  010C                     	;# 
  1912  010D                     	;# 
  1913  010E                     	;# 
  1914  0116                     	;# 
  1915  0117                     	;# 
  1916  011D                     	;# 
  1917  018C                     	;# 
  1918  018D                     	;# 
  1919  018E                     	;# 
  1920  0191                     	;# 
  1921  0191                     	;# 
  1922  0192                     	;# 
  1923  0193                     	;# 
  1924  0193                     	;# 
  1925  0194                     	;# 
  1926  0195                     	;# 
  1927  0196                     	;# 
  1928  0197                     	;# 
  1929  0199                     	;# 
  1930  019A                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019B                     	;# 
  1935  019C                     	;# 
  1936  019C                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  020D                     	;# 
  1941  0210                     	;# 
  1942  0211                     	;# 
  1943  0211                     	;# 
  1944  0212                     	;# 
  1945  0212                     	;# 
  1946  0213                     	;# 
  1947  0213                     	;# 
  1948  0214                     	;# 
  1949  0214                     	;# 
  1950  0215                     	;# 
  1951  0215                     	;# 
  1952  0215                     	;# 
  1953  0216                     	;# 
  1954  0216                     	;# 
  1955  0217                     	;# 
  1956  0217                     	;# 
  1957  0291                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0298                     	;# 
  1962  0298                     	;# 
  1963  0299                     	;# 
  1964  029A                     	;# 
  1965  0394                     	;# 
  1966  0395                     	;# 
  1967  0396                     	;# 
  1968  0FE4                     	;# 
  1969  0FE5                     	;# 
  1970  0FE6                     	;# 
  1971  0FE7                     	;# 
  1972  0FE8                     	;# 
  1973  0FE9                     	;# 
  1974  0FEA                     	;# 
  1975  0FEB                     	;# 
  1976  0FED                     	;# 
  1977  0FEE                     	;# 
  1978  0FEF                     	;# 
  1979                           
  1980                           	psect	idataBANK2
  1981  0BFE                     __pidataBANK2:	
  1982                           
  1983                           ;initializer for __product
  1984  0BFE  3463               	retlw	99
  1985  0BFF  3402               	retlw	2
  1986  0C00  3400               	retlw	0
  1987  0C01  3400               	retlw	0
  1988  0C02  3400               	retlw	0
  1989  0C03  3400               	retlw	0
  1990  0C04  3400               	retlw	0
  1991  0C05  3400               	retlw	0
  1992  0C06  3400               	retlw	0
  1993  0C07  3400               	retlw	0
  1994  0C08  3400               	retlw	0
  1995  0C09  3400               	retlw	0
  1996  0C0A  34FF               	retlw	255
  1997  0C0B  34FF               	retlw	255
  1998  0C0C  34FF               	retlw	255
  1999  0C0D  3400               	retlw	0
  2000  0C0E  3400               	retlw	0
  2001  0C0F  3400               	retlw	0
  2002  0C10  3400               	retlw	0
  2003  0C11  3400               	retlw	0
  2004  0C12  3400               	retlw	0
  2005  0C13  3400               	retlw	0
  2006  0C14  3400               	retlw	0
  2007  0C15  3400               	retlw	0
  2008  0C16  3400               	retlw	0
  2009  0C17  3400               	retlw	0
  2010  0C18  3400               	retlw	0
  2011  0C19  3400               	retlw	0
  2012  0C1A  3400               	retlw	0
  2013  0C1B  3400               	retlw	0
  2014  0C1C  3400               	retlw	0
  2015  0C1D  3400               	retlw	0
  2016                           
  2017                           	psect	nvBANK0
  2018  006F                     __pnvBANK0:	
  2019  006F                     _product:	
  2020  006F                     	ds	1
  2021  000C                     _PORTA	set	12
  2022  000D                     _PORTB	set	13
  2023  000E                     _PORTC	set	14
  2024  0018                     _T1CON	set	24
  2025  0017                     _TMR1H	set	23
  2026  0016                     _TMR1L	set	22
  2027  005F                     _GIE	set	95
  2028  005B                     _IOCIE	set	91
  2029  0058                     _IOCIF	set	88
  2030  005E                     _PEIE	set	94
  2031  0060                     _RA0	set	96
  2032  0064                     _RA4	set	100
  2033  0066                     _RA6	set	102
  2034  0067                     _RA7	set	103
  2035  0068                     _RB0	set	104
  2036  006B                     _RB3	set	107
  2037  006C                     _RB4	set	108
  2038  006D                     _RB5	set	109
  2039  0088                     _TMR1IF	set	136
  2040  009D                     _ADCON0	set	157
  2041  009E                     _ADCON1	set	158
  2042  009C                     _ADRESH	set	156
  2043  009B                     _ADRESL	set	155
  2044  0099                     _OSCCON	set	153
  2045  008C                     _TRISA	set	140
  2046  008D                     _TRISB	set	141
  2047  008E                     _TRISC	set	142
  2048  0097                     _WDTCON	set	151
  2049  04E9                     _GO_nDONE	set	1257
  2050  0488                     _TMR1IE	set	1160
  2051  0117                     _FVRCON	set	279
  2052  010C                     _LATA	set	268
  2053  010D                     _LATB	set	269
  2054  010E                     _LATC	set	270
  2055  018C                     _ANSELA	set	396
  2056  018D                     _ANSELB	set	397
  2057  018E                     _ANSELC	set	398
  2058  0192                     _PMADRH	set	402
  2059  0191                     _PMADRL	set	401
  2060  0196                     _PMCON2	set	406
  2061  0194                     _PMDATH	set	404
  2062  0193                     _PMDATL	set	403
  2063  0CAE                     _CFGS	set	3246
  2064  0CAC                     _FREE	set	3244
  2065  0CAD                     _LWLO	set	3245
  2066  0CA8                     _RD	set	3240
  2067  0CA9                     _WR	set	3241
  2068  0CAA                     _WREN	set	3242
  2069  1069                     _WPUB1	set	4201
  2070  106A                     _WPUB2	set	4202
  2071  0396                     _IOCBF	set	918
  2072  0395                     _IOCBN	set	917
  2073  0394                     _IOCBP	set	916
  2074  1CB2                     _IOCBF2	set	7346
  2075                           
  2076                           ; #config settings
  2077  0000                     
  2078                           	psect	cinit
  2079  0015                     start_initialization:	
  2080  0015                     __initialization:	
  2081                           
  2082                           ; Clear objects allocated to COMMON
  2083  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2084  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2085  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2086  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2087  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2088                           
  2089                           ; Clear objects allocated to BANK0
  2090  001A  01EB               	clrf	__pbssBANK0& (0+127)
  2091  001B  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  2092  001C  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  2093  001D  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  2094                           
  2095                           ; Clear objects allocated to BANK1
  2096  001E  30A0               	movlw	low __pbssBANK1
  2097  001F  0084               	movwf	4
  2098  0020  3000               	movlw	high __pbssBANK1
  2099  0021  0085               	movwf	5
  2100  0022  303E               	movlw	62
  2101  0023  318A  2206  3180   	fcall	clear_ram0
  2102                           
  2103                           ; Clear objects allocated to BANK2
  2104  0026  3020               	movlw	low __pbssBANK2
  2105  0027  0084               	movwf	4
  2106  0028  3001               	movlw	high __pbssBANK2
  2107  0029  0085               	movwf	5
  2108  002A  3025               	movlw	37
  2109  002B  318A  2206  3180   	fcall	clear_ram0
  2110                           
  2111                           ; Initialize objects allocated to BANK2
  2112  002E  30FE               	movlw	low __pidataBANK2
  2113  002F  0084               	movwf	4
  2114  0030  308B               	movlw	(high __pidataBANK2)| (0+128)
  2115  0031  0085               	movwf	5
  2116  0032  3045               	movlw	low __pdataBANK2
  2117  0033  0086               	movwf	6
  2118  0034  3001               	movlw	high __pdataBANK2
  2119  0035  0087               	movwf	7
  2120  0036  3020               	movlw	32
  2121  0037  318A  2200         	fcall	init_ram
  2122  0039                     end_of_initialization:	
  2123                           ;End of C runtime variable initialization code
  2124                           
  2125  0039                     __end_of__initialization:	
  2126  0039  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2127  003A  0020               	movlb	0
  2128  003B  318D  2D9F         	ljmp	_main	;jump to C main() function
  2129                           
  2130                           	psect	bssCOMMON
  2131  0078                     __pbssCOMMON:	
  2132  0078                     _WDT:	
  2133  0078                     	ds	2
  2134  007A                     _DimmerLights11:	
  2135  007A                     	ds	1
  2136  007B                     _DimmerLightsIntr:	
  2137  007B                     	ds	1
  2138  007C                     _DimmerLightsIntrIOC:	
  2139  007C                     	ds	1
  2140                           
  2141                           	psect	bssBANK0
  2142  006B                     __pbssBANK0:	
  2143  006B                     _DimmerLights:	
  2144  006B                     	ds	1
  2145  006C                     _LED:	
  2146  006C                     	ds	1
  2147  006D                     _Sw:	
  2148  006D                     	ds	1
  2149  006E                     _SwDetect:	
  2150  006E                     	ds	1
  2151                           
  2152                           	psect	bssBANK1
  2153  00A0                     __pbssBANK1:	
  2154  00A0                     _myMain:	
  2155  00A0                     	ds	16
  2156  00B0                     _Buz1:	
  2157  00B0                     	ds	12
  2158  00BC                     _Dimmer:	
  2159  00BC                     	ds	3
  2160  00BF                     _Timer1:	
  2161  00BF                     	ds	3
  2162  00C2                     _DimmerLights1:	
  2163  00C2                     	ds	15
  2164  00D1                     _Sw1:	
  2165  00D1                     	ds	9
  2166  00DA                     _VarErrLED:	
  2167  00DA                     	ds	4
  2168                           
  2169                           	psect	bssBANK2
  2170  0120                     __pbssBANK2:	
  2171  0120                     _Memory:	
  2172  0120                     	ds	37
  2173                           
  2174                           	psect	dataBANK2
  2175  0145                     __pdataBANK2:	
  2176  0145                     __product:	
  2177  0145                     	ds	32
  2178                           
  2179                           	psect	clrtext
  2180  0A06                     clear_ram0:	
  2181                           ;	Called with FSR0 containing the base address, and
  2182                           ;	WREG with the size to clear
  2183                           
  2184  0A06  0064               	clrwdt	;clear the watchdog before getting into this loop
  2185  0A07                     clrloop0:	
  2186  0A07  0180               	clrf	0	;clear RAM location pointed to by FSR
  2187  0A08  3101               	addfsr 0,1
  2188  0A09  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2189  0A0A  2A07               	goto	clrloop0	;have we reached the end yet?
  2190  0A0B  3400               	retlw	0	;all done for this memory range, return
  2191                           
  2192                           	psect	inittext
  2193  0A00                     init_ram:	
  2194  0A00  00FE               	movwf	126
  2195  0A01                     initloop:	
  2196  0A01  0012               	moviw fsr0++
  2197  0A02  001E               	movwi fsr1++
  2198  0A03  0BFE               	decfsz	126,f
  2199  0A04  2A01               	goto	initloop
  2200  0A05  3400               	retlw	0
  2201                           
  2202                           	psect	cstackCOMMON
  2203  0070                     __pcstackCOMMON:	
  2204  0070                     ?_setDimmerLights_Initialization:	
  2205  0070                     ?_Dimmer_Initialization:	
  2206                           ; 0 bytes @ 0x0
  2207                           
  2208  0070                     ?_setDimmerLights_Main:	
  2209                           ; 0 bytes @ 0x0
  2210                           
  2211  0070                     ?_setDimmerLights_Line:	
  2212                           ; 0 bytes @ 0x0
  2213                           
  2214  0070                     ?_setLED_Initialization:	
  2215                           ; 0 bytes @ 0x0
  2216                           
  2217  0070                     ?_setLED_Main:	
  2218                           ; 0 bytes @ 0x0
  2219                           
  2220  0070                     ?_Fosc_Set:	
  2221                           ; 0 bytes @ 0x0
  2222                           
  2223  0070                     ?_IO_Set:	
  2224                           ; 0 bytes @ 0x0
  2225                           
  2226  0070                     ?_TMR1_Set:	
  2227                           ; 0 bytes @ 0x0
  2228                           
  2229  0070                     ?_ADC_Set:	
  2230                           ; 0 bytes @ 0x0
  2231                           
  2232  0070                     ?_IOC_Set:	
  2233                           ; 0 bytes @ 0x0
  2234                           
  2235  0070                     ?_WDT_Set:	
  2236                           ; 0 bytes @ 0x0
  2237                           
  2238  0070                     ?_IOC_ISR:	
  2239                           ; 0 bytes @ 0x0
  2240                           
  2241  0070                     ?_TMR1_ISR:	
  2242                           ; 0 bytes @ 0x0
  2243                           
  2244  0070                     ?_Timeout_Counter:	
  2245                           ; 0 bytes @ 0x0
  2246                           
  2247  0070                     ?_set_TimeoutCleared:	
  2248                           ; 0 bytes @ 0x0
  2249                           
  2250  0070                     ?_Flash_Memory_Write:	
  2251                           ; 0 bytes @ 0x0
  2252                           
  2253  0070                     ?_Flash_Memory_Modify:	
  2254                           ; 0 bytes @ 0x0
  2255                           
  2256  0070                     ?_WDT_Clearing:	
  2257                           ; 0 bytes @ 0x0
  2258                           
  2259  0070                     ?_myMain_Initialization:	
  2260                           ; 0 bytes @ 0x0
  2261                           
  2262  0070                     ?_Switch_Initialization:	
  2263                           ; 0 bytes @ 0x0
  2264                           
  2265  0070                     ?_my_MainTimer:	
  2266                           ; 0 bytes @ 0x0
  2267                           
  2268  0070                     ?_Switch_Main:	
  2269                           ; 0 bytes @ 0x0
  2270                           
  2271  0070                     ?_setSw_Initialization:	
  2272                           ; 0 bytes @ 0x0
  2273                           
  2274  0070                     ?_setSw_Main:	
  2275                           ; 0 bytes @ 0x0
  2276                           
  2277  0070                     ?_Buzzer_Initialization:	
  2278                           ; 0 bytes @ 0x0
  2279                           
  2280  0070                     ?_Buzzer_Main:	
  2281                           ; 0 bytes @ 0x0
  2282                           
  2283  0070                     ?_DimmerIntrIOCPointSelect:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ??_DimmerIntrIOCPointSelect:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_setDimmerLights_IntrIOC_GO:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ?_DimmerIntrPointSelect:	
  2293                           ; 0 bytes @ 0x0
  2294                           
  2295  0070                     ??_DimmerIntrPointSelect:	
  2296                           ; 0 bytes @ 0x0
  2297                           
  2298  0070                     ?_setDimmerLights_IntrControl:	
  2299                           ; 0 bytes @ 0x0
  2300                           
  2301  0070                     ?_DimmerLightsPointSelect:	
  2302                           ; 0 bytes @ 0x0
  2303                           
  2304  0070                     ?_DimmerLights_Initialization:	
  2305                           ; 0 bytes @ 0x0
  2306                           
  2307  0070                     ?_DimmerLights_Main:	
  2308                           ; 0 bytes @ 0x0
  2309                           
  2310  0070                     ?_setDimmerLights_SwOn:	
  2311                           ; 0 bytes @ 0x0
  2312                           
  2313  0070                     ?_setDimmerLights_SwOff:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ?_setDimmerLights_AdjControl:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ?_setDimmerLights_ErrorClose:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_LedPointSelect:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ?_LED_Initialization:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_LED_Main:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ?_Mcu_Initialization:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_ISR:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ?_setDimmerReClock:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_Flash_Memory_Initialization:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ?_Flash_Memory_Main:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_Flash_Memory_Unlock:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ?_Flash_Memory_Erasing:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_WDT_Main:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ?_setMain_Exception:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_TouchPower:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ?_SwPointSelect:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_setPercentValue:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ?_Flash_Memory_Read:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_getMain_LightsStatus:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_getSw_KeyStatus:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_getDimmerLights_Status:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_getAll_DimmerLights_AdjGO:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_getDimmerLights_Line:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_getMain_All_Error_Status:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     getMain_All_Error_Status@command:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     getSw_KeyStatus@sw:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394                           
  2395                           ; 1 bytes @ 0x0
  2396  0070                     	ds	1
  2397  0071                     DimmerIntrIOCPointSelect@lights:	
  2398  0071                     DimmerIntrPointSelect@lights:	
  2399                           ; 1 bytes @ 0x1
  2400                           
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_setDimmerLights_IntrIOC_GO:	
  2405  0072                     ??_setDimmerLights_IntrControl:	
  2406                           ; 0 bytes @ 0x2
  2407                           
  2408  0072                     setDimmerLights_IntrIOC_GO@lights:	
  2409                           ; 0 bytes @ 0x2
  2410                           
  2411                           
  2412                           ; 1 bytes @ 0x2
  2413  0072                     	ds	1
  2414  0073                     ??_IOC_ISR:	
  2415  0073                     ??_setDimmerReClock:	
  2416                           ; 0 bytes @ 0x3
  2417                           
  2418                           
  2419                           ; 0 bytes @ 0x3
  2420  0073                     	ds	3
  2421  0076                     setDimmerLights_IntrControl@lights:	
  2422                           
  2423                           ; 1 bytes @ 0x6
  2424  0076                     	ds	1
  2425  0077                     ??_TMR1_ISR:	
  2426  0077                     ??_ISR:	
  2427                           ; 0 bytes @ 0x7
  2428                           
  2429                           
  2430                           ; 0 bytes @ 0x7
  2431  0077                     	ds	1
  2432                           
  2433                           	psect	cstackBANK0
  2434  0020                     __pcstackBANK0:	
  2435  0020                     ??_Dimmer_Initialization:	
  2436  0020                     ??_setDimmerLights_Line:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0020                     ??_Fosc_Set:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442  0020                     ??_IO_Set:	
  2443                           ; 0 bytes @ 0x0
  2444                           
  2445  0020                     ??_TMR1_Set:	
  2446                           ; 0 bytes @ 0x0
  2447                           
  2448  0020                     ??_ADC_Set:	
  2449                           ; 0 bytes @ 0x0
  2450                           
  2451  0020                     ??_IOC_Set:	
  2452                           ; 0 bytes @ 0x0
  2453                           
  2454  0020                     ??_WDT_Set:	
  2455                           ; 0 bytes @ 0x0
  2456                           
  2457  0020                     ??_Timeout_Counter:	
  2458                           ; 0 bytes @ 0x0
  2459                           
  2460  0020                     ??_set_TimeoutCleared:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0020                     ??_Flash_Memory_Read:	
  2464                           ; 0 bytes @ 0x0
  2465                           
  2466  0020                     ?_setMemory_Data:	
  2467                           ; 0 bytes @ 0x0
  2468                           
  2469  0020                     ??_Flash_Memory_Write:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0020                     ??_WDT_Clearing:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0020                     ??_myMain_Initialization:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0020                     ??_getSw_KeyStatus:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0020                     ??_Buzzer_Initialization:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0020                     ??_Buzzer_Main:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0020                     ??_DimmerLightsPointSelect:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0020                     ??_getAll_DimmerLights_AdjGO:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0020                     ??_getDimmerLights_Line:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0020                     ??_LedPointSelect:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0020                     ??_Flash_Memory_Unlock:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0020                     ??_Flash_Memory_Erasing:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0020                     ??_WDT_Main:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0020                     ??_getMain_All_Error_Status:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0020                     ??_TouchPower:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0020                     ??_SwPointSelect:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0020                     ?___awdiv:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0020                     ?___ftpack:	
  2521                           ; 2 bytes @ 0x0
  2522                           
  2523  0020                     getAll_DimmerLights_AdjGO@adjgo:	
  2524                           ; 3 bytes @ 0x0
  2525                           
  2526  0020                     setDimmerLights_Line@lights:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0020                     getDimmerLights_Line@line:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0020                     setMemory_Data@data:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0020                     getMain_All_Error_Status@status:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0020                     ___awdiv@divisor:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0020                     ___ftpack@arg:	
  2542                           ; 2 bytes @ 0x0
  2543                           
  2544                           
  2545                           ; 3 bytes @ 0x0
  2546  0020                     	ds	1
  2547  0021                     ??_setMemory_Data:	
  2548  0021                     ??_Mcu_Initialization:	
  2549                           ; 0 bytes @ 0x1
  2550                           
  2551  0021                     DimmerLightsPointSelect@lights:	
  2552                           ; 0 bytes @ 0x1
  2553                           
  2554  0021                     LedPointSelect@led:	
  2555                           ; 1 bytes @ 0x1
  2556                           
  2557  0021                     Flash_Memory_Read@i:	
  2558                           ; 1 bytes @ 0x1
  2559                           
  2560  0021                     Flash_Memory_Write@i:	
  2561                           ; 1 bytes @ 0x1
  2562                           
  2563  0021                     SwPointSelect@sw:	
  2564                           ; 1 bytes @ 0x1
  2565                           
  2566  0021                     getSw_KeyStatus@status:	
  2567                           ; 1 bytes @ 0x1
  2568                           
  2569                           
  2570                           ; 1 bytes @ 0x1
  2571  0021                     	ds	1
  2572  0022                     ??_setDimmerLights_Initialization:	
  2573  0022                     ?_setDimmerLights_Trigger:	
  2574                           ; 0 bytes @ 0x2
  2575                           
  2576  0022                     ?_setDimmerLights_TriggerAdj:	
  2577                           ; 0 bytes @ 0x2
  2578                           
  2579  0022                     ?_setLED:	
  2580                           ; 0 bytes @ 0x2
  2581                           
  2582  0022                     ??_setLED_Main:	
  2583                           ; 0 bytes @ 0x2
  2584                           
  2585  0022                     ??_getDimmerLights_Status:	
  2586                           ; 0 bytes @ 0x2
  2587                           
  2588  0022                     getDimmerLights_Status@lights:	
  2589                           ; 0 bytes @ 0x2
  2590                           
  2591  0022                     setDimmerLights_Trigger@command:	
  2592                           ; 1 bytes @ 0x2
  2593                           
  2594  0022                     setDimmerLights_TriggerAdj@command:	
  2595                           ; 1 bytes @ 0x2
  2596                           
  2597  0022                     setLED@command:	
  2598                           ; 1 bytes @ 0x2
  2599                           
  2600  0022                     Flash_Memory_Read@address:	
  2601                           ; 1 bytes @ 0x2
  2602                           
  2603  0022                     setMemory_Data@address:	
  2604                           ; 1 bytes @ 0x2
  2605                           
  2606  0022                     _getSw_KeyStatus$4285:	
  2607                           ; 1 bytes @ 0x2
  2608                           
  2609  0022                     ___awdiv@dividend:	
  2610                           ; 1 bytes @ 0x2
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x2
  2614  0022                     	ds	1
  2615  0023                     ??_setDimmerLights_Trigger:	
  2616  0023                     ??_setDimmerLights_TriggerAdj:	
  2617                           ; 0 bytes @ 0x3
  2618                           
  2619  0023                     ??_setLED:	
  2620                           ; 0 bytes @ 0x3
  2621                           
  2622  0023                     setDimmerLights_Initialization@lights:	
  2623                           ; 0 bytes @ 0x3
  2624                           
  2625  0023                     getDimmerLights_Status@status:	
  2626                           ; 1 bytes @ 0x3
  2627                           
  2628  0023                     setLED@led:	
  2629                           ; 1 bytes @ 0x3
  2630                           
  2631  0023                     Flash_Memory_Read@ret:	
  2632                           ; 1 bytes @ 0x3
  2633                           
  2634  0023                     ___ftpack@exp:	
  2635                           ; 1 bytes @ 0x3
  2636                           
  2637                           
  2638                           ; 1 bytes @ 0x3
  2639  0023                     	ds	1
  2640  0024                     ??_setLED_Initialization:	
  2641  0024                     ??_getMain_LightsStatus:	
  2642                           ; 0 bytes @ 0x4
  2643                           
  2644  0024                     ??_Flash_Memory_Modify:	
  2645                           ; 0 bytes @ 0x4
  2646                           
  2647  0024                     ??_setSw_Initialization:	
  2648                           ; 0 bytes @ 0x4
  2649                           
  2650  0024                     ??_DimmerLights_Initialization:	
  2651                           ; 0 bytes @ 0x4
  2652                           
  2653  0024                     ??___awdiv:	
  2654                           ; 0 bytes @ 0x4
  2655                           
  2656  0024                     setDimmerLights_Trigger@lights:	
  2657                           ; 0 bytes @ 0x4
  2658                           
  2659  0024                     setDimmerLights_TriggerAdj@lights:	
  2660                           ; 1 bytes @ 0x4
  2661                           
  2662  0024                     setLED_Initialization@led:	
  2663                           ; 1 bytes @ 0x4
  2664                           
  2665  0024                     setLED_Main@led:	
  2666                           ; 1 bytes @ 0x4
  2667                           
  2668  0024                     setSw_Initialization@sw:	
  2669                           ; 1 bytes @ 0x4
  2670                           
  2671  0024                     ___ftpack@sign:	
  2672                           ; 1 bytes @ 0x4
  2673                           
  2674                           
  2675                           ; 1 bytes @ 0x4
  2676  0024                     	ds	1
  2677  0025                     ??_Switch_Initialization:	
  2678  0025                     ??___ftpack:	
  2679                           ; 0 bytes @ 0x5
  2680                           
  2681  0025                     ??_setDimmerLights_SwOff:	
  2682                           ; 0 bytes @ 0x5
  2683                           
  2684  0025                     ??_setDimmerLights_AdjControl:	
  2685                           ; 0 bytes @ 0x5
  2686                           
  2687  0025                     ??_LED_Initialization:	
  2688                           ; 0 bytes @ 0x5
  2689                           
  2690  0025                     ??_LED_Main:	
  2691                           ; 0 bytes @ 0x5
  2692                           
  2693  0025                     setDimmerLights_SwOff@command:	
  2694                           ; 0 bytes @ 0x5
  2695                           
  2696  0025                     Flash_Memory_Modify@i:	
  2697                           ; 1 bytes @ 0x5
  2698                           
  2699  0025                     getMain_LightsStatus@count:	
  2700                           ; 1 bytes @ 0x5
  2701                           
  2702  0025                     ___awdiv@counter:	
  2703                           ; 1 bytes @ 0x5
  2704                           
  2705                           
  2706                           ; 1 bytes @ 0x5
  2707  0025                     	ds	1
  2708  0026                     setDimmerLights_SwOff@sw:	
  2709  0026                     setDimmerLights_AdjControl@idle:	
  2710                           ; 1 bytes @ 0x6
  2711                           
  2712  0026                     ___awdiv@sign:	
  2713                           ; 1 bytes @ 0x6
  2714                           
  2715  0026                     getMain_LightsStatus@i:	
  2716                           ; 1 bytes @ 0x6
  2717                           
  2718                           
  2719                           ; 2 bytes @ 0x6
  2720  0026                     	ds	1
  2721  0027                     ??_setDimmerLights_ErrorClose:	
  2722  0027                     _setDimmerLights_AdjControl$1573:	
  2723                           ; 0 bytes @ 0x7
  2724                           
  2725  0027                     ___awdiv@quotient:	
  2726                           ; 1 bytes @ 0x7
  2727                           
  2728                           
  2729                           ; 2 bytes @ 0x7
  2730  0027                     	ds	1
  2731  0028                     ?___awtoft:	
  2732  0028                     setDimmerLights_AdjControl@sw:	
  2733                           ; 3 bytes @ 0x8
  2734                           
  2735  0028                     setDimmerLights_ErrorClose@count:	
  2736                           ; 1 bytes @ 0x8
  2737                           
  2738  0028                     getMain_LightsStatus@status:	
  2739                           ; 1 bytes @ 0x8
  2740                           
  2741  0028                     ___awtoft@c:	
  2742                           ; 1 bytes @ 0x8
  2743                           
  2744                           
  2745                           ; 2 bytes @ 0x8
  2746  0028                     	ds	1
  2747  0029                     ?_setBuz:	
  2748  0029                     ??_Flash_Memory_Main:	
  2749                           ; 0 bytes @ 0x9
  2750                           
  2751  0029                     setDimmerLights_ErrorClose@lights:	
  2752                           ; 0 bytes @ 0x9
  2753                           
  2754  0029                     setBuz@time:	
  2755                           ; 1 bytes @ 0x9
  2756                           
  2757                           
  2758                           ; 2 bytes @ 0x9
  2759  0029                     	ds	1
  2760  002A                     setDimmerLights_ErrorClose@i:	
  2761                           
  2762                           ; 2 bytes @ 0xA
  2763  002A                     	ds	1
  2764  002B                     ??_setBuz:	
  2765  002B                     ??___awtoft:	
  2766                           ; 0 bytes @ 0xB
  2767                           
  2768                           
  2769                           ; 0 bytes @ 0xB
  2770  002B                     	ds	1
  2771  002C                     setBuz@count:	
  2772                           
  2773                           ; 1 bytes @ 0xC
  2774  002C                     	ds	1
  2775  002D                     ??_my_MainTimer:	
  2776  002D                     ??_setDimmerLights_SwOn:	
  2777                           ; 0 bytes @ 0xD
  2778                           
  2779  002D                     ??_setMain_Exception:	
  2780                           ; 0 bytes @ 0xD
  2781                           
  2782  002D                     ___awtoft@sign:	
  2783                           ; 0 bytes @ 0xD
  2784                           
  2785                           
  2786                           ; 1 bytes @ 0xD
  2787  002D                     	ds	1
  2788  002E                     ?___ftdiv:	
  2789  002E                     setDimmerLights_SwOn@idle:	
  2790                           ; 3 bytes @ 0xE
  2791                           
  2792  002E                     ___ftdiv@f2:	
  2793                           ; 1 bytes @ 0xE
  2794                           
  2795                           
  2796                           ; 3 bytes @ 0xE
  2797  002E                     	ds	1
  2798  002F                     setDimmerLights_SwOn@sw:	
  2799  002F                     setMain_Exception@buz:	
  2800                           ; 1 bytes @ 0xF
  2801                           
  2802                           
  2803                           ; 1 bytes @ 0xF
  2804  002F                     	ds	1
  2805  0030                     ??_setSw_Main:	
  2806  0030                     _setMain_Exception$2533:	
  2807                           ; 0 bytes @ 0x10
  2808                           
  2809                           
  2810                           ; 2 bytes @ 0x10
  2811  0030                     	ds	1
  2812  0031                     ___ftdiv@f1:	
  2813                           
  2814                           ; 3 bytes @ 0x11
  2815  0031                     	ds	1
  2816  0032                     setMain_Exception@status:	
  2817  0032                     setSw_Main@sw:	
  2818                           ; 1 bytes @ 0x12
  2819                           
  2820                           
  2821                           ; 1 bytes @ 0x12
  2822  0032                     	ds	1
  2823  0033                     setMain_Exception@command:	
  2824                           
  2825                           ; 1 bytes @ 0x13
  2826  0033                     	ds	1
  2827  0034                     ??_Switch_Main:	
  2828  0034                     ??___ftdiv:	
  2829                           ; 0 bytes @ 0x14
  2830                           
  2831                           
  2832                           ; 0 bytes @ 0x14
  2833  0034                     	ds	1
  2834  0035                     Switch_Main@error:	
  2835                           
  2836                           ; 1 bytes @ 0x15
  2837  0035                     	ds	3
  2838  0038                     ___ftdiv@cntr:	
  2839                           
  2840                           ; 1 bytes @ 0x18
  2841  0038                     	ds	1
  2842  0039                     ___ftdiv@f3:	
  2843                           
  2844                           ; 3 bytes @ 0x19
  2845  0039                     	ds	3
  2846  003C                     ___ftdiv@exp:	
  2847                           
  2848                           ; 1 bytes @ 0x1C
  2849  003C                     	ds	1
  2850  003D                     ___ftdiv@sign:	
  2851                           
  2852                           ; 1 bytes @ 0x1D
  2853  003D                     	ds	1
  2854  003E                     ?___ftneg:	
  2855  003E                     ___ftneg@f1:	
  2856                           ; 3 bytes @ 0x1E
  2857                           
  2858                           
  2859                           ; 3 bytes @ 0x1E
  2860  003E                     	ds	3
  2861  0041                     ??___ftneg:	
  2862  0041                     ?___ftadd:	
  2863                           ; 0 bytes @ 0x21
  2864                           
  2865  0041                     ___ftadd@f1:	
  2866                           ; 3 bytes @ 0x21
  2867                           
  2868                           
  2869                           ; 3 bytes @ 0x21
  2870  0041                     	ds	3
  2871  0044                     ___ftadd@f2:	
  2872                           
  2873                           ; 3 bytes @ 0x24
  2874  0044                     	ds	3
  2875  0047                     ??___ftadd:	
  2876                           
  2877                           ; 0 bytes @ 0x27
  2878  0047                     	ds	4
  2879  004B                     ___ftadd@sign:	
  2880                           
  2881                           ; 1 bytes @ 0x2B
  2882  004B                     	ds	1
  2883  004C                     ___ftadd@exp2:	
  2884                           
  2885                           ; 1 bytes @ 0x2C
  2886  004C                     	ds	1
  2887  004D                     ___ftadd@exp1:	
  2888                           
  2889                           ; 1 bytes @ 0x2D
  2890  004D                     	ds	1
  2891  004E                     ?___fttol:	
  2892  004E                     ___fttol@f1:	
  2893                           ; 4 bytes @ 0x2E
  2894                           
  2895                           
  2896                           ; 3 bytes @ 0x2E
  2897  004E                     	ds	4
  2898  0052                     ??___fttol:	
  2899                           
  2900                           ; 0 bytes @ 0x32
  2901  0052                     	ds	4
  2902  0056                     ___fttol@sign1:	
  2903                           
  2904                           ; 1 bytes @ 0x36
  2905  0056                     	ds	1
  2906  0057                     ___fttol@lval:	
  2907                           
  2908                           ; 4 bytes @ 0x37
  2909  0057                     	ds	4
  2910  005B                     ___fttol@exp1:	
  2911                           
  2912                           ; 1 bytes @ 0x3B
  2913  005B                     	ds	1
  2914  005C                     ??_setPercentValue:	
  2915                           
  2916                           ; 0 bytes @ 0x3C
  2917  005C                     	ds	2
  2918  005E                     setPercentValue@value:	
  2919                           
  2920                           ; 1 bytes @ 0x3E
  2921  005E                     	ds	1
  2922  005F                     setPercentValue@i:	
  2923                           
  2924                           ; 3 bytes @ 0x3F
  2925  005F                     	ds	3
  2926  0062                     ?_setDimmerLights:	
  2927  0062                     ?_setDimmerLights_Adj:	
  2928                           ; 0 bytes @ 0x42
  2929                           
  2930  0062                     ??_Flash_Memory_Initialization:	
  2931                           ; 0 bytes @ 0x42
  2932                           
  2933  0062                     setDimmerLights@status:	
  2934                           ; 0 bytes @ 0x42
  2935                           
  2936  0062                     setDimmerLights_Adj@status:	
  2937                           ; 1 bytes @ 0x42
  2938                           
  2939                           
  2940                           ; 1 bytes @ 0x42
  2941  0062                     	ds	1
  2942  0063                     ??_setDimmerLights:	
  2943  0063                     ??_setDimmerLights_Adj:	
  2944                           ; 0 bytes @ 0x43
  2945                           
  2946  0063                     Flash_Memory_Initialization@i:	
  2947                           ; 0 bytes @ 0x43
  2948                           
  2949                           
  2950                           ; 1 bytes @ 0x43
  2951  0063                     	ds	2
  2952  0065                     setDimmerLights@lights:	
  2953  0065                     setDimmerLights_Adj@lights:	
  2954                           ; 1 bytes @ 0x45
  2955                           
  2956                           
  2957                           ; 1 bytes @ 0x45
  2958  0065                     	ds	1
  2959  0066                     ??_setDimmerLights_Main:	
  2960  0066                     setDimmerLights_Main@lights:	
  2961                           ; 0 bytes @ 0x46
  2962                           
  2963                           
  2964                           ; 1 bytes @ 0x46
  2965  0066                     	ds	1
  2966  0067                     ??_DimmerLights_Main:	
  2967  0067                     ?_main:	
  2968                           ; 0 bytes @ 0x47
  2969                           
  2970  0067                     main@argc:	
  2971                           ; 2 bytes @ 0x47
  2972                           
  2973                           
  2974                           ; 2 bytes @ 0x47
  2975  0067                     	ds	2
  2976  0069                     main@argv:	
  2977                           
  2978                           ; 2 bytes @ 0x49
  2979  0069                     	ds	2
  2980  006B                     ??_main:	
  2981                           
  2982                           	psect	maintext
  2983  0D9F                     __pmaintext:	
  2984                           ; 0 bytes @ 0x4B
  2985 ;;
  2986 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2987 ;;
  2988 ;; *************** function _main *****************
  2989 ;; Defined at:
  2990 ;;		line 7 in file "../src/Main_B1.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  argc            2   71[BANK0 ] int 
  2993 ;;  argv            2   73[BANK0 ] PTR PTR unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2   71[BANK0 ] int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 17F/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        4 bytes
  3010 ;; Hardware stack levels required when called:   11
  3011 ;; This function calls:
  3012 ;;		_Buzzer_Initialization
  3013 ;;		_Buzzer_Main
  3014 ;;		_DimmerLights_Initialization
  3015 ;;		_DimmerLights_Main
  3016 ;;		_Flash_Memory_Initialization
  3017 ;;		_Flash_Memory_Main
  3018 ;;		_LED_Initialization
  3019 ;;		_LED_Main
  3020 ;;		_Mcu_Initialization
  3021 ;;		_Switch_Initialization
  3022 ;;		_Switch_Main
  3023 ;;		_WDT_Main
  3024 ;;		_myMain_Initialization
  3025 ;;		_my_MainTimer
  3026 ;; This function is called by:
  3027 ;;		Startup code after reset
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _main
  3033  0D9F                     _main:	
  3034                           
  3035                           ;Main_B1.c: 8: myMain_Initialization();
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3039  0D9F  318A  22E9  318D   	fcall	_myMain_Initialization
  3040                           
  3041                           ;Main_B1.c: 9: Mcu_Initialization();
  3042  0DA2  318B  2339  318D   	fcall	_Mcu_Initialization
  3043                           
  3044                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  3045  0DA5  3183  237A  318D   	fcall	_Flash_Memory_Initialization
  3046                           
  3047                           ;Main_B1.c: 11: LED_Initialization();
  3048  0DA8  3189  21EB  318D   	fcall	_LED_Initialization
  3049                           
  3050                           ;Main_B1.c: 12: Buzzer_Initialization();
  3051  0DAB  3189  21E0  318D   	fcall	_Buzzer_Initialization
  3052                           
  3053                           ;Main_B1.c: 14: ;;
  3054                           ;Main_B1.c: 15: ;;
  3055                           ;Main_B1.c: 16: ;;
  3056                           ;Main_B1.c: 17: ;;
  3057                           ;Main_B1.c: 18: ;;
  3058                           ;Main_B1.c: 20: DimmerLights_Initialization();
  3059  0DAE  318A  2282  318D   	fcall	_DimmerLights_Initialization
  3060                           
  3061                           ;Main_B1.c: 21: ;;
  3062                           ;Main_B1.c: 22: ;;
  3063                           ;Main_B1.c: 23: ;;
  3064                           ;Main_B1.c: 24: Switch_Initialization();
  3065  0DB1  318A  2225  318D   	fcall	_Switch_Initialization
  3066                           
  3067                           ;Main_B1.c: 25: ;;
  3068                           ;Main_B1.c: 26: __nop();
  3069  0DB4  0000               	nop
  3070  0DB5                     l814:	
  3071                           ;Main_B1.c: 27: ;;
  3072                           ;Main_B1.c: 29: while (1) {
  3073                           
  3074                           
  3075                           ;Main_B1.c: 56: }
  3076                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3077  0DB5  0021               	movlb	1	; select bank1
  3078  0DB6  1C3F               	btfss	_Timer1^(0+128),0
  3079  0DB7  2DB5               	goto	l814
  3080                           
  3081                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3082  0DB8  103F               	bcf	_Timer1^(0+128),0
  3083                           
  3084                           ;Main_B1.c: 94: my_MainTimer();
  3085  0DB9  318E  26BF  318D   	fcall	_my_MainTimer
  3086                           
  3087                           ;Main_B1.c: 95: WDT_Main();
  3088  0DBC  318B  2318  318D   	fcall	_WDT_Main
  3089                           
  3090                           ;Main_B1.c: 96: ;;
  3091                           ;Main_B1.c: 97: ;;
  3092                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  3093  0DBF  0021               	movlb	1	; select bank1
  3094  0DC0  1C20               	btfss	_myMain^(0+128),0
  3095  0DC1  2DB5               	goto	l814
  3096                           
  3097                           ;Main_B1.c: 99: Flash_Memory_Main();
  3098  0DC2  318E  2606  318D   	fcall	_Flash_Memory_Main
  3099                           
  3100                           ;Main_B1.c: 101: LED_Main();
  3101  0DC5  3189  21EF  318D   	fcall	_LED_Main
  3102                           
  3103                           ;Main_B1.c: 102: Buzzer_Main();
  3104  0DC8  318E  2675  318D   	fcall	_Buzzer_Main
  3105                           
  3106                           ;Main_B1.c: 104: ;;
  3107                           ;Main_B1.c: 105: ;;
  3108                           ;Main_B1.c: 106: ;;
  3109                           ;Main_B1.c: 107: ;;
  3110                           ;Main_B1.c: 109: ;;
  3111                           ;Main_B1.c: 110: DimmerLights_Main();
  3112  0DCB  3189  21E7  318D   	fcall	_DimmerLights_Main
  3113                           
  3114                           ;Main_B1.c: 111: Switch_Main();
  3115  0DCE  318B  23C3  318D   	fcall	_Switch_Main
  3116                           
  3117                           ;Main_B1.c: 112: ;;
  3118                           ;Main_B1.c: 113: ;;
  3119                           ;Main_B1.c: 115: ;;
  3120                           ;Main_B1.c: 116: ;;
  3121                           ;Main_B1.c: 117: ;;
  3122  0DD1  2DB5               	goto	l814
  3123  0DD2                     __end_of_main:	
  3124                           ;Main_B1.c: 125: }
  3125                           ;Main_B1.c: 126: }
  3126                           ;Main_B1.c: 160: }
  3127                           ;Main_B1.c: 161: return (0);
  3128                           ;	Return value of _main is never used
  3129                           
  3130                           
  3131                           	psect	text1
  3132  0EBF                     __ptext1:	
  3133 ;; *************** function _my_MainTimer *****************
  3134 ;; Defined at:
  3135 ;;		line 180 in file "../src/Main_B1.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;		None               void
  3142 ;; Registers used:
  3143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    7
  3156 ;; This function calls:
  3157 ;;		_setBuz
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _my_MainTimer
  3165  0EBF                     _my_MainTimer:	
  3166                           
  3167                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3171  0EBF  0021               	movlb	1	; select bank1
  3172  0EC0  1820               	btfsc	_myMain^(0+128),0
  3173  0EC1  2EE1               	goto	l4161
  3174                           
  3175                           ;Main_B1.c: 183: myMain.PowerCount++;
  3176  0EC2  3001               	movlw	1
  3177  0EC3  07A2               	addwf	(_myMain^(0+128)+2),f
  3178  0EC4  3000               	movlw	0
  3179  0EC5  3DA3               	addwfc	((_myMain+1)^(0+128)+2),f
  3180                           
  3181                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  3182  0EC6  3002               	movlw	2
  3183  0EC7  3EA0               	addlw	_myMain& (0+255)
  3184  0EC8  0086               	movwf	6
  3185  0EC9  0187               	clrf	7
  3186  0ECA  3F40               	moviw [0]fsr1
  3187  0ECB  3A96               	xorlw	150
  3188  0ECC  1D03               	skipz
  3189  0ECD  2ED0               	goto	u3945
  3190  0ECE  3F41               	moviw [1]fsr1
  3191  0ECF  3A00               	xorlw	0
  3192  0ED0                     u3945:	
  3193  0ED0  1D03               	skipz
  3194  0ED1  2EF8               	goto	l4171
  3195                           
  3196                           ;Main_B1.c: 185: {
  3197                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  3198  0ED2  01A2               	clrf	(_myMain^(0+128)+2)
  3199  0ED3  01A3               	clrf	((_myMain+1)^(0+128)+2)
  3200                           
  3201                           ;Main_B1.c: 187: myMain.PowerON = 1;
  3202  0ED4  1420               	bsf	_myMain^(0+128),0
  3203                           
  3204                           ;Main_B1.c: 193: setBuz(3, 50);
  3205  0ED5  3032               	movlw	50
  3206  0ED6  0020               	movlb	0	; select bank0
  3207  0ED7  00A9               	movwf	setBuz@time
  3208  0ED8  3000               	movlw	0
  3209  0ED9  00AA               	movwf	setBuz@time+1
  3210  0EDA  3003               	movlw	3
  3211  0EDB  3187  2710  318E   	fcall	_setBuz
  3212                           
  3213                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  3214  0EDE  0021               	movlb	1	; select bank1
  3215  0EDF  1620               	bsf	_myMain^(0+128),4
  3216                           
  3217                           ;Main_B1.c: 203: }
  3218                           ;Main_B1.c: 204: } else {
  3219  0EE0  2EF8               	goto	l4171
  3220  0EE1                     l4161:	
  3221                           
  3222                           ;Main_B1.c: 212: myMain.Count1++;
  3223  0EE1  3001               	movlw	1
  3224  0EE2  07A6               	addwf	(_myMain^(0+128)+6),f
  3225  0EE3  3000               	movlw	0
  3226  0EE4  3DA7               	addwfc	((_myMain+1)^(0+128)+6),f
  3227                           
  3228                           ;Main_B1.c: 213: if (myMain.Count1 == 100)
  3229  0EE5  3006               	movlw	6
  3230  0EE6  3EA0               	addlw	_myMain& (0+255)
  3231  0EE7  0086               	movwf	6
  3232  0EE8  0187               	clrf	7
  3233  0EE9  3F40               	moviw [0]fsr1
  3234  0EEA  3A64               	xorlw	100
  3235  0EEB  1D03               	skipz
  3236  0EEC  2EEF               	goto	u3955
  3237  0EED  3F41               	moviw [1]fsr1
  3238  0EEE  3A00               	xorlw	0
  3239  0EEF                     u3955:	
  3240  0EEF  1D03               	skipz
  3241  0EF0  2EF8               	goto	l4171
  3242                           
  3243                           ;Main_B1.c: 214: {
  3244                           ;Main_B1.c: 215: myMain.Count1 = 0;
  3245  0EF1  01A6               	clrf	(_myMain^(0+128)+6)
  3246  0EF2  01A7               	clrf	((_myMain+1)^(0+128)+6)
  3247                           
  3248                           ;Main_B1.c: 227: if (myMain.Flag) {
  3249  0EF3  1CA0               	btfss	_myMain^(0+128),1
  3250  0EF4  2EF7               	goto	l829
  3251                           
  3252                           ;Main_B1.c: 228: myMain.Flag = 0;
  3253  0EF5  10A0               	bcf	_myMain^(0+128),1
  3254                           
  3255                           ;Main_B1.c: 237: } else {
  3256  0EF6  2EF8               	goto	l4171
  3257  0EF7                     l829:	
  3258                           
  3259                           ;Main_B1.c: 238: myMain.Flag = 1;
  3260  0EF7  14A0               	bsf	_myMain^(0+128),1
  3261  0EF8                     l4171:	
  3262                           
  3263                           ;Main_B1.c: 247: }
  3264                           ;Main_B1.c: 248: }
  3265                           ;Main_B1.c: 250: }
  3266                           ;Main_B1.c: 252: myMain.Count2++;
  3267  0EF8  3001               	movlw	1
  3268  0EF9  07A8               	addwf	(_myMain^(0+128)+8),f
  3269  0EFA  3000               	movlw	0
  3270  0EFB  3DA9               	addwfc	((_myMain+1)^(0+128)+8),f
  3271                           
  3272                           ;Main_B1.c: 253: if (myMain.Count2 == 100) {
  3273  0EFC  3008               	movlw	8
  3274  0EFD  3EA0               	addlw	_myMain& (0+255)
  3275  0EFE  0086               	movwf	6
  3276  0EFF  0187               	clrf	7
  3277  0F00  3F40               	moviw [0]fsr1
  3278  0F01  3A64               	xorlw	100
  3279  0F02  1D03               	skipz
  3280  0F03  2F06               	goto	u3975
  3281  0F04  3F41               	moviw [1]fsr1
  3282  0F05  3A00               	xorlw	0
  3283  0F06                     u3975:	
  3284  0F06  1D03               	skipz
  3285  0F07  0008               	return
  3286                           
  3287                           ;Main_B1.c: 254: myMain.Count2 = 0;
  3288  0F08  01A8               	clrf	(_myMain^(0+128)+8)
  3289  0F09  01A9               	clrf	((_myMain+1)^(0+128)+8)
  3290  0F0A  0008               	return
  3291  0F0B                     __end_of_my_MainTimer:	
  3292                           
  3293                           	psect	text2
  3294  0AE9                     __ptext2:	
  3295 ;; *************** function _myMain_Initialization *****************
  3296 ;; Defined at:
  3297 ;;		line 167 in file "../src/Main_B1.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    5
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _myMain_Initialization
  3327  0AE9                     _myMain_Initialization:	
  3328                           
  3329                           ;Main_B1.c: 169: product = &_product;
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3333  0AE9  3045               	movlw	__product& (0+255)
  3334  0AEA  0020               	movlb	0	; select bank0
  3335  0AEB  00A0               	movwf	??_myMain_Initialization
  3336  0AEC  0820               	movf	??_myMain_Initialization,w
  3337  0AED  00EF               	movwf	_product
  3338                           
  3339                           ;Main_B1.c: 170: product->Data[20] = 209;
  3340  0AEE  30D1               	movlw	209
  3341  0AEF  00A0               	movwf	??_myMain_Initialization
  3342  0AF0  086F               	movf	_product,w
  3343  0AF1  3E14               	addlw	20
  3344  0AF2  0086               	movwf	6
  3345  0AF3  3001               	movlw	1	; select bank2/3
  3346  0AF4  0087               	movwf	7
  3347  0AF5  0820               	movf	??_myMain_Initialization,w
  3348  0AF6  0081               	movwf	1
  3349  0AF7  0008               	return
  3350  0AF8                     __end_of_myMain_Initialization:	
  3351                           
  3352                           	psect	text3
  3353  0B18                     __ptext3:	
  3354 ;; *************** function _WDT_Main *****************
  3355 ;; Defined at:
  3356 ;;		line 1033 in file "../src/MCU_B1.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;Total ram usage:        1 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    6
  3377 ;; This function calls:
  3378 ;;		_WDT_Clearing
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _WDT_Main
  3386  0B18                     _WDT_Main:	
  3387                           
  3388                           ;MCU_B1.c: 1034: if (WDT.Enable == 1) {
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3392  0B18  1C78               	btfss	_WDT,0
  3393  0B19  0008               	return
  3394                           
  3395                           ;MCU_B1.c: 1035: if (WDT.Timer-- > 0) {
  3396  0B1A  3001               	movlw	1
  3397  0B1B  02F9               	subwf	_WDT+1,f
  3398  0B1C  0879               	movf	_WDT+1,w
  3399  0B1D  3AFF               	xorlw	255
  3400  0B1E  1903               	skipnz
  3401  0B1F  0008               	return
  3402                           
  3403                           ;MCU_B1.c: 1036: WDT.Timer = 100;
  3404  0B20  3064               	movlw	100
  3405  0B21  0020               	movlb	0	; select bank0
  3406  0B22  00A0               	movwf	??_WDT_Main
  3407  0B23  0820               	movf	??_WDT_Main,w
  3408  0B24  00F9               	movwf	_WDT+1
  3409                           
  3410                           ;MCU_B1.c: 1037: WDT_Clearing();
  3411  0B25  3187  27FE         	fcall	_WDT_Clearing
  3412  0B27  0008               	return
  3413  0B28                     __end_of_WDT_Main:	
  3414                           
  3415                           	psect	text4
  3416  07FE                     __ptext4:	
  3417 ;; *************** function _WDT_Clearing *****************
  3418 ;; Defined at:
  3419 ;;		line 1043 in file "../src/MCU_B1.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		None
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    5
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_WDT_Main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _WDT_Clearing
  3449  07FE                     _WDT_Clearing:	
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _WDT_Clearing: []
  3453  07FE  0064               	clrwdt	;# 
  3454  07FF  0008               	return
  3455  0800                     __end_of_WDT_Clearing:	
  3456                           
  3457                           	psect	text5
  3458  0BC3                     __ptext5:	
  3459 ;; *************** function _Switch_Main *****************
  3460 ;; Defined at:
  3461 ;;		line 72 in file "../src/Switch_B1.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  error           1   21[BANK0 ] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:   10
  3482 ;; This function calls:
  3483 ;;		_TouchPower
  3484 ;;		_getMain_All_Error_Status
  3485 ;;		_setMain_Exception
  3486 ;;		_setSw_Main
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _Switch_Main
  3494  0BC3                     _Switch_Main:	
  3495                           
  3496                           ;Switch_B1.c: 73: char error = getMain_All_Error_Status(0);
  3497                           
  3498                           ;incstack = 0
  3499                           ; Regs used in _Switch_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3500  0BC3  3000               	movlw	0
  3501  0BC4  3189  21F7  318B   	fcall	_getMain_All_Error_Status
  3502  0BC7  0020               	movlb	0	; select bank0
  3503  0BC8  00B4               	movwf	??_Switch_Main
  3504  0BC9  0834               	movf	??_Switch_Main,w
  3505  0BCA  00B5               	movwf	Switch_Main@error
  3506                           
  3507                           ;Switch_B1.c: 74: if (error != 0) {
  3508  0BCB  0835               	movf	Switch_Main@error,w
  3509  0BCC  1903               	btfsc	3,2
  3510  0BCD  2BD2               	goto	l1218
  3511                           
  3512                           ;Switch_B1.c: 75: if (SwDetect.Error == 0) {
  3513  0BCE  186E               	btfsc	_SwDetect,0
  3514  0BCF  2BD9               	goto	l4191
  3515                           
  3516                           ;Switch_B1.c: 76: SwDetect.Error = 1;
  3517  0BD0  146E               	bsf	_SwDetect,0
  3518  0BD1  2BD5               	goto	L1
  3519  0BD2                     l1218:	
  3520                           ;Switch_B1.c: 80: }
  3521                           ;Switch_B1.c: 81: } else {
  3522                           
  3523                           ;Switch_B1.c: 78: setMain_Exception(error);
  3524                           
  3525                           
  3526                           ;Switch_B1.c: 82: if (SwDetect.Error == 1) {
  3527  0BD2  1C6E               	btfss	_SwDetect,0
  3528  0BD3  2BD9               	goto	l4191
  3529                           
  3530                           ;Switch_B1.c: 83: SwDetect.Error = 0;
  3531  0BD4  106E               	bcf	_SwDetect,0
  3532  0BD5                     L1:	
  3533                           
  3534                           ;Switch_B1.c: 85: setMain_Exception(error);
  3535  0BD5  0835               	movf	Switch_Main@error,w
  3536  0BD6  3186  26B4  318B   	fcall	_setMain_Exception
  3537  0BD9                     l4191:	
  3538                           
  3539                           ;Switch_B1.c: 87: }
  3540                           ;Switch_B1.c: 88: }
  3541                           ;Switch_B1.c: 91: setSw_Main(1);
  3542  0BD9  3001               	movlw	1
  3543  0BDA  3180  203D  318B   	fcall	_setSw_Main
  3544                           
  3545                           ;Switch_B1.c: 103: TouchPower();
  3546  0BDD  318B  2360         	fcall	_TouchPower
  3547  0BDF  0008               	return
  3548  0BE0                     __end_of_Switch_Main:	
  3549                           
  3550                           	psect	text6
  3551  003D                     __ptext6:	
  3552 ;; *************** function _setSw_Main *****************
  3553 ;; Defined at:
  3554 ;;		line 137 in file "../src/Switch_B1.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  sw              1    wreg     unsigned char 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  sw              1   18[BANK0 ] unsigned char 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;		None               void
  3561 ;; Registers used:
  3562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;Total ram usage:        3 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    8
  3575 ;; This function calls:
  3576 ;;		_SwPointSelect
  3577 ;;		_getSw_KeyStatus
  3578 ;;		_setBuz
  3579 ;;		_setDimmerLights_AdjControl
  3580 ;;		_setDimmerLights_SwOff
  3581 ;;		_setDimmerLights_SwOn
  3582 ;; This function is called by:
  3583 ;;		_Switch_Main
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           
  3588                           ;psect for function _setSw_Main
  3589  003D                     _setSw_Main:	
  3590                           
  3591                           ;incstack = 0
  3592                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3593                           ;setSw_Main@sw stored from wreg
  3594  003D  0020               	movlb	0	; select bank0
  3595  003E  00B2               	movwf	setSw_Main@sw
  3596                           
  3597                           ;Switch_B1.c: 138: SwPointSelect(sw);
  3598  003F  0832               	movf	setSw_Main@sw,w
  3599  0040  318A  2277  3180   	fcall	_SwPointSelect
  3600                           
  3601                           ;Switch_B1.c: 139: if (Sw->Enable == 1) {
  3602  0043  0020               	movlb	0	; select bank0
  3603  0044  086D               	movf	_Sw,w
  3604  0045  0086               	movwf	6
  3605  0046  0187               	clrf	7
  3606  0047  1C01               	btfss	1,0
  3607  0048  296C               	goto	l1228
  3608                           
  3609                           ;Switch_B1.c: 140: if (SwDetect.Error == 0) {
  3610  0049  186E               	btfsc	_SwDetect,0
  3611  004A  2863               	goto	l3901
  3612                           
  3613                           ;Switch_B1.c: 141: Sw->Detect = 0;
  3614  004B  0A6D               	incf	_Sw,w
  3615  004C  0086               	movwf	6
  3616  004D  0187               	clrf	7
  3617  004E  1081               	bcf	1,1
  3618                           
  3619                           ;Switch_B1.c: 142: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  3620  004F  0832               	movf	setSw_Main@sw,w
  3621  0050  318B  2328  3180   	fcall	_getSw_KeyStatus
  3622  0053  3A01               	xorlw	1
  3623  0054  3000               	movlw	0
  3624  0055  1903               	skipnz
  3625  0056  3001               	movlw	1
  3626  0057  0020               	movlb	0	; select bank0
  3627  0058  00B0               	movwf	??_setSw_Main
  3628  0059  086D               	movf	_Sw,w
  3629  005A  0086               	movwf	6
  3630  005B  0187               	clrf	7
  3631  005C  0DB0               	rlf	??_setSw_Main,f
  3632  005D  0801               	movf	1,w
  3633  005E  0630               	xorwf	??_setSw_Main,w
  3634  005F  39FD               	andlw	-3
  3635  0060  0630               	xorwf	??_setSw_Main,w
  3636  0061  0081               	movwf	1
  3637                           
  3638                           ;Switch_B1.c: 143: } else {
  3639  0062  2874               	goto	l1230
  3640  0063                     l3901:	
  3641                           
  3642                           ;Switch_B1.c: 144: if (Sw->Detect == 0) {
  3643  0063  0A6D               	incf	_Sw,w
  3644  0064  0086               	movwf	6
  3645  0065  0187               	clrf	7
  3646  0066  1881               	btfsc	1,1
  3647  0067  2874               	goto	l1230
  3648                           
  3649                           ;Switch_B1.c: 145: Sw->Detect = 1;
  3650  0068  0A6D               	incf	_Sw,w
  3651  0069  0086               	movwf	6
  3652  006A  0187               	clrf	7
  3653  006B  1481               	bsf	1,1
  3654                           
  3655                           ;Switch_B1.c: 146: Sw->Touch = 0;
  3656  006C  086D               	movf	_Sw,w
  3657  006D  0086               	movwf	6
  3658  006E  0187               	clrf	7
  3659  006F  1081               	bcf	1,1
  3660                           
  3661                           ;Switch_B1.c: 147: Sw->Debounce = 1;
  3662  0070  086D               	movf	_Sw,w
  3663  0071  0086               	movwf	6
  3664  0072  0187               	clrf	7
  3665  0073  1501               	bsf	1,2
  3666  0074                     l1230:	
  3667                           
  3668                           ;Switch_B1.c: 148: }
  3669                           ;Switch_B1.c: 149: }
  3670                           ;Switch_B1.c: 152: if (Sw->Touch == 1) {
  3671  0074  086D               	movf	_Sw,w
  3672  0075  0086               	movwf	6
  3673  0076  0187               	clrf	7
  3674  0077  1C81               	btfss	1,1
  3675  0078  2927               	goto	l3947
  3676                           
  3677                           ;Switch_B1.c: 153: if (Sw->Debounce == 0) {
  3678  0079  086D               	movf	_Sw,w
  3679  007A  0086               	movwf	6
  3680  007B  0187               	clrf	7
  3681  007C  1901               	btfsc	1,2
  3682  007D  289B               	goto	l3917
  3683                           
  3684                           ;Switch_B1.c: 154: Sw->DebounceTime++;
  3685  007E  3001               	movlw	1
  3686  007F  00B0               	movwf	??_setSw_Main
  3687  0080  086D               	movf	_Sw,w
  3688  0081  3E02               	addlw	2
  3689  0082  0086               	movwf	6
  3690  0083  0187               	clrf	7
  3691  0084  0830               	movf	??_setSw_Main,w
  3692  0085  0781               	addwf	1,f
  3693                           
  3694                           ;Switch_B1.c: 155: if (Sw->DebounceTime >= 5) {
  3695  0086  086D               	movf	_Sw,w
  3696  0087  3E02               	addlw	2
  3697  0088  0086               	movwf	6
  3698  0089  0187               	clrf	7
  3699  008A  3005               	movlw	5
  3700  008B  0201               	subwf	1,w
  3701  008C  1C03               	skipc
  3702  008D  0008               	return
  3703                           
  3704                           ;Switch_B1.c: 156: Sw->DebounceTime = 0;
  3705  008E  086D               	movf	_Sw,w
  3706  008F  3E02               	addlw	2
  3707  0090  0086               	movwf	6
  3708  0091  0187               	clrf	7
  3709  0092  0181               	clrf	1
  3710                           
  3711                           ;Switch_B1.c: 157: Sw->Debounce = 1;
  3712  0093  086D               	movf	_Sw,w
  3713  0094  0086               	movwf	6
  3714  0095  0187               	clrf	7
  3715  0096  1501               	bsf	1,2
  3716                           
  3717                           ;Switch_B1.c: 160: setDimmerLights_SwOn(sw);
  3718  0097  0832               	movf	setSw_Main@sw,w
  3719  0098  318E  263C         	fcall	_setDimmerLights_SwOn
  3720                           
  3721                           ;Switch_B1.c: 162: }
  3722                           ;Switch_B1.c: 163: } else {
  3723  009A  0008               	return
  3724  009B                     l3917:	
  3725                           
  3726                           ;Switch_B1.c: 164: if (Sw->Hold1 == 0) {
  3727  009B  0020               	movlb	0	; select bank0
  3728  009C  086D               	movf	_Sw,w
  3729  009D  0086               	movwf	6
  3730  009E  0187               	clrf	7
  3731  009F  1981               	btfsc	1,3
  3732  00A0  28C8               	goto	l3927
  3733                           
  3734                           ;Switch_B1.c: 165: Sw->Hold1Time++;
  3735  00A1  086D               	movf	_Sw,w
  3736  00A2  3E03               	addlw	3
  3737  00A3  0086               	movwf	6
  3738  00A4  0187               	clrf	7
  3739  00A5  3001               	movlw	1
  3740  00A6  0781               	addwf	1,f
  3741  00A7  3141               	addfsr 1,1
  3742  00A8  1803               	skipnc
  3743  00A9  0A81               	incf	1,f
  3744                           
  3745                           ;Switch_B1.c: 166: if (Sw->Hold1Time >= 150) {
  3746  00AA  086D               	movf	_Sw,w
  3747  00AB  3E03               	addlw	3
  3748  00AC  0086               	movwf	6
  3749  00AD  0187               	clrf	7
  3750  00AE  3F40               	moviw [0]fsr1
  3751  00AF  00B0               	movwf	??_setSw_Main
  3752  00B0  3F41               	moviw [1]fsr1
  3753  00B1  00B1               	movwf	??_setSw_Main+1
  3754  00B2  3000               	movlw	0
  3755  00B3  0231               	subwf	??_setSw_Main+1,w
  3756  00B4  3096               	movlw	150
  3757  00B5  1903               	skipnz
  3758  00B6  0230               	subwf	??_setSw_Main,w
  3759  00B7  1C03               	skipc
  3760  00B8  0008               	return
  3761                           
  3762                           ;Switch_B1.c: 167: Sw->Hold1Time = 0;
  3763  00B9  086D               	movf	_Sw,w
  3764  00BA  3E03               	addlw	3
  3765  00BB  0086               	movwf	6
  3766  00BC  0187               	clrf	7
  3767  00BD  3000               	movlw	0
  3768  00BE  3FC0               	movwi [0]fsr1
  3769  00BF  3FC1               	movwi [1]fsr1
  3770                           
  3771                           ;Switch_B1.c: 170: Sw->Hold1 = 1;
  3772  00C0  086D               	movf	_Sw,w
  3773  00C1  0086               	movwf	6
  3774  00C2  0187               	clrf	7
  3775  00C3  1581               	bsf	1,3
  3776                           
  3777                           ;Switch_B1.c: 171: setDimmerLights_AdjControl(sw);
  3778  00C4  0832               	movf	setSw_Main@sw,w
  3779  00C5  318D  253A         	fcall	_setDimmerLights_AdjControl
  3780                           
  3781                           ;Switch_B1.c: 174: }
  3782                           ;Switch_B1.c: 175: } else {
  3783  00C7  0008               	return
  3784  00C8                     l3927:	
  3785                           
  3786                           ;Switch_B1.c: 176: if (Sw->Hold2 == 0) {
  3787  00C8  0020               	movlb	0	; select bank0
  3788  00C9  086D               	movf	_Sw,w
  3789  00CA  0086               	movwf	6
  3790  00CB  0187               	clrf	7
  3791  00CC  1A01               	btfsc	1,4
  3792  00CD  28FD               	goto	l3939
  3793                           
  3794                           ;Switch_B1.c: 177: Sw->Hold2Time++;
  3795  00CE  086D               	movf	_Sw,w
  3796  00CF  3E05               	addlw	5
  3797  00D0  0086               	movwf	6
  3798  00D1  0187               	clrf	7
  3799  00D2  3001               	movlw	1
  3800  00D3  0781               	addwf	1,f
  3801  00D4  3141               	addfsr 1,1
  3802  00D5  1803               	skipnc
  3803  00D6  0A81               	incf	1,f
  3804                           
  3805                           ;Switch_B1.c: 178: if (Sw->Hold2Time >= 150) {
  3806  00D7  086D               	movf	_Sw,w
  3807  00D8  3E05               	addlw	5
  3808  00D9  0086               	movwf	6
  3809  00DA  0187               	clrf	7
  3810  00DB  3F40               	moviw [0]fsr1
  3811  00DC  00B0               	movwf	??_setSw_Main
  3812  00DD  3F41               	moviw [1]fsr1
  3813  00DE  00B1               	movwf	??_setSw_Main+1
  3814  00DF  3000               	movlw	0
  3815  00E0  0231               	subwf	??_setSw_Main+1,w
  3816  00E1  3096               	movlw	150
  3817  00E2  1903               	skipnz
  3818  00E3  0230               	subwf	??_setSw_Main,w
  3819  00E4  1C03               	skipc
  3820  00E5  0008               	return
  3821                           
  3822                           ;Switch_B1.c: 179: Sw->Hold2Time = 0;
  3823  00E6  086D               	movf	_Sw,w
  3824  00E7  3E05               	addlw	5
  3825  00E8  0086               	movwf	6
  3826  00E9  0187               	clrf	7
  3827  00EA  3000               	movlw	0
  3828  00EB  3FC0               	movwi [0]fsr1
  3829  00EC  3FC1               	movwi [1]fsr1
  3830                           
  3831                           ;Switch_B1.c: 180: Sw->Hold2 = 1;
  3832  00ED  086D               	movf	_Sw,w
  3833  00EE  0086               	movwf	6
  3834  00EF  0187               	clrf	7
  3835  00F0  1601               	bsf	1,4
  3836                           
  3837                           ;Switch_B1.c: 185: if (myMain.First == 1) {
  3838  00F1  0021               	movlb	1	; select bank1
  3839  00F2  1EA0               	btfss	_myMain^(0+128),5
  3840  00F3  0008               	return
  3841                           
  3842                           ;Switch_B1.c: 186: setBuz(2, 100);
  3843  00F4  3064               	movlw	100
  3844  00F5  0020               	movlb	0	; select bank0
  3845  00F6  00A9               	movwf	setBuz@time
  3846  00F7  3000               	movlw	0
  3847  00F8  00AA               	movwf	setBuz@time+1
  3848  00F9  3002               	movlw	2
  3849  00FA  3187  2710         	fcall	_setBuz
  3850                           
  3851                           ;Switch_B1.c: 187: }
  3852                           ;Switch_B1.c: 189: }
  3853                           ;Switch_B1.c: 190: } else {
  3854  00FC  0008               	return
  3855  00FD                     l3939:	
  3856                           
  3857                           ;Switch_B1.c: 191: if (Sw->Hold3 == 0) {
  3858  00FD  0020               	movlb	0	; select bank0
  3859  00FE  086D               	movf	_Sw,w
  3860  00FF  0086               	movwf	6
  3861  0100  0187               	clrf	7
  3862  0101  1A81               	btfsc	1,5
  3863  0102  0008               	return
  3864                           
  3865                           ;Switch_B1.c: 192: Sw->Hold3Time++;
  3866  0103  086D               	movf	_Sw,w
  3867  0104  3E07               	addlw	7
  3868  0105  0086               	movwf	6
  3869  0106  0187               	clrf	7
  3870  0107  3001               	movlw	1
  3871  0108  0781               	addwf	1,f
  3872  0109  3141               	addfsr 1,1
  3873  010A  1803               	skipnc
  3874  010B  0A81               	incf	1,f
  3875                           
  3876                           ;Switch_B1.c: 193: if (Sw->Hold3Time >= 300) {
  3877  010C  086D               	movf	_Sw,w
  3878  010D  3E07               	addlw	7
  3879  010E  0086               	movwf	6
  3880  010F  0187               	clrf	7
  3881  0110  3F40               	moviw [0]fsr1
  3882  0111  00B0               	movwf	??_setSw_Main
  3883  0112  3F41               	moviw [1]fsr1
  3884  0113  00B1               	movwf	??_setSw_Main+1
  3885  0114  3001               	movlw	1
  3886  0115  0231               	subwf	??_setSw_Main+1,w
  3887  0116  302C               	movlw	44
  3888  0117  1903               	skipnz
  3889  0118  0230               	subwf	??_setSw_Main,w
  3890  0119  1C03               	skipc
  3891  011A  0008               	return
  3892                           
  3893                           ;Switch_B1.c: 194: Sw->Hold3Time = 0;
  3894  011B  086D               	movf	_Sw,w
  3895  011C  3E07               	addlw	7
  3896  011D  0086               	movwf	6
  3897  011E  0187               	clrf	7
  3898  011F  3000               	movlw	0
  3899  0120  3FC0               	movwi [0]fsr1
  3900  0121  3FC1               	movwi [1]fsr1
  3901                           
  3902                           ;Switch_B1.c: 195: Sw->Hold3 = 1;
  3903  0122  086D               	movf	_Sw,w
  3904  0123  0086               	movwf	6
  3905  0124  0187               	clrf	7
  3906  0125  1681               	bsf	1,5
  3907                           
  3908                           ;Switch_B1.c: 201: }
  3909                           ;Switch_B1.c: 202: }
  3910                           ;Switch_B1.c: 203: }
  3911                           ;Switch_B1.c: 204: }
  3912                           ;Switch_B1.c: 205: }
  3913                           ;Switch_B1.c: 206: } else {
  3914  0126  0008               	return
  3915  0127                     l3947:	
  3916                           
  3917                           ;Switch_B1.c: 207: if (Sw->Debounce == 1) {
  3918  0127  086D               	movf	_Sw,w
  3919  0128  0086               	movwf	6
  3920  0129  0187               	clrf	7
  3921  012A  1D01               	btfss	1,2
  3922  012B  0008               	return
  3923                           
  3924                           ;Switch_B1.c: 208: Sw->DebounceTime++;
  3925  012C  3001               	movlw	1
  3926  012D  00B0               	movwf	??_setSw_Main
  3927  012E  086D               	movf	_Sw,w
  3928  012F  3E02               	addlw	2
  3929  0130  0086               	movwf	6
  3930  0131  0187               	clrf	7
  3931  0132  0830               	movf	??_setSw_Main,w
  3932  0133  0781               	addwf	1,f
  3933                           
  3934                           ;Switch_B1.c: 209: if (Sw->DebounceTime >= 5) {
  3935  0134  086D               	movf	_Sw,w
  3936  0135  3E02               	addlw	2
  3937  0136  0086               	movwf	6
  3938  0137  0187               	clrf	7
  3939  0138  3005               	movlw	5
  3940  0139  0201               	subwf	1,w
  3941  013A  1C03               	skipc
  3942  013B  0008               	return
  3943                           
  3944                           ;Switch_B1.c: 210: Sw->DebounceTime = 0;
  3945  013C  086D               	movf	_Sw,w
  3946  013D  3E02               	addlw	2
  3947  013E  0086               	movwf	6
  3948  013F  0187               	clrf	7
  3949  0140  0181               	clrf	1
  3950                           
  3951                           ;Switch_B1.c: 211: Sw->Debounce = 0;
  3952  0141  086D               	movf	_Sw,w
  3953  0142  0086               	movwf	6
  3954  0143  0187               	clrf	7
  3955  0144  1101               	bcf	1,2
  3956                           
  3957                           ;Switch_B1.c: 212: Sw->Hold1Time = 0;
  3958  0145  086D               	movf	_Sw,w
  3959  0146  3E03               	addlw	3
  3960  0147  0086               	movwf	6
  3961  0148  0187               	clrf	7
  3962  0149  3000               	movlw	0
  3963  014A  3FC0               	movwi [0]fsr1
  3964  014B  3FC1               	movwi [1]fsr1
  3965                           
  3966                           ;Switch_B1.c: 213: Sw->Hold1 = 0;
  3967  014C  086D               	movf	_Sw,w
  3968  014D  0086               	movwf	6
  3969  014E  0187               	clrf	7
  3970  014F  1181               	bcf	1,3
  3971                           
  3972                           ;Switch_B1.c: 214: Sw->Hold2Time = 0;
  3973  0150  086D               	movf	_Sw,w
  3974  0151  3E05               	addlw	5
  3975  0152  0086               	movwf	6
  3976  0153  0187               	clrf	7
  3977  0154  3000               	movlw	0
  3978  0155  3FC0               	movwi [0]fsr1
  3979  0156  3FC1               	movwi [1]fsr1
  3980                           
  3981                           ;Switch_B1.c: 215: Sw->Hold2 = 0;
  3982  0157  086D               	movf	_Sw,w
  3983  0158  0086               	movwf	6
  3984  0159  0187               	clrf	7
  3985  015A  1201               	bcf	1,4
  3986                           
  3987                           ;Switch_B1.c: 216: Sw->Hold3Time = 0;
  3988  015B  086D               	movf	_Sw,w
  3989  015C  3E07               	addlw	7
  3990  015D  0086               	movwf	6
  3991  015E  0187               	clrf	7
  3992  015F  3000               	movlw	0
  3993  0160  3FC0               	movwi [0]fsr1
  3994  0161  3FC1               	movwi [1]fsr1
  3995                           
  3996                           ;Switch_B1.c: 217: Sw->Hold3 = 0;
  3997  0162  086D               	movf	_Sw,w
  3998  0163  0086               	movwf	6
  3999  0164  0187               	clrf	7
  4000  0165  1281               	bcf	1,5
  4001                           
  4002                           ;Switch_B1.c: 219: if (SwDetect.Error == 0) {
  4003  0166  186E               	btfsc	_SwDetect,0
  4004  0167  0008               	return
  4005                           
  4006                           ;Switch_B1.c: 220: setDimmerLights_SwOff(sw);
  4007  0168  0832               	movf	setSw_Main@sw,w
  4008  0169  318D  25D2         	fcall	_setDimmerLights_SwOff
  4009                           
  4010                           ;Switch_B1.c: 221: }
  4011                           ;Switch_B1.c: 226: }
  4012                           ;Switch_B1.c: 227: }
  4013                           ;Switch_B1.c: 228: }
  4014                           ;Switch_B1.c: 229: } else {
  4015  016B  0008               	return
  4016  016C                     l1228:	
  4017                           
  4018                           ;Switch_B1.c: 230: if (myMain.PowerON == 1) {
  4019  016C  0021               	movlb	1	; select bank1
  4020  016D  1C20               	btfss	_myMain^(0+128),0
  4021  016E  0008               	return
  4022                           
  4023                           ;Switch_B1.c: 231: Sw->Enable = 1;
  4024  016F  0020               	movlb	0	; select bank0
  4025  0170  086D               	movf	_Sw,w
  4026  0171  0086               	movwf	6
  4027  0172  0187               	clrf	7
  4028  0173  1401               	bsf	1,0
  4029  0174  0008               	return
  4030  0175                     __end_of_setSw_Main:	
  4031                           
  4032                           	psect	text7
  4033  0E3C                     __ptext7:	
  4034 ;; *************** function _setDimmerLights_SwOn *****************
  4035 ;; Defined at:
  4036 ;;		line 517 in file "../src/Dimmer_B1.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  sw              1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  sw              1   15[BANK0 ] unsigned char 
  4041 ;;  idle            1   14[BANK0 ] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;		None               void
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:        3 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    7
  4058 ;; This function calls:
  4059 ;;		_DimmerLightsPointSelect
  4060 ;;		_getAll_DimmerLights_AdjGO
  4061 ;;		_setBuz
  4062 ;;		_setDimmerLights_Trigger
  4063 ;; This function is called by:
  4064 ;;		_setSw_Main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           
  4069                           ;psect for function _setDimmerLights_SwOn
  4070  0E3C                     _setDimmerLights_SwOn:	
  4071                           
  4072                           ;incstack = 0
  4073                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4074                           ;setDimmerLights_SwOn@sw stored from wreg
  4075  0E3C  0020               	movlb	0	; select bank0
  4076  0E3D  00AF               	movwf	setDimmerLights_SwOn@sw
  4077                           
  4078                           ;Dimmer_B1.c: 518: DimmerLightsPointSelect(sw);
  4079  0E3E  082F               	movf	setDimmerLights_SwOn@sw,w
  4080  0E3F  318A  2256  318E   	fcall	_DimmerLightsPointSelect
  4081                           
  4082                           ;Dimmer_B1.c: 519: char idle = 0;
  4083  0E42  0020               	movlb	0	; select bank0
  4084  0E43  01AE               	clrf	setDimmerLights_SwOn@idle
  4085                           
  4086                           ;Dimmer_B1.c: 521: idle = getAll_DimmerLights_AdjGO() == 1 ? 1 : 0;
  4087  0E44  318A  224C  318E   	fcall	_getAll_DimmerLights_AdjGO
  4088  0E47  3A01               	xorlw	1
  4089  0E48  3000               	movlw	0
  4090  0E49  1903               	skipnz
  4091  0E4A  3001               	movlw	1
  4092  0E4B  0020               	movlb	0	; select bank0
  4093  0E4C  00AD               	movwf	??_setDimmerLights_SwOn
  4094  0E4D  082D               	movf	??_setDimmerLights_SwOn,w
  4095  0E4E  00AE               	movwf	setDimmerLights_SwOn@idle
  4096                           
  4097                           ;Dimmer_B1.c: 523: if (idle == 0) {
  4098  0E4F  08AE               	movf	setDimmerLights_SwOn@idle,f
  4099  0E50  1D03               	skipz
  4100  0E51  0008               	return
  4101                           
  4102                           ;Dimmer_B1.c: 524: DimmerLights->SwFlag = 1;
  4103  0E52  086B               	movf	_DimmerLights,w
  4104  0E53  3E09               	addlw	9
  4105  0E54  0086               	movwf	6
  4106  0E55  0187               	clrf	7
  4107  0E56  1701               	bsf	1,6
  4108                           
  4109                           ;Dimmer_B1.c: 525: setBuz(1, 100);
  4110  0E57  3064               	movlw	100
  4111  0E58  00A9               	movwf	setBuz@time
  4112  0E59  3000               	movlw	0
  4113  0E5A  00AA               	movwf	setBuz@time+1
  4114  0E5B  3001               	movlw	1
  4115  0E5C  3187  2710  318E   	fcall	_setBuz
  4116                           
  4117                           ;Dimmer_B1.c: 526: if (DimmerLights->Status == 0) {
  4118  0E5F  0020               	movlb	0	; select bank0
  4119  0E60  086B               	movf	_DimmerLights,w
  4120  0E61  0086               	movwf	6
  4121  0E62  0187               	clrf	7
  4122  0E63  1A81               	btfsc	1,5
  4123  0E64  2E6F               	goto	l3461
  4124                           
  4125                           ;Dimmer_B1.c: 527: DimmerLights->Status = 1;
  4126  0E65  086B               	movf	_DimmerLights,w
  4127  0E66  0086               	movwf	6
  4128  0E67  0187               	clrf	7
  4129  0E68  1681               	bsf	1,5
  4130                           
  4131                           ;Dimmer_B1.c: 528: setDimmerLights_Trigger(sw, 1);
  4132  0E69  01A2               	clrf	setDimmerLights_Trigger@command
  4133  0E6A  0AA2               	incf	setDimmerLights_Trigger@command,f
  4134  0E6B  082F               	movf	setDimmerLights_SwOn@sw,w
  4135  0E6C  318B  23A7         	fcall	_setDimmerLights_Trigger
  4136                           
  4137                           ;Dimmer_B1.c: 529: } else {
  4138  0E6E  0008               	return
  4139  0E6F                     l3461:	
  4140                           
  4141                           ;Dimmer_B1.c: 530: DimmerLights->Status = 0;
  4142  0E6F  0020               	movlb	0	; select bank0
  4143  0E70  086B               	movf	_DimmerLights,w
  4144  0E71  0086               	movwf	6
  4145  0E72  0187               	clrf	7
  4146  0E73  1281               	bcf	1,5
  4147  0E74  0008               	return
  4148  0E75                     __end_of_setDimmerLights_SwOn:	
  4149                           
  4150                           	psect	text8
  4151  0D3A                     __ptext8:	
  4152 ;; *************** function _setDimmerLights_AdjControl *****************
  4153 ;; Defined at:
  4154 ;;		line 558 in file "../src/Dimmer_B1.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  sw              1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  sw              1    8[BANK0 ] unsigned char 
  4159 ;;  idle            1    6[BANK0 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;Total ram usage:        4 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    7
  4176 ;; This function calls:
  4177 ;;		_DimmerLightsPointSelect
  4178 ;;		_getAll_DimmerLights_AdjGO
  4179 ;;		_setDimmerLights_TriggerAdj
  4180 ;; This function is called by:
  4181 ;;		_setSw_Main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _setDimmerLights_AdjControl
  4187  0D3A                     _setDimmerLights_AdjControl:	
  4188                           
  4189                           ;incstack = 0
  4190                           ; Regs used in _setDimmerLights_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4191                           ;setDimmerLights_AdjControl@sw stored from wreg
  4192  0D3A  0020               	movlb	0	; select bank0
  4193  0D3B  00A8               	movwf	setDimmerLights_AdjControl@sw
  4194                           
  4195                           ;Dimmer_B1.c: 559: DimmerLightsPointSelect(sw);
  4196  0D3C  0828               	movf	setDimmerLights_AdjControl@sw,w
  4197  0D3D  318A  2256  318D   	fcall	_DimmerLightsPointSelect
  4198                           
  4199                           ;Dimmer_B1.c: 560: char idle = 0;
  4200  0D40  0020               	movlb	0	; select bank0
  4201  0D41  01A6               	clrf	setDimmerLights_AdjControl@idle
  4202                           
  4203                           ;Dimmer_B1.c: 562: idle = getAll_DimmerLights_AdjGO() == 1 && Dimmer.LoadOK == 1 ? 1 : 0
      +                          ;
  4204  0D42  01A7               	clrf	_setDimmerLights_AdjControl$1573
  4205  0D43  318A  224C  318D   	fcall	_getAll_DimmerLights_AdjGO
  4206  0D46  3A01               	xorlw	1
  4207  0D47  1D03               	skipz
  4208  0D48  2D4F               	goto	l3475
  4209  0D49  0021               	movlb	1	; select bank1
  4210  0D4A  1CBC               	btfss	_Dimmer^(0+128),1
  4211  0D4B  2D4F               	goto	l3475
  4212  0D4C  0020               	movlb	0	; select bank0
  4213  0D4D  01A7               	clrf	_setDimmerLights_AdjControl$1573
  4214  0D4E  0AA7               	incf	_setDimmerLights_AdjControl$1573,f
  4215  0D4F                     l3475:	
  4216  0D4F  0020               	movlb	0	; select bank0
  4217  0D50  0827               	movf	_setDimmerLights_AdjControl$1573,w
  4218  0D51  00A5               	movwf	??_setDimmerLights_AdjControl
  4219  0D52  0825               	movf	??_setDimmerLights_AdjControl,w
  4220  0D53  00A6               	movwf	setDimmerLights_AdjControl@idle
  4221                           
  4222                           ;Dimmer_B1.c: 564: if (idle == 0) {
  4223  0D54  08A6               	movf	setDimmerLights_AdjControl@idle,f
  4224  0D55  1D03               	skipz
  4225  0D56  0008               	return
  4226                           
  4227                           ;Dimmer_B1.c: 565: if (DimmerLights->SwFlag == 1) {
  4228  0D57  086B               	movf	_DimmerLights,w
  4229  0D58  3E09               	addlw	9
  4230  0D59  0086               	movwf	6
  4231  0D5A  0187               	clrf	7
  4232  0D5B  1F01               	btfss	1,6
  4233  0D5C  0008               	return
  4234                           
  4235                           ;Dimmer_B1.c: 566: DimmerLights->SwAdj = 1;
  4236  0D5D  086B               	movf	_DimmerLights,w
  4237  0D5E  3E09               	addlw	9
  4238  0D5F  0086               	movwf	6
  4239  0D60  0187               	clrf	7
  4240  0D61  1781               	bsf	1,7
  4241                           
  4242                           ;Dimmer_B1.c: 567: DimmerLights->Status = 1;
  4243  0D62  086B               	movf	_DimmerLights,w
  4244  0D63  0086               	movwf	6
  4245  0D64  0187               	clrf	7
  4246  0D65  1681               	bsf	1,5
  4247                           
  4248                           ;Dimmer_B1.c: 568: setDimmerLights_TriggerAdj(sw, 1);
  4249  0D66  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4250  0D67  0AA2               	incf	setDimmerLights_TriggerAdj@command,f
  4251  0D68  0828               	movf	setDimmerLights_AdjControl@sw,w
  4252  0D69  318B  23E0         	fcall	_setDimmerLights_TriggerAdj
  4253  0D6B  0008               	return
  4254  0D6C                     __end_of_setDimmerLights_AdjControl:	
  4255                           
  4256                           	psect	text9
  4257  0A4C                     __ptext9:	
  4258 ;; *************** function _getAll_DimmerLights_AdjGO *****************
  4259 ;; Defined at:
  4260 ;;		line 502 in file "../src/Dimmer_B1.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  adjgo           1    0[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;Total ram usage:        1 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    5
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_setDimmerLights_SwOn
  4285 ;;		_setDimmerLights_AdjControl
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _getAll_DimmerLights_AdjGO
  4291  0A4C                     _getAll_DimmerLights_AdjGO:	
  4292                           
  4293                           ;Dimmer_B1.c: 503: char adjgo = 0;
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _getAll_DimmerLights_AdjGO: [wreg+status,2]
  4297  0A4C  0020               	movlb	0	; select bank0
  4298  0A4D  01A0               	clrf	getAll_DimmerLights_AdjGO@adjgo
  4299                           
  4300                           ;Dimmer_B1.c: 511: adjgo = DimmerLights1.AdjGo == 1;
  4301  0A4E  3000               	movlw	0
  4302  0A4F  0021               	movlb	1	; select bank1
  4303  0A50  19CA               	btfsc	(_DimmerLights1^(0+128)+8),3
  4304  0A51  3001               	movlw	1
  4305  0A52  0020               	movlb	0	; select bank0
  4306  0A53  00A0               	movwf	getAll_DimmerLights_AdjGO@adjgo
  4307                           
  4308                           ;Dimmer_B1.c: 513: return adjgo;
  4309  0A54  0820               	movf	getAll_DimmerLights_AdjGO@adjgo,w
  4310  0A55  0008               	return
  4311  0A56                     __end_of_getAll_DimmerLights_AdjGO:	
  4312                           
  4313                           	psect	text10
  4314  0B28                     __ptext10:	
  4315 ;; *************** function _getSw_KeyStatus *****************
  4316 ;; Defined at:
  4317 ;;		line 237 in file "../src/Switch_B1.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  sw              1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  sw              1    0[COMMON] unsigned char 
  4322 ;;  status          1    1[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      unsigned char 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;Total ram usage:        3 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    5
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_setSw_Main
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           
  4347                           ;psect for function _getSw_KeyStatus
  4348  0B28                     _getSw_KeyStatus:	
  4349                           
  4350                           ;Switch_B1.c: 238: char status = 0;
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  4354  0B28  0020               	movlb	0	; select bank0
  4355  0B29  01A1               	clrf	getSw_KeyStatus@status
  4356                           
  4357                           ;Switch_B1.c: 258: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  4358  0B2A  01A2               	clrf	_getSw_KeyStatus$4285
  4359  0B2B  0AA2               	incf	_getSw_KeyStatus$4285,f
  4360  0B2C  1F0C               	btfss	12,6	;volatile
  4361  0B2D  1A0C               	btfsc	12,4	;volatile
  4362  0B2E  2B33               	goto	l3635
  4363  0B2F  1C0C               	btfss	12,0	;volatile
  4364  0B30  1B8C               	btfsc	12,7	;volatile
  4365  0B31  2B33               	goto	l3635
  4366  0B32  01A2               	clrf	_getSw_KeyStatus$4285
  4367  0B33                     l3635:	
  4368  0B33  0822               	movf	_getSw_KeyStatus$4285,w
  4369  0B34  00A0               	movwf	??_getSw_KeyStatus
  4370  0B35  0820               	movf	??_getSw_KeyStatus,w
  4371  0B36  00A1               	movwf	getSw_KeyStatus@status
  4372                           
  4373                           ;Switch_B1.c: 261: return status;
  4374  0B37  0821               	movf	getSw_KeyStatus@status,w
  4375  0B38  0008               	return
  4376  0B39                     __end_of_getSw_KeyStatus:	
  4377                           
  4378                           	psect	text11
  4379  0A77                     __ptext11:	
  4380 ;; *************** function _SwPointSelect *****************
  4381 ;; Defined at:
  4382 ;;		line 25 in file "../src/Switch_B1.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  sw              1    wreg     unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  sw              1    1[BANK0 ] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;		None               void
  4389 ;; Registers used:
  4390 ;;		wreg
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_setSw_Main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           
  4411                           ;psect for function _SwPointSelect
  4412  0A77                     _SwPointSelect:	
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _SwPointSelect: [wreg]
  4416                           ;SwPointSelect@sw stored from wreg
  4417  0A77  0020               	movlb	0	; select bank0
  4418  0A78  00A1               	movwf	SwPointSelect@sw
  4419                           
  4420                           ;Switch_B1.c: 28: if (sw == 1) {
  4421  0A79  0821               	movf	SwPointSelect@sw,w
  4422  0A7A  3A01               	xorlw	1
  4423  0A7B  1D03               	skipz
  4424  0A7C  0008               	return
  4425                           
  4426                           ;Switch_B1.c: 29: Sw = &Sw1;
  4427  0A7D  30D1               	movlw	_Sw1& (0+255)
  4428  0A7E  00A0               	movwf	??_SwPointSelect
  4429  0A7F  0820               	movf	??_SwPointSelect,w
  4430  0A80  00ED               	movwf	_Sw
  4431  0A81  0008               	return
  4432  0A82                     __end_of_SwPointSelect:	
  4433                           
  4434                           	psect	text12
  4435  06B4                     __ptext12:	
  4436 ;; *************** function _setMain_Exception *****************
  4437 ;; Defined at:
  4438 ;;		line 278 in file "../src/Main_B1.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  command         1    wreg     unsigned char 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  command         1   19[BANK0 ] unsigned char 
  4443 ;;  status          1   18[BANK0 ] unsigned char 
  4444 ;;  buz             1   15[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;Total ram usage:        7 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    9
  4461 ;; This function calls:
  4462 ;;		_getDimmerLights_Line
  4463 ;;		_getMain_LightsStatus
  4464 ;;		_setBuz
  4465 ;;		_setDimmerLights_ErrorClose
  4466 ;;		_setLED
  4467 ;; This function is called by:
  4468 ;;		_Switch_Main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function _setMain_Exception
  4474  06B4                     _setMain_Exception:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _setMain_Exception: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4478                           ;setMain_Exception@command stored from wreg
  4479  06B4  0020               	movlb	0	; select bank0
  4480  06B5  00B3               	movwf	setMain_Exception@command
  4481                           
  4482                           ;Main_B1.c: 279: char status = 0, buz = 0;
  4483  06B6  01B2               	clrf	setMain_Exception@status
  4484  06B7  01AF               	clrf	setMain_Exception@buz
  4485                           
  4486                           ;Main_B1.c: 296: status = command == 3 ? getDimmerLights_Line() : 255;
  4487  06B8  0833               	movf	setMain_Exception@command,w
  4488  06B9  3A03               	xorlw	3
  4489  06BA  1903               	skipnz
  4490  06BB  2EC0               	goto	l3841
  4491  06BC  30FF               	movlw	255
  4492  06BD  00B0               	movwf	_setMain_Exception$2533
  4493  06BE  3000               	movlw	0
  4494  06BF  2EC9               	goto	L2
  4495  06C0                     l3841:	
  4496  06C0  318A  226C  3186   	fcall	_getDimmerLights_Line
  4497  06C3  0020               	movlb	0	; select bank0
  4498  06C4  00AD               	movwf	??_setMain_Exception
  4499  06C5  01AE               	clrf	??_setMain_Exception+1
  4500  06C6  082D               	movf	??_setMain_Exception,w
  4501  06C7  00B0               	movwf	_setMain_Exception$2533
  4502  06C8  082E               	movf	??_setMain_Exception+1,w
  4503  06C9                     L2:	
  4504  06C9  00B1               	movwf	_setMain_Exception$2533+1
  4505  06CA  0830               	movf	_setMain_Exception$2533,w
  4506  06CB  00AD               	movwf	??_setMain_Exception
  4507  06CC  082D               	movf	??_setMain_Exception,w
  4508  06CD  00B2               	movwf	setMain_Exception@status
  4509                           
  4510                           ;Main_B1.c: 298: if (command == 0) {
  4511  06CE  08B3               	movf	setMain_Exception@command,f
  4512  06CF  1D03               	skipz
  4513  06D0  2ED3               	goto	l3849
  4514                           
  4515                           ;Main_B1.c: 299: setLED(99, 10);
  4516  06D1  300A               	movlw	10
  4517  06D2  2ED5               	goto	L3
  4518  06D3                     l3849:	
  4519                           ;Main_B1.c: 300: } else {
  4520                           
  4521                           
  4522                           ;Main_B1.c: 301: setLED(99, 11);
  4523  06D3  300B               	movlw	11
  4524  06D4  0020               	movlb	0	; select bank0
  4525  06D5                     L3:	
  4526  06D5  00AD               	movwf	??_setMain_Exception
  4527  06D6  082D               	movf	??_setMain_Exception,w
  4528  06D7  00A2               	movwf	setLED@command
  4529  06D8  3063               	movlw	99
  4530  06D9  318D  256C  3186   	fcall	_setLED
  4531                           
  4532                           ;Main_B1.c: 302: }
  4533                           ;Main_B1.c: 304: if (command != 0) {
  4534  06DC  0020               	movlb	0	; select bank0
  4535  06DD  0833               	movf	setMain_Exception@command,w
  4536  06DE  1903               	btfsc	3,2
  4537  06DF  0008               	return
  4538                           
  4539                           ;Main_B1.c: 305: switch (command) {
  4540  06E0  2F01               	goto	l3865
  4541  06E1                     l3855:	
  4542                           ;Main_B1.c: 306: case 2:
  4543                           
  4544                           
  4545                           ;Main_B1.c: 307: if (getMain_LightsStatus() == 1) {
  4546  06E1  318C  2487  3186   	fcall	_getMain_LightsStatus
  4547  06E4  3A01               	xorlw	1
  4548  06E5  1D03               	skipz
  4549  06E6  2F0A               	goto	l3867
  4550                           
  4551                           ;Main_B1.c: 308: setBuz(10, 300);
  4552  06E7  302C               	movlw	44
  4553  06E8  0020               	movlb	0	; select bank0
  4554  06E9  00A9               	movwf	setBuz@time
  4555  06EA  3001               	movlw	1
  4556  06EB  00AA               	movwf	setBuz@time+1
  4557  06EC  300A               	movlw	10
  4558  06ED  3187  2710  3186   	fcall	_setBuz
  4559                           
  4560                           ;Main_B1.c: 309: }
  4561                           ;Main_B1.c: 310: break;
  4562  06F0  2F0A               	goto	l3867
  4563  06F1                     l3859:	
  4564                           ;Main_B1.c: 311: case 3:
  4565                           
  4566                           
  4567                           ;Main_B1.c: 312: if (getMain_LightsStatus() == 1) {
  4568  06F1  318C  2487  3186   	fcall	_getMain_LightsStatus
  4569  06F4  3A01               	xorlw	1
  4570  06F5  1D03               	skipz
  4571  06F6  2F0A               	goto	l3867
  4572                           
  4573                           ;Main_B1.c: 313: setBuz(5, 300);
  4574  06F7  302C               	movlw	44
  4575  06F8  0020               	movlb	0	; select bank0
  4576  06F9  00A9               	movwf	setBuz@time
  4577  06FA  3001               	movlw	1
  4578  06FB  00AA               	movwf	setBuz@time+1
  4579  06FC  3005               	movlw	5
  4580  06FD  3187  2710  3186   	fcall	_setBuz
  4581                           
  4582                           ;Main_B1.c: 316: }
  4583                           
  4584                           ;Main_B1.c: 314: }
  4585                           ;Main_B1.c: 315: break;
  4586  0700  2F0A               	goto	l3867
  4587  0701                     l3865:	
  4588  0701  0020               	movlb	0	; select bank0
  4589  0702  0833               	movf	setMain_Exception@command,w
  4590                           
  4591                           ; Switch size 1, requested type "space"
  4592                           ; Number of cases is 2, Range of values is 2 to 3
  4593                           ; switch strategies available:
  4594                           ; Name         Instructions Cycles
  4595                           ; simple_byte            7     4 (average)
  4596                           ; direct_byte           13     9 (fixed)
  4597                           ; jumptable            263     9 (fixed)
  4598                           ;	Chosen strategy is simple_byte
  4599  0703  3A02               	xorlw	2	; case 2
  4600  0704  1903               	skipnz
  4601  0705  2EE1               	goto	l3855
  4602  0706  3A01               	xorlw	1	; case 3
  4603  0707  1903               	skipnz
  4604  0708  2EF1               	goto	l3859
  4605  0709  2F0A               	goto	l3867
  4606  070A                     l3867:	
  4607                           
  4608                           ;Main_B1.c: 317: setDimmerLights_ErrorClose(status);
  4609  070A  0020               	movlb	0	; select bank0
  4610  070B  0832               	movf	setMain_Exception@status,w
  4611  070C  3187  2769         	fcall	_setDimmerLights_ErrorClose
  4612  070E  0020               	movlb	0	; select bank0
  4613  070F  0008               	return
  4614  0710                     __end_of_setMain_Exception:	
  4615                           
  4616                           	psect	text13
  4617  0769                     __ptext13:	
  4618 ;; *************** function _setDimmerLights_ErrorClose *****************
  4619 ;; Defined at:
  4620 ;;		line 574 in file "../src/Dimmer_B1.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  lights          1    wreg     unsigned char 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  lights          1    9[BANK0 ] unsigned char 
  4625 ;;  i               2   10[BANK0 ] int 
  4626 ;;  count           1    8[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;		None               void
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;Total ram usage:        5 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    8
  4643 ;; This function calls:
  4644 ;;		_DimmerLightsPointSelect
  4645 ;;		_getDimmerLights_Status
  4646 ;;		_setDimmerLights_SwOff
  4647 ;; This function is called by:
  4648 ;;		_setMain_Exception
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _setDimmerLights_ErrorClose
  4654  0769                     _setDimmerLights_ErrorClose:	
  4655                           
  4656                           ;incstack = 0
  4657                           ; Regs used in _setDimmerLights_ErrorClose: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4658                           ;setDimmerLights_ErrorClose@lights stored from wreg
  4659  0769  0020               	movlb	0	; select bank0
  4660  076A  00A9               	movwf	setDimmerLights_ErrorClose@lights
  4661                           
  4662                           ;Dimmer_B1.c: 575: if (lights == 255) {
  4663  076B  0829               	movf	setDimmerLights_ErrorClose@lights,w
  4664  076C  3AFF               	xorlw	255
  4665  076D  1D03               	skipz
  4666  076E  2FA2               	goto	l3503
  4667                           
  4668                           ;Dimmer_B1.c: 577: char count = 1;
  4669  076F  01A8               	clrf	setDimmerLights_ErrorClose@count
  4670  0770  0AA8               	incf	setDimmerLights_ErrorClose@count,f
  4671                           
  4672                           ;Dimmer_B1.c: 585: for (int i = 0; i < count; i++) {
  4673  0771  01AA               	clrf	setDimmerLights_ErrorClose@i
  4674  0772  01AB               	clrf	setDimmerLights_ErrorClose@i+1
  4675  0773                     l3501:	
  4676  0773  082B               	movf	setDimmerLights_ErrorClose@i+1,w
  4677  0774  3A80               	xorlw	128
  4678  0775  00A7               	movwf	??_setDimmerLights_ErrorClose
  4679  0776  3080               	movlw	128
  4680  0777  0227               	subwf	??_setDimmerLights_ErrorClose,w
  4681  0778  1D03               	skipz
  4682  0779  2F7C               	goto	u3015
  4683  077A  0828               	movf	setDimmerLights_ErrorClose@count,w
  4684  077B  022A               	subwf	setDimmerLights_ErrorClose@i,w
  4685  077C                     u3015:	
  4686  077C  1803               	btfsc	3,0
  4687  077D  0008               	return
  4688                           
  4689                           ;Dimmer_B1.c: 586: DimmerLightsPointSelect(i + 1);
  4690  077E  0020               	movlb	0	; select bank0
  4691  077F  082A               	movf	setDimmerLights_ErrorClose@i,w
  4692  0780  3E01               	addlw	1
  4693  0781  318A  2256  3187   	fcall	_DimmerLightsPointSelect
  4694                           
  4695                           ;Dimmer_B1.c: 587: if (getDimmerLights_Status(i + 1) == 1) {
  4696  0784  0020               	movlb	0	; select bank0
  4697  0785  082A               	movf	setDimmerLights_ErrorClose@i,w
  4698  0786  3E01               	addlw	1
  4699  0787  318A  22DA  3187   	fcall	_getDimmerLights_Status
  4700  078A  3A01               	xorlw	1
  4701  078B  1D03               	skipz
  4702  078C  2F9C               	goto	l3499
  4703                           
  4704                           ;Dimmer_B1.c: 588: DimmerLights->SwFlag = 1;
  4705  078D  0020               	movlb	0	; select bank0
  4706  078E  086B               	movf	_DimmerLights,w
  4707  078F  3E09               	addlw	9
  4708  0790  0086               	movwf	6
  4709  0791  0187               	clrf	7
  4710  0792  1701               	bsf	1,6
  4711                           
  4712                           ;Dimmer_B1.c: 589: DimmerLights->Status = 0;
  4713  0793  086B               	movf	_DimmerLights,w
  4714  0794  0086               	movwf	6
  4715  0795  0187               	clrf	7
  4716  0796  1281               	bcf	1,5
  4717                           
  4718                           ;Dimmer_B1.c: 590: setDimmerLights_SwOff(i + 1);
  4719  0797  082A               	movf	setDimmerLights_ErrorClose@i,w
  4720  0798  3E01               	addlw	1
  4721  0799  318D  25D2  3187   	fcall	_setDimmerLights_SwOff
  4722  079C                     l3499:	
  4723  079C  3001               	movlw	1
  4724  079D  0020               	movlb	0	; select bank0
  4725  079E  07AA               	addwf	setDimmerLights_ErrorClose@i,f
  4726  079F  3000               	movlw	0
  4727  07A0  3DAB               	addwfc	setDimmerLights_ErrorClose@i+1,f
  4728  07A1  2F73               	goto	l3501
  4729  07A2                     l3503:	
  4730                           ;Dimmer_B1.c: 591: }
  4731                           ;Dimmer_B1.c: 592: }
  4732                           ;Dimmer_B1.c: 593: } else {
  4733                           
  4734                           
  4735                           ;Dimmer_B1.c: 594: DimmerLightsPointSelect(lights);
  4736  07A2  0020               	movlb	0	; select bank0
  4737  07A3  0829               	movf	setDimmerLights_ErrorClose@lights,w
  4738  07A4  318A  2256  3187   	fcall	_DimmerLightsPointSelect
  4739                           
  4740                           ;Dimmer_B1.c: 595: if (getDimmerLights_Status(lights) == 1) {
  4741  07A7  0020               	movlb	0	; select bank0
  4742  07A8  0829               	movf	setDimmerLights_ErrorClose@lights,w
  4743  07A9  318A  22DA  3187   	fcall	_getDimmerLights_Status
  4744  07AC  3A01               	xorlw	1
  4745  07AD  1D03               	skipz
  4746  07AE  0008               	return
  4747                           
  4748                           ;Dimmer_B1.c: 596: DimmerLights->SwFlag = 1;
  4749  07AF  0020               	movlb	0	; select bank0
  4750  07B0  086B               	movf	_DimmerLights,w
  4751  07B1  3E09               	addlw	9
  4752  07B2  0086               	movwf	6
  4753  07B3  0187               	clrf	7
  4754  07B4  1701               	bsf	1,6
  4755                           
  4756                           ;Dimmer_B1.c: 597: DimmerLights->Status = 0;
  4757  07B5  086B               	movf	_DimmerLights,w
  4758  07B6  0086               	movwf	6
  4759  07B7  0187               	clrf	7
  4760  07B8  1281               	bcf	1,5
  4761                           
  4762                           ;Dimmer_B1.c: 598: setDimmerLights_SwOff(lights);
  4763  07B9  0829               	movf	setDimmerLights_ErrorClose@lights,w
  4764  07BA  318D  25D2         	fcall	_setDimmerLights_SwOff
  4765  07BC  0008               	return
  4766  07BD                     __end_of_setDimmerLights_ErrorClose:	
  4767                           
  4768                           	psect	text14
  4769  0DD2                     __ptext14:	
  4770 ;; *************** function _setDimmerLights_SwOff *****************
  4771 ;; Defined at:
  4772 ;;		line 536 in file "../src/Dimmer_B1.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  sw              1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  sw              1    6[BANK0 ] unsigned char 
  4777 ;;  command         1    5[BANK0 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;		None               void
  4780 ;; Registers used:
  4781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    7
  4794 ;; This function calls:
  4795 ;;		_DimmerLightsPointSelect
  4796 ;;		_setDimmerLights_Trigger
  4797 ;;		_setDimmerLights_TriggerAdj
  4798 ;; This function is called by:
  4799 ;;		_setDimmerLights_ErrorClose
  4800 ;;		_setSw_Main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _setDimmerLights_SwOff
  4806  0DD2                     _setDimmerLights_SwOff:	
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4810                           ;setDimmerLights_SwOff@sw stored from wreg
  4811  0DD2  0020               	movlb	0	; select bank0
  4812  0DD3  00A6               	movwf	setDimmerLights_SwOff@sw
  4813                           
  4814                           ;Dimmer_B1.c: 537: DimmerLightsPointSelect(sw);
  4815  0DD4  0826               	movf	setDimmerLights_SwOff@sw,w
  4816  0DD5  318A  2256  318D   	fcall	_DimmerLightsPointSelect
  4817                           
  4818                           ;Dimmer_B1.c: 538: char command = DimmerLights->Status == 1 ? 1 : 0;
  4819  0DD8  0020               	movlb	0	; select bank0
  4820  0DD9  086B               	movf	_DimmerLights,w
  4821  0DDA  0086               	movwf	6
  4822  0DDB  0187               	clrf	7
  4823  0DDC  3000               	movlw	0
  4824  0DDD  1A81               	btfsc	1,5
  4825  0DDE  3001               	movlw	1
  4826  0DDF  00A5               	movwf	setDimmerLights_SwOff@command
  4827                           
  4828                           ;Dimmer_B1.c: 539: if (DimmerLights->SwFlag == 1) {
  4829  0DE0  086B               	movf	_DimmerLights,w
  4830  0DE1  3E09               	addlw	9
  4831  0DE2  0086               	movwf	6
  4832  0DE3  0187               	clrf	7
  4833  0DE4  1F01               	btfss	1,6
  4834  0DE5  0008               	return
  4835                           
  4836                           ;Dimmer_B1.c: 540: DimmerLights->SwFlag = 0;
  4837  0DE6  086B               	movf	_DimmerLights,w
  4838  0DE7  3E09               	addlw	9
  4839  0DE8  0086               	movwf	6
  4840  0DE9  0187               	clrf	7
  4841  0DEA  1301               	bcf	1,6
  4842                           
  4843                           ;Dimmer_B1.c: 541: if (DimmerLights->Status == 1) {
  4844  0DEB  086B               	movf	_DimmerLights,w
  4845  0DEC  0086               	movwf	6
  4846  0DED  0187               	clrf	7
  4847  0DEE  1E81               	btfss	1,5
  4848  0DEF  2E00               	goto	l3333
  4849                           
  4850                           ;Dimmer_B1.c: 542: if (DimmerLights->SwAdj == 1) {
  4851  0DF0  086B               	movf	_DimmerLights,w
  4852  0DF1  3E09               	addlw	9
  4853  0DF2  0086               	movwf	6
  4854  0DF3  0187               	clrf	7
  4855  0DF4  1F81               	btfss	1,7
  4856  0DF5  0008               	return
  4857                           
  4858                           ;Dimmer_B1.c: 543: DimmerLights->SwAdj = 0;
  4859  0DF6  086B               	movf	_DimmerLights,w
  4860  0DF7  3E09               	addlw	9
  4861  0DF8  0086               	movwf	6
  4862  0DF9  0187               	clrf	7
  4863  0DFA  1381               	bcf	1,7
  4864                           
  4865                           ;Dimmer_B1.c: 544: setDimmerLights_TriggerAdj(sw, 0);
  4866  0DFB  01A2               	clrf	setDimmerLights_TriggerAdj@command
  4867  0DFC  0826               	movf	setDimmerLights_SwOff@sw,w
  4868  0DFD  318B  23E0         	fcall	_setDimmerLights_TriggerAdj
  4869                           
  4870                           ;Dimmer_B1.c: 545: }
  4871                           ;Dimmer_B1.c: 546: } else {
  4872  0DFF  0008               	return
  4873  0E00                     l3333:	
  4874                           
  4875                           ;Dimmer_B1.c: 547: setDimmerLights_Trigger(sw, 0);
  4876  0E00  0020               	movlb	0	; select bank0
  4877  0E01  01A2               	clrf	setDimmerLights_Trigger@command
  4878  0E02  0826               	movf	setDimmerLights_SwOff@sw,w
  4879  0E03  318B  23A7         	fcall	_setDimmerLights_Trigger
  4880  0E05  0008               	return
  4881  0E06                     __end_of_setDimmerLights_SwOff:	
  4882                           
  4883                           	psect	text15
  4884  0BE0                     __ptext15:	
  4885 ;; *************** function _setDimmerLights_TriggerAdj *****************
  4886 ;; Defined at:
  4887 ;;		line 785 in file "../src/Dimmer_B1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  lights          1    wreg     unsigned char 
  4890 ;;  command         1    2[BANK0 ] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  lights          1    4[BANK0 ] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;		None               void
  4895 ;; Registers used:
  4896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4902 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;Total ram usage:        3 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    6
  4909 ;; This function calls:
  4910 ;;		_DimmerLightsPointSelect
  4911 ;; This function is called by:
  4912 ;;		_setDimmerLights_SwOff
  4913 ;;		_setDimmerLights_AdjControl
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function _setDimmerLights_TriggerAdj
  4919  0BE0                     _setDimmerLights_TriggerAdj:	
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4923                           ;setDimmerLights_TriggerAdj@lights stored from wreg
  4924  0BE0  0020               	movlb	0	; select bank0
  4925  0BE1  00A4               	movwf	setDimmerLights_TriggerAdj@lights
  4926                           
  4927                           ;Dimmer_B1.c: 786: DimmerLightsPointSelect(lights);
  4928  0BE2  0824               	movf	setDimmerLights_TriggerAdj@lights,w
  4929  0BE3  318A  2256         	fcall	_DimmerLightsPointSelect
  4930                           
  4931                           ;Dimmer_B1.c: 787: DimmerLights->TriggerAdj = 1;
  4932  0BE5  0020               	movlb	0	; select bank0
  4933  0BE6  086B               	movf	_DimmerLights,w
  4934  0BE7  3E08               	addlw	8
  4935  0BE8  0086               	movwf	6
  4936  0BE9  0187               	clrf	7
  4937  0BEA  1601               	bsf	1,4
  4938                           
  4939                           ;Dimmer_B1.c: 788: DimmerLights->AdjGo = command == 1 ? 1 : 0;
  4940  0BEB  0822               	movf	setDimmerLights_TriggerAdj@command,w
  4941  0BEC  3A01               	xorlw	1
  4942  0BED  3000               	movlw	0
  4943  0BEE  1903               	skipnz
  4944  0BEF  3001               	movlw	1
  4945  0BF0  00A3               	movwf	??_setDimmerLights_TriggerAdj
  4946  0BF1  086B               	movf	_DimmerLights,w
  4947  0BF2  3E08               	addlw	8
  4948  0BF3  0086               	movwf	6
  4949  0BF4  0187               	clrf	7
  4950  0BF5  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4951  0BF6  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4952  0BF7  0DA3               	rlf	??_setDimmerLights_TriggerAdj,f
  4953  0BF8  0801               	movf	1,w
  4954  0BF9  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  4955  0BFA  39F7               	andlw	-9
  4956  0BFB  0623               	xorwf	??_setDimmerLights_TriggerAdj,w
  4957  0BFC  0081               	movwf	1
  4958  0BFD  0008               	return
  4959  0BFE                     __end_of_setDimmerLights_TriggerAdj:	
  4960                           
  4961                           	psect	text16
  4962  0BA7                     __ptext16:	
  4963 ;; *************** function _setDimmerLights_Trigger *****************
  4964 ;; Defined at:
  4965 ;;		line 779 in file "../src/Dimmer_B1.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  lights          1    wreg     unsigned char 
  4968 ;;  command         1    2[BANK0 ] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  lights          1    4[BANK0 ] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;		None               void
  4973 ;; Registers used:
  4974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4980 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;Total ram usage:        3 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    6
  4987 ;; This function calls:
  4988 ;;		_DimmerLightsPointSelect
  4989 ;; This function is called by:
  4990 ;;		_setDimmerLights_SwOn
  4991 ;;		_setDimmerLights_SwOff
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _setDimmerLights_Trigger
  4997  0BA7                     _setDimmerLights_Trigger:	
  4998                           
  4999                           ;incstack = 0
  5000                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5001                           ;setDimmerLights_Trigger@lights stored from wreg
  5002  0BA7  0020               	movlb	0	; select bank0
  5003  0BA8  00A4               	movwf	setDimmerLights_Trigger@lights
  5004                           
  5005                           ;Dimmer_B1.c: 780: DimmerLightsPointSelect(lights);
  5006  0BA9  0824               	movf	setDimmerLights_Trigger@lights,w
  5007  0BAA  318A  2256         	fcall	_DimmerLightsPointSelect
  5008                           
  5009                           ;Dimmer_B1.c: 781: DimmerLights->Trigger = 1;
  5010  0BAC  0020               	movlb	0	; select bank0
  5011  0BAD  086B               	movf	_DimmerLights,w
  5012  0BAE  3E08               	addlw	8
  5013  0BAF  0086               	movwf	6
  5014  0BB0  0187               	clrf	7
  5015  0BB1  1501               	bsf	1,2
  5016                           
  5017                           ;Dimmer_B1.c: 782: DimmerLights->Switch = command == 1 ? 1 : 0;
  5018  0BB2  0822               	movf	setDimmerLights_Trigger@command,w
  5019  0BB3  3A01               	xorlw	1
  5020  0BB4  3000               	movlw	0
  5021  0BB5  1903               	skipnz
  5022  0BB6  3001               	movlw	1
  5023  0BB7  00A3               	movwf	??_setDimmerLights_Trigger
  5024  0BB8  086B               	movf	_DimmerLights,w
  5025  0BB9  3E08               	addlw	8
  5026  0BBA  0086               	movwf	6
  5027  0BBB  0187               	clrf	7
  5028  0BBC  0DA3               	rlf	??_setDimmerLights_Trigger,f
  5029  0BBD  0801               	movf	1,w
  5030  0BBE  0623               	xorwf	??_setDimmerLights_Trigger,w
  5031  0BBF  39FD               	andlw	-3
  5032  0BC0  0623               	xorwf	??_setDimmerLights_Trigger,w
  5033  0BC1  0081               	movwf	1
  5034  0BC2  0008               	return
  5035  0BC3                     __end_of_setDimmerLights_Trigger:	
  5036                           
  5037                           	psect	text17
  5038  0A6C                     __ptext17:	
  5039 ;; *************** function _getDimmerLights_Line *****************
  5040 ;; Defined at:
  5041 ;;		line 707 in file "../src/Dimmer_B1.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  line            1    0[BANK0 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      unsigned char 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:        1 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    5
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_setMain_Exception
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _getDimmerLights_Line
  5071  0A6C                     _getDimmerLights_Line:	
  5072                           
  5073                           ;Dimmer_B1.c: 708: char line = 0;
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  5077  0A6C  0020               	movlb	0	; select bank0
  5078  0A6D  01A0               	clrf	getDimmerLights_Line@line
  5079                           
  5080                           ;Dimmer_B1.c: 710: if (DimmerLights1.Line == 1) {
  5081  0A6E  0021               	movlb	1	; select bank1
  5082  0A6F  1C4B               	btfss	(_DimmerLights1^(0+128)+9),0
  5083  0A70  2A74               	goto	l3517
  5084                           
  5085                           ;Dimmer_B1.c: 711: line = 1;
  5086  0A71  0020               	movlb	0	; select bank0
  5087  0A72  01A0               	clrf	getDimmerLights_Line@line
  5088  0A73  0AA0               	incf	getDimmerLights_Line@line,f
  5089  0A74                     l3517:	
  5090                           
  5091                           ;Dimmer_B1.c: 712: }
  5092                           ;Dimmer_B1.c: 724: return line;
  5093  0A74  0020               	movlb	0	; select bank0
  5094  0A75  0820               	movf	getDimmerLights_Line@line,w
  5095  0A76  0008               	return
  5096  0A77                     __end_of_getDimmerLights_Line:	
  5097                           
  5098                           	psect	text18
  5099  09F7                     __ptext18:	
  5100 ;; *************** function _getMain_All_Error_Status *****************
  5101 ;; Defined at:
  5102 ;;		line 365 in file "../src/Main_B1.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  command         1    wreg     unsigned char 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  command         1    0[COMMON] unsigned char 
  5107 ;;  status          1    0[BANK0 ] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      unsigned char 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        1 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    5
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_Switch_Main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _getMain_All_Error_Status
  5133  09F7                     _getMain_All_Error_Status:	
  5134                           
  5135                           ;Main_B1.c: 366: char status = 0;
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  5139  09F7  0020               	movlb	0	; select bank0
  5140  09F8  01A0               	clrf	getMain_All_Error_Status@status
  5141                           
  5142                           ;Main_B1.c: 402: return status;
  5143  09F9  0820               	movf	getMain_All_Error_Status@status,w
  5144  09FA  0008               	return
  5145  09FB                     __end_of_getMain_All_Error_Status:	
  5146                           
  5147                           	psect	text19
  5148  0A25                     __ptext19:	
  5149 ;; *************** function _Switch_Initialization *****************
  5150 ;; Defined at:
  5151 ;;		line 46 in file "../src/Switch_B1.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    8
  5172 ;; This function calls:
  5173 ;;		_TouchPower
  5174 ;;		_setSw_Initialization
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _Switch_Initialization
  5182  0A25                     _Switch_Initialization:	
  5183                           
  5184                           ;Switch_B1.c: 47: TouchPower();
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5188  0A25  318B  2360  318A   	fcall	_TouchPower
  5189                           
  5190                           ;Switch_B1.c: 49: WPUB1 = 0;
  5191  0A28  0024               	movlb	4	; select bank4
  5192  0A29  108D               	bcf	13,1	;volatile
  5193                           
  5194                           ;Switch_B1.c: 58: setSw_Initialization(1);
  5195  0A2A  3001               	movlw	1
  5196  0A2B  318B  2308         	fcall	_setSw_Initialization
  5197  0A2D  0008               	return
  5198  0A2E                     __end_of_Switch_Initialization:	
  5199                           
  5200                           	psect	text20
  5201  0B08                     __ptext20:	
  5202 ;; *************** function _setSw_Initialization *****************
  5203 ;; Defined at:
  5204 ;;		line 109 in file "../src/Switch_B1.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  sw              1    wreg     unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  sw              1    4[BANK0 ] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;		None               void
  5211 ;; Registers used:
  5212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        1 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    7
  5225 ;; This function calls:
  5226 ;;		_setLED
  5227 ;; This function is called by:
  5228 ;;		_Switch_Initialization
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _setSw_Initialization
  5234  0B08                     _setSw_Initialization:	
  5235                           
  5236                           ;incstack = 0
  5237                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5238                           ;setSw_Initialization@sw stored from wreg
  5239  0B08  0020               	movlb	0	; select bank0
  5240  0B09  00A4               	movwf	setSw_Initialization@sw
  5241                           
  5242                           ;Switch_B1.c: 110: setLED(sw, 1);
  5243  0B0A  01A2               	clrf	setLED@command
  5244  0B0B  0AA2               	incf	setLED@command,f
  5245  0B0C  0824               	movf	setSw_Initialization@sw,w
  5246  0B0D  318D  256C  318B   	fcall	_setLED
  5247                           
  5248                           ;Switch_B1.c: 112: setLED(sw + 1, 1);
  5249  0B10  0020               	movlb	0	; select bank0
  5250  0B11  01A2               	clrf	setLED@command
  5251  0B12  0AA2               	incf	setLED@command,f
  5252  0B13  0824               	movf	setSw_Initialization@sw,w
  5253  0B14  3E01               	addlw	1
  5254  0B15  318D  256C         	fcall	_setLED
  5255  0B17  0008               	return
  5256  0B18                     __end_of_setSw_Initialization:	
  5257                           
  5258                           	psect	text21
  5259  0B60                     __ptext21:	
  5260 ;; *************** function _TouchPower *****************
  5261 ;; Defined at:
  5262 ;;		line 10 in file "../src/Switch_B1.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    6
  5283 ;; This function calls:
  5284 ;;		_Timeout_Counter
  5285 ;;		_set_TimeoutCleared
  5286 ;; This function is called by:
  5287 ;;		_Switch_Initialization
  5288 ;;		_Switch_Main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           
  5293                           ;psect for function _TouchPower
  5294  0B60                     _TouchPower:	
  5295                           
  5296                           ;Switch_B1.c: 11: if (RB0 == 0) {
  5297                           
  5298                           ;incstack = 0
  5299                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5300  0B60  0020               	movlb	0	; select bank0
  5301  0B61  180D               	btfsc	13,0	;volatile
  5302  0B62  0008               	return
  5303                           
  5304                           ;Switch_B1.c: 12: if (myMain.PowerON == 1) {
  5305  0B63  0021               	movlb	1	; select bank1
  5306  0B64  1C20               	btfss	_myMain^(0+128),0
  5307  0B65  0008               	return
  5308  0B66  2B6C               	goto	l3883
  5309  0B67                     l1204:	
  5310                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  5311                           
  5312                           
  5313                           ;Switch_B1.c: 14: RB0 = 1;
  5314  0B67  0020               	movlb	0	; select bank0
  5315  0B68  140D               	bsf	13,0	;volatile
  5316                           
  5317                           ;Switch_B1.c: 15: Timeout_Counter();
  5318  0B69  318B  234B  318B   	fcall	_Timeout_Counter
  5319  0B6C                     l3883:	
  5320  0B6C  0020               	movlb	0	; select bank0
  5321  0B6D  180D               	btfsc	13,0	;volatile
  5322  0B6E  2B72               	goto	l3887
  5323  0B6F  0021               	movlb	1	; select bank1
  5324  0B70  1D2D               	btfss	(_myMain^(0+128)+13),2
  5325  0B71  2B67               	goto	l1204
  5326  0B72                     l3887:	
  5327                           
  5328                           ;Switch_B1.c: 16: }
  5329                           ;Switch_B1.c: 17: set_TimeoutCleared();
  5330  0B72  3189  21FB         	fcall	_set_TimeoutCleared
  5331  0B74  0008               	return
  5332  0B75                     __end_of_TouchPower:	
  5333                           
  5334                           	psect	text22
  5335  09FB                     __ptext22:	
  5336 ;; *************** function _set_TimeoutCleared *****************
  5337 ;; Defined at:
  5338 ;;		line 272 in file "../src/Main_B1.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;		None               void
  5345 ;; Registers used:
  5346 ;;		status,2
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    5
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_TouchPower
  5363 ;;		_getAD
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _set_TimeoutCleared
  5369  09FB                     _set_TimeoutCleared:	
  5370                           
  5371                           ;Main_B1.c: 273: myMain.Timeout = 0;
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in _set_TimeoutCleared: [status,2]
  5375  09FB  0021               	movlb	1	; select bank1
  5376  09FC  112D               	bcf	(_myMain^(0+128)+13),2
  5377                           
  5378                           ;Main_B1.c: 274: myMain.Timeout_Counter = 0;
  5379  09FD  01AE               	clrf	(_myMain^(0+128)+14)
  5380  09FE  01AF               	clrf	((_myMain+1)^(0+128)+14)
  5381  09FF  0008               	return
  5382  0A00                     __end_of_set_TimeoutCleared:	
  5383                           
  5384                           	psect	text23
  5385  0B4B                     __ptext23:	
  5386 ;; *************** function _Timeout_Counter *****************
  5387 ;; Defined at:
  5388 ;;		line 263 in file "../src/Main_B1.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;		None               void
  5395 ;; Registers used:
  5396 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    5
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_TouchPower
  5413 ;;		_getAD
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _Timeout_Counter
  5419  0B4B                     _Timeout_Counter:	
  5420                           
  5421                           ;Main_B1.c: 264: myMain.Timeout_Counter++;
  5422                           
  5423                           ;incstack = 0
  5424                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5425  0B4B  3001               	movlw	1
  5426  0B4C  0021               	movlb	1	; select bank1
  5427  0B4D  07AE               	addwf	(_myMain^(0+128)+14),f
  5428  0B4E  3000               	movlw	0
  5429  0B4F  3DAF               	addwfc	((_myMain+1)^(0+128)+14),f
  5430                           
  5431                           ;Main_B1.c: 265: if (myMain.Timeout_Counter == 10000) {
  5432  0B50  300E               	movlw	14
  5433  0B51  3EA0               	addlw	_myMain& (0+255)
  5434  0B52  0086               	movwf	6
  5435  0B53  0187               	clrf	7
  5436  0B54  3F40               	moviw [0]fsr1
  5437  0B55  3A10               	xorlw	16
  5438  0B56  1D03               	skipz
  5439  0B57  2B5A               	goto	u3045
  5440  0B58  3F41               	moviw [1]fsr1
  5441  0B59  3A27               	xorlw	39
  5442  0B5A                     u3045:	
  5443  0B5A  1D03               	skipz
  5444  0B5B  0008               	return
  5445                           
  5446                           ;Main_B1.c: 266: myMain.Timeout_Counter = 0;
  5447  0B5C  01AE               	clrf	(_myMain^(0+128)+14)
  5448  0B5D  01AF               	clrf	((_myMain+1)^(0+128)+14)
  5449                           
  5450                           ;Main_B1.c: 267: myMain.Timeout = 1;
  5451  0B5E  152D               	bsf	(_myMain^(0+128)+13),2
  5452  0B5F  0008               	return
  5453  0B60                     __end_of_Timeout_Counter:	
  5454                           
  5455                           	psect	text24
  5456  0B39                     __ptext24:	
  5457 ;; *************** function _Mcu_Initialization *****************
  5458 ;; Defined at:
  5459 ;;		line 30 in file "../src/MCU_B1.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;		None               void
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0, pclath, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;Total ram usage:        0 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    6
  5480 ;; This function calls:
  5481 ;;		_ADC_Set
  5482 ;;		_Fosc_Set
  5483 ;;		_IOC_Set
  5484 ;;		_IO_Set
  5485 ;;		_TMR1_Set
  5486 ;;		_WDT_Set
  5487 ;; This function is called by:
  5488 ;;		_main
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _Mcu_Initialization
  5494  0B39                     _Mcu_Initialization:	
  5495                           
  5496                           ;MCU_B1.c: 32: Fosc_Set();
  5497                           
  5498                           ;incstack = 0
  5499                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5500  0B39  3189  21F3  318B   	fcall	_Fosc_Set
  5501                           
  5502                           ;MCU_B1.c: 34: IO_Set();
  5503  0B3C  318B  2375  318B   	fcall	_IO_Set
  5504                           
  5505                           ;MCU_B1.c: 36: ;;
  5506                           ;MCU_B1.c: 38: TMR1_Set();
  5507  0B3F  318A  22B2  318B   	fcall	_TMR1_Set
  5508                           
  5509                           ;MCU_B1.c: 40: ADC_Set();
  5510  0B42  318A  220C  318B   	fcall	_ADC_Set
  5511                           
  5512                           ;MCU_B1.c: 42: ;;
  5513                           ;MCU_B1.c: 44: ;;
  5514                           ;MCU_B1.c: 46: IOC_Set();
  5515  0B45  318A  22BE  318B   	fcall	_IOC_Set
  5516                           
  5517                           ;MCU_B1.c: 48: ;;
  5518                           ;MCU_B1.c: 50: ;;
  5519                           ;MCU_B1.c: 52: WDT_Set();
  5520  0B48  318A  2242         	fcall	_WDT_Set
  5521  0B4A  0008               	return
  5522  0B4B                     __end_of_Mcu_Initialization:	
  5523                           
  5524                           	psect	text25
  5525  0A42                     __ptext25:	
  5526 ;; *************** function _WDT_Set *****************
  5527 ;; Defined at:
  5528 ;;		line 1019 in file "../src/MCU_B1.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;		None               void
  5535 ;; Registers used:
  5536 ;;		wreg
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;Total ram usage:        1 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    5
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_Mcu_Initialization
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function _WDT_Set
  5558  0A42                     _WDT_Set:	
  5559                           
  5560                           ;MCU_B1.c: 1026: WDTCON = 0b00010111;;
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _WDT_Set: [wreg]
  5564  0A42  3017               	movlw	23
  5565  0A43  0021               	movlb	1	; select bank1
  5566  0A44  0097               	movwf	23	;volatile
  5567                           
  5568                           ;MCU_B1.c: 1028: WDT.Enable = 1;
  5569  0A45  1478               	bsf	_WDT,0
  5570                           
  5571                           ;MCU_B1.c: 1029: WDT.Timer = 10;
  5572  0A46  300A               	movlw	10
  5573  0A47  0020               	movlb	0	; select bank0
  5574  0A48  00A0               	movwf	??_WDT_Set
  5575  0A49  0820               	movf	??_WDT_Set,w
  5576  0A4A  00F9               	movwf	_WDT+1
  5577  0A4B  0008               	return
  5578  0A4C                     __end_of_WDT_Set:	
  5579                           
  5580                           	psect	text26
  5581  0AB2                     __ptext26:	
  5582 ;; *************** function _TMR1_Set *****************
  5583 ;; Defined at:
  5584 ;;		line 199 in file "../src/MCU_B1.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;		None               void
  5591 ;; Registers used:
  5592 ;;		wreg
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    5
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_Mcu_Initialization
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _TMR1_Set
  5614  0AB2                     _TMR1_Set:	
  5615                           
  5616                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _TMR1_Set: [wreg]
  5620  0AB2  3041               	movlw	65
  5621  0AB3  0020               	movlb	0	; select bank0
  5622  0AB4  0098               	movwf	24	;volatile
  5623                           
  5624                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5625  0AB5  30FA               	movlw	250
  5626  0AB6  0097               	movwf	23	;volatile
  5627                           
  5628                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5629  0AB7  3038               	movlw	56
  5630  0AB8  0096               	movwf	22	;volatile
  5631                           
  5632                           ;MCU_B1.c: 203: TMR1IE = 1;
  5633  0AB9  0021               	movlb	1	; select bank1
  5634  0ABA  1411               	bsf	17,0	;volatile
  5635                           
  5636                           ;MCU_B1.c: 204: PEIE = 1;
  5637  0ABB  170B               	bsf	11,6	;volatile
  5638                           
  5639                           ;MCU_B1.c: 205: GIE = 1;
  5640  0ABC  178B               	bsf	11,7	;volatile
  5641  0ABD  0008               	return
  5642  0ABE                     __end_of_TMR1_Set:	
  5643                           
  5644                           	psect	text27
  5645  0B75                     __ptext27:	
  5646 ;; *************** function _IO_Set *****************
  5647 ;; Defined at:
  5648 ;;		line 60 in file "../src/MCU_B1.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    5
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_Mcu_Initialization
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _IO_Set
  5678  0B75                     _IO_Set:	
  5679                           
  5680                           ;MCU_B1.c: 88: TRISA = 0b11110111;;
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _IO_Set: [wreg+status,2]
  5684  0B75  30F7               	movlw	247
  5685  0B76  0021               	movlb	1	; select bank1
  5686  0B77  008C               	movwf	12	;volatile
  5687                           
  5688                           ;MCU_B1.c: 89: TRISB = 0b00000100;;
  5689  0B78  3004               	movlw	4
  5690  0B79  008D               	movwf	13	;volatile
  5691                           
  5692                           ;MCU_B1.c: 90: TRISC = 0b00100110;;
  5693  0B7A  3026               	movlw	38
  5694  0B7B  008E               	movwf	14	;volatile
  5695                           
  5696                           ;MCU_B1.c: 91: LATA = 0b00000000;;
  5697  0B7C  0022               	movlb	2	; select bank2
  5698  0B7D  018C               	clrf	12	;volatile
  5699                           
  5700                           ;MCU_B1.c: 92: LATB = 0b00000000;;
  5701  0B7E  018D               	clrf	13	;volatile
  5702                           
  5703                           ;MCU_B1.c: 93: LATC = 0b00000000;;
  5704  0B7F  018E               	clrf	14	;volatile
  5705                           
  5706                           ;MCU_B1.c: 94: ANSELA = 0b00001110;;
  5707  0B80  300E               	movlw	14
  5708  0B81  0023               	movlb	3	; select bank3
  5709  0B82  008C               	movwf	12	;volatile
  5710                           
  5711                           ;MCU_B1.c: 95: ANSELB = 0b00000000;;
  5712  0B83  018D               	clrf	13	;volatile
  5713                           
  5714                           ;MCU_B1.c: 96: ANSELC = 0b00000000;;
  5715  0B84  018E               	clrf	14	;volatile
  5716                           
  5717                           ;MCU_B1.c: 97: PORTA = 0b11110111;;
  5718  0B85  30F7               	movlw	247
  5719  0B86  0020               	movlb	0	; select bank0
  5720  0B87  008C               	movwf	12	;volatile
  5721                           
  5722                           ;MCU_B1.c: 98: PORTB = 0b00000100;;
  5723  0B88  3004               	movlw	4
  5724  0B89  008D               	movwf	13	;volatile
  5725                           
  5726                           ;MCU_B1.c: 99: PORTC = 0b00100110;;
  5727  0B8A  3026               	movlw	38
  5728  0B8B  008E               	movwf	14	;volatile
  5729  0B8C  0008               	return
  5730  0B8D                     __end_of_IO_Set:	
  5731                           
  5732                           	psect	text28
  5733  0ABE                     __ptext28:	
  5734 ;; *************** function _IOC_Set *****************
  5735 ;; Defined at:
  5736 ;;		line 366 in file "../src/MCU_B1.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;		None               void
  5743 ;; Registers used:
  5744 ;;		wreg, status,2
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    5
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_Mcu_Initialization
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _IOC_Set
  5766  0ABE                     _IOC_Set:	
  5767                           
  5768                           ;MCU_B1.c: 367: WPUB2 = 0;
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in _IOC_Set: [wreg+status,2]
  5772  0ABE  0024               	movlb	4	; select bank4
  5773  0ABF  110D               	bcf	13,2	;volatile
  5774                           
  5775                           ;MCU_B1.c: 382: IOCBP = 0b00000100;
  5776  0AC0  3004               	movlw	4
  5777  0AC1  0027               	movlb	7	; select bank7
  5778  0AC2  0094               	movwf	20	;volatile
  5779                           
  5780                           ;MCU_B1.c: 383: IOCBN = 0b00000100;
  5781  0AC3  3004               	movlw	4
  5782  0AC4  0095               	movwf	21	;volatile
  5783                           
  5784                           ;MCU_B1.c: 392: IOCBF = 0b00000000;
  5785  0AC5  0196               	clrf	22	;volatile
  5786                           
  5787                           ;MCU_B1.c: 394: IOCIE = 1;
  5788  0AC6  158B               	bsf	11,3	;volatile
  5789                           
  5790                           ;MCU_B1.c: 395: IOCIF = 0;
  5791  0AC7  100B               	bcf	11,0	;volatile
  5792                           
  5793                           ;MCU_B1.c: 396: PEIE = 1;
  5794  0AC8  170B               	bsf	11,6	;volatile
  5795                           
  5796                           ;MCU_B1.c: 397: GIE = 1;
  5797  0AC9  178B               	bsf	11,7	;volatile
  5798  0ACA  0008               	return
  5799  0ACB                     __end_of_IOC_Set:	
  5800                           
  5801                           	psect	text29
  5802  09F3                     __ptext29:	
  5803 ;; *************** function _Fosc_Set *****************
  5804 ;; Defined at:
  5805 ;;		line 56 in file "../src/MCU_B1.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;		None               void
  5812 ;; Registers used:
  5813 ;;		wreg
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:        0 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    5
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_Mcu_Initialization
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _Fosc_Set
  5835  09F3                     _Fosc_Set:	
  5836                           
  5837                           ;MCU_B1.c: 57: OSCCON = 0x78;
  5838                           
  5839                           ;incstack = 0
  5840                           ; Regs used in _Fosc_Set: [wreg]
  5841  09F3  3078               	movlw	120
  5842  09F4  0021               	movlb	1	; select bank1
  5843  09F5  0099               	movwf	25	;volatile
  5844  09F6  0008               	return
  5845  09F7                     __end_of_Fosc_Set:	
  5846                           
  5847                           	psect	text30
  5848  0A0C                     __ptext30:	
  5849 ;; *************** function _ADC_Set *****************
  5850 ;; Defined at:
  5851 ;;		line 420 in file "../src/MCU_B1.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;		None               void
  5858 ;; Registers used:
  5859 ;;		wreg
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    5
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_Mcu_Initialization
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _ADC_Set
  5881  0A0C                     _ADC_Set:	
  5882                           
  5883                           ;MCU_B1.c: 421: ADCON1 = 0xf3;
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in _ADC_Set: [wreg]
  5887  0A0C  30F3               	movlw	243
  5888  0A0D  0021               	movlb	1	; select bank1
  5889  0A0E  009E               	movwf	30	;volatile
  5890                           
  5891                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5892  0A0F  30C1               	movlw	193
  5893  0A10  0022               	movlb	2	; select bank2
  5894  0A11  0097               	movwf	23	;volatile
  5895  0A12  0008               	return
  5896  0A13                     __end_of_ADC_Set:	
  5897                           
  5898                           	psect	text31
  5899  09EF                     __ptext31:	
  5900 ;; *************** function _LED_Main *****************
  5901 ;; Defined at:
  5902 ;;		line 47 in file "../src/LED_B1.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;		None               void
  5909 ;; Registers used:
  5910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    7
  5923 ;; This function calls:
  5924 ;;		_setLED_Main
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function _LED_Main
  5932  09EF                     _LED_Main:	
  5933                           
  5934                           ;LED_B1.c: 62: setLED_Main(99);
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5938  09EF  3063               	movlw	99
  5939  09F0  318D  250B         	fcall	_setLED_Main
  5940  09F2  0008               	return
  5941  09F3                     __end_of_LED_Main:	
  5942                           
  5943                           	psect	text32
  5944  0D0B                     __ptext32:	
  5945 ;; *************** function _setLED_Main *****************
  5946 ;; Defined at:
  5947 ;;		line 221 in file "../src/LED_B1.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  led             1    wreg     unsigned char 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  led             1    4[BANK0 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;		None               void
  5954 ;; Registers used:
  5955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;Total ram usage:        3 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    6
  5968 ;; This function calls:
  5969 ;;		_LedPointSelect
  5970 ;; This function is called by:
  5971 ;;		_LED_Main
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function _setLED_Main
  5977  0D0B                     _setLED_Main:	
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5981                           ;setLED_Main@led stored from wreg
  5982  0D0B  0020               	movlb	0	; select bank0
  5983  0D0C  00A4               	movwf	setLED_Main@led
  5984                           
  5985                           ;LED_B1.c: 222: LedPointSelect(led);
  5986  0D0D  0824               	movf	setLED_Main@led,w
  5987  0D0E  318A  2261  318D   	fcall	_LedPointSelect
  5988                           
  5989                           ;LED_B1.c: 223: if (LED->GO == 1) {
  5990  0D11  0020               	movlb	0	; select bank0
  5991  0D12  086C               	movf	_LED,w
  5992  0D13  0086               	movwf	6
  5993  0D14  0187               	clrf	7
  5994  0D15  1C81               	btfss	1,1
  5995  0D16  0008               	return
  5996                           
  5997                           ;LED_B1.c: 224: LED->Time++;
  5998  0D17  0A6C               	incf	_LED,w
  5999  0D18  0086               	movwf	6
  6000  0D19  0187               	clrf	7
  6001  0D1A  3001               	movlw	1
  6002  0D1B  0781               	addwf	1,f
  6003  0D1C  3141               	addfsr 1,1
  6004  0D1D  1803               	skipnc
  6005  0D1E  0A81               	incf	1,f
  6006                           
  6007                           ;LED_B1.c: 225: if (LED->Time >= 500 / 10) {
  6008  0D1F  0A6C               	incf	_LED,w
  6009  0D20  0086               	movwf	6
  6010  0D21  0187               	clrf	7
  6011  0D22  3F40               	moviw [0]fsr1
  6012  0D23  00A2               	movwf	??_setLED_Main
  6013  0D24  3F41               	moviw [1]fsr1
  6014  0D25  00A3               	movwf	??_setLED_Main+1
  6015  0D26  3000               	movlw	0
  6016  0D27  0223               	subwf	??_setLED_Main+1,w
  6017  0D28  3032               	movlw	50
  6018  0D29  1903               	skipnz
  6019  0D2A  0222               	subwf	??_setLED_Main,w
  6020  0D2B  1C03               	skipc
  6021  0D2C  0008               	return
  6022                           
  6023                           ;LED_B1.c: 226: LED->Time = 0;
  6024  0D2D  0A6C               	incf	_LED,w
  6025  0D2E  0086               	movwf	6
  6026  0D2F  0187               	clrf	7
  6027  0D30  3000               	movlw	0
  6028  0D31  3FC0               	movwi [0]fsr1
  6029  0D32  3FC1               	movwi [1]fsr1
  6030                           
  6031                           ;LED_B1.c: 243: if (led == 99) {
  6032  0D33  0824               	movf	setLED_Main@led,w
  6033  0D34  3A63               	xorlw	99
  6034  0D35  1D03               	skipz
  6035  0D36  0008               	return
  6036                           
  6037                           ;LED_B1.c: 244: RB5 = RB5 == 1 ? 0 : 1;
  6038  0D37  3020               	movlw	32
  6039  0D38  068D               	xorwf	13,f
  6040  0D39  0008               	return
  6041  0D3A                     __end_of_setLED_Main:	
  6042                           
  6043                           	psect	text33
  6044  09EB                     __ptext33:	
  6045 ;; *************** function _LED_Initialization *****************
  6046 ;; Defined at:
  6047 ;;		line 31 in file "../src/LED_B1.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;		None               void
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;Total ram usage:        0 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    8
  6068 ;; This function calls:
  6069 ;;		_setLED_Initialization
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _LED_Initialization
  6077  09EB                     _LED_Initialization:	
  6078                           
  6079                           ;LED_B1.c: 42: setLED_Initialization(99);
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6083  09EB  3063               	movlw	99
  6084  09EC  318A  22F8         	fcall	_setLED_Initialization
  6085  09EE  0008               	return
  6086  09EF                     __end_of_LED_Initialization:	
  6087                           
  6088                           	psect	text34
  6089  0AF8                     __ptext34:	
  6090 ;; *************** function _setLED_Initialization *****************
  6091 ;; Defined at:
  6092 ;;		line 69 in file "../src/LED_B1.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  led             1    wreg     unsigned char 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  led             1    4[BANK0 ] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;		None               void
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:        1 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    7
  6113 ;; This function calls:
  6114 ;;		_LedPointSelect
  6115 ;;		_setLED
  6116 ;; This function is called by:
  6117 ;;		_LED_Initialization
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function _setLED_Initialization
  6123  0AF8                     _setLED_Initialization:	
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6127                           ;setLED_Initialization@led stored from wreg
  6128  0AF8  0020               	movlb	0	; select bank0
  6129  0AF9  00A4               	movwf	setLED_Initialization@led
  6130                           
  6131                           ;LED_B1.c: 70: LedPointSelect(led);
  6132  0AFA  0824               	movf	setLED_Initialization@led,w
  6133  0AFB  318A  2261  318A   	fcall	_LedPointSelect
  6134                           
  6135                           ;LED_B1.c: 71: LED->Enable = 1;
  6136  0AFE  0020               	movlb	0	; select bank0
  6137  0AFF  086C               	movf	_LED,w
  6138  0B00  0086               	movwf	6
  6139  0B01  0187               	clrf	7
  6140  0B02  1401               	bsf	1,0
  6141                           
  6142                           ;LED_B1.c: 72: setLED(led, 0);
  6143  0B03  01A2               	clrf	setLED@command
  6144  0B04  0824               	movf	setLED_Initialization@led,w
  6145  0B05  318D  256C         	fcall	_setLED
  6146  0B07  0008               	return
  6147  0B08                     __end_of_setLED_Initialization:	
  6148                           
  6149                           	psect	text35
  6150  0E06                     __ptext35:	
  6151 ;; *************** function _Flash_Memory_Main *****************
  6152 ;; Defined at:
  6153 ;;		line 901 in file "../src/MCU_B1.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;		None               void
  6160 ;; Registers used:
  6161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;Total ram usage:        1 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    8
  6174 ;; This function calls:
  6175 ;;		_Flash_Memory_Modify
  6176 ;;		_getMain_LightsStatus
  6177 ;; This function is called by:
  6178 ;;		_main
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function _Flash_Memory_Main
  6184  0E06                     _Flash_Memory_Main:	
  6185                           
  6186                           ;MCU_B1.c: 902: if (Memory.Modify == 1) {
  6187                           
  6188                           ;incstack = 0
  6189                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6190  0E06  0022               	movlb	2	; select bank2
  6191  0E07  1C44               	btfss	(_Memory^(0+256)+36),0
  6192  0E08  0008               	return
  6193                           
  6194                           ;MCU_B1.c: 903: Memory.GO = getMain_LightsStatus() == 0 ? 1 : 0;
  6195  0E09  318C  2487  318E   	fcall	_getMain_LightsStatus
  6196  0E0C  3A00               	xorlw	0
  6197  0E0D  3000               	movlw	0
  6198  0E0E  1903               	skipnz
  6199  0E0F  3001               	movlw	1
  6200  0E10  0020               	movlb	0	; select bank0
  6201  0E11  00A9               	movwf	??_Flash_Memory_Main
  6202  0E12  0DA9               	rlf	??_Flash_Memory_Main,f
  6203  0E13  0022               	movlb	2	; select bank2
  6204  0E14  0844               	movf	(_Memory^(0+256)+36),w
  6205  0E15  0020               	movlb	0	; select bank0
  6206  0E16  0629               	xorwf	??_Flash_Memory_Main,w
  6207  0E17  39FD               	andlw	-3
  6208  0E18  0629               	xorwf	??_Flash_Memory_Main,w
  6209  0E19  0022               	movlb	2	; select bank2
  6210  0E1A  00C4               	movwf	(_Memory^(0+256)+36)
  6211                           
  6212                           ;MCU_B1.c: 904: if (Memory.GO == 1) {
  6213  0E1B  1CC4               	btfss	(_Memory^(0+256)+36),1
  6214  0E1C  2E36               	goto	l686
  6215                           
  6216                           ;MCU_B1.c: 905: Memory.Runtime = 1;
  6217  0E1D  15C4               	bsf	(_Memory^(0+256)+36),3
  6218                           
  6219                           ;MCU_B1.c: 906: Memory.Time++;
  6220  0E1E  3001               	movlw	1
  6221  0E1F  07C2               	addwf	(_Memory^(0+256)+34),f
  6222  0E20  3000               	movlw	0
  6223  0E21  3DC3               	addwfc	((_Memory+1)^(0+256)+34),f
  6224                           
  6225                           ;MCU_B1.c: 907: if (Memory.Time == 25) {
  6226  0E22  3022               	movlw	34
  6227  0E23  3E20               	addlw	_Memory& (0+255)
  6228  0E24  0086               	movwf	6
  6229  0E25  3001               	movlw	1	; select bank2/3
  6230  0E26  0087               	movwf	7
  6231  0E27  3F40               	moviw [0]fsr1
  6232  0E28  3A19               	xorlw	25
  6233  0E29  1D03               	skipz
  6234  0E2A  2E2D               	goto	u3895
  6235  0E2B  3F41               	moviw [1]fsr1
  6236  0E2C  3A00               	xorlw	0
  6237  0E2D                     u3895:	
  6238  0E2D  1D03               	skipz
  6239  0E2E  0008               	return
  6240                           
  6241                           ;MCU_B1.c: 908: Memory.Time = 0;
  6242  0E2F  01C2               	clrf	(_Memory^(0+256)+34)
  6243  0E30  01C3               	clrf	((_Memory+1)^(0+256)+34)
  6244                           
  6245                           ;MCU_B1.c: 909: Memory.Modify = 0;
  6246  0E31  1044               	bcf	(_Memory^(0+256)+36),0
  6247                           
  6248                           ;MCU_B1.c: 910: Memory.GO = 0;
  6249  0E32  10C4               	bcf	(_Memory^(0+256)+36),1
  6250                           
  6251                           ;MCU_B1.c: 911: Flash_Memory_Modify();
  6252  0E33  318F  270B         	fcall	_Flash_Memory_Modify
  6253                           
  6254                           ;MCU_B1.c: 912: }
  6255                           ;MCU_B1.c: 913: } else {
  6256  0E35  0008               	return
  6257  0E36                     l686:	
  6258                           
  6259                           ;MCU_B1.c: 914: if (Memory.Runtime == 1) {
  6260  0E36  1DC4               	btfss	(_Memory^(0+256)+36),3
  6261  0E37  0008               	return
  6262                           
  6263                           ;MCU_B1.c: 915: Memory.Runtime = 0;
  6264  0E38  11C4               	bcf	(_Memory^(0+256)+36),3
  6265                           
  6266                           ;MCU_B1.c: 916: Memory.Time = 0;
  6267  0E39  01C2               	clrf	(_Memory^(0+256)+34)
  6268  0E3A  01C3               	clrf	((_Memory+1)^(0+256)+34)
  6269  0E3B  0008               	return
  6270  0E3C                     __end_of_Flash_Memory_Main:	
  6271                           
  6272                           	psect	text36
  6273  0C87                     __ptext36:	
  6274 ;; *************** function _getMain_LightsStatus *****************
  6275 ;; Defined at:
  6276 ;;		line 338 in file "../src/Main_B1.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  i               2    6[BANK0 ] int 
  6281 ;;  status          1    8[BANK0 ] unsigned char 
  6282 ;;  count           1    5[BANK0 ] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      unsigned char 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;Total ram usage:        5 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    7
  6299 ;; This function calls:
  6300 ;;		_getDimmerLights_Status
  6301 ;; This function is called by:
  6302 ;;		_Flash_Memory_Main
  6303 ;;		_setMain_Exception
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _getMain_LightsStatus
  6309  0C87                     _getMain_LightsStatus:	
  6310                           
  6311                           ;Main_B1.c: 339: char status = 0;
  6312                           
  6313                           ;incstack = 0
  6314                           ; Regs used in _getMain_LightsStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6315  0C87  0020               	movlb	0	; select bank0
  6316  0C88  01A8               	clrf	getMain_LightsStatus@status
  6317                           
  6318                           ;Main_B1.c: 342: char count = 1;
  6319  0C89  01A5               	clrf	getMain_LightsStatus@count
  6320  0C8A  0AA5               	incf	getMain_LightsStatus@count,f
  6321                           
  6322                           ;Main_B1.c: 351: for (int i = 0; i < count; i++) {
  6323  0C8B  01A6               	clrf	getMain_LightsStatus@i
  6324  0C8C  01A7               	clrf	getMain_LightsStatus@i+1
  6325  0C8D                     l3597:	
  6326  0C8D  0827               	movf	getMain_LightsStatus@i+1,w
  6327  0C8E  3A80               	xorlw	128
  6328  0C8F  00A4               	movwf	??_getMain_LightsStatus
  6329  0C90  3080               	movlw	128
  6330  0C91  0224               	subwf	??_getMain_LightsStatus,w
  6331  0C92  1D03               	skipz
  6332  0C93  2C96               	goto	u3085
  6333  0C94  0825               	movf	getMain_LightsStatus@count,w
  6334  0C95  0226               	subwf	getMain_LightsStatus@i,w
  6335  0C96                     u3085:	
  6336  0C96  1803               	btfsc	3,0
  6337  0C97  2CAE               	goto	l3599
  6338                           
  6339                           ;Main_B1.c: 352: if (status == 0) {
  6340  0C98  0020               	movlb	0	; select bank0
  6341  0C99  08A8               	movf	getMain_LightsStatus@status,f
  6342  0C9A  1D03               	skipz
  6343  0C9B  2CA9               	goto	l3595
  6344                           
  6345                           ;Main_B1.c: 357: status = getDimmerLights_Status(i + 1) == 1 ? 1 : 0;
  6346  0C9C  0826               	movf	getMain_LightsStatus@i,w
  6347  0C9D  3E01               	addlw	1
  6348  0C9E  318A  22DA  318C   	fcall	_getDimmerLights_Status
  6349  0CA1  3A01               	xorlw	1
  6350  0CA2  3000               	movlw	0
  6351  0CA3  1903               	skipnz
  6352  0CA4  3001               	movlw	1
  6353  0CA5  0020               	movlb	0	; select bank0
  6354  0CA6  00A4               	movwf	??_getMain_LightsStatus
  6355  0CA7  0824               	movf	??_getMain_LightsStatus,w
  6356  0CA8  00A8               	movwf	getMain_LightsStatus@status
  6357  0CA9                     l3595:	
  6358  0CA9  3001               	movlw	1
  6359  0CAA  07A6               	addwf	getMain_LightsStatus@i,f
  6360  0CAB  3000               	movlw	0
  6361  0CAC  3DA7               	addwfc	getMain_LightsStatus@i+1,f
  6362  0CAD  2C8D               	goto	l3597
  6363  0CAE                     l3599:	
  6364                           
  6365                           ;Main_B1.c: 359: }
  6366                           ;Main_B1.c: 360: }
  6367                           ;Main_B1.c: 361: return status;
  6368  0CAE  0020               	movlb	0	; select bank0
  6369  0CAF  0828               	movf	getMain_LightsStatus@status,w
  6370  0CB0  0008               	return
  6371  0CB1                     __end_of_getMain_LightsStatus:	
  6372                           
  6373                           	psect	text37
  6374  0ADA                     __ptext37:	
  6375 ;; *************** function _getDimmerLights_Status *****************
  6376 ;; Defined at:
  6377 ;;		line 457 in file "../src/Dimmer_B1.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  lights          1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  lights          1    2[BANK0 ] unsigned char 
  6382 ;;  status          1    3[BANK0 ] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      unsigned char 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;Total ram usage:        2 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    6
  6399 ;; This function calls:
  6400 ;;		_DimmerLightsPointSelect
  6401 ;; This function is called by:
  6402 ;;		_setDimmerLights_ErrorClose
  6403 ;;		_getMain_LightsStatus
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function _getDimmerLights_Status
  6409  0ADA                     _getDimmerLights_Status:	
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6413                           ;getDimmerLights_Status@lights stored from wreg
  6414  0ADA  0020               	movlb	0	; select bank0
  6415  0ADB  00A2               	movwf	getDimmerLights_Status@lights
  6416                           
  6417                           ;Dimmer_B1.c: 458: DimmerLightsPointSelect(lights);
  6418  0ADC  0822               	movf	getDimmerLights_Status@lights,w
  6419  0ADD  318A  2256         	fcall	_DimmerLightsPointSelect
  6420                           
  6421                           ;Dimmer_B1.c: 459: char status = DimmerLights->Status == 1 ? 1 : 0;
  6422  0ADF  0020               	movlb	0	; select bank0
  6423  0AE0  086B               	movf	_DimmerLights,w
  6424  0AE1  0086               	movwf	6
  6425  0AE2  0187               	clrf	7
  6426  0AE3  3000               	movlw	0
  6427  0AE4  1A81               	btfsc	1,5
  6428  0AE5  3001               	movlw	1
  6429  0AE6  00A3               	movwf	getDimmerLights_Status@status
  6430                           
  6431                           ;Dimmer_B1.c: 460: return status;
  6432  0AE7  0823               	movf	getDimmerLights_Status@status,w
  6433  0AE8  0008               	return
  6434  0AE9                     __end_of_getDimmerLights_Status:	
  6435                           
  6436                           	psect	text38
  6437  0F0B                     __ptext38:	
  6438 ;; *************** function _Flash_Memory_Modify *****************
  6439 ;; Defined at:
  6440 ;;		line 974 in file "../src/MCU_B1.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  i               1    5[BANK0 ] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;Total ram usage:        2 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    7
  6461 ;; This function calls:
  6462 ;;		_Flash_Memory_Erasing
  6463 ;;		_Flash_Memory_Read
  6464 ;;		_Flash_Memory_Write
  6465 ;;		_setMemory_Data
  6466 ;; This function is called by:
  6467 ;;		_Flash_Memory_Main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _Flash_Memory_Modify
  6473  0F0B                     _Flash_Memory_Modify:	
  6474                           
  6475                           ;MCU_B1.c: 975: char i = 0;
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6479  0F0B  0020               	movlb	0	; select bank0
  6480  0F0C  01A5               	clrf	Flash_Memory_Modify@i
  6481                           
  6482                           ;MCU_B1.c: 976: for (i = 0; i < 32; i++) {
  6483  0F0D  01A5               	clrf	Flash_Memory_Modify@i
  6484  0F0E  3020               	movlw	32
  6485  0F0F  0225               	subwf	Flash_Memory_Modify@i,w
  6486  0F10  1803               	btfsc	3,0
  6487  0F11  2F27               	goto	l3821
  6488  0F12                     l3815:	
  6489                           
  6490                           ;MCU_B1.c: 977: Memory.Data[i] = Flash_Memory_Read(i);
  6491  0F12  0825               	movf	Flash_Memory_Modify@i,w
  6492  0F13  318B  238D  318F   	fcall	_Flash_Memory_Read
  6493  0F16  0020               	movlb	0	; select bank0
  6494  0F17  00A4               	movwf	??_Flash_Memory_Modify
  6495  0F18  0825               	movf	Flash_Memory_Modify@i,w
  6496  0F19  3E20               	addlw	_Memory& (0+255)
  6497  0F1A  0086               	movwf	6
  6498  0F1B  3001               	movlw	1	; select bank2/3
  6499  0F1C  0087               	movwf	7
  6500  0F1D  0824               	movf	??_Flash_Memory_Modify,w
  6501  0F1E  0081               	movwf	1
  6502  0F1F  3001               	movlw	1
  6503  0F20  00A4               	movwf	??_Flash_Memory_Modify
  6504  0F21  0824               	movf	??_Flash_Memory_Modify,w
  6505  0F22  07A5               	addwf	Flash_Memory_Modify@i,f
  6506  0F23  3020               	movlw	32
  6507  0F24  0225               	subwf	Flash_Memory_Modify@i,w
  6508  0F25  1C03               	skipc
  6509  0F26  2F12               	goto	l3815
  6510  0F27                     l3821:	
  6511                           
  6512                           ;MCU_B1.c: 978: }
  6513                           ;MCU_B1.c: 979: setMemory_Data(0, product->Data[12]);
  6514  0F27  086F               	movf	_product,w
  6515  0F28  0086               	movwf	6
  6516  0F29  3001               	movlw	1	; select bank2/3
  6517  0F2A  0087               	movwf	7
  6518  0F2B  3001               	movlw	1	; select bank2/3
  6519  0F2C  3F4C               	moviw [12]fsr1
  6520  0F2D  00A0               	movwf	setMemory_Data@data
  6521  0F2E  3000               	movlw	0
  6522  0F2F  318A  229A  318F   	fcall	_setMemory_Data
  6523                           
  6524                           ;MCU_B1.c: 980: setMemory_Data(1, product->Data[13]);
  6525  0F32  0020               	movlb	0	; select bank0
  6526  0F33  086F               	movf	_product,w
  6527  0F34  0086               	movwf	6
  6528  0F35  3001               	movlw	1	; select bank2/3
  6529  0F36  0087               	movwf	7
  6530  0F37  3001               	movlw	1	; select bank2/3
  6531  0F38  3F4D               	moviw [13]fsr1
  6532  0F39  00A0               	movwf	setMemory_Data@data
  6533  0F3A  3001               	movlw	1
  6534  0F3B  318A  229A  318F   	fcall	_setMemory_Data
  6535                           
  6536                           ;MCU_B1.c: 981: setMemory_Data(2, product->Data[14]);
  6537  0F3E  0020               	movlb	0	; select bank0
  6538  0F3F  086F               	movf	_product,w
  6539  0F40  0086               	movwf	6
  6540  0F41  3001               	movlw	1	; select bank2/3
  6541  0F42  0087               	movwf	7
  6542  0F43  3001               	movlw	1	; select bank2/3
  6543  0F44  3F4E               	moviw [14]fsr1
  6544  0F45  00A0               	movwf	setMemory_Data@data
  6545  0F46  3002               	movlw	2
  6546  0F47  318A  229A  318F   	fcall	_setMemory_Data
  6547                           
  6548                           ;MCU_B1.c: 987: if (Memory.LoopSave == 1) {
  6549  0F4A  0022               	movlb	2	; select bank2
  6550  0F4B  1D44               	btfss	(_Memory^(0+256)+36),2
  6551  0F4C  2F51               	goto	l709
  6552                           
  6553                           ;MCU_B1.c: 988: Memory.LoopSave = 0;
  6554  0F4D  1144               	bcf	(_Memory^(0+256)+36),2
  6555                           
  6556                           ;MCU_B1.c: 989: myMain.FirstOpen = 0;
  6557  0F4E  0021               	movlb	1	; select bank1
  6558  0F4F  11A0               	bcf	_myMain^(0+128),3
  6559                           
  6560                           ;MCU_B1.c: 990: myMain.First = 0;
  6561  0F50  12A0               	bcf	_myMain^(0+128),5
  6562  0F51                     l709:	
  6563                           
  6564                           ;MCU_B1.c: 992: }
  6565                           ;MCU_B1.c: 993: GIE = 0;
  6566  0F51  138B               	bcf	11,7	;volatile
  6567                           
  6568                           ;MCU_B1.c: 994: Flash_Memory_Erasing();
  6569  0F52  318A  22A6  318F   	fcall	_Flash_Memory_Erasing
  6570                           
  6571                           ;MCU_B1.c: 995: Flash_Memory_Write();
  6572  0F55  318C  24DC         	fcall	_Flash_Memory_Write
  6573                           
  6574                           ;MCU_B1.c: 996: GIE = 1;
  6575  0F57  178B               	bsf	11,7	;volatile
  6576  0F58  0008               	return
  6577  0F59                     __end_of_Flash_Memory_Modify:	
  6578                           
  6579                           	psect	text39
  6580  0AA6                     __ptext39:	
  6581 ;; *************** function _Flash_Memory_Erasing *****************
  6582 ;; Defined at:
  6583 ;;		line 963 in file "../src/MCU_B1.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;		None               void
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0, pclath, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    6
  6604 ;; This function calls:
  6605 ;;		_Flash_Memory_Unlock
  6606 ;; This function is called by:
  6607 ;;		_Flash_Memory_Modify
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function _Flash_Memory_Erasing
  6613  0AA6                     _Flash_Memory_Erasing:	
  6614                           
  6615                           ;MCU_B1.c: 964: CFGS = 0;
  6616                           
  6617                           ;incstack = 0
  6618                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  6619  0AA6  0023               	movlb	3	; select bank3
  6620  0AA7  1315               	bcf	21,6	;volatile
  6621                           
  6622                           ;MCU_B1.c: 965: PMADRH = 0x30;
  6623  0AA8  3030               	movlw	48
  6624  0AA9  0092               	movwf	18	;volatile
  6625                           
  6626                           ;MCU_B1.c: 966: PMADRL = 0x00;
  6627  0AAA  0191               	clrf	17	;volatile
  6628                           
  6629                           ;MCU_B1.c: 967: FREE = 1;
  6630  0AAB  1615               	bsf	21,4	;volatile
  6631                           
  6632                           ;MCU_B1.c: 968: WREN = 1;
  6633  0AAC  1515               	bsf	21,2	;volatile
  6634                           
  6635                           ;MCU_B1.c: 969: Flash_Memory_Unlock();
  6636  0AAD  318A  221C         	fcall	_Flash_Memory_Unlock
  6637                           
  6638                           ;MCU_B1.c: 970: WREN = 0;
  6639  0AAF  0023               	movlb	3	; select bank3
  6640  0AB0  1115               	bcf	21,2	;volatile
  6641  0AB1  0008               	return
  6642  0AB2                     __end_of_Flash_Memory_Erasing:	
  6643                           
  6644                           	psect	text40
  6645  037A                     __ptext40:	
  6646 ;; *************** function _Flash_Memory_Initialization *****************
  6647 ;; Defined at:
  6648 ;;		line 860 in file "../src/MCU_B1.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  i               1   67[BANK0 ] unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        2 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    8
  6669 ;; This function calls:
  6670 ;;		_Flash_Memory_Read
  6671 ;;		_Flash_Memory_Write
  6672 ;;		_setMemory_Data
  6673 ;;		_setPercentValue
  6674 ;; This function is called by:
  6675 ;;		_main
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           
  6680                           ;psect for function _Flash_Memory_Initialization
  6681  037A                     _Flash_Memory_Initialization:	
  6682                           
  6683                           ;MCU_B1.c: 861: char i = 0;
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6687  037A  0020               	movlb	0	; select bank0
  6688  037B  01E3               	clrf	Flash_Memory_Initialization@i
  6689                           
  6690                           ;MCU_B1.c: 862: if (Flash_Memory_Read(31) == 0xaa) {
  6691  037C  301F               	movlw	31
  6692  037D  318B  238D  3183   	fcall	_Flash_Memory_Read
  6693  0380  3AAA               	xorlw	170
  6694  0381  1D03               	skipz
  6695  0382  2BEC               	goto	l4075
  6696                           
  6697                           ;MCU_B1.c: 863: product->Data[12] = Flash_Memory_Read(0);
  6698  0383  3000               	movlw	0
  6699  0384  318B  238D  3183   	fcall	_Flash_Memory_Read
  6700  0387  0020               	movlb	0	; select bank0
  6701  0388  00E2               	movwf	??_Flash_Memory_Initialization
  6702  0389  086F               	movf	_product,w
  6703  038A  3E0C               	addlw	12
  6704  038B  0086               	movwf	6
  6705  038C  3001               	movlw	1	; select bank2/3
  6706  038D  0087               	movwf	7
  6707  038E  0862               	movf	??_Flash_Memory_Initialization,w
  6708  038F  0081               	movwf	1
  6709                           
  6710                           ;MCU_B1.c: 864: product->Data[13] = Flash_Memory_Read(1);
  6711  0390  3001               	movlw	1
  6712  0391  318B  238D  3183   	fcall	_Flash_Memory_Read
  6713  0394  0020               	movlb	0	; select bank0
  6714  0395  00E2               	movwf	??_Flash_Memory_Initialization
  6715  0396  086F               	movf	_product,w
  6716  0397  3E0D               	addlw	13
  6717  0398  0086               	movwf	6
  6718  0399  3001               	movlw	1	; select bank2/3
  6719  039A  0087               	movwf	7
  6720  039B  0862               	movf	??_Flash_Memory_Initialization,w
  6721  039C  0081               	movwf	1
  6722                           
  6723                           ;MCU_B1.c: 865: product->Data[14] = Flash_Memory_Read(2);
  6724  039D  3002               	movlw	2
  6725  039E  318B  238D  3183   	fcall	_Flash_Memory_Read
  6726  03A1  0020               	movlb	0	; select bank0
  6727  03A2  00E2               	movwf	??_Flash_Memory_Initialization
  6728  03A3  086F               	movf	_product,w
  6729  03A4  3E0E               	addlw	14
  6730  03A5  0086               	movwf	6
  6731  03A6  3001               	movlw	1	; select bank2/3
  6732  03A7  0087               	movwf	7
  6733  03A8  0862               	movf	??_Flash_Memory_Initialization,w
  6734  03A9  0081               	movwf	1
  6735                           
  6736                           ;MCU_B1.c: 871: i = setPercentValue(((char)(65*0.8)));
  6737  03AA  3034               	movlw	52
  6738  03AB  3185  25EE  3183   	fcall	_setPercentValue
  6739  03AE  0020               	movlb	0	; select bank0
  6740  03AF  00E2               	movwf	??_Flash_Memory_Initialization
  6741  03B0  0862               	movf	??_Flash_Memory_Initialization,w
  6742  03B1  00E3               	movwf	Flash_Memory_Initialization@i
  6743                           
  6744                           ;MCU_B1.c: 872: product->Data[21] = i;
  6745  03B2  0863               	movf	Flash_Memory_Initialization@i,w
  6746  03B3  00E2               	movwf	??_Flash_Memory_Initialization
  6747  03B4  086F               	movf	_product,w
  6748  03B5  3E15               	addlw	21
  6749  03B6  0086               	movwf	6
  6750  03B7  3001               	movlw	1	; select bank2/3
  6751  03B8  0087               	movwf	7
  6752  03B9  0862               	movf	??_Flash_Memory_Initialization,w
  6753  03BA  0081               	movwf	1
  6754                           
  6755                           ;MCU_B1.c: 873: product->Data[22] = i;
  6756  03BB  0863               	movf	Flash_Memory_Initialization@i,w
  6757  03BC  00E2               	movwf	??_Flash_Memory_Initialization
  6758  03BD  086F               	movf	_product,w
  6759  03BE  3E16               	addlw	22
  6760  03BF  0086               	movwf	6
  6761  03C0  3001               	movlw	1	; select bank2/3
  6762  03C1  0087               	movwf	7
  6763  03C2  0862               	movf	??_Flash_Memory_Initialization,w
  6764  03C3  0081               	movwf	1
  6765                           
  6766                           ;MCU_B1.c: 874: product->Data[23] = i;
  6767  03C4  0863               	movf	Flash_Memory_Initialization@i,w
  6768  03C5  00E2               	movwf	??_Flash_Memory_Initialization
  6769  03C6  086F               	movf	_product,w
  6770  03C7  3E17               	addlw	23
  6771  03C8  0086               	movwf	6
  6772  03C9  3001               	movlw	1	; select bank2/3
  6773  03CA  0087               	movwf	7
  6774  03CB  0862               	movf	??_Flash_Memory_Initialization,w
  6775  03CC  0081               	movwf	1
  6776                           
  6777                           ;MCU_B1.c: 876: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  6778  03CD  086F               	movf	_product,w
  6779  03CE  3E0C               	addlw	12
  6780  03CF  0086               	movwf	6
  6781  03D0  3001               	movlw	1	; select bank2/3
  6782  03D1  0087               	movwf	7
  6783  03D2  0801               	movf	1,w
  6784  03D3  3AFF               	xorlw	255
  6785  03D4  1D03               	skipz
  6786  03D5  0008               	return
  6787  03D6  086F               	movf	_product,w
  6788  03D7  3E0D               	addlw	13
  6789  03D8  0086               	movwf	6
  6790  03D9  3001               	movlw	1	; select bank2/3
  6791  03DA  0087               	movwf	7
  6792  03DB  0801               	movf	1,w
  6793  03DC  3AFF               	xorlw	255
  6794  03DD  1D03               	skipz
  6795  03DE  0008               	return
  6796  03DF  086F               	movf	_product,w
  6797  03E0  3E0E               	addlw	14
  6798  03E1  0086               	movwf	6
  6799  03E2  3001               	movlw	1	; select bank2/3
  6800  03E3  0087               	movwf	7
  6801  03E4  0801               	movf	1,w
  6802  03E5  3AFF               	xorlw	255
  6803  03E6  1D03               	skipz
  6804  03E7  0008               	return
  6805                           
  6806                           ;MCU_B1.c: 877: myMain.FirstOpen = 1;
  6807  03E8  0021               	movlb	1	; select bank1
  6808  03E9  15A0               	bsf	_myMain^(0+128),3
  6809                           
  6810                           ;MCU_B1.c: 878: myMain.First = 1;
  6811  03EA  16A0               	bsf	_myMain^(0+128),5
  6812                           
  6813                           ;MCU_B1.c: 879: }
  6814                           ;MCU_B1.c: 880: } else {
  6815  03EB  0008               	return
  6816  03EC                     l4075:	
  6817                           
  6818                           ;MCU_B1.c: 881: i = setPercentValue(((char)(65*0.8)));
  6819  03EC  3034               	movlw	52
  6820  03ED  3185  25EE  3183   	fcall	_setPercentValue
  6821  03F0  0020               	movlb	0	; select bank0
  6822  03F1  00E2               	movwf	??_Flash_Memory_Initialization
  6823  03F2  0862               	movf	??_Flash_Memory_Initialization,w
  6824  03F3  00E3               	movwf	Flash_Memory_Initialization@i
  6825                           
  6826                           ;MCU_B1.c: 882: setMemory_Data(0, 0xff);
  6827  03F4  30FF               	movlw	255
  6828  03F5  00E2               	movwf	??_Flash_Memory_Initialization
  6829  03F6  0862               	movf	??_Flash_Memory_Initialization,w
  6830  03F7  00A0               	movwf	setMemory_Data@data
  6831  03F8  3000               	movlw	0
  6832  03F9  318A  229A  3183   	fcall	_setMemory_Data
  6833                           
  6834                           ;MCU_B1.c: 883: setMemory_Data(1, 0xff);
  6835  03FC  30FF               	movlw	255
  6836  03FD  0020               	movlb	0	; select bank0
  6837  03FE  00E2               	movwf	??_Flash_Memory_Initialization
  6838  03FF  0862               	movf	??_Flash_Memory_Initialization,w
  6839  0400  00A0               	movwf	setMemory_Data@data
  6840  0401  3001               	movlw	1
  6841  0402  318A  229A  3183   	fcall	_setMemory_Data
  6842                           
  6843                           ;MCU_B1.c: 884: setMemory_Data(2, 0xff);
  6844  0405  30FF               	movlw	255
  6845  0406  0020               	movlb	0	; select bank0
  6846  0407  00E2               	movwf	??_Flash_Memory_Initialization
  6847  0408  0862               	movf	??_Flash_Memory_Initialization,w
  6848  0409  00A0               	movwf	setMemory_Data@data
  6849  040A  3002               	movlw	2
  6850  040B  318A  229A  3183   	fcall	_setMemory_Data
  6851                           
  6852                           ;MCU_B1.c: 885: setMemory_Data(3, 0xff);
  6853  040E  30FF               	movlw	255
  6854  040F  0020               	movlb	0	; select bank0
  6855  0410  00E2               	movwf	??_Flash_Memory_Initialization
  6856  0411  0862               	movf	??_Flash_Memory_Initialization,w
  6857  0412  00A0               	movwf	setMemory_Data@data
  6858  0413  3003               	movlw	3
  6859  0414  318A  229A  3183   	fcall	_setMemory_Data
  6860                           
  6861                           ;MCU_B1.c: 886: setMemory_Data(4, 0xff);
  6862  0417  30FF               	movlw	255
  6863  0418  0020               	movlb	0	; select bank0
  6864  0419  00E2               	movwf	??_Flash_Memory_Initialization
  6865  041A  0862               	movf	??_Flash_Memory_Initialization,w
  6866  041B  00A0               	movwf	setMemory_Data@data
  6867  041C  3004               	movlw	4
  6868  041D  318A  229A  3183   	fcall	_setMemory_Data
  6869                           
  6870                           ;MCU_B1.c: 887: setMemory_Data(5, 0xff);
  6871  0420  30FF               	movlw	255
  6872  0421  0020               	movlb	0	; select bank0
  6873  0422  00E2               	movwf	??_Flash_Memory_Initialization
  6874  0423  0862               	movf	??_Flash_Memory_Initialization,w
  6875  0424  00A0               	movwf	setMemory_Data@data
  6876  0425  3005               	movlw	5
  6877  0426  318A  229A  3183   	fcall	_setMemory_Data
  6878                           
  6879                           ;MCU_B1.c: 888: setMemory_Data(31, 0xaa);
  6880  0429  30AA               	movlw	170
  6881  042A  0020               	movlb	0	; select bank0
  6882  042B  00E2               	movwf	??_Flash_Memory_Initialization
  6883  042C  0862               	movf	??_Flash_Memory_Initialization,w
  6884  042D  00A0               	movwf	setMemory_Data@data
  6885  042E  301F               	movlw	31
  6886  042F  318A  229A  3183   	fcall	_setMemory_Data
  6887                           
  6888                           ;MCU_B1.c: 889: product->Data[21] = i;
  6889  0432  0020               	movlb	0	; select bank0
  6890  0433  0863               	movf	Flash_Memory_Initialization@i,w
  6891  0434  00E2               	movwf	??_Flash_Memory_Initialization
  6892  0435  086F               	movf	_product,w
  6893  0436  3E15               	addlw	21
  6894  0437  0086               	movwf	6
  6895  0438  3001               	movlw	1	; select bank2/3
  6896  0439  0087               	movwf	7
  6897  043A  0862               	movf	??_Flash_Memory_Initialization,w
  6898  043B  0081               	movwf	1
  6899                           
  6900                           ;MCU_B1.c: 890: product->Data[22] = i;
  6901  043C  0863               	movf	Flash_Memory_Initialization@i,w
  6902  043D  00E2               	movwf	??_Flash_Memory_Initialization
  6903  043E  086F               	movf	_product,w
  6904  043F  3E16               	addlw	22
  6905  0440  0086               	movwf	6
  6906  0441  3001               	movlw	1	; select bank2/3
  6907  0442  0087               	movwf	7
  6908  0443  0862               	movf	??_Flash_Memory_Initialization,w
  6909  0444  0081               	movwf	1
  6910                           
  6911                           ;MCU_B1.c: 891: product->Data[23] = i;
  6912  0445  0863               	movf	Flash_Memory_Initialization@i,w
  6913  0446  00E2               	movwf	??_Flash_Memory_Initialization
  6914  0447  086F               	movf	_product,w
  6915  0448  3E17               	addlw	23
  6916  0449  0086               	movwf	6
  6917  044A  3001               	movlw	1	; select bank2/3
  6918  044B  0087               	movwf	7
  6919  044C  0862               	movf	??_Flash_Memory_Initialization,w
  6920  044D  0081               	movwf	1
  6921                           
  6922                           ;MCU_B1.c: 892: GIE = 0;
  6923  044E  138B               	bcf	11,7	;volatile
  6924                           
  6925                           ;MCU_B1.c: 893: Flash_Memory_Write();
  6926  044F  318C  24DC         	fcall	_Flash_Memory_Write
  6927                           
  6928                           ;MCU_B1.c: 894: GIE = 1;
  6929  0451  178B               	bsf	11,7	;volatile
  6930                           
  6931                           ;MCU_B1.c: 895: myMain.FirstOpen = 1;
  6932  0452  0021               	movlb	1	; select bank1
  6933  0453  15A0               	bsf	_myMain^(0+128),3
  6934                           
  6935                           ;MCU_B1.c: 896: myMain.First = 1;
  6936  0454  16A0               	bsf	_myMain^(0+128),5
  6937  0455  0008               	return
  6938  0456                     __end_of_Flash_Memory_Initialization:	
  6939                           
  6940                           	psect	text41
  6941  0A9A                     __ptext41:	
  6942 ;; *************** function _setMemory_Data *****************
  6943 ;; Defined at:
  6944 ;;		line 1011 in file "../src/MCU_B1.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  address         1    wreg     unsigned char 
  6947 ;;  data            1    0[BANK0 ] unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  address         1    2[BANK0 ] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6959 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;Total ram usage:        3 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    5
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_Flash_Memory_Initialization
  6970 ;;		_Flash_Memory_Modify
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           
  6975                           ;psect for function _setMemory_Data
  6976  0A9A                     _setMemory_Data:	
  6977                           
  6978                           ;incstack = 0
  6979                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  6980                           ;setMemory_Data@address stored from wreg
  6981  0A9A  0020               	movlb	0	; select bank0
  6982  0A9B  00A2               	movwf	setMemory_Data@address
  6983                           
  6984                           ;MCU_B1.c: 1012: Memory.Data[address] = data;
  6985  0A9C  0820               	movf	setMemory_Data@data,w
  6986  0A9D  00A1               	movwf	??_setMemory_Data
  6987  0A9E  0822               	movf	setMemory_Data@address,w
  6988  0A9F  3E20               	addlw	_Memory& (0+255)
  6989  0AA0  0086               	movwf	6
  6990  0AA1  3001               	movlw	1	; select bank2/3
  6991  0AA2  0087               	movwf	7
  6992  0AA3  0821               	movf	??_setMemory_Data,w
  6993  0AA4  0081               	movwf	1
  6994  0AA5  0008               	return
  6995  0AA6                     __end_of_setMemory_Data:	
  6996                           
  6997                           	psect	text42
  6998  0CDC                     __ptext42:	
  6999 ;; *************** function _Flash_Memory_Write *****************
  7000 ;; Defined at:
  7001 ;;		line 944 in file "../src/MCU_B1.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  i               1    1[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;Total ram usage:        2 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    6
  7022 ;; This function calls:
  7023 ;;		_Flash_Memory_Unlock
  7024 ;; This function is called by:
  7025 ;;		_Flash_Memory_Initialization
  7026 ;;		_Flash_Memory_Modify
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function _Flash_Memory_Write
  7032  0CDC                     _Flash_Memory_Write:	
  7033                           
  7034                           ;MCU_B1.c: 945: char i = 0;
  7035                           
  7036                           ;incstack = 0
  7037                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7038  0CDC  0020               	movlb	0	; select bank0
  7039  0CDD  01A1               	clrf	Flash_Memory_Write@i
  7040                           
  7041                           ;MCU_B1.c: 946: CFGS = 0;
  7042  0CDE  0023               	movlb	3	; select bank3
  7043  0CDF  1315               	bcf	21,6	;volatile
  7044                           
  7045                           ;MCU_B1.c: 947: PMADRH = 0x30;
  7046  0CE0  3030               	movlw	48
  7047  0CE1  0092               	movwf	18	;volatile
  7048                           
  7049                           ;MCU_B1.c: 948: PMDATH = 0;
  7050  0CE2  0194               	clrf	20	;volatile
  7051                           
  7052                           ;MCU_B1.c: 949: FREE = 0;
  7053  0CE3  1215               	bcf	21,4	;volatile
  7054                           
  7055                           ;MCU_B1.c: 950: LWLO = 1;
  7056  0CE4  1695               	bsf	21,5	;volatile
  7057                           
  7058                           ;MCU_B1.c: 951: WREN = 1;
  7059  0CE5  1515               	bsf	21,2	;volatile
  7060                           
  7061                           ;MCU_B1.c: 952: for (i = 0; i < 32; i++) {
  7062  0CE6  0020               	movlb	0	; select bank0
  7063  0CE7  01A1               	clrf	Flash_Memory_Write@i
  7064  0CE8  3020               	movlw	32
  7065  0CE9  0221               	subwf	Flash_Memory_Write@i,w
  7066  0CEA  1803               	btfsc	3,0
  7067  0CEB  2D04               	goto	l700
  7068  0CEC                     l3573:	
  7069                           
  7070                           ;MCU_B1.c: 953: PMADRL = i;
  7071  0CEC  0821               	movf	Flash_Memory_Write@i,w
  7072  0CED  0023               	movlb	3	; select bank3
  7073  0CEE  0091               	movwf	17	;volatile
  7074                           
  7075                           ;MCU_B1.c: 954: PMDATL = Memory.Data[i];
  7076  0CEF  0020               	movlb	0	; select bank0
  7077  0CF0  0821               	movf	Flash_Memory_Write@i,w
  7078  0CF1  3E20               	addlw	_Memory& (0+255)
  7079  0CF2  0086               	movwf	6
  7080  0CF3  3001               	movlw	1	; select bank2/3
  7081  0CF4  0087               	movwf	7
  7082  0CF5  0801               	movf	1,w
  7083  0CF6  0023               	movlb	3	; select bank3
  7084  0CF7  0093               	movwf	19	;volatile
  7085                           
  7086                           ;MCU_B1.c: 955: Flash_Memory_Unlock();
  7087  0CF8  318A  221C  318C   	fcall	_Flash_Memory_Unlock
  7088  0CFB  3001               	movlw	1
  7089  0CFC  0020               	movlb	0	; select bank0
  7090  0CFD  00A0               	movwf	??_Flash_Memory_Write
  7091  0CFE  0820               	movf	??_Flash_Memory_Write,w
  7092  0CFF  07A1               	addwf	Flash_Memory_Write@i,f
  7093  0D00  3020               	movlw	32
  7094  0D01  0221               	subwf	Flash_Memory_Write@i,w
  7095  0D02  1C03               	skipc
  7096  0D03  2CEC               	goto	l3573
  7097  0D04                     l700:	
  7098                           
  7099                           ;MCU_B1.c: 956: }
  7100                           ;MCU_B1.c: 957: LWLO = 0;
  7101  0D04  0023               	movlb	3	; select bank3
  7102  0D05  1295               	bcf	21,5	;volatile
  7103                           
  7104                           ;MCU_B1.c: 958: Flash_Memory_Unlock();
  7105  0D06  318A  221C         	fcall	_Flash_Memory_Unlock
  7106                           
  7107                           ;MCU_B1.c: 959: WREN = 0;
  7108  0D08  0023               	movlb	3	; select bank3
  7109  0D09  1115               	bcf	21,2	;volatile
  7110  0D0A  0008               	return
  7111  0D0B                     __end_of_Flash_Memory_Write:	
  7112                           
  7113                           	psect	text43
  7114  0A1C                     __ptext43:	
  7115 ;; *************** function _Flash_Memory_Unlock *****************
  7116 ;; Defined at:
  7117 ;;		line 923 in file "../src/MCU_B1.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;		None               void
  7124 ;; Registers used:
  7125 ;;		wreg
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    5
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_Flash_Memory_Write
  7142 ;;		_Flash_Memory_Erasing
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           
  7147                           ;psect for function _Flash_Memory_Unlock
  7148  0A1C                     _Flash_Memory_Unlock:	
  7149                           
  7150                           ;MCU_B1.c: 924: PMCON2 = 0x55;
  7151                           
  7152                           ;incstack = 0
  7153                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  7154  0A1C  3055               	movlw	85
  7155  0A1D  0023               	movlb	3	; select bank3
  7156  0A1E  0096               	movwf	22	;volatile
  7157                           
  7158                           ;MCU_B1.c: 925: PMCON2 = 0xaa;
  7159  0A1F  30AA               	movlw	170
  7160  0A20  0096               	movwf	22	;volatile
  7161                           
  7162                           ;MCU_B1.c: 926: WR = 1;
  7163  0A21  1495               	bsf	21,1	;volatile
  7164                           
  7165                           ;MCU_B1.c: 927: __nop();
  7166  0A22  0000               	nop
  7167                           
  7168                           ;MCU_B1.c: 928: __nop();
  7169  0A23  0000               	nop
  7170  0A24  0008               	return
  7171  0A25                     __end_of_Flash_Memory_Unlock:	
  7172                           
  7173                           	psect	text44
  7174  0B8D                     __ptext44:	
  7175 ;; *************** function _Flash_Memory_Read *****************
  7176 ;; Defined at:
  7177 ;;		line 932 in file "../src/MCU_B1.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  address         1    wreg     unsigned char 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  address         1    2[BANK0 ] unsigned char 
  7182 ;;  ret             1    3[BANK0 ] unsigned char 
  7183 ;;  i               1    1[BANK0 ] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  1    wreg      unsigned char 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;Total ram usage:        4 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    5
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_Flash_Memory_Initialization
  7204 ;;		_Flash_Memory_Modify
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _Flash_Memory_Read
  7210  0B8D                     _Flash_Memory_Read:	
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  7214                           ;Flash_Memory_Read@address stored from wreg
  7215  0B8D  0020               	movlb	0	; select bank0
  7216  0B8E  00A2               	movwf	Flash_Memory_Read@address
  7217                           
  7218                           ;MCU_B1.c: 933: char i = 0, ret = 0;
  7219  0B8F  01A1               	clrf	Flash_Memory_Read@i
  7220  0B90  01A3               	clrf	Flash_Memory_Read@ret
  7221                           
  7222                           ;MCU_B1.c: 934: PMADRH = 0x30;
  7223  0B91  3030               	movlw	48
  7224  0B92  0023               	movlb	3	; select bank3
  7225  0B93  0092               	movwf	18	;volatile
  7226                           
  7227                           ;MCU_B1.c: 935: PMADRL = address;
  7228  0B94  0020               	movlb	0	; select bank0
  7229  0B95  0822               	movf	Flash_Memory_Read@address,w
  7230  0B96  0023               	movlb	3	; select bank3
  7231  0B97  0091               	movwf	17	;volatile
  7232                           
  7233                           ;MCU_B1.c: 936: CFGS = 0;
  7234  0B98  1315               	bcf	21,6	;volatile
  7235                           
  7236                           ;MCU_B1.c: 937: RD = 1;
  7237  0B99  1415               	bsf	21,0	;volatile
  7238                           
  7239                           ;MCU_B1.c: 938: i = PMDATH;
  7240  0B9A  0814               	movf	20,w	;volatile
  7241  0B9B  0020               	movlb	0	; select bank0
  7242  0B9C  00A0               	movwf	??_Flash_Memory_Read
  7243  0B9D  0820               	movf	??_Flash_Memory_Read,w
  7244  0B9E  00A1               	movwf	Flash_Memory_Read@i
  7245                           
  7246                           ;MCU_B1.c: 939: ret = PMDATL;
  7247  0B9F  0023               	movlb	3	; select bank3
  7248  0BA0  0813               	movf	19,w	;volatile
  7249  0BA1  0020               	movlb	0	; select bank0
  7250  0BA2  00A0               	movwf	??_Flash_Memory_Read
  7251  0BA3  0820               	movf	??_Flash_Memory_Read,w
  7252  0BA4  00A3               	movwf	Flash_Memory_Read@ret
  7253                           
  7254                           ;MCU_B1.c: 940: return ret;
  7255  0BA5  0823               	movf	Flash_Memory_Read@ret,w
  7256  0BA6  0008               	return
  7257  0BA7                     __end_of_Flash_Memory_Read:	
  7258                           
  7259                           	psect	text45
  7260  09E7                     __ptext45:	
  7261 ;; *************** function _DimmerLights_Main *****************
  7262 ;; Defined at:
  7263 ;;		line 402 in file "../src/Dimmer_B1.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;		None
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;		None               void
  7270 ;; Registers used:
  7271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;Total ram usage:        0 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:   10
  7284 ;; This function calls:
  7285 ;;		_setDimmerLights_Main
  7286 ;; This function is called by:
  7287 ;;		_main
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function _DimmerLights_Main
  7293  09E7                     _DimmerLights_Main:	
  7294                           
  7295                           ;Dimmer_B1.c: 414: setDimmerLights_Main(1);
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7299  09E7  3001               	movlw	1
  7300  09E8  318F  2759         	fcall	_setDimmerLights_Main
  7301  09EA  0008               	return
  7302  09EB                     __end_of_DimmerLights_Main:	
  7303                           
  7304                           	psect	text46
  7305  0F59                     __ptext46:	
  7306 ;; *************** function _setDimmerLights_Main *****************
  7307 ;; Defined at:
  7308 ;;		line 428 in file "../src/Dimmer_B1.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  lights          1    wreg     unsigned char 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  lights          1   70[BANK0 ] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;		None               void
  7315 ;; Registers used:
  7316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;Total ram usage:        1 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    9
  7329 ;; This function calls:
  7330 ;;		_DimmerLightsPointSelect
  7331 ;;		_setBuz
  7332 ;;		_setDimmerLights
  7333 ;;		_setDimmerLights_Adj
  7334 ;; This function is called by:
  7335 ;;		_DimmerLights_Main
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _setDimmerLights_Main
  7341  0F59                     _setDimmerLights_Main:	
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7345                           ;setDimmerLights_Main@lights stored from wreg
  7346  0F59  0020               	movlb	0	; select bank0
  7347  0F5A  00E6               	movwf	setDimmerLights_Main@lights
  7348                           
  7349                           ;Dimmer_B1.c: 429: DimmerLightsPointSelect(lights);
  7350  0F5B  0866               	movf	setDimmerLights_Main@lights,w
  7351  0F5C  318A  2256  318F   	fcall	_DimmerLightsPointSelect
  7352                           
  7353                           ;Dimmer_B1.c: 430: if (DimmerLights->Trigger == 1) {
  7354  0F5F  0020               	movlb	0	; select bank0
  7355  0F60  086B               	movf	_DimmerLights,w
  7356  0F61  3E08               	addlw	8
  7357  0F62  0086               	movwf	6
  7358  0F63  0187               	clrf	7
  7359  0F64  1D01               	btfss	1,2
  7360  0F65  2F81               	goto	l3729
  7361                           
  7362                           ;Dimmer_B1.c: 432: if (Dimmer.LoadOK == 0) {
  7363  0F66  0021               	movlb	1	; select bank1
  7364  0F67  18BC               	btfsc	_Dimmer^(0+128),1
  7365  0F68  0008               	return
  7366                           
  7367                           ;Dimmer_B1.c: 433: DimmerLights->Trigger = 0;
  7368  0F69  0020               	movlb	0	; select bank0
  7369  0F6A  086B               	movf	_DimmerLights,w
  7370  0F6B  3E08               	addlw	8
  7371  0F6C  0086               	movwf	6
  7372  0F6D  0187               	clrf	7
  7373  0F6E  1101               	bcf	1,2
  7374                           
  7375                           ;Dimmer_B1.c: 435: if (DimmerLights->Switch == 1) {
  7376  0F6F  086B               	movf	_DimmerLights,w
  7377  0F70  3E08               	addlw	8
  7378  0F71  0086               	movwf	6
  7379  0F72  0187               	clrf	7
  7380  0F73  1C81               	btfss	1,1
  7381  0F74  2F7B               	goto	l3727
  7382                           
  7383                           ;Dimmer_B1.c: 436: setDimmerLights(lights, 1);
  7384  0F75  01E2               	clrf	setDimmerLights@status
  7385  0F76  0AE2               	incf	setDimmerLights@status,f
  7386  0F77  0866               	movf	setDimmerLights_Main@lights,w
  7387  0F78  3185  2586         	fcall	_setDimmerLights
  7388                           
  7389                           ;Dimmer_B1.c: 437: } else {
  7390  0F7A  0008               	return
  7391  0F7B                     l3727:	
  7392                           
  7393                           ;Dimmer_B1.c: 438: setDimmerLights(lights, 0);
  7394  0F7B  0020               	movlb	0	; select bank0
  7395  0F7C  01E2               	clrf	setDimmerLights@status
  7396  0F7D  0866               	movf	setDimmerLights_Main@lights,w
  7397  0F7E  3185  2586         	fcall	_setDimmerLights
  7398                           
  7399                           ;Dimmer_B1.c: 439: }
  7400                           ;Dimmer_B1.c: 440: }
  7401                           ;Dimmer_B1.c: 441: } else {
  7402  0F80  0008               	return
  7403  0F81                     l3729:	
  7404                           
  7405                           ;Dimmer_B1.c: 442: if (DimmerLights->TriggerAdj == 1) {
  7406  0F81  0020               	movlb	0	; select bank0
  7407  0F82  086B               	movf	_DimmerLights,w
  7408  0F83  3E08               	addlw	8
  7409  0F84  0086               	movwf	6
  7410  0F85  0187               	clrf	7
  7411  0F86  1E01               	btfss	1,4
  7412  0F87  0008               	return
  7413                           
  7414                           ;Dimmer_B1.c: 443: if (Dimmer.LoadOK == 0) {
  7415  0F88  0021               	movlb	1	; select bank1
  7416  0F89  18BC               	btfsc	_Dimmer^(0+128),1
  7417  0F8A  0008               	return
  7418                           
  7419                           ;Dimmer_B1.c: 444: DimmerLights->TriggerAdj = 0;
  7420  0F8B  0020               	movlb	0	; select bank0
  7421  0F8C  086B               	movf	_DimmerLights,w
  7422  0F8D  3E08               	addlw	8
  7423  0F8E  0086               	movwf	6
  7424  0F8F  0187               	clrf	7
  7425  0F90  1201               	bcf	1,4
  7426                           
  7427                           ;Dimmer_B1.c: 445: if (DimmerLights->AdjGo == 1) {
  7428  0F91  086B               	movf	_DimmerLights,w
  7429  0F92  3E08               	addlw	8
  7430  0F93  0086               	movwf	6
  7431  0F94  0187               	clrf	7
  7432  0F95  1D81               	btfss	1,3
  7433  0F96  2FA6               	goto	l3739
  7434                           
  7435                           ;Dimmer_B1.c: 446: setDimmerLights_Adj(lights, 1);
  7436  0F97  01E2               	clrf	setDimmerLights_Adj@status
  7437  0F98  0AE2               	incf	setDimmerLights_Adj@status,f
  7438  0F99  0866               	movf	setDimmerLights_Main@lights,w
  7439  0F9A  3187  27BD  318F   	fcall	_setDimmerLights_Adj
  7440                           
  7441                           ;Dimmer_B1.c: 447: setBuz(1, 100);
  7442  0F9D  3064               	movlw	100
  7443  0F9E  0020               	movlb	0	; select bank0
  7444  0F9F  00A9               	movwf	setBuz@time
  7445  0FA0  3000               	movlw	0
  7446  0FA1  00AA               	movwf	setBuz@time+1
  7447  0FA2  3001               	movlw	1
  7448  0FA3  3187  2710         	fcall	_setBuz
  7449                           
  7450                           ;Dimmer_B1.c: 448: } else {
  7451  0FA5  0008               	return
  7452  0FA6                     l3739:	
  7453                           
  7454                           ;Dimmer_B1.c: 449: setDimmerLights_Adj(lights, 0);
  7455  0FA6  0020               	movlb	0	; select bank0
  7456  0FA7  01E2               	clrf	setDimmerLights_Adj@status
  7457  0FA8  0866               	movf	setDimmerLights_Main@lights,w
  7458  0FA9  3187  27BD         	fcall	_setDimmerLights_Adj
  7459  0FAB  0008               	return
  7460  0FAC                     __end_of_setDimmerLights_Main:	
  7461                           
  7462                           	psect	text47
  7463  07BD                     __ptext47:	
  7464 ;; *************** function _setDimmerLights_Adj *****************
  7465 ;; Defined at:
  7466 ;;		line 728 in file "../src/Dimmer_B1.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  lights          1    wreg     unsigned char 
  7469 ;;  status          1   66[BANK0 ] unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  lights          1   69[BANK0 ] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;		None               void
  7474 ;; Registers used:
  7475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        4 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    8
  7488 ;; This function calls:
  7489 ;;		_DimmerLightsPointSelect
  7490 ;;		_setPercentValue
  7491 ;; This function is called by:
  7492 ;;		_setDimmerLights_Main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _setDimmerLights_Adj
  7498  07BD                     _setDimmerLights_Adj:	
  7499                           
  7500                           ;incstack = 0
  7501                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7502                           ;setDimmerLights_Adj@lights stored from wreg
  7503  07BD  0020               	movlb	0	; select bank0
  7504  07BE  00E5               	movwf	setDimmerLights_Adj@lights
  7505                           
  7506                           ;Dimmer_B1.c: 729: DimmerLightsPointSelect(lights);
  7507  07BF  0865               	movf	setDimmerLights_Adj@lights,w
  7508  07C0  318A  2256  3187   	fcall	_DimmerLightsPointSelect
  7509                           
  7510                           ;Dimmer_B1.c: 730: if (status == 1) {
  7511  07C3  0020               	movlb	0	; select bank0
  7512  07C4  0862               	movf	setDimmerLights_Adj@status,w
  7513  07C5  3A01               	xorlw	1
  7514  07C6  1D03               	skipz
  7515  07C7  2FD1               	goto	l3439
  7516                           
  7517                           ;Dimmer_B1.c: 731: DimmerLights->AdjFlag = 1;
  7518  07C8  086B               	movf	_DimmerLights,w
  7519  07C9  0086               	movwf	6
  7520  07CA  0187               	clrf	7
  7521  07CB  1581               	bsf	1,3
  7522                           
  7523                           ;Dimmer_B1.c: 732: DimmerLights->Signal = 1;
  7524  07CC  086B               	movf	_DimmerLights,w
  7525  07CD  0086               	movwf	6
  7526  07CE  0187               	clrf	7
  7527  07CF  1481               	bsf	1,1
  7528                           
  7529                           ;Dimmer_B1.c: 733: } else {
  7530  07D0  0008               	return
  7531  07D1                     l3439:	
  7532                           
  7533                           ;Dimmer_B1.c: 734: if (DimmerLights->AdjFlag == 1) {
  7534  07D1  086B               	movf	_DimmerLights,w
  7535  07D2  0086               	movwf	6
  7536  07D3  0187               	clrf	7
  7537  07D4  1D81               	btfss	1,3
  7538  07D5  0008               	return
  7539                           
  7540                           ;Dimmer_B1.c: 735: DimmerLights->Signal = 0;
  7541  07D6  086B               	movf	_DimmerLights,w
  7542  07D7  0086               	movwf	6
  7543  07D8  0187               	clrf	7
  7544  07D9  1081               	bcf	1,1
  7545                           
  7546                           ;Dimmer_B1.c: 736: DimmerLights->AdjFlag = 0;
  7547  07DA  086B               	movf	_DimmerLights,w
  7548  07DB  0086               	movwf	6
  7549  07DC  0187               	clrf	7
  7550  07DD  1181               	bcf	1,3
  7551                           
  7552                           ;Dimmer_B1.c: 737: DimmerLights->MaxmumValue = DimmerLights->DimmingValue;
  7553  07DE  086B               	movf	_DimmerLights,w
  7554  07DF  3E04               	addlw	4
  7555  07E0  0086               	movwf	6
  7556  07E1  0187               	clrf	7
  7557  07E2  0801               	movf	1,w
  7558  07E3  00E3               	movwf	??_setDimmerLights_Adj
  7559  07E4  086B               	movf	_DimmerLights,w
  7560  07E5  3E05               	addlw	5
  7561  07E6  0086               	movwf	6
  7562  07E7  0187               	clrf	7
  7563  07E8  0863               	movf	??_setDimmerLights_Adj,w
  7564  07E9  0081               	movwf	1
  7565                           
  7566                           ;Dimmer_B1.c: 738: product->Data[(20 + lights)]=setPercentValue(DimmerLights->DimmingVal
      +                          ue);
  7567  07EA  086B               	movf	_DimmerLights,w
  7568  07EB  3E04               	addlw	4
  7569  07EC  0086               	movwf	6
  7570  07ED  0187               	clrf	7
  7571  07EE  0801               	movf	1,w
  7572  07EF  3185  25EE         	fcall	_setPercentValue
  7573  07F1  0020               	movlb	0	; select bank0
  7574  07F2  00E3               	movwf	??_setDimmerLights_Adj
  7575  07F3  0865               	movf	setDimmerLights_Adj@lights,w
  7576  07F4  3E14               	addlw	20
  7577  07F5  076F               	addwf	_product,w
  7578  07F6  00E4               	movwf	??_setDimmerLights_Adj+1
  7579  07F7  0864               	movf	??_setDimmerLights_Adj+1,w
  7580  07F8  0086               	movwf	6
  7581  07F9  3001               	movlw	1	; select bank2/3
  7582  07FA  0087               	movwf	7
  7583  07FB  0863               	movf	??_setDimmerLights_Adj,w
  7584  07FC  0081               	movwf	1
  7585                           
  7586                           ;Dimmer_B1.c: 751: ;;
  7587                           ;Dimmer_B1.c: 752: ;;
  7588  07FD  0008               	return
  7589  07FE                     __end_of_setDimmerLights_Adj:	
  7590                           
  7591                           	psect	text48
  7592  0586                     __ptext48:	
  7593 ;; *************** function _setDimmerLights *****************
  7594 ;; Defined at:
  7595 ;;		line 623 in file "../src/Dimmer_B1.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  lights          1    wreg     unsigned char 
  7598 ;;  status          1   66[BANK0 ] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  lights          1   69[BANK0 ] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;		None               void
  7603 ;; Registers used:
  7604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;Total ram usage:        4 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    8
  7617 ;; This function calls:
  7618 ;;		_DimmerLightsPointSelect
  7619 ;;		_setDimmerLights_Line
  7620 ;;		_setLED
  7621 ;;		_setPercentValue
  7622 ;; This function is called by:
  7623 ;;		_setDimmerLights_Main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _setDimmerLights
  7629  0586                     _setDimmerLights:	
  7630                           
  7631                           ;incstack = 0
  7632                           ; Regs used in _setDimmerLights: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7633                           ;setDimmerLights@lights stored from wreg
  7634  0586  0020               	movlb	0	; select bank0
  7635  0587  00E5               	movwf	setDimmerLights@lights
  7636                           
  7637                           ;Dimmer_B1.c: 624: DimmerLightsPointSelect(lights);
  7638  0588  0865               	movf	setDimmerLights@lights,w
  7639  0589  318A  2256  3185   	fcall	_DimmerLightsPointSelect
  7640                           
  7641                           ;Dimmer_B1.c: 631: if (status == 1) {
  7642  058C  0020               	movlb	0	; select bank0
  7643  058D  0862               	movf	setDimmerLights@status,w
  7644  058E  3A01               	xorlw	1
  7645  058F  1D03               	skipz
  7646  0590  2DC5               	goto	l3419
  7647                           
  7648                           ;Dimmer_B1.c: 632: DimmerLights->Loop = 1;
  7649  0591  086B               	movf	_DimmerLights,w
  7650  0592  3E09               	addlw	9
  7651  0593  0086               	movwf	6
  7652  0594  0187               	clrf	7
  7653  0595  1481               	bsf	1,1
  7654                           
  7655                           ;Dimmer_B1.c: 633: setLED(lights, 0);
  7656  0596  01A2               	clrf	setLED@command
  7657  0597  0865               	movf	setDimmerLights@lights,w
  7658  0598  318D  256C  3185   	fcall	_setLED
  7659                           
  7660                           ;Dimmer_B1.c: 634: ;;
  7661                           ;Dimmer_B1.c: 635: setDimmerLights_Line(lights);
  7662  059B  0020               	movlb	0	; select bank0
  7663  059C  0865               	movf	setDimmerLights@lights,w
  7664  059D  318A  228E  3185   	fcall	_setDimmerLights_Line
  7665                           
  7666                           ;Dimmer_B1.c: 636: DimmerLights->StatusFlag = 1;
  7667  05A0  0020               	movlb	0	; select bank0
  7668  05A1  086B               	movf	_DimmerLights,w
  7669  05A2  0086               	movwf	6
  7670  05A3  0187               	clrf	7
  7671  05A4  1701               	bsf	1,6
  7672                           
  7673                           ;Dimmer_B1.c: 643: DimmerLights->DimmingValue = ((char)(65*0.8));
  7674  05A5  3034               	movlw	52
  7675  05A6  00E3               	movwf	??_setDimmerLights
  7676  05A7  086B               	movf	_DimmerLights,w
  7677  05A8  3E04               	addlw	4
  7678  05A9  0086               	movwf	6
  7679  05AA  0187               	clrf	7
  7680  05AB  0863               	movf	??_setDimmerLights,w
  7681  05AC  0081               	movwf	1
  7682                           
  7683                           ;Dimmer_B1.c: 644: product->Data[(20 + lights)]=setPercentValue(((char)(65*0.8)));
  7684  05AD  3034               	movlw	52
  7685  05AE  3185  25EE         	fcall	_setPercentValue
  7686  05B0  0020               	movlb	0	; select bank0
  7687  05B1  00E3               	movwf	??_setDimmerLights
  7688  05B2  0865               	movf	setDimmerLights@lights,w
  7689  05B3  3E14               	addlw	20
  7690  05B4  076F               	addwf	_product,w
  7691  05B5  00E4               	movwf	??_setDimmerLights+1
  7692  05B6  0864               	movf	??_setDimmerLights+1,w
  7693  05B7  0086               	movwf	6
  7694  05B8  3001               	movlw	1	; select bank2/3
  7695  05B9  0087               	movwf	7
  7696  05BA  0863               	movf	??_setDimmerLights,w
  7697  05BB  0081               	movwf	1
  7698                           
  7699                           ;Dimmer_B1.c: 652: DimmerLights->DimmingTimeValue = 7;
  7700  05BC  3007               	movlw	7
  7701  05BD  00E3               	movwf	??_setDimmerLights
  7702  05BE  086B               	movf	_DimmerLights,w
  7703  05BF  3E02               	addlw	2
  7704  05C0  0086               	movwf	6
  7705  05C1  0187               	clrf	7
  7706  05C2  0863               	movf	??_setDimmerLights,w
  7707  05C3  0081               	movwf	1
  7708                           
  7709                           ;Dimmer_B1.c: 654: } else {
  7710  05C4  0008               	return
  7711  05C5                     l3419:	
  7712                           
  7713                           ;Dimmer_B1.c: 655: DimmerLights->StatusFlag = 0;
  7714  05C5  086B               	movf	_DimmerLights,w
  7715  05C6  0086               	movwf	6
  7716  05C7  0187               	clrf	7
  7717  05C8  1301               	bcf	1,6
  7718                           
  7719                           ;Dimmer_B1.c: 656: DimmerLights->Loop = 0;
  7720  05C9  086B               	movf	_DimmerLights,w
  7721  05CA  3E09               	addlw	9
  7722  05CB  0086               	movwf	6
  7723  05CC  0187               	clrf	7
  7724  05CD  1081               	bcf	1,1
  7725                           
  7726                           ;Dimmer_B1.c: 657: setLED(lights, 1);
  7727  05CE  01A2               	clrf	setLED@command
  7728  05CF  0AA2               	incf	setLED@command,f
  7729  05D0  0865               	movf	setDimmerLights@lights,w
  7730  05D1  318D  256C         	fcall	_setLED
  7731                           
  7732                           ;Dimmer_B1.c: 658: ;;
  7733                           ;Dimmer_B1.c: 665: DimmerLights->MosfetClose = 1;
  7734  05D3  0020               	movlb	0	; select bank0
  7735  05D4  086B               	movf	_DimmerLights,w
  7736  05D5  3E08               	addlw	8
  7737  05D6  0086               	movwf	6
  7738  05D7  0187               	clrf	7
  7739  05D8  1781               	bsf	1,7
  7740                           
  7741                           ;Dimmer_B1.c: 668: DimmerLights->AdjFlag = 0;
  7742  05D9  086B               	movf	_DimmerLights,w
  7743  05DA  0086               	movwf	6
  7744  05DB  0187               	clrf	7
  7745  05DC  1181               	bcf	1,3
  7746                           
  7747                           ;Dimmer_B1.c: 669: DimmerLights->AdjStatus = 0;
  7748  05DD  086B               	movf	_DimmerLights,w
  7749  05DE  0086               	movwf	6
  7750  05DF  0187               	clrf	7
  7751  05E0  1201               	bcf	1,4
  7752                           
  7753                           ;Dimmer_B1.c: 670: DimmerLights->AdjRF = 0;
  7754  05E1  086B               	movf	_DimmerLights,w
  7755  05E2  0086               	movwf	6
  7756  05E3  0187               	clrf	7
  7757  05E4  1101               	bcf	1,2
  7758                           
  7759                           ;Dimmer_B1.c: 671: DimmerLights->DimmingTimeValue = 7;
  7760  05E5  3007               	movlw	7
  7761  05E6  00E3               	movwf	??_setDimmerLights
  7762  05E7  086B               	movf	_DimmerLights,w
  7763  05E8  3E02               	addlw	2
  7764  05E9  0086               	movwf	6
  7765  05EA  0187               	clrf	7
  7766  05EB  0863               	movf	??_setDimmerLights,w
  7767  05EC  0081               	movwf	1
  7768  05ED  0008               	return
  7769  05EE                     __end_of_setDimmerLights:	
  7770                           
  7771                           	psect	text49
  7772  05EE                     __ptext49:	
  7773 ;; *************** function _setPercentValue *****************
  7774 ;; Defined at:
  7775 ;;		line 886 in file "../src/Dimmer_B1.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  value           1    wreg     unsigned char 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  value           1   62[BANK0 ] unsigned char 
  7780 ;;  i               3   63[BANK0 ] float 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      unsigned char 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0, pclath, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;Total ram usage:        6 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:    7
  7797 ;; This function calls:
  7798 ;;		___awtoft
  7799 ;;		___ftadd
  7800 ;;		___ftdiv
  7801 ;;		___ftneg
  7802 ;;		___fttol
  7803 ;; This function is called by:
  7804 ;;		_setDimmerLights
  7805 ;;		_setDimmerLights_Adj
  7806 ;;		_Flash_Memory_Initialization
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _setPercentValue
  7812  05EE                     _setPercentValue:	
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
  7816                           ;setPercentValue@value stored from wreg
  7817  05EE  0020               	movlb	0	; select bank0
  7818  05EF  00DE               	movwf	setPercentValue@value
  7819                           
  7820                           ;Dimmer_B1.c: 894: float i = ((char)(65*0.8)) - ((char)(25*0.8));
  7821  05F0  3000               	movlw	0
  7822  05F1  00DF               	movwf	setPercentValue@i
  7823  05F2  3000               	movlw	0
  7824  05F3  00E0               	movwf	setPercentValue@i+1
  7825  05F4  3042               	movlw	66
  7826  05F5  00E1               	movwf	setPercentValue@i+2
  7827                           
  7828                           ;Dimmer_B1.c: 895: i /= 100;
  7829  05F6  3000               	movlw	0
  7830  05F7  00AE               	movwf	___ftdiv@f2
  7831  05F8  30C8               	movlw	200
  7832  05F9  00AF               	movwf	___ftdiv@f2+1
  7833  05FA  3042               	movlw	66
  7834  05FB  00B0               	movwf	___ftdiv@f2+2
  7835  05FC  085F               	movf	setPercentValue@i,w
  7836  05FD  00B1               	movwf	___ftdiv@f1
  7837  05FE  0860               	movf	setPercentValue@i+1,w
  7838  05FF  00B2               	movwf	___ftdiv@f1+1
  7839  0600  0861               	movf	setPercentValue@i+2,w
  7840  0601  00B3               	movwf	___ftdiv@f1+2
  7841  0602  3184  2456  3185   	fcall	___ftdiv
  7842  0605  0020               	movlb	0	; select bank0
  7843  0606  082E               	movf	?___ftdiv,w
  7844  0607  00DF               	movwf	setPercentValue@i
  7845  0608  082F               	movf	?___ftdiv+1,w
  7846  0609  00E0               	movwf	setPercentValue@i+1
  7847  060A  0830               	movf	?___ftdiv+2,w
  7848  060B  00E1               	movwf	setPercentValue@i+2
  7849                           
  7850                           ;Dimmer_B1.c: 897: return (char) (100 - ((((char)(65*0.8)) - value) / i));
  7851  060C  085E               	movf	setPercentValue@value,w
  7852  060D  00DC               	movwf	??_setPercentValue
  7853  060E  01DD               	clrf	??_setPercentValue+1
  7854  060F  09DC               	comf	??_setPercentValue,f
  7855  0610  09DD               	comf	??_setPercentValue+1,f
  7856  0611  0ADC               	incf	??_setPercentValue,f
  7857  0612  1903               	skipnz
  7858  0613  0ADD               	incf	??_setPercentValue+1,f
  7859  0614  085C               	movf	??_setPercentValue,w
  7860  0615  3E34               	addlw	52
  7861  0616  00A8               	movwf	___awtoft@c
  7862  0617  3000               	movlw	0
  7863  0618  3D5D               	addwfc	??_setPercentValue+1,w
  7864  0619  00A9               	movwf	___awtoft@c+1
  7865  061A  318C  241E  3185   	fcall	___awtoft
  7866  061D  0020               	movlb	0	; select bank0
  7867  061E  0828               	movf	?___awtoft,w
  7868  061F  00B1               	movwf	___ftdiv@f1
  7869  0620  0829               	movf	?___awtoft+1,w
  7870  0621  00B2               	movwf	___ftdiv@f1+1
  7871  0622  082A               	movf	?___awtoft+2,w
  7872  0623  00B3               	movwf	___ftdiv@f1+2
  7873  0624  085F               	movf	setPercentValue@i,w
  7874  0625  00AE               	movwf	___ftdiv@f2
  7875  0626  0860               	movf	setPercentValue@i+1,w
  7876  0627  00AF               	movwf	___ftdiv@f2+1
  7877  0628  0861               	movf	setPercentValue@i+2,w
  7878  0629  00B0               	movwf	___ftdiv@f2+2
  7879  062A  3184  2456  3185   	fcall	___ftdiv
  7880  062D  0020               	movlb	0	; select bank0
  7881  062E  082E               	movf	?___ftdiv,w
  7882  062F  00BE               	movwf	___ftneg@f1
  7883  0630  082F               	movf	?___ftdiv+1,w
  7884  0631  00BF               	movwf	___ftneg@f1+1
  7885  0632  0830               	movf	?___ftdiv+2,w
  7886  0633  00C0               	movwf	___ftneg@f1+2
  7887  0634  318A  2213  3185   	fcall	___ftneg
  7888  0637  0020               	movlb	0	; select bank0
  7889  0638  083E               	movf	?___ftneg,w
  7890  0639  00C4               	movwf	___ftadd@f2
  7891  063A  083F               	movf	?___ftneg+1,w
  7892  063B  00C5               	movwf	___ftadd@f2+1
  7893  063C  0840               	movf	?___ftneg+2,w
  7894  063D  00C6               	movwf	___ftadd@f2+2
  7895  063E  3000               	movlw	0
  7896  063F  00C1               	movwf	___ftadd@f1
  7897  0640  30C8               	movlw	200
  7898  0641  00C2               	movwf	___ftadd@f1+1
  7899  0642  3042               	movlw	66
  7900  0643  00C3               	movwf	___ftadd@f1+2
  7901  0644  3182  2284  3185   	fcall	___ftadd
  7902  0647  0020               	movlb	0	; select bank0
  7903  0648  0841               	movf	?___ftadd,w
  7904  0649  00CE               	movwf	___fttol@f1
  7905  064A  0842               	movf	?___ftadd+1,w
  7906  064B  00CF               	movwf	___fttol@f1+1
  7907  064C  0843               	movf	?___ftadd+2,w
  7908  064D  00D0               	movwf	___fttol@f1+2
  7909  064E  3184  24FF         	fcall	___fttol
  7910  0650  0020               	movlb	0	; select bank0
  7911  0651  084E               	movf	?___fttol,w
  7912  0652  0008               	return
  7913  0653                     __end_of_setPercentValue:	
  7914                           
  7915                           	psect	text50
  7916  04FF                     __ptext50:	
  7917 ;; *************** function ___fttol *****************
  7918 ;; Defined at:
  7919 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  f1              3   46[BANK0 ] float 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  lval            4   55[BANK0 ] unsigned long 
  7924 ;;  exp1            1   59[BANK0 ] unsigned char 
  7925 ;;  sign1           1   54[BANK0 ] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  4   46[BANK0 ] long 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;Total ram usage:       14 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    5
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_setPercentValue
  7946 ;;		_getPercentValue
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function ___fttol
  7952  04FF                     ___fttol:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7956  04FF  0020               	movlb	0	; select bank0
  7957  0500  084E               	movf	___fttol@f1,w
  7958  0501  00D2               	movwf	??___fttol
  7959  0502  084F               	movf	___fttol@f1+1,w
  7960  0503  00D3               	movwf	??___fttol+1
  7961  0504  0850               	movf	___fttol@f1+2,w
  7962  0505  00D4               	movwf	??___fttol+2
  7963  0506  1003               	clrc
  7964  0507  0D53               	rlf	??___fttol+1,w
  7965  0508  0D54               	rlf	??___fttol+2,w
  7966  0509  00D5               	movwf	??___fttol+3
  7967  050A  0855               	movf	??___fttol+3,w
  7968  050B  00DB               	movwf	___fttol@exp1
  7969  050C  08DB               	movf	___fttol@exp1,f
  7970  050D  1D03               	skipz
  7971  050E  2D18               	goto	l3235
  7972  050F  3000               	movlw	0
  7973  0510  00D1               	movwf	?___fttol+3
  7974  0511  3000               	movlw	0
  7975  0512  00D0               	movwf	?___fttol+2
  7976  0513  3000               	movlw	0
  7977  0514  00CF               	movwf	?___fttol+1
  7978  0515  3000               	movlw	0
  7979  0516  00CE               	movwf	?___fttol
  7980  0517  0008               	return
  7981  0518                     l3235:	
  7982  0518  084E               	movf	___fttol@f1,w
  7983  0519  00D2               	movwf	??___fttol
  7984  051A  084F               	movf	___fttol@f1+1,w
  7985  051B  00D3               	movwf	??___fttol+1
  7986  051C  0850               	movf	___fttol@f1+2,w
  7987  051D  00D4               	movwf	??___fttol+2
  7988  051E  3017               	movlw	23
  7989  051F                     u2605:	
  7990  051F  36D4               	lsrf	??___fttol+2,f
  7991  0520  0CD3               	rrf	??___fttol+1,f
  7992  0521  0CD2               	rrf	??___fttol,f
  7993  0522  0B89               	decfsz	9,f
  7994  0523  2D1F               	goto	u2605
  7995  0524  0852               	movf	??___fttol,w
  7996  0525  00D5               	movwf	??___fttol+3
  7997  0526  0855               	movf	??___fttol+3,w
  7998  0527  00D6               	movwf	___fttol@sign1
  7999  0528  17CF               	bsf	___fttol@f1+1,7
  8000  0529  30FF               	movlw	255
  8001  052A  05CE               	andwf	___fttol@f1,f
  8002  052B  30FF               	movlw	255
  8003  052C  05CF               	andwf	___fttol@f1+1,f
  8004  052D  3000               	movlw	0
  8005  052E  05D0               	andwf	___fttol@f1+2,f
  8006  052F  084E               	movf	___fttol@f1,w
  8007  0530  00D7               	movwf	___fttol@lval
  8008  0531  084F               	movf	___fttol@f1+1,w
  8009  0532  00D8               	movwf	___fttol@lval+1
  8010  0533  0850               	movf	___fttol@f1+2,w
  8011  0534  00D9               	movwf	___fttol@lval+2
  8012  0535  01DA               	clrf	___fttol@lval+3
  8013  0536  308E               	movlw	142
  8014  0537  02DB               	subwf	___fttol@exp1,f
  8015  0538  1FDB               	btfss	___fttol@exp1,7
  8016  0539  2D56               	goto	l3255
  8017  053A  085B               	movf	___fttol@exp1,w
  8018  053B  3A80               	xorlw	128
  8019  053C  3E8F               	addlw	143
  8020  053D  1803               	skipnc
  8021  053E  2D48               	goto	l3253
  8022  053F  3000               	movlw	0
  8023  0540  00D1               	movwf	?___fttol+3
  8024  0541  3000               	movlw	0
  8025  0542  00D0               	movwf	?___fttol+2
  8026  0543  3000               	movlw	0
  8027  0544  00CF               	movwf	?___fttol+1
  8028  0545  3000               	movlw	0
  8029  0546  00CE               	movwf	?___fttol
  8030  0547  0008               	return
  8031  0548                     l3253:	
  8032  0548  3001               	movlw	1
  8033  0549                     u2635:	
  8034  0549  36DA               	lsrf	___fttol@lval+3,f
  8035  054A  0CD9               	rrf	___fttol@lval+2,f
  8036  054B  0CD8               	rrf	___fttol@lval+1,f
  8037  054C  0CD7               	rrf	___fttol@lval,f
  8038  054D  0B89               	decfsz	9,f
  8039  054E  2D49               	goto	u2635
  8040  054F  3001               	movlw	1
  8041  0550  00D2               	movwf	??___fttol
  8042  0551  0852               	movf	??___fttol,w
  8043  0552  07DB               	addwf	___fttol@exp1,f
  8044  0553  1903               	btfsc	3,2
  8045  0554  2D6F               	goto	l3265
  8046  0555  2D48               	goto	l3253
  8047  0556                     l3255:	
  8048  0556  3018               	movlw	24
  8049  0557  025B               	subwf	___fttol@exp1,w
  8050  0558  1C03               	skipc
  8051  0559  2D6C               	goto	l3263
  8052  055A  3000               	movlw	0
  8053  055B  00D1               	movwf	?___fttol+3
  8054  055C  3000               	movlw	0
  8055  055D  00D0               	movwf	?___fttol+2
  8056  055E  3000               	movlw	0
  8057  055F  00CF               	movwf	?___fttol+1
  8058  0560  3000               	movlw	0
  8059  0561  00CE               	movwf	?___fttol
  8060  0562  0008               	return
  8061  0563                     l3261:	
  8062  0563  3001               	movlw	1
  8063  0564                     u2665:	
  8064  0564  35D7               	lslf	___fttol@lval,f
  8065  0565  0DD8               	rlf	___fttol@lval+1,f
  8066  0566  0DD9               	rlf	___fttol@lval+2,f
  8067  0567  0DDA               	rlf	___fttol@lval+3,f
  8068  0568  0B89               	decfsz	9,f
  8069  0569  2D64               	goto	u2665
  8070  056A  3001               	movlw	1
  8071  056B  02DB               	subwf	___fttol@exp1,f
  8072  056C                     l3263:	
  8073  056C  08DB               	movf	___fttol@exp1,f
  8074  056D  1D03               	skipz
  8075  056E  2D63               	goto	l3261
  8076  056F                     l3265:	
  8077  056F  0856               	movf	___fttol@sign1,w
  8078  0570  1903               	btfsc	3,2
  8079  0571  2D7D               	goto	l3269
  8080  0572  09D7               	comf	___fttol@lval,f
  8081  0573  09D8               	comf	___fttol@lval+1,f
  8082  0574  09D9               	comf	___fttol@lval+2,f
  8083  0575  09DA               	comf	___fttol@lval+3,f
  8084  0576  0AD7               	incf	___fttol@lval,f
  8085  0577  1903               	skipnz
  8086  0578  0AD8               	incf	___fttol@lval+1,f
  8087  0579  1903               	skipnz
  8088  057A  0AD9               	incf	___fttol@lval+2,f
  8089  057B  1903               	skipnz
  8090  057C  0ADA               	incf	___fttol@lval+3,f
  8091  057D                     l3269:	
  8092  057D  085A               	movf	___fttol@lval+3,w
  8093  057E  00D1               	movwf	?___fttol+3
  8094  057F  0859               	movf	___fttol@lval+2,w
  8095  0580  00D0               	movwf	?___fttol+2
  8096  0581  0858               	movf	___fttol@lval+1,w
  8097  0582  00CF               	movwf	?___fttol+1
  8098  0583  0857               	movf	___fttol@lval,w
  8099  0584  00CE               	movwf	?___fttol
  8100  0585  0008               	return
  8101  0586                     __end_of___fttol:	
  8102                           
  8103                           	psect	text51
  8104  0A13                     __ptext51:	
  8105 ;; *************** function ___ftneg *****************
  8106 ;; Defined at:
  8107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  f1              3   30[BANK0 ] float 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  3   30[BANK0 ] float 
  8114 ;; Registers used:
  8115 ;;		wreg
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        3 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    5
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_setPercentValue
  8132 ;;		_getPercentValue
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function ___ftneg
  8138  0A13                     ___ftneg:	
  8139                           
  8140                           ;incstack = 0
  8141                           ; Regs used in ___ftneg: [wreg]
  8142  0A13  0020               	movlb	0	; select bank0
  8143  0A14  0840               	movf	___ftneg@f1+2,w
  8144  0A15  043F               	iorwf	___ftneg@f1+1,w
  8145  0A16  043E               	iorwf	___ftneg@f1,w
  8146  0A17  1903               	skipnz
  8147  0A18  0008               	return
  8148  0A19  3080               	movlw	128
  8149  0A1A  06C0               	xorwf	___ftneg@f1+2,f
  8150  0A1B  0008               	return
  8151  0A1C                     __end_of___ftneg:	
  8152                           
  8153                           	psect	text52
  8154  0456                     __ptext52:	
  8155 ;; *************** function ___ftdiv *****************
  8156 ;; Defined at:
  8157 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  f2              3   14[BANK0 ] float 
  8160 ;;  f1              3   17[BANK0 ] float 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  f3              3   25[BANK0 ] float 
  8163 ;;  sign            1   29[BANK0 ] unsigned char 
  8164 ;;  exp             1   28[BANK0 ] unsigned char 
  8165 ;;  cntr            1   24[BANK0 ] unsigned char 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  3   14[BANK0 ] float 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0, pclath, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;Total ram usage:       16 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    6
  8182 ;; This function calls:
  8183 ;;		___ftpack
  8184 ;; This function is called by:
  8185 ;;		_setPercentValue
  8186 ;;		_getPercentValue
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function ___ftdiv
  8192  0456                     ___ftdiv:	
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8196  0456  0020               	movlb	0	; select bank0
  8197  0457  0831               	movf	___ftdiv@f1,w
  8198  0458  00B4               	movwf	??___ftdiv
  8199  0459  0832               	movf	___ftdiv@f1+1,w
  8200  045A  00B5               	movwf	??___ftdiv+1
  8201  045B  0833               	movf	___ftdiv@f1+2,w
  8202  045C  00B6               	movwf	??___ftdiv+2
  8203  045D  1003               	clrc
  8204  045E  0D35               	rlf	??___ftdiv+1,w
  8205  045F  0D36               	rlf	??___ftdiv+2,w
  8206  0460  00B7               	movwf	??___ftdiv+3
  8207  0461  0837               	movf	??___ftdiv+3,w
  8208  0462  00BC               	movwf	___ftdiv@exp
  8209  0463  08BC               	movf	___ftdiv@exp,f
  8210  0464  1D03               	skipz
  8211  0465  2C6D               	goto	l3185
  8212  0466  3000               	movlw	0
  8213  0467  00AE               	movwf	?___ftdiv
  8214  0468  3000               	movlw	0
  8215  0469  00AF               	movwf	?___ftdiv+1
  8216  046A  3000               	movlw	0
  8217  046B  00B0               	movwf	?___ftdiv+2
  8218  046C  0008               	return
  8219  046D                     l3185:	
  8220  046D  082E               	movf	___ftdiv@f2,w
  8221  046E  00B4               	movwf	??___ftdiv
  8222  046F  082F               	movf	___ftdiv@f2+1,w
  8223  0470  00B5               	movwf	??___ftdiv+1
  8224  0471  0830               	movf	___ftdiv@f2+2,w
  8225  0472  00B6               	movwf	??___ftdiv+2
  8226  0473  1003               	clrc
  8227  0474  0D35               	rlf	??___ftdiv+1,w
  8228  0475  0D36               	rlf	??___ftdiv+2,w
  8229  0476  00B7               	movwf	??___ftdiv+3
  8230  0477  0837               	movf	??___ftdiv+3,w
  8231  0478  00BD               	movwf	___ftdiv@sign
  8232  0479  08BD               	movf	___ftdiv@sign,f
  8233  047A  1D03               	skipz
  8234  047B  2C83               	goto	l3191
  8235  047C  3000               	movlw	0
  8236  047D  00AE               	movwf	?___ftdiv
  8237  047E  3000               	movlw	0
  8238  047F  00AF               	movwf	?___ftdiv+1
  8239  0480  3000               	movlw	0
  8240  0481  00B0               	movwf	?___ftdiv+2
  8241  0482  0008               	return
  8242  0483                     l3191:	
  8243  0483  3000               	movlw	0
  8244  0484  00B9               	movwf	___ftdiv@f3
  8245  0485  3000               	movlw	0
  8246  0486  00BA               	movwf	___ftdiv@f3+1
  8247  0487  3000               	movlw	0
  8248  0488  00BB               	movwf	___ftdiv@f3+2
  8249  0489  3089               	movlw	137
  8250  048A  073D               	addwf	___ftdiv@sign,w
  8251  048B  00B4               	movwf	??___ftdiv
  8252  048C  0834               	movf	??___ftdiv,w
  8253  048D  02BC               	subwf	___ftdiv@exp,f
  8254  048E  0831               	movf	___ftdiv@f1,w
  8255  048F  00B4               	movwf	??___ftdiv
  8256  0490  0832               	movf	___ftdiv@f1+1,w
  8257  0491  00B5               	movwf	??___ftdiv+1
  8258  0492  0833               	movf	___ftdiv@f1+2,w
  8259  0493  00B6               	movwf	??___ftdiv+2
  8260  0494  3010               	movlw	16
  8261  0495                     u2525:	
  8262  0495  36B6               	lsrf	??___ftdiv+2,f
  8263  0496  0CB5               	rrf	??___ftdiv+1,f
  8264  0497  0CB4               	rrf	??___ftdiv,f
  8265  0498  0B89               	decfsz	9,f
  8266  0499  2C95               	goto	u2525
  8267  049A  0834               	movf	??___ftdiv,w
  8268  049B  00B7               	movwf	??___ftdiv+3
  8269  049C  0837               	movf	??___ftdiv+3,w
  8270  049D  00BD               	movwf	___ftdiv@sign
  8271  049E  082E               	movf	___ftdiv@f2,w
  8272  049F  00B4               	movwf	??___ftdiv
  8273  04A0  082F               	movf	___ftdiv@f2+1,w
  8274  04A1  00B5               	movwf	??___ftdiv+1
  8275  04A2  0830               	movf	___ftdiv@f2+2,w
  8276  04A3  00B6               	movwf	??___ftdiv+2
  8277  04A4  3010               	movlw	16
  8278  04A5                     u2535:	
  8279  04A5  36B6               	lsrf	??___ftdiv+2,f
  8280  04A6  0CB5               	rrf	??___ftdiv+1,f
  8281  04A7  0CB4               	rrf	??___ftdiv,f
  8282  04A8  0B89               	decfsz	9,f
  8283  04A9  2CA5               	goto	u2535
  8284  04AA  0834               	movf	??___ftdiv,w
  8285  04AB  00B7               	movwf	??___ftdiv+3
  8286  04AC  0837               	movf	??___ftdiv+3,w
  8287  04AD  06BD               	xorwf	___ftdiv@sign,f
  8288  04AE  3080               	movlw	128
  8289  04AF  00B4               	movwf	??___ftdiv
  8290  04B0  0834               	movf	??___ftdiv,w
  8291  04B1  05BD               	andwf	___ftdiv@sign,f
  8292  04B2  17B2               	bsf	___ftdiv@f1+1,7
  8293  04B3  30FF               	movlw	255
  8294  04B4  05B1               	andwf	___ftdiv@f1,f
  8295  04B5  30FF               	movlw	255
  8296  04B6  05B2               	andwf	___ftdiv@f1+1,f
  8297  04B7  3000               	movlw	0
  8298  04B8  05B3               	andwf	___ftdiv@f1+2,f
  8299  04B9  17AF               	bsf	___ftdiv@f2+1,7
  8300  04BA  30FF               	movlw	255
  8301  04BB  05AE               	andwf	___ftdiv@f2,f
  8302  04BC  30FF               	movlw	255
  8303  04BD  05AF               	andwf	___ftdiv@f2+1,f
  8304  04BE  3000               	movlw	0
  8305  04BF  05B0               	andwf	___ftdiv@f2+2,f
  8306  04C0  3018               	movlw	24
  8307  04C1  00B4               	movwf	??___ftdiv
  8308  04C2  0834               	movf	??___ftdiv,w
  8309  04C3  00B8               	movwf	___ftdiv@cntr
  8310  04C4                     l3205:	
  8311  04C4  3001               	movlw	1
  8312  04C5                     u2545:	
  8313  04C5  35B9               	lslf	___ftdiv@f3,f
  8314  04C6  0DBA               	rlf	___ftdiv@f3+1,f
  8315  04C7  0DBB               	rlf	___ftdiv@f3+2,f
  8316  04C8  0B89               	decfsz	9,f
  8317  04C9  2CC5               	goto	u2545
  8318  04CA  0830               	movf	___ftdiv@f2+2,w
  8319  04CB  0233               	subwf	___ftdiv@f1+2,w
  8320  04CC  1D03               	skipz
  8321  04CD  2CD4               	goto	u2555
  8322  04CE  082F               	movf	___ftdiv@f2+1,w
  8323  04CF  0232               	subwf	___ftdiv@f1+1,w
  8324  04D0  1D03               	skipz
  8325  04D1  2CD4               	goto	u2555
  8326  04D2  082E               	movf	___ftdiv@f2,w
  8327  04D3  0231               	subwf	___ftdiv@f1,w
  8328  04D4                     u2555:	
  8329  04D4  1C03               	skipc
  8330  04D5  2CDD               	goto	l3213
  8331  04D6  082E               	movf	___ftdiv@f2,w
  8332  04D7  02B1               	subwf	___ftdiv@f1,f
  8333  04D8  082F               	movf	___ftdiv@f2+1,w
  8334  04D9  3BB2               	subwfb	___ftdiv@f1+1,f
  8335  04DA  0830               	movf	___ftdiv@f2+2,w
  8336  04DB  3BB3               	subwfb	___ftdiv@f1+2,f
  8337  04DC  1439               	bsf	___ftdiv@f3,0
  8338  04DD                     l3213:	
  8339  04DD  3001               	movlw	1
  8340  04DE                     u2565:	
  8341  04DE  35B1               	lslf	___ftdiv@f1,f
  8342  04DF  0DB2               	rlf	___ftdiv@f1+1,f
  8343  04E0  0DB3               	rlf	___ftdiv@f1+2,f
  8344  04E1  0B89               	decfsz	9,f
  8345  04E2  2CDE               	goto	u2565
  8346  04E3  3001               	movlw	1
  8347  04E4  02B8               	subwf	___ftdiv@cntr,f
  8348  04E5  1D03               	btfss	3,2
  8349  04E6  2CC4               	goto	l3205
  8350  04E7  0839               	movf	___ftdiv@f3,w
  8351  04E8  00A0               	movwf	___ftpack@arg
  8352  04E9  083A               	movf	___ftdiv@f3+1,w
  8353  04EA  00A1               	movwf	___ftpack@arg+1
  8354  04EB  083B               	movf	___ftdiv@f3+2,w
  8355  04EC  00A2               	movwf	___ftpack@arg+2
  8356  04ED  083C               	movf	___ftdiv@exp,w
  8357  04EE  00B4               	movwf	??___ftdiv
  8358  04EF  0834               	movf	??___ftdiv,w
  8359  04F0  00A3               	movwf	___ftpack@exp
  8360  04F1  083D               	movf	___ftdiv@sign,w
  8361  04F2  00B5               	movwf	??___ftdiv+1
  8362  04F3  0835               	movf	??___ftdiv+1,w
  8363  04F4  00A4               	movwf	___ftpack@sign
  8364  04F5  3186  2653         	fcall	___ftpack
  8365  04F7  0020               	movlb	0	; select bank0
  8366  04F8  0820               	movf	?___ftpack,w
  8367  04F9  00AE               	movwf	?___ftdiv
  8368  04FA  0821               	movf	?___ftpack+1,w
  8369  04FB  00AF               	movwf	?___ftdiv+1
  8370  04FC  0822               	movf	?___ftpack+2,w
  8371  04FD  00B0               	movwf	?___ftdiv+2
  8372  04FE  0008               	return
  8373  04FF                     __end_of___ftdiv:	
  8374                           
  8375                           	psect	text53
  8376  0284                     __ptext53:	
  8377 ;; *************** function ___ftadd *****************
  8378 ;; Defined at:
  8379 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  f1              3   33[BANK0 ] float 
  8382 ;;  f2              3   36[BANK0 ] float 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  exp1            1   45[BANK0 ] unsigned char 
  8385 ;;  exp2            1   44[BANK0 ] unsigned char 
  8386 ;;  sign            1   43[BANK0 ] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  3   33[BANK0 ] float 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0, pclath, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;Total ram usage:       13 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:    6
  8403 ;; This function calls:
  8404 ;;		___ftpack
  8405 ;; This function is called by:
  8406 ;;		_setPercentValue
  8407 ;;		_getPercentValue
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function ___ftadd
  8413  0284                     ___ftadd:	
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8417  0284  0020               	movlb	0	; select bank0
  8418  0285  0841               	movf	___ftadd@f1,w
  8419  0286  00C7               	movwf	??___ftadd
  8420  0287  0842               	movf	___ftadd@f1+1,w
  8421  0288  00C8               	movwf	??___ftadd+1
  8422  0289  0843               	movf	___ftadd@f1+2,w
  8423  028A  00C9               	movwf	??___ftadd+2
  8424  028B  1003               	clrc
  8425  028C  0D48               	rlf	??___ftadd+1,w
  8426  028D  0D49               	rlf	??___ftadd+2,w
  8427  028E  00CA               	movwf	??___ftadd+3
  8428  028F  084A               	movf	??___ftadd+3,w
  8429  0290  00CD               	movwf	___ftadd@exp1
  8430  0291  0844               	movf	___ftadd@f2,w
  8431  0292  00C7               	movwf	??___ftadd
  8432  0293  0845               	movf	___ftadd@f2+1,w
  8433  0294  00C8               	movwf	??___ftadd+1
  8434  0295  0846               	movf	___ftadd@f2+2,w
  8435  0296  00C9               	movwf	??___ftadd+2
  8436  0297  1003               	clrc
  8437  0298  0D48               	rlf	??___ftadd+1,w
  8438  0299  0D49               	rlf	??___ftadd+2,w
  8439  029A  00CA               	movwf	??___ftadd+3
  8440  029B  084A               	movf	??___ftadd+3,w
  8441  029C  00CC               	movwf	___ftadd@exp2
  8442  029D  084D               	movf	___ftadd@exp1,w
  8443  029E  1903               	btfsc	3,2
  8444  029F  2AAC               	goto	l3115
  8445  02A0  084C               	movf	___ftadd@exp2,w
  8446  02A1  024D               	subwf	___ftadd@exp1,w
  8447  02A2  1803               	skipnc
  8448  02A3  2AB3               	goto	l3119
  8449  02A4  034D               	decf	___ftadd@exp1,w
  8450  02A5  3AFF               	xorlw	255
  8451  02A6  074C               	addwf	___ftadd@exp2,w
  8452  02A7  00C7               	movwf	??___ftadd
  8453  02A8  3019               	movlw	25
  8454  02A9  0247               	subwf	??___ftadd,w
  8455  02AA  1C03               	skipc
  8456  02AB  2AB3               	goto	l3119
  8457  02AC                     l3115:	
  8458  02AC  0844               	movf	___ftadd@f2,w
  8459  02AD  00C1               	movwf	?___ftadd
  8460  02AE  0845               	movf	___ftadd@f2+1,w
  8461  02AF  00C2               	movwf	?___ftadd+1
  8462  02B0  0846               	movf	___ftadd@f2+2,w
  8463  02B1  00C3               	movwf	?___ftadd+2
  8464  02B2  0008               	return
  8465  02B3                     l3119:	
  8466  02B3  084C               	movf	___ftadd@exp2,w
  8467  02B4  1903               	btfsc	3,2
  8468  02B5  0008               	return
  8469  02B6  084D               	movf	___ftadd@exp1,w
  8470  02B7  024C               	subwf	___ftadd@exp2,w
  8471  02B8  1803               	skipnc
  8472  02B9  2AC2               	goto	l3125
  8473  02BA  034C               	decf	___ftadd@exp2,w
  8474  02BB  3AFF               	xorlw	255
  8475  02BC  074D               	addwf	___ftadd@exp1,w
  8476  02BD  00C7               	movwf	??___ftadd
  8477  02BE  3019               	movlw	25
  8478  02BF  0247               	subwf	??___ftadd,w
  8479  02C0  1803               	btfsc	3,0
  8480  02C1  0008               	return
  8481  02C2                     l3125:	
  8482  02C2  3006               	movlw	6
  8483  02C3  00C7               	movwf	??___ftadd
  8484  02C4  0847               	movf	??___ftadd,w
  8485  02C5  00CB               	movwf	___ftadd@sign
  8486  02C6  1BC3               	btfsc	___ftadd@f1+2,7
  8487  02C7  17CB               	bsf	___ftadd@sign,7
  8488  02C8  1BC6               	btfsc	___ftadd@f2+2,7
  8489  02C9  174B               	bsf	___ftadd@sign,6
  8490  02CA  17C2               	bsf	___ftadd@f1+1,7
  8491  02CB  30FF               	movlw	255
  8492  02CC  05C1               	andwf	___ftadd@f1,f
  8493  02CD  30FF               	movlw	255
  8494  02CE  05C2               	andwf	___ftadd@f1+1,f
  8495  02CF  3000               	movlw	0
  8496  02D0  05C3               	andwf	___ftadd@f1+2,f
  8497  02D1  17C5               	bsf	___ftadd@f2+1,7
  8498  02D2  30FF               	movlw	255
  8499  02D3  05C4               	andwf	___ftadd@f2,f
  8500  02D4  30FF               	movlw	255
  8501  02D5  05C5               	andwf	___ftadd@f2+1,f
  8502  02D6  3000               	movlw	0
  8503  02D7  05C6               	andwf	___ftadd@f2+2,f
  8504  02D8  084C               	movf	___ftadd@exp2,w
  8505  02D9  024D               	subwf	___ftadd@exp1,w
  8506  02DA  1803               	skipnc
  8507  02DB  2AFE               	goto	l3147
  8508  02DC                     l3137:	
  8509  02DC  3001               	movlw	1
  8510  02DD                     u2365:	
  8511  02DD  35C4               	lslf	___ftadd@f2,f
  8512  02DE  0DC5               	rlf	___ftadd@f2+1,f
  8513  02DF  0DC6               	rlf	___ftadd@f2+2,f
  8514  02E0  0B89               	decfsz	9,f
  8515  02E1  2ADD               	goto	u2365
  8516  02E2  3001               	movlw	1
  8517  02E3  02CC               	subwf	___ftadd@exp2,f
  8518  02E4  084C               	movf	___ftadd@exp2,w
  8519  02E5  064D               	xorwf	___ftadd@exp1,w
  8520  02E6  1903               	skipnz
  8521  02E7  2AF9               	goto	l3145
  8522  02E8  3001               	movlw	1
  8523  02E9  02CB               	subwf	___ftadd@sign,f
  8524  02EA  084B               	movf	___ftadd@sign,w
  8525  02EB  3907               	andlw	7
  8526  02EC  1903               	btfsc	3,2
  8527  02ED  2AF9               	goto	l3145
  8528  02EE  2ADC               	goto	l3137
  8529  02EF                     l3143:	
  8530  02EF  3001               	movlw	1
  8531  02F0                     u2395:	
  8532  02F0  36C3               	lsrf	___ftadd@f1+2,f
  8533  02F1  0CC2               	rrf	___ftadd@f1+1,f
  8534  02F2  0CC1               	rrf	___ftadd@f1,f
  8535  02F3  0B89               	decfsz	9,f
  8536  02F4  2AF0               	goto	u2395
  8537  02F5  3001               	movlw	1
  8538  02F6  00C7               	movwf	??___ftadd
  8539  02F7  0847               	movf	??___ftadd,w
  8540  02F8  07CD               	addwf	___ftadd@exp1,f
  8541  02F9                     l3145:	
  8542  02F9  084D               	movf	___ftadd@exp1,w
  8543  02FA  064C               	xorwf	___ftadd@exp2,w
  8544  02FB  1903               	btfsc	3,2
  8545  02FC  2B23               	goto	l1486
  8546  02FD  2AEF               	goto	l3143
  8547  02FE                     l3147:	
  8548  02FE  084D               	movf	___ftadd@exp1,w
  8549  02FF  024C               	subwf	___ftadd@exp2,w
  8550  0300  1803               	skipnc
  8551  0301  2B23               	goto	l1486
  8552  0302                     l3149:	
  8553  0302  3001               	movlw	1
  8554  0303                     u2425:	
  8555  0303  35C1               	lslf	___ftadd@f1,f
  8556  0304  0DC2               	rlf	___ftadd@f1+1,f
  8557  0305  0DC3               	rlf	___ftadd@f1+2,f
  8558  0306  0B89               	decfsz	9,f
  8559  0307  2B03               	goto	u2425
  8560  0308  3001               	movlw	1
  8561  0309  02CD               	subwf	___ftadd@exp1,f
  8562  030A  084C               	movf	___ftadd@exp2,w
  8563  030B  064D               	xorwf	___ftadd@exp1,w
  8564  030C  1903               	skipnz
  8565  030D  2B1F               	goto	l3157
  8566  030E  3001               	movlw	1
  8567  030F  02CB               	subwf	___ftadd@sign,f
  8568  0310  084B               	movf	___ftadd@sign,w
  8569  0311  3907               	andlw	7
  8570  0312  1903               	btfsc	3,2
  8571  0313  2B1F               	goto	l3157
  8572  0314  2B02               	goto	l3149
  8573  0315                     l3155:	
  8574  0315  3001               	movlw	1
  8575  0316                     u2455:	
  8576  0316  36C6               	lsrf	___ftadd@f2+2,f
  8577  0317  0CC5               	rrf	___ftadd@f2+1,f
  8578  0318  0CC4               	rrf	___ftadd@f2,f
  8579  0319  0B89               	decfsz	9,f
  8580  031A  2B16               	goto	u2455
  8581  031B  3001               	movlw	1
  8582  031C  00C7               	movwf	??___ftadd
  8583  031D  0847               	movf	??___ftadd,w
  8584  031E  07CC               	addwf	___ftadd@exp2,f
  8585  031F                     l3157:	
  8586  031F  084D               	movf	___ftadd@exp1,w
  8587  0320  064C               	xorwf	___ftadd@exp2,w
  8588  0321  1D03               	skipz
  8589  0322  2B15               	goto	l3155
  8590  0323                     l1486:	
  8591  0323  1FCB               	btfss	___ftadd@sign,7
  8592  0324  2B35               	goto	l3161
  8593  0325  30FF               	movlw	255
  8594  0326  06C1               	xorwf	___ftadd@f1,f
  8595  0327  30FF               	movlw	255
  8596  0328  06C2               	xorwf	___ftadd@f1+1,f
  8597  0329  30FF               	movlw	255
  8598  032A  06C3               	xorwf	___ftadd@f1+2,f
  8599  032B  3001               	movlw	1
  8600  032C  07C1               	addwf	___ftadd@f1,f
  8601  032D  3000               	movlw	0
  8602  032E  1803               	skipnc
  8603  032F  3001               	movlw	1
  8604  0330  07C2               	addwf	___ftadd@f1+1,f
  8605  0331  3000               	movlw	0
  8606  0332  1803               	skipnc
  8607  0333  3001               	movlw	1
  8608  0334  07C3               	addwf	___ftadd@f1+2,f
  8609  0335                     l3161:	
  8610  0335  1F4B               	btfss	___ftadd@sign,6
  8611  0336  2B47               	goto	l3165
  8612  0337  30FF               	movlw	255
  8613  0338  06C4               	xorwf	___ftadd@f2,f
  8614  0339  30FF               	movlw	255
  8615  033A  06C5               	xorwf	___ftadd@f2+1,f
  8616  033B  30FF               	movlw	255
  8617  033C  06C6               	xorwf	___ftadd@f2+2,f
  8618  033D  3001               	movlw	1
  8619  033E  07C4               	addwf	___ftadd@f2,f
  8620  033F  3000               	movlw	0
  8621  0340  1803               	skipnc
  8622  0341  3001               	movlw	1
  8623  0342  07C5               	addwf	___ftadd@f2+1,f
  8624  0343  3000               	movlw	0
  8625  0344  1803               	skipnc
  8626  0345  3001               	movlw	1
  8627  0346  07C6               	addwf	___ftadd@f2+2,f
  8628  0347                     l3165:	
  8629  0347  01CB               	clrf	___ftadd@sign
  8630  0348  0841               	movf	___ftadd@f1,w
  8631  0349  07C4               	addwf	___ftadd@f2,f
  8632  034A  0842               	movf	___ftadd@f1+1,w
  8633  034B  3DC5               	addwfc	___ftadd@f2+1,f
  8634  034C  0843               	movf	___ftadd@f1+2,w
  8635  034D  3DC6               	addwfc	___ftadd@f2+2,f
  8636  034E  1FC6               	btfss	___ftadd@f2+2,7
  8637  034F  2B62               	goto	l3175
  8638  0350  30FF               	movlw	255
  8639  0351  06C4               	xorwf	___ftadd@f2,f
  8640  0352  30FF               	movlw	255
  8641  0353  06C5               	xorwf	___ftadd@f2+1,f
  8642  0354  30FF               	movlw	255
  8643  0355  06C6               	xorwf	___ftadd@f2+2,f
  8644  0356  3001               	movlw	1
  8645  0357  07C4               	addwf	___ftadd@f2,f
  8646  0358  3000               	movlw	0
  8647  0359  1803               	skipnc
  8648  035A  3001               	movlw	1
  8649  035B  07C5               	addwf	___ftadd@f2+1,f
  8650  035C  3000               	movlw	0
  8651  035D  1803               	skipnc
  8652  035E  3001               	movlw	1
  8653  035F  07C6               	addwf	___ftadd@f2+2,f
  8654  0360  01CB               	clrf	___ftadd@sign
  8655  0361  0ACB               	incf	___ftadd@sign,f
  8656  0362                     l3175:	
  8657  0362  0844               	movf	___ftadd@f2,w
  8658  0363  00A0               	movwf	___ftpack@arg
  8659  0364  0845               	movf	___ftadd@f2+1,w
  8660  0365  00A1               	movwf	___ftpack@arg+1
  8661  0366  0846               	movf	___ftadd@f2+2,w
  8662  0367  00A2               	movwf	___ftpack@arg+2
  8663  0368  084D               	movf	___ftadd@exp1,w
  8664  0369  00C7               	movwf	??___ftadd
  8665  036A  0847               	movf	??___ftadd,w
  8666  036B  00A3               	movwf	___ftpack@exp
  8667  036C  084B               	movf	___ftadd@sign,w
  8668  036D  00C8               	movwf	??___ftadd+1
  8669  036E  0848               	movf	??___ftadd+1,w
  8670  036F  00A4               	movwf	___ftpack@sign
  8671  0370  3186  2653         	fcall	___ftpack
  8672  0372  0020               	movlb	0	; select bank0
  8673  0373  0820               	movf	?___ftpack,w
  8674  0374  00C1               	movwf	?___ftadd
  8675  0375  0821               	movf	?___ftpack+1,w
  8676  0376  00C2               	movwf	?___ftadd+1
  8677  0377  0822               	movf	?___ftpack+2,w
  8678  0378  00C3               	movwf	?___ftadd+2
  8679  0379  0008               	return
  8680  037A                     __end_of___ftadd:	
  8681                           
  8682                           	psect	text54
  8683  0C1E                     __ptext54:	
  8684 ;; *************** function ___awtoft *****************
  8685 ;; Defined at:
  8686 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  c               2    8[BANK0 ] int 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  sign            1   13[BANK0 ] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  3    8[BANK0 ] float 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8700 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;Total ram usage:        6 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    6
  8707 ;; This function calls:
  8708 ;;		___ftpack
  8709 ;; This function is called by:
  8710 ;;		_setPercentValue
  8711 ;;		_getPercentValue
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function ___awtoft
  8717  0C1E                     ___awtoft:	
  8718                           
  8719                           ;incstack = 0
  8720                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8721  0C1E  0020               	movlb	0	; select bank0
  8722  0C1F  01AD               	clrf	___awtoft@sign
  8723  0C20  1FA9               	btfss	___awtoft@c+1,7
  8724  0C21  2C29               	goto	l3103
  8725  0C22  09A8               	comf	___awtoft@c,f
  8726  0C23  09A9               	comf	___awtoft@c+1,f
  8727  0C24  0AA8               	incf	___awtoft@c,f
  8728  0C25  1903               	skipnz
  8729  0C26  0AA9               	incf	___awtoft@c+1,f
  8730  0C27  01AD               	clrf	___awtoft@sign
  8731  0C28  0AAD               	incf	___awtoft@sign,f
  8732  0C29                     l3103:	
  8733  0C29  0828               	movf	___awtoft@c,w
  8734  0C2A  00A0               	movwf	___ftpack@arg
  8735  0C2B  0829               	movf	___awtoft@c+1,w
  8736  0C2C  00A1               	movwf	___ftpack@arg+1
  8737  0C2D  01A2               	clrf	___ftpack@arg+2
  8738  0C2E  308E               	movlw	142
  8739  0C2F  00AB               	movwf	??___awtoft
  8740  0C30  082B               	movf	??___awtoft,w
  8741  0C31  00A3               	movwf	___ftpack@exp
  8742  0C32  082D               	movf	___awtoft@sign,w
  8743  0C33  00AC               	movwf	??___awtoft+1
  8744  0C34  082C               	movf	??___awtoft+1,w
  8745  0C35  00A4               	movwf	___ftpack@sign
  8746  0C36  3186  2653         	fcall	___ftpack
  8747  0C38  0020               	movlb	0	; select bank0
  8748  0C39  0820               	movf	?___ftpack,w
  8749  0C3A  00A8               	movwf	?___awtoft
  8750  0C3B  0821               	movf	?___ftpack+1,w
  8751  0C3C  00A9               	movwf	?___awtoft+1
  8752  0C3D  0822               	movf	?___ftpack+2,w
  8753  0C3E  00AA               	movwf	?___awtoft+2
  8754  0C3F  0008               	return
  8755  0C40                     __end_of___awtoft:	
  8756                           
  8757                           	psect	text55
  8758  0653                     __ptext55:	
  8759 ;; *************** function ___ftpack *****************
  8760 ;; Defined at:
  8761 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  arg             3    0[BANK0 ] unsigned um
  8764 ;;  exp             1    3[BANK0 ] unsigned char 
  8765 ;;  sign            1    4[BANK0 ] unsigned char 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;		None
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  3    0[BANK0 ] float 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8777 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8780 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;Total ram usage:        8 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    5
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		___awtoft
  8788 ;;		___ftadd
  8789 ;;		___ftdiv
  8790 ;;		___ftmul
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function ___ftpack
  8796  0653                     ___ftpack:	
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8800  0653  0020               	movlb	0	; select bank0
  8801  0654  0823               	movf	___ftpack@exp,w
  8802  0655  1903               	btfsc	3,2
  8803  0656  2E5C               	goto	l3009
  8804  0657  0822               	movf	___ftpack@arg+2,w
  8805  0658  0421               	iorwf	___ftpack@arg+1,w
  8806  0659  0420               	iorwf	___ftpack@arg,w
  8807  065A  1D03               	skipz
  8808  065B  2E6D               	goto	l3015
  8809  065C                     l3009:	
  8810  065C  3000               	movlw	0
  8811  065D  00A0               	movwf	?___ftpack
  8812  065E  3000               	movlw	0
  8813  065F  00A1               	movwf	?___ftpack+1
  8814  0660  3000               	movlw	0
  8815  0661  00A2               	movwf	?___ftpack+2
  8816  0662  0008               	return
  8817  0663                     l3013:	
  8818  0663  3001               	movlw	1
  8819  0664  00A5               	movwf	??___ftpack
  8820  0665  0825               	movf	??___ftpack,w
  8821  0666  07A3               	addwf	___ftpack@exp,f
  8822  0667  3001               	movlw	1
  8823  0668                     u2065:	
  8824  0668  36A2               	lsrf	___ftpack@arg+2,f
  8825  0669  0CA1               	rrf	___ftpack@arg+1,f
  8826  066A  0CA0               	rrf	___ftpack@arg,f
  8827  066B  0B89               	decfsz	9,f
  8828  066C  2E68               	goto	u2065
  8829  066D                     l3015:	
  8830  066D  30FE               	movlw	254
  8831  066E  0522               	andwf	___ftpack@arg+2,w
  8832  066F  1903               	btfsc	3,2
  8833  0670  2E86               	goto	l1457
  8834  0671  2E63               	goto	l3013
  8835  0672                     l3017:	
  8836  0672  3001               	movlw	1
  8837  0673  00A5               	movwf	??___ftpack
  8838  0674  0825               	movf	??___ftpack,w
  8839  0675  07A3               	addwf	___ftpack@exp,f
  8840  0676  3001               	movlw	1
  8841  0677  07A0               	addwf	___ftpack@arg,f
  8842  0678  3000               	movlw	0
  8843  0679  1803               	skipnc
  8844  067A  3001               	movlw	1
  8845  067B  07A1               	addwf	___ftpack@arg+1,f
  8846  067C  3000               	movlw	0
  8847  067D  1803               	skipnc
  8848  067E  3001               	movlw	1
  8849  067F  07A2               	addwf	___ftpack@arg+2,f
  8850  0680  3001               	movlw	1
  8851  0681                     u2085:	
  8852  0681  36A2               	lsrf	___ftpack@arg+2,f
  8853  0682  0CA1               	rrf	___ftpack@arg+1,f
  8854  0683  0CA0               	rrf	___ftpack@arg,f
  8855  0684  0B89               	decfsz	9,f
  8856  0685  2E81               	goto	u2085
  8857  0686                     l1457:	
  8858  0686  30FF               	movlw	255
  8859  0687  0522               	andwf	___ftpack@arg+2,w
  8860  0688  1903               	btfsc	3,2
  8861  0689  2E93               	goto	l3025
  8862  068A  2E72               	goto	l3017
  8863  068B                     l3023:	
  8864  068B  3001               	movlw	1
  8865  068C  02A3               	subwf	___ftpack@exp,f
  8866  068D  3001               	movlw	1
  8867  068E                     u2105:	
  8868  068E  35A0               	lslf	___ftpack@arg,f
  8869  068F  0DA1               	rlf	___ftpack@arg+1,f
  8870  0690  0DA2               	rlf	___ftpack@arg+2,f
  8871  0691  0B89               	decfsz	9,f
  8872  0692  2E8E               	goto	u2105
  8873  0693                     l3025:	
  8874  0693  1FA1               	btfss	___ftpack@arg+1,7
  8875  0694  2E8B               	goto	l3023
  8876  0695  1823               	btfsc	___ftpack@exp,0
  8877  0696  2E9D               	goto	l1463
  8878  0697  30FF               	movlw	255
  8879  0698  05A0               	andwf	___ftpack@arg,f
  8880  0699  307F               	movlw	127
  8881  069A  05A1               	andwf	___ftpack@arg+1,f
  8882  069B  30FF               	movlw	255
  8883  069C  05A2               	andwf	___ftpack@arg+2,f
  8884  069D                     l1463:	
  8885  069D  1003               	clrc
  8886  069E  0CA3               	rrf	___ftpack@exp,f
  8887  069F  0823               	movf	___ftpack@exp,w
  8888  06A0  00A5               	movwf	??___ftpack
  8889  06A1  01A6               	clrf	??___ftpack+1
  8890  06A2  01A7               	clrf	??___ftpack+2
  8891  06A3  3010               	movlw	16
  8892  06A4                     u2135:	
  8893  06A4  35A5               	lslf	??___ftpack,f
  8894  06A5  0DA6               	rlf	??___ftpack+1,f
  8895  06A6  0DA7               	rlf	??___ftpack+2,f
  8896  06A7  0B89               	decfsz	9,f
  8897  06A8  2EA4               	goto	u2135
  8898  06A9  0825               	movf	??___ftpack,w
  8899  06AA  04A0               	iorwf	___ftpack@arg,f
  8900  06AB  0826               	movf	??___ftpack+1,w
  8901  06AC  04A1               	iorwf	___ftpack@arg+1,f
  8902  06AD  0827               	movf	??___ftpack+2,w
  8903  06AE  04A2               	iorwf	___ftpack@arg+2,f
  8904  06AF  0824               	movf	___ftpack@sign,w
  8905  06B0  1903               	btfsc	3,2
  8906  06B1  0008               	return
  8907  06B2  17A2               	bsf	___ftpack@arg+2,7
  8908  06B3  0008               	return
  8909  06B4                     __end_of___ftpack:	
  8910                           
  8911                           	psect	text56
  8912  0D6C                     __ptext56:	
  8913 ;; *************** function _setLED *****************
  8914 ;; Defined at:
  8915 ;;		line 76 in file "../src/LED_B1.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  led             1    wreg     unsigned char 
  8918 ;;  command         1    2[BANK0 ] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  led             1    3[BANK0 ] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;		None               void
  8923 ;; Registers used:
  8924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8930 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;Total ram usage:        2 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    6
  8937 ;; This function calls:
  8938 ;;		_LedPointSelect
  8939 ;; This function is called by:
  8940 ;;		_setDimmerLights
  8941 ;;		_setLED_Initialization
  8942 ;;		_setMain_Exception
  8943 ;;		_setSw_Initialization
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           
  8948                           ;psect for function _setLED
  8949  0D6C                     _setLED:	
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8953                           ;setLED@led stored from wreg
  8954  0D6C  0020               	movlb	0	; select bank0
  8955  0D6D  00A3               	movwf	setLED@led
  8956                           
  8957                           ;LED_B1.c: 77: LedPointSelect(led);
  8958  0D6E  0823               	movf	setLED@led,w
  8959  0D6F  318A  2261  318D   	fcall	_LedPointSelect
  8960                           
  8961                           ;LED_B1.c: 78: if (command == 0) {
  8962  0D72  0020               	movlb	0	; select bank0
  8963  0D73  08A2               	movf	setLED@command,f
  8964  0D74  1D03               	skipz
  8965  0D75  2D7B               	goto	l3343
  8966                           
  8967                           ;LED_B1.c: 107: if (led == 99) {
  8968  0D76  0823               	movf	setLED@led,w
  8969  0D77  3A63               	xorlw	99
  8970  0D78  1D03               	skipz
  8971  0D79  2D7B               	goto	l3343
  8972                           
  8973                           ;LED_B1.c: 111: RB5 = 1;
  8974  0D7A  168D               	bsf	13,5	;volatile
  8975  0D7B                     l3343:	
  8976                           
  8977                           ;LED_B1.c: 113: }
  8978                           ;LED_B1.c: 115: }
  8979                           ;LED_B1.c: 116: if (command == 1) {
  8980  0D7B  0822               	movf	setLED@command,w
  8981  0D7C  3A01               	xorlw	1
  8982  0D7D  1D03               	skipz
  8983  0D7E  2D84               	goto	l3349
  8984                           
  8985                           ;LED_B1.c: 145: if (led == 99) {
  8986  0D7F  0823               	movf	setLED@led,w
  8987  0D80  3A63               	xorlw	99
  8988  0D81  1D03               	skipz
  8989  0D82  2D84               	goto	l3349
  8990                           
  8991                           ;LED_B1.c: 149: RB5 = 0;
  8992  0D83  128D               	bcf	13,5	;volatile
  8993  0D84                     l3349:	
  8994                           
  8995                           ;LED_B1.c: 151: }
  8996                           ;LED_B1.c: 153: }
  8997                           ;LED_B1.c: 154: if (command == 10) {
  8998  0D84  0822               	movf	setLED@command,w
  8999  0D85  3A0A               	xorlw	10
  9000  0D86  1D03               	skipz
  9001  0D87  2D96               	goto	l3357
  9002                           
  9003                           ;LED_B1.c: 155: LED->GO = 0;
  9004  0D88  086C               	movf	_LED,w
  9005  0D89  0086               	movwf	6
  9006  0D8A  0187               	clrf	7
  9007  0D8B  1081               	bcf	1,1
  9008                           
  9009                           ;LED_B1.c: 156: LED->Time = 0;
  9010  0D8C  0A6C               	incf	_LED,w
  9011  0D8D  0086               	movwf	6
  9012  0D8E  0187               	clrf	7
  9013  0D8F  3000               	movlw	0
  9014  0D90  3FC0               	movwi [0]fsr1
  9015  0D91  3FC1               	movwi [1]fsr1
  9016                           
  9017                           ;LED_B1.c: 185: if (led == 99) {
  9018  0D92  0823               	movf	setLED@led,w
  9019  0D93  3A63               	xorlw	99
  9020  0D94  1903               	btfsc	3,2
  9021                           
  9022                           ;LED_B1.c: 189: RB5 = 1;
  9023  0D95  168D               	bsf	13,5	;volatile
  9024  0D96                     l3357:	
  9025                           
  9026                           ;LED_B1.c: 191: }
  9027                           ;LED_B1.c: 193: }
  9028                           ;LED_B1.c: 194: if (command == 11) {
  9029  0D96  0822               	movf	setLED@command,w
  9030  0D97  3A0B               	xorlw	11
  9031  0D98  1D03               	skipz
  9032  0D99  0008               	return
  9033                           
  9034                           ;LED_B1.c: 195: LED->GO = 1;
  9035  0D9A  086C               	movf	_LED,w
  9036  0D9B  0086               	movwf	6
  9037  0D9C  0187               	clrf	7
  9038  0D9D  1481               	bsf	1,1
  9039  0D9E  0008               	return
  9040  0D9F                     __end_of_setLED:	
  9041                           
  9042                           	psect	text57
  9043  0A61                     __ptext57:	
  9044 ;; *************** function _LedPointSelect *****************
  9045 ;; Defined at:
  9046 ;;		line 7 in file "../src/LED_B1.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  led             1    wreg     unsigned char 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  led             1    1[BANK0 ] unsigned char 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;		None               void
  9053 ;; Registers used:
  9054 ;;		wreg
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;Total ram usage:        2 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    5
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_setLED_Initialization
  9071 ;;		_setLED
  9072 ;;		_setLED_Main
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           
  9077                           ;psect for function _LedPointSelect
  9078  0A61                     _LedPointSelect:	
  9079                           
  9080                           ;incstack = 0
  9081                           ; Regs used in _LedPointSelect: [wreg]
  9082                           ;LedPointSelect@led stored from wreg
  9083  0A61  0020               	movlb	0	; select bank0
  9084  0A62  00A1               	movwf	LedPointSelect@led
  9085                           
  9086                           ;LED_B1.c: 24: if (led == 99) {
  9087  0A63  0821               	movf	LedPointSelect@led,w
  9088  0A64  3A63               	xorlw	99
  9089  0A65  1D03               	skipz
  9090  0A66  0008               	return
  9091                           
  9092                           ;LED_B1.c: 25: LED = &VarErrLED;
  9093  0A67  30DA               	movlw	_VarErrLED& (0+255)
  9094  0A68  00A0               	movwf	??_LedPointSelect
  9095  0A69  0820               	movf	??_LedPointSelect,w
  9096  0A6A  00EC               	movwf	_LED
  9097  0A6B  0008               	return
  9098  0A6C                     __end_of_LedPointSelect:	
  9099                           
  9100                           	psect	text58
  9101  0A8E                     __ptext58:	
  9102 ;; *************** function _setDimmerLights_Line *****************
  9103 ;; Defined at:
  9104 ;;		line 679 in file "../src/Dimmer_B1.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  lights          1    wreg     unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  lights          1    0[BANK0 ] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;		None               void
  9111 ;; Registers used:
  9112 ;;		wreg
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:        1 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    5
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_setDimmerLights
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _setDimmerLights_Line
  9134  0A8E                     _setDimmerLights_Line:	
  9135                           
  9136                           ;incstack = 0
  9137                           ; Regs used in _setDimmerLights_Line: [wreg]
  9138                           ;setDimmerLights_Line@lights stored from wreg
  9139  0A8E  0020               	movlb	0	; select bank0
  9140  0A8F  00A0               	movwf	setDimmerLights_Line@lights
  9141                           
  9142                           ;Dimmer_B1.c: 681: DimmerLights1.Line = 0;
  9143  0A90  0021               	movlb	1	; select bank1
  9144  0A91  104B               	bcf	(_DimmerLights1^(0+128)+9),0
  9145                           
  9146                           ;Dimmer_B1.c: 690: if (lights == 1) {
  9147  0A92  0020               	movlb	0	; select bank0
  9148  0A93  0820               	movf	setDimmerLights_Line@lights,w
  9149  0A94  3A01               	xorlw	1
  9150  0A95  1D03               	skipz
  9151  0A96  0008               	return
  9152                           
  9153                           ;Dimmer_B1.c: 691: DimmerLights1.Line = 1;
  9154  0A97  0021               	movlb	1	; select bank1
  9155  0A98  144B               	bsf	(_DimmerLights1^(0+128)+9),0
  9156  0A99  0008               	return
  9157  0A9A                     __end_of_setDimmerLights_Line:	
  9158                           
  9159                           	psect	text59
  9160  0710                     __ptext59:	
  9161 ;; *************** function _setBuz *****************
  9162 ;; Defined at:
  9163 ;;		line 22 in file "../src/Buzzer_B1.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  count           1    wreg     unsigned char 
  9166 ;;  time            2    9[BANK0 ] int 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;  count           1   12[BANK0 ] unsigned char 
  9169 ;; Return value:  Size  Location     Type
  9170 ;;		None               void
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0, pclath, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;Total ram usage:        4 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    6
  9185 ;; This function calls:
  9186 ;;		___awdiv
  9187 ;; This function is called by:
  9188 ;;		_setDimmerLights_Main
  9189 ;;		_setDimmerLights_SwOn
  9190 ;;		_my_MainTimer
  9191 ;;		_setMain_Exception
  9192 ;;		_setSw_Main
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _setBuz
  9198  0710                     _setBuz:	
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
  9202                           ;setBuz@count stored from wreg
  9203  0710  0020               	movlb	0	; select bank0
  9204  0711  00AC               	movwf	setBuz@count
  9205                           
  9206                           ;Buzzer_B1.c: 23: time /= 10;
  9207  0712  300A               	movlw	10
  9208  0713  00A0               	movwf	___awdiv@divisor
  9209  0714  3000               	movlw	0
  9210  0715  00A1               	movwf	___awdiv@divisor+1
  9211  0716  082A               	movf	setBuz@time+1,w
  9212  0717  01A3               	clrf	___awdiv@dividend+1
  9213  0718  07A3               	addwf	___awdiv@dividend+1,f
  9214  0719  0829               	movf	setBuz@time,w
  9215  071A  01A2               	clrf	___awdiv@dividend
  9216  071B  07A2               	addwf	___awdiv@dividend,f
  9217  071C  318F  27AC  3187   	fcall	___awdiv
  9218  071F  0020               	movlb	0	; select bank0
  9219  0720  0821               	movf	?___awdiv+1,w
  9220  0721  01AA               	clrf	setBuz@time+1
  9221  0722  07AA               	addwf	setBuz@time+1,f
  9222  0723  0820               	movf	?___awdiv,w
  9223  0724  01A9               	clrf	setBuz@time
  9224  0725  07A9               	addwf	setBuz@time,f
  9225                           
  9226                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
  9227  0726  0021               	movlb	1	; select bank1
  9228  0727  1C30               	btfss	_Buz1^(0+128),0
  9229  0728  0008               	return
  9230                           
  9231                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
  9232  0729  18B0               	btfsc	_Buz1^(0+128),1
  9233  072A  2F41               	goto	l48
  9234                           
  9235                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
  9236  072B  14B0               	bsf	_Buz1^(0+128),1
  9237                           
  9238                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
  9239  072C  01B1               	clrf	(_Buz1^(0+128)+1)
  9240  072D  01B2               	clrf	((_Buz1+1)^(0+128)+1)
  9241                           
  9242                           ;Buzzer_B1.c: 28: Buz1.Count = count;
  9243  072E  0020               	movlb	0	; select bank0
  9244  072F  082C               	movf	setBuz@count,w
  9245  0730  00AB               	movwf	??_setBuz
  9246  0731  082B               	movf	??_setBuz,w
  9247  0732  0021               	movlb	1	; select bank1
  9248  0733  00B3               	movwf	(_Buz1^(0+128)+3)
  9249                           
  9250                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
  9251  0734  0020               	movlb	0	; select bank0
  9252  0735  082A               	movf	setBuz@time+1,w
  9253  0736  0021               	movlb	1	; select bank1
  9254  0737  01B7               	clrf	((_Buz1+1)^(0+128)+6)
  9255  0738  07B7               	addwf	((_Buz1+1)^(0+128)+6),f
  9256  0739  0020               	movlb	0	; select bank0
  9257  073A  0829               	movf	setBuz@time,w
  9258  073B  0021               	movlb	1	; select bank1
  9259  073C  01B6               	clrf	(_Buz1^(0+128)+6)
  9260  073D  07B6               	addwf	(_Buz1^(0+128)+6),f
  9261                           
  9262                           ;Buzzer_B1.c: 30: RB3 = 1;
  9263  073E  0020               	movlb	0	; select bank0
  9264  073F  158D               	bsf	13,3	;volatile
  9265                           
  9266                           ;Buzzer_B1.c: 31: } else {
  9267  0740  0008               	return
  9268  0741                     l48:	
  9269                           
  9270                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
  9271  0741  19B0               	btfsc	_Buz1^(0+128),3
  9272  0742  2F55               	goto	l50
  9273                           
  9274                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
  9275  0743  15B0               	bsf	_Buz1^(0+128),3
  9276                           
  9277                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
  9278  0744  0020               	movlb	0	; select bank0
  9279  0745  082C               	movf	setBuz@count,w
  9280  0746  00AB               	movwf	??_setBuz
  9281  0747  082B               	movf	??_setBuz,w
  9282  0748  0021               	movlb	1	; select bank1
  9283  0749  00B4               	movwf	(_Buz1^(0+128)+4)
  9284                           
  9285                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
  9286  074A  0020               	movlb	0	; select bank0
  9287  074B  082A               	movf	setBuz@time+1,w
  9288  074C  0021               	movlb	1	; select bank1
  9289  074D  01B9               	clrf	((_Buz1+1)^(0+128)+8)
  9290  074E  07B9               	addwf	((_Buz1+1)^(0+128)+8),f
  9291  074F  0020               	movlb	0	; select bank0
  9292  0750  0829               	movf	setBuz@time,w
  9293  0751  0021               	movlb	1	; select bank1
  9294  0752  01B8               	clrf	(_Buz1^(0+128)+8)
  9295  0753  07B8               	addwf	(_Buz1^(0+128)+8),f
  9296                           
  9297                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
  9298  0754  0008               	return
  9299  0755                     l50:	
  9300  0755  1A30               	btfsc	_Buz1^(0+128),4
  9301  0756  0008               	return
  9302                           
  9303                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
  9304  0757  1630               	bsf	_Buz1^(0+128),4
  9305                           
  9306                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
  9307  0758  0020               	movlb	0	; select bank0
  9308  0759  082C               	movf	setBuz@count,w
  9309  075A  00AB               	movwf	??_setBuz
  9310  075B  082B               	movf	??_setBuz,w
  9311  075C  0021               	movlb	1	; select bank1
  9312  075D  00B5               	movwf	(_Buz1^(0+128)+5)
  9313                           
  9314                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
  9315  075E  0020               	movlb	0	; select bank0
  9316  075F  082A               	movf	setBuz@time+1,w
  9317  0760  0021               	movlb	1	; select bank1
  9318  0761  01BB               	clrf	((_Buz1+1)^(0+128)+10)
  9319  0762  07BB               	addwf	((_Buz1+1)^(0+128)+10),f
  9320  0763  0020               	movlb	0	; select bank0
  9321  0764  0829               	movf	setBuz@time,w
  9322  0765  0021               	movlb	1	; select bank1
  9323  0766  01BA               	clrf	(_Buz1^(0+128)+10)
  9324  0767  07BA               	addwf	(_Buz1^(0+128)+10),f
  9325  0768  0008               	return
  9326  0769                     __end_of_setBuz:	
  9327                           
  9328                           	psect	text60
  9329  0FAC                     __ptext60:	
  9330 ;; *************** function ___awdiv *****************
  9331 ;; Defined at:
  9332 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  divisor         2    0[BANK0 ] int 
  9335 ;;  dividend        2    2[BANK0 ] int 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  quotient        2    7[BANK0 ] int 
  9338 ;;  sign            1    6[BANK0 ] unsigned char 
  9339 ;;  counter         1    5[BANK0 ] unsigned char 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  2    0[BANK0 ] int 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2, status,0
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;Total ram usage:        9 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    5
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_setBuz
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function ___awdiv
  9365  0FAC                     ___awdiv:	
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9369  0FAC  0020               	movlb	0	; select bank0
  9370  0FAD  01A6               	clrf	___awdiv@sign
  9371  0FAE  1FA1               	btfss	___awdiv@divisor+1,7
  9372  0FAF  2FB7               	goto	l3059
  9373  0FB0  09A0               	comf	___awdiv@divisor,f
  9374  0FB1  09A1               	comf	___awdiv@divisor+1,f
  9375  0FB2  0AA0               	incf	___awdiv@divisor,f
  9376  0FB3  1903               	skipnz
  9377  0FB4  0AA1               	incf	___awdiv@divisor+1,f
  9378  0FB5  01A6               	clrf	___awdiv@sign
  9379  0FB6  0AA6               	incf	___awdiv@sign,f
  9380  0FB7                     l3059:	
  9381  0FB7  1FA3               	btfss	___awdiv@dividend+1,7
  9382  0FB8  2FC2               	goto	l3065
  9383  0FB9  09A2               	comf	___awdiv@dividend,f
  9384  0FBA  09A3               	comf	___awdiv@dividend+1,f
  9385  0FBB  0AA2               	incf	___awdiv@dividend,f
  9386  0FBC  1903               	skipnz
  9387  0FBD  0AA3               	incf	___awdiv@dividend+1,f
  9388  0FBE  3001               	movlw	1
  9389  0FBF  00A4               	movwf	??___awdiv
  9390  0FC0  0824               	movf	??___awdiv,w
  9391  0FC1  06A6               	xorwf	___awdiv@sign,f
  9392  0FC2                     l3065:	
  9393  0FC2  01A7               	clrf	___awdiv@quotient
  9394  0FC3  01A8               	clrf	___awdiv@quotient+1
  9395  0FC4  0821               	movf	___awdiv@divisor+1,w
  9396  0FC5  0420               	iorwf	___awdiv@divisor,w
  9397  0FC6  1903               	skipnz
  9398  0FC7  2FF1               	goto	l3087
  9399  0FC8  01A5               	clrf	___awdiv@counter
  9400  0FC9  0AA5               	incf	___awdiv@counter,f
  9401  0FCA                     l3075:	
  9402  0FCA  1BA1               	btfsc	___awdiv@divisor+1,7
  9403  0FCB  2FD6               	goto	l3077
  9404  0FCC  3001               	movlw	1
  9405  0FCD                     u2195:	
  9406  0FCD  35A0               	lslf	___awdiv@divisor,f
  9407  0FCE  0DA1               	rlf	___awdiv@divisor+1,f
  9408  0FCF  0B89               	decfsz	9,f
  9409  0FD0  2FCD               	goto	u2195
  9410  0FD1  3001               	movlw	1
  9411  0FD2  00A4               	movwf	??___awdiv
  9412  0FD3  0824               	movf	??___awdiv,w
  9413  0FD4  07A5               	addwf	___awdiv@counter,f
  9414  0FD5  2FCA               	goto	l3075
  9415  0FD6                     l3077:	
  9416  0FD6  3001               	movlw	1
  9417  0FD7                     u2215:	
  9418  0FD7  35A7               	lslf	___awdiv@quotient,f
  9419  0FD8  0DA8               	rlf	___awdiv@quotient+1,f
  9420  0FD9  0B89               	decfsz	9,f
  9421  0FDA  2FD7               	goto	u2215
  9422  0FDB  0821               	movf	___awdiv@divisor+1,w
  9423  0FDC  0223               	subwf	___awdiv@dividend+1,w
  9424  0FDD  1D03               	skipz
  9425  0FDE  2FE1               	goto	u2225
  9426  0FDF  0820               	movf	___awdiv@divisor,w
  9427  0FE0  0222               	subwf	___awdiv@dividend,w
  9428  0FE1                     u2225:	
  9429  0FE1  1C03               	skipc
  9430  0FE2  2FE8               	goto	l3083
  9431  0FE3  0820               	movf	___awdiv@divisor,w
  9432  0FE4  02A2               	subwf	___awdiv@dividend,f
  9433  0FE5  0821               	movf	___awdiv@divisor+1,w
  9434  0FE6  3BA3               	subwfb	___awdiv@dividend+1,f
  9435  0FE7  1427               	bsf	___awdiv@quotient,0
  9436  0FE8                     l3083:	
  9437  0FE8  3001               	movlw	1
  9438  0FE9                     u2235:	
  9439  0FE9  36A1               	lsrf	___awdiv@divisor+1,f
  9440  0FEA  0CA0               	rrf	___awdiv@divisor,f
  9441  0FEB  0B89               	decfsz	9,f
  9442  0FEC  2FE9               	goto	u2235
  9443  0FED  3001               	movlw	1
  9444  0FEE  02A5               	subwf	___awdiv@counter,f
  9445  0FEF  1D03               	btfss	3,2
  9446  0FF0  2FD6               	goto	l3077
  9447  0FF1                     l3087:	
  9448  0FF1  0826               	movf	___awdiv@sign,w
  9449  0FF2  1903               	btfsc	3,2
  9450  0FF3  2FF9               	goto	l3091
  9451  0FF4  09A7               	comf	___awdiv@quotient,f
  9452  0FF5  09A8               	comf	___awdiv@quotient+1,f
  9453  0FF6  0AA7               	incf	___awdiv@quotient,f
  9454  0FF7  1903               	skipnz
  9455  0FF8  0AA8               	incf	___awdiv@quotient+1,f
  9456  0FF9                     l3091:	
  9457  0FF9  0828               	movf	___awdiv@quotient+1,w
  9458  0FFA  01A1               	clrf	?___awdiv+1
  9459  0FFB  07A1               	addwf	?___awdiv+1,f
  9460  0FFC  0827               	movf	___awdiv@quotient,w
  9461  0FFD  01A0               	clrf	?___awdiv
  9462  0FFE  07A0               	addwf	?___awdiv,f
  9463  0FFF  0008               	return
  9464  1000                     __end_of___awdiv:	
  9465                           
  9466                           	psect	text61
  9467  0A82                     __ptext61:	
  9468 ;; *************** function _DimmerLights_Initialization *****************
  9469 ;; Defined at:
  9470 ;;		line 341 in file "../src/Dimmer_B1.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;		None
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;		None
  9475 ;; Return value:  Size  Location     Type
  9476 ;;		None               void
  9477 ;; Registers used:
  9478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;Total ram usage:        1 bytes
  9489 ;; Hardware stack levels used:    1
  9490 ;; Hardware stack levels required when called:    7
  9491 ;; This function calls:
  9492 ;;		_Dimmer_Initialization
  9493 ;;		_setDimmerLights_Initialization
  9494 ;; This function is called by:
  9495 ;;		_main
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function _DimmerLights_Initialization
  9501  0A82                     _DimmerLights_Initialization:	
  9502                           
  9503                           ;Dimmer_B1.c: 343: DimmerLights11 = &DimmerLights1;
  9504                           
  9505                           ;incstack = 0
  9506                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9507  0A82  30C2               	movlw	_DimmerLights1& (0+255)
  9508  0A83  0020               	movlb	0	; select bank0
  9509  0A84  00A4               	movwf	??_DimmerLights_Initialization
  9510  0A85  0824               	movf	??_DimmerLights_Initialization,w
  9511  0A86  00FA               	movwf	_DimmerLights11
  9512                           
  9513                           ;Dimmer_B1.c: 344: setDimmerLights_Initialization(1);
  9514  0A87  3001               	movlw	1
  9515  0A88  318C  2440  318A   	fcall	_setDimmerLights_Initialization
  9516                           
  9517                           ;Dimmer_B1.c: 358: Dimmer_Initialization();
  9518  0A8B  3180  2003         	fcall	_Dimmer_Initialization
  9519  0A8D  0008               	return
  9520  0A8E                     __end_of_DimmerLights_Initialization:	
  9521                           
  9522                           	psect	text62
  9523  0C40                     __ptext62:	
  9524 ;; *************** function _setDimmerLights_Initialization *****************
  9525 ;; Defined at:
  9526 ;;		line 364 in file "../src/Dimmer_B1.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  lights          1    wreg     unsigned char 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  lights          1    3[BANK0 ] unsigned char 
  9531 ;; Return value:  Size  Location     Type
  9532 ;;		None               void
  9533 ;; Registers used:
  9534 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;Total ram usage:        2 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    6
  9547 ;; This function calls:
  9548 ;;		_DimmerLightsPointSelect
  9549 ;; This function is called by:
  9550 ;;		_DimmerLights_Initialization
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           
  9555                           ;psect for function _setDimmerLights_Initialization
  9556  0C40                     _setDimmerLights_Initialization:	
  9557                           
  9558                           ;incstack = 0
  9559                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
  9560                           ;setDimmerLights_Initialization@lights stored from wreg
  9561  0C40  0020               	movlb	0	; select bank0
  9562  0C41  00A3               	movwf	setDimmerLights_Initialization@lights
  9563                           
  9564                           ;Dimmer_B1.c: 366: DimmerLightsPointSelect(lights);
  9565  0C42  0823               	movf	setDimmerLights_Initialization@lights,w
  9566  0C43  318A  2256         	fcall	_DimmerLightsPointSelect
  9567                           
  9568                           ;Dimmer_B1.c: 372: DimmerLights->MaxmumValue = ((char)(65*0.8));
  9569  0C45  3034               	movlw	52
  9570  0C46  0020               	movlb	0	; select bank0
  9571  0C47  00A2               	movwf	??_setDimmerLights_Initialization
  9572  0C48  086B               	movf	_DimmerLights,w
  9573  0C49  3E05               	addlw	5
  9574  0C4A  0086               	movwf	6
  9575  0C4B  0187               	clrf	7
  9576  0C4C  0822               	movf	??_setDimmerLights_Initialization,w
  9577  0C4D  0081               	movwf	1
  9578                           
  9579                           ;Dimmer_B1.c: 373: DimmerLights->MinimumValue = ((char)(25*0.8));
  9580  0C4E  3014               	movlw	20
  9581  0C4F  00A2               	movwf	??_setDimmerLights_Initialization
  9582  0C50  086B               	movf	_DimmerLights,w
  9583  0C51  3E06               	addlw	6
  9584  0C52  0086               	movwf	6
  9585  0C53  0187               	clrf	7
  9586  0C54  0822               	movf	??_setDimmerLights_Initialization,w
  9587  0C55  0081               	movwf	1
  9588                           
  9589                           ;Dimmer_B1.c: 387: DimmerLights->DimmingValue = DimmerLights->MaxmumValue;
  9590  0C56  086B               	movf	_DimmerLights,w
  9591  0C57  3E05               	addlw	5
  9592  0C58  0086               	movwf	6
  9593  0C59  0187               	clrf	7
  9594  0C5A  0801               	movf	1,w
  9595  0C5B  00A2               	movwf	??_setDimmerLights_Initialization
  9596  0C5C  086B               	movf	_DimmerLights,w
  9597  0C5D  3E04               	addlw	4
  9598  0C5E  0086               	movwf	6
  9599  0C5F  0187               	clrf	7
  9600  0C60  0822               	movf	??_setDimmerLights_Initialization,w
  9601  0C61  0081               	movwf	1
  9602  0C62  0008               	return
  9603  0C63                     __end_of_setDimmerLights_Initialization:	
  9604                           
  9605                           	psect	text63
  9606  0A56                     __ptext63:	
  9607 ;; *************** function _DimmerLightsPointSelect *****************
  9608 ;; Defined at:
  9609 ;;		line 322 in file "../src/Dimmer_B1.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  lights          1    wreg     unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  lights          1    1[BANK0 ] unsigned char 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;		None               void
  9616 ;; Registers used:
  9617 ;;		wreg
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;Total ram usage:        2 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    5
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_setDimmerLights_Initialization
  9634 ;;		_setDimmerLights_Main
  9635 ;;		_getDimmerLights_Status
  9636 ;;		_setDimmerLights_SwOn
  9637 ;;		_setDimmerLights_SwOff
  9638 ;;		_setDimmerLights_AdjControl
  9639 ;;		_setDimmerLights_ErrorClose
  9640 ;;		_setDimmerLights
  9641 ;;		_setDimmerLights_Adj
  9642 ;;		_setDimmerLights_Trigger
  9643 ;;		_setDimmerLights_TriggerAdj
  9644 ;;		_setDimmerLights_Status
  9645 ;;		_setDimmerLights_AdjRF
  9646 ;;		_setDimmerLights_GO
  9647 ;;		_setDimmerLights_MaxmumValue
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _DimmerLightsPointSelect
  9653  0A56                     _DimmerLightsPointSelect:	
  9654                           
  9655                           ;incstack = 0
  9656                           ; Regs used in _DimmerLightsPointSelect: [wreg]
  9657                           ;DimmerLightsPointSelect@lights stored from wreg
  9658  0A56  0020               	movlb	0	; select bank0
  9659  0A57  00A1               	movwf	DimmerLightsPointSelect@lights
  9660                           
  9661                           ;Dimmer_B1.c: 324: if (lights == 1) {
  9662  0A58  0821               	movf	DimmerLightsPointSelect@lights,w
  9663  0A59  3A01               	xorlw	1
  9664  0A5A  1D03               	skipz
  9665  0A5B  0008               	return
  9666                           
  9667                           ;Dimmer_B1.c: 325: DimmerLights = &DimmerLights1;
  9668  0A5C  30C2               	movlw	_DimmerLights1& (0+255)
  9669  0A5D  00A0               	movwf	??_DimmerLightsPointSelect
  9670  0A5E  0820               	movf	??_DimmerLightsPointSelect,w
  9671  0A5F  00EB               	movwf	_DimmerLights
  9672  0A60  0008               	return
  9673  0A61                     __end_of_DimmerLightsPointSelect:	
  9674                           
  9675                           	psect	text64
  9676  0003                     __ptext64:	
  9677 ;; *************** function _Dimmer_Initialization *****************
  9678 ;; Defined at:
  9679 ;;		line 904 in file "../src/Dimmer_B1.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;		None               void
  9686 ;; Registers used:
  9687 ;;		None
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:        0 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:    5
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_DimmerLights_Initialization
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           
  9708                           ;psect for function _Dimmer_Initialization
  9709  0003                     _Dimmer_Initialization:	
  9710                           
  9711                           ;incstack = 0
  9712                           ; Regs used in _Dimmer_Initialization: []
  9713  0003  0008               	return
  9714  0004                     __end_of_Dimmer_Initialization:	
  9715                           
  9716                           	psect	text65
  9717  0E75                     __ptext65:	
  9718 ;; *************** function _Buzzer_Main *****************
  9719 ;; Defined at:
  9720 ;;		line 46 in file "../src/Buzzer_B1.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;		None               void
  9727 ;; Registers used:
  9728 ;;		wreg, status,2, status,0
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;Total ram usage:        1 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    5
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_main
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function _Buzzer_Main
  9750  0E75                     _Buzzer_Main:	
  9751                           
  9752                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
  9756  0E75  0021               	movlb	1	; select bank1
  9757  0E76  1CB0               	btfss	_Buz1^(0+128),1
  9758  0E77  0008               	return
  9759                           
  9760                           ;Buzzer_B1.c: 48: Buz1.Counter++;
  9761  0E78  3001               	movlw	1
  9762  0E79  07B1               	addwf	(_Buz1^(0+128)+1),f
  9763  0E7A  3000               	movlw	0
  9764  0E7B  3DB2               	addwfc	((_Buz1+1)^(0+128)+1),f
  9765                           
  9766                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
  9767  0E7C  0837               	movf	((_Buz1+1)^(0+128)+6),w
  9768  0E7D  0232               	subwf	((_Buz1+1)^(0+128)+1),w
  9769  0E7E  1D03               	skipz
  9770  0E7F  2E82               	goto	u3705
  9771  0E80  0836               	movf	(_Buz1^(0+128)+6),w
  9772  0E81  0231               	subwf	(_Buz1^(0+128)+1),w
  9773  0E82                     u3705:	
  9774  0E82  1C03               	skipc
  9775  0E83  0008               	return
  9776                           
  9777                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
  9778  0E84  01B1               	clrf	(_Buz1^(0+128)+1)
  9779  0E85  01B2               	clrf	((_Buz1+1)^(0+128)+1)
  9780                           
  9781                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
  9782  0E86  12B0               	bcf	_Buz1^(0+128),5
  9783  0E87  0020               	movlb	0	; select bank0
  9784  0E88  1D8D               	btfss	13,3	;volatile
  9785  0E89  2E8C               	goto	l3985
  9786  0E8A  0021               	movlb	1	; select bank1
  9787  0E8B  16B0               	bsf	_Buz1^(0+128),5
  9788  0E8C                     l3985:	
  9789                           
  9790                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
  9791  0E8C  0021               	movlb	1	; select bank1
  9792  0E8D  1AB0               	btfsc	_Buz1^(0+128),5
  9793  0E8E  2EB8               	goto	l58
  9794                           
  9795                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
  9796  0E8F  08B3               	movf	(_Buz1^(0+128)+3),f
  9797  0E90  1D03               	skipz
  9798  0E91  2EB4               	goto	l59
  9799                           
  9800                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
  9801  0E92  1DB0               	btfss	_Buz1^(0+128),3
  9802  0E93  2EA2               	goto	l60
  9803                           
  9804                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
  9805  0E94  11B0               	bcf	_Buz1^(0+128),3
  9806                           
  9807                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
  9808  0E95  0834               	movf	(_Buz1^(0+128)+4),w
  9809  0E96  0020               	movlb	0	; select bank0
  9810  0E97  00A0               	movwf	??_Buzzer_Main
  9811  0E98  0820               	movf	??_Buzzer_Main,w
  9812  0E99  0021               	movlb	1	; select bank1
  9813  0E9A  00B3               	movwf	(_Buz1^(0+128)+3)
  9814                           
  9815                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
  9816  0E9B  0839               	movf	((_Buz1+1)^(0+128)+8),w
  9817  0E9C  01B7               	clrf	((_Buz1+1)^(0+128)+6)
  9818  0E9D  07B7               	addwf	((_Buz1+1)^(0+128)+6),f
  9819  0E9E  0838               	movf	(_Buz1^(0+128)+8),w
  9820  0E9F  01B6               	clrf	(_Buz1^(0+128)+6)
  9821  0EA0  07B6               	addwf	(_Buz1^(0+128)+6),f
  9822                           
  9823                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
  9824  0EA1  0008               	return
  9825  0EA2                     l60:	
  9826  0EA2  1E30               	btfss	_Buz1^(0+128),4
  9827  0EA3  2EB2               	goto	l62
  9828                           
  9829                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
  9830  0EA4  1230               	bcf	_Buz1^(0+128),4
  9831                           
  9832                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
  9833  0EA5  0835               	movf	(_Buz1^(0+128)+5),w
  9834  0EA6  0020               	movlb	0	; select bank0
  9835  0EA7  00A0               	movwf	??_Buzzer_Main
  9836  0EA8  0820               	movf	??_Buzzer_Main,w
  9837  0EA9  0021               	movlb	1	; select bank1
  9838  0EAA  00B3               	movwf	(_Buz1^(0+128)+3)
  9839                           
  9840                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
  9841  0EAB  083B               	movf	((_Buz1+1)^(0+128)+10),w
  9842  0EAC  01B7               	clrf	((_Buz1+1)^(0+128)+6)
  9843  0EAD  07B7               	addwf	((_Buz1+1)^(0+128)+6),f
  9844  0EAE  083A               	movf	(_Buz1^(0+128)+10),w
  9845  0EAF  01B6               	clrf	(_Buz1^(0+128)+6)
  9846  0EB0  07B6               	addwf	(_Buz1^(0+128)+6),f
  9847                           
  9848                           ;Buzzer_B1.c: 62: } else {
  9849  0EB1  0008               	return
  9850  0EB2                     l62:	
  9851                           
  9852                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
  9853  0EB2  10B0               	bcf	_Buz1^(0+128),1
  9854                           
  9855                           ;Buzzer_B1.c: 64: }
  9856                           ;Buzzer_B1.c: 65: } else {
  9857  0EB3  0008               	return
  9858  0EB4                     l59:	
  9859                           
  9860                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
  9861  0EB4  16B0               	bsf	_Buz1^(0+128),5
  9862                           
  9863                           ;Buzzer_B1.c: 68: RB3 = 1;
  9864  0EB5  0020               	movlb	0	; select bank0
  9865  0EB6  158D               	bsf	13,3	;volatile
  9866                           
  9867                           ;Buzzer_B1.c: 69: }
  9868                           ;Buzzer_B1.c: 70: } else {
  9869  0EB7  0008               	return
  9870  0EB8                     l58:	
  9871                           
  9872                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
  9873  0EB8  12B0               	bcf	_Buz1^(0+128),5
  9874                           
  9875                           ;Buzzer_B1.c: 73: RB3 = 0;
  9876  0EB9  0020               	movlb	0	; select bank0
  9877  0EBA  118D               	bcf	13,3	;volatile
  9878                           
  9879                           ;Buzzer_B1.c: 75: Buz1.Count--;
  9880  0EBB  3001               	movlw	1
  9881  0EBC  0021               	movlb	1	; select bank1
  9882  0EBD  02B3               	subwf	(_Buz1^(0+128)+3),f
  9883  0EBE  0008               	return
  9884  0EBF                     __end_of_Buzzer_Main:	
  9885                           
  9886                           	psect	text66
  9887  09E0                     __ptext66:	
  9888 ;; *************** function _Buzzer_Initialization *****************
  9889 ;; Defined at:
  9890 ;;		line 11 in file "../src/Buzzer_B1.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;		None               void
  9897 ;; Registers used:
  9898 ;;		None
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    5
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_main
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _Buzzer_Initialization
  9920  09E0                     _Buzzer_Initialization:	
  9921                           
  9922                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
  9923                           
  9924                           ;incstack = 0
  9925                           ; Regs used in _Buzzer_Initialization: []
  9926  09E0  0021               	movlb	1	; select bank1
  9927  09E1  1430               	bsf	_Buz1^(0+128),0
  9928  09E2  0008               	return
  9929  09E3                     __end_of_Buzzer_Initialization:	
  9930                           
  9931                           	psect	intentry
  9932  0004                     __pintentry:	
  9933 ;; *************** function _ISR *****************
  9934 ;; Defined at:
  9935 ;;		line 107 in file "../src/MCU_B1.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;		None               void
  9942 ;; Registers used:
  9943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;Total ram usage:        1 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    4
  9956 ;; This function calls:
  9957 ;;		_IOC_ISR
  9958 ;;		_TMR1_ISR
  9959 ;; This function is called by:
  9960 ;;		Interrupt level 1
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964  0004                     _ISR:	
  9965                           
  9966                           ;incstack = 0
  9967                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9968  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9969  0005  3180               	pagesel	$
  9970  0006  0020               	movlb	0	; select bank0
  9971  0007  087F               	movf	127,w
  9972  0008  00F7               	movwf	??_ISR
  9973                           
  9974                           ;MCU_B1.c: 109: IOC_ISR();
  9975  0009  318A  22CB  3180   	fcall	_IOC_ISR
  9976                           
  9977                           ;MCU_B1.c: 111: ;;
  9978                           ;MCU_B1.c: 113: TMR1_ISR();
  9979  000C  318C  2463         	fcall	_TMR1_ISR
  9980  000E  0877               	movf	??_ISR,w
  9981  000F  0020               	movlb	0	; select bank0
  9982  0010  00FF               	movwf	127
  9983  0011  107E               	bcf	126,0	;clear compiler interrupt flag
  9984  0012  0009               	retfie
  9985  0013                     __end_of_ISR:	
  9986                           
  9987                           	psect	text68
  9988  0C63                     __ptext68:	
  9989 ;; *************** function _TMR1_ISR *****************
  9990 ;; Defined at:
  9991 ;;		line 209 in file "../src/MCU_B1.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;		None               void
  9998 ;; Registers used:
  9999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    2
 10012 ;; This function calls:
 10013 ;;		_setDimmerLights_IntrControl
 10014 ;; This function is called by:
 10015 ;;		_ISR
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _TMR1_ISR
 10021  0C63                     _TMR1_ISR:	
 10022                           
 10023                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
 10024                           
 10025                           ;incstack = 0
 10026                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10027  0C63  0021               	movlb	1	; select bank1
 10028  0C64  1C11               	btfss	17,0	;volatile
 10029  0C65  0008               	return
 10030  0C66  0020               	movlb	0	; select bank0
 10031  0C67  1C11               	btfss	17,0	;volatile
 10032  0C68  0008               	return
 10033                           
 10034                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
 10035  0C69  30FA               	movlw	250
 10036  0C6A  0097               	movwf	23	;volatile
 10037                           
 10038                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
 10039  0C6B  3038               	movlw	56
 10040  0C6C  0096               	movwf	22	;volatile
 10041                           
 10042                           ;MCU_B1.c: 214: TMR1IF = 0;
 10043  0C6D  1011               	bcf	17,0	;volatile
 10044                           
 10045                           ;MCU_B1.c: 219: setDimmerLights_IntrControl(1);
 10046  0C6E  3001               	movlw	1
 10047  0C6F  3181  2175  318C   	fcall	_setDimmerLights_IntrControl
 10048                           
 10049                           ;MCU_B1.c: 234: Timer1.Count++;
 10050  0C72  3001               	movlw	1
 10051  0C73  0021               	movlb	1	; select bank1
 10052  0C74  07C0               	addwf	(_Timer1^(0+128)+1),f
 10053  0C75  3000               	movlw	0
 10054  0C76  3DC1               	addwfc	((_Timer1+1)^(0+128)+1),f
 10055                           
 10056                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
 10057  0C77  3001               	movlw	1
 10058  0C78  3EBF               	addlw	_Timer1& (0+255)
 10059  0C79  0086               	movwf	6
 10060  0C7A  0187               	clrf	7
 10061  0C7B  3F40               	moviw [0]fsr1
 10062  0C7C  3A64               	xorlw	100
 10063  0C7D  1D03               	skipz
 10064  0C7E  2C81               	goto	u382_25
 10065  0C7F  3F41               	moviw [1]fsr1
 10066  0C80  3A00               	xorlw	0
 10067  0C81                     u382_25:	
 10068  0C81  1D03               	skipz
 10069  0C82  0008               	return
 10070                           
 10071                           ;MCU_B1.c: 236: {
 10072                           ;MCU_B1.c: 237: Timer1.Count = 0;
 10073  0C83  01C0               	clrf	(_Timer1^(0+128)+1)
 10074  0C84  01C1               	clrf	((_Timer1+1)^(0+128)+1)
 10075                           
 10076                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
 10077  0C85  143F               	bsf	_Timer1^(0+128),0
 10078  0C86  0008               	return
 10079  0C87                     __end_of_TMR1_ISR:	
 10080                           
 10081                           	psect	text69
 10082  0175                     __ptext69:	
 10083 ;; *************** function _setDimmerLights_IntrControl *****************
 10084 ;; Defined at:
 10085 ;;		line 92 in file "../src/Dimmer_B1.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  lights          1    wreg     unsigned char 
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;  lights          1    6[COMMON] unsigned char 
 10090 ;; Return value:  Size  Location     Type
 10091 ;;		None               void
 10092 ;; Registers used:
 10093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10102 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10103 ;;Total ram usage:        5 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    1
 10106 ;; This function calls:
 10107 ;;		_DimmerIntrPointSelect
 10108 ;; This function is called by:
 10109 ;;		_TMR1_ISR
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           
 10114                           ;psect for function _setDimmerLights_IntrControl
 10115  0175                     _setDimmerLights_IntrControl:	
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in _setDimmerLights_IntrControl: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10119                           ;setDimmerLights_IntrControl@lights stored from wreg
 10120  0175  00F6               	movwf	setDimmerLights_IntrControl@lights
 10121                           
 10122                           ;Dimmer_B1.c: 228: DimmerIntrPointSelect(lights);
 10123  0176  0876               	movf	setDimmerLights_IntrControl@lights,w
 10124  0177  318A  2238  3181   	fcall	_DimmerIntrPointSelect
 10125                           
 10126                           ;Dimmer_B1.c: 229: if (DimmerLightsIntr->GO == 1) {
 10127  017A  087B               	movf	_DimmerLightsIntr,w
 10128  017B  0086               	movwf	6
 10129  017C  0187               	clrf	7
 10130  017D  1C01               	btfss	1,0
 10131  017E  29C9               	goto	i1l3661
 10132                           
 10133                           ;Dimmer_B1.c: 230: DimmerLightsIntr->Count++;
 10134  017F  3001               	movlw	1
 10135  0180  00F2               	movwf	??_setDimmerLights_IntrControl
 10136  0181  087B               	movf	_DimmerLightsIntr,w
 10137  0182  3E03               	addlw	3
 10138  0183  0086               	movwf	6
 10139  0184  0187               	clrf	7
 10140  0185  0872               	movf	??_setDimmerLights_IntrControl,w
 10141  0186  0781               	addwf	1,f
 10142                           
 10143                           ;Dimmer_B1.c: 231: if (DimmerLightsIntr->Count
 10144                           ;Dimmer_B1.c: 232: >= (DimmerLightsIntr->DimmingValue - Dimmer.Correction)) {
 10145  0187  0021               	movlb	1	; select bank1
 10146  0188  083E               	movf	(_Dimmer^(0+128)+2),w
 10147  0189  00F2               	movwf	??_setDimmerLights_IntrControl
 10148  018A  01F3               	clrf	??_setDimmerLights_IntrControl+1
 10149  018B  09F2               	comf	??_setDimmerLights_IntrControl,f
 10150  018C  09F3               	comf	??_setDimmerLights_IntrControl+1,f
 10151  018D  0AF2               	incf	??_setDimmerLights_IntrControl,f
 10152  018E  1903               	skipnz
 10153  018F  0AF3               	incf	??_setDimmerLights_IntrControl+1,f
 10154  0190  087B               	movf	_DimmerLightsIntr,w
 10155  0191  3E04               	addlw	4
 10156  0192  0086               	movwf	6
 10157  0193  0187               	clrf	7
 10158  0194  0801               	movf	1,w
 10159  0195  0772               	addwf	??_setDimmerLights_IntrControl,w
 10160  0196  00F4               	movwf	??_setDimmerLights_IntrControl+2
 10161  0197  0873               	movf	??_setDimmerLights_IntrControl+1,w
 10162  0198  1803               	skipnc
 10163  0199  0A73               	incf	??_setDimmerLights_IntrControl+1,w
 10164  019A  00F5               	movwf	??_setDimmerLights_IntrControl+3
 10165  019B  087B               	movf	_DimmerLightsIntr,w
 10166  019C  3E03               	addlw	3
 10167  019D  0086               	movwf	6
 10168  019E  0187               	clrf	7
 10169  019F  0875               	movf	??_setDimmerLights_IntrControl+3,w
 10170  01A0  3A80               	xorlw	128
 10171  01A1  3C80               	sublw	128
 10172  01A2  1D03               	skipz
 10173  01A3  29A6               	goto	u315_25
 10174  01A4  0874               	movf	??_setDimmerLights_IntrControl+2,w
 10175  01A5  0201               	subwf	1,w
 10176  01A6                     u315_25:	
 10177  01A6  1C03               	skipc
 10178  01A7  0008               	return
 10179                           
 10180                           ;Dimmer_B1.c: 233: DimmerLightsIntr->Count = 0;
 10181  01A8  087B               	movf	_DimmerLightsIntr,w
 10182  01A9  3E03               	addlw	3
 10183  01AA  0086               	movwf	6
 10184  01AB  0187               	clrf	7
 10185  01AC  0181               	clrf	1
 10186                           
 10187                           ;Dimmer_B1.c: 234: DimmerLightsIntr->GO = 0;
 10188  01AD  087B               	movf	_DimmerLightsIntr,w
 10189  01AE  0086               	movwf	6
 10190  01AF  0187               	clrf	7
 10191  01B0  1001               	bcf	1,0
 10192                           
 10193                           ;Dimmer_B1.c: 235: DimmerLightsIntr->Flag = 1;
 10194  01B1  087B               	movf	_DimmerLightsIntr,w
 10195  01B2  3E08               	addlw	8
 10196  01B3  0086               	movwf	6
 10197  01B4  0187               	clrf	7
 10198  01B5  1401               	bsf	1,0
 10199                           
 10200                           ;Dimmer_B1.c: 236: if (DimmerLightsIntr->MOSFET == 1) {
 10201  01B6  087B               	movf	_DimmerLightsIntr,w
 10202  01B7  3E09               	addlw	9
 10203  01B8  0086               	movwf	6
 10204  01B9  0187               	clrf	7
 10205  01BA  1E01               	btfss	1,4
 10206  01BB  0008               	return
 10207                           
 10208                           ;Dimmer_B1.c: 237: DimmerLightsIntr->MOSFET = 0;
 10209  01BC  087B               	movf	_DimmerLightsIntr,w
 10210  01BD  3E09               	addlw	9
 10211  01BE  0086               	movwf	6
 10212  01BF  0187               	clrf	7
 10213  01C0  1201               	bcf	1,4
 10214                           
 10215                           ;Dimmer_B1.c: 239: if (lights == 1) {
 10216  01C1  0876               	movf	setDimmerLights_IntrControl@lights,w
 10217  01C2  3A01               	xorlw	1
 10218  01C3  1D03               	skipz
 10219  01C4  0008               	return
 10220                           
 10221                           ;Dimmer_B1.c: 240: RB4 = 0;
 10222  01C5  0020               	movlb	0	; select bank0
 10223  01C6  120D               	bcf	13,4	;volatile
 10224                           
 10225                           ;Dimmer_B1.c: 241: RB4=0;
 10226  01C7  120D               	bcf	13,4	;volatile
 10227                           
 10228                           ;Dimmer_B1.c: 242: }
 10229                           ;Dimmer_B1.c: 249: }
 10230                           ;Dimmer_B1.c: 250: }
 10231                           ;Dimmer_B1.c: 251: } else {
 10232  01C8  0008               	return
 10233  01C9                     i1l3661:	
 10234                           
 10235                           ;Dimmer_B1.c: 252: if (DimmerLightsIntr->Flag == 1) {
 10236  01C9  087B               	movf	_DimmerLightsIntr,w
 10237  01CA  3E08               	addlw	8
 10238  01CB  0086               	movwf	6
 10239  01CC  0187               	clrf	7
 10240  01CD  1C01               	btfss	1,0
 10241  01CE  2A63               	goto	i1l261
 10242                           
 10243                           ;Dimmer_B1.c: 253: DimmerLightsIntr->Flag = 0;
 10244  01CF  087B               	movf	_DimmerLightsIntr,w
 10245  01D0  3E08               	addlw	8
 10246  01D1  0086               	movwf	6
 10247  01D2  0187               	clrf	7
 10248  01D3  1001               	bcf	1,0
 10249                           
 10250                           ;Dimmer_B1.c: 254: if (DimmerLightsIntr->Signal == 1) {
 10251  01D4  087B               	movf	_DimmerLightsIntr,w
 10252  01D5  0086               	movwf	6
 10253  01D6  0187               	clrf	7
 10254  01D7  1C81               	btfss	1,1
 10255  01D8  2A63               	goto	i1l261
 10256                           
 10257                           ;Dimmer_B1.c: 255: DimmerLightsIntr->DimmingTime++;
 10258  01D9  3001               	movlw	1
 10259  01DA  00F2               	movwf	??_setDimmerLights_IntrControl
 10260  01DB  0A7B               	incf	_DimmerLightsIntr,w
 10261  01DC  0086               	movwf	6
 10262  01DD  0187               	clrf	7
 10263  01DE  0872               	movf	??_setDimmerLights_IntrControl,w
 10264  01DF  0781               	addwf	1,f
 10265                           
 10266                           ;Dimmer_B1.c: 256: if (DimmerLightsIntr->DimmingTime >= DimmerLightsIntr->DimmingTimeVal
      +                          ue) {
 10267  01E0  0A7B               	incf	_DimmerLightsIntr,w
 10268  01E1  0086               	movwf	6
 10269  01E2  0187               	clrf	7
 10270  01E3  087B               	movf	_DimmerLightsIntr,w
 10271  01E4  3E02               	addlw	2
 10272  01E5  0084               	movwf	4
 10273  01E6  0185               	clrf	5
 10274  01E7  0800               	movf	0,w
 10275  01E8  0201               	subwf	1,w
 10276  01E9  1C03               	skipc
 10277  01EA  2A63               	goto	i1l261
 10278                           
 10279                           ;Dimmer_B1.c: 257: DimmerLightsIntr->DimmingTime = 0;
 10280  01EB  0A7B               	incf	_DimmerLightsIntr,w
 10281  01EC  0086               	movwf	6
 10282  01ED  0187               	clrf	7
 10283  01EE  0181               	clrf	1
 10284                           
 10285                           ;Dimmer_B1.c: 258: if (DimmerLightsIntr->AdjFlag == 1) {
 10286  01EF  087B               	movf	_DimmerLightsIntr,w
 10287  01F0  0086               	movwf	6
 10288  01F1  0187               	clrf	7
 10289  01F2  1D81               	btfss	1,3
 10290  01F3  2A23               	goto	i1l3687
 10291                           
 10292                           ;Dimmer_B1.c: 259: if (DimmerLightsIntr->AdjStatus == 0) {
 10293  01F4  087B               	movf	_DimmerLightsIntr,w
 10294  01F5  0086               	movwf	6
 10295  01F6  0187               	clrf	7
 10296  01F7  1A01               	btfsc	1,4
 10297  01F8  2A0F               	goto	i1l3681
 10298                           
 10299                           ;Dimmer_B1.c: 260: if (DimmerLightsIntr->DimmingValue < ((char)(65*0.8))) {
 10300  01F9  087B               	movf	_DimmerLightsIntr,w
 10301  01FA  3E04               	addlw	4
 10302  01FB  0086               	movwf	6
 10303  01FC  0187               	clrf	7
 10304  01FD  3034               	movlw	52
 10305  01FE  0201               	subwf	1,w
 10306  01FF  1803               	skipnc
 10307  0200  2A0A               	goto	i1l3679
 10308                           
 10309                           ;Dimmer_B1.c: 261: DimmerLightsIntr->DimmingValue++;
 10310  0201  3001               	movlw	1
 10311  0202  00F2               	movwf	??_setDimmerLights_IntrControl
 10312  0203  087B               	movf	_DimmerLightsIntr,w
 10313  0204  3E04               	addlw	4
 10314  0205  0086               	movwf	6
 10315  0206  0187               	clrf	7
 10316  0207  0872               	movf	??_setDimmerLights_IntrControl,w
 10317  0208  0781               	addwf	1,f
 10318                           
 10319                           ;Dimmer_B1.c: 262: } else {
 10320  0209  2A63               	goto	i1l261
 10321  020A                     i1l3679:	
 10322                           
 10323                           ;Dimmer_B1.c: 263: DimmerLightsIntr->AdjStatus = 1;
 10324  020A  087B               	movf	_DimmerLightsIntr,w
 10325  020B  0086               	movwf	6
 10326  020C  0187               	clrf	7
 10327  020D  1601               	bsf	1,4
 10328                           
 10329                           ;Dimmer_B1.c: 264: }
 10330                           ;Dimmer_B1.c: 265: } else {
 10331  020E  2A63               	goto	i1l261
 10332  020F                     i1l3681:	
 10333                           
 10334                           ;Dimmer_B1.c: 266: if (DimmerLightsIntr->DimmingValue > ((char)(25*0.8))) {
 10335  020F  087B               	movf	_DimmerLightsIntr,w
 10336  0210  3E04               	addlw	4
 10337  0211  0086               	movwf	6
 10338  0212  0187               	clrf	7
 10339  0213  3015               	movlw	21
 10340  0214  0201               	subwf	1,w
 10341  0215  1C03               	skipc
 10342  0216  2A1E               	goto	i1l3685
 10343                           
 10344                           ;Dimmer_B1.c: 267: DimmerLightsIntr->DimmingValue--;
 10345  0217  087B               	movf	_DimmerLightsIntr,w
 10346  0218  3E04               	addlw	4
 10347  0219  0086               	movwf	6
 10348  021A  0187               	clrf	7
 10349  021B  3001               	movlw	1
 10350  021C  0281               	subwf	1,f
 10351                           
 10352                           ;Dimmer_B1.c: 268: } else {
 10353  021D  2A63               	goto	i1l261
 10354  021E                     i1l3685:	
 10355                           
 10356                           ;Dimmer_B1.c: 269: DimmerLightsIntr->AdjStatus = 0;
 10357  021E  087B               	movf	_DimmerLightsIntr,w
 10358  021F  0086               	movwf	6
 10359  0220  0187               	clrf	7
 10360  0221  1201               	bcf	1,4
 10361                           
 10362                           ;Dimmer_B1.c: 270: }
 10363                           ;Dimmer_B1.c: 271: }
 10364                           ;Dimmer_B1.c: 272: } else if (DimmerLightsIntr->AdjRF == 1) {
 10365  0222  2A63               	goto	i1l261
 10366  0223                     i1l3687:	
 10367  0223  087B               	movf	_DimmerLightsIntr,w
 10368  0224  0086               	movwf	6
 10369  0225  0187               	clrf	7
 10370  0226  1D01               	btfss	1,2
 10371  0227  2A63               	goto	i1l261
 10372                           
 10373                           ;Dimmer_B1.c: 273: if (DimmerLightsIntr->DimmingValue < DimmerLightsIntr->MaxmumValue) {
 10374  0228  087B               	movf	_DimmerLightsIntr,w
 10375  0229  3E04               	addlw	4
 10376  022A  0086               	movwf	6
 10377  022B  0187               	clrf	7
 10378  022C  087B               	movf	_DimmerLightsIntr,w
 10379  022D  3E05               	addlw	5
 10380  022E  0084               	movwf	4
 10381  022F  0185               	clrf	5
 10382  0230  0800               	movf	0,w
 10383  0231  0201               	subwf	1,w
 10384  0232  1803               	skipnc
 10385  0233  2A3D               	goto	i1l3693
 10386                           
 10387                           ;Dimmer_B1.c: 274: DimmerLightsIntr->DimmingValue++;
 10388  0234  3001               	movlw	1
 10389  0235  00F2               	movwf	??_setDimmerLights_IntrControl
 10390  0236  087B               	movf	_DimmerLightsIntr,w
 10391  0237  3E04               	addlw	4
 10392  0238  0086               	movwf	6
 10393  0239  0187               	clrf	7
 10394  023A  0872               	movf	??_setDimmerLights_IntrControl,w
 10395  023B  0781               	addwf	1,f
 10396                           
 10397                           ;Dimmer_B1.c: 275: } else if (DimmerLightsIntr->DimmingValue > DimmerLightsIntr->MaxmumV
      +                          alue) {
 10398  023C  2A4F               	goto	i1l3697
 10399  023D                     i1l3693:	
 10400  023D  087B               	movf	_DimmerLightsIntr,w
 10401  023E  3E05               	addlw	5
 10402  023F  0086               	movwf	6
 10403  0240  0187               	clrf	7
 10404  0241  087B               	movf	_DimmerLightsIntr,w
 10405  0242  3E04               	addlw	4
 10406  0243  0084               	movwf	4
 10407  0244  0185               	clrf	5
 10408  0245  0800               	movf	0,w
 10409  0246  0201               	subwf	1,w
 10410  0247  1803               	skipnc
 10411  0248  2A4F               	goto	i1l3697
 10412                           
 10413                           ;Dimmer_B1.c: 276: DimmerLightsIntr->DimmingValue--;
 10414  0249  087B               	movf	_DimmerLightsIntr,w
 10415  024A  3E04               	addlw	4
 10416  024B  0086               	movwf	6
 10417  024C  0187               	clrf	7
 10418  024D  3001               	movlw	1
 10419  024E  0281               	subwf	1,f
 10420  024F                     i1l3697:	
 10421                           
 10422                           ;Dimmer_B1.c: 277: }
 10423                           ;Dimmer_B1.c: 278: if (DimmerLightsIntr->DimmingValue == DimmerLightsIntr->MaxmumValue) 
      +                          {
 10424  024F  087B               	movf	_DimmerLightsIntr,w
 10425  0250  3E05               	addlw	5
 10426  0251  0086               	movwf	6
 10427  0252  0187               	clrf	7
 10428  0253  087B               	movf	_DimmerLightsIntr,w
 10429  0254  3E04               	addlw	4
 10430  0255  0084               	movwf	4
 10431  0256  0185               	clrf	5
 10432  0257  0800               	movf	0,w
 10433  0258  0601               	xorwf	1,w
 10434  0259  1D03               	skipz
 10435  025A  2A63               	goto	i1l261
 10436                           
 10437                           ;Dimmer_B1.c: 279: DimmerLightsIntr->AdjRF = 0;
 10438  025B  087B               	movf	_DimmerLightsIntr,w
 10439  025C  0086               	movwf	6
 10440  025D  0187               	clrf	7
 10441  025E  1101               	bcf	1,2
 10442                           
 10443                           ;Dimmer_B1.c: 280: DimmerLightsIntr->Signal = 0;
 10444  025F  087B               	movf	_DimmerLightsIntr,w
 10445  0260  0086               	movwf	6
 10446  0261  0187               	clrf	7
 10447  0262  1081               	bcf	1,1
 10448  0263                     i1l261:	
 10449                           
 10450                           ;Dimmer_B1.c: 281: }
 10451                           ;Dimmer_B1.c: 282: }
 10452                           ;Dimmer_B1.c: 300: }
 10453                           ;Dimmer_B1.c: 301: }
 10454                           ;Dimmer_B1.c: 302: }
 10455                           ;Dimmer_B1.c: 304: if (DimmerLightsIntr->MosfetSignal == 1) {
 10456  0263  087B               	movf	_DimmerLightsIntr,w
 10457  0264  3E09               	addlw	9
 10458  0265  0086               	movwf	6
 10459  0266  0187               	clrf	7
 10460  0267  1D81               	btfss	1,3
 10461  0268  0008               	return
 10462                           
 10463                           ;Dimmer_B1.c: 305: DimmerLightsIntr->MosfetSignalCount++;
 10464  0269  3001               	movlw	1
 10465  026A  00F2               	movwf	??_setDimmerLights_IntrControl
 10466  026B  087B               	movf	_DimmerLightsIntr,w
 10467  026C  3E0C               	addlw	12
 10468  026D  0086               	movwf	6
 10469  026E  0187               	clrf	7
 10470  026F  0872               	movf	??_setDimmerLights_IntrControl,w
 10471  0270  0781               	addwf	1,f
 10472                           
 10473                           ;Dimmer_B1.c: 306: if (DimmerLightsIntr->MosfetSignalCount == 5) {
 10474  0271  087B               	movf	_DimmerLightsIntr,w
 10475  0272  3E0C               	addlw	12
 10476  0273  0086               	movwf	6
 10477  0274  0187               	clrf	7
 10478  0275  0801               	movf	1,w
 10479  0276  3A05               	xorlw	5
 10480  0277  1D03               	skipz
 10481  0278  0008               	return
 10482                           
 10483                           ;Dimmer_B1.c: 307: DimmerLightsIntr->MosfetSignalCount = 0;
 10484  0279  087B               	movf	_DimmerLightsIntr,w
 10485  027A  3E0C               	addlw	12
 10486  027B  0086               	movwf	6
 10487  027C  0187               	clrf	7
 10488  027D  0181               	clrf	1
 10489                           
 10490                           ;Dimmer_B1.c: 308: DimmerLightsIntr->MosfetSignal = 0;
 10491  027E  087B               	movf	_DimmerLightsIntr,w
 10492  027F  3E09               	addlw	9
 10493  0280  0086               	movwf	6
 10494  0281  0187               	clrf	7
 10495  0282  1181               	bcf	1,3
 10496  0283  0008               	return
 10497  0284                     __end_of_setDimmerLights_IntrControl:	
 10498                           
 10499                           	psect	text70
 10500  0A38                     __ptext70:	
 10501 ;; *************** function _DimmerIntrPointSelect *****************
 10502 ;; Defined at:
 10503 ;;		line 70 in file "../src/Dimmer_B1.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;  lights          1    wreg     unsigned char 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  lights          1    1[COMMON] unsigned char 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;		None               void
 10510 ;; Registers used:
 10511 ;;		wreg
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;Total ram usage:        2 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_setDimmerLights_IntrControl
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           
 10531                           ;psect for function _DimmerIntrPointSelect
 10532  0A38                     _DimmerIntrPointSelect:	
 10533                           
 10534                           ;incstack = 0
 10535                           ; Regs used in _DimmerIntrPointSelect: [wreg]
 10536                           ;DimmerIntrPointSelect@lights stored from wreg
 10537  0A38  00F1               	movwf	DimmerIntrPointSelect@lights
 10538                           
 10539                           ;Dimmer_B1.c: 72: if (lights == 1) {
 10540  0A39  0871               	movf	DimmerIntrPointSelect@lights,w
 10541  0A3A  3A01               	xorlw	1
 10542  0A3B  1D03               	skipz
 10543  0A3C  0008               	return
 10544                           
 10545                           ;Dimmer_B1.c: 73: DimmerLightsIntr = &DimmerLights1;
 10546  0A3D  30C2               	movlw	_DimmerLights1& (0+255)
 10547  0A3E  00F0               	movwf	??_DimmerIntrPointSelect
 10548  0A3F  0870               	movf	??_DimmerIntrPointSelect,w
 10549  0A40  00FB               	movwf	_DimmerLightsIntr
 10550  0A41  0008               	return
 10551  0A42                     __end_of_DimmerIntrPointSelect:	
 10552                           
 10553                           	psect	text71
 10554  0ACB                     __ptext71:	
 10555 ;; *************** function _IOC_ISR *****************
 10556 ;; Defined at:
 10557 ;;		line 401 in file "../src/MCU_B1.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;		None
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;		None               void
 10564 ;; Registers used:
 10565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;Total ram usage:        0 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    3
 10578 ;; This function calls:
 10579 ;;		_setDimmerReClock
 10580 ;; This function is called by:
 10581 ;;		_ISR
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           
 10586                           ;psect for function _IOC_ISR
 10587  0ACB                     _IOC_ISR:	
 10588                           
 10589                           ;MCU_B1.c: 402: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 10590                           
 10591                           ;incstack = 0
 10592                           ; Regs used in _IOC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10593  0ACB  1D8B               	btfss	11,3	;volatile
 10594  0ACC  0008               	return
 10595  0ACD  1C0B               	btfss	11,0	;volatile
 10596  0ACE  0008               	return
 10597  0ACF  0027               	movlb	7	; select bank7
 10598  0AD0  1D16               	btfss	22,2	;volatile
 10599  0AD1  0008               	return
 10600                           
 10601                           ;MCU_B1.c: 403: IOCBF2 = 0;
 10602  0AD2  1116               	bcf	22,2	;volatile
 10603                           
 10604                           ;MCU_B1.c: 404: IOCIF = 0;
 10605  0AD3  100B               	bcf	11,0	;volatile
 10606                           
 10607                           ;MCU_B1.c: 405: if (myMain.PowerON == 1) {
 10608  0AD4  0021               	movlb	1	; select bank1
 10609  0AD5  1C20               	btfss	_myMain^(0+128),0
 10610  0AD6  0008               	return
 10611                           
 10612                           ;MCU_B1.c: 408: setDimmerReClock();
 10613  0AD7  3189  21E3         	fcall	_setDimmerReClock
 10614  0AD9  0008               	return
 10615  0ADA                     __end_of_IOC_ISR:	
 10616                           
 10617                           	psect	text72
 10618  09E3                     __ptext72:	
 10619 ;; *************** function _setDimmerReClock *****************
 10620 ;; Defined at:
 10621 ;;		line 244 in file "../src/MCU_B1.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;		None
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;		None               void
 10628 ;; Registers used:
 10629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;Total ram usage:        0 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    2
 10642 ;; This function calls:
 10643 ;;		_setDimmerLights_IntrIOC_GO
 10644 ;; This function is called by:
 10645 ;;		_IOC_ISR
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           
 10650                           ;psect for function _setDimmerReClock
 10651  09E3                     _setDimmerReClock:	
 10652                           
 10653                           ;MCU_B1.c: 249: setDimmerLights_IntrIOC_GO(1);
 10654                           
 10655                           ;incstack = 0
 10656                           ; Regs used in _setDimmerReClock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10657  09E3  3001               	movlw	1
 10658  09E4  318C  24B1         	fcall	_setDimmerLights_IntrIOC_GO
 10659  09E6  0008               	return
 10660  09E7                     __end_of_setDimmerReClock:	
 10661                           
 10662                           	psect	text73
 10663  0CB1                     __ptext73:	
 10664 ;; *************** function _setDimmerLights_IntrIOC_GO *****************
 10665 ;; Defined at:
 10666 ;;		line 28 in file "../src/Dimmer_B1.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;  lights          1    wreg     unsigned char 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  lights          1    2[COMMON] unsigned char 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;		None               void
 10673 ;; Registers used:
 10674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;Total ram usage:        1 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    1
 10687 ;; This function calls:
 10688 ;;		_DimmerIntrIOCPointSelect
 10689 ;; This function is called by:
 10690 ;;		_setDimmerReClock
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           
 10695                           ;psect for function _setDimmerLights_IntrIOC_GO
 10696  0CB1                     _setDimmerLights_IntrIOC_GO:	
 10697                           
 10698                           ;incstack = 0
 10699                           ; Regs used in _setDimmerLights_IntrIOC_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10700                           ;setDimmerLights_IntrIOC_GO@lights stored from wreg
 10701  0CB1  00F2               	movwf	setDimmerLights_IntrIOC_GO@lights
 10702                           
 10703                           ;Dimmer_B1.c: 29: DimmerIntrIOCPointSelect(lights);
 10704  0CB2  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10705  0CB3  318A  222E  318C   	fcall	_DimmerIntrIOCPointSelect
 10706                           
 10707                           ;Dimmer_B1.c: 45: if (DimmerLightsIntrIOC->GO == 0 && DimmerLightsIntrIOC->MosfetSignal 
      +                          == 0) {
 10708  0CB6  087C               	movf	_DimmerLightsIntrIOC,w
 10709  0CB7  0086               	movwf	6
 10710  0CB8  0187               	clrf	7
 10711  0CB9  1801               	btfsc	1,0
 10712  0CBA  0008               	return
 10713  0CBB  087C               	movf	_DimmerLightsIntrIOC,w
 10714  0CBC  3E09               	addlw	9
 10715  0CBD  0086               	movwf	6
 10716  0CBE  0187               	clrf	7
 10717  0CBF  1981               	btfsc	1,3
 10718  0CC0  0008               	return
 10719                           
 10720                           ;Dimmer_B1.c: 46: DimmerLightsIntrIOC->GO = 1;
 10721  0CC1  087C               	movf	_DimmerLightsIntrIOC,w
 10722  0CC2  0086               	movwf	6
 10723  0CC3  0187               	clrf	7
 10724  0CC4  1401               	bsf	1,0
 10725                           
 10726                           ;Dimmer_B1.c: 47: DimmerLightsIntrIOC->MosfetSignal = 1;
 10727  0CC5  087C               	movf	_DimmerLightsIntrIOC,w
 10728  0CC6  3E09               	addlw	9
 10729  0CC7  0086               	movwf	6
 10730  0CC8  0187               	clrf	7
 10731  0CC9  1581               	bsf	1,3
 10732                           
 10733                           ;Dimmer_B1.c: 48: if (DimmerLightsIntrIOC->StatusFlag == 1) {
 10734  0CCA  087C               	movf	_DimmerLightsIntrIOC,w
 10735  0CCB  0086               	movwf	6
 10736  0CCC  0187               	clrf	7
 10737  0CCD  1F01               	btfss	1,6
 10738  0CCE  0008               	return
 10739                           
 10740                           ;Dimmer_B1.c: 49: DimmerLightsIntrIOC->MOSFET = 1;
 10741  0CCF  087C               	movf	_DimmerLightsIntrIOC,w
 10742  0CD0  3E09               	addlw	9
 10743  0CD1  0086               	movwf	6
 10744  0CD2  0187               	clrf	7
 10745  0CD3  1601               	bsf	1,4
 10746                           
 10747                           ;Dimmer_B1.c: 51: if (lights == 1) {
 10748  0CD4  0872               	movf	setDimmerLights_IntrIOC_GO@lights,w
 10749  0CD5  3A01               	xorlw	1
 10750  0CD6  1D03               	skipz
 10751  0CD7  0008               	return
 10752                           
 10753                           ;Dimmer_B1.c: 52: RB4 = 1;
 10754  0CD8  0020               	movlb	0	; select bank0
 10755  0CD9  160D               	bsf	13,4	;volatile
 10756                           
 10757                           ;Dimmer_B1.c: 53: RB4=1;
 10758  0CDA  160D               	bsf	13,4	;volatile
 10759  0CDB  0008               	return
 10760  0CDC                     __end_of_setDimmerLights_IntrIOC_GO:	
 10761                           
 10762                           	psect	text74
 10763  0A2E                     __ptext74:	
 10764 ;; *************** function _DimmerIntrIOCPointSelect *****************
 10765 ;; Defined at:
 10766 ;;		line 8 in file "../src/Dimmer_B1.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  lights          1    wreg     unsigned char 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;  lights          1    1[COMMON] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;		None               void
 10773 ;; Registers used:
 10774 ;;		wreg
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;Total ram usage:        2 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; This function calls:
 10787 ;;		Nothing
 10788 ;; This function is called by:
 10789 ;;		_setDimmerLights_IntrIOC_GO
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           
 10794                           ;psect for function _DimmerIntrIOCPointSelect
 10795  0A2E                     _DimmerIntrIOCPointSelect:	
 10796                           
 10797                           ;incstack = 0
 10798                           ; Regs used in _DimmerIntrIOCPointSelect: [wreg]
 10799                           ;DimmerIntrIOCPointSelect@lights stored from wreg
 10800  0A2E  00F1               	movwf	DimmerIntrIOCPointSelect@lights
 10801                           
 10802                           ;Dimmer_B1.c: 10: if (lights == 1) {
 10803  0A2F  0871               	movf	DimmerIntrIOCPointSelect@lights,w
 10804  0A30  3A01               	xorlw	1
 10805  0A31  1D03               	skipz
 10806  0A32  0008               	return
 10807                           
 10808                           ;Dimmer_B1.c: 11: DimmerLightsIntrIOC = &DimmerLights1;
 10809  0A33  30C2               	movlw	_DimmerLights1& (0+255)
 10810  0A34  00F0               	movwf	??_DimmerIntrIOCPointSelect
 10811  0A35  0870               	movf	??_DimmerIntrIOCPointSelect,w
 10812  0A36  00FC               	movwf	_DimmerLightsIntrIOC
 10813  0A37  0008               	return
 10814  0A38                     __end_of_DimmerIntrIOCPointSelect:	
 10815  007E                     btemp	set	126	;btemp
 10816  007E                     pic14e$flags	set	126
 10817  007E                     wtemp	set	126
 10818  007E                     wtemp0	set	126
 10819  0080                     wtemp1	set	128
 10820  0082                     wtemp2	set	130
 10821  0084                     wtemp3	set	132
 10822  0086                     wtemp4	set	134
 10823  0088                     wtemp5	set	136
 10824  007F                     wtemp6	set	127
 10825  007E                     ttemp	set	126
 10826  007E                     ttemp0	set	126
 10827  0081                     ttemp1	set	129
 10828  0084                     ttemp2	set	132
 10829  0087                     ttemp3	set	135
 10830  007F                     ttemp4	set	127
 10831  007E                     ltemp	set	126
 10832  007E                     ltemp0	set	126
 10833  0082                     ltemp1	set	130
 10834  0086                     ltemp2	set	134
 10835  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         108
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     75      80
    BANK1            80      0      62
    BANK2            80      0      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK1[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK2[32]), 

    DimmerLights11	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 

    DimmerLightsIntrIOC	PTR struct DimmerLights size(1) Largest target is 15
		 -> NULL(NULL[0]), DimmerLights1(BANK1[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_setDimmerLights_IntrControl
    _setDimmerLights_IntrControl->_DimmerIntrPointSelect
    _setDimmerReClock->_setDimmerLights_IntrIOC_GO
    _setDimmerLights_IntrIOC_GO->_DimmerIntrIOCPointSelect

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Switch_Main->_setMain_Exception
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setDimmerLights_AdjControl->_setDimmerLights_TriggerAdj
    _setMain_Exception->_setBuz
    _setDimmerLights_ErrorClose->_setDimmerLights_SwOff
    _setDimmerLights_SwOff->_setDimmerLights_Trigger
    _setDimmerLights_SwOff->_setDimmerLights_TriggerAdj
    _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
    _setDimmerLights_Trigger->_DimmerLightsPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_getMain_LightsStatus
    _getMain_LightsStatus->_getDimmerLights_Status
    _getDimmerLights_Status->_DimmerLightsPointSelect
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_setPercentValue
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights
    _setDimmerLights_Main->_setDimmerLights_Adj
    _setDimmerLights_Adj->_setPercentValue
    _setDimmerLights->_setPercentValue
    _setPercentValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _setLED->_LedPointSelect
    _setBuz->___awdiv
    _DimmerLights_Initialization->_setDimmerLights_Initialization
    _setDimmerLights_Initialization->_DimmerLightsPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   50431
                                             71 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0    1167
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          2     2      0    7119
                                             20 BANK0      2     2      0
                         _TouchPower
           _getMain_All_Error_Status
                  _setMain_Exception
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    3831
                                             16 BANK0      3     3      0
                      _SwPointSelect
                    _getSw_KeyStatus
                             _setBuz
         _setDimmerLights_AdjControl
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 3     3      0    1525
                                             13 BANK0      3     3      0
            _DimmerLightsPointSelect
          _getAll_DimmerLights_AdjGO
                             _setBuz
            _setDimmerLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_AdjControl                           4     4      0     382
                                              5 BANK0      4     4      0
            _DimmerLightsPointSelect
          _getAll_DimmerLights_AdjGO
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _getAll_DimmerLights_AdjGO                            1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3198
                                             13 BANK0      7     7      0
               _getDimmerLights_Line
               _getMain_LightsStatus
                             _setBuz
         _setDimmerLights_ErrorClose
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_ErrorClose                           5     5      0     867
                                              7 BANK0      5     5      0
            _DimmerLightsPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                2     2      0     577
                                              5 BANK0      2     2      0
            _DimmerLightsPointSelect
            _setDimmerLights_Trigger
         _setDimmerLights_TriggerAdj
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_TriggerAdj                           3     2      1     244
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Trigger                              3     2      1     244
                                              2 BANK0      3     2      1
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Line                                 1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMain_All_Error_Status                             2     2      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     865
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     865
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      66
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      66
                                              2 BANK0      3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     887
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     887
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    1     1      0    1346
                                              9 BANK0      1     1      0
                _Flash_Memory_Modify
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     182
                                              4 BANK0      5     5      0
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_Status                               2     2      0      67
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    1164
                                              4 BANK0      2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0   12871
                                             66 BANK0      2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1     934
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      91
                                              0 BANK0      2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   26066
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   26066
                                             70 BANK0      1     1      0
            _DimmerLightsPointSelect
                             _setBuz
                    _setDimmerLights
                _setDimmerLights_Adj
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Adj                                  4     3      1   11929
                                             66 BANK0      4     3      1
            _DimmerLightsPointSelect
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights                                      4     3      1   12838
                                             66 BANK0      4     3      1
            _DimmerLightsPointSelect
               _setDimmerLights_Line
                             _setLED
                    _setPercentValue
 ---------------------------------------------------------------------------------
 (2) _setPercentValue                                      6     6      0   11663
                                             60 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     430
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     223
                                             30 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3651
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4185
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    3106
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2837
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     821
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1167
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     478
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          1     1      0      44
                                              4 BANK0      1     1      0
              _Dimmer_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       2     2      0      44
                                              2 BANK0      2     2      0
            _DimmerLightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _DimmerLightsPointSelect                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Dimmer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0     132
                                              7 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0      66
        _setDimmerLights_IntrControl
 ---------------------------------------------------------------------------------
 (9) _setDimmerLights_IntrControl                          5     5      0      66
                                              2 COMMON     5     5      0
              _DimmerIntrPointSelect
 ---------------------------------------------------------------------------------
 (10) _DimmerIntrPointSelect                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0      66
                   _setDimmerReClock
 ---------------------------------------------------------------------------------
 (9) _setDimmerReClock                                     0     0      0      66
         _setDimmerLights_IntrIOC_GO
 ---------------------------------------------------------------------------------
 (10) _setDimmerLights_IntrIOC_GO                          1     1      0      66
                                              2 COMMON     1     1      0
           _DimmerIntrIOCPointSelect
 ---------------------------------------------------------------------------------
 (11) _DimmerIntrIOCPointSelect                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DimmerLights_Initialization
     _Dimmer_Initialization
     _setDimmerLights_Initialization
       _DimmerLightsPointSelect
   _DimmerLights_Main
     _setDimmerLights_Main
       _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights
         _DimmerLightsPointSelect
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
       _setDimmerLights_Adj
         _DimmerLightsPointSelect
         _setPercentValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
     _setPercentValue
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getMain_LightsStatus
       _getDimmerLights_Status
         _DimmerLightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _getMain_All_Error_Status
     _setMain_Exception
       _getDimmerLights_Line
       _getMain_LightsStatus
         _getDimmerLights_Status
           _DimmerLightsPointSelect
       _setBuz
         ___awdiv
       _setDimmerLights_ErrorClose
         _DimmerLightsPointSelect
         _getDimmerLights_Status
           _DimmerLightsPointSelect
         _setDimmerLights_SwOff
           _DimmerLightsPointSelect
           _setDimmerLights_Trigger
             _DimmerLightsPointSelect
           _setDimmerLights_TriggerAdj
             _DimmerLightsPointSelect
       _setLED
         _LedPointSelect
     _setSw_Main
       _SwPointSelect
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_AdjControl
         _DimmerLightsPointSelect
         _getAll_DimmerLights_AdjGO
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _setDimmerLights_SwOff
         _DimmerLightsPointSelect
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
         _setDimmerLights_TriggerAdj
           _DimmerLightsPointSelect
       _setDimmerLights_SwOn
         _DimmerLightsPointSelect
         _getAll_DimmerLights_AdjGO
         _setBuz
           ___awdiv
         _setDimmerLights_Trigger
           _DimmerLightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _setDimmerReClock
       _setDimmerLights_IntrIOC_GO
         _DimmerIntrIOCPointSelect
   _TMR1_ISR
     _setDimmerLights_IntrControl
       _DimmerIntrPointSelect

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3E       7       77.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Nov 25 16:21:09 2014

                   __size_of_Switch_Main 001D                    ?_Flash_Memory_Erasing 0070  
                           _WDT_Clearing 07FE             ??_setDimmerLights_TriggerAdj 0023  
                                     l50 0755                                       l60 0EA2  
                                     l62 0EB2                                       l48 0741  
                                     l58 0EB8                                       l59 0EB4  
                                     _RD 0CA8                                       _WR 0CA9  
                           ___awdiv@sign 0026                                       _Sw 006D  
                   _getDimmerLights_Line 0A6C                             ___ftadd@exp1 004D  
                           ___ftadd@exp2 004C                setDimmerLights_Adj@lights 0065  
                   _setDimmerLights_Main 0F59                     _setDimmerLights_Line 0A8E  
                           ___ftadd@sign 004B                     _setDimmerLights_SwOn 0E3C  
                                    l700 0D04                                      l709 0F51  
                                    l814 0DB5                                      l829 0EF7  
                                    l686 0E36                                      _GIE 005F  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 000C                                      _RA4 0064  
                                    _LED 006C                                      _RB3 006B  
                                    _RB4 006C                                      _RA6 0066  
                                    _RB5 006D                                      _RA7 0067  
                                    _ISR 0004                                      _WDT 0078  
           getDimmerLights_Status@lights 0022                                      _Sw1 00D1  
              setDimmerLights_Adj@status 0062                    _Buzzer_Initialization 09E0  
                        __end_of_ADC_Set 0A13                                      wreg 0009  
   setDimmerLights_Initialization@lights 0023             getDimmerLights_Status@status 0023  
                 _setMain_Exception$2533 0030                          _setDimmerLights 0586  
                      ??_getSw_KeyStatus 0020                                     ?_ISR 0070  
        setDimmerLights_ErrorClose@count 0028                             ___ftdiv@cntr 0038  
                        __end_of_IOC_ISR 0ADA                             ___ftdiv@sign 003D  
                                   l1204 0B67                                     l1230 0074  
                                   l1218 0BD2                                     l1228 016C  
                                   l3013 0663                                     l3023 068B  
                                   l3015 066D                                     l3103 0C29  
                                   l3025 0693                                     l3017 0672  
                                   l3009 065C                 ?_DimmerLightsPointSelect 0070  
                                   l3115 02AC                                     l3125 02C2  
                                   l3213 04DD                                     l3205 04C4  
                                   l1463 069D                                     l3143 02EF  
                                   l3119 02B3                                     l3065 0FC2  
                                   l1457 0686                                     l3161 0335  
                                   l3145 02F9                                     l3137 02DC  
                                   l3091 0FF9                                     l3083 0FE8  
                                   l3075 0FCA                                     l3059 0FB7  
                                   l3155 0315                                     l3147 02FE  
                                   l3235 0518                                     l3077 0FD6  
                                   l3165 0347                                     l3157 031F  
                                   l3149 0302                                     l3261 0563  
                                   l3253 0548                          __end_of_IOC_Set 0ACB  
                                   l3333 0E00                                     l3501 0773  
                                   l1486 0323                                     l3087 0FF1  
                                   l3343 0D7B                                     l3175 0362  
                                   l3191 0483                                     l3263 056C  
                                   l3255 0556                                     l3503 07A2  
                                   l3185 046D                                     l3265 056F  
                                   l4161 0EE1                                     l3419 05C5  
                                   l4075 03EC                                     l4171 0EF8  
                                   l3357 0D96                                     l3349 0D84  
                                   l3269 057D                                     l3517 0A74  
                                   l3461 0E6F                                     l3439 07D1  
                                   l4191 0BD9                                     l3635 0B33  
                                   l3475 0D4F                                     l3573 0CEC  
                                   l3821 0F27                                     l3901 0063  
                                   l3727 0F7B                                     l3815 0F12  
                                   l3729 0F81                                     l3841 06C0  
                                   l3739 0FA6                                     l3595 0CA9  
                                   l3499 079C                                     l3597 0C8D  
                                   l3917 009B                                     l3599 0CAE  
                                   l3855 06E1                                     l3927 00C8  
                                   l3865 0701                                     l3849 06D3  
                                   l3883 0B6C                                     l3859 06F1  
                                   l3867 070A                                     l3939 00FD  
                                   l3947 0127                    _setDimmerLights_SwOff 0DD2  
                                   l3887 0B72                                     l3985 0E8C  
                  _myMain_Initialization 0AE9                                     _CFGS 0CAE  
                           __CFG_WDTE$ON 0000                                     _FREE 0CAC  
                                   u2105 068E                                     _LATA 010C  
                                   _LATB 010D                                     u2215 0FD7  
                                   u2135 06A4                                     u3015 077C  
                                   _LATC 010E                                     u2225 0FE1  
                                   u2065 0668                                     u2235 0FE9  
                                   u2085 0681                                     u3045 0B5A  
                                   u2425 0303                                     u2195 0FCD  
                                   u2365 02DD                                     u2525 0495  
                                   u2605 051F                                     u3085 0C96  
                                   u2455 0316                                     u2535 04A5  
                                   u2545 04C5                                     u2395 02F0  
                                   u2555 04D4                                     u2635 0549  
                                   u2565 04DE                                     u3705 0E82  
                                   u2665 0564                                     _PEIE 005E  
                                   u3945 0ED0                                     u3955 0EEF  
                                   u3895 0E2D                                     u3975 0F06  
                                   _LWLO 0CAD                                     _WREN 0CAA  
                                   _Buz1 00B0                                     _main 0D9F  
                           ___ftpack@arg 0020                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 001E                                     btemp 007E  
                        __end_of_WDT_Set 0A4C                                     ltemp 007E  
                       _setDimmerReClock 09E3                                     start 0013  
                                   ttemp 007E                                     wtemp 007E  
                                  ??_ISR 0077                             ___fttol@exp1 005B  
                           ___fttol@lval 0057                   _getDimmerLights_Status 0ADA  
         __size_of_DimmerIntrPointSelect 000A                         __end_of_LED_Main 09F3  
       setDimmerLights_ErrorClose@lights 0029            __end_of_DimmerIntrPointSelect 0A42  
                  ?_getDimmerLights_Line 0070                    ?_setDimmerLights_Main 0070  
                  ?_setDimmerLights_Line 0070                    ?_setDimmerLights_SwOn 0070  
                                  ?_main 0067                          __end_of___awdiv 1000  
                        __end_of___ftadd 037A                          __end_of___ftdiv 04FF  
                        __end_of___ftneg 0A1C                          ___awdiv@divisor 0020  
                                  _T1CON 0018                          __end_of___fttol 0586  
                                  _IOCBF 0396                                    _IOCBN 0395  
                                  _IOCBP 0394                                    _IOCIE 005B  
                                  _IOCIF 0058                                    i1l261 0263  
                        ___awdiv@counter 0025                                    _TMR1H 0017  
                                  _TMR1L 0016                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                                  _WPUB1 1069                                    _WPUB2 106A  
                   setMain_Exception@buz 002F                  __end_of_Timeout_Counter 0B60  
                          __CFG_WRT$HALF 0000       __end_of_setDimmerLights_IntrIOC_GO 0CDC  
             _setDimmerLights_IntrIOC_GO 0CB1                         __end_of_TMR1_ISR 0C87  
     __end_of_setDimmerLights_ErrorClose 07BD               _setDimmerLights_ErrorClose 0769  
                       __end_of_TMR1_Set 0ABE                            ___awtoft@sign 002D  
            DimmerIntrPointSelect@lights 0071                            ___ftpack@sign 0024  
                          ??_Buzzer_Main 0020                         __end_of_WDT_Main 0B28  
                         __CFG_BOREN$OFF 0000                       Flash_Memory_Read@i 0021  
                                  ltemp0 007E                                    ltemp1 0082  
                                  ltemp2 0086                                    ltemp3 0080  
         __size_of_setLED_Initialization 0010             __end_of_getMain_LightsStatus 0CB1  
          __end_of_setLED_Initialization 0B08                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
            __size_of_Flash_Memory_Write 002F                   ??_Flash_Memory_Erasing 0020  
                        __initialization 0015                        ??_setPercentValue 005C  
                           __end_of_main 0DD2                         __end_of_Fosc_Set 09F7  
                              ??_ADC_Set 0020                  __end_of_setDimmerLights 05EE  
                   _setSw_Initialization 0B08                                   ??_main 006B  
                          ___fttol@sign1 0056                           _setMemory_Data 0A9A  
                 ?_Buzzer_Initialization 0070        __size_of_DimmerIntrIOCPointSelect 000A  
              ?_DimmerIntrIOCPointSelect 0070                                ??_IOC_ISR 0073  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 0A61  
                ??_Switch_Initialization 0025             setDimmerLights_AdjControl@sw 0028  
                 ?_setDimmerLights_SwOff 0070                   ?_myMain_Initialization 0070  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                       ___awdiv@dividend 0022                                ??_WDT_Set 0020  
                       __end_of___awtoft 0C40                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                       __end_of___ftpack 06B4                 _getMain_All_Error_Status 09F7  
                                 _IOCBF2 1CB2                  _setDimmerLights_Trigger 0BA7  
                                 i1l3661 01C9                                   i1l3681 020F  
                                 i1l3693 023D                                   i1l3685 021E  
                                 i1l3679 020A                                   i1l3687 0223  
                                 i1l3697 024F                                   _FVRCON 0117  
                                 u315_25 01A6                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                                 u382_25 0C81                                   _OSCCON 0099  
                                 _TMR1IE 0488                                   _TMR1IF 0088  
                                 _IO_Set 0B75                                   _WDTCON 0097  
                  _Dimmer_Initialization 0003                                   _Dimmer 00BC  
             __end_of_Mcu_Initialization 0B4B                      __end_of_Buzzer_Main 0EBF  
                                 _Memory 0120                                   _Timer1 00BF  
     __end_of_setDimmerLights_TriggerAdj 0BFE               _setDimmerLights_TriggerAdj 0BE0  
                              ??___awdiv 0024                                ??___ftadd 0047  
                              ??___ftdiv 0034                                ??___ftneg 0041  
                  setDimmerLights@lights 0065                                ??___fttol 0052  
           ?_Flash_Memory_Initialization 0070                   ??_getDimmerLights_Line 0020  
                 ??_setDimmerLights_Main 0066                   ??_setDimmerLights_Line 0020  
                 ??_setDimmerLights_SwOn 002D                                   _setLED 0D6C  
                                 _myMain 00A0                   __end_of_setMemory_Data 0AA6  
                       _DimmerLightsIntr 007B                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0062                         ___awdiv@quotient 0027  
                                 _setBuz 0710         ??_setDimmerLights_Initialization 0022  
        ?_setDimmerLights_Initialization 0070              ?_setDimmerLights_AdjControl 0070  
    __end_of_setDimmerLights_IntrControl 0284              _setDimmerLights_IntrControl 0175  
               Flash_Memory_Read@address 0022                         ?_Timeout_Counter 0070  
                  __end_of_SwPointSelect 0A82             __size_of_Flash_Memory_Modify 004E  
      setDimmerLights_IntrControl@lights 0076                  __size_of_LedPointSelect 000B  
                    Flash_Memory_Write@i 0021             __size_of_Flash_Memory_Unlock 0009  
             getMain_LightsStatus@status 0028                               _TouchPower 0B60  
             ?_getAll_DimmerLights_AdjGO 0070                  __end_of__initialization 0039  
                              ?_LED_Main 0070                               ___ftadd@f1 0041  
                             ___ftadd@f2 0044                            ?_my_MainTimer 0070  
                             ___ftdiv@f1 0031                               ___ftdiv@f2 002E  
                             ___ftdiv@f3 0039                               ___ftneg@f1 003E  
                             ___awtoft@c 0028             ?_DimmerLights_Initialization 0070  
                             ___fttol@f1 004E                           __pcstackCOMMON 0070  
         DimmerIntrIOCPointSelect@lights 0071                             __pidataBANK2 0BFE  
                              ?_TMR1_ISR 0070                                ?_TMR1_Set 0070  
           __size_of_setDimmerLights_Adj 0041                       _LED_Initialization 09EB  
                        _getSw_KeyStatus 0B28                          ?_setMemory_Data 0020  
          ??_Flash_Memory_Initialization 0062                         ?_setDimmerLights 0062  
                              ?_WDT_Main 0070                     _getMain_LightsStatus 0C87  
             __end_of_set_TimeoutCleared 0A00                 __end_of_setDimmerReClock 09E7  
                    ?_LED_Initialization 0070                    getMain_LightsStatus@i 0026  
                         _DimmerLights11 007A                     __size_of_setLED_Main 002F  
              ??_setDimmerLights_Trigger 0023                               __pbssBANK0 006B  
                             __pbssBANK1 00A0                               __pbssBANK2 0120  
                              ?_Fosc_Set 0070                              _Buzzer_Main 0E75  
                 ?_Dimmer_Initialization 0070                                  ?_IO_Set 0070  
                         ??_my_MainTimer 002D                               ??_LED_Main 0025  
                        __CFG_VCAPEN$OFF 0000                getMain_LightsStatus@count 0025  
                          ??_Switch_Main 0034                     ??_LED_Initialization 0025  
                           _DimmerLights 006B                        LedPointSelect@led 0021  
                            setBuz@count 002C                  ?_getDimmerLights_Status 0070  
                             __pmaintext 0D9F         __size_of_DimmerLightsPointSelect 000B  
          ??_DimmerLights_Initialization 0024                               ??_TMR1_ISR 0077  
                             ??_TMR1_Set 0020                               __pintentry 0004  
                 ??_setSw_Initialization 0024                                  ?_setLED 0022  
                                _ADC_Set 0A0C                                  ?_setBuz 0029  
                              ?___awtoft 0028                                ?___ftpack 0020  
                             ??_WDT_Main 0020                    ?_getMain_LightsStatus 0070  
                                _IOC_ISR 0ACB                                  _IOC_Set 0ABE  
                      _Flash_Memory_Main 0E06                        _Flash_Memory_Read 0B8D  
            ?_setDimmerLights_IntrIOC_GO 0070              ?_setDimmerLights_ErrorClose 0070  
                     ?_Flash_Memory_Main 0070                       ?_Flash_Memory_Read 0070  
                                _WDT_Set 0A42                               ??_Fosc_Set 0020  
                            ?_TouchPower 0070                          _setPercentValue 05EE  
                        __size_of_IO_Set 0018                      ??_Flash_Memory_Main 0029  
                    ??_Flash_Memory_Read 0020           __end_of_getDimmerLights_Status 0AE9  
                __end_of_getSw_KeyStatus 0B39         __end_of_DimmerIntrIOCPointSelect 0A38  
        __end_of_setDimmerLights_Trigger 0BC3                                  ___awdiv 0FAC  
                                ___ftadd 0284                                  ___ftdiv 0456  
                                ___ftneg 0A13                                  ___fttol 04FF  
                    __end_of_Switch_Main 0BE0                  ??_Buzzer_Initialization 0020  
                             ??___awtoft 002B                               ??___ftpack 0025  
                        __size_of_setLED 0033                          __size_of_setBuz 0059  
                                __ptext1 0EBF                                  __ptext2 0AE9  
                                __ptext3 0B18                                  __ptext4 07FE  
                                __ptext5 0BC3                                  __ptext6 003D  
                                __ptext7 0E3C                                  __ptext8 0D3A  
                                __ptext9 0A4C                    _DimmerIntrPointSelect 0A38  
                           __size_of_ISR 000F               ??_getMain_All_Error_Status 0020  
              __end_of_Flash_Memory_Main 0E3C                __end_of_Flash_Memory_Read 0BA7  
                ??_setDimmerLights_SwOff 0025                  ??_myMain_Initialization 0020  
                      _DimmerLights_Main 09E7            DimmerLightsPointSelect@lights 0021  
                     ?_DimmerLights_Main 0070                                  _product 006F  
                         _LedPointSelect 0A61                                  clrloop0 0A07  
         __size_of_Switch_Initialization 0009            __end_of_Switch_Initialization 0A2E  
                   end_of_initialization 0039               __end_of_Flash_Memory_Write 0D0B  
                                init_ram 0A00                      ??_DimmerLights_Main 0067  
                   Flash_Memory_Read@ret 0023                                  initloop 0A01  
                             _setSw_Main 003D                   setDimmerLights_SwOn@sw 002F  
                   Flash_Memory_Modify@i 0025                    _setLED_Initialization 0AF8  
            ?_setDimmerLights_TriggerAdj 0022            __size_of_Flash_Memory_Erasing 000C  
                    _Flash_Memory_Modify 0F0B                      _Flash_Memory_Unlock 0A1C  
                 ??_getMain_LightsStatus 0024                      __size_of_TouchPower 0015  
               setLED_Initialization@led 0024                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 09EB                       _Mcu_Initialization 0B39  
                   __end_of_my_MainTimer 0F0B                         __CFG_FOSC$INTOSC 0000  
                 __end_of_LedPointSelect 0A6C                  __end_of_setPercentValue 0653  
                    ?_Mcu_Initialization 0070                     ?_Flash_Memory_Modify 0070  
                    _setDimmerLights_Adj 07BD                     ?_Flash_Memory_Unlock 0070  
            ??_getAll_DimmerLights_AdjGO 0020          getMain_All_Error_Status@command 0070  
                            ___ftdiv@exp 003C                           __end_of_IO_Set 0B8D  
                            _Switch_Main 0BC3                        __size_of_LED_Main 0004  
                       ?_getSw_KeyStatus 0070                  _DimmerLightsPointSelect 0A56  
                      _setMain_Exception 06B4                         ??_setMemory_Data 0021  
                   ??_Mcu_Initialization 0021                            ?_WDT_Clearing 0070  
                     ?_setMain_Exception 0070                     ?_setDimmerLights_Adj 0062  
               setMain_Exception@command 0033                 _DimmerIntrIOCPointSelect 0A2E  
        _setDimmerLights_AdjControl$1573 0027                        getSw_KeyStatus@sw 0070  
                      __size_of_TMR1_ISR 0024            __size_of_getDimmerLights_Line 000B  
                 ?_DimmerIntrPointSelect 0070                        __size_of_TMR1_Set 000C  
          __size_of_setDimmerLights_Main 0053                           __end_of_setLED 0D9F  
          __size_of_setDimmerLights_Line 000C            __size_of_setDimmerLights_SwOn 0039  
                         __end_of_setBuz 0769                      ??_setMain_Exception 002D  
             __size_of_Flash_Memory_Main 0036               __size_of_Flash_Memory_Read 001A  
                      __size_of_WDT_Main 0010                        ?_setDimmerReClock 0070  
                    start_initialization 0015                          ?_LedPointSelect 0070  
                            __end_of_ISR 0013                    ??_Flash_Memory_Modify 0024  
                     ??_setDimmerReClock 0073                    ??_Flash_Memory_Unlock 0020  
                ??_Dimmer_Initialization 0020                             ?_Buzzer_Main 0070  
                     _set_TimeoutCleared 09FB                                 ??_IO_Set 0020  
               __size_of_Timeout_Counter 0015                                _VarErrLED 00DA  
                            ?_setSw_Main 0070                   ?_setLED_Initialization 0070  
                      __size_of_Fosc_Set 0004                __end_of_setMain_Exception 0710  
                    ?_set_TimeoutCleared 0070                           ??_WDT_Clearing 0020  
                  ??_setDimmerLights_Adj 0063                   __size_of_SwPointSelect 000B  
                            __pdataBANK2 0145                _getAll_DimmerLights_AdjGO 0A4C  
                               ??_setLED 0023                                 ?_ADC_Set 0070  
                               ??_setBuz 002B         __end_of_getMain_All_Error_Status 09FB  
             __size_of_DimmerLights_Main 0004                       setMemory_Data@data 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0022  
                      __size_of___ftpack 0061                                 ?_IOC_ISR 0070  
                            __pbssCOMMON 0078                                 ?_IOC_Set 0070  
                              ___latbits 0003                            __pcstackBANK0 0020  
                   ??_set_TimeoutCleared 0020                         ?_setPercentValue 0070  
               __size_of_setDimmerLights 0068                                 ?_WDT_Set 0070  
                           ??_TouchPower 0020                            _DimmerLights1 00C2  
              ??_DimmerLightsPointSelect 0020                                __pnvBANK0 006F  
            __size_of_LED_Initialization 0004                               setBuz@time 0029  
    __end_of_Flash_Memory_Initialization 0456              _Flash_Memory_Initialization 037A  
                               ?___awdiv 0020                                 ?___ftadd 0041  
                               ?___ftdiv 002E                                 ?___ftneg 003E  
                               ?___fttol 004E                    __size_of_my_MainTimer 004C  
          __size_of_setSw_Initialization 0010           __size_of_Buzzer_Initialization 0003  
          __end_of_Buzzer_Initialization 09E3                         setPercentValue@i 005F  
               getDimmerLights_Line@line 0020                       __end_of_TouchPower 0B75  
               ?_setDimmerLights_Trigger 0022                      __size_of_setSw_Main 0138  
         __size_of_setDimmerLights_SwOff 0034           __size_of_myMain_Initialization 000F  
          __end_of_setDimmerLights_SwOff 0E06            __end_of_myMain_Initialization 0AF8  
                          _SwPointSelect 0A77                      __end_of_setLED_Main 0D3A  
                    _DimmerLightsIntrIOC 007C             setDimmerLights_SwOff@command 0025  
                               _LED_Main 09EF                          SwPointSelect@sw 0021  
                              clear_ram0 0A06               __size_of_setMain_Exception 005C  
                           _my_MainTimer 0EBF      __end_of_DimmerLights_Initialization 0A8E  
            _DimmerLights_Initialization 0A82           setDimmerLights_Trigger@command 0022  
                               _GO_nDONE 04E9                        ??_Timeout_Counter 0020  
                     _Flash_Memory_Write 0CDC                                 _TMR1_ISR 0C63  
                               _TMR1_Set 0AB2        setDimmerLights_TriggerAdj@command 0022  
                               _WDT_Main 0B18                    getSw_KeyStatus@status 0021  
                       __size_of_ADC_Set 0007                      ?_Flash_Memory_Write 0070  
           ??_setDimmerLights_AdjControl 0025                             setSw_Main@sw 0032  
       setDimmerLights_IntrIOC_GO@lights 0072                         __size_of_IOC_ISR 000F  
           ?_setDimmerLights_IntrControl 0070           getMain_All_Error_Status@status 0020  
                       __size_of_IOC_Set 000D             __end_of_Flash_Memory_Erasing 0AB2  
                         ?_SwPointSelect 0070                           setLED_Main@led 0024  
                   __end_of_WDT_Clearing 0800                                 _Fosc_Set 09F3  
                       __size_of_WDT_Set 000A                  setMain_Exception@status 0032  
                  _Switch_Initialization 0A25        __size_of_getMain_All_Error_Status 0004  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0063  
              ?_getMain_All_Error_Status 0070                     __size_of_Buzzer_Main 004A  
                           ?_Switch_Main 0070               ??_DimmerIntrIOCPointSelect 0070  
           Flash_Memory_Initialization@i 0063                                 _SwDetect 006E  
                              setLED@led 0023                  ??_DimmerIntrPointSelect 0070  
    __size_of_setDimmerLights_AdjControl 0032                         __size_of___awdiv 0054  
                       __size_of___ftadd 00F6                         __size_of___ftdiv 00A9  
                       __size_of___ftneg 0009                         __size_of___fttol 0087  
               setDimmerLights_SwOn@idle 002E                                 ___awtoft 0C1E  
                       ??_LedPointSelect 0020                                 ___ftpack 0653  
          __size_of_getMain_LightsStatus 002A                              _setLED_Main 0D0B  
     __size_of_getAll_DimmerLights_AdjGO 000A                                 __ptext10 0B28  
                               __ptext11 0A77                                 __ptext20 0B08  
                               __ptext12 06B4                                 __ptext21 0B60  
                               __ptext13 0769                                 __ptext30 0A0C  
                               __ptext22 09FB                                 __ptext14 0DD2  
                               __ptext31 09EF                                 __ptext23 0B4B  
                               __ptext15 0BE0                                 __ptext40 037A  
                               __ptext32 0D0B                                 __ptext24 0B39  
                               __ptext16 0BA7                                 __ptext41 0A9A  
                               __ptext33 09EB                                 __ptext25 0A42  
                               __ptext17 0A6C                                 __ptext50 04FF  
                               __ptext42 0CDC                                 __ptext34 0AF8  
                               __ptext26 0AB2                                 __ptext18 09F7  
                               __ptext51 0A13                                 __ptext43 0A1C  
                               __ptext35 0E06                                 __ptext27 0B75  
                               __ptext19 0A25                                 __ptext60 0FAC  
                               __ptext52 0456                                 __ptext44 0B8D  
                               __ptext36 0C87                                 __ptext28 0ABE  
                               __ptext61 0A82                                 __ptext53 0284  
                               __ptext45 09E7                                 __ptext37 0ADA  
                               __ptext29 09F3                                 __ptext70 0A38  
                               __ptext62 0C40                                 __ptext54 0C1E  
                               __ptext46 0F59                                 __ptext38 0F0B  
                               __ptext71 0ACB                                 __ptext63 0A56  
                               __ptext55 0653                                 __ptext47 07BD  
                               __ptext39 0AA6                                 __ptext72 09E3  
                               __ptext64 0003                                 __ptext56 0D6C  
                               __ptext48 0586                                 __ptext73 0CB1  
                               __ptext65 0E75                                 __ptext57 0A61  
                               __ptext49 05EE                                 __ptext74 0A2E  
                               __ptext66 09E0                                 __ptext58 0A8E  
                               __ptext59 0710                                 __ptext68 0C63  
                               __ptext69 0175                                 __product 0145  
          ??_setDimmerLights_IntrControl 0072                  ??_setLED_Initialization 0024  
               ??_getDimmerLights_Status 0022           __size_of_Dimmer_Initialization 0001  
           __end_of_getDimmerLights_Line 0A77            __end_of_Dimmer_Initialization 0004  
           __end_of_setDimmerLights_Main 0FAC             __end_of_setDimmerLights_Line 0A9A  
                       Switch_Main@error 0035             __end_of_setDimmerLights_SwOn 0E75  
                           ??_setSw_Main 0030                            setLED@command 0022  
                          __size_of_main 0033               setDimmerLights_Main@lights 0066  
              __size_of_setDimmerReClock 0004           setDimmerLights_AdjControl@idle 0026  
          setDimmerLights_Trigger@lights 0024              __size_of_Mcu_Initialization 0012  
            setDimmerLights_ErrorClose@i 002A         setDimmerLights_TriggerAdj@lights 0024  
                               main@argc 0067                                 main@argv 0069  
                   _getSw_KeyStatus$4285 0022                 __size_of_getSw_KeyStatus 0011  
            __end_of_Flash_Memory_Modify 0F59              __end_of_Flash_Memory_Unlock 0A25  
                        ??_SwPointSelect 0020                       __end_of_setSw_Main 0175  
                            pic14e$flags 007E             ??_setDimmerLights_IntrIOC_GO 0072  
             setDimmerLights_Line@lights 0020             ??_setDimmerLights_ErrorClose 0027  
                setDimmerLights_SwOff@sw 0026        __end_of_getAll_DimmerLights_AdjGO 0A56  
                               intlevel1 0000                   ?_Switch_Initialization 0070  
 __end_of_setDimmerLights_Initialization 0C63  __size_of_setDimmerLights_Initialization 0023  
         _setDimmerLights_Initialization 0C40              __end_of_setDimmerLights_Adj 07FE  
   __size_of_setDimmerLights_IntrControl 010F                     _Flash_Memory_Erasing 0AA6  
    __size_of_setDimmerLights_IntrIOC_GO 002B      __size_of_setDimmerLights_ErrorClose 0054  
                  __size_of_WDT_Clearing 0002       __end_of_setDimmerLights_AdjControl 0D6C  
             _setDimmerLights_AdjControl 0D3A                  __size_of_setMemory_Data 000C  
   __size_of_Flash_Memory_Initialization 00DC              __size_of_set_TimeoutCleared 0005  
                  setMemory_Data@address 0022             __end_of_setSw_Initialization 0B18  
                        _Timeout_Counter 0B4B          __size_of_getDimmerLights_Status 000F  
             __end_of_LED_Initialization 09EF         __size_of_setDimmerLights_Trigger 001C  
               __size_of_setPercentValue 0065                     setPercentValue@value 005E  
         getAll_DimmerLights_AdjGO@adjgo 0020  
