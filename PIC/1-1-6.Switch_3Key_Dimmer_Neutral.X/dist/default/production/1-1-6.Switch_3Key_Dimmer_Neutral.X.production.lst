

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Mar 27 17:06:12 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	text70,local,class=CODE,merge=1,delta=2
    92                           	psect	text71,local,class=CODE,merge=1,delta=2
    93                           	psect	text72,local,class=CODE,merge=1,delta=2
    94                           	psect	text73,local,class=CODE,merge=1,delta=2
    95                           	psect	text74,local,class=CODE,merge=1,delta=2
    96                           	psect	text75,local,class=CODE,merge=1,delta=2
    97                           	psect	text76,local,class=CODE,merge=1,delta=2
    98                           	psect	text77,local,class=CODE,merge=1,delta=2
    99                           	psect	text78,local,class=CODE,merge=1,delta=2
   100                           	psect	text79,local,class=CODE,merge=1,delta=2
   101                           	psect	text80,local,class=CODE,merge=1,delta=2
   102                           	psect	text81,local,class=CODE,merge=1,delta=2
   103                           	psect	text82,local,class=CODE,merge=1,delta=2
   104                           	psect	text83,local,class=CODE,merge=1,delta=2
   105                           	psect	text84,local,class=CODE,merge=1,delta=2
   106                           	psect	text85,local,class=CODE,merge=1,delta=2
   107                           	psect	text86,local,class=CODE,merge=1,delta=2
   108                           	psect	text87,local,class=CODE,merge=1,delta=2
   109                           	psect	text88,local,class=CODE,merge=1,delta=2
   110                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text92,local,class=CODE,merge=1,delta=2
   114                           	psect	text93,local,class=CODE,merge=1,delta=2
   115                           	psect	text94,local,class=CODE,merge=1,delta=2
   116                           	psect	text95,local,class=CODE,merge=1,delta=2
   117                           	psect	text96,local,class=CODE,merge=1,delta=2
   118                           	psect	text97,local,class=CODE,merge=1,delta=2
   119                           	psect	text98,local,class=CODE,merge=1,delta=2
   120                           	psect	text99,local,class=CODE,merge=1,delta=2
   121                           	psect	text100,local,class=CODE,merge=1,delta=2
   122                           	psect	text101,local,class=CODE,merge=1,delta=2
   123                           	psect	text102,local,class=CODE,merge=1,delta=2
   124                           	psect	text103,local,class=CODE,merge=1,delta=2
   125                           	psect	text104,local,class=CODE,merge=1,delta=2
   126                           	psect	text105,local,class=CODE,merge=1,delta=2
   127                           	psect	text106,local,class=CODE,merge=1,delta=2
   128                           	psect	text107,local,class=CODE,merge=1,delta=2
   129                           	psect	text108,local,class=CODE,merge=1,delta=2
   130                           	psect	text109,local,class=CODE,merge=1,delta=2
   131                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text111,local,class=CODE,merge=1,delta=2
   133                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text113,local,class=CODE,merge=1,delta=2
   135                           	psect	text114,local,class=CODE,merge=1,delta=2
   136                           	psect	text115,local,class=CODE,merge=1,delta=2
   137                           	psect	text116,local,class=CODE,merge=1,delta=2
   138                           	psect	text117,local,class=CODE,merge=1,delta=2
   139                           	psect	text118,local,class=CODE,merge=1,delta=2
   140                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text121,local,class=CODE,merge=1,delta=2
   143                           	psect	text122,local,class=CODE,merge=1,delta=2
   144                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text126,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text127,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text128,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   155                           	dabs	1,0x7E,2
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  011D                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  018E                     	;# 
   208  0191                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0193                     	;# 
   212  0193                     	;# 
   213  0194                     	;# 
   214  0195                     	;# 
   215  0196                     	;# 
   216  0197                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  019C                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019F                     	;# 
   228  020D                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0291                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0298                     	;# 
   250  0298                     	;# 
   251  0299                     	;# 
   252  029A                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0FE4                     	;# 
   257  0FE5                     	;# 
   258  0FE6                     	;# 
   259  0FE7                     	;# 
   260  0FE8                     	;# 
   261  0FE9                     	;# 
   262  0FEA                     	;# 
   263  0FEB                     	;# 
   264  0FED                     	;# 
   265  0FEE                     	;# 
   266  0FEF                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  011D                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018E                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0194                     	;# 
   325  0195                     	;# 
   326  0196                     	;# 
   327  0197                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020D                     	;# 
   340  0210                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0090                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0095                     	;# 
   412  0096                     	;# 
   413  0097                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  011D                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  018E                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0197                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020D                     	;# 
   451  0210                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0298                     	;# 
   472  0298                     	;# 
   473  0299                     	;# 
   474  029A                     	;# 
   475  0394                     	;# 
   476  0395                     	;# 
   477  0396                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  011D                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  018E                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0194                     	;# 
   547  0195                     	;# 
   548  0196                     	;# 
   549  0197                     	;# 
   550  0199                     	;# 
   551  019A                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019D                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  020D                     	;# 
   562  0210                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0216                     	;# 
   575  0216                     	;# 
   576  0217                     	;# 
   577  0217                     	;# 
   578  0291                     	;# 
   579  0291                     	;# 
   580  0292                     	;# 
   581  0293                     	;# 
   582  0298                     	;# 
   583  0298                     	;# 
   584  0299                     	;# 
   585  029A                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  0FE4                     	;# 
   590  0FE5                     	;# 
   591  0FE6                     	;# 
   592  0FE7                     	;# 
   593  0FE8                     	;# 
   594  0FE9                     	;# 
   595  0FEA                     	;# 
   596  0FEB                     	;# 
   597  0FED                     	;# 
   598  0FEE                     	;# 
   599  0FEF                     	;# 
   600  0000                     	;# 
   601  0001                     	;# 
   602  0002                     	;# 
   603  0003                     	;# 
   604  0004                     	;# 
   605  0005                     	;# 
   606  0006                     	;# 
   607  0007                     	;# 
   608  0008                     	;# 
   609  0009                     	;# 
   610  000A                     	;# 
   611  000B                     	;# 
   612  000C                     	;# 
   613  000D                     	;# 
   614  000E                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008D                     	;# 
   629  008E                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0099                     	;# 
   637  009A                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  011D                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  018E                     	;# 
   652  0191                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0197                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  020D                     	;# 
   673  0210                     	;# 
   674  0211                     	;# 
   675  0211                     	;# 
   676  0212                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0214                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0291                     	;# 
   690  0291                     	;# 
   691  0292                     	;# 
   692  0293                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  008E                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  010E                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  011D                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  018E                     	;# 
   763  0191                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0193                     	;# 
   767  0193                     	;# 
   768  0194                     	;# 
   769  0195                     	;# 
   770  0196                     	;# 
   771  0197                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019D                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  020D                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0298                     	;# 
   805  0298                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  0394                     	;# 
   809  0395                     	;# 
   810  0396                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  0010                     	;# 
   838  0011                     	;# 
   839  0012                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  008C                     	;# 
   850  008D                     	;# 
   851  008E                     	;# 
   852  0090                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0099                     	;# 
   859  009A                     	;# 
   860  009B                     	;# 
   861  009B                     	;# 
   862  009C                     	;# 
   863  009D                     	;# 
   864  009E                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0194                     	;# 
   880  0195                     	;# 
   881  0196                     	;# 
   882  0197                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019E                     	;# 
   893  019F                     	;# 
   894  020D                     	;# 
   895  0210                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0298                     	;# 
   916  0298                     	;# 
   917  0299                     	;# 
   918  029A                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  0FE4                     	;# 
   923  0FE5                     	;# 
   924  0FE6                     	;# 
   925  0FE7                     	;# 
   926  0FE8                     	;# 
   927  0FE9                     	;# 
   928  0FEA                     	;# 
   929  0FEB                     	;# 
   930  0FED                     	;# 
   931  0FEE                     	;# 
   932  0FEF                     	;# 
   933  0000                     	;# 
   934  0001                     	;# 
   935  0002                     	;# 
   936  0003                     	;# 
   937  0004                     	;# 
   938  0005                     	;# 
   939  0006                     	;# 
   940  0007                     	;# 
   941  0008                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  0010                     	;# 
   949  0011                     	;# 
   950  0012                     	;# 
   951  0015                     	;# 
   952  0016                     	;# 
   953  0016                     	;# 
   954  0017                     	;# 
   955  0018                     	;# 
   956  0019                     	;# 
   957  001A                     	;# 
   958  001B                     	;# 
   959  001C                     	;# 
   960  008C                     	;# 
   961  008D                     	;# 
   962  008E                     	;# 
   963  0090                     	;# 
   964  0091                     	;# 
   965  0092                     	;# 
   966  0095                     	;# 
   967  0096                     	;# 
   968  0097                     	;# 
   969  0099                     	;# 
   970  009A                     	;# 
   971  009B                     	;# 
   972  009B                     	;# 
   973  009C                     	;# 
   974  009D                     	;# 
   975  009E                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  011D                     	;# 
   982  018C                     	;# 
   983  018D                     	;# 
   984  018E                     	;# 
   985  0191                     	;# 
   986  0191                     	;# 
   987  0192                     	;# 
   988  0193                     	;# 
   989  0193                     	;# 
   990  0194                     	;# 
   991  0195                     	;# 
   992  0196                     	;# 
   993  0197                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019C                     	;# 
  1001  019C                     	;# 
  1002  019D                     	;# 
  1003  019E                     	;# 
  1004  019F                     	;# 
  1005  020D                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0216                     	;# 
  1019  0216                     	;# 
  1020  0217                     	;# 
  1021  0217                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0298                     	;# 
  1027  0298                     	;# 
  1028  0299                     	;# 
  1029  029A                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  0FE4                     	;# 
  1034  0FE5                     	;# 
  1035  0FE6                     	;# 
  1036  0FE7                     	;# 
  1037  0FE8                     	;# 
  1038  0FE9                     	;# 
  1039  0FEA                     	;# 
  1040  0FEB                     	;# 
  1041  0FED                     	;# 
  1042  0FEE                     	;# 
  1043  0FEF                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0008                     	;# 
  1053  0009                     	;# 
  1054  000A                     	;# 
  1055  000B                     	;# 
  1056  000C                     	;# 
  1057  000D                     	;# 
  1058  000E                     	;# 
  1059  0010                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0015                     	;# 
  1063  0016                     	;# 
  1064  0016                     	;# 
  1065  0017                     	;# 
  1066  0018                     	;# 
  1067  0019                     	;# 
  1068  001A                     	;# 
  1069  001B                     	;# 
  1070  001C                     	;# 
  1071  008C                     	;# 
  1072  008D                     	;# 
  1073  008E                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  011D                     	;# 
  1093  018C                     	;# 
  1094  018D                     	;# 
  1095  018E                     	;# 
  1096  0191                     	;# 
  1097  0191                     	;# 
  1098  0192                     	;# 
  1099  0193                     	;# 
  1100  0193                     	;# 
  1101  0194                     	;# 
  1102  0195                     	;# 
  1103  0196                     	;# 
  1104  0197                     	;# 
  1105  0199                     	;# 
  1106  019A                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019C                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020D                     	;# 
  1117  0210                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0298                     	;# 
  1138  0298                     	;# 
  1139  0299                     	;# 
  1140  029A                     	;# 
  1141  0394                     	;# 
  1142  0395                     	;# 
  1143  0396                     	;# 
  1144  0FE4                     	;# 
  1145  0FE5                     	;# 
  1146  0FE6                     	;# 
  1147  0FE7                     	;# 
  1148  0FE8                     	;# 
  1149  0FE9                     	;# 
  1150  0FEA                     	;# 
  1151  0FEB                     	;# 
  1152  0FED                     	;# 
  1153  0FEE                     	;# 
  1154  0FEF                     	;# 
  1155  0000                     	;# 
  1156  0001                     	;# 
  1157  0002                     	;# 
  1158  0003                     	;# 
  1159  0004                     	;# 
  1160  0005                     	;# 
  1161  0006                     	;# 
  1162  0007                     	;# 
  1163  0008                     	;# 
  1164  0009                     	;# 
  1165  000A                     	;# 
  1166  000B                     	;# 
  1167  000C                     	;# 
  1168  000D                     	;# 
  1169  000E                     	;# 
  1170  0010                     	;# 
  1171  0011                     	;# 
  1172  0012                     	;# 
  1173  0015                     	;# 
  1174  0016                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  0019                     	;# 
  1179  001A                     	;# 
  1180  001B                     	;# 
  1181  001C                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0095                     	;# 
  1189  0096                     	;# 
  1190  0097                     	;# 
  1191  0099                     	;# 
  1192  009A                     	;# 
  1193  009B                     	;# 
  1194  009B                     	;# 
  1195  009C                     	;# 
  1196  009D                     	;# 
  1197  009E                     	;# 
  1198  010C                     	;# 
  1199  010D                     	;# 
  1200  010E                     	;# 
  1201  0116                     	;# 
  1202  0117                     	;# 
  1203  011D                     	;# 
  1204  018C                     	;# 
  1205  018D                     	;# 
  1206  018E                     	;# 
  1207  0191                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0193                     	;# 
  1211  0193                     	;# 
  1212  0194                     	;# 
  1213  0195                     	;# 
  1214  0196                     	;# 
  1215  0197                     	;# 
  1216  0199                     	;# 
  1217  019A                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019C                     	;# 
  1223  019C                     	;# 
  1224  019D                     	;# 
  1225  019E                     	;# 
  1226  019F                     	;# 
  1227  020D                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0291                     	;# 
  1245  0291                     	;# 
  1246  0292                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  0394                     	;# 
  1253  0395                     	;# 
  1254  0396                     	;# 
  1255  0FE4                     	;# 
  1256  0FE5                     	;# 
  1257  0FE6                     	;# 
  1258  0FE7                     	;# 
  1259  0FE8                     	;# 
  1260  0FE9                     	;# 
  1261  0FEA                     	;# 
  1262  0FEB                     	;# 
  1263  0FED                     	;# 
  1264  0FEE                     	;# 
  1265  0FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000D                     	;# 
  1280  000E                     	;# 
  1281  0010                     	;# 
  1282  0011                     	;# 
  1283  0012                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  0090                     	;# 
  1297  0091                     	;# 
  1298  0092                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0097                     	;# 
  1302  0099                     	;# 
  1303  009A                     	;# 
  1304  009B                     	;# 
  1305  009B                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009E                     	;# 
  1309  010C                     	;# 
  1310  010D                     	;# 
  1311  010E                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  011D                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  0191                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  0193                     	;# 
  1322  0193                     	;# 
  1323  0194                     	;# 
  1324  0195                     	;# 
  1325  0196                     	;# 
  1326  0197                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019B                     	;# 
  1332  019B                     	;# 
  1333  019C                     	;# 
  1334  019C                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019F                     	;# 
  1338  020D                     	;# 
  1339  0210                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0213                     	;# 
  1346  0214                     	;# 
  1347  0214                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0291                     	;# 
  1356  0291                     	;# 
  1357  0292                     	;# 
  1358  0293                     	;# 
  1359  0298                     	;# 
  1360  0298                     	;# 
  1361  0299                     	;# 
  1362  029A                     	;# 
  1363  0394                     	;# 
  1364  0395                     	;# 
  1365  0396                     	;# 
  1366  0FE4                     	;# 
  1367  0FE5                     	;# 
  1368  0FE6                     	;# 
  1369  0FE7                     	;# 
  1370  0FE8                     	;# 
  1371  0FE9                     	;# 
  1372  0FEA                     	;# 
  1373  0FEB                     	;# 
  1374  0FED                     	;# 
  1375  0FEE                     	;# 
  1376  0FEF                     	;# 
  1377  0000                     	;# 
  1378  0001                     	;# 
  1379  0002                     	;# 
  1380  0003                     	;# 
  1381  0004                     	;# 
  1382  0005                     	;# 
  1383  0006                     	;# 
  1384  0007                     	;# 
  1385  0008                     	;# 
  1386  0009                     	;# 
  1387  000A                     	;# 
  1388  000B                     	;# 
  1389  000C                     	;# 
  1390  000D                     	;# 
  1391  000E                     	;# 
  1392  0010                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0015                     	;# 
  1396  0016                     	;# 
  1397  0016                     	;# 
  1398  0017                     	;# 
  1399  0018                     	;# 
  1400  0019                     	;# 
  1401  001A                     	;# 
  1402  001B                     	;# 
  1403  001C                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  008E                     	;# 
  1407  0090                     	;# 
  1408  0091                     	;# 
  1409  0092                     	;# 
  1410  0095                     	;# 
  1411  0096                     	;# 
  1412  0097                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  010C                     	;# 
  1421  010D                     	;# 
  1422  010E                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019C                     	;# 
  1445  019C                     	;# 
  1446  019D                     	;# 
  1447  019E                     	;# 
  1448  019F                     	;# 
  1449  020D                     	;# 
  1450  0210                     	;# 
  1451  0211                     	;# 
  1452  0211                     	;# 
  1453  0212                     	;# 
  1454  0212                     	;# 
  1455  0213                     	;# 
  1456  0213                     	;# 
  1457  0214                     	;# 
  1458  0214                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0215                     	;# 
  1462  0216                     	;# 
  1463  0216                     	;# 
  1464  0217                     	;# 
  1465  0217                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0298                     	;# 
  1471  0298                     	;# 
  1472  0299                     	;# 
  1473  029A                     	;# 
  1474  0394                     	;# 
  1475  0395                     	;# 
  1476  0396                     	;# 
  1477  0FE4                     	;# 
  1478  0FE5                     	;# 
  1479  0FE6                     	;# 
  1480  0FE7                     	;# 
  1481  0FE8                     	;# 
  1482  0FE9                     	;# 
  1483  0FEA                     	;# 
  1484  0FEB                     	;# 
  1485  0FED                     	;# 
  1486  0FEE                     	;# 
  1487  0FEF                     	;# 
  1488  0000                     	;# 
  1489  0001                     	;# 
  1490  0002                     	;# 
  1491  0003                     	;# 
  1492  0004                     	;# 
  1493  0005                     	;# 
  1494  0006                     	;# 
  1495  0007                     	;# 
  1496  0008                     	;# 
  1497  0009                     	;# 
  1498  000A                     	;# 
  1499  000B                     	;# 
  1500  000C                     	;# 
  1501  000D                     	;# 
  1502  000E                     	;# 
  1503  0010                     	;# 
  1504  0011                     	;# 
  1505  0012                     	;# 
  1506  0015                     	;# 
  1507  0016                     	;# 
  1508  0016                     	;# 
  1509  0017                     	;# 
  1510  0018                     	;# 
  1511  0019                     	;# 
  1512  001A                     	;# 
  1513  001B                     	;# 
  1514  001C                     	;# 
  1515  008C                     	;# 
  1516  008D                     	;# 
  1517  008E                     	;# 
  1518  0090                     	;# 
  1519  0091                     	;# 
  1520  0092                     	;# 
  1521  0095                     	;# 
  1522  0096                     	;# 
  1523  0097                     	;# 
  1524  0099                     	;# 
  1525  009A                     	;# 
  1526  009B                     	;# 
  1527  009B                     	;# 
  1528  009C                     	;# 
  1529  009D                     	;# 
  1530  009E                     	;# 
  1531  010C                     	;# 
  1532  010D                     	;# 
  1533  010E                     	;# 
  1534  0116                     	;# 
  1535  0117                     	;# 
  1536  011D                     	;# 
  1537  018C                     	;# 
  1538  018D                     	;# 
  1539  018E                     	;# 
  1540  0191                     	;# 
  1541  0191                     	;# 
  1542  0192                     	;# 
  1543  0193                     	;# 
  1544  0193                     	;# 
  1545  0194                     	;# 
  1546  0195                     	;# 
  1547  0196                     	;# 
  1548  0197                     	;# 
  1549  0199                     	;# 
  1550  019A                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019C                     	;# 
  1556  019C                     	;# 
  1557  019D                     	;# 
  1558  019E                     	;# 
  1559  019F                     	;# 
  1560  020D                     	;# 
  1561  0210                     	;# 
  1562  0211                     	;# 
  1563  0211                     	;# 
  1564  0212                     	;# 
  1565  0212                     	;# 
  1566  0213                     	;# 
  1567  0213                     	;# 
  1568  0214                     	;# 
  1569  0214                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0216                     	;# 
  1574  0216                     	;# 
  1575  0217                     	;# 
  1576  0217                     	;# 
  1577  0291                     	;# 
  1578  0291                     	;# 
  1579  0292                     	;# 
  1580  0293                     	;# 
  1581  0298                     	;# 
  1582  0298                     	;# 
  1583  0299                     	;# 
  1584  029A                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0015                     	;# 
  1618  0016                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  0019                     	;# 
  1623  001A                     	;# 
  1624  001B                     	;# 
  1625  001C                     	;# 
  1626  008C                     	;# 
  1627  008D                     	;# 
  1628  008E                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0092                     	;# 
  1632  0095                     	;# 
  1633  0096                     	;# 
  1634  0097                     	;# 
  1635  0099                     	;# 
  1636  009A                     	;# 
  1637  009B                     	;# 
  1638  009B                     	;# 
  1639  009C                     	;# 
  1640  009D                     	;# 
  1641  009E                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  0116                     	;# 
  1646  0117                     	;# 
  1647  011D                     	;# 
  1648  018C                     	;# 
  1649  018D                     	;# 
  1650  018E                     	;# 
  1651  0191                     	;# 
  1652  0191                     	;# 
  1653  0192                     	;# 
  1654  0193                     	;# 
  1655  0193                     	;# 
  1656  0194                     	;# 
  1657  0195                     	;# 
  1658  0196                     	;# 
  1659  0197                     	;# 
  1660  0199                     	;# 
  1661  019A                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019C                     	;# 
  1667  019C                     	;# 
  1668  019D                     	;# 
  1669  019E                     	;# 
  1670  019F                     	;# 
  1671  020D                     	;# 
  1672  0210                     	;# 
  1673  0211                     	;# 
  1674  0211                     	;# 
  1675  0212                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0213                     	;# 
  1679  0214                     	;# 
  1680  0214                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0215                     	;# 
  1684  0216                     	;# 
  1685  0216                     	;# 
  1686  0217                     	;# 
  1687  0217                     	;# 
  1688  0291                     	;# 
  1689  0291                     	;# 
  1690  0292                     	;# 
  1691  0293                     	;# 
  1692  0298                     	;# 
  1693  0298                     	;# 
  1694  0299                     	;# 
  1695  029A                     	;# 
  1696  0394                     	;# 
  1697  0395                     	;# 
  1698  0396                     	;# 
  1699  0FE4                     	;# 
  1700  0FE5                     	;# 
  1701  0FE6                     	;# 
  1702  0FE7                     	;# 
  1703  0FE8                     	;# 
  1704  0FE9                     	;# 
  1705  0FEA                     	;# 
  1706  0FEB                     	;# 
  1707  0FED                     	;# 
  1708  0FEE                     	;# 
  1709  0FEF                     	;# 
  1710  0000                     	;# 
  1711  0001                     	;# 
  1712  0002                     	;# 
  1713  0003                     	;# 
  1714  0004                     	;# 
  1715  0005                     	;# 
  1716  0006                     	;# 
  1717  0007                     	;# 
  1718  0008                     	;# 
  1719  0009                     	;# 
  1720  000A                     	;# 
  1721  000B                     	;# 
  1722  000C                     	;# 
  1723  000D                     	;# 
  1724  000E                     	;# 
  1725  0010                     	;# 
  1726  0011                     	;# 
  1727  0012                     	;# 
  1728  0015                     	;# 
  1729  0016                     	;# 
  1730  0016                     	;# 
  1731  0017                     	;# 
  1732  0018                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  0090                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0095                     	;# 
  1744  0096                     	;# 
  1745  0097                     	;# 
  1746  0099                     	;# 
  1747  009A                     	;# 
  1748  009B                     	;# 
  1749  009B                     	;# 
  1750  009C                     	;# 
  1751  009D                     	;# 
  1752  009E                     	;# 
  1753  010C                     	;# 
  1754  010D                     	;# 
  1755  010E                     	;# 
  1756  0116                     	;# 
  1757  0117                     	;# 
  1758  011D                     	;# 
  1759  018C                     	;# 
  1760  018D                     	;# 
  1761  018E                     	;# 
  1762  0191                     	;# 
  1763  0191                     	;# 
  1764  0192                     	;# 
  1765  0193                     	;# 
  1766  0193                     	;# 
  1767  0194                     	;# 
  1768  0195                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0199                     	;# 
  1772  019A                     	;# 
  1773  019B                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019C                     	;# 
  1778  019C                     	;# 
  1779  019D                     	;# 
  1780  019E                     	;# 
  1781  019F                     	;# 
  1782  020D                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0213                     	;# 
  1790  0214                     	;# 
  1791  0214                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0216                     	;# 
  1796  0216                     	;# 
  1797  0217                     	;# 
  1798  0217                     	;# 
  1799  0291                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0293                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  029A                     	;# 
  1807  0394                     	;# 
  1808  0395                     	;# 
  1809  0396                     	;# 
  1810  0FE4                     	;# 
  1811  0FE5                     	;# 
  1812  0FE6                     	;# 
  1813  0FE7                     	;# 
  1814  0FE8                     	;# 
  1815  0FE9                     	;# 
  1816  0FEA                     	;# 
  1817  0FEB                     	;# 
  1818  0FED                     	;# 
  1819  0FEE                     	;# 
  1820  0FEF                     	;# 
  1821  0000                     	;# 
  1822  0001                     	;# 
  1823  0002                     	;# 
  1824  0003                     	;# 
  1825  0004                     	;# 
  1826  0005                     	;# 
  1827  0006                     	;# 
  1828  0007                     	;# 
  1829  0008                     	;# 
  1830  0009                     	;# 
  1831  000A                     	;# 
  1832  000B                     	;# 
  1833  000C                     	;# 
  1834  000D                     	;# 
  1835  000E                     	;# 
  1836  0010                     	;# 
  1837  0011                     	;# 
  1838  0012                     	;# 
  1839  0015                     	;# 
  1840  0016                     	;# 
  1841  0016                     	;# 
  1842  0017                     	;# 
  1843  0018                     	;# 
  1844  0019                     	;# 
  1845  001A                     	;# 
  1846  001B                     	;# 
  1847  001C                     	;# 
  1848  008C                     	;# 
  1849  008D                     	;# 
  1850  008E                     	;# 
  1851  0090                     	;# 
  1852  0091                     	;# 
  1853  0092                     	;# 
  1854  0095                     	;# 
  1855  0096                     	;# 
  1856  0097                     	;# 
  1857  0099                     	;# 
  1858  009A                     	;# 
  1859  009B                     	;# 
  1860  009B                     	;# 
  1861  009C                     	;# 
  1862  009D                     	;# 
  1863  009E                     	;# 
  1864  010C                     	;# 
  1865  010D                     	;# 
  1866  010E                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  011D                     	;# 
  1870  018C                     	;# 
  1871  018D                     	;# 
  1872  018E                     	;# 
  1873  0191                     	;# 
  1874  0191                     	;# 
  1875  0192                     	;# 
  1876  0193                     	;# 
  1877  0193                     	;# 
  1878  0194                     	;# 
  1879  0195                     	;# 
  1880  0196                     	;# 
  1881  0197                     	;# 
  1882  0199                     	;# 
  1883  019A                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019B                     	;# 
  1887  019B                     	;# 
  1888  019C                     	;# 
  1889  019C                     	;# 
  1890  019D                     	;# 
  1891  019E                     	;# 
  1892  019F                     	;# 
  1893  020D                     	;# 
  1894  0210                     	;# 
  1895  0211                     	;# 
  1896  0211                     	;# 
  1897  0212                     	;# 
  1898  0212                     	;# 
  1899  0213                     	;# 
  1900  0213                     	;# 
  1901  0214                     	;# 
  1902  0214                     	;# 
  1903  0215                     	;# 
  1904  0215                     	;# 
  1905  0215                     	;# 
  1906  0216                     	;# 
  1907  0216                     	;# 
  1908  0217                     	;# 
  1909  0217                     	;# 
  1910  0291                     	;# 
  1911  0291                     	;# 
  1912  0292                     	;# 
  1913  0293                     	;# 
  1914  0298                     	;# 
  1915  0298                     	;# 
  1916  0299                     	;# 
  1917  029A                     	;# 
  1918  0394                     	;# 
  1919  0395                     	;# 
  1920  0396                     	;# 
  1921  0FE4                     	;# 
  1922  0FE5                     	;# 
  1923  0FE6                     	;# 
  1924  0FE7                     	;# 
  1925  0FE8                     	;# 
  1926  0FE9                     	;# 
  1927  0FEA                     	;# 
  1928  0FEB                     	;# 
  1929  0FED                     	;# 
  1930  0FEE                     	;# 
  1931  0FEF                     	;# 
  1932  0000                     	;# 
  1933  0001                     	;# 
  1934  0002                     	;# 
  1935  0003                     	;# 
  1936  0004                     	;# 
  1937  0005                     	;# 
  1938  0006                     	;# 
  1939  0007                     	;# 
  1940  0008                     	;# 
  1941  0009                     	;# 
  1942  000A                     	;# 
  1943  000B                     	;# 
  1944  000C                     	;# 
  1945  000D                     	;# 
  1946  000E                     	;# 
  1947  0010                     	;# 
  1948  0011                     	;# 
  1949  0012                     	;# 
  1950  0015                     	;# 
  1951  0016                     	;# 
  1952  0016                     	;# 
  1953  0017                     	;# 
  1954  0018                     	;# 
  1955  0019                     	;# 
  1956  001A                     	;# 
  1957  001B                     	;# 
  1958  001C                     	;# 
  1959  008C                     	;# 
  1960  008D                     	;# 
  1961  008E                     	;# 
  1962  0090                     	;# 
  1963  0091                     	;# 
  1964  0092                     	;# 
  1965  0095                     	;# 
  1966  0096                     	;# 
  1967  0097                     	;# 
  1968  0099                     	;# 
  1969  009A                     	;# 
  1970  009B                     	;# 
  1971  009B                     	;# 
  1972  009C                     	;# 
  1973  009D                     	;# 
  1974  009E                     	;# 
  1975  010C                     	;# 
  1976  010D                     	;# 
  1977  010E                     	;# 
  1978  0116                     	;# 
  1979  0117                     	;# 
  1980  011D                     	;# 
  1981  018C                     	;# 
  1982  018D                     	;# 
  1983  018E                     	;# 
  1984  0191                     	;# 
  1985  0191                     	;# 
  1986  0192                     	;# 
  1987  0193                     	;# 
  1988  0193                     	;# 
  1989  0194                     	;# 
  1990  0195                     	;# 
  1991  0196                     	;# 
  1992  0197                     	;# 
  1993  0199                     	;# 
  1994  019A                     	;# 
  1995  019B                     	;# 
  1996  019B                     	;# 
  1997  019B                     	;# 
  1998  019B                     	;# 
  1999  019C                     	;# 
  2000  019C                     	;# 
  2001  019D                     	;# 
  2002  019E                     	;# 
  2003  019F                     	;# 
  2004  020D                     	;# 
  2005  0210                     	;# 
  2006  0211                     	;# 
  2007  0211                     	;# 
  2008  0212                     	;# 
  2009  0212                     	;# 
  2010  0213                     	;# 
  2011  0213                     	;# 
  2012  0214                     	;# 
  2013  0214                     	;# 
  2014  0215                     	;# 
  2015  0215                     	;# 
  2016  0215                     	;# 
  2017  0216                     	;# 
  2018  0216                     	;# 
  2019  0217                     	;# 
  2020  0217                     	;# 
  2021  0291                     	;# 
  2022  0291                     	;# 
  2023  0292                     	;# 
  2024  0293                     	;# 
  2025  0298                     	;# 
  2026  0298                     	;# 
  2027  0299                     	;# 
  2028  029A                     	;# 
  2029  0394                     	;# 
  2030  0395                     	;# 
  2031  0396                     	;# 
  2032  0FE4                     	;# 
  2033  0FE5                     	;# 
  2034  0FE6                     	;# 
  2035  0FE7                     	;# 
  2036  0FE8                     	;# 
  2037  0FE9                     	;# 
  2038  0FEA                     	;# 
  2039  0FEB                     	;# 
  2040  0FED                     	;# 
  2041  0FEE                     	;# 
  2042  0FEF                     	;# 
  2043  0000                     	;# 
  2044  0001                     	;# 
  2045  0002                     	;# 
  2046  0003                     	;# 
  2047  0004                     	;# 
  2048  0005                     	;# 
  2049  0006                     	;# 
  2050  0007                     	;# 
  2051  0008                     	;# 
  2052  0009                     	;# 
  2053  000A                     	;# 
  2054  000B                     	;# 
  2055  000C                     	;# 
  2056  000D                     	;# 
  2057  000E                     	;# 
  2058  0010                     	;# 
  2059  0011                     	;# 
  2060  0012                     	;# 
  2061  0015                     	;# 
  2062  0016                     	;# 
  2063  0016                     	;# 
  2064  0017                     	;# 
  2065  0018                     	;# 
  2066  0019                     	;# 
  2067  001A                     	;# 
  2068  001B                     	;# 
  2069  001C                     	;# 
  2070  008C                     	;# 
  2071  008D                     	;# 
  2072  008E                     	;# 
  2073  0090                     	;# 
  2074  0091                     	;# 
  2075  0092                     	;# 
  2076  0095                     	;# 
  2077  0096                     	;# 
  2078  0097                     	;# 
  2079  0099                     	;# 
  2080  009A                     	;# 
  2081  009B                     	;# 
  2082  009B                     	;# 
  2083  009C                     	;# 
  2084  009D                     	;# 
  2085  009E                     	;# 
  2086  010C                     	;# 
  2087  010D                     	;# 
  2088  010E                     	;# 
  2089  0116                     	;# 
  2090  0117                     	;# 
  2091  011D                     	;# 
  2092  018C                     	;# 
  2093  018D                     	;# 
  2094  018E                     	;# 
  2095  0191                     	;# 
  2096  0191                     	;# 
  2097  0192                     	;# 
  2098  0193                     	;# 
  2099  0193                     	;# 
  2100  0194                     	;# 
  2101  0195                     	;# 
  2102  0196                     	;# 
  2103  0197                     	;# 
  2104  0199                     	;# 
  2105  019A                     	;# 
  2106  019B                     	;# 
  2107  019B                     	;# 
  2108  019B                     	;# 
  2109  019B                     	;# 
  2110  019C                     	;# 
  2111  019C                     	;# 
  2112  019D                     	;# 
  2113  019E                     	;# 
  2114  019F                     	;# 
  2115  020D                     	;# 
  2116  0210                     	;# 
  2117  0211                     	;# 
  2118  0211                     	;# 
  2119  0212                     	;# 
  2120  0212                     	;# 
  2121  0213                     	;# 
  2122  0213                     	;# 
  2123  0214                     	;# 
  2124  0214                     	;# 
  2125  0215                     	;# 
  2126  0215                     	;# 
  2127  0215                     	;# 
  2128  0216                     	;# 
  2129  0216                     	;# 
  2130  0217                     	;# 
  2131  0217                     	;# 
  2132  0291                     	;# 
  2133  0291                     	;# 
  2134  0292                     	;# 
  2135  0293                     	;# 
  2136  0298                     	;# 
  2137  0298                     	;# 
  2138  0299                     	;# 
  2139  029A                     	;# 
  2140  0394                     	;# 
  2141  0395                     	;# 
  2142  0396                     	;# 
  2143  0FE4                     	;# 
  2144  0FE5                     	;# 
  2145  0FE6                     	;# 
  2146  0FE7                     	;# 
  2147  0FE8                     	;# 
  2148  0FE9                     	;# 
  2149  0FEA                     	;# 
  2150  0FEB                     	;# 
  2151  0FED                     	;# 
  2152  0FEE                     	;# 
  2153  0FEF                     	;# 
  2154                           
  2155                           	psect	idataBANK4
  2156  1173                     __pidataBANK4:	
  2157                           
  2158                           ;initializer for __product
  2159  1173  3463               	retlw	99
  2160  1174  3402               	retlw	2
  2161  1175  3400               	retlw	0
  2162  1176  3400               	retlw	0
  2163  1177  3400               	retlw	0
  2164  1178  3400               	retlw	0
  2165  1179  3400               	retlw	0
  2166  117A  3400               	retlw	0
  2167  117B  3400               	retlw	0
  2168  117C  3400               	retlw	0
  2169  117D  3400               	retlw	0
  2170  117E  3400               	retlw	0
  2171  117F  34FF               	retlw	255
  2172  1180  34FF               	retlw	255
  2173  1181  34FF               	retlw	255
  2174  1182  3400               	retlw	0
  2175  1183  3400               	retlw	0
  2176  1184  3400               	retlw	0
  2177  1185  3400               	retlw	0
  2178  1186  3400               	retlw	0
  2179  1187  3400               	retlw	0
  2180  1188  3400               	retlw	0
  2181  1189  3400               	retlw	0
  2182  118A  3400               	retlw	0
  2183  118B  3400               	retlw	0
  2184  118C  3400               	retlw	0
  2185  118D  3400               	retlw	0
  2186  118E  3400               	retlw	0
  2187  118F  3400               	retlw	0
  2188  1190  3400               	retlw	0
  2189  1191  3400               	retlw	0
  2190  1192  3400               	retlw	0
  2191                           
  2192                           	psect	stringtext
  2193  1000                     __pstringtext:	
  2194  1000                     _CC2500_registers_address:	
  2195  1000  3403               	retlw	3
  2196  1001  3416               	retlw	22
  2197  1002  3417               	retlw	23
  2198  1003  341E               	retlw	30
  2199  1004  341F               	retlw	31
  2200  1005  3420               	retlw	32
  2201  1006  342A               	retlw	42
  2202  1007  342B               	retlw	43
  2203  1008  340B               	retlw	11
  2204  1009  340C               	retlw	12
  2205  100A  340D               	retlw	13
  2206  100B  340E               	retlw	14
  2207  100C  340F               	retlw	15
  2208  100D  3410               	retlw	16
  2209  100E  3411               	retlw	17
  2210  100F  3412               	retlw	18
  2211  1010  3413               	retlw	19
  2212  1011  3414               	retlw	20
  2213  1012  340A               	retlw	10
  2214  1013  3415               	retlw	21
  2215  1014  3421               	retlw	33
  2216  1015  3422               	retlw	34
  2217  1016  3418               	retlw	24
  2218  1017  3419               	retlw	25
  2219  1018  341A               	retlw	26
  2220  1019  341B               	retlw	27
  2221  101A  341C               	retlw	28
  2222  101B  341D               	retlw	29
  2223  101C  3423               	retlw	35
  2224  101D  3424               	retlw	36
  2225  101E  3425               	retlw	37
  2226  101F  3426               	retlw	38
  2227  1020  3429               	retlw	41
  2228  1021  342C               	retlw	44
  2229  1022  342D               	retlw	45
  2230  1023  342E               	retlw	46
  2231  1024  3400               	retlw	0
  2232  1025  3401               	retlw	1
  2233  1026  3402               	retlw	2
  2234  1027  3407               	retlw	7
  2235  1028  3408               	retlw	8
  2236  1029  3409               	retlw	9
  2237  102A  3406               	retlw	6
  2238  102B  3404               	retlw	4
  2239  102C  3405               	retlw	5
  2240  102D  3427               	retlw	39
  2241  102E  3428               	retlw	40
  2242  102F                     __end_of_CC2500_registers_address:	
  2243  102F                     _CC2500_rfSettings:	
  2244  102F  3407               	retlw	7
  2245  1030  3407               	retlw	7
  2246  1031  3430               	retlw	48
  2247  1032  3487               	retlw	135
  2248  1033  346B               	retlw	107
  2249  1034  34F8               	retlw	248
  2250  1035  347F               	retlw	127
  2251  1036  343F               	retlw	63
  2252  1037  3409               	retlw	9
  2253  1038  3400               	retlw	0
  2254  1039  345C               	retlw	92
  2255  103A  34A7               	retlw	167
  2256  103B  3462               	retlw	98
  2257  103C  3486               	retlw	134
  2258  103D  3483               	retlw	131
  2259  103E  3403               	retlw	3
  2260  103F  3422               	retlw	34
  2261  1040  34F8               	retlw	248
  2262  1041  3400               	retlw	0
  2263  1042  3444               	retlw	68
  2264  1043  34B6               	retlw	182
  2265  1044  3410               	retlw	16
  2266  1045  3418               	retlw	24
  2267  1046  341D               	retlw	29
  2268  1047  341C               	retlw	28
  2269  1048  34C7               	retlw	199
  2270  1049  3400               	retlw	0
  2271  104A  34B2               	retlw	178
  2272  104B  34EA               	retlw	234
  2273  104C  340A               	retlw	10
  2274  104D  3400               	retlw	0
  2275  104E  3411               	retlw	17
  2276  104F  3459               	retlw	89
  2277  1050  3488               	retlw	136
  2278  1051  3431               	retlw	49
  2279  1052  340B               	retlw	11
  2280  1053  342F               	retlw	47
  2281  1054  342E               	retlw	46
  2282  1055  3406               	retlw	6
  2283  1056  3404               	retlw	4
  2284  1057  3405               	retlw	5
  2285  1058  3400               	retlw	0
  2286  1059  3430               	retlw	48
  2287  105A  34D3               	retlw	211
  2288  105B  3491               	retlw	145
  2289  105C  3441               	retlw	65
  2290  105D  3400               	retlw	0
  2291  105E                     __end_of_CC2500_rfSettings:	
  2292  105E                     _CC2500_patable_vaule:	
  2293  105E  34FE               	retlw	254
  2294  105F  34FE               	retlw	254
  2295  1060  34FE               	retlw	254
  2296  1061  34FE               	retlw	254
  2297  1062  34FE               	retlw	254
  2298  1063  34FE               	retlw	254
  2299  1064  34FE               	retlw	254
  2300  1065  34FE               	retlw	254
  2301  1066                     __end_of_CC2500_patable_vaule:	
  2302                           
  2303                           	psect	nvBANK0
  2304  006E                     __pnvBANK0:	
  2305  006E                     _product:	
  2306  006E                     	ds	1
  2307  000C                     _PORTA	set	12
  2308  000D                     _PORTB	set	13
  2309  000E                     _PORTC	set	14
  2310  0018                     _T1CON	set	24
  2311  0017                     _TMR1H	set	23
  2312  0016                     _TMR1L	set	22
  2313  005F                     _GIE	set	95
  2314  005B                     _IOCIE	set	91
  2315  0058                     _IOCIF	set	88
  2316  005E                     _PEIE	set	94
  2317  0060                     _RA0	set	96
  2318  0063                     _RA3	set	99
  2319  0064                     _RA4	set	100
  2320  0066                     _RA6	set	102
  2321  0067                     _RA7	set	103
  2322  0068                     _RB0	set	104
  2323  0069                     _RB1	set	105
  2324  006A                     _RB2	set	106
  2325  006B                     _RB3	set	107
  2326  006C                     _RB4	set	108
  2327  006D                     _RB5	set	109
  2328  0070                     _RC0	set	112
  2329  0071                     _RC1	set	113
  2330  0072                     _RC2	set	114
  2331  0074                     _RC4	set	116
  2332  0075                     _RC5	set	117
  2333  0076                     _RC6	set	118
  2334  0077                     _RC7	set	119
  2335  0088                     _TMR1IF	set	136
  2336  009D                     _ADCON0	set	157
  2337  009E                     _ADCON1	set	158
  2338  009C                     _ADRESH	set	156
  2339  009B                     _ADRESL	set	155
  2340  0099                     _OSCCON	set	153
  2341  008C                     _TRISA	set	140
  2342  008D                     _TRISB	set	141
  2343  008E                     _TRISC	set	142
  2344  0097                     _WDTCON	set	151
  2345  04E9                     _GO_nDONE	set	1257
  2346  0488                     _TMR1IE	set	1160
  2347  0117                     _FVRCON	set	279
  2348  010C                     _LATA	set	268
  2349  010D                     _LATB	set	269
  2350  010E                     _LATC	set	270
  2351  018C                     _ANSELA	set	396
  2352  018D                     _ANSELB	set	397
  2353  018E                     _ANSELC	set	398
  2354  0192                     _PMADRH	set	402
  2355  0191                     _PMADRL	set	401
  2356  0196                     _PMCON2	set	406
  2357  0194                     _PMDATH	set	404
  2358  0193                     _PMDATL	set	403
  2359  0CAE                     _CFGS	set	3246
  2360  0CAC                     _FREE	set	3244
  2361  0CAD                     _LWLO	set	3245
  2362  0CA8                     _RD	set	3240
  2363  0CA9                     _WR	set	3241
  2364  0CAA                     _WREN	set	3242
  2365  020D                     _WPUB	set	525
  2366  0396                     _IOCBF	set	918
  2367  0395                     _IOCBN	set	917
  2368  0394                     _IOCBP	set	916
  2369  1CB2                     _IOCBF2	set	7346
  2370                           
  2371                           ; #config settings
  2372  0000                     
  2373                           	psect	cinit
  2374  0021                     start_initialization:	
  2375  0021                     __initialization:	
  2376                           
  2377                           ; Clear objects allocated to BITCOMMON
  2378  0021  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2379                           
  2380                           ; Clear objects allocated to COMMON
  2381  0022  01FA               	clrf	__pbssCOMMON& (0+127)
  2382  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2383                           
  2384                           ; Clear objects allocated to BANK0
  2385  0024  01E8               	clrf	__pbssBANK0& (0+127)
  2386  0025  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2387  0026  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2388  0027  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2389  0028  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2390  0029  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  2391                           
  2392                           ; Clear objects allocated to BANK1
  2393  002A  30A0               	movlw	low __pbssBANK1
  2394  002B  0084               	movwf	4
  2395  002C  3000               	movlw	high __pbssBANK1
  2396  002D  0085               	movwf	5
  2397  002E  3050               	movlw	80
  2398  002F  319C  24CC  3180   	fcall	clear_ram0
  2399                           
  2400                           ; Clear objects allocated to BANK2
  2401  0032  3020               	movlw	low __pbssBANK2
  2402  0033  0084               	movwf	4
  2403  0034  3001               	movlw	high __pbssBANK2
  2404  0035  0085               	movwf	5
  2405  0036  3050               	movlw	80
  2406  0037  319C  24CC  3180   	fcall	clear_ram0
  2407                           
  2408                           ; Clear objects allocated to BANK3
  2409  003A  30A0               	movlw	low __pbssBANK3
  2410  003B  0084               	movwf	4
  2411  003C  3001               	movlw	high __pbssBANK3
  2412  003D  0085               	movwf	5
  2413  003E  3050               	movlw	80
  2414  003F  319C  24CC  3180   	fcall	clear_ram0
  2415                           
  2416                           ; Clear objects allocated to BANK4
  2417  0042  3020               	movlw	low __pbssBANK4
  2418  0043  0084               	movwf	4
  2419  0044  3002               	movlw	high __pbssBANK4
  2420  0045  0085               	movwf	5
  2421  0046  3025               	movlw	37
  2422  0047  319C  24CC  3180   	fcall	clear_ram0
  2423                           
  2424                           ; Initialize objects allocated to BANK4
  2425  004A  3073               	movlw	low __pidataBANK4
  2426  004B  0084               	movwf	4
  2427  004C  3091               	movlw	(high __pidataBANK4)| (0+128)
  2428  004D  0085               	movwf	5
  2429  004E  3045               	movlw	low __pdataBANK4
  2430  004F  0086               	movwf	6
  2431  0050  3002               	movlw	high __pdataBANK4
  2432  0051  0087               	movwf	7
  2433  0052  3020               	movlw	32
  2434  0053  319C  24C6         	fcall	init_ram
  2435  0055                     end_of_initialization:	
  2436                           ;End of C runtime variable initialization code
  2437                           
  2438  0055                     __end_of__initialization:	
  2439  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2440  0056  0020               	movlb	0
  2441  0057  3196  2E9A         	ljmp	_main	;jump to C main() function
  2442                           
  2443                           	psect	bitbssCOMMON
  2444  03C8                     __pbitbssCOMMON:	
  2445  03C8                     _Receive_OK:	
  2446  03C8                     	ds	1
  2447  03C9                     _Transceive_OK:	
  2448  03C9                     	ds	1
  2449                           
  2450                           	psect	bssCOMMON
  2451  007A                     __pbssCOMMON:	
  2452  007A                     _LED:	
  2453  007A                     	ds	2
  2454                           
  2455                           	psect	bssBANK0
  2456  0068                     __pbssBANK0:	
  2457  0068                     _Cmd:	
  2458  0068                     	ds	1
  2459  0069                     _DelayOff:	
  2460  0069                     	ds	1
  2461  006A                     _DimmerLights:	
  2462  006A                     	ds	1
  2463  006B                     _SPI0Buffer:	
  2464  006B                     	ds	1
  2465  006C                     _Sw:	
  2466  006C                     	ds	1
  2467  006D                     _Tx_Length:	
  2468  006D                     	ds	1
  2469                           
  2470                           	psect	bssBANK1
  2471  00A0                     __pbssBANK1:	
  2472  00A0                     _DimmerIntr1:	
  2473  00A0                     	ds	16
  2474  00B0                     _RF1:	
  2475  00B0                     	ds	15
  2476  00BF                     _myMain:	
  2477  00BF                     	ds	13
  2478  00CC                     _Buz1:	
  2479  00CC                     	ds	12
  2480  00D8                     _Timer1:	
  2481  00D8                     	ds	3
  2482  00DB                     _RF_Count:	
  2483  00DB                     	ds	2
  2484  00DD                     _WDT:	
  2485  00DD                     	ds	2
  2486  00DF                     _CRC:	
  2487  00DF                     	ds	1
  2488  00E0                     _DimmerIntr:	
  2489  00E0                     	ds	1
  2490  00E1                     _Light:	
  2491  00E1                     	ds	1
  2492  00E2                     _RSSI:	
  2493  00E2                     	ds	1
  2494  00E3                     _Rx_Length:	
  2495  00E3                     	ds	1
  2496  00E4                     _SwDetect:	
  2497  00E4                     	ds	1
  2498  00E5                     _r_address:	
  2499  00E5                     	ds	1
  2500  00E6                     _r_data:	
  2501  00E6                     	ds	1
  2502  00E7                     _s_data:	
  2503  00E7                     	ds	1
  2504  00E8                     _VarErrLED:	
  2505  00E8                     	ds	4
  2506  00EC                     _VarLED1:	
  2507  00EC                     	ds	4
  2508                           
  2509                           	psect	bssBANK2
  2510  0120                     __pbssBANK2:	
  2511  0120                     _RF_Data:	
  2512  0120                     	ds	30
  2513  013E                     _DimmerIntr2:	
  2514  013E                     	ds	16
  2515  014E                     _DimmerIntr3:	
  2516  014E                     	ds	16
  2517  015E                     _DimmerLights1:	
  2518  015E                     	ds	9
  2519  0167                     _DimmerLights2:	
  2520  0167                     	ds	9
  2521                           
  2522                           	psect	bssBANK3
  2523  01A0                     __pbssBANK3:	
  2524  01A0                     _u1:	
  2525  01A0                     	ds	16
  2526  01B0                     _Dimmer:	
  2527  01B0                     	ds	5
  2528  01B5                     _DimmerLights3:	
  2529  01B5                     	ds	9
  2530  01BE                     _Sw1:	
  2531  01BE                     	ds	9
  2532  01C7                     _Sw2:	
  2533  01C7                     	ds	9
  2534  01D0                     _Sw3:	
  2535  01D0                     	ds	9
  2536  01D9                     _DlySw1:	
  2537  01D9                     	ds	5
  2538  01DE                     _DlySw2:	
  2539  01DE                     	ds	5
  2540  01E3                     _DlySw3:	
  2541  01E3                     	ds	5
  2542  01E8                     _VarLED2:	
  2543  01E8                     	ds	4
  2544  01EC                     _VarLED3:	
  2545  01EC                     	ds	4
  2546                           
  2547                           	psect	bssBANK4
  2548  0220                     __pbssBANK4:	
  2549  0220                     _Memory:	
  2550  0220                     	ds	37
  2551                           
  2552                           	psect	dataBANK4
  2553  0245                     __pdataBANK4:	
  2554  0245                     __product:	
  2555  0245                     	ds	32
  2556                           
  2557                           	psect	clrtext
  2558  1CCC                     clear_ram0:	
  2559                           ;	Called with FSR0 containing the base address, and
  2560                           ;	WREG with the size to clear
  2561                           
  2562  1CCC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2563  1CCD                     clrloop0:	
  2564  1CCD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2565  1CCE  3101               	addfsr 0,1
  2566  1CCF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2567  1CD0  2CCD               	goto	clrloop0	;have we reached the end yet?
  2568  1CD1  3400               	retlw	0	;all done for this memory range, return
  2569                           
  2570                           	psect	inittext
  2571  1CC6                     init_ram:	
  2572  1CC6  00FE               	movwf	126
  2573  1CC7                     initloop:	
  2574  1CC7  0012               	moviw fsr0++
  2575  1CC8  001E               	movwi fsr1++
  2576  1CC9  0BFE               	decfsz	126,f
  2577  1CCA  2CC7               	goto	initloop
  2578  1CCB  3400               	retlw	0
  2579                           
  2580                           	psect	cstackBANK4
  2581  0265                     __pcstackBANK4:	
  2582  0265                     ?_main:	
  2583  0265                     main@argc:	
  2584                           ; 2 bytes @ 0x0
  2585                           
  2586                           
  2587                           ; 2 bytes @ 0x0
  2588  0265                     	ds	2
  2589  0267                     main@argv:	
  2590                           
  2591                           ; 2 bytes @ 0x2
  2592  0267                     	ds	2
  2593                           
  2594                           	psect	cstackCOMMON
  2595  0070                     __pcstackCOMMON:	
  2596  0070                     ?_CC2500_WriteCommand:	
  2597  0070                     ?_RF_Timeout_Counter:	
  2598                           ; 0 bytes @ 0x0
  2599                           
  2600  0070                     ?_setRF_TimeoutCleared:	
  2601                           ; 0 bytes @ 0x0
  2602                           
  2603  0070                     ?_CC2500_WriteByte:	
  2604                           ; 0 bytes @ 0x0
  2605                           
  2606  0070                     ?_CC2500_ReadStatus:	
  2607                           ; 0 bytes @ 0x0
  2608                           
  2609  0070                     ?_CC2500_ReadByte:	
  2610                           ; 0 bytes @ 0x0
  2611                           
  2612  0070                     ?_CC2500_PowerRST:	
  2613                           ; 0 bytes @ 0x0
  2614                           
  2615  0070                     ?_CC2500_InitSetREG:	
  2616                           ; 0 bytes @ 0x0
  2617                           
  2618  0070                     ?_CC2500_InitPATable:	
  2619                           ; 0 bytes @ 0x0
  2620                           
  2621  0070                     ?_CC2500_ClearTXFIFO:	
  2622                           ; 0 bytes @ 0x0
  2623                           
  2624  0070                     ?_CC2500_ClearRXFIFO:	
  2625                           ; 0 bytes @ 0x0
  2626                           
  2627  0070                     ?_CC2500_FrequencyCabr:	
  2628                           ; 0 bytes @ 0x0
  2629                           
  2630  0070                     ?_CC2500_SIDLEMode:	
  2631                           ; 0 bytes @ 0x0
  2632                           
  2633  0070                     ?_DlyOff_Initialization:	
  2634                           ; 0 bytes @ 0x0
  2635                           
  2636  0070                     ?_DlyOff_Main:	
  2637                           ; 0 bytes @ 0x0
  2638                           
  2639  0070                     ?_setDimmerLights_SwOn:	
  2640                           ; 0 bytes @ 0x0
  2641                           
  2642  0070                     ?_setDimmerLights_SwOff:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0070                     ?_setMemory_Modify:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0070                     ?_setDimmerLights_Initialization:	
  2649                           ; 0 bytes @ 0x0
  2650                           
  2651  0070                     ?_setDimmerLights_Main:	
  2652                           ; 0 bytes @ 0x0
  2653                           
  2654  0070                     ?_DimmerLights_DimmingFunction:	
  2655                           ; 0 bytes @ 0x0
  2656                           
  2657  0070                     ?_DimmerIntr_ValueCalculate:	
  2658                           ; 0 bytes @ 0x0
  2659                           
  2660  0070                     ?_setDimmerLights_DimmingClose:	
  2661                           ; 0 bytes @ 0x0
  2662                           
  2663  0070                     ?_setTxData:	
  2664                           ; 0 bytes @ 0x0
  2665                           
  2666  0070                     ?_setRF_TransceiveGO:	
  2667                           ; 0 bytes @ 0x0
  2668                           
  2669  0070                     ?_setLED_Initialization:	
  2670                           ; 0 bytes @ 0x0
  2671                           
  2672  0070                     ?_setLED_Main:	
  2673                           ; 0 bytes @ 0x0
  2674                           
  2675  0070                     ?_Fosc_Set:	
  2676                           ; 0 bytes @ 0x0
  2677                           
  2678  0070                     ?_IO_Set:	
  2679                           ; 0 bytes @ 0x0
  2680                           
  2681  0070                     ?_TMR1_Set:	
  2682                           ; 0 bytes @ 0x0
  2683                           
  2684  0070                     ?_ADC_Set:	
  2685                           ; 0 bytes @ 0x0
  2686                           
  2687  0070                     ?_IOC_Set:	
  2688                           ; 0 bytes @ 0x0
  2689                           
  2690  0070                     ?_WDT_Set:	
  2691                           ; 0 bytes @ 0x0
  2692                           
  2693  0070                     ?_TMR1_ISR:	
  2694                           ; 0 bytes @ 0x0
  2695                           
  2696  0070                     ?_IOC_ISR:	
  2697                           ; 0 bytes @ 0x0
  2698                           
  2699  0070                     ?_Timeout_Counter:	
  2700                           ; 0 bytes @ 0x0
  2701                           
  2702  0070                     ?_set_TimeoutCleared:	
  2703                           ; 0 bytes @ 0x0
  2704                           
  2705  0070                     ?_Flash_Memory_Write:	
  2706                           ; 0 bytes @ 0x0
  2707                           
  2708  0070                     ?_Flash_Memory_Modify:	
  2709                           ; 0 bytes @ 0x0
  2710                           
  2711  0070                     ?_WDT_Clearing:	
  2712                           ; 0 bytes @ 0x0
  2713                           
  2714  0070                     ?_myMain_Initialization:	
  2715                           ; 0 bytes @ 0x0
  2716                           
  2717  0070                     ?_Switch_Initialization:	
  2718                           ; 0 bytes @ 0x0
  2719                           
  2720  0070                     ?_RF_Initialization:	
  2721                           ; 0 bytes @ 0x0
  2722                           
  2723  0070                     ?_my_MainTimer:	
  2724                           ; 0 bytes @ 0x0
  2725                           
  2726  0070                     ?_Switch_Main:	
  2727                           ; 0 bytes @ 0x0
  2728                           
  2729  0070                     ?_RF_Main:	
  2730                           ; 0 bytes @ 0x0
  2731                           
  2732  0070                     ?_Exception_Main:	
  2733                           ; 0 bytes @ 0x0
  2734                           
  2735  0070                     ?_setRF_Initialization:	
  2736                           ; 0 bytes @ 0x0
  2737                           
  2738  0070                     ?_setRF_Main:	
  2739                           ; 0 bytes @ 0x0
  2740                           
  2741  0070                     ?_RF_RxDisable:	
  2742                           ; 0 bytes @ 0x0
  2743                           
  2744  0070                     ?_setData:	
  2745                           ; 0 bytes @ 0x0
  2746                           
  2747  0070                     ?_getRxData:	
  2748                           ; 0 bytes @ 0x0
  2749                           
  2750  0070                     ?_setLog_Code:	
  2751                           ; 0 bytes @ 0x0
  2752                           
  2753  0070                     ?_setControl_Lights_Table:	
  2754                           ; 0 bytes @ 0x0
  2755                           
  2756  0070                     ?_setRFSW_Control:	
  2757                           ; 0 bytes @ 0x0
  2758                           
  2759  0070                     ?_setRFSW_AdjControl:	
  2760                           ; 0 bytes @ 0x0
  2761                           
  2762  0070                     ?_setRF_AdjControl:	
  2763                           ; 0 bytes @ 0x0
  2764                           
  2765  0070                     ?_setSw_Initialization:	
  2766                           ; 0 bytes @ 0x0
  2767                           
  2768  0070                     ?_setSw_Main:	
  2769                           ; 0 bytes @ 0x0
  2770                           
  2771  0070                     ?_Buzzer_Initialization:	
  2772                           ; 0 bytes @ 0x0
  2773                           
  2774  0070                     ?_Buzzer_Main:	
  2775                           ; 0 bytes @ 0x0
  2776                           
  2777  0070                     ?_CC2500_TxData:	
  2778                           ; 0 bytes @ 0x0
  2779                           
  2780  0070                     ?_CC2500_RxData:	
  2781                           ; 0 bytes @ 0x0
  2782                           
  2783  0070                     ?_CC2500_PowerOnInitial:	
  2784                           ; 0 bytes @ 0x0
  2785                           
  2786  0070                     ?_DelayOffPointSelect:	
  2787                           ; 0 bytes @ 0x0
  2788                           
  2789  0070                     ?_DelayOff_Initialization:	
  2790                           ; 0 bytes @ 0x0
  2791                           
  2792  0070                     ?_DelayOff_Main:	
  2793                           ; 0 bytes @ 0x0
  2794                           
  2795  0070                     ?_DimmerIntr_Initialization:	
  2796                           ; 0 bytes @ 0x0
  2797                           
  2798  0070                     ?_DimmerLights_SelectPointer:	
  2799                           ; 0 bytes @ 0x0
  2800                           
  2801  0070                     ?_DimmerLights_Initialization:	
  2802                           ; 0 bytes @ 0x0
  2803                           
  2804  0070                     ?_setDimmerLights_DimmingOn:	
  2805                           ; 0 bytes @ 0x0
  2806                           
  2807  0070                     ?_DimmerLights_Main:	
  2808                           ; 0 bytes @ 0x0
  2809                           
  2810  0070                     ?_DimmerLights_IOC_1:	
  2811                           ; 0 bytes @ 0x0
  2812                           
  2813  0070                     ??_DimmerLights_IOC_1:	
  2814                           ; 0 bytes @ 0x0
  2815                           
  2816  0070                     ?_DimmerLights_TMR_1:	
  2817                           ; 0 bytes @ 0x0
  2818                           
  2819  0070                     ??_DimmerLights_TMR_1:	
  2820                           ; 0 bytes @ 0x0
  2821                           
  2822  0070                     ?_DimmerLights_IOC_2:	
  2823                           ; 0 bytes @ 0x0
  2824                           
  2825  0070                     ??_DimmerLights_IOC_2:	
  2826                           ; 0 bytes @ 0x0
  2827                           
  2828  0070                     ?_DimmerLights_TMR_2:	
  2829                           ; 0 bytes @ 0x0
  2830                           
  2831  0070                     ??_DimmerLights_TMR_2:	
  2832                           ; 0 bytes @ 0x0
  2833                           
  2834  0070                     ?_DimmerLights_IOC_3:	
  2835                           ; 0 bytes @ 0x0
  2836                           
  2837  0070                     ??_DimmerLights_IOC_3:	
  2838                           ; 0 bytes @ 0x0
  2839                           
  2840  0070                     ?_DimmerLights_TMR_3:	
  2841                           ; 0 bytes @ 0x0
  2842                           
  2843  0070                     ??_DimmerLights_TMR_3:	
  2844                           ; 0 bytes @ 0x0
  2845                           
  2846  0070                     ?_LedPointSelect:	
  2847                           ; 0 bytes @ 0x0
  2848                           
  2849  0070                     ?_LED_Initialization:	
  2850                           ; 0 bytes @ 0x0
  2851                           
  2852  0070                     ?_LED_Main:	
  2853                           ; 0 bytes @ 0x0
  2854                           
  2855  0070                     ?_Mcu_Initialization:	
  2856                           ; 0 bytes @ 0x0
  2857                           
  2858  0070                     ?_ISR:	
  2859                           ; 0 bytes @ 0x0
  2860                           
  2861  0070                     ?_Flash_Memory_Initialization:	
  2862                           ; 0 bytes @ 0x0
  2863                           
  2864  0070                     ?_Flash_Memory_Main:	
  2865                           ; 0 bytes @ 0x0
  2866                           
  2867  0070                     ?_Flash_Memory_Unlock:	
  2868                           ; 0 bytes @ 0x0
  2869                           
  2870  0070                     ?_Flash_Memory_Erasing:	
  2871                           ; 0 bytes @ 0x0
  2872                           
  2873  0070                     ?_setMemory_LoopSave:	
  2874                           ; 0 bytes @ 0x0
  2875                           
  2876  0070                     ?_WDT_Main:	
  2877                           ; 0 bytes @ 0x0
  2878                           
  2879  0070                     ?_setRF_Learn:	
  2880                           ; 0 bytes @ 0x0
  2881                           
  2882  0070                     ?_TouchPower:	
  2883                           ; 0 bytes @ 0x0
  2884                           
  2885  0070                     ?_SwPointSelect:	
  2886                           ; 0 bytes @ 0x0
  2887                           
  2888  0070                     ?_getDimmerLights_Status:	
  2889                           ; 0 bytes @ 0x0
  2890                           
  2891  0070                     ?_getDimmerLights_ValueToPercent:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ?_getDimmerLights_PercentToValue:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ?_getDimmerLights_Allow_Condition:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ?_getMain_All_LightsStatus:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ?_getCmd_Status:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ?_Flash_Memory_Read:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_getAll_Sw_KeyStatus:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     ?_getRF_KeyStatus:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0070                     ?_getSw_KeyStatus:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0070                     ?_getDelayOff_GO:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0070                     ?_getDimmerIntr_DimmingValue:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0070                     ?_getMain_All_Error_Status:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0070                     setDimmerLights_Initialization@lights:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0070                     getMain_All_Error_Status@command:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936                           
  2937                           ; 1 bytes @ 0x0
  2938  0070                     	ds	1
  2939  0071                     ??_TMR1_ISR:	
  2940  0071                     ??_IOC_ISR:	
  2941                           ; 0 bytes @ 0x1
  2942                           
  2943  0071                     ??_ISR:	
  2944                           ; 0 bytes @ 0x1
  2945                           
  2946                           
  2947                           ; 0 bytes @ 0x1
  2948  0071                     	ds	1
  2949  0072                     ??_RF_Timeout_Counter:	
  2950  0072                     ??_setRF_TimeoutCleared:	
  2951                           ; 0 bytes @ 0x2
  2952                           
  2953  0072                     ??_CC2500_WriteByte:	
  2954                           ; 0 bytes @ 0x2
  2955                           
  2956  0072                     ??_CC2500_ReadByte:	
  2957                           ; 0 bytes @ 0x2
  2958                           
  2959  0072                     ?_DelayTime_1us:	
  2960                           ; 0 bytes @ 0x2
  2961                           
  2962  0072                     ??_setMemory_Modify:	
  2963                           ; 0 bytes @ 0x2
  2964                           
  2965  0072                     ??_setDimmerLights_Initialization:	
  2966                           ; 0 bytes @ 0x2
  2967                           
  2968  0072                     ??_getDimmerLights_Allow_Condition:	
  2969                           ; 0 bytes @ 0x2
  2970                           
  2971  0072                     ??_getMain_All_LightsStatus:	
  2972                           ; 0 bytes @ 0x2
  2973                           
  2974  0072                     ??_DimmerIntr_ValueCalculate:	
  2975                           ; 0 bytes @ 0x2
  2976                           
  2977  0072                     ??_getCmd_Status:	
  2978                           ; 0 bytes @ 0x2
  2979                           
  2980  0072                     ?_setCmd_Status:	
  2981                           ; 0 bytes @ 0x2
  2982                           
  2983  0072                     ??_setTxData:	
  2984                           ; 0 bytes @ 0x2
  2985                           
  2986  0072                     ??_setRF_TransceiveGO:	
  2987                           ; 0 bytes @ 0x2
  2988                           
  2989  0072                     ??_Fosc_Set:	
  2990                           ; 0 bytes @ 0x2
  2991                           
  2992  0072                     ??_IO_Set:	
  2993                           ; 0 bytes @ 0x2
  2994                           
  2995  0072                     ??_TMR1_Set:	
  2996                           ; 0 bytes @ 0x2
  2997                           
  2998  0072                     ??_ADC_Set:	
  2999                           ; 0 bytes @ 0x2
  3000                           
  3001  0072                     ??_IOC_Set:	
  3002                           ; 0 bytes @ 0x2
  3003                           
  3004  0072                     ??_WDT_Set:	
  3005                           ; 0 bytes @ 0x2
  3006                           
  3007  0072                     ??_Timeout_Counter:	
  3008                           ; 0 bytes @ 0x2
  3009                           
  3010  0072                     ??_set_TimeoutCleared:	
  3011                           ; 0 bytes @ 0x2
  3012                           
  3013  0072                     ??_Flash_Memory_Read:	
  3014                           ; 0 bytes @ 0x2
  3015                           
  3016  0072                     ?_setMemory_Data:	
  3017                           ; 0 bytes @ 0x2
  3018                           
  3019  0072                     ??_Flash_Memory_Write:	
  3020                           ; 0 bytes @ 0x2
  3021                           
  3022  0072                     ??_getAll_Sw_KeyStatus:	
  3023                           ; 0 bytes @ 0x2
  3024                           
  3025  0072                     ??_WDT_Clearing:	
  3026                           ; 0 bytes @ 0x2
  3027                           
  3028  0072                     ??_myMain_Initialization:	
  3029                           ; 0 bytes @ 0x2
  3030                           
  3031  0072                     ??_setRF_Initialization:	
  3032                           ; 0 bytes @ 0x2
  3033                           
  3034  0072                     ??_getRF_KeyStatus:	
  3035                           ; 0 bytes @ 0x2
  3036                           
  3037  0072                     ??_RF_RxDisable:	
  3038                           ; 0 bytes @ 0x2
  3039                           
  3040  0072                     ??_setData:	
  3041                           ; 0 bytes @ 0x2
  3042                           
  3043  0072                     ??_getSw_KeyStatus:	
  3044                           ; 0 bytes @ 0x2
  3045                           
  3046  0072                     ??_Buzzer_Initialization:	
  3047                           ; 0 bytes @ 0x2
  3048                           
  3049  0072                     ??_Buzzer_Main:	
  3050                           ; 0 bytes @ 0x2
  3051                           
  3052  0072                     ??_DelayOffPointSelect:	
  3053                           ; 0 bytes @ 0x2
  3054                           
  3055  0072                     ?_setDimmerIntr_ControlStatus:	
  3056                           ; 0 bytes @ 0x2
  3057                           
  3058  0072                     ??_getDimmerIntr_DimmingValue:	
  3059                           ; 0 bytes @ 0x2
  3060                           
  3061  0072                     ?_setDimmerIntr_Dimming_Sw:	
  3062                           ; 0 bytes @ 0x2
  3063                           
  3064  0072                     ??_getDimmerIntr_Dimming_Sw:	
  3065                           ; 0 bytes @ 0x2
  3066                           
  3067  0072                     ?_setDimmerIntr_Dimming_RF:	
  3068                           ; 0 bytes @ 0x2
  3069                           
  3070  0072                     ??_DimmerLights_SelectPointer:	
  3071                           ; 0 bytes @ 0x2
  3072                           
  3073  0072                     ??_LedPointSelect:	
  3074                           ; 0 bytes @ 0x2
  3075                           
  3076  0072                     ??_Flash_Memory_Unlock:	
  3077                           ; 0 bytes @ 0x2
  3078                           
  3079  0072                     ??_Flash_Memory_Erasing:	
  3080                           ; 0 bytes @ 0x2
  3081                           
  3082  0072                     ??_setMemory_LoopSave:	
  3083                           ; 0 bytes @ 0x2
  3084                           
  3085  0072                     ??_WDT_Main:	
  3086                           ; 0 bytes @ 0x2
  3087                           
  3088  0072                     ??_getMain_All_Error_Status:	
  3089                           ; 0 bytes @ 0x2
  3090                           
  3091  0072                     ??_setRF_Learn:	
  3092                           ; 0 bytes @ 0x2
  3093                           
  3094  0072                     ??_TouchPower:	
  3095                           ; 0 bytes @ 0x2
  3096                           
  3097  0072                     ??_SwPointSelect:	
  3098                           ; 0 bytes @ 0x2
  3099                           
  3100  0072                     ?___bmul:	
  3101                           ; 0 bytes @ 0x2
  3102                           
  3103  0072                     ?_getBuz_GO:	
  3104                           ; 1 bytes @ 0x2
  3105                           
  3106  0072                     ?___awdiv:	
  3107                           ; 2 bytes @ 0x2
  3108                           
  3109  0072                     ?___lwdiv:	
  3110                           ; 2 bytes @ 0x2
  3111                           
  3112  0072                     ?___ftpack:	
  3113                           ; 2 bytes @ 0x2
  3114                           
  3115  0072                     setDimmerIntr_ControlStatus@command:	
  3116                           ; 3 bytes @ 0x2
  3117                           
  3118  0072                     setDimmerIntr_Dimming_Sw@command:	
  3119                           ; 1 bytes @ 0x2
  3120                           
  3121  0072                     getDimmerIntr_Dimming_Sw@status:	
  3122                           ; 1 bytes @ 0x2
  3123                           
  3124  0072                     setDimmerIntr_Dimming_RF@command:	
  3125                           ; 1 bytes @ 0x2
  3126                           
  3127  0072                     LedPointSelect@led:	
  3128                           ; 1 bytes @ 0x2
  3129                           
  3130  0072                     setMemory_Data@data:	
  3131                           ; 1 bytes @ 0x2
  3132                           
  3133  0072                     getMain_All_LightsStatus@status:	
  3134                           ; 1 bytes @ 0x2
  3135                           
  3136  0072                     getMain_All_Error_Status@status:	
  3137                           ; 1 bytes @ 0x2
  3138                           
  3139  0072                     setCmd_Status@cmd:	
  3140                           ; 1 bytes @ 0x2
  3141                           
  3142  0072                     getCmd_Status@number:	
  3143                           ; 1 bytes @ 0x2
  3144                           
  3145  0072                     getSw_KeyStatus@status:	
  3146                           ; 1 bytes @ 0x2
  3147                           
  3148  0072                     ___bmul@multiplicand:	
  3149                           ; 1 bytes @ 0x2
  3150                           
  3151  0072                     DelayTime_1us@count:	
  3152                           ; 1 bytes @ 0x2
  3153                           
  3154  0072                     ___awdiv@divisor:	
  3155                           ; 2 bytes @ 0x2
  3156                           
  3157  0072                     ___lwdiv@divisor:	
  3158                           ; 2 bytes @ 0x2
  3159                           
  3160  0072                     ___ftpack@arg:	
  3161                           ; 2 bytes @ 0x2
  3162                           
  3163                           
  3164                           ; 3 bytes @ 0x2
  3165  0072                     	ds	1
  3166  0073                     ?_setLED:	
  3167  0073                     ??_setCmd_Status:	
  3168                           ; 0 bytes @ 0x3
  3169                           
  3170  0073                     ??_setLED_Main:	
  3171                           ; 0 bytes @ 0x3
  3172                           
  3173  0073                     ??_setMemory_Data:	
  3174                           ; 0 bytes @ 0x3
  3175                           
  3176  0073                     ??_RF_Initialization:	
  3177                           ; 0 bytes @ 0x3
  3178                           
  3179  0073                     ??_setDimmerIntr_ControlStatus:	
  3180                           ; 0 bytes @ 0x3
  3181                           
  3182  0073                     ??_setDimmerIntr_Dimming_Sw:	
  3183                           ; 0 bytes @ 0x3
  3184                           
  3185  0073                     ??_setDimmerIntr_Dimming_RF:	
  3186                           ; 0 bytes @ 0x3
  3187                           
  3188  0073                     ??_Mcu_Initialization:	
  3189                           ; 0 bytes @ 0x3
  3190                           
  3191  0073                     ??___bmul:	
  3192                           ; 0 bytes @ 0x3
  3193                           
  3194  0073                     CC2500_WriteByte@loop_a:	
  3195                           ; 0 bytes @ 0x3
  3196                           
  3197  0073                     CC2500_ReadByte@loop_b:	
  3198                           ; 1 bytes @ 0x3
  3199                           
  3200  0073                     DelayOffPointSelect@sw:	
  3201                           ; 1 bytes @ 0x3
  3202                           
  3203  0073                     getDimmerIntr_DimmingValue@value:	
  3204                           ; 1 bytes @ 0x3
  3205                           
  3206  0073                     getDimmerIntr_Dimming_Sw@lights:	
  3207                           ; 1 bytes @ 0x3
  3208                           
  3209  0073                     DimmerLights_SelectPointer@lights:	
  3210                           ; 1 bytes @ 0x3
  3211                           
  3212  0073                     _getDimmerLights_Allow_Condition$2624:	
  3213                           ; 1 bytes @ 0x3
  3214                           
  3215  0073                     DimmerIntr_ValueCalculate@lights:	
  3216                           ; 1 bytes @ 0x3
  3217                           
  3218  0073                     setLED@command:	
  3219                           ; 1 bytes @ 0x3
  3220                           
  3221  0073                     Flash_Memory_Read@i:	
  3222                           ; 1 bytes @ 0x3
  3223                           
  3224  0073                     Flash_Memory_Write@i:	
  3225                           ; 1 bytes @ 0x3
  3226                           
  3227  0073                     setMemory_Modify@command:	
  3228                           ; 1 bytes @ 0x3
  3229                           
  3230  0073                     setMemory_LoopSave@command:	
  3231                           ; 1 bytes @ 0x3
  3232                           
  3233  0073                     getCmd_Status@cmd:	
  3234                           ; 1 bytes @ 0x3
  3235                           
  3236  0073                     setRF_Learn@command:	
  3237                           ; 1 bytes @ 0x3
  3238                           
  3239  0073                     getRF_KeyStatus@key:	
  3240                           ; 1 bytes @ 0x3
  3241                           
  3242  0073                     setRF_TransceiveGO@command:	
  3243                           ; 1 bytes @ 0x3
  3244                           
  3245  0073                     SwPointSelect@sw:	
  3246                           ; 1 bytes @ 0x3
  3247                           
  3248  0073                     getSw_KeyStatus@sw:	
  3249                           ; 1 bytes @ 0x3
  3250                           
  3251  0073                     getAll_Sw_KeyStatus@status:	
  3252                           ; 1 bytes @ 0x3
  3253                           
  3254                           
  3255                           ; 1 bytes @ 0x3
  3256  0073                     	ds	1
  3257  0074                     ??_CC2500_WriteCommand:	
  3258  0074                     ??_CC2500_ReadStatus:	
  3259                           ; 0 bytes @ 0x4
  3260                           
  3261  0074                     ??_DelayTime_1us:	
  3262                           ; 0 bytes @ 0x4
  3263                           
  3264  0074                     ?_CC2500_WriteREG:	
  3265                           ; 0 bytes @ 0x4
  3266                           
  3267  0074                     ??_DlyOff_Initialization:	
  3268                           ; 0 bytes @ 0x4
  3269                           
  3270  0074                     ??_getDimmerLights_Status:	
  3271                           ; 0 bytes @ 0x4
  3272                           
  3273  0074                     ??_setDimmerLights_SwOff:	
  3274                           ; 0 bytes @ 0x4
  3275                           
  3276  0074                     ??_DimmerLights_DimmingFunction:	
  3277                           ; 0 bytes @ 0x4
  3278                           
  3279  0074                     ??_setLED:	
  3280                           ; 0 bytes @ 0x4
  3281                           
  3282  0074                     ??_getBuz_GO:	
  3283                           ; 0 bytes @ 0x4
  3284                           
  3285  0074                     ??_getDelayOff_GO:	
  3286                           ; 0 bytes @ 0x4
  3287                           
  3288  0074                     ??_setDimmerLights_DimmingOn:	
  3289                           ; 0 bytes @ 0x4
  3290                           
  3291  0074                     ?_setDimmerLights_DimmingRun:	
  3292                           ; 0 bytes @ 0x4
  3293                           
  3294  0074                     CC2500_WriteREG@value:	
  3295                           ; 0 bytes @ 0x4
  3296                           
  3297  0074                     DlyOff_Initialization@sw:	
  3298                           ; 1 bytes @ 0x4
  3299                           
  3300  0074                     getDelayOff_GO@sw:	
  3301                           ; 1 bytes @ 0x4
  3302                           
  3303  0074                     setDimmerIntr_ControlStatus@lights:	
  3304                           ; 1 bytes @ 0x4
  3305                           
  3306  0074                     getDimmerIntr_DimmingValue@lights:	
  3307                           ; 1 bytes @ 0x4
  3308                           
  3309  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3310                           ; 1 bytes @ 0x4
  3311                           
  3312  0074                     setDimmerIntr_Dimming_RF@lights:	
  3313                           ; 1 bytes @ 0x4
  3314                           
  3315  0074                     setDimmerLights_SwOff@sw:	
  3316                           ; 1 bytes @ 0x4
  3317                           
  3318  0074                     setDimmerLights_DimmingOn@sw:	
  3319                           ; 1 bytes @ 0x4
  3320                           
  3321  0074                     _getDimmerLights_Allow_Condition$2625:	
  3322                           ; 1 bytes @ 0x4
  3323                           
  3324  0074                     getDimmerLights_Status@lights:	
  3325                           ; 1 bytes @ 0x4
  3326                           
  3327  0074                     setDimmerLights_DimmingRun@command:	
  3328                           ; 1 bytes @ 0x4
  3329                           
  3330  0074                     setLED@led:	
  3331                           ; 1 bytes @ 0x4
  3332                           
  3333  0074                     Flash_Memory_Read@address:	
  3334                           ; 1 bytes @ 0x4
  3335                           
  3336  0074                     setMemory_Data@address:	
  3337                           ; 1 bytes @ 0x4
  3338                           
  3339  0074                     setCmd_Status@number:	
  3340                           ; 1 bytes @ 0x4
  3341                           
  3342  0074                     _getRF_KeyStatus$5789:	
  3343                           ; 1 bytes @ 0x4
  3344                           
  3345  0074                     _getAll_Sw_KeyStatus$6885:	
  3346                           ; 1 bytes @ 0x4
  3347                           
  3348  0074                     ___bmul@product:	
  3349                           ; 1 bytes @ 0x4
  3350                           
  3351  0074                     DelayTime_1us@i:	
  3352                           ; 1 bytes @ 0x4
  3353                           
  3354  0074                     ___awdiv@dividend:	
  3355                           ; 2 bytes @ 0x4
  3356                           
  3357  0074                     ___lwdiv@dividend:	
  3358                           ; 2 bytes @ 0x4
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x4
  3362  0074                     	ds	1
  3363  0075                     ??_CC2500_WriteREG:	
  3364  0075                     ??_setDimmerLights_DimmingClose:	
  3365                           ; 0 bytes @ 0x5
  3366                           
  3367  0075                     ??_setLED_Initialization:	
  3368                           ; 0 bytes @ 0x5
  3369                           
  3370  0075                     ??_Exception_Main:	
  3371                           ; 0 bytes @ 0x5
  3372                           
  3373  0075                     ??_setSw_Initialization:	
  3374                           ; 0 bytes @ 0x5
  3375                           
  3376  0075                     ??_DelayOff_Initialization:	
  3377                           ; 0 bytes @ 0x5
  3378                           
  3379  0075                     ??_setDimmerLights_DimmingRun:	
  3380                           ; 0 bytes @ 0x5
  3381                           
  3382  0075                     CC2500_WriteCommand@command:	
  3383                           ; 0 bytes @ 0x5
  3384                           
  3385  0075                     CC2500_ReadStatus@status_addr:	
  3386                           ; 1 bytes @ 0x5
  3387                           
  3388  0075                     getDelayOff_GO@go:	
  3389                           ; 1 bytes @ 0x5
  3390                           
  3391  0075                     _getDimmerLights_Allow_Condition$2626:	
  3392                           ; 1 bytes @ 0x5
  3393                           
  3394  0075                     getDimmerLights_Status@status:	
  3395                           ; 1 bytes @ 0x5
  3396                           
  3397  0075                     DimmerLights_DimmingFunction@lights:	
  3398                           ; 1 bytes @ 0x5
  3399                           
  3400  0075                     setLED_Initialization@led:	
  3401                           ; 1 bytes @ 0x5
  3402                           
  3403  0075                     setLED_Main@led:	
  3404                           ; 1 bytes @ 0x5
  3405                           
  3406  0075                     Flash_Memory_Read@ret:	
  3407                           ; 1 bytes @ 0x5
  3408                           
  3409  0075                     setSw_Initialization@sw:	
  3410                           ; 1 bytes @ 0x5
  3411                           
  3412  0075                     ___bmul@multiplier:	
  3413                           ; 1 bytes @ 0x5
  3414                           
  3415  0075                     ___ftpack@exp:	
  3416                           ; 1 bytes @ 0x5
  3417                           
  3418                           
  3419                           ; 1 bytes @ 0x5
  3420  0075                     	ds	1
  3421  0076                     ??_CC2500_ClearTXFIFO:	
  3422  0076                     ??_CC2500_ClearRXFIFO:	
  3423                           ; 0 bytes @ 0x6
  3424                           
  3425  0076                     ??_CC2500_SIDLEMode:	
  3426                           ; 0 bytes @ 0x6
  3427                           
  3428  0076                     ??_Flash_Memory_Modify:	
  3429                           ; 0 bytes @ 0x6
  3430                           
  3431  0076                     ??_Switch_Initialization:	
  3432                           ; 0 bytes @ 0x6
  3433                           
  3434  0076                     ??_setRF_AdjControl:	
  3435                           ; 0 bytes @ 0x6
  3436                           
  3437  0076                     ??_CC2500_TxData:	
  3438                           ; 0 bytes @ 0x6
  3439                           
  3440  0076                     ??_CC2500_RxData:	
  3441                           ; 0 bytes @ 0x6
  3442                           
  3443  0076                     ??_LED_Initialization:	
  3444                           ; 0 bytes @ 0x6
  3445                           
  3446  0076                     ??_LED_Main:	
  3447                           ; 0 bytes @ 0x6
  3448                           
  3449  0076                     ??_Flash_Memory_Initialization:	
  3450                           ; 0 bytes @ 0x6
  3451                           
  3452  0076                     ??___awdiv:	
  3453                           ; 0 bytes @ 0x6
  3454                           
  3455  0076                     ??___lwdiv:	
  3456                           ; 0 bytes @ 0x6
  3457                           
  3458  0076                     CC2500_WriteREG@w_addr:	
  3459                           ; 0 bytes @ 0x6
  3460                           
  3461  0076                     getDimmerLights_Allow_Condition@lights:	
  3462                           ; 1 bytes @ 0x6
  3463                           
  3464  0076                     setDimmerLights_DimmingRun@lights:	
  3465                           ; 1 bytes @ 0x6
  3466                           
  3467  0076                     ___ftpack@sign:	
  3468                           ; 1 bytes @ 0x6
  3469                           
  3470  0076                     getBuz_GO@i:	
  3471                           ; 1 bytes @ 0x6
  3472                           
  3473  0076                     DelayTime_1us@j:	
  3474                           ; 2 bytes @ 0x6
  3475                           
  3476                           
  3477                           ; 2 bytes @ 0x6
  3478  0076                     	ds	1
  3479  0077                     ??_CC2500_InitSetREG:	
  3480  0077                     ??_CC2500_InitPATable:	
  3481                           ; 0 bytes @ 0x7
  3482                           
  3483  0077                     ??_setBuz:	
  3484                           ; 0 bytes @ 0x7
  3485                           
  3486  0077                     ??___awtoft:	
  3487                           ; 0 bytes @ 0x7
  3488                           
  3489  0077                     CC2500_TxData@loop_e:	
  3490                           ; 0 bytes @ 0x7
  3491                           
  3492  0077                     CC2500_RxData@loop_f:	
  3493                           ; 1 bytes @ 0x7
  3494                           
  3495  0077                     getDimmerLights_Allow_Condition@allow:	
  3496                           ; 1 bytes @ 0x7
  3497                           
  3498  0077                     Flash_Memory_Initialization@value:	
  3499                           ; 1 bytes @ 0x7
  3500                           
  3501  0077                     Flash_Memory_Modify@i:	
  3502                           ; 1 bytes @ 0x7
  3503                           
  3504                           
  3505                           ; 1 bytes @ 0x7
  3506  0077                     	ds	1
  3507  0078                     ??_CC2500_PowerRST:	
  3508  0078                     ??_CC2500_FrequencyCabr:	
  3509                           ; 0 bytes @ 0x8
  3510                           
  3511  0078                     ??_Flash_Memory_Main:	
  3512                           ; 0 bytes @ 0x8
  3513                           
  3514  0078                     setBuz@count:	
  3515                           ; 0 bytes @ 0x8
  3516                           
  3517                           
  3518                           ; 1 bytes @ 0x8
  3519  0078                     	ds	1
  3520  0079                     ??_getDimmerLights_ValueToPercent:	
  3521  0079                     ??_setDimmerLights_Main:	
  3522                           ; 0 bytes @ 0x9
  3523                           
  3524  0079                     ??_Switch_Main:	
  3525                           ; 0 bytes @ 0x9
  3526                           
  3527  0079                     ??_RF_Main:	
  3528                           ; 0 bytes @ 0x9
  3529                           
  3530  0079                     ??_setControl_Lights_Table:	
  3531                           ; 0 bytes @ 0x9
  3532                           
  3533  0079                     ??_CC2500_PowerOnInitial:	
  3534                           ; 0 bytes @ 0x9
  3535                           
  3536  0079                     ??_DelayOff_Main:	
  3537                           ; 0 bytes @ 0x9
  3538                           
  3539  0079                     ??_DimmerLights_Initialization:	
  3540                           ; 0 bytes @ 0x9
  3541                           
  3542  0079                     ??_DimmerLights_Main:	
  3543                           ; 0 bytes @ 0x9
  3544                           
  3545  0079                     ??_main:	
  3546                           ; 0 bytes @ 0x9
  3547                           
  3548                           
  3549                           	psect	cstackBANK0
  3550  0020                     __pcstackBANK0:	
  3551                           ; 0 bytes @ 0x9
  3552                           
  3553  0020                     ??___ftpack:	
  3554  0020                     CC2500_InitSetREG@temp1:	
  3555                           ; 0 bytes @ 0x0
  3556                           
  3557  0020                     CC2500_InitPATable@temp:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  0020                     Flash_Memory_Main@key_Status:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  0020                     Exception_Main@lights:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0020                     setRF_AdjControl@status:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0020                     ___awdiv@counter:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0020                     ___lwdiv@counter:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575                           
  3576                           ; 1 bytes @ 0x0
  3577  0020                     	ds	1
  3578  0021                     CC2500_InitSetREG@temp2:	
  3579  0021                     CC2500_InitPATable@loop_d:	
  3580                           ; 1 bytes @ 0x1
  3581                           
  3582  0021                     _Flash_Memory_Main$3562:	
  3583                           ; 1 bytes @ 0x1
  3584                           
  3585  0021                     Exception_Main@count:	
  3586                           ; 1 bytes @ 0x1
  3587                           
  3588  0021                     setRF_AdjControl@dimmingStatus:	
  3589                           ; 1 bytes @ 0x1
  3590                           
  3591  0021                     ___awdiv@sign:	
  3592                           ; 1 bytes @ 0x1
  3593                           
  3594  0021                     ___lwdiv@quotient:	
  3595                           ; 1 bytes @ 0x1
  3596                           
  3597                           
  3598                           ; 2 bytes @ 0x1
  3599  0021                     	ds	1
  3600  0022                     CC2500_InitSetREG@loop_c:	
  3601  0022                     Exception_Main@status:	
  3602                           ; 1 bytes @ 0x2
  3603                           
  3604  0022                     setRF_AdjControl@sw:	
  3605                           ; 1 bytes @ 0x2
  3606                           
  3607  0022                     ___awdiv@quotient:	
  3608                           ; 1 bytes @ 0x2
  3609                           
  3610                           
  3611                           ; 2 bytes @ 0x2
  3612  0022                     	ds	1
  3613  0023                     ?___awtoft:	
  3614  0023                     Exception_Main@error:	
  3615                           ; 3 bytes @ 0x3
  3616                           
  3617  0023                     ___awtoft@c:	
  3618                           ; 1 bytes @ 0x3
  3619                           
  3620                           
  3621                           ; 2 bytes @ 0x3
  3622  0023                     	ds	1
  3623  0024                     ?_setBuz:	
  3624  0024                     setBuz@time:	
  3625                           ; 0 bytes @ 0x4
  3626                           
  3627                           
  3628                           ; 2 bytes @ 0x4
  3629  0024                     	ds	2
  3630  0026                     ??_setDimmerLights_SwOn:	
  3631  0026                     ??_my_MainTimer:	
  3632                           ; 0 bytes @ 0x6
  3633                           
  3634  0026                     ___awtoft@sign:	
  3635                           ; 0 bytes @ 0x6
  3636                           
  3637                           
  3638                           ; 1 bytes @ 0x6
  3639  0026                     	ds	1
  3640  0027                     ?___ftdiv:	
  3641  0027                     ?___ftmul:	
  3642                           ; 3 bytes @ 0x7
  3643                           
  3644  0027                     setDimmerLights_SwOn@dimmingStatus:	
  3645                           ; 3 bytes @ 0x7
  3646                           
  3647  0027                     ___ftdiv@f2:	
  3648                           ; 1 bytes @ 0x7
  3649                           
  3650  0027                     ___ftmul@f1:	
  3651                           ; 3 bytes @ 0x7
  3652                           
  3653                           
  3654                           ; 3 bytes @ 0x7
  3655  0027                     	ds	1
  3656  0028                     _setDimmerLights_SwOn$2561:	
  3657                           
  3658                           ; 1 bytes @ 0x8
  3659  0028                     	ds	1
  3660  0029                     _setDimmerLights_SwOn$2570:	
  3661                           
  3662                           ; 1 bytes @ 0x9
  3663  0029                     	ds	1
  3664  002A                     _setDimmerLights_SwOn$2571:	
  3665  002A                     ___ftdiv@f1:	
  3666                           ; 1 bytes @ 0xA
  3667                           
  3668  002A                     ___ftmul@f2:	
  3669                           ; 3 bytes @ 0xA
  3670                           
  3671                           
  3672                           ; 3 bytes @ 0xA
  3673  002A                     	ds	1
  3674  002B                     setDimmerLights_SwOn@idle:	
  3675                           
  3676                           ; 1 bytes @ 0xB
  3677  002B                     	ds	1
  3678  002C                     setDimmerLights_SwOn@sw:	
  3679                           
  3680                           ; 1 bytes @ 0xC
  3681  002C                     	ds	1
  3682  002D                     ??_setSw_Main:	
  3683  002D                     ??___ftdiv:	
  3684                           ; 0 bytes @ 0xD
  3685                           
  3686  002D                     ??___ftmul:	
  3687                           ; 0 bytes @ 0xD
  3688                           
  3689                           
  3690                           ; 0 bytes @ 0xD
  3691  002D                     	ds	2
  3692  002F                     setSw_Main@sw:	
  3693                           
  3694                           ; 1 bytes @ 0xF
  3695  002F                     	ds	2
  3696  0031                     ___ftdiv@cntr:	
  3697  0031                     ___ftmul@exp:	
  3698                           ; 1 bytes @ 0x11
  3699                           
  3700                           
  3701                           ; 1 bytes @ 0x11
  3702  0031                     	ds	1
  3703  0032                     ___ftdiv@f3:	
  3704  0032                     ___ftmul@f3_as_product:	
  3705                           ; 3 bytes @ 0x12
  3706                           
  3707                           
  3708                           ; 3 bytes @ 0x12
  3709  0032                     	ds	3
  3710  0035                     ___ftdiv@exp:	
  3711  0035                     ___ftmul@cntr:	
  3712                           ; 1 bytes @ 0x15
  3713                           
  3714                           
  3715                           ; 1 bytes @ 0x15
  3716  0035                     	ds	1
  3717  0036                     ___ftdiv@sign:	
  3718  0036                     ___ftmul@sign:	
  3719                           ; 1 bytes @ 0x16
  3720                           
  3721                           
  3722                           ; 1 bytes @ 0x16
  3723  0036                     	ds	1
  3724  0037                     ?___ftadd:	
  3725  0037                     ___ftadd@f1:	
  3726                           ; 3 bytes @ 0x17
  3727                           
  3728                           
  3729                           ; 3 bytes @ 0x17
  3730  0037                     	ds	3
  3731  003A                     ___ftadd@f2:	
  3732                           
  3733                           ; 3 bytes @ 0x1A
  3734  003A                     	ds	3
  3735  003D                     ??___ftadd:	
  3736                           
  3737                           ; 0 bytes @ 0x1D
  3738  003D                     	ds	4
  3739  0041                     ___ftadd@sign:	
  3740                           
  3741                           ; 1 bytes @ 0x21
  3742  0041                     	ds	1
  3743  0042                     ___ftadd@exp2:	
  3744                           
  3745                           ; 1 bytes @ 0x22
  3746  0042                     	ds	1
  3747  0043                     ___ftadd@exp1:	
  3748                           
  3749                           ; 1 bytes @ 0x23
  3750  0043                     	ds	1
  3751  0044                     ?___fttol:	
  3752  0044                     ___fttol@f1:	
  3753                           ; 4 bytes @ 0x24
  3754                           
  3755                           
  3756                           ; 3 bytes @ 0x24
  3757  0044                     	ds	4
  3758  0048                     ??___fttol:	
  3759                           
  3760                           ; 0 bytes @ 0x28
  3761  0048                     	ds	4
  3762  004C                     ___fttol@sign1:	
  3763                           
  3764                           ; 1 bytes @ 0x2C
  3765  004C                     	ds	1
  3766  004D                     ___fttol@lval:	
  3767                           
  3768                           ; 4 bytes @ 0x2D
  3769  004D                     	ds	4
  3770  0051                     ___fttol@exp1:	
  3771                           
  3772                           ; 1 bytes @ 0x31
  3773  0051                     	ds	1
  3774  0052                     ??_getDimmerLights_PercentToValue:	
  3775  0052                     getDimmerLights_ValueToPercent@value:	
  3776                           ; 0 bytes @ 0x32
  3777                           
  3778                           
  3779                           ; 1 bytes @ 0x32
  3780  0052                     	ds	1
  3781  0053                     getDimmerLights_ValueToPercent@i:	
  3782                           
  3783                           ; 3 bytes @ 0x33
  3784  0053                     	ds	1
  3785  0054                     getDimmerLights_PercentToValue@value:	
  3786                           
  3787                           ; 1 bytes @ 0x34
  3788  0054                     	ds	1
  3789  0055                     getDimmerLights_PercentToValue@i:	
  3790                           
  3791                           ; 3 bytes @ 0x35
  3792  0055                     	ds	1
  3793  0056                     ?_setProductData:	
  3794  0056                     setProductData@value:	
  3795                           ; 0 bytes @ 0x36
  3796                           
  3797                           
  3798                           ; 1 bytes @ 0x36
  3799  0056                     	ds	1
  3800  0057                     ??_setProductData:	
  3801                           
  3802                           ; 0 bytes @ 0x37
  3803  0057                     	ds	1
  3804  0058                     ??_DimmerIntr_Initialization:	
  3805  0058                     ?_setDimmerIntr_DimmingValue:	
  3806                           ; 0 bytes @ 0x38
  3807                           
  3808  0058                     ?_setDimmerIntr_MaxmumValue:	
  3809                           ; 0 bytes @ 0x38
  3810                           
  3811  0058                     setDimmerIntr_DimmingValue@value:	
  3812                           ; 0 bytes @ 0x38
  3813                           
  3814  0058                     setDimmerIntr_MaxmumValue@value:	
  3815                           ; 1 bytes @ 0x38
  3816                           
  3817  0058                     setProductData@address:	
  3818                           ; 1 bytes @ 0x38
  3819                           
  3820                           
  3821                           ; 1 bytes @ 0x38
  3822  0058                     	ds	1
  3823  0059                     ??_DlyOff_Main:	
  3824  0059                     ?_setRF_DimmerLights:	
  3825                           ; 0 bytes @ 0x39
  3826                           
  3827  0059                     ??_setLog_Code:	
  3828                           ; 0 bytes @ 0x39
  3829                           
  3830  0059                     ?_setDelayOff_GO:	
  3831                           ; 0 bytes @ 0x39
  3832                           
  3833  0059                     ??_setDimmerIntr_DimmingValue:	
  3834                           ; 0 bytes @ 0x39
  3835                           
  3836  0059                     ??_setDimmerIntr_MaxmumValue:	
  3837                           ; 0 bytes @ 0x39
  3838                           
  3839  0059                     setDelayOff_GO@command:	
  3840                           ; 0 bytes @ 0x39
  3841                           
  3842  0059                     setRF_DimmerLights@on:	
  3843                           ; 1 bytes @ 0x39
  3844                           
  3845                           
  3846                           ; 1 bytes @ 0x39
  3847  0059                     	ds	1
  3848  005A                     ??_setRF_DimmerLights:	
  3849  005A                     setDelayOff_GO@value:	
  3850                           ; 0 bytes @ 0x3A
  3851                           
  3852  005A                     setDimmerIntr_DimmingValue@lights:	
  3853                           ; 1 bytes @ 0x3A
  3854                           
  3855  005A                     setDimmerIntr_MaxmumValue@lights:	
  3856                           ; 1 bytes @ 0x3A
  3857                           
  3858                           
  3859                           ; 1 bytes @ 0x3A
  3860  005A                     	ds	1
  3861  005B                     ??_setRFSW_AdjControl:	
  3862  005B                     ??_setDelayOff_GO:	
  3863                           ; 0 bytes @ 0x3B
  3864                           
  3865  005B                     DlyOff_Main@sw:	
  3866                           ; 0 bytes @ 0x3B
  3867                           
  3868                           
  3869                           ; 1 bytes @ 0x3B
  3870  005B                     	ds	1
  3871  005C                     setRF_DimmerLights@status:	
  3872                           
  3873                           ; 1 bytes @ 0x3C
  3874  005C                     	ds	1
  3875  005D                     setDelayOff_GO@i:	
  3876  005D                     setRFSW_AdjControl@status:	
  3877                           ; 1 bytes @ 0x3D
  3878                           
  3879  005D                     setRF_DimmerLights@lights:	
  3880                           ; 1 bytes @ 0x3D
  3881                           
  3882                           
  3883                           ; 1 bytes @ 0x3D
  3884  005D                     	ds	1
  3885  005E                     ?_setDimmerLights_Dimming:	
  3886  005E                     setDelayOff_GO@j:	
  3887                           ; 0 bytes @ 0x3E
  3888                           
  3889  005E                     setDimmerLights_Dimming@status:	
  3890                           ; 1 bytes @ 0x3E
  3891                           
  3892  005E                     setRFSW_AdjControl@sw:	
  3893                           ; 1 bytes @ 0x3E
  3894                           
  3895                           
  3896                           ; 1 bytes @ 0x3E
  3897  005E                     	ds	1
  3898  005F                     ??_setDimmerLights_Dimming:	
  3899  005F                     setDelayOff_GO@k:	
  3900                           ; 0 bytes @ 0x3F
  3901                           
  3902                           
  3903                           ; 1 bytes @ 0x3F
  3904  005F                     	ds	1
  3905  0060                     setDelayOff_GO@sw:	
  3906  0060                     setDimmerLights_Dimming@value:	
  3907                           ; 1 bytes @ 0x40
  3908                           
  3909                           
  3910                           ; 1 bytes @ 0x40
  3911  0060                     	ds	1
  3912  0061                     ?_setDimmerLights_OnOff:	
  3913  0061                     ??_setRFSW_Control:	
  3914                           ; 0 bytes @ 0x41
  3915                           
  3916  0061                     setDimmerLights_OnOff@command:	
  3917                           ; 0 bytes @ 0x41
  3918                           
  3919  0061                     setDimmerLights_Dimming@lights:	
  3920                           ; 1 bytes @ 0x41
  3921                           
  3922                           
  3923                           ; 1 bytes @ 0x41
  3924  0061                     	ds	1
  3925  0062                     ??_setDimmerLights_OnOff:	
  3926  0062                     setRFSW_Control@status:	
  3927                           ; 0 bytes @ 0x42
  3928                           
  3929                           
  3930                           ; 1 bytes @ 0x42
  3931  0062                     	ds	1
  3932  0063                     setRFSW_Control@sw:	
  3933                           
  3934                           ; 1 bytes @ 0x43
  3935  0063                     	ds	1
  3936  0064                     ??_getRxData:	
  3937  0064                     setDimmerLights_OnOff@lights:	
  3938                           ; 0 bytes @ 0x44
  3939                           
  3940                           
  3941                           ; 1 bytes @ 0x44
  3942  0064                     	ds	1
  3943  0065                     setDimmerLights_Main@lights:	
  3944  0065                     getRxData@error:	
  3945                           ; 1 bytes @ 0x45
  3946                           
  3947                           
  3948                           ; 1 bytes @ 0x45
  3949  0065                     	ds	1
  3950  0066                     ??_setRF_Main:	
  3951                           
  3952                           ; 0 bytes @ 0x46
  3953  0066                     	ds	1
  3954  0067                     setRF_Main@error:	
  3955                           
  3956                           ; 1 bytes @ 0x47
  3957  0067                     	ds	1
  3958                           
  3959                           	psect	maintext
  3960  169A                     __pmaintext:	
  3961 ;;
  3962 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3963 ;;
  3964 ;; *************** function _main *****************
  3965 ;; Defined at:
  3966 ;;		line 7 in file "../src/Main_B1.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  argc            2    0[BANK4 ] int 
  3969 ;;  argv            2    2[BANK4 ] PTR PTR unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2    0[BANK4 ] int 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 17F/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3981 ;;      Params:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Totals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  3985 ;;Total ram usage:        4 bytes
  3986 ;; Hardware stack levels required when called:   11
  3987 ;; This function calls:
  3988 ;;		_Buzzer_Initialization
  3989 ;;		_Buzzer_Main
  3990 ;;		_CC2500_PowerOnInitial
  3991 ;;		_DelayOff_Initialization
  3992 ;;		_DelayOff_Main
  3993 ;;		_DimmerLights_Initialization
  3994 ;;		_DimmerLights_Main
  3995 ;;		_Exception_Main
  3996 ;;		_Flash_Memory_Initialization
  3997 ;;		_Flash_Memory_Main
  3998 ;;		_LED_Initialization
  3999 ;;		_LED_Main
  4000 ;;		_Mcu_Initialization
  4001 ;;		_RF_Initialization
  4002 ;;		_RF_Main
  4003 ;;		_Switch_Initialization
  4004 ;;		_Switch_Main
  4005 ;;		_WDT_Main
  4006 ;;		_myMain_Initialization
  4007 ;;		_my_MainTimer
  4008 ;; This function is called by:
  4009 ;;		Startup code after reset
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _main
  4015  169A                     _main:	
  4016                           
  4017                           ;Main_B1.c: 8: myMain_Initialization();
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4021  169A  319D  25E7  3196   	fcall	_myMain_Initialization
  4022                           
  4023                           ;Main_B1.c: 9: Mcu_Initialization();
  4024  169D  319E  2698  3196   	fcall	_Mcu_Initialization
  4025                           
  4026                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  4027  16A0  3183  23A8  3196   	fcall	_Flash_Memory_Initialization
  4028                           
  4029                           ;Main_B1.c: 11: LED_Initialization();
  4030  16A3  319E  2626  3196   	fcall	_LED_Initialization
  4031                           
  4032                           ;Main_B1.c: 12: Buzzer_Initialization();
  4033  16A6  319C  249C  3196   	fcall	_Buzzer_Initialization
  4034                           
  4035                           ;Main_B1.c: 14: ;;
  4036                           ;Main_B1.c: 15: ;;
  4037                           ;Main_B1.c: 16: ;;
  4038                           ;Main_B1.c: 17: ;;
  4039                           ;Main_B1.c: 18: DelayOff_Initialization();
  4040  16A9  319D  2524  3196   	fcall	_DelayOff_Initialization
  4041                           
  4042                           ;Main_B1.c: 20: DimmerLights_Initialization();
  4043  16AC  319D  257E  3196   	fcall	_DimmerLights_Initialization
  4044                           
  4045                           ;Main_B1.c: 21: ;;
  4046                           ;Main_B1.c: 22: ;;
  4047                           ;Main_B1.c: 23: ;;
  4048                           ;Main_B1.c: 24: Switch_Initialization();
  4049  16AF  3190  2068  3196   	fcall	_Switch_Initialization
  4050                           
  4051                           ;Main_B1.c: 25: RF_Initialization();
  4052  16B2  319C  24A2  3196   	fcall	_RF_Initialization
  4053                           
  4054                           ;Main_B1.c: 26: CC2500_PowerOnInitial();
  4055  16B5  319E  26FC  3196   	fcall	_CC2500_PowerOnInitial
  4056  16B8                     l1781:	
  4057                           ;Main_B1.c: 27: ;;
  4058                           ;Main_B1.c: 28: ;;
  4059                           ;Main_B1.c: 30: while (1) {
  4060                           
  4061                           
  4062                           ;Main_B1.c: 57: }
  4063                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  4064  16B8  0021               	movlb	1	; select bank1
  4065  16B9  1C58               	btfss	_Timer1^(0+128),0
  4066  16BA  2EB8               	goto	l1781
  4067                           
  4068                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  4069  16BB  1058               	bcf	_Timer1^(0+128),0
  4070                           
  4071                           ;Main_B1.c: 96: my_MainTimer();
  4072  16BC  3194  24DD  3196   	fcall	_my_MainTimer
  4073                           
  4074                           ;Main_B1.c: 97: WDT_Main();
  4075  16BF  319E  2666  3196   	fcall	_WDT_Main
  4076                           
  4077                           ;Main_B1.c: 98: ;;
  4078                           ;Main_B1.c: 99: ;;
  4079                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  4080  16C2  0021               	movlb	1	; select bank1
  4081  16C3  1C3F               	btfss	_myMain^(0+128),0
  4082  16C4  2EB8               	goto	l1781
  4083                           
  4084                           ;Main_B1.c: 101: Flash_Memory_Main();
  4085  16C5  3195  25D3  3196   	fcall	_Flash_Memory_Main
  4086                           
  4087                           ;Main_B1.c: 103: LED_Main();
  4088  16C8  319E  2636  3196   	fcall	_LED_Main
  4089                           
  4090                           ;Main_B1.c: 104: Buzzer_Main();
  4091  16CB  3196  26DE  3196   	fcall	_Buzzer_Main
  4092                           
  4093                           ;Main_B1.c: 106: ;;
  4094                           ;Main_B1.c: 107: ;;
  4095                           ;Main_B1.c: 108: ;;
  4096                           ;Main_B1.c: 109: ;;
  4097                           ;Main_B1.c: 111: ;;
  4098                           ;Main_B1.c: 112: DimmerLights_Main();
  4099  16CE  319F  2769  3196   	fcall	_DimmerLights_Main
  4100                           
  4101                           ;Main_B1.c: 113: Switch_Main();
  4102  16D1  319D  25D8  3196   	fcall	_Switch_Main
  4103                           
  4104                           ;Main_B1.c: 114: ;;
  4105                           ;Main_B1.c: 115: ;;
  4106                           ;Main_B1.c: 117: RF_Main();
  4107  16D4  319C  24A5  3196   	fcall	_RF_Main
  4108                           
  4109                           ;Main_B1.c: 118: DelayOff_Main();
  4110  16D7  319D  253C  3196   	fcall	_DelayOff_Main
  4111                           
  4112                           ;Main_B1.c: 119: ;;
  4113                           ;Main_B1.c: 120: ;;
  4114                           ;Main_B1.c: 121: Exception_Main();
  4115  16DA  3194  24A3  3196   	fcall	_Exception_Main
  4116  16DD  2EB8               	goto	l1781
  4117  16DE                     __end_of_main:	
  4118                           ;Main_B1.c: 128: }
  4119                           ;Main_B1.c: 129: }
  4120                           ;Main_B1.c: 163: }
  4121                           ;Main_B1.c: 164: return (0);
  4122                           ;	Return value of _main is never used
  4123                           
  4124                           
  4125                           	psect	text1
  4126  14DD                     __ptext1:	
  4127 ;; *************** function _my_MainTimer *****************
  4128 ;; Defined at:
  4129 ;;		line 185 in file "../src/Main_B1.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;Total ram usage:        1 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    5
  4150 ;; This function calls:
  4151 ;;		_setBuz
  4152 ;; This function is called by:
  4153 ;;		_main
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function _my_MainTimer
  4159  14DD                     _my_MainTimer:	
  4160                           
  4161                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4165  14DD  0021               	movlb	1	; select bank1
  4166  14DE  183F               	btfsc	_myMain^(0+128),0
  4167  14DF  2CF7               	goto	l11463
  4168                           
  4169                           ;Main_B1.c: 188: myMain.PowerCount++;
  4170  14E0  3001               	movlw	1
  4171  14E1  0020               	movlb	0	; select bank0
  4172  14E2  00A6               	movwf	??_my_MainTimer
  4173  14E3  0826               	movf	??_my_MainTimer,w
  4174  14E4  0021               	movlb	1	; select bank1
  4175  14E5  07C0               	addwf	(_myMain^(0+128)+1),f
  4176                           
  4177                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  4178  14E6  0840               	movf	(_myMain^(0+128)+1),w
  4179  14E7  3A4B               	xorlw	75
  4180  14E8  1D03               	skipz
  4181  14E9  0008               	return
  4182                           
  4183                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  4184  14EA  01C0               	clrf	(_myMain^(0+128)+1)
  4185                           
  4186                           ;Main_B1.c: 191: myMain.PowerON = 1;
  4187  14EB  143F               	bsf	_myMain^(0+128),0
  4188                           
  4189                           ;Main_B1.c: 196: setBuz(3, 50);
  4190  14EC  3032               	movlw	50
  4191  14ED  0020               	movlb	0	; select bank0
  4192  14EE  00A4               	movwf	setBuz@time
  4193  14EF  3000               	movlw	0
  4194  14F0  00A5               	movwf	setBuz@time+1
  4195  14F1  3003               	movlw	3
  4196  14F2  3188  2050         	fcall	_setBuz
  4197                           
  4198                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  4199  14F4  0021               	movlb	1	; select bank1
  4200  14F5  163F               	bsf	_myMain^(0+128),4
  4201                           
  4202                           ;Main_B1.c: 206: }
  4203                           ;Main_B1.c: 207: } else {
  4204  14F6  0008               	return
  4205  14F7                     l11463:	
  4206                           
  4207                           ;Main_B1.c: 208: myMain.PowerCount++;
  4208  14F7  3001               	movlw	1
  4209  14F8  0020               	movlb	0	; select bank0
  4210  14F9  00A6               	movwf	??_my_MainTimer
  4211  14FA  0826               	movf	??_my_MainTimer,w
  4212  14FB  0021               	movlb	1	; select bank1
  4213  14FC  07C0               	addwf	(_myMain^(0+128)+1),f
  4214                           
  4215                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  4216  14FD  0840               	movf	(_myMain^(0+128)+1),w
  4217  14FE  3A32               	xorlw	50
  4218  14FF  1903               	btfsc	3,2
  4219                           
  4220                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  4221  1500  01C0               	clrf	(_myMain^(0+128)+1)
  4222                           
  4223                           ;Main_B1.c: 232: }
  4224                           ;Main_B1.c: 234: myMain.Count1++;
  4225  1501  3001               	movlw	1
  4226  1502  07C3               	addwf	(_myMain^(0+128)+4),f
  4227  1503  3000               	movlw	0
  4228  1504  3DC4               	addwfc	((_myMain+1)^(0+128)+4),f
  4229                           
  4230                           ;Main_B1.c: 235: if (myMain.Count1 == (1000 / 20)) {
  4231  1505  3004               	movlw	4
  4232  1506  3EBF               	addlw	_myMain& (0+255)
  4233  1507  0086               	movwf	6
  4234  1508  0187               	clrf	7
  4235  1509  3F40               	moviw [0]fsr1
  4236  150A  3A32               	xorlw	50
  4237  150B  1D03               	skipz
  4238  150C  2D0F               	goto	u13725
  4239  150D  3F41               	moviw [1]fsr1
  4240  150E  3A00               	xorlw	0
  4241  150F                     u13725:	
  4242  150F  1D03               	skipz
  4243  1510  0008               	return
  4244                           
  4245                           ;Main_B1.c: 236: myMain.Count1 = 0;
  4246  1511  01C3               	clrf	(_myMain^(0+128)+4)
  4247  1512  01C4               	clrf	((_myMain+1)^(0+128)+4)
  4248                           
  4249                           ;Main_B1.c: 248: if (myMain.Flag) {
  4250  1513  1CBF               	btfss	_myMain^(0+128),1
  4251  1514  2D17               	goto	l1797
  4252                           
  4253                           ;Main_B1.c: 249: myMain.Flag = 0;
  4254  1515  10BF               	bcf	_myMain^(0+128),1
  4255                           
  4256                           ;Main_B1.c: 258: } else {
  4257  1516  0008               	return
  4258  1517                     l1797:	
  4259                           
  4260                           ;Main_B1.c: 259: myMain.Flag = 1;
  4261  1517  14BF               	bsf	_myMain^(0+128),1
  4262  1518  0008               	return
  4263  1519                     __end_of_my_MainTimer:	
  4264                           
  4265                           	psect	text2
  4266  1DE7                     __ptext2:	
  4267 ;; *************** function _myMain_Initialization *****************
  4268 ;; Defined at:
  4269 ;;		line 170 in file "../src/Main_B1.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    3
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _myMain_Initialization
  4299  1DE7                     _myMain_Initialization:	
  4300                           
  4301                           ;Main_B1.c: 173: product = &_product;
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4305  1DE7  3045               	movlw	__product& (0+255)
  4306  1DE8  00F2               	movwf	??_myMain_Initialization
  4307  1DE9  0872               	movf	??_myMain_Initialization,w
  4308  1DEA  0020               	movlb	0	; select bank0
  4309  1DEB  00EE               	movwf	_product
  4310                           
  4311                           ;Main_B1.c: 174: product->Data[20] = 211;
  4312  1DEC  30D3               	movlw	211
  4313  1DED  00F2               	movwf	??_myMain_Initialization
  4314  1DEE  086E               	movf	_product,w
  4315  1DEF  3E14               	addlw	20
  4316  1DF0  0086               	movwf	6
  4317  1DF1  3002               	movlw	2	; select bank4/5
  4318  1DF2  0087               	movwf	7
  4319  1DF3  0872               	movf	??_myMain_Initialization,w
  4320  1DF4  0081               	movwf	1
  4321  1DF5  0008               	return
  4322  1DF6                     __end_of_myMain_Initialization:	
  4323                           
  4324                           	psect	text3
  4325  1E66                     __ptext3:	
  4326 ;; *************** function _WDT_Main *****************
  4327 ;; Defined at:
  4328 ;;		line 1121 in file "../src/MCU_B1.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;		None               void
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    4
  4349 ;; This function calls:
  4350 ;;		_WDT_Clearing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _WDT_Main
  4358  1E66                     _WDT_Main:	
  4359                           
  4360                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4364  1E66  0021               	movlb	1	; select bank1
  4365  1E67  1C5D               	btfss	_WDT^(0+128),0
  4366  1E68  0008               	return
  4367                           
  4368                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  4369  1E69  3001               	movlw	1
  4370  1E6A  02DE               	subwf	(_WDT^(0+128)+1),f
  4371  1E6B  085E               	movf	(_WDT^(0+128)+1),w
  4372  1E6C  3AFF               	xorlw	255
  4373  1E6D  1903               	skipnz
  4374  1E6E  0008               	return
  4375                           
  4376                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  4377  1E6F  3064               	movlw	100
  4378  1E70  00F2               	movwf	??_WDT_Main
  4379  1E71  0872               	movf	??_WDT_Main,w
  4380  1E72  00DE               	movwf	(_WDT^(0+128)+1)
  4381                           
  4382                           ;MCU_B1.c: 1125: WDT_Clearing();
  4383  1E73  3180  2002         	fcall	_WDT_Clearing
  4384  1E75  0008               	return
  4385  1E76                     __end_of_WDT_Main:	
  4386                           
  4387                           	psect	text4
  4388  0002                     __ptext4:	
  4389 ;; *************** function _WDT_Clearing *****************
  4390 ;; Defined at:
  4391 ;;		line 1131 in file "../src/MCU_B1.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		None
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    3
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_WDT_Main
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _WDT_Clearing
  4421  0002                     _WDT_Clearing:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _WDT_Clearing: []
  4425  0002  0064               	clrwdt	;# 
  4426  0003  0008               	return
  4427  0004                     __end_of_WDT_Clearing:	
  4428                           
  4429                           	psect	text5
  4430  1DD8                     __ptext5:	
  4431 ;; *************** function _Switch_Main *****************
  4432 ;; Defined at:
  4433 ;;		line 76 in file "../src/Switch_B1.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;		None               void
  4440 ;; Registers used:
  4441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    7
  4454 ;; This function calls:
  4455 ;;		_TouchPower
  4456 ;;		_setSw_Main
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _Switch_Main
  4464  1DD8                     _Switch_Main:	
  4465                           
  4466                           ;Switch_B1.c: 79: setSw_Main(1);
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4470  1DD8  3001               	movlw	1
  4471  1DD9  3180  2059  319D   	fcall	_setSw_Main
  4472                           
  4473                           ;Switch_B1.c: 83: setSw_Main(2);
  4474  1DDC  3002               	movlw	2
  4475  1DDD  3180  2059  319D   	fcall	_setSw_Main
  4476                           
  4477                           ;Switch_B1.c: 87: setSw_Main(3);
  4478  1DE0  3003               	movlw	3
  4479  1DE1  3180  2059  319D   	fcall	_setSw_Main
  4480                           
  4481                           ;Switch_B1.c: 91: TouchPower();
  4482  1DE4  319F  2726         	fcall	_TouchPower
  4483  1DE6  0008               	return
  4484  1DE7                     __end_of_Switch_Main:	
  4485                           
  4486                           	psect	text6
  4487  0059                     __ptext6:	
  4488 ;; *************** function _setSw_Main *****************
  4489 ;; Defined at:
  4490 ;;		line 117 in file "../src/Switch_B1.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  sw              1    wreg     unsigned char 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  sw              1   15[BANK0 ] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:        3 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    6
  4511 ;; This function calls:
  4512 ;;		_SwPointSelect
  4513 ;;		_getMain_All_Error_Status
  4514 ;;		_getSw_KeyStatus
  4515 ;;		_setBuz
  4516 ;;		_setDimmerLights_DimmingOn
  4517 ;;		_setDimmerLights_SwOff
  4518 ;;		_setDimmerLights_SwOn
  4519 ;;		_setRF_Learn
  4520 ;; This function is called by:
  4521 ;;		_Switch_Main
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function _setSw_Main
  4527  0059                     _setSw_Main:	
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4531                           ;setSw_Main@sw stored from wreg
  4532  0059  0020               	movlb	0	; select bank0
  4533  005A  00AF               	movwf	setSw_Main@sw
  4534                           
  4535                           ;Switch_B1.c: 118: SwPointSelect(sw);
  4536  005B  082F               	movf	setSw_Main@sw,w
  4537  005C  3191  2154  3180   	fcall	_SwPointSelect
  4538                           
  4539                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  4540  005F  0020               	movlb	0	; select bank0
  4541  0060  086C               	movf	_Sw,w
  4542  0061  0086               	movwf	6
  4543  0062  3001               	movlw	1	; select bank2/3
  4544  0063  0087               	movwf	7
  4545  0064  1C01               	btfss	1,0
  4546  0065  29C0               	goto	l2875
  4547                           
  4548                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  4549  0066  3000               	movlw	0
  4550  0067  319C  249F  3180   	fcall	_getMain_All_Error_Status
  4551  006A  3800               	iorlw	0
  4552  006B  1D03               	skipz
  4553  006C  2888               	goto	l11349
  4554                           
  4555                           ;Switch_B1.c: 122: Sw->Detect = 0;
  4556  006D  0020               	movlb	0	; select bank0
  4557  006E  0A6C               	incf	_Sw,w
  4558  006F  0086               	movwf	6
  4559  0070  3001               	movlw	1	; select bank2/3
  4560  0071  0087               	movwf	7
  4561  0072  1081               	bcf	1,1
  4562                           
  4563                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  4564  0073  082F               	movf	setSw_Main@sw,w
  4565  0074  3191  21D5  3180   	fcall	_getSw_KeyStatus
  4566  0077  3A01               	xorlw	1
  4567  0078  3000               	movlw	0
  4568  0079  1903               	skipnz
  4569  007A  3001               	movlw	1
  4570  007B  0020               	movlb	0	; select bank0
  4571  007C  00AD               	movwf	??_setSw_Main
  4572  007D  086C               	movf	_Sw,w
  4573  007E  0086               	movwf	6
  4574  007F  3001               	movlw	1	; select bank2/3
  4575  0080  0087               	movwf	7
  4576  0081  0DAD               	rlf	??_setSw_Main,f
  4577  0082  0801               	movf	1,w
  4578  0083  062D               	xorwf	??_setSw_Main,w
  4579  0084  39FD               	andlw	-3
  4580  0085  062D               	xorwf	??_setSw_Main,w
  4581  0086  0081               	movwf	1
  4582                           
  4583                           ;Switch_B1.c: 124: } else {
  4584  0087  289E               	goto	l2877
  4585  0088                     l11349:	
  4586                           
  4587                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  4588  0088  0020               	movlb	0	; select bank0
  4589  0089  0A6C               	incf	_Sw,w
  4590  008A  0086               	movwf	6
  4591  008B  3001               	movlw	1	; select bank2/3
  4592  008C  0087               	movwf	7
  4593  008D  1881               	btfsc	1,1
  4594  008E  289E               	goto	l2877
  4595                           
  4596                           ;Switch_B1.c: 126: Sw->Detect = 1;
  4597  008F  0A6C               	incf	_Sw,w
  4598  0090  0086               	movwf	6
  4599  0091  3001               	movlw	1	; select bank2/3
  4600  0092  0087               	movwf	7
  4601  0093  1481               	bsf	1,1
  4602                           
  4603                           ;Switch_B1.c: 128: Sw->Touch = 0;
  4604  0094  086C               	movf	_Sw,w
  4605  0095  0086               	movwf	6
  4606  0096  3001               	movlw	1	; select bank2/3
  4607  0097  0087               	movwf	7
  4608  0098  1081               	bcf	1,1
  4609                           
  4610                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  4611  0099  086C               	movf	_Sw,w
  4612  009A  0086               	movwf	6
  4613  009B  3001               	movlw	1	; select bank2/3
  4614  009C  0087               	movwf	7
  4615  009D  1501               	bsf	1,2
  4616  009E                     l2877:	
  4617                           
  4618                           ;Switch_B1.c: 130: }
  4619                           ;Switch_B1.c: 131: }
  4620                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  4621  009E  086C               	movf	_Sw,w
  4622  009F  0086               	movwf	6
  4623  00A0  3001               	movlw	1	; select bank2/3
  4624  00A1  0087               	movwf	7
  4625  00A2  1C81               	btfss	1,1
  4626  00A3  296D               	goto	l11399
  4627                           
  4628                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  4629  00A4  086C               	movf	_Sw,w
  4630  00A5  0086               	movwf	6
  4631  00A6  3001               	movlw	1	; select bank2/3
  4632  00A7  0087               	movwf	7
  4633  00A8  1901               	btfsc	1,2
  4634  00A9  28CB               	goto	l11365
  4635                           
  4636                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  4637  00AA  3001               	movlw	1
  4638  00AB  00AD               	movwf	??_setSw_Main
  4639  00AC  086C               	movf	_Sw,w
  4640  00AD  3E02               	addlw	2
  4641  00AE  0086               	movwf	6
  4642  00AF  3001               	movlw	1	; select bank2/3
  4643  00B0  0087               	movwf	7
  4644  00B1  082D               	movf	??_setSw_Main,w
  4645  00B2  0781               	addwf	1,f
  4646                           
  4647                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  4648  00B3  086C               	movf	_Sw,w
  4649  00B4  3E02               	addlw	2
  4650  00B5  0086               	movwf	6
  4651  00B6  3001               	movlw	1	; select bank2/3
  4652  00B7  0087               	movwf	7
  4653  00B8  3005               	movlw	5
  4654  00B9  0201               	subwf	1,w
  4655  00BA  1C03               	skipc
  4656  00BB  0008               	return
  4657                           
  4658                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  4659  00BC  086C               	movf	_Sw,w
  4660  00BD  3E02               	addlw	2
  4661  00BE  0086               	movwf	6
  4662  00BF  3001               	movlw	1	; select bank2/3
  4663  00C0  0087               	movwf	7
  4664  00C1  0181               	clrf	1
  4665                           
  4666                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  4667  00C2  086C               	movf	_Sw,w
  4668  00C3  0086               	movwf	6
  4669  00C4  3001               	movlw	1	; select bank2/3
  4670  00C5  0087               	movwf	7
  4671  00C6  1501               	bsf	1,2
  4672                           
  4673                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  4674  00C7  082F               	movf	setSw_Main@sw,w
  4675  00C8  3187  2766         	fcall	_setDimmerLights_SwOn
  4676                           
  4677                           ;Switch_B1.c: 147: }
  4678                           ;Switch_B1.c: 148: } else {
  4679  00CA  0008               	return
  4680  00CB                     l11365:	
  4681                           
  4682                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  4683  00CB  0020               	movlb	0	; select bank0
  4684  00CC  086C               	movf	_Sw,w
  4685  00CD  0086               	movwf	6
  4686  00CE  3001               	movlw	1	; select bank2/3
  4687  00CF  0087               	movwf	7
  4688  00D0  1981               	btfsc	1,3
  4689  00D1  28FD               	goto	l11375
  4690                           
  4691                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  4692  00D2  086C               	movf	_Sw,w
  4693  00D3  3E03               	addlw	3
  4694  00D4  0086               	movwf	6
  4695  00D5  3001               	movlw	1	; select bank2/3
  4696  00D6  0087               	movwf	7
  4697  00D7  3001               	movlw	1
  4698  00D8  0781               	addwf	1,f
  4699  00D9  3141               	addfsr 1,1
  4700  00DA  1803               	skipnc
  4701  00DB  0A81               	incf	1,f
  4702                           
  4703                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  4704  00DC  086C               	movf	_Sw,w
  4705  00DD  3E03               	addlw	3
  4706  00DE  0086               	movwf	6
  4707  00DF  3001               	movlw	1	; select bank2/3
  4708  00E0  0087               	movwf	7
  4709  00E1  3F40               	moviw [0]fsr1
  4710  00E2  00AD               	movwf	??_setSw_Main
  4711  00E3  3F41               	moviw [1]fsr1
  4712  00E4  00AE               	movwf	??_setSw_Main+1
  4713  00E5  3000               	movlw	0
  4714  00E6  022E               	subwf	??_setSw_Main+1,w
  4715  00E7  304B               	movlw	75
  4716  00E8  1903               	skipnz
  4717  00E9  022D               	subwf	??_setSw_Main,w
  4718  00EA  1C03               	skipc
  4719  00EB  0008               	return
  4720                           
  4721                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  4722  00EC  086C               	movf	_Sw,w
  4723  00ED  3E03               	addlw	3
  4724  00EE  0086               	movwf	6
  4725  00EF  3001               	movlw	1	; select bank2/3
  4726  00F0  0087               	movwf	7
  4727  00F1  3000               	movlw	0
  4728  00F2  3FC0               	movwi [0]fsr1
  4729  00F3  3FC1               	movwi [1]fsr1
  4730                           
  4731                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  4732  00F4  086C               	movf	_Sw,w
  4733  00F5  0086               	movwf	6
  4734  00F6  3001               	movlw	1	; select bank2/3
  4735  00F7  0087               	movwf	7
  4736  00F8  1581               	bsf	1,3
  4737                           
  4738                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  4739  00F9  082F               	movf	setSw_Main@sw,w
  4740  00FA  3192  22E9         	fcall	_setDimmerLights_DimmingOn
  4741                           
  4742                           ;Switch_B1.c: 162: }
  4743                           ;Switch_B1.c: 163: } else {
  4744  00FC  0008               	return
  4745  00FD                     l11375:	
  4746                           
  4747                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  4748  00FD  0020               	movlb	0	; select bank0
  4749  00FE  086C               	movf	_Sw,w
  4750  00FF  0086               	movwf	6
  4751  0100  3001               	movlw	1	; select bank2/3
  4752  0101  0087               	movwf	7
  4753  0102  1A01               	btfsc	1,4
  4754  0103  293B               	goto	l11389
  4755                           
  4756                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  4757  0104  086C               	movf	_Sw,w
  4758  0105  3E05               	addlw	5
  4759  0106  0086               	movwf	6
  4760  0107  3001               	movlw	1	; select bank2/3
  4761  0108  0087               	movwf	7
  4762  0109  3001               	movlw	1
  4763  010A  0781               	addwf	1,f
  4764  010B  3141               	addfsr 1,1
  4765  010C  1803               	skipnc
  4766  010D  0A81               	incf	1,f
  4767                           
  4768                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  4769  010E  086C               	movf	_Sw,w
  4770  010F  3E05               	addlw	5
  4771  0110  0086               	movwf	6
  4772  0111  3001               	movlw	1	; select bank2/3
  4773  0112  0087               	movwf	7
  4774  0113  3F40               	moviw [0]fsr1
  4775  0114  00AD               	movwf	??_setSw_Main
  4776  0115  3F41               	moviw [1]fsr1
  4777  0116  00AE               	movwf	??_setSw_Main+1
  4778  0117  3000               	movlw	0
  4779  0118  022E               	subwf	??_setSw_Main+1,w
  4780  0119  304B               	movlw	75
  4781  011A  1903               	skipnz
  4782  011B  022D               	subwf	??_setSw_Main,w
  4783  011C  1C03               	skipc
  4784  011D  0008               	return
  4785                           
  4786                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  4787  011E  086C               	movf	_Sw,w
  4788  011F  3E05               	addlw	5
  4789  0120  0086               	movwf	6
  4790  0121  3001               	movlw	1	; select bank2/3
  4791  0122  0087               	movwf	7
  4792  0123  3000               	movlw	0
  4793  0124  3FC0               	movwi [0]fsr1
  4794  0125  3FC1               	movwi [1]fsr1
  4795                           
  4796                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  4797  0126  086C               	movf	_Sw,w
  4798  0127  0086               	movwf	6
  4799  0128  3001               	movlw	1	; select bank2/3
  4800  0129  0087               	movwf	7
  4801  012A  1601               	bsf	1,4
  4802                           
  4803                           ;Switch_B1.c: 172: setRF_Learn(1);
  4804  012B  3001               	movlw	1
  4805  012C  319E  2687  3180   	fcall	_setRF_Learn
  4806                           
  4807                           ;Switch_B1.c: 173: if (myMain.First == 1) {
  4808  012F  0021               	movlb	1	; select bank1
  4809  0130  1EBF               	btfss	_myMain^(0+128),5
  4810  0131  0008               	return
  4811                           
  4812                           ;Switch_B1.c: 174: setBuz(2, 100);
  4813  0132  3064               	movlw	100
  4814  0133  0020               	movlb	0	; select bank0
  4815  0134  00A4               	movwf	setBuz@time
  4816  0135  3000               	movlw	0
  4817  0136  00A5               	movwf	setBuz@time+1
  4818  0137  3002               	movlw	2
  4819  0138  3188  2050         	fcall	_setBuz
  4820                           
  4821                           ;Switch_B1.c: 175: }
  4822                           ;Switch_B1.c: 179: }
  4823                           ;Switch_B1.c: 180: } else {
  4824  013A  0008               	return
  4825  013B                     l11389:	
  4826                           
  4827                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  4828  013B  0020               	movlb	0	; select bank0
  4829  013C  086C               	movf	_Sw,w
  4830  013D  0086               	movwf	6
  4831  013E  3001               	movlw	1	; select bank2/3
  4832  013F  0087               	movwf	7
  4833  0140  1A81               	btfsc	1,5
  4834  0141  0008               	return
  4835                           
  4836                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  4837  0142  086C               	movf	_Sw,w
  4838  0143  3E07               	addlw	7
  4839  0144  0086               	movwf	6
  4840  0145  3001               	movlw	1	; select bank2/3
  4841  0146  0087               	movwf	7
  4842  0147  3001               	movlw	1
  4843  0148  0781               	addwf	1,f
  4844  0149  3141               	addfsr 1,1
  4845  014A  1803               	skipnc
  4846  014B  0A81               	incf	1,f
  4847                           
  4848                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  4849  014C  086C               	movf	_Sw,w
  4850  014D  3E07               	addlw	7
  4851  014E  0086               	movwf	6
  4852  014F  3001               	movlw	1	; select bank2/3
  4853  0150  0087               	movwf	7
  4854  0151  3F40               	moviw [0]fsr1
  4855  0152  00AD               	movwf	??_setSw_Main
  4856  0153  3F41               	moviw [1]fsr1
  4857  0154  00AE               	movwf	??_setSw_Main+1
  4858  0155  3000               	movlw	0
  4859  0156  022E               	subwf	??_setSw_Main+1,w
  4860  0157  3096               	movlw	150
  4861  0158  1903               	skipnz
  4862  0159  022D               	subwf	??_setSw_Main,w
  4863  015A  1C03               	skipc
  4864  015B  0008               	return
  4865                           
  4866                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  4867  015C  086C               	movf	_Sw,w
  4868  015D  3E07               	addlw	7
  4869  015E  0086               	movwf	6
  4870  015F  3001               	movlw	1	; select bank2/3
  4871  0160  0087               	movwf	7
  4872  0161  3000               	movlw	0
  4873  0162  3FC0               	movwi [0]fsr1
  4874  0163  3FC1               	movwi [1]fsr1
  4875                           
  4876                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  4877  0164  086C               	movf	_Sw,w
  4878  0165  0086               	movwf	6
  4879  0166  3001               	movlw	1	; select bank2/3
  4880  0167  0087               	movwf	7
  4881  0168  1681               	bsf	1,5
  4882                           
  4883                           ;Switch_B1.c: 188: setRF_Learn(0);
  4884  0169  3000               	movlw	0
  4885  016A  319E  2687         	fcall	_setRF_Learn
  4886                           
  4887                           ;Switch_B1.c: 191: }
  4888                           ;Switch_B1.c: 192: }
  4889                           ;Switch_B1.c: 193: }
  4890                           ;Switch_B1.c: 195: }
  4891                           ;Switch_B1.c: 196: }
  4892                           ;Switch_B1.c: 197: } else {
  4893  016C  0008               	return
  4894  016D                     l11399:	
  4895                           
  4896                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  4897  016D  0020               	movlb	0	; select bank0
  4898  016E  086C               	movf	_Sw,w
  4899  016F  0086               	movwf	6
  4900  0170  3001               	movlw	1	; select bank2/3
  4901  0171  0087               	movwf	7
  4902  0172  1D01               	btfss	1,2
  4903  0173  0008               	return
  4904                           
  4905                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  4906  0174  3001               	movlw	1
  4907  0175  00AD               	movwf	??_setSw_Main
  4908  0176  086C               	movf	_Sw,w
  4909  0177  3E02               	addlw	2
  4910  0178  0086               	movwf	6
  4911  0179  3001               	movlw	1	; select bank2/3
  4912  017A  0087               	movwf	7
  4913  017B  082D               	movf	??_setSw_Main,w
  4914  017C  0781               	addwf	1,f
  4915                           
  4916                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  4917  017D  086C               	movf	_Sw,w
  4918  017E  3E02               	addlw	2
  4919  017F  0086               	movwf	6
  4920  0180  3001               	movlw	1	; select bank2/3
  4921  0181  0087               	movwf	7
  4922  0182  3005               	movlw	5
  4923  0183  0201               	subwf	1,w
  4924  0184  1C03               	skipc
  4925  0185  0008               	return
  4926                           
  4927                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  4928  0186  086C               	movf	_Sw,w
  4929  0187  3E02               	addlw	2
  4930  0188  0086               	movwf	6
  4931  0189  3001               	movlw	1	; select bank2/3
  4932  018A  0087               	movwf	7
  4933  018B  0181               	clrf	1
  4934                           
  4935                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  4936  018C  086C               	movf	_Sw,w
  4937  018D  0086               	movwf	6
  4938  018E  3001               	movlw	1	; select bank2/3
  4939  018F  0087               	movwf	7
  4940  0190  1101               	bcf	1,2
  4941                           
  4942                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  4943  0191  086C               	movf	_Sw,w
  4944  0192  3E03               	addlw	3
  4945  0193  0086               	movwf	6
  4946  0194  3001               	movlw	1	; select bank2/3
  4947  0195  0087               	movwf	7
  4948  0196  3000               	movlw	0
  4949  0197  3FC0               	movwi [0]fsr1
  4950  0198  3FC1               	movwi [1]fsr1
  4951                           
  4952                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  4953  0199  086C               	movf	_Sw,w
  4954  019A  0086               	movwf	6
  4955  019B  3001               	movlw	1	; select bank2/3
  4956  019C  0087               	movwf	7
  4957  019D  1181               	bcf	1,3
  4958                           
  4959                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  4960  019E  086C               	movf	_Sw,w
  4961  019F  0086               	movwf	6
  4962  01A0  3001               	movlw	1	; select bank2/3
  4963  01A1  0087               	movwf	7
  4964  01A2  1201               	bcf	1,4
  4965                           
  4966                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  4967  01A3  086C               	movf	_Sw,w
  4968  01A4  0086               	movwf	6
  4969  01A5  3001               	movlw	1	; select bank2/3
  4970  01A6  0087               	movwf	7
  4971  01A7  1281               	bcf	1,5
  4972                           
  4973                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  4974  01A8  086C               	movf	_Sw,w
  4975  01A9  3E05               	addlw	5
  4976  01AA  0086               	movwf	6
  4977  01AB  3001               	movlw	1	; select bank2/3
  4978  01AC  0087               	movwf	7
  4979  01AD  3000               	movlw	0
  4980  01AE  3FC0               	movwi [0]fsr1
  4981  01AF  3FC1               	movwi [1]fsr1
  4982                           
  4983                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  4984  01B0  086C               	movf	_Sw,w
  4985  01B1  3E07               	addlw	7
  4986  01B2  0086               	movwf	6
  4987  01B3  3001               	movlw	1	; select bank2/3
  4988  01B4  0087               	movwf	7
  4989  01B5  3000               	movlw	0
  4990  01B6  3FC0               	movwi [0]fsr1
  4991  01B7  3FC1               	movwi [1]fsr1
  4992                           
  4993                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  4994  01B8  082F               	movf	setSw_Main@sw,w
  4995  01B9  3194  2432  3180   	fcall	_setDimmerLights_SwOff
  4996                           
  4997                           ;Switch_B1.c: 220: setRF_Learn(0);
  4998  01BC  3000               	movlw	0
  4999  01BD  319E  2687         	fcall	_setRF_Learn
  5000                           
  5001                           ;Switch_B1.c: 222: }
  5002                           ;Switch_B1.c: 223: }
  5003                           ;Switch_B1.c: 224: }
  5004                           ;Switch_B1.c: 225: } else {
  5005  01BF  0008               	return
  5006  01C0                     l2875:	
  5007                           
  5008                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5009  01C0  0021               	movlb	1	; select bank1
  5010  01C1  1C3F               	btfss	_myMain^(0+128),0
  5011  01C2  0008               	return
  5012                           
  5013                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5014  01C3  0020               	movlb	0	; select bank0
  5015  01C4  086C               	movf	_Sw,w
  5016  01C5  0086               	movwf	6
  5017  01C6  3001               	movlw	1	; select bank2/3
  5018  01C7  0087               	movwf	7
  5019  01C8  1401               	bsf	1,0
  5020  01C9  0008               	return
  5021  01CA                     __end_of_setSw_Main:	
  5022                           
  5023                           	psect	text7
  5024  1E87                     __ptext7:	
  5025 ;; *************** function _setRF_Learn *****************
  5026 ;; Defined at:
  5027 ;;		line 33 in file "../src/RF_Control_B1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  command         1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  command         1    3[COMMON] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    3
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_setSw_Main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _setRF_Learn
  5057  1E87                     _setRF_Learn:	
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _setRF_Learn: [wreg+status,2+status,0]
  5061                           ;setRF_Learn@command stored from wreg
  5062  1E87  00F3               	movwf	setRF_Learn@command
  5063                           
  5064                           ;RF_Control_B1.c: 34: RF1.Learn = command == 1 ? 1 : 0;
  5065  1E88  0873               	movf	setRF_Learn@command,w
  5066  1E89  3A01               	xorlw	1
  5067  1E8A  3000               	movlw	0
  5068  1E8B  1903               	skipnz
  5069  1E8C  3001               	movlw	1
  5070  1E8D  00F2               	movwf	??_setRF_Learn
  5071  1E8E  0EF2               	swapf	??_setRF_Learn,f
  5072  1E8F  0DF2               	rlf	??_setRF_Learn,f
  5073  1E90  0DF2               	rlf	??_setRF_Learn,f
  5074  1E91  0021               	movlb	1	; select bank1
  5075  1E92  0830               	movf	_RF1^(0+128),w
  5076  1E93  0672               	xorwf	??_setRF_Learn,w
  5077  1E94  39BF               	andlw	-65
  5078  1E95  0672               	xorwf	??_setRF_Learn,w
  5079  1E96  00B0               	movwf	_RF1^(0+128)
  5080  1E97  0008               	return
  5081  1E98                     __end_of_setRF_Learn:	
  5082                           
  5083                           	psect	text8
  5084  12E9                     __ptext8:	
  5085 ;; *************** function _setDimmerLights_DimmingOn *****************
  5086 ;; Defined at:
  5087 ;;		line 846 in file "../src/Dimmer_B1.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  sw              1    wreg     unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  sw              1    4[COMMON] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    4
  5108 ;; This function calls:
  5109 ;;		_DimmerLights_SelectPointer
  5110 ;; This function is called by:
  5111 ;;		_setSw_Main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _setDimmerLights_DimmingOn
  5117  12E9                     _setDimmerLights_DimmingOn:	
  5118                           
  5119                           ;incstack = 0
  5120                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5121                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5122  12E9  00F4               	movwf	setDimmerLights_DimmingOn@sw
  5123                           
  5124                           ;Dimmer_B1.c: 852: DimmerLights_SelectPointer(sw);
  5125  12EA  0874               	movf	setDimmerLights_DimmingOn@sw,w
  5126  12EB  3191  2193  3192   	fcall	_DimmerLights_SelectPointer
  5127                           
  5128                           ;Dimmer_B1.c: 853: if (DimmerLights->Trigger == 0) {
  5129  12EE  0020               	movlb	0	; select bank0
  5130  12EF  086A               	movf	_DimmerLights,w
  5131  12F0  0086               	movwf	6
  5132  12F1  3001               	movlw	1	; select bank2/3
  5133  12F2  0087               	movwf	7
  5134  12F3  1881               	btfsc	1,1
  5135  12F4  0008               	return
  5136                           
  5137                           ;Dimmer_B1.c: 854: if (DimmerLights->SwFlag == 1) {
  5138  12F5  086A               	movf	_DimmerLights,w
  5139  12F6  0086               	movwf	6
  5140  12F7  3001               	movlw	1	; select bank2/3
  5141  12F8  0087               	movwf	7
  5142  12F9  1C01               	btfss	1,0
  5143  12FA  0008               	return
  5144                           
  5145                           ;Dimmer_B1.c: 855: DimmerLights->Status = 1;
  5146  12FB  0A6A               	incf	_DimmerLights,w
  5147  12FC  0086               	movwf	6
  5148  12FD  3001               	movlw	1	; select bank2/3
  5149  12FE  0087               	movwf	7
  5150  12FF  1401               	bsf	1,0
  5151                           
  5152                           ;Dimmer_B1.c: 857: DimmerLights->DimmingSwFlag = 1;
  5153  1300  086A               	movf	_DimmerLights,w
  5154  1301  0086               	movwf	6
  5155  1302  3001               	movlw	1	; select bank2/3
  5156  1303  0087               	movwf	7
  5157  1304  1581               	bsf	1,3
  5158                           
  5159                           ;Dimmer_B1.c: 858: DimmerLights->DimmingTrigger = 1;
  5160  1305  086A               	movf	_DimmerLights,w
  5161  1306  0086               	movwf	6
  5162  1307  3001               	movlw	1	; select bank2/3
  5163  1308  0087               	movwf	7
  5164  1309  1601               	bsf	1,4
  5165                           
  5166                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwitch = 1;
  5167  130A  086A               	movf	_DimmerLights,w
  5168  130B  0086               	movwf	6
  5169  130C  3001               	movlw	1	; select bank2/3
  5170  130D  0087               	movwf	7
  5171  130E  1681               	bsf	1,5
  5172  130F  0008               	return
  5173  1310                     __end_of_setDimmerLights_DimmingOn:	
  5174                           
  5175                           	psect	text9
  5176  11D5                     __ptext9:	
  5177 ;; *************** function _getSw_KeyStatus *****************
  5178 ;; Defined at:
  5179 ;;		line 238 in file "../src/Switch_B1.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  sw              1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  sw              1    3[COMMON] unsigned char 
  5184 ;;  status          1    2[COMMON] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      unsigned char 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;Total ram usage:        2 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    3
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_setSw_Main
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _getSw_KeyStatus
  5210  11D5                     _getSw_KeyStatus:	
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5214                           ;getSw_KeyStatus@sw stored from wreg
  5215  11D5  00F3               	movwf	getSw_KeyStatus@sw
  5216                           
  5217                           ;Switch_B1.c: 239: char status = 0;
  5218  11D6  01F2               	clrf	getSw_KeyStatus@status
  5219                           
  5220                           ;Switch_B1.c: 241: if (sw == 1) {
  5221  11D7  0873               	movf	getSw_KeyStatus@sw,w
  5222  11D8  3A01               	xorlw	1
  5223  11D9  1D03               	skipz
  5224  11DA  29E1               	goto	l7769
  5225                           
  5226                           ;Switch_B1.c: 242: status = (RA0 == 1) ? 1 : 0;
  5227  11DB  3000               	movlw	0
  5228  11DC  0020               	movlb	0	; select bank0
  5229  11DD  180C               	btfsc	12,0	;volatile
  5230  11DE  3001               	movlw	1
  5231  11DF  00F2               	movwf	getSw_KeyStatus@status
  5232                           
  5233                           ;Switch_B1.c: 243: } else if (sw == 2) {
  5234  11E0  29F4               	goto	l7777
  5235  11E1                     l7769:	
  5236  11E1  0873               	movf	getSw_KeyStatus@sw,w
  5237  11E2  3A02               	xorlw	2
  5238  11E3  1D03               	skipz
  5239  11E4  29EB               	goto	l7773
  5240                           
  5241                           ;Switch_B1.c: 244: status = (RA6 == 1) ? 1 : 0;
  5242  11E5  3000               	movlw	0
  5243  11E6  0020               	movlb	0	; select bank0
  5244  11E7  1B0C               	btfsc	12,6	;volatile
  5245  11E8  3001               	movlw	1
  5246  11E9  00F2               	movwf	getSw_KeyStatus@status
  5247                           
  5248                           ;Switch_B1.c: 245: } else if (sw == 3) {
  5249  11EA  29F4               	goto	l7777
  5250  11EB                     l7773:	
  5251  11EB  0873               	movf	getSw_KeyStatus@sw,w
  5252  11EC  3A03               	xorlw	3
  5253  11ED  1D03               	skipz
  5254  11EE  29F4               	goto	l7777
  5255                           
  5256                           ;Switch_B1.c: 246: status = (RA4 == 1) ? 1 : 0;
  5257  11EF  3000               	movlw	0
  5258  11F0  0020               	movlb	0	; select bank0
  5259  11F1  1A0C               	btfsc	12,4	;volatile
  5260  11F2  3001               	movlw	1
  5261  11F3  00F2               	movwf	getSw_KeyStatus@status
  5262  11F4                     l7777:	
  5263                           
  5264                           ;Switch_B1.c: 247: }
  5265                           ;Switch_B1.c: 283: return status;
  5266  11F4  0872               	movf	getSw_KeyStatus@status,w
  5267  11F5  0008               	return
  5268  11F6                     __end_of_getSw_KeyStatus:	
  5269                           
  5270                           	psect	text10
  5271  1154                     __ptext10:	
  5272 ;; *************** function _SwPointSelect *****************
  5273 ;; Defined at:
  5274 ;;		line 25 in file "../src/Switch_B1.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  sw              1    wreg     unsigned char 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  sw              1    3[COMMON] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;		None               void
  5281 ;; Registers used:
  5282 ;;		wreg
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;Total ram usage:        2 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    3
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_setSw_Main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _SwPointSelect
  5304  1154                     _SwPointSelect:	
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in _SwPointSelect: [wreg]
  5308                           ;SwPointSelect@sw stored from wreg
  5309  1154  00F3               	movwf	SwPointSelect@sw
  5310                           
  5311                           ;Switch_B1.c: 28: if (sw == 1) {
  5312  1155  0873               	movf	SwPointSelect@sw,w
  5313  1156  3A01               	xorlw	1
  5314  1157  1D03               	skipz
  5315  1158  295F               	goto	l7755
  5316                           
  5317                           ;Switch_B1.c: 29: Sw = &Sw1;
  5318  1159  30BE               	movlw	_Sw1& (0+255)
  5319  115A  00F2               	movwf	??_SwPointSelect
  5320  115B  0872               	movf	??_SwPointSelect,w
  5321  115C  0020               	movlb	0	; select bank0
  5322  115D  00EC               	movwf	_Sw
  5323                           
  5324                           ;Switch_B1.c: 30: }
  5325  115E  0008               	return
  5326  115F                     l7755:	
  5327                           
  5328                           ;Switch_B1.c: 33: else if (sw == 2) {
  5329  115F  0873               	movf	SwPointSelect@sw,w
  5330  1160  3A02               	xorlw	2
  5331  1161  1D03               	skipz
  5332  1162  2969               	goto	l7759
  5333                           
  5334                           ;Switch_B1.c: 34: Sw = &Sw2;
  5335  1163  30C7               	movlw	_Sw2& (0+255)
  5336  1164  00F2               	movwf	??_SwPointSelect
  5337  1165  0872               	movf	??_SwPointSelect,w
  5338  1166  0020               	movlb	0	; select bank0
  5339  1167  00EC               	movwf	_Sw
  5340                           
  5341                           ;Switch_B1.c: 35: }
  5342  1168  0008               	return
  5343  1169                     l7759:	
  5344                           
  5345                           ;Switch_B1.c: 38: else if (sw == 3) {
  5346  1169  0873               	movf	SwPointSelect@sw,w
  5347  116A  3A03               	xorlw	3
  5348  116B  1D03               	skipz
  5349  116C  0008               	return
  5350                           
  5351                           ;Switch_B1.c: 39: Sw = &Sw3;
  5352  116D  30D0               	movlw	_Sw3& (0+255)
  5353  116E  00F2               	movwf	??_SwPointSelect
  5354  116F  0872               	movf	??_SwPointSelect,w
  5355  1170  0020               	movlb	0	; select bank0
  5356  1171  00EC               	movwf	_Sw
  5357  1172  0008               	return
  5358  1173                     __end_of_SwPointSelect:	
  5359                           
  5360                           	psect	text11
  5361  1F26                     __ptext11:	
  5362 ;; *************** function _TouchPower *****************
  5363 ;; Defined at:
  5364 ;;		line 10 in file "../src/Switch_B1.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        0 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    4
  5385 ;; This function calls:
  5386 ;;		_Timeout_Counter
  5387 ;;		_set_TimeoutCleared
  5388 ;; This function is called by:
  5389 ;;		_Switch_Main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           
  5394                           ;psect for function _TouchPower
  5395  1F26                     _TouchPower:	
  5396                           
  5397                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5401  1F26  0021               	movlb	1	; select bank1
  5402  1F27  1C3F               	btfss	_myMain^(0+128),0
  5403  1F28  0008               	return
  5404                           
  5405                           ;Switch_B1.c: 12: if (RC5 == 0) {
  5406  1F29  0020               	movlb	0	; select bank0
  5407  1F2A  1A8E               	btfsc	14,5	;volatile
  5408  1F2B  0008               	return
  5409  1F2C  2F32               	goto	l8333
  5410  1F2D                     l2851:	
  5411                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  5412                           
  5413                           
  5414                           ;Switch_B1.c: 14: RC5 = 1;
  5415  1F2D  0020               	movlb	0	; select bank0
  5416  1F2E  168E               	bsf	14,5	;volatile
  5417                           
  5418                           ;Switch_B1.c: 15: Timeout_Counter();
  5419  1F2F  319F  2711  319F   	fcall	_Timeout_Counter
  5420  1F32                     l8333:	
  5421  1F32  0020               	movlb	0	; select bank0
  5422  1F33  1A8E               	btfsc	14,5	;volatile
  5423  1F34  2F38               	goto	l8337
  5424  1F35  0021               	movlb	1	; select bank1
  5425  1F36  1D49               	btfss	(_myMain^(0+128)+10),2
  5426  1F37  2F2D               	goto	l2851
  5427  1F38                     l8337:	
  5428                           
  5429                           ;Switch_B1.c: 16: }
  5430                           ;Switch_B1.c: 17: set_TimeoutCleared();
  5431  1F38  319C  24C1         	fcall	_set_TimeoutCleared
  5432  1F3A  0008               	return
  5433  1F3B                     __end_of_TouchPower:	
  5434                           
  5435                           	psect	text12
  5436  1CC1                     __ptext12:	
  5437 ;; *************** function _set_TimeoutCleared *****************
  5438 ;; Defined at:
  5439 ;;		line 287 in file "../src/Main_B1.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		status,2
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    3
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_TouchPower
  5464 ;;		_getAD
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function _set_TimeoutCleared
  5470  1CC1                     _set_TimeoutCleared:	
  5471                           
  5472                           ;Main_B1.c: 288: myMain.Timeout = 0;
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in _set_TimeoutCleared: [status,2]
  5476  1CC1  0021               	movlb	1	; select bank1
  5477  1CC2  1149               	bcf	(_myMain^(0+128)+10),2
  5478                           
  5479                           ;Main_B1.c: 289: myMain.Timeout_Counter = 0;
  5480  1CC3  01CA               	clrf	(_myMain^(0+128)+11)
  5481  1CC4  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5482  1CC5  0008               	return
  5483  1CC6                     __end_of_set_TimeoutCleared:	
  5484                           
  5485                           	psect	text13
  5486  1F11                     __ptext13:	
  5487 ;; *************** function _Timeout_Counter *****************
  5488 ;; Defined at:
  5489 ;;		line 278 in file "../src/Main_B1.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;Total ram usage:        0 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    3
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_TouchPower
  5514 ;;		_getAD
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function _Timeout_Counter
  5520  1F11                     _Timeout_Counter:	
  5521                           
  5522                           ;Main_B1.c: 279: myMain.Timeout_Counter++;
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5526  1F11  3001               	movlw	1
  5527  1F12  0021               	movlb	1	; select bank1
  5528  1F13  07CA               	addwf	(_myMain^(0+128)+11),f
  5529  1F14  3000               	movlw	0
  5530  1F15  3DCB               	addwfc	((_myMain+1)^(0+128)+11),f
  5531                           
  5532                           ;Main_B1.c: 280: if (myMain.Timeout_Counter == 25000) {
  5533  1F16  300B               	movlw	11
  5534  1F17  3EBF               	addlw	_myMain& (0+255)
  5535  1F18  0086               	movwf	6
  5536  1F19  0187               	clrf	7
  5537  1F1A  3F40               	moviw [0]fsr1
  5538  1F1B  3AA8               	xorlw	168
  5539  1F1C  1D03               	skipz
  5540  1F1D  2F20               	goto	u7255
  5541  1F1E  3F41               	moviw [1]fsr1
  5542  1F1F  3A61               	xorlw	97
  5543  1F20                     u7255:	
  5544  1F20  1D03               	skipz
  5545  1F21  0008               	return
  5546                           
  5547                           ;Main_B1.c: 281: myMain.Timeout_Counter = 0;
  5548  1F22  01CA               	clrf	(_myMain^(0+128)+11)
  5549  1F23  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5550                           
  5551                           ;Main_B1.c: 282: myMain.Timeout = 1;
  5552  1F24  1549               	bsf	(_myMain^(0+128)+10),2
  5553  1F25  0008               	return
  5554  1F26                     __end_of_Timeout_Counter:	
  5555                           
  5556                           	psect	text14
  5557  1068                     __ptext14:	
  5558 ;; *************** function _Switch_Initialization *****************
  5559 ;; Defined at:
  5560 ;;		line 46 in file "../src/Switch_B1.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;		None               void
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    6
  5581 ;; This function calls:
  5582 ;;		_setSw_Initialization
  5583 ;; This function is called by:
  5584 ;;		_main
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _Switch_Initialization
  5590  1068                     _Switch_Initialization:	
  5591                           
  5592                           ;Switch_B1.c: 52: setSw_Initialization(1);
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5596  1068  3001               	movlw	1
  5597  1069  319C  24E0  3190   	fcall	_setSw_Initialization
  5598                           
  5599                           ;Switch_B1.c: 56: setSw_Initialization(2);
  5600  106C  3002               	movlw	2
  5601  106D  319C  24E0  3190   	fcall	_setSw_Initialization
  5602                           
  5603                           ;Switch_B1.c: 60: setSw_Initialization(3);
  5604  1070  3003               	movlw	3
  5605  1071  319C  24E0         	fcall	_setSw_Initialization
  5606  1073  0008               	return
  5607  1074                     __end_of_Switch_Initialization:	
  5608                           
  5609                           	psect	text15
  5610  1CE0                     __ptext15:	
  5611 ;; *************** function _setSw_Initialization *****************
  5612 ;; Defined at:
  5613 ;;		line 66 in file "../src/Switch_B1.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  sw              1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  sw              1    5[COMMON] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;		None               void
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    5
  5634 ;; This function calls:
  5635 ;;		_setLED
  5636 ;; This function is called by:
  5637 ;;		_Switch_Initialization
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function _setSw_Initialization
  5643  1CE0                     _setSw_Initialization:	
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5647                           ;setSw_Initialization@sw stored from wreg
  5648  1CE0  00F5               	movwf	setSw_Initialization@sw
  5649                           
  5650                           ;Switch_B1.c: 68: setLED(sw, 1);
  5651  1CE1  01F3               	clrf	setLED@command
  5652  1CE2  0AF3               	incf	setLED@command,f
  5653  1CE3  0875               	movf	setSw_Initialization@sw,w
  5654  1CE4  318C  2417         	fcall	_setLED
  5655  1CE6  0008               	return
  5656  1CE7                     __end_of_setSw_Initialization:	
  5657                           
  5658                           	psect	text16
  5659  1CA5                     __ptext16:	
  5660 ;; *************** function _RF_Main *****************
  5661 ;; Defined at:
  5662 ;;		line 26 in file "../src/RF_Control_B1.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;		None               void
  5669 ;; Registers used:
  5670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:   10
  5683 ;; This function calls:
  5684 ;;		_setRF_Main
  5685 ;; This function is called by:
  5686 ;;		_main
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _RF_Main
  5692  1CA5                     _RF_Main:	
  5693                           
  5694                           ;RF_Control_B1.c: 28: setRF_Main();
  5695                           
  5696                           ;incstack = 0
  5697                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5698  1CA5  3185  2536         	fcall	_setRF_Main
  5699  1CA7  0008               	return
  5700  1CA8                     __end_of_RF_Main:	
  5701                           
  5702                           	psect	text17
  5703  0536                     __ptext17:	
  5704 ;; *************** function _setRF_Main *****************
  5705 ;; Defined at:
  5706 ;;		line 53 in file "../src/RF_Control_B1.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  error           1   71[BANK0 ] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;		None               void
  5713 ;; Registers used:
  5714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    9
  5727 ;; This function calls:
  5728 ;;		_CC2500_PowerOnInitial
  5729 ;;		_CC2500_RxData
  5730 ;;		_CC2500_TxData
  5731 ;;		_CC2500_WriteCommand
  5732 ;;		_RF_RxDisable
  5733 ;;		___lwdiv
  5734 ;;		_getBuz_GO
  5735 ;;		_getRF_KeyStatus
  5736 ;;		_getRxData
  5737 ;;		_setData
  5738 ;; This function is called by:
  5739 ;;		_RF_Main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _setRF_Main
  5745  0536                     _setRF_Main:	
  5746                           
  5747                           ;RF_Control_B1.c: 54: char error = 0;
  5748                           
  5749                           ;incstack = 0
  5750                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5751  0536  0020               	movlb	0	; select bank0
  5752  0537  01E7               	clrf	setRF_Main@error
  5753                           
  5754                           ;RF_Control_B1.c: 55: if (RF1.Enable == 1) {
  5755  0538  0021               	movlb	1	; select bank1
  5756  0539  1C30               	btfss	_RF1^(0+128),0
  5757  053A  2DF1               	goto	l2410
  5758                           
  5759                           ;RF_Control_B1.c: 56: if (getBuz_GO() == 0) {
  5760  053B  319E  2646  3185   	fcall	_getBuz_GO
  5761  053E  0873               	movf	?_getBuz_GO+1,w
  5762  053F  0472               	iorwf	?_getBuz_GO,w
  5763  0540  1D03               	skipz
  5764  0541  2DD6               	goto	l11317
  5765                           
  5766                           ;RF_Control_B1.c: 59: RF1.Key = getRF_KeyStatus() == 1 ? 1 : 0;
  5767  0542  319D  25C9  3185   	fcall	_getRF_KeyStatus
  5768  0545  3A01               	xorlw	1
  5769  0546  3000               	movlw	0
  5770  0547  1903               	skipnz
  5771  0548  3001               	movlw	1
  5772  0549  0020               	movlb	0	; select bank0
  5773  054A  00E6               	movwf	??_setRF_Main
  5774  054B  0CE6               	rrf	??_setRF_Main,f
  5775  054C  0CE6               	rrf	??_setRF_Main,f
  5776  054D  0021               	movlb	1	; select bank1
  5777  054E  0830               	movf	_RF1^(0+128),w
  5778  054F  0020               	movlb	0	; select bank0
  5779  0550  0666               	xorwf	??_setRF_Main,w
  5780  0551  397F               	andlw	-129
  5781  0552  0666               	xorwf	??_setRF_Main,w
  5782  0553  0021               	movlb	1	; select bank1
  5783  0554  00B0               	movwf	_RF1^(0+128)
  5784                           
  5785                           ;RF_Control_B1.c: 64: if (RF1.Key == 0 || RF1.Learn == 1) {
  5786  0555  1FB0               	btfss	_RF1^(0+128),7
  5787  0556  2D59               	goto	l2414
  5788  0557  1F30               	btfss	_RF1^(0+128),6
  5789  0558  2DD6               	goto	l11317
  5790  0559                     l2414:	
  5791                           
  5792                           ;RF_Control_B1.c: 66: if (RF1.TransceiveGO == 1) {
  5793  0559  1D30               	btfss	_RF1^(0+128),2
  5794  055A  2D9D               	goto	l2415
  5795                           
  5796                           ;RF_Control_B1.c: 67: if (RF1.Learn == 0) {
  5797  055B  1B30               	btfsc	_RF1^(0+128),6
  5798  055C  2D98               	goto	l11289
  5799                           
  5800                           ;RF_Control_B1.c: 68: RF1.Count++;
  5801  055D  3001               	movlw	1
  5802  055E  07B3               	addwf	(_RF1^(0+128)+3),f
  5803  055F  3000               	movlw	0
  5804  0560  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5805                           
  5806                           ;RF_Control_B1.c: 69: if (RF1.Count >= (RF1.RunTime / 20)) {
  5807  0561  3014               	movlw	20
  5808  0562  00F2               	movwf	___lwdiv@divisor
  5809  0563  3000               	movlw	0
  5810  0564  00F3               	movwf	___lwdiv@divisor+1
  5811  0565  0839               	movf	((_RF1+1)^(0+128)+8),w
  5812  0566  01F5               	clrf	___lwdiv@dividend+1
  5813  0567  07F5               	addwf	___lwdiv@dividend+1,f
  5814  0568  0838               	movf	(_RF1^(0+128)+8),w
  5815  0569  01F4               	clrf	___lwdiv@dividend
  5816  056A  07F4               	addwf	___lwdiv@dividend,f
  5817  056B  3193  23FB  3185   	fcall	___lwdiv
  5818  056E  0873               	movf	?___lwdiv+1,w
  5819  056F  0021               	movlb	1	; select bank1
  5820  0570  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5821  0571  1D03               	skipz
  5822  0572  2D75               	goto	u13465
  5823  0573  0872               	movf	?___lwdiv,w
  5824  0574  0233               	subwf	(_RF1^(0+128)+3),w
  5825  0575                     u13465:	
  5826  0575  1C03               	skipc
  5827  0576  2DD6               	goto	l11317
  5828                           
  5829                           ;RF_Control_B1.c: 70: RF1.Count = (RF1.RunTime / 20);
  5830  0577  3014               	movlw	20
  5831  0578  00F2               	movwf	___lwdiv@divisor
  5832  0579  3000               	movlw	0
  5833  057A  00F3               	movwf	___lwdiv@divisor+1
  5834  057B  0839               	movf	((_RF1+1)^(0+128)+8),w
  5835  057C  01F5               	clrf	___lwdiv@dividend+1
  5836  057D  07F5               	addwf	___lwdiv@dividend+1,f
  5837  057E  0838               	movf	(_RF1^(0+128)+8),w
  5838  057F  01F4               	clrf	___lwdiv@dividend
  5839  0580  07F4               	addwf	___lwdiv@dividend,f
  5840  0581  3193  23FB  3185   	fcall	___lwdiv
  5841  0584  0873               	movf	?___lwdiv+1,w
  5842  0585  0021               	movlb	1	; select bank1
  5843  0586  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5844  0587  07B4               	addwf	((_RF1+1)^(0+128)+3),f
  5845  0588  0872               	movf	?___lwdiv,w
  5846  0589  01B3               	clrf	(_RF1^(0+128)+3)
  5847  058A  07B3               	addwf	(_RF1^(0+128)+3),f
  5848                           
  5849                           ;RF_Control_B1.c: 72: RF1.TransceiveGO = 0;
  5850  058B  1130               	bcf	_RF1^(0+128),2
  5851                           
  5852                           ;RF_Control_B1.c: 73: RF1.CorrectionCounter = 0;
  5853  058C  01BB               	clrf	(_RF1^(0+128)+11)
  5854  058D  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5855                           
  5856                           ;RF_Control_B1.c: 74: RF_RxDisable();
  5857  058E  319C  24E7  3185   	fcall	_RF_RxDisable
  5858                           
  5859                           ;RF_Control_B1.c: 75: setData();
  5860  0591  3188  2000  3185   	fcall	_setData
  5861                           
  5862                           ;RF_Control_B1.c: 76: CC2500_TxData();
  5863  0594  318B  2349  3185   	fcall	_CC2500_TxData
  5864                           
  5865                           ;RF_Control_B1.c: 78: }
  5866                           ;RF_Control_B1.c: 79: } else {
  5867  0597  2DD6               	goto	l11317
  5868  0598                     l11289:	
  5869                           
  5870                           ;RF_Control_B1.c: 80: RF1.Count = 0;
  5871  0598  0021               	movlb	1	; select bank1
  5872  0599  01B3               	clrf	(_RF1^(0+128)+3)
  5873  059A  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5874                           
  5875                           ;RF_Control_B1.c: 81: RF1.TransceiveGO = 0;
  5876  059B  1130               	bcf	_RF1^(0+128),2
  5877                           
  5878                           ;RF_Control_B1.c: 82: }
  5879                           ;RF_Control_B1.c: 83: } else {
  5880  059C  2DD6               	goto	l11317
  5881  059D                     l2415:	
  5882                           
  5883                           ;RF_Control_B1.c: 84: if (RF1.RxStatus == 1) {
  5884  059D  1DB0               	btfss	_RF1^(0+128),3
  5885  059E  2DAC               	goto	l11303
  5886                           
  5887                           ;RF_Control_B1.c: 86: CC2500_RxData();
  5888  059F  3189  21B5  3185   	fcall	_CC2500_RxData
  5889                           
  5890                           ;RF_Control_B1.c: 88: if (RF1.ReceiveGO == 1) {
  5891  05A2  0021               	movlb	1	; select bank1
  5892  05A3  1CB0               	btfss	_RF1^(0+128),1
  5893  05A4  2DD6               	goto	l11317
  5894                           
  5895                           ;RF_Control_B1.c: 89: RF1.ReceiveGO = 0;
  5896  05A5  10B0               	bcf	_RF1^(0+128),1
  5897                           
  5898                           ;RF_Control_B1.c: 90: RF1.CorrectionCounter = 0;
  5899  05A6  01BB               	clrf	(_RF1^(0+128)+11)
  5900  05A7  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5901                           
  5902                           ;RF_Control_B1.c: 98: getRxData();
  5903  05A8  318A  227E  3185   	fcall	_getRxData
  5904                           
  5905                           ;RF_Control_B1.c: 101: }
  5906                           ;RF_Control_B1.c: 102: } else {
  5907  05AB  2DD6               	goto	l11317
  5908  05AC                     l11303:	
  5909                           
  5910                           ;RF_Control_B1.c: 103: RF1.Count++;
  5911  05AC  3001               	movlw	1
  5912  05AD  0021               	movlb	1	; select bank1
  5913  05AE  07B3               	addwf	(_RF1^(0+128)+3),f
  5914  05AF  3000               	movlw	0
  5915  05B0  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5916                           
  5917                           ;RF_Control_B1.c: 104: if (RF1.Count >= (RF1.RunTime / 20)) {
  5918  05B1  3014               	movlw	20
  5919  05B2  00F2               	movwf	___lwdiv@divisor
  5920  05B3  3000               	movlw	0
  5921  05B4  00F3               	movwf	___lwdiv@divisor+1
  5922  05B5  0839               	movf	((_RF1+1)^(0+128)+8),w
  5923  05B6  01F5               	clrf	___lwdiv@dividend+1
  5924  05B7  07F5               	addwf	___lwdiv@dividend+1,f
  5925  05B8  0838               	movf	(_RF1^(0+128)+8),w
  5926  05B9  01F4               	clrf	___lwdiv@dividend
  5927  05BA  07F4               	addwf	___lwdiv@dividend,f
  5928  05BB  3193  23FB  3185   	fcall	___lwdiv
  5929  05BE  0873               	movf	?___lwdiv+1,w
  5930  05BF  0021               	movlb	1	; select bank1
  5931  05C0  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5932  05C1  1D03               	skipz
  5933  05C2  2DC5               	goto	u13495
  5934  05C3  0872               	movf	?___lwdiv,w
  5935  05C4  0233               	subwf	(_RF1^(0+128)+3),w
  5936  05C5                     u13495:	
  5937  05C5  1C03               	skipc
  5938  05C6  2DD6               	goto	l11317
  5939                           
  5940                           ;RF_Control_B1.c: 105: RF1.Count = 0;
  5941  05C7  01B3               	clrf	(_RF1^(0+128)+3)
  5942  05C8  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5943                           
  5944                           ;RF_Control_B1.c: 107: RF1.RxStatus = 1;
  5945  05C9  15B0               	bsf	_RF1^(0+128),3
  5946                           
  5947                           ;RF_Control_B1.c: 108: CC2500_WriteCommand(0x36);
  5948  05CA  3036               	movlw	54
  5949  05CB  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5950                           
  5951                           ;RF_Control_B1.c: 109: CC2500_WriteCommand(0x3A);
  5952  05CE  303A               	movlw	58
  5953  05CF  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5954                           
  5955                           ;RF_Control_B1.c: 110: CC2500_WriteCommand(0x34);
  5956  05D2  3034               	movlw	52
  5957  05D3  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5958  05D6                     l11317:	
  5959                           
  5960                           ;RF_Control_B1.c: 112: }
  5961                           ;RF_Control_B1.c: 113: }
  5962                           ;RF_Control_B1.c: 114: }
  5963                           ;RF_Control_B1.c: 115: }
  5964                           ;RF_Control_B1.c: 116: }
  5965                           ;RF_Control_B1.c: 118: RF1.CorrectionCounter++;
  5966  05D6  3001               	movlw	1
  5967  05D7  0021               	movlb	1	; select bank1
  5968  05D8  07BB               	addwf	(_RF1^(0+128)+11),f
  5969  05D9  3000               	movlw	0
  5970  05DA  3DBC               	addwfc	((_RF1+1)^(0+128)+11),f
  5971                           
  5972                           ;RF_Control_B1.c: 119: if (RF1.CorrectionCounter > (60000 / 20)) {
  5973  05DB  300B               	movlw	11
  5974  05DC  023C               	subwf	((_RF1+1)^(0+128)+11),w
  5975  05DD  30B9               	movlw	185
  5976  05DE  1903               	skipnz
  5977  05DF  023B               	subwf	(_RF1^(0+128)+11),w
  5978  05E0  1C03               	skipc
  5979  05E1  2DEA               	goto	l11329
  5980                           
  5981                           ;RF_Control_B1.c: 120: RF1.CorrectionCounter = 0;
  5982  05E2  01BB               	clrf	(_RF1^(0+128)+11)
  5983  05E3  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5984                           
  5985                           ;RF_Control_B1.c: 122: RF1.RxStatus = 0;
  5986  05E4  11B0               	bcf	_RF1^(0+128),3
  5987                           
  5988                           ;RF_Control_B1.c: 123: RF1.ReceiveGO = 0;
  5989  05E5  10B0               	bcf	_RF1^(0+128),1
  5990                           
  5991                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x36);
  5992  05E6  3036               	movlw	54
  5993  05E7  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5994  05EA                     l11329:	
  5995                           
  5996                           ;RF_Control_B1.c: 126: }
  5997                           ;RF_Control_B1.c: 128: if (RF1.Timeout == 1) {
  5998  05EA  0021               	movlb	1	; select bank1
  5999  05EB  1F31               	btfss	(_RF1^(0+128)+1),6
  6000  05EC  0008               	return
  6001                           
  6002                           ;RF_Control_B1.c: 129: RF1.Timeout = 0;
  6003  05ED  1331               	bcf	(_RF1^(0+128)+1),6
  6004                           
  6005                           ;RF_Control_B1.c: 130: CC2500_PowerOnInitial();
  6006  05EE  319E  26FC         	fcall	_CC2500_PowerOnInitial
  6007                           
  6008                           ;RF_Control_B1.c: 131: }
  6009                           ;RF_Control_B1.c: 133: } else {
  6010  05F0  0008               	return
  6011  05F1                     l2410:	
  6012                           
  6013                           ;RF_Control_B1.c: 134: if (myMain.PowerON == 1) {
  6014  05F1  1C3F               	btfss	_myMain^(0+128),0
  6015  05F2  0008               	return
  6016                           
  6017                           ;RF_Control_B1.c: 135: RF1.Enable = 1;
  6018  05F3  1430               	bsf	_RF1^(0+128),0
  6019  05F4  0008               	return
  6020  05F5                     __end_of_setRF_Main:	
  6021                           
  6022                           	psect	text18
  6023  0800                     __ptext18:	
  6024 ;; *************** function _setData *****************
  6025 ;; Defined at:
  6026 ;;		line 188 in file "../src/RF_Control_B1.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;		None
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;		None               void
  6033 ;; Registers used:
  6034 ;;		wreg, fsr1l, fsr1h, status,2
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;Total ram usage:        1 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    3
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_setRF_Main
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function _setData
  6056  0800                     _setData:	
  6057                           
  6058                           ;RF_Control_B1.c: 212: RF_Data[0] = 0x63;
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _setData: [wreg+fsr1l+fsr1h+status,2]
  6062  0800  3063               	movlw	99
  6063  0801  00F2               	movwf	??_setData
  6064  0802  0872               	movf	??_setData,w
  6065  0803  0022               	movlb	2	; select bank2
  6066  0804  00A0               	movwf	_RF_Data^(0+256)
  6067                           
  6068                           ;RF_Control_B1.c: 213: RF_Data[1] = 0x02;
  6069  0805  3002               	movlw	2
  6070  0806  00F2               	movwf	??_setData
  6071  0807  0872               	movf	??_setData,w
  6072  0808  00A1               	movwf	(_RF_Data^(0+256)+1)
  6073                           
  6074                           ;RF_Control_B1.c: 215: RF_Data[2] = 0;
  6075  0809  01A2               	clrf	(_RF_Data^(0+256)+2)
  6076                           
  6077                           ;RF_Control_B1.c: 216: RF_Data[3] = 0;
  6078  080A  01A3               	clrf	(_RF_Data^(0+256)+3)
  6079                           
  6080                           ;RF_Control_B1.c: 217: RF_Data[4] = 0;
  6081  080B  01A4               	clrf	(_RF_Data^(0+256)+4)
  6082                           
  6083                           ;RF_Control_B1.c: 218: RF_Data[5] = 0;
  6084  080C  01A5               	clrf	(_RF_Data^(0+256)+5)
  6085                           
  6086                           ;RF_Control_B1.c: 219: RF_Data[6] = 0;
  6087  080D  01A6               	clrf	(_RF_Data^(0+256)+6)
  6088                           
  6089                           ;RF_Control_B1.c: 220: RF_Data[7] = 0;
  6090  080E  01A7               	clrf	(_RF_Data^(0+256)+7)
  6091                           
  6092                           ;RF_Control_B1.c: 221: RF_Data[8] = 0;
  6093  080F  01A8               	clrf	(_RF_Data^(0+256)+8)
  6094                           
  6095                           ;RF_Control_B1.c: 222: RF_Data[9] = product->Data[9];
  6096  0810  0020               	movlb	0	; select bank0
  6097  0811  086E               	movf	_product,w
  6098  0812  0086               	movwf	6
  6099  0813  3002               	movlw	2	; select bank4/5
  6100  0814  0087               	movwf	7
  6101  0815  3002               	movlw	2	; select bank4/5
  6102  0816  3F49               	moviw [9]fsr1
  6103  0817  0022               	movlb	2	; select bank2
  6104  0818  00A9               	movwf	(_RF_Data^(0+256)+9)
  6105                           
  6106                           ;RF_Control_B1.c: 223: RF_Data[10] = 0;
  6107  0819  01AA               	clrf	(_RF_Data^(0+256)+10)
  6108                           
  6109                           ;RF_Control_B1.c: 224: RF_Data[11] = product->Data[11];
  6110  081A  0020               	movlb	0	; select bank0
  6111  081B  086E               	movf	_product,w
  6112  081C  0086               	movwf	6
  6113  081D  3002               	movlw	2	; select bank4/5
  6114  081E  0087               	movwf	7
  6115  081F  3002               	movlw	2	; select bank4/5
  6116  0820  3F4B               	moviw [11]fsr1
  6117  0821  0022               	movlb	2	; select bank2
  6118  0822  00AB               	movwf	(_RF_Data^(0+256)+11)
  6119                           
  6120                           ;RF_Control_B1.c: 225: RF_Data[12] = product->Data[12];
  6121  0823  0020               	movlb	0	; select bank0
  6122  0824  086E               	movf	_product,w
  6123  0825  0086               	movwf	6
  6124  0826  3002               	movlw	2	; select bank4/5
  6125  0827  0087               	movwf	7
  6126  0828  3002               	movlw	2	; select bank4/5
  6127  0829  3F4C               	moviw [12]fsr1
  6128  082A  0022               	movlb	2	; select bank2
  6129  082B  00AC               	movwf	(_RF_Data^(0+256)+12)
  6130                           
  6131                           ;RF_Control_B1.c: 226: RF_Data[13] = product->Data[13];
  6132  082C  0020               	movlb	0	; select bank0
  6133  082D  086E               	movf	_product,w
  6134  082E  0086               	movwf	6
  6135  082F  3002               	movlw	2	; select bank4/5
  6136  0830  0087               	movwf	7
  6137  0831  3002               	movlw	2	; select bank4/5
  6138  0832  3F4D               	moviw [13]fsr1
  6139  0833  0022               	movlb	2	; select bank2
  6140  0834  00AD               	movwf	(_RF_Data^(0+256)+13)
  6141                           
  6142                           ;RF_Control_B1.c: 227: RF_Data[14] = product->Data[14];
  6143  0835  0020               	movlb	0	; select bank0
  6144  0836  086E               	movf	_product,w
  6145  0837  0086               	movwf	6
  6146  0838  3002               	movlw	2	; select bank4/5
  6147  0839  0087               	movwf	7
  6148  083A  3002               	movlw	2	; select bank4/5
  6149  083B  3F4E               	moviw [14]fsr1
  6150  083C  0022               	movlb	2	; select bank2
  6151  083D  00AE               	movwf	(_RF_Data^(0+256)+14)
  6152                           
  6153                           ;RF_Control_B1.c: 228: RF_Data[15] = product->Data[15];
  6154  083E  0020               	movlb	0	; select bank0
  6155  083F  086E               	movf	_product,w
  6156  0840  0086               	movwf	6
  6157  0841  3002               	movlw	2	; select bank4/5
  6158  0842  0087               	movwf	7
  6159  0843  3002               	movlw	2	; select bank4/5
  6160  0844  3F4F               	moviw [15]fsr1
  6161  0845  0022               	movlb	2	; select bank2
  6162  0846  00AF               	movwf	(_RF_Data^(0+256)+15)
  6163                           
  6164                           ;RF_Control_B1.c: 229: RF_Data[16] = 0;
  6165  0847  01B0               	clrf	(_RF_Data^(0+256)+16)
  6166                           
  6167                           ;RF_Control_B1.c: 230: RF_Data[17] = 0;
  6168  0848  01B1               	clrf	(_RF_Data^(0+256)+17)
  6169                           
  6170                           ;RF_Control_B1.c: 231: RF_Data[18] = 0;
  6171  0849  01B2               	clrf	(_RF_Data^(0+256)+18)
  6172                           
  6173                           ;RF_Control_B1.c: 232: RF_Data[19] = 0;
  6174  084A  01B3               	clrf	(_RF_Data^(0+256)+19)
  6175                           
  6176                           ;RF_Control_B1.c: 233: RF_Data[20] = 211;
  6177  084B  30D3               	movlw	211
  6178  084C  00F2               	movwf	??_setData
  6179  084D  0872               	movf	??_setData,w
  6180  084E  00B4               	movwf	(_RF_Data^(0+256)+20)
  6181  084F  0008               	return
  6182  0850                     __end_of_setData:	
  6183                           
  6184                           	psect	text19
  6185  0A7E                     __ptext19:	
  6186 ;; *************** function _getRxData *****************
  6187 ;; Defined at:
  6188 ;;		line 256 in file "../src/RF_Control_B1.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  error           1   69[BANK0 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;		None               void
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    8
  6209 ;; This function calls:
  6210 ;;		_getMain_All_Error_Status
  6211 ;;		_setControl_Lights_Table
  6212 ;;		_setLog_Code
  6213 ;;		_setTxData
  6214 ;; This function is called by:
  6215 ;;		_setRF_Main
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function _getRxData
  6221  0A7E                     _getRxData:	
  6222                           
  6223                           ;RF_Control_B1.c: 258: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6227  0A7E  0022               	movlb	2	; select bank2
  6228  0A7F  0820               	movf	_RF_Data^(0+256),w
  6229  0A80  3AAA               	xorlw	170
  6230  0A81  1D03               	skipz
  6231  0A82  2A94               	goto	l11099
  6232  0A83  0821               	movf	(_RF_Data^(0+256)+1),w
  6233  0A84  3A01               	xorlw	1
  6234  0A85  1D03               	skipz
  6235  0A86  2A94               	goto	l11099
  6236                           
  6237                           ;RF_Control_B1.c: 259: product->Data[2] = 0x55;
  6238  0A87  3055               	movlw	85
  6239  0A88  0020               	movlb	0	; select bank0
  6240  0A89  00E4               	movwf	??_getRxData
  6241  0A8A  086E               	movf	_product,w
  6242  0A8B  3E02               	addlw	2
  6243  0A8C  0086               	movwf	6
  6244  0A8D  3002               	movlw	2	; select bank4/5
  6245  0A8E  0087               	movwf	7
  6246  0A8F  0864               	movf	??_getRxData,w
  6247  0A90  0081               	movwf	1
  6248                           
  6249                           ;RF_Control_B1.c: 260: setTxData();
  6250  0A91  319C  24D2         	fcall	_setTxData
  6251                           
  6252                           ;RF_Control_B1.c: 264: } else {
  6253  0A93  0008               	return
  6254  0A94                     l11099:	
  6255                           
  6256                           ;RF_Control_B1.c: 265: char error = getMain_All_Error_Status(0);
  6257  0A94  3000               	movlw	0
  6258  0A95  319C  249F  318A   	fcall	_getMain_All_Error_Status
  6259  0A98  0020               	movlb	0	; select bank0
  6260  0A99  00E4               	movwf	??_getRxData
  6261  0A9A  0864               	movf	??_getRxData,w
  6262  0A9B  00E5               	movwf	getRxData@error
  6263                           
  6264                           ;RF_Control_B1.c: 266: if (error == 0) {
  6265  0A9C  08E5               	movf	getRxData@error,f
  6266  0A9D  1D03               	skipz
  6267  0A9E  2AE1               	goto	l2458
  6268                           
  6269                           ;RF_Control_B1.c: 267: if (RF1.Learn == 1) {
  6270  0A9F  0021               	movlb	1	; select bank1
  6271  0AA0  1F30               	btfss	_RF1^(0+128),6
  6272  0AA1  2AAD               	goto	l11111
  6273                           
  6274                           ;RF_Control_B1.c: 269: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x64) {
  6275  0AA2  0022               	movlb	2	; select bank2
  6276  0AA3  08A0               	movf	_RF_Data^(0+256),f
  6277  0AA4  1D03               	skipz
  6278  0AA5  0008               	return
  6279  0AA6  0821               	movf	(_RF_Data^(0+256)+1),w
  6280  0AA7  3A64               	xorlw	100
  6281  0AA8  1D03               	skipz
  6282  0AA9  0008               	return
  6283                           
  6284                           ;RF_Control_B1.c: 270: setLog_Code();
  6285  0AAA  3193  2390         	fcall	_setLog_Code
  6286                           
  6287                           ;RF_Control_B1.c: 271: }
  6288                           ;RF_Control_B1.c: 289: } else {
  6289  0AAC  0008               	return
  6290  0AAD                     l11111:	
  6291                           
  6292                           ;RF_Control_B1.c: 290: if (RF_Data[20] == 211 || RF_Data[20] == 0x0a) {
  6293  0AAD  0022               	movlb	2	; select bank2
  6294  0AAE  0834               	movf	(_RF_Data^(0+256)+20),w
  6295  0AAF  3AD3               	xorlw	211
  6296  0AB0  1903               	skipnz
  6297  0AB1  2AB6               	goto	l11115
  6298  0AB2  0834               	movf	(_RF_Data^(0+256)+20),w
  6299  0AB3  3A0A               	xorlw	10
  6300  0AB4  1D03               	skipz
  6301  0AB5  0008               	return
  6302  0AB6                     l11115:	
  6303                           
  6304                           ;RF_Control_B1.c: 292: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  6305  0AB6  08A0               	movf	_RF_Data^(0+256),f
  6306  0AB7  1D03               	skipz
  6307  0AB8  0008               	return
  6308  0AB9  0821               	movf	(_RF_Data^(0+256)+1),w
  6309  0ABA  3A02               	xorlw	2
  6310  0ABB  1D03               	skipz
  6311  0ABC  0008               	return
  6312                           
  6313                           ;RF_Control_B1.c: 294: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  6314  0ABD  0020               	movlb	0	; select bank0
  6315  0ABE  086E               	movf	_product,w
  6316  0ABF  3E0C               	addlw	12
  6317  0AC0  0086               	movwf	6
  6318  0AC1  3002               	movlw	2	; select bank4/5
  6319  0AC2  0087               	movwf	7
  6320  0AC3  0022               	movlb	2	; select bank2
  6321  0AC4  082C               	movf	(_RF_Data^(0+256)+12),w
  6322  0AC5  0601               	xorwf	1,w
  6323  0AC6  1D03               	skipz
  6324  0AC7  0008               	return
  6325  0AC8  0020               	movlb	0	; select bank0
  6326  0AC9  086E               	movf	_product,w
  6327  0ACA  3E0D               	addlw	13
  6328  0ACB  0086               	movwf	6
  6329  0ACC  3002               	movlw	2	; select bank4/5
  6330  0ACD  0087               	movwf	7
  6331  0ACE  0022               	movlb	2	; select bank2
  6332  0ACF  082D               	movf	(_RF_Data^(0+256)+13),w
  6333  0AD0  0601               	xorwf	1,w
  6334  0AD1  1D03               	skipz
  6335  0AD2  0008               	return
  6336  0AD3  0020               	movlb	0	; select bank0
  6337  0AD4  086E               	movf	_product,w
  6338  0AD5  3E0E               	addlw	14
  6339  0AD6  0086               	movwf	6
  6340  0AD7  3002               	movlw	2	; select bank4/5
  6341  0AD8  0087               	movwf	7
  6342  0AD9  0022               	movlb	2	; select bank2
  6343  0ADA  082E               	movf	(_RF_Data^(0+256)+14),w
  6344  0ADB  0601               	xorwf	1,w
  6345  0ADC  1D03               	skipz
  6346  0ADD  0008               	return
  6347                           
  6348                           ;RF_Control_B1.c: 295: setControl_Lights_Table();
  6349  0ADE  3186  26AE         	fcall	_setControl_Lights_Table
  6350                           
  6351                           ;RF_Control_B1.c: 296: }
  6352                           ;RF_Control_B1.c: 299: }
  6353                           ;RF_Control_B1.c: 310: }
  6354                           ;RF_Control_B1.c: 311: }
  6355                           ;RF_Control_B1.c: 312: } else {
  6356  0AE0  0008               	return
  6357  0AE1                     l2458:	
  6358                           
  6359                           ;RF_Control_B1.c: 313: __nop();
  6360  0AE1  0000               	nop
  6361  0AE2  0008               	return
  6362  0AE3                     __end_of_getRxData:	
  6363                           
  6364                           	psect	text20
  6365  1390                     __ptext20:	
  6366 ;; *************** function _setLog_Code *****************
  6367 ;; Defined at:
  6368 ;;		line 319 in file "../src/RF_Control_B1.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;		None               void
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        1 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    5
  6389 ;; This function calls:
  6390 ;;		_setBuz
  6391 ;;		_setMemory_LoopSave
  6392 ;;		_setMemory_Modify
  6393 ;;		_setProductData
  6394 ;; This function is called by:
  6395 ;;		_getRxData
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _setLog_Code
  6401  1390                     _setLog_Code:	
  6402                           
  6403                           ;RF_Control_B1.c: 320: RF1.Learn = 0;
  6404                           
  6405                           ;incstack = 0
  6406                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6407  1390  0021               	movlb	1	; select bank1
  6408  1391  1330               	bcf	_RF1^(0+128),6
  6409                           
  6410                           ;RF_Control_B1.c: 321: setProductData(12, RF_Data[12]);
  6411  1392  0022               	movlb	2	; select bank2
  6412  1393  082C               	movf	(_RF_Data^(0+256)+12),w
  6413  1394  0020               	movlb	0	; select bank0
  6414  1395  00D9               	movwf	??_setLog_Code
  6415  1396  0859               	movf	??_setLog_Code,w
  6416  1397  00D6               	movwf	setProductData@value
  6417  1398  300C               	movlw	12
  6418  1399  319D  2530  3193   	fcall	_setProductData
  6419                           
  6420                           ;RF_Control_B1.c: 322: setProductData(13, RF_Data[13]);
  6421  139C  0022               	movlb	2	; select bank2
  6422  139D  082D               	movf	(_RF_Data^(0+256)+13),w
  6423  139E  0020               	movlb	0	; select bank0
  6424  139F  00D9               	movwf	??_setLog_Code
  6425  13A0  0859               	movf	??_setLog_Code,w
  6426  13A1  00D6               	movwf	setProductData@value
  6427  13A2  300D               	movlw	13
  6428  13A3  319D  2530  3193   	fcall	_setProductData
  6429                           
  6430                           ;RF_Control_B1.c: 323: setProductData(14, RF_Data[14]);
  6431  13A6  0022               	movlb	2	; select bank2
  6432  13A7  082E               	movf	(_RF_Data^(0+256)+14),w
  6433  13A8  0020               	movlb	0	; select bank0
  6434  13A9  00D9               	movwf	??_setLog_Code
  6435  13AA  0859               	movf	??_setLog_Code,w
  6436  13AB  00D6               	movwf	setProductData@value
  6437  13AC  300E               	movlw	14
  6438  13AD  319D  2530  3193   	fcall	_setProductData
  6439                           
  6440                           ;RF_Control_B1.c: 324: setBuz(1, 100);
  6441  13B0  3064               	movlw	100
  6442  13B1  0020               	movlb	0	; select bank0
  6443  13B2  00A4               	movwf	setBuz@time
  6444  13B3  3000               	movlw	0
  6445  13B4  00A5               	movwf	setBuz@time+1
  6446  13B5  3001               	movlw	1
  6447  13B6  3188  2050  3193   	fcall	_setBuz
  6448                           
  6449                           ;RF_Control_B1.c: 325: if (myMain.First == 1) {
  6450  13B9  0021               	movlb	1	; select bank1
  6451  13BA  1EBF               	btfss	_myMain^(0+128),5
  6452  13BB  2BC0               	goto	l2471
  6453                           
  6454                           ;RF_Control_B1.c: 326: setMemory_LoopSave(1);
  6455  13BC  3001               	movlw	1
  6456  13BD  319E  2656  3193   	fcall	_setMemory_LoopSave
  6457  13C0                     l2471:	
  6458                           
  6459                           ;RF_Control_B1.c: 327: }
  6460                           ;RF_Control_B1.c: 328: setMemory_Modify(1);
  6461  13C0  3001               	movlw	1
  6462  13C1  319D  25F6         	fcall	_setMemory_Modify
  6463  13C3  0008               	return
  6464  13C4                     __end_of_setLog_Code:	
  6465                           
  6466                           	psect	text21
  6467  1E56                     __ptext21:	
  6468 ;; *************** function _setMemory_LoopSave *****************
  6469 ;; Defined at:
  6470 ;;		line 1094 in file "../src/MCU_B1.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  command         1    wreg     unsigned char 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  command         1    3[COMMON] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;		None               void
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;Total ram usage:        2 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:    3
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_setLog_Code
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function _setMemory_LoopSave
  6500  1E56                     _setMemory_LoopSave:	
  6501                           
  6502                           ;incstack = 0
  6503                           ; Regs used in _setMemory_LoopSave: [wreg+status,2+status,0]
  6504                           ;setMemory_LoopSave@command stored from wreg
  6505  1E56  00F3               	movwf	setMemory_LoopSave@command
  6506                           
  6507                           ;MCU_B1.c: 1095: Memory.LoopSave = command == 1 ? 1 : 0;
  6508  1E57  0873               	movf	setMemory_LoopSave@command,w
  6509  1E58  3A01               	xorlw	1
  6510  1E59  3000               	movlw	0
  6511  1E5A  1903               	skipnz
  6512  1E5B  3001               	movlw	1
  6513  1E5C  00F2               	movwf	??_setMemory_LoopSave
  6514  1E5D  0DF2               	rlf	??_setMemory_LoopSave,f
  6515  1E5E  0DF2               	rlf	??_setMemory_LoopSave,f
  6516  1E5F  0024               	movlb	4	; select bank4
  6517  1E60  0844               	movf	(_Memory^(0+512)+36),w
  6518  1E61  0672               	xorwf	??_setMemory_LoopSave,w
  6519  1E62  39FB               	andlw	-5
  6520  1E63  0672               	xorwf	??_setMemory_LoopSave,w
  6521  1E64  00C4               	movwf	(_Memory^(0+512)+36)
  6522  1E65  0008               	return
  6523  1E66                     __end_of_setMemory_LoopSave:	
  6524                           
  6525                           	psect	text22
  6526  06AE                     __ptext22:	
  6527 ;; *************** function _setControl_Lights_Table *****************
  6528 ;; Defined at:
  6529 ;;		line 332 in file "../src/RF_Control_B1.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;		None               void
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;Total ram usage:        0 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    7
  6550 ;; This function calls:
  6551 ;;		_getDimmerLights_Status
  6552 ;;		_getMain_All_LightsStatus
  6553 ;;		_setCmd_Status
  6554 ;;		_setDimmerLights_SwOff
  6555 ;;		_setDimmerLights_SwOn
  6556 ;;		_setProductData
  6557 ;;		_setRFSW_AdjControl
  6558 ;;		_setRFSW_Control
  6559 ;;		_setRF_AdjControl
  6560 ;;		_setTxData
  6561 ;; This function is called by:
  6562 ;;		_getRxData
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _setControl_Lights_Table
  6568  06AE                     _setControl_Lights_Table:	
  6569                           
  6570                           ;RF_Control_B1.c: 334: switch (RF_Data[15]) {
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6574  06AE  2F44               	goto	l10893
  6575  06AF                     l10855:	
  6576                           ;RF_Control_B1.c: 336: case 0x00:
  6577                           
  6578                           
  6579                           ;RF_Control_B1.c: 337: if (getMain_All_LightsStatus() == 1) {
  6580  06AF  319F  273B  3186   	fcall	_getMain_All_LightsStatus
  6581  06B2  3A01               	xorlw	1
  6582  06B3  1D03               	skipz
  6583  06B4  2EE8               	goto	l10867
  6584                           
  6585                           ;RF_Control_B1.c: 340: if (getDimmerLights_Status(1) == 1) {
  6586  06B5  3001               	movlw	1
  6587  06B6  319D  256F  3186   	fcall	_getDimmerLights_Status
  6588  06B9  3A01               	xorlw	1
  6589  06BA  1D03               	skipz
  6590  06BB  2EC4               	goto	l2478
  6591                           
  6592                           ;RF_Control_B1.c: 341: setDimmerLights_SwOn(1);
  6593  06BC  3001               	movlw	1
  6594  06BD  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6595                           
  6596                           ;RF_Control_B1.c: 342: setDimmerLights_SwOff(1);
  6597  06C0  3001               	movlw	1
  6598  06C1  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6599  06C4                     l2478:	
  6600                           
  6601                           ;RF_Control_B1.c: 343: }
  6602                           ;RF_Control_B1.c: 346: if (getDimmerLights_Status(2) == 1) {
  6603  06C4  3002               	movlw	2
  6604  06C5  319D  256F  3186   	fcall	_getDimmerLights_Status
  6605  06C8  3A01               	xorlw	1
  6606  06C9  1D03               	skipz
  6607  06CA  2ED3               	goto	l2479
  6608                           
  6609                           ;RF_Control_B1.c: 347: setDimmerLights_SwOn(2);
  6610  06CB  3002               	movlw	2
  6611  06CC  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6612                           
  6613                           ;RF_Control_B1.c: 348: setDimmerLights_SwOff(2);
  6614  06CF  3002               	movlw	2
  6615  06D0  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6616  06D3                     l2479:	
  6617                           
  6618                           ;RF_Control_B1.c: 349: }
  6619                           ;RF_Control_B1.c: 352: if (getDimmerLights_Status(3) == 1) {
  6620  06D3  3003               	movlw	3
  6621  06D4  319D  256F  3186   	fcall	_getDimmerLights_Status
  6622  06D7  3A01               	xorlw	1
  6623  06D8  1D03               	skipz
  6624  06D9  2EE2               	goto	l10865
  6625                           
  6626                           ;RF_Control_B1.c: 353: setDimmerLights_SwOn(3);
  6627  06DA  3003               	movlw	3
  6628  06DB  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6629                           
  6630                           ;RF_Control_B1.c: 354: setDimmerLights_SwOff(3);
  6631  06DE  3003               	movlw	3
  6632  06DF  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6633  06E2                     l10865:	
  6634                           
  6635                           ;RF_Control_B1.c: 355: }
  6636                           ;RF_Control_B1.c: 358: setCmd_Status(1, 1);
  6637  06E2  01F2               	clrf	setCmd_Status@cmd
  6638  06E3  0AF2               	incf	setCmd_Status@cmd,f
  6639  06E4  3001               	movlw	1
  6640  06E5  319E  26D2         	fcall	_setCmd_Status
  6641                           
  6642                           ;RF_Control_B1.c: 359: } else {
  6643  06E7  0008               	return
  6644  06E8                     l10867:	
  6645                           
  6646                           ;RF_Control_B1.c: 360: setProductData(9, 0);
  6647  06E8  0020               	movlb	0	; select bank0
  6648  06E9  01D6               	clrf	setProductData@value
  6649  06EA  3009               	movlw	9
  6650  06EB  319D  2530  3186   	fcall	_setProductData
  6651                           
  6652                           ;RF_Control_B1.c: 361: setProductData(11, 0);
  6653  06EE  0020               	movlb	0	; select bank0
  6654  06EF  01D6               	clrf	setProductData@value
  6655  06F0  300B               	movlw	11
  6656  06F1  319D  2530  3186   	fcall	_setProductData
  6657                           
  6658                           ;RF_Control_B1.c: 362: setProductData(15, 0);
  6659  06F4  0020               	movlb	0	; select bank0
  6660  06F5  01D6               	clrf	setProductData@value
  6661  06F6  300F               	movlw	15
  6662  06F7  319D  2530  3186   	fcall	_setProductData
  6663                           
  6664                           ;RF_Control_B1.c: 363: setProductData(17, 0);
  6665  06FA  0020               	movlb	0	; select bank0
  6666  06FB  01D6               	clrf	setProductData@value
  6667  06FC  3011               	movlw	17
  6668  06FD  319D  2530  3186   	fcall	_setProductData
  6669                           
  6670                           ;RF_Control_B1.c: 364: setTxData();
  6671  0700  319C  24D2         	fcall	_setTxData
  6672                           
  6673                           ;RF_Control_B1.c: 365: }
  6674                           ;RF_Control_B1.c: 366: break;
  6675  0702  0008               	return
  6676  0703                     l10871:	
  6677                           ;RF_Control_B1.c: 368: case 0x20:
  6678                           
  6679                           
  6680                           ;RF_Control_B1.c: 369: setProductData(9, 0);
  6681  0703  0020               	movlb	0	; select bank0
  6682  0704  01D6               	clrf	setProductData@value
  6683  0705  3009               	movlw	9
  6684  0706  319D  2530  3186   	fcall	_setProductData
  6685                           
  6686                           ;RF_Control_B1.c: 370: setProductData(11, 0);
  6687  0709  0020               	movlb	0	; select bank0
  6688  070A  01D6               	clrf	setProductData@value
  6689  070B  300B               	movlw	11
  6690  070C  319D  2530  3186   	fcall	_setProductData
  6691                           
  6692                           ;RF_Control_B1.c: 371: setProductData(15, product->Data[15]);
  6693  070F  0020               	movlb	0	; select bank0
  6694  0710  086E               	movf	_product,w
  6695  0711  0086               	movwf	6
  6696  0712  3002               	movlw	2	; select bank4/5
  6697  0713  0087               	movwf	7
  6698  0714  3002               	movlw	2	; select bank4/5
  6699  0715  3F4F               	moviw [15]fsr1
  6700  0716  00D6               	movwf	setProductData@value
  6701  0717  300F               	movlw	15
  6702  0718  319D  2530  3186   	fcall	_setProductData
  6703                           
  6704                           ;RF_Control_B1.c: 372: setProductData(17, 0);
  6705  071B  0020               	movlb	0	; select bank0
  6706  071C  01D6               	clrf	setProductData@value
  6707  071D  3011               	movlw	17
  6708  071E  319D  2530  3186   	fcall	_setProductData
  6709                           
  6710                           ;RF_Control_B1.c: 373: setTxData();
  6711  0721  319C  24D2         	fcall	_setTxData
  6712                           
  6713                           ;RF_Control_B1.c: 374: break;
  6714  0723  0008               	return
  6715  0724                     l10875:	
  6716                           ;RF_Control_B1.c: 377: case 0x01:
  6717                           
  6718                           
  6719                           ;RF_Control_B1.c: 378: setRFSW_Control(1);
  6720  0724  3001               	movlw	1
  6721  0725  3195  2593         	fcall	_setRFSW_Control
  6722                           
  6723                           ;RF_Control_B1.c: 379: break;
  6724  0727  0008               	return
  6725  0728                     l10877:	
  6726                           ;RF_Control_B1.c: 383: case 0x11:
  6727                           
  6728                           
  6729                           ;RF_Control_B1.c: 384: setRFSW_AdjControl(1);
  6730  0728  3001               	movlw	1
  6731  0729  318D  2593         	fcall	_setRFSW_AdjControl
  6732                           
  6733                           ;RF_Control_B1.c: 385: break;
  6734  072B  0008               	return
  6735  072C                     l10879:	
  6736                           ;RF_Control_B1.c: 387: case 0xd1:
  6737                           
  6738                           
  6739                           ;RF_Control_B1.c: 388: setRF_AdjControl(1);
  6740  072C  3001               	movlw	1
  6741  072D  3194  246A         	fcall	_setRF_AdjControl
  6742                           
  6743                           ;RF_Control_B1.c: 389: break;
  6744  072F  0008               	return
  6745  0730                     l10881:	
  6746                           ;RF_Control_B1.c: 394: case 0x02:
  6747                           
  6748                           
  6749                           ;RF_Control_B1.c: 395: setRFSW_Control(2);
  6750  0730  3002               	movlw	2
  6751  0731  3195  2593         	fcall	_setRFSW_Control
  6752                           
  6753                           ;RF_Control_B1.c: 396: break;
  6754  0733  0008               	return
  6755  0734                     l10883:	
  6756                           ;RF_Control_B1.c: 399: case 0x21:
  6757                           
  6758                           
  6759                           ;RF_Control_B1.c: 400: setRFSW_AdjControl(2);
  6760  0734  3002               	movlw	2
  6761  0735  318D  2593         	fcall	_setRFSW_AdjControl
  6762                           
  6763                           ;RF_Control_B1.c: 401: break;
  6764  0737  0008               	return
  6765  0738                     l10885:	
  6766                           ;RF_Control_B1.c: 403: case 0xd2:
  6767                           
  6768                           
  6769                           ;RF_Control_B1.c: 404: setRF_AdjControl(2);
  6770  0738  3002               	movlw	2
  6771  0739  3194  246A         	fcall	_setRF_AdjControl
  6772                           
  6773                           ;RF_Control_B1.c: 405: break;
  6774  073B  0008               	return
  6775  073C                     l10887:	
  6776                           ;RF_Control_B1.c: 411: case 0x03:
  6777                           
  6778                           
  6779                           ;RF_Control_B1.c: 412: setRFSW_Control(3);
  6780  073C  3003               	movlw	3
  6781  073D  3195  2593         	fcall	_setRFSW_Control
  6782                           
  6783                           ;RF_Control_B1.c: 413: break;
  6784  073F  0008               	return
  6785  0740                     l10889:	
  6786                           ;RF_Control_B1.c: 417: case 0x31:
  6787                           
  6788                           
  6789                           ;RF_Control_B1.c: 418: setRFSW_AdjControl(3);
  6790  0740  3003               	movlw	3
  6791  0741  318D  2593         	fcall	_setRFSW_AdjControl
  6792                           
  6793                           ;RF_Control_B1.c: 422: }
  6794                           
  6795                           ;RF_Control_B1.c: 419: break;
  6796  0743  0008               	return
  6797  0744                     l10893:	
  6798  0744  0022               	movlb	2	; select bank2
  6799  0745  082F               	movf	(_RF_Data^(0+256)+15),w
  6800                           
  6801                           ; Switch size 1, requested type "space"
  6802                           ; Number of cases is 10, Range of values is 0 to 210
  6803                           ; switch strategies available:
  6804                           ; Name         Instructions Cycles
  6805                           ; simple_byte           31    16 (average)
  6806                           ; jumptable            260     6 (fixed)
  6807                           ;	Chosen strategy is simple_byte
  6808  0746  3A00               	xorlw	0	; case 0
  6809  0747  1903               	skipnz
  6810  0748  2EAF               	goto	l10855
  6811  0749  3A01               	xorlw	1	; case 1
  6812  074A  1903               	skipnz
  6813  074B  2F24               	goto	l10875
  6814  074C  3A03               	xorlw	3	; case 2
  6815  074D  1903               	skipnz
  6816  074E  2F30               	goto	l10881
  6817  074F  3A01               	xorlw	1	; case 3
  6818  0750  1903               	skipnz
  6819  0751  2F3C               	goto	l10887
  6820  0752  3A12               	xorlw	18	; case 17
  6821  0753  1903               	skipnz
  6822  0754  2F28               	goto	l10877
  6823  0755  3A31               	xorlw	49	; case 32
  6824  0756  1903               	skipnz
  6825  0757  2F03               	goto	l10871
  6826  0758  3A01               	xorlw	1	; case 33
  6827  0759  1903               	skipnz
  6828  075A  2F34               	goto	l10883
  6829  075B  3A10               	xorlw	16	; case 49
  6830  075C  1903               	skipnz
  6831  075D  2F40               	goto	l10889
  6832  075E  3AE0               	xorlw	224	; case 209
  6833  075F  1903               	skipnz
  6834  0760  2F2C               	goto	l10879
  6835  0761  3A03               	xorlw	3	; case 210
  6836  0762  1903               	skipnz
  6837  0763  2F38               	goto	l10885
  6838  0764  2F65               	goto	l2492
  6839  0765                     l2492:	
  6840  0765  0008               	return
  6841  0766                     __end_of_setControl_Lights_Table:	
  6842                           
  6843                           	psect	text23
  6844  146A                     __ptext23:	
  6845 ;; *************** function _setRF_AdjControl *****************
  6846 ;; Defined at:
  6847 ;;		line 501 in file "../src/RF_Control_B1.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  sw              1    wreg     unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  sw              1    2[BANK0 ] unsigned char 
  6852 ;;  dimmingStatu    1    1[BANK0 ] unsigned char 
  6853 ;;  status          1    0[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;Total ram usage:        4 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    5
  6870 ;; This function calls:
  6871 ;;		_DimmerLights_SelectPointer
  6872 ;;		_getDimmerIntr_Dimming_Sw
  6873 ;;		_getDimmerLights_Status
  6874 ;; This function is called by:
  6875 ;;		_setControl_Lights_Table
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           
  6880                           ;psect for function _setRF_AdjControl
  6881  146A                     _setRF_AdjControl:	
  6882                           
  6883                           ;incstack = 0
  6884                           ; Regs used in _setRF_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6885                           ;setRF_AdjControl@sw stored from wreg
  6886  146A  0020               	movlb	0	; select bank0
  6887  146B  00A2               	movwf	setRF_AdjControl@sw
  6888                           
  6889                           ;RF_Control_B1.c: 502: char status = 0;
  6890  146C  01A0               	clrf	setRF_AdjControl@status
  6891                           
  6892                           ;RF_Control_B1.c: 504: status = getDimmerLights_Status(sw);
  6893  146D  0822               	movf	setRF_AdjControl@sw,w
  6894  146E  319D  256F  3194   	fcall	_getDimmerLights_Status
  6895  1471  00F6               	movwf	??_setRF_AdjControl
  6896  1472  0876               	movf	??_setRF_AdjControl,w
  6897  1473  0020               	movlb	0	; select bank0
  6898  1474  00A0               	movwf	setRF_AdjControl@status
  6899                           
  6900                           ;RF_Control_B1.c: 505: char dimmingStatus = 0;
  6901  1475  01A1               	clrf	setRF_AdjControl@dimmingStatus
  6902                           
  6903                           ;RF_Control_B1.c: 506: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
  6904  1476  0822               	movf	setRF_AdjControl@sw,w
  6905  1477  3191  2116  3194   	fcall	_getDimmerIntr_Dimming_Sw
  6906  147A  00F6               	movwf	??_setRF_AdjControl
  6907  147B  0876               	movf	??_setRF_AdjControl,w
  6908  147C  0020               	movlb	0	; select bank0
  6909  147D  00A1               	movwf	setRF_AdjControl@dimmingStatus
  6910                           
  6911                           ;RF_Control_B1.c: 508: if (status == 1) {
  6912  147E  0820               	movf	setRF_AdjControl@status,w
  6913  147F  3A01               	xorlw	1
  6914  1480  1D03               	skipz
  6915  1481  0008               	return
  6916                           
  6917                           ;RF_Control_B1.c: 509: if (dimmingStatus == 0) {
  6918  1482  08A1               	movf	setRF_AdjControl@dimmingStatus,f
  6919  1483  1D03               	skipz
  6920  1484  2C94               	goto	l10679
  6921                           
  6922                           ;RF_Control_B1.c: 510: DimmerLights_SelectPointer(sw);
  6923  1485  0822               	movf	setRF_AdjControl@sw,w
  6924  1486  3191  2193         	fcall	_DimmerLights_SelectPointer
  6925                           
  6926                           ;RF_Control_B1.c: 511: DimmerLights->DimmingTrigger = 1;
  6927  1488  0020               	movlb	0	; select bank0
  6928  1489  086A               	movf	_DimmerLights,w
  6929  148A  0086               	movwf	6
  6930  148B  3001               	movlw	1	; select bank2/3
  6931  148C  0087               	movwf	7
  6932  148D  1601               	bsf	1,4
  6933                           
  6934                           ;RF_Control_B1.c: 512: DimmerLights->DimmingSwitch = 1;
  6935  148E  086A               	movf	_DimmerLights,w
  6936  148F  0086               	movwf	6
  6937  1490  3001               	movlw	1	; select bank2/3
  6938  1491  0087               	movwf	7
  6939  1492  1681               	bsf	1,5
  6940                           
  6941                           ;RF_Control_B1.c: 514: } else {
  6942  1493  0008               	return
  6943  1494                     l10679:	
  6944                           
  6945                           ;RF_Control_B1.c: 515: DimmerLights_SelectPointer(sw);
  6946  1494  0822               	movf	setRF_AdjControl@sw,w
  6947  1495  3191  2193         	fcall	_DimmerLights_SelectPointer
  6948                           
  6949                           ;RF_Control_B1.c: 516: DimmerLights->DimmingTrigger = 1;
  6950  1497  0020               	movlb	0	; select bank0
  6951  1498  086A               	movf	_DimmerLights,w
  6952  1499  0086               	movwf	6
  6953  149A  3001               	movlw	1	; select bank2/3
  6954  149B  0087               	movwf	7
  6955  149C  1601               	bsf	1,4
  6956                           
  6957                           ;RF_Control_B1.c: 517: DimmerLights->DimmingSwitch = 0;
  6958  149D  086A               	movf	_DimmerLights,w
  6959  149E  0086               	movwf	6
  6960  149F  3001               	movlw	1	; select bank2/3
  6961  14A0  0087               	movwf	7
  6962  14A1  1281               	bcf	1,5
  6963  14A2  0008               	return
  6964  14A3                     __end_of_setRF_AdjControl:	
  6965                           
  6966                           	psect	text24
  6967  1593                     __ptext24:	
  6968 ;; *************** function _setRFSW_Control *****************
  6969 ;; Defined at:
  6970 ;;		line 430 in file "../src/RF_Control_B1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  sw              1    wreg     unsigned char 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  sw              1   67[BANK0 ] unsigned char 
  6975 ;;  status          1   66[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;		None               void
  6978 ;; Registers used:
  6979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;Total ram usage:        3 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    6
  6992 ;; This function calls:
  6993 ;;		_getDimmerLights_Status
  6994 ;;		_setBuz
  6995 ;;		_setDelayOff_GO
  6996 ;;		_setDimmerLights_SwOff
  6997 ;;		_setDimmerLights_SwOn
  6998 ;;		_setRF_DimmerLights
  6999 ;;		_setTxData
  7000 ;; This function is called by:
  7001 ;;		_setControl_Lights_Table
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _setRFSW_Control
  7007  1593                     _setRFSW_Control:	
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in _setRFSW_Control: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7011                           ;setRFSW_Control@sw stored from wreg
  7012  1593  0020               	movlb	0	; select bank0
  7013  1594  00E3               	movwf	setRFSW_Control@sw
  7014                           
  7015                           ;RF_Control_B1.c: 431: char status = 0;
  7016  1595  01E2               	clrf	setRFSW_Control@status
  7017                           
  7018                           ;RF_Control_B1.c: 433: if (RF_Data[16] == 0x80) {
  7019  1596  0022               	movlb	2	; select bank2
  7020  1597  0830               	movf	(_RF_Data^(0+256)+16),w
  7021  1598  3A80               	xorlw	128
  7022  1599  1D03               	skipz
  7023  159A  2DC6               	goto	l10629
  7024                           
  7025                           ;RF_Control_B1.c: 434: setDelayOff_GO(sw, 1, RF_Data[17]);
  7026  159B  0020               	movlb	0	; select bank0
  7027  159C  01D9               	clrf	setDelayOff_GO@command
  7028  159D  0AD9               	incf	setDelayOff_GO@command,f
  7029  159E  0022               	movlb	2	; select bank2
  7030  159F  0831               	movf	(_RF_Data^(0+256)+17),w
  7031  15A0  0020               	movlb	0	; select bank0
  7032  15A1  00E1               	movwf	??_setRFSW_Control
  7033  15A2  0861               	movf	??_setRFSW_Control,w
  7034  15A3  00DA               	movwf	setDelayOff_GO@value
  7035  15A4  0863               	movf	setRFSW_Control@sw,w
  7036  15A5  318C  2488  3195   	fcall	_setDelayOff_GO
  7037                           
  7038                           ;RF_Control_B1.c: 435: if (getDimmerLights_Status(sw) == 1) {
  7039  15A8  0020               	movlb	0	; select bank0
  7040  15A9  0863               	movf	setRFSW_Control@sw,w
  7041  15AA  319D  256F  3195   	fcall	_getDimmerLights_Status
  7042  15AD  3A01               	xorlw	1
  7043  15AE  1D03               	skipz
  7044  15AF  2DC6               	goto	l10629
  7045                           
  7046                           ;RF_Control_B1.c: 436: setBuz(1, 100);
  7047  15B0  3064               	movlw	100
  7048  15B1  0020               	movlb	0	; select bank0
  7049  15B2  00A4               	movwf	setBuz@time
  7050  15B3  3000               	movlw	0
  7051  15B4  00A5               	movwf	setBuz@time+1
  7052  15B5  3001               	movlw	1
  7053  15B6  3188  2050  3195   	fcall	_setBuz
  7054                           
  7055                           ;RF_Control_B1.c: 437: setRF_DimmerLights(sw, 1);
  7056  15B9  0020               	movlb	0	; select bank0
  7057  15BA  01D9               	clrf	setRF_DimmerLights@on
  7058  15BB  0AD9               	incf	setRF_DimmerLights@on,f
  7059  15BC  0863               	movf	setRFSW_Control@sw,w
  7060  15BD  318A  22E3  3195   	fcall	_setRF_DimmerLights
  7061                           
  7062                           ;RF_Control_B1.c: 438: setTxData();
  7063  15C0  319C  24D2  3195   	fcall	_setTxData
  7064                           
  7065                           ;RF_Control_B1.c: 439: status = 1;
  7066  15C3  0020               	movlb	0	; select bank0
  7067  15C4  01E2               	clrf	setRFSW_Control@status
  7068  15C5  0AE2               	incf	setRFSW_Control@status,f
  7069  15C6                     l10629:	
  7070                           
  7071                           ;RF_Control_B1.c: 440: }
  7072                           ;RF_Control_B1.c: 441: }
  7073                           ;RF_Control_B1.c: 443: if (status == 0) {
  7074  15C6  0020               	movlb	0	; select bank0
  7075  15C7  08E2               	movf	setRFSW_Control@status,f
  7076  15C8  1D03               	skipz
  7077  15C9  0008               	return
  7078                           
  7079                           ;RF_Control_B1.c: 445: setDimmerLights_SwOn(sw);
  7080  15CA  0863               	movf	setRFSW_Control@sw,w
  7081  15CB  3187  2766  3195   	fcall	_setDimmerLights_SwOn
  7082                           
  7083                           ;RF_Control_B1.c: 446: setDimmerLights_SwOff(sw);
  7084  15CE  0020               	movlb	0	; select bank0
  7085  15CF  0863               	movf	setRFSW_Control@sw,w
  7086  15D0  3194  2432         	fcall	_setDimmerLights_SwOff
  7087  15D2  0008               	return
  7088  15D3                     __end_of_setRFSW_Control:	
  7089                           
  7090                           	psect	text25
  7091  0D93                     __ptext25:	
  7092 ;; *************** function _setRFSW_AdjControl *****************
  7093 ;; Defined at:
  7094 ;;		line 453 in file "../src/RF_Control_B1.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  sw              1    wreg     unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  sw              1   62[BANK0 ] unsigned char 
  7099 ;;  status          1   61[BANK0 ] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;Total ram usage:        4 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    6
  7116 ;; This function calls:
  7117 ;;		_getDimmerLights_PercentToValue
  7118 ;;		_getDimmerLights_Status
  7119 ;;		_setBuz
  7120 ;;		_setDimmerIntr_Dimming_RF
  7121 ;;		_setDimmerIntr_MaxmumValue
  7122 ;;		_setDimmerLights_DimmingRun
  7123 ;;		_setDimmerLights_SwOff
  7124 ;;		_setDimmerLights_SwOn
  7125 ;;		_setMemory_Modify
  7126 ;;		_setProductData
  7127 ;;		_setTxData
  7128 ;; This function is called by:
  7129 ;;		_setControl_Lights_Table
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           
  7134                           ;psect for function _setRFSW_AdjControl
  7135  0D93                     _setRFSW_AdjControl:	
  7136                           
  7137                           ;incstack = 0
  7138                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7139                           ;setRFSW_AdjControl@sw stored from wreg
  7140  0D93  0020               	movlb	0	; select bank0
  7141  0D94  00DE               	movwf	setRFSW_AdjControl@sw
  7142                           
  7143                           ;RF_Control_B1.c: 454: char status = 0;
  7144  0D95  01DD               	clrf	setRFSW_AdjControl@status
  7145                           
  7146                           ;RF_Control_B1.c: 456: status = getDimmerLights_Status(sw);
  7147  0D96  085E               	movf	setRFSW_AdjControl@sw,w
  7148  0D97  319D  256F  318D   	fcall	_getDimmerLights_Status
  7149  0D9A  0020               	movlb	0	; select bank0
  7150  0D9B  00DB               	movwf	??_setRFSW_AdjControl
  7151  0D9C  085B               	movf	??_setRFSW_AdjControl,w
  7152  0D9D  00DD               	movwf	setRFSW_AdjControl@status
  7153                           
  7154                           ;RF_Control_B1.c: 458: if (RF_Data[9] > 0x64) {
  7155  0D9E  3065               	movlw	101
  7156  0D9F  0022               	movlb	2	; select bank2
  7157  0DA0  0229               	subwf	(_RF_Data^(0+256)+9),w
  7158  0DA1  1C03               	skipc
  7159  0DA2  2DAA               	goto	l10641
  7160                           
  7161                           ;RF_Control_B1.c: 459: RF_Data[9] = 0x64;
  7162  0DA3  3064               	movlw	100
  7163  0DA4  0020               	movlb	0	; select bank0
  7164  0DA5  00DB               	movwf	??_setRFSW_AdjControl
  7165  0DA6  085B               	movf	??_setRFSW_AdjControl,w
  7166  0DA7  0022               	movlb	2	; select bank2
  7167  0DA8  00A9               	movwf	(_RF_Data^(0+256)+9)
  7168                           
  7169                           ;RF_Control_B1.c: 460: } else if (RF_Data[9] < 0x01) {
  7170  0DA9  2DAF               	goto	l10645
  7171  0DAA                     l10641:	
  7172  0DAA  08A9               	movf	(_RF_Data^(0+256)+9),f
  7173  0DAB  1D03               	skipz
  7174  0DAC  2DAF               	goto	l10645
  7175                           
  7176                           ;RF_Control_B1.c: 461: RF_Data[9] = 0x01;
  7177  0DAD  01A9               	clrf	(_RF_Data^(0+256)+9)
  7178  0DAE  0AA9               	incf	(_RF_Data^(0+256)+9),f
  7179  0DAF                     l10645:	
  7180                           
  7181                           ;RF_Control_B1.c: 462: }
  7182                           ;RF_Control_B1.c: 463: setProductData(9, RF_Data[9]);
  7183  0DAF  0829               	movf	(_RF_Data^(0+256)+9),w
  7184  0DB0  0020               	movlb	0	; select bank0
  7185  0DB1  00DB               	movwf	??_setRFSW_AdjControl
  7186  0DB2  085B               	movf	??_setRFSW_AdjControl,w
  7187  0DB3  00D6               	movwf	setProductData@value
  7188  0DB4  3009               	movlw	9
  7189  0DB5  319D  2530  318D   	fcall	_setProductData
  7190                           
  7191                           ;RF_Control_B1.c: 464: setProductData(11, sw);
  7192  0DB8  0020               	movlb	0	; select bank0
  7193  0DB9  085E               	movf	setRFSW_AdjControl@sw,w
  7194  0DBA  00DB               	movwf	??_setRFSW_AdjControl
  7195  0DBB  085B               	movf	??_setRFSW_AdjControl,w
  7196  0DBC  00D6               	movwf	setProductData@value
  7197  0DBD  300B               	movlw	11
  7198  0DBE  319D  2530  318D   	fcall	_setProductData
  7199                           
  7200                           ;RF_Control_B1.c: 465: setProductData(17, product->Data[26 + sw]);
  7201  0DC1  0020               	movlb	0	; select bank0
  7202  0DC2  085E               	movf	setRFSW_AdjControl@sw,w
  7203  0DC3  3E1A               	addlw	26
  7204  0DC4  076E               	addwf	_product,w
  7205  0DC5  00DB               	movwf	??_setRFSW_AdjControl
  7206  0DC6  085B               	movf	??_setRFSW_AdjControl,w
  7207  0DC7  0086               	movwf	6
  7208  0DC8  3002               	movlw	2	; select bank4/5
  7209  0DC9  0087               	movwf	7
  7210  0DCA  0801               	movf	1,w
  7211  0DCB  00DC               	movwf	??_setRFSW_AdjControl+1
  7212  0DCC  085C               	movf	??_setRFSW_AdjControl+1,w
  7213  0DCD  00D6               	movwf	setProductData@value
  7214  0DCE  3011               	movlw	17
  7215  0DCF  319D  2530  318D   	fcall	_setProductData
  7216                           
  7217                           ;RF_Control_B1.c: 466: setProductData((20 + sw), RF_Data[9]);
  7218  0DD2  0022               	movlb	2	; select bank2
  7219  0DD3  0829               	movf	(_RF_Data^(0+256)+9),w
  7220  0DD4  0020               	movlb	0	; select bank0
  7221  0DD5  00DB               	movwf	??_setRFSW_AdjControl
  7222  0DD6  085B               	movf	??_setRFSW_AdjControl,w
  7223  0DD7  00D6               	movwf	setProductData@value
  7224  0DD8  085E               	movf	setRFSW_AdjControl@sw,w
  7225  0DD9  3E14               	addlw	20
  7226  0DDA  319D  2530  318D   	fcall	_setProductData
  7227                           
  7228                           ;RF_Control_B1.c: 474: setMemory_Modify(1);
  7229  0DDD  3001               	movlw	1
  7230  0DDE  319D  25F6  318D   	fcall	_setMemory_Modify
  7231                           
  7232                           ;RF_Control_B1.c: 478: if (status == 1) {
  7233  0DE1  0020               	movlb	0	; select bank0
  7234  0DE2  085D               	movf	setRFSW_AdjControl@status,w
  7235  0DE3  3A01               	xorlw	1
  7236  0DE4  1D03               	skipz
  7237  0DE5  2E06               	goto	l10657
  7238                           
  7239                           ;RF_Control_B1.c: 480: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(RF_D
      +                          ata[9]));
  7240  0DE6  0022               	movlb	2	; select bank2
  7241  0DE7  0829               	movf	(_RF_Data^(0+256)+9),w
  7242  0DE8  3188  20F7  318D   	fcall	_getDimmerLights_PercentToValue
  7243  0DEB  0020               	movlb	0	; select bank0
  7244  0DEC  00DB               	movwf	??_setRFSW_AdjControl
  7245  0DED  085B               	movf	??_setRFSW_AdjControl,w
  7246  0DEE  00D8               	movwf	setDimmerIntr_MaxmumValue@value
  7247  0DEF  085E               	movf	setRFSW_AdjControl@sw,w
  7248  0DF0  3192  2218  318D   	fcall	_setDimmerIntr_MaxmumValue
  7249                           
  7250                           ;RF_Control_B1.c: 481: setDimmerIntr_Dimming_RF(sw, 1);
  7251  0DF3  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  7252  0DF4  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  7253  0DF5  0020               	movlb	0	; select bank0
  7254  0DF6  085E               	movf	setRFSW_AdjControl@sw,w
  7255  0DF7  3195  2556  318D   	fcall	_setDimmerIntr_Dimming_RF
  7256                           
  7257                           ;RF_Control_B1.c: 483: setTxData();
  7258  0DFA  319C  24D2  318D   	fcall	_setTxData
  7259                           
  7260                           ;RF_Control_B1.c: 485: setBuz(1, 100);
  7261  0DFD  3064               	movlw	100
  7262  0DFE  0020               	movlb	0	; select bank0
  7263  0DFF  00A4               	movwf	setBuz@time
  7264  0E00  3000               	movlw	0
  7265  0E01  00A5               	movwf	setBuz@time+1
  7266  0E02  3001               	movlw	1
  7267  0E03  3188  2050         	fcall	_setBuz
  7268                           
  7269                           ;RF_Control_B1.c: 486: } else if (status == 0) {
  7270  0E05  0008               	return
  7271  0E06                     l10657:	
  7272  0E06  0020               	movlb	0	; select bank0
  7273  0E07  08DD               	movf	setRFSW_AdjControl@status,f
  7274  0E08  1D03               	skipz
  7275  0E09  0008               	return
  7276                           
  7277                           ;RF_Control_B1.c: 490: setDimmerLights_DimmingRun(sw, 1);
  7278  0E0A  01F4               	clrf	setDimmerLights_DimmingRun@command
  7279  0E0B  0AF4               	incf	setDimmerLights_DimmingRun@command,f
  7280  0E0C  085E               	movf	setRFSW_AdjControl@sw,w
  7281  0E0D  319F  2781  318D   	fcall	_setDimmerLights_DimmingRun
  7282                           
  7283                           ;RF_Control_B1.c: 491: setDimmerLights_SwOn(sw);
  7284  0E10  0020               	movlb	0	; select bank0
  7285  0E11  085E               	movf	setRFSW_AdjControl@sw,w
  7286  0E12  3187  2766  318D   	fcall	_setDimmerLights_SwOn
  7287                           
  7288                           ;RF_Control_B1.c: 492: setDimmerLights_SwOff(sw);
  7289  0E15  0020               	movlb	0	; select bank0
  7290  0E16  085E               	movf	setRFSW_AdjControl@sw,w
  7291  0E17  3194  2432         	fcall	_setDimmerLights_SwOff
  7292  0E19  0008               	return
  7293  0E1A                     __end_of_setRFSW_AdjControl:	
  7294                           
  7295                           	psect	text26
  7296  1F81                     __ptext26:	
  7297 ;; *************** function _setDimmerLights_DimmingRun *****************
  7298 ;; Defined at:
  7299 ;;		line 1272 in file "../src/Dimmer_B1.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  lights          1    wreg     unsigned char 
  7302 ;;  command         1    4[COMMON] unsigned char 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  lights          1    6[COMMON] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;		None               void
  7307 ;; Registers used:
  7308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;Total ram usage:        3 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    4
  7321 ;; This function calls:
  7322 ;;		_DimmerLights_SelectPointer
  7323 ;; This function is called by:
  7324 ;;		_setRFSW_AdjControl
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           
  7329                           ;psect for function _setDimmerLights_DimmingRun
  7330  1F81                     _setDimmerLights_DimmingRun:	
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _setDimmerLights_DimmingRun: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7334                           ;setDimmerLights_DimmingRun@lights stored from wreg
  7335  1F81  00F6               	movwf	setDimmerLights_DimmingRun@lights
  7336                           
  7337                           ;Dimmer_B1.c: 1273: DimmerLights_SelectPointer(lights);
  7338  1F82  0876               	movf	setDimmerLights_DimmingRun@lights,w
  7339  1F83  3191  2193         	fcall	_DimmerLights_SelectPointer
  7340                           
  7341                           ;Dimmer_B1.c: 1274: DimmerLights->DimmingRun = command == 1 ? 1 : 0;
  7342  1F85  0874               	movf	setDimmerLights_DimmingRun@command,w
  7343  1F86  3A01               	xorlw	1
  7344  1F87  3000               	movlw	0
  7345  1F88  1903               	skipnz
  7346  1F89  3001               	movlw	1
  7347  1F8A  00F5               	movwf	??_setDimmerLights_DimmingRun
  7348  1F8B  0020               	movlb	0	; select bank0
  7349  1F8C  0A6A               	incf	_DimmerLights,w
  7350  1F8D  0086               	movwf	6
  7351  1F8E  3001               	movlw	1	; select bank2/3
  7352  1F8F  0087               	movwf	7
  7353  1F90  0EF5               	swapf	??_setDimmerLights_DimmingRun,f
  7354  1F91  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7355  1F92  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7356  1F93  0801               	movf	1,w
  7357  1F94  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7358  1F95  39BF               	andlw	-65
  7359  1F96  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7360  1F97  0081               	movwf	1
  7361  1F98  0008               	return
  7362  1F99                     __end_of_setDimmerLights_DimmingRun:	
  7363                           
  7364                           	psect	text27
  7365  1DC9                     __ptext27:	
  7366 ;; *************** function _getRF_KeyStatus *****************
  7367 ;; Defined at:
  7368 ;;		line 167 in file "../src/RF_Control_B1.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;		None
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  key             1    3[COMMON] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      unsigned char 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;Total ram usage:        3 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    3
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_setRF_Main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _getRF_KeyStatus
  7398  1DC9                     _getRF_KeyStatus:	
  7399                           
  7400                           ;RF_Control_B1.c: 168: char key = 0;
  7401                           
  7402                           ;incstack = 0
  7403                           ; Regs used in _getRF_KeyStatus: [wreg+status,2]
  7404  1DC9  01F3               	clrf	getRF_KeyStatus@key
  7405                           
  7406                           ;RF_Control_B1.c: 170: key = (RA0 == 1 || RA6 == 1 || RA4 == 1) ? 1 : 0;
  7407  1DCA  01F4               	clrf	_getRF_KeyStatus$5789
  7408  1DCB  0AF4               	incf	_getRF_KeyStatus$5789,f
  7409  1DCC  0020               	movlb	0	; select bank0
  7410  1DCD  1C0C               	btfss	12,0	;volatile
  7411  1DCE  1B0C               	btfsc	12,6	;volatile
  7412  1DCF  2DD2               	goto	l7667
  7413  1DD0  1E0C               	btfss	12,4	;volatile
  7414  1DD1  01F4               	clrf	_getRF_KeyStatus$5789
  7415  1DD2                     l7667:	
  7416  1DD2  0874               	movf	_getRF_KeyStatus$5789,w
  7417  1DD3  00F2               	movwf	??_getRF_KeyStatus
  7418  1DD4  0872               	movf	??_getRF_KeyStatus,w
  7419  1DD5  00F3               	movwf	getRF_KeyStatus@key
  7420                           
  7421                           ;RF_Control_B1.c: 184: return key;
  7422  1DD6  0873               	movf	getRF_KeyStatus@key,w
  7423  1DD7  0008               	return
  7424  1DD8                     __end_of_getRF_KeyStatus:	
  7425                           
  7426                           	psect	text28
  7427  1E46                     __ptext28:	
  7428 ;; *************** function _getBuz_GO *****************
  7429 ;; Defined at:
  7430 ;;		line 82 in file "../src/Buzzer_B1.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;		None
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  i               2    6[COMMON] int 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2    2[COMMON] int 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;Total ram usage:        6 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:    3
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_setRF_Main
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _getBuz_GO
  7460  1E46                     _getBuz_GO:	
  7461                           
  7462                           ;Buzzer_B1.c: 83: int i = Buz1.GO;
  7463                           
  7464                           ;incstack = 0
  7465                           ; Regs used in _getBuz_GO: [wreg+status,2+status,0]
  7466  1E46  0021               	movlb	1	; select bank1
  7467  1E47  0C4C               	rrf	_Buz1^(0+128),w
  7468  1E48  3901               	andlw	1
  7469  1E49  00F4               	movwf	??_getBuz_GO
  7470  1E4A  01F5               	clrf	??_getBuz_GO+1
  7471  1E4B  0874               	movf	??_getBuz_GO,w
  7472  1E4C  00F6               	movwf	getBuz_GO@i
  7473  1E4D  0875               	movf	??_getBuz_GO+1,w
  7474  1E4E  00F7               	movwf	getBuz_GO@i+1
  7475                           
  7476                           ;Buzzer_B1.c: 84: return i;
  7477  1E4F  0877               	movf	getBuz_GO@i+1,w
  7478  1E50  01F3               	clrf	?_getBuz_GO+1
  7479  1E51  07F3               	addwf	?_getBuz_GO+1,f
  7480  1E52  0876               	movf	getBuz_GO@i,w
  7481  1E53  01F2               	clrf	?_getBuz_GO
  7482  1E54  07F2               	addwf	?_getBuz_GO,f
  7483  1E55  0008               	return
  7484  1E56                     __end_of_getBuz_GO:	
  7485                           
  7486                           	psect	text29
  7487  13FB                     __ptext29:	
  7488 ;; *************** function ___lwdiv *****************
  7489 ;; Defined at:
  7490 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  divisor         2    2[COMMON] unsigned int 
  7493 ;;  dividend        2    4[COMMON] unsigned int 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  quotient        2    1[BANK0 ] unsigned int 
  7496 ;;  counter         1    0[BANK0 ] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  2    2[COMMON] unsigned int 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;Total ram usage:        8 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    3
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_setRF_Main
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           
  7521                           ;psect for function ___lwdiv
  7522  13FB                     ___lwdiv:	
  7523                           
  7524                           ;incstack = 0
  7525                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7526  13FB  0020               	movlb	0	; select bank0
  7527  13FC  01A1               	clrf	___lwdiv@quotient
  7528  13FD  01A2               	clrf	___lwdiv@quotient+1
  7529  13FE  0873               	movf	___lwdiv@divisor+1,w
  7530  13FF  0472               	iorwf	___lwdiv@divisor,w
  7531  1400  1903               	skipnz
  7532  1401  2C2B               	goto	l11149
  7533  1402  01A0               	clrf	___lwdiv@counter
  7534  1403  0AA0               	incf	___lwdiv@counter,f
  7535  1404                     l11137:	
  7536  1404  1BF3               	btfsc	___lwdiv@divisor+1,7
  7537  1405  2C10               	goto	l11139
  7538  1406  3001               	movlw	1
  7539  1407                     u13155:	
  7540  1407  35F2               	lslf	___lwdiv@divisor,f
  7541  1408  0DF3               	rlf	___lwdiv@divisor+1,f
  7542  1409  0B89               	decfsz	9,f
  7543  140A  2C07               	goto	u13155
  7544  140B  3001               	movlw	1
  7545  140C  00F6               	movwf	??___lwdiv
  7546  140D  0876               	movf	??___lwdiv,w
  7547  140E  07A0               	addwf	___lwdiv@counter,f
  7548  140F  2C04               	goto	l11137
  7549  1410                     l11139:	
  7550  1410  3001               	movlw	1
  7551  1411                     u13175:	
  7552  1411  35A1               	lslf	___lwdiv@quotient,f
  7553  1412  0DA2               	rlf	___lwdiv@quotient+1,f
  7554  1413  0B89               	decfsz	9,f
  7555  1414  2C11               	goto	u13175
  7556  1415  0873               	movf	___lwdiv@divisor+1,w
  7557  1416  0275               	subwf	___lwdiv@dividend+1,w
  7558  1417  1D03               	skipz
  7559  1418  2C1B               	goto	u13185
  7560  1419  0872               	movf	___lwdiv@divisor,w
  7561  141A  0274               	subwf	___lwdiv@dividend,w
  7562  141B                     u13185:	
  7563  141B  1C03               	skipc
  7564  141C  2C22               	goto	l11145
  7565  141D  0872               	movf	___lwdiv@divisor,w
  7566  141E  02F4               	subwf	___lwdiv@dividend,f
  7567  141F  0873               	movf	___lwdiv@divisor+1,w
  7568  1420  3BF5               	subwfb	___lwdiv@dividend+1,f
  7569  1421  1421               	bsf	___lwdiv@quotient,0
  7570  1422                     l11145:	
  7571  1422  3001               	movlw	1
  7572  1423                     u13195:	
  7573  1423  36F3               	lsrf	___lwdiv@divisor+1,f
  7574  1424  0CF2               	rrf	___lwdiv@divisor,f
  7575  1425  0B89               	decfsz	9,f
  7576  1426  2C23               	goto	u13195
  7577  1427  3001               	movlw	1
  7578  1428  02A0               	subwf	___lwdiv@counter,f
  7579  1429  1D03               	btfss	3,2
  7580  142A  2C10               	goto	l11139
  7581  142B                     l11149:	
  7582  142B  0822               	movf	___lwdiv@quotient+1,w
  7583  142C  01F3               	clrf	?___lwdiv+1
  7584  142D  07F3               	addwf	?___lwdiv+1,f
  7585  142E  0821               	movf	___lwdiv@quotient,w
  7586  142F  01F2               	clrf	?___lwdiv
  7587  1430  07F2               	addwf	?___lwdiv,f
  7588  1431  0008               	return
  7589  1432                     __end_of___lwdiv:	
  7590                           
  7591                           	psect	text30
  7592  1CE7                     __ptext30:	
  7593 ;; *************** function _RF_RxDisable *****************
  7594 ;; Defined at:
  7595 ;;		line 155 in file "../src/RF_Control_B1.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;		None               void
  7602 ;; Registers used:
  7603 ;;		None
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    3
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_setRF_Main
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _RF_RxDisable
  7625  1CE7                     _RF_RxDisable:	
  7626                           
  7627                           ;RF_Control_B1.c: 156: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _RF_RxDisable: []
  7631  1CE7  0021               	movlb	1	; select bank1
  7632  1CE8  18B0               	btfsc	_RF1^(0+128),1
  7633  1CE9  2CEC               	goto	l2440
  7634  1CEA  1DB0               	btfss	_RF1^(0+128),3
  7635  1CEB  0008               	return
  7636  1CEC                     l2440:	
  7637                           
  7638                           ;RF_Control_B1.c: 157: RF1.RxStatus = 0;
  7639  1CEC  11B0               	bcf	_RF1^(0+128),3
  7640                           
  7641                           ;RF_Control_B1.c: 158: RF1.ReceiveGO = 0;
  7642  1CED  10B0               	bcf	_RF1^(0+128),1
  7643  1CEE  0008               	return
  7644  1CEF                     __end_of_RF_RxDisable:	
  7645                           
  7646                           	psect	text31
  7647  0B49                     __ptext31:	
  7648 ;; *************** function _CC2500_TxData *****************
  7649 ;; Defined at:
  7650 ;;		line 32 in file "../src/CC2500_B1.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  loop_e          1    7[COMMON] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;		None               void
  7657 ;; Registers used:
  7658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        2 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    5
  7671 ;; This function calls:
  7672 ;;		_CC2500_WriteByte
  7673 ;;		_CC2500_WriteCommand
  7674 ;;		_RF_Timeout_Counter
  7675 ;;		_setRF_TimeoutCleared
  7676 ;; This function is called by:
  7677 ;;		_setRF_Main
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function _CC2500_TxData
  7683  0B49                     _CC2500_TxData:	
  7684                           
  7685                           ;CC2500_B1.c: 33: unsigned char loop_e;
  7686                           ;CC2500_B1.c: 35: CC2500_WriteCommand(0x36);
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7690  0B49  3036               	movlw	54
  7691  0B4A  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7692                           
  7693                           ;CC2500_B1.c: 36: CC2500_WriteCommand(0x3B);
  7694  0B4D  303B               	movlw	59
  7695  0B4E  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7696                           
  7697                           ;CC2500_B1.c: 38: RC4 = 0;
  7698  0B51  0020               	movlb	0	; select bank0
  7699  0B52  120E               	bcf	14,4	;volatile
  7700                           
  7701                           ;CC2500_B1.c: 39: SPI0Buffer = 0x3F + 0x40;
  7702  0B53  307F               	movlw	127
  7703  0B54  00F6               	movwf	??_CC2500_TxData
  7704  0B55  0876               	movf	??_CC2500_TxData,w
  7705  0B56  00EB               	movwf	_SPI0Buffer
  7706                           
  7707                           ;CC2500_B1.c: 40: while (RC2 == 1 && RF1.Timeout == 0) {
  7708  0B57  2B5B               	goto	l10903
  7709  0B58                     l10901:	
  7710                           
  7711                           ;CC2500_B1.c: 41: RF_Timeout_Counter();
  7712  0B58  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7713  0B5B                     l10903:	
  7714  0B5B  0020               	movlb	0	; select bank0
  7715  0B5C  1D0E               	btfss	14,2	;volatile
  7716  0B5D  2B61               	goto	l10907
  7717  0B5E  0021               	movlb	1	; select bank1
  7718  0B5F  1F31               	btfss	(_RF1^(0+128)+1),6
  7719  0B60  2B58               	goto	l10901
  7720  0B61                     l10907:	
  7721                           
  7722                           ;CC2500_B1.c: 42: };
  7723                           ;CC2500_B1.c: 43: setRF_TimeoutCleared();
  7724  0B61  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7725                           
  7726                           ;CC2500_B1.c: 45: CC2500_WriteByte();
  7727  0B64  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7728                           
  7729                           ;CC2500_B1.c: 46: SPI0Buffer = Tx_Length;
  7730  0B67  0020               	movlb	0	; select bank0
  7731  0B68  086D               	movf	_Tx_Length,w
  7732  0B69  00F6               	movwf	??_CC2500_TxData
  7733  0B6A  0876               	movf	??_CC2500_TxData,w
  7734  0B6B  00EB               	movwf	_SPI0Buffer
  7735                           
  7736                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  7737  0B6C  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7738                           
  7739                           ;CC2500_B1.c: 48: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  7740  0B6F  01F7               	clrf	CC2500_TxData@loop_e
  7741  0B70                     l10921:	
  7742  0B70  0020               	movlb	0	; select bank0
  7743  0B71  086D               	movf	_Tx_Length,w
  7744  0B72  0277               	subwf	CC2500_TxData@loop_e,w
  7745  0B73  1803               	btfsc	3,0
  7746  0B74  2B87               	goto	l275
  7747                           
  7748                           ;CC2500_B1.c: 49: SPI0Buffer = RF_Data[loop_e];
  7749  0B75  0877               	movf	CC2500_TxData@loop_e,w
  7750  0B76  3E20               	addlw	_RF_Data& (0+255)
  7751  0B77  0086               	movwf	6
  7752  0B78  3001               	movlw	1	; select bank2/3
  7753  0B79  0087               	movwf	7
  7754  0B7A  0801               	movf	1,w
  7755  0B7B  00F6               	movwf	??_CC2500_TxData
  7756  0B7C  0876               	movf	??_CC2500_TxData,w
  7757  0B7D  0020               	movlb	0	; select bank0
  7758  0B7E  00EB               	movwf	_SPI0Buffer
  7759                           
  7760                           ;CC2500_B1.c: 50: CC2500_WriteByte();
  7761  0B7F  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7762  0B82  3001               	movlw	1
  7763  0B83  00F6               	movwf	??_CC2500_TxData
  7764  0B84  0876               	movf	??_CC2500_TxData,w
  7765  0B85  07F7               	addwf	CC2500_TxData@loop_e,f
  7766  0B86  2B70               	goto	l10921
  7767  0B87                     l275:	
  7768                           
  7769                           ;CC2500_B1.c: 51: }
  7770                           ;CC2500_B1.c: 52: RC4 = 1;
  7771  0B87  160E               	bsf	14,4	;volatile
  7772                           
  7773                           ;CC2500_B1.c: 53: CC2500_WriteCommand(0x35);
  7774  0B88  3035               	movlw	53
  7775  0B89  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7776                           
  7777                           ;CC2500_B1.c: 54: while (RB0 == 0 && RF1.Timeout == 0) {
  7778  0B8C  2B90               	goto	l10927
  7779  0B8D                     l10925:	
  7780                           
  7781                           ;CC2500_B1.c: 55: RF_Timeout_Counter();
  7782  0B8D  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7783  0B90                     l10927:	
  7784  0B90  0020               	movlb	0	; select bank0
  7785  0B91  180D               	btfsc	13,0	;volatile
  7786  0B92  2B96               	goto	l10931
  7787  0B93  0021               	movlb	1	; select bank1
  7788  0B94  1F31               	btfss	(_RF1^(0+128)+1),6
  7789  0B95  2B8D               	goto	l10925
  7790  0B96                     l10931:	
  7791                           
  7792                           ;CC2500_B1.c: 56: };
  7793                           ;CC2500_B1.c: 57: setRF_TimeoutCleared();
  7794  0B96  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7795                           
  7796                           ;CC2500_B1.c: 59: while (RB0 == 1 && RF1.Timeout == 0) {
  7797  0B99  2B9D               	goto	l10935
  7798  0B9A                     l10933:	
  7799                           
  7800                           ;CC2500_B1.c: 60: RF_Timeout_Counter();
  7801  0B9A  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7802  0B9D                     l10935:	
  7803  0B9D  0020               	movlb	0	; select bank0
  7804  0B9E  1C0D               	btfss	13,0	;volatile
  7805  0B9F  2BA3               	goto	l10939
  7806  0BA0  0021               	movlb	1	; select bank1
  7807  0BA1  1F31               	btfss	(_RF1^(0+128)+1),6
  7808  0BA2  2B9A               	goto	l10933
  7809  0BA3                     l10939:	
  7810                           
  7811                           ;CC2500_B1.c: 61: };
  7812                           ;CC2500_B1.c: 62: setRF_TimeoutCleared();
  7813  0BA3  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7814                           
  7815                           ;CC2500_B1.c: 64: CC2500_WriteCommand(0x36);
  7816  0BA6  3036               	movlw	54
  7817  0BA7  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7818                           
  7819                           ;CC2500_B1.c: 65: CC2500_WriteCommand(0x3B);
  7820  0BAA  303B               	movlw	59
  7821  0BAB  319F  2799         	fcall	_CC2500_WriteCommand
  7822                           
  7823                           ;CC2500_B1.c: 67: Transceive_OK = 1;
  7824  0BAD  14F9               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  7825  0BAE  0008               	return
  7826  0BAF                     __end_of_CC2500_TxData:	
  7827                           
  7828                           	psect	text32
  7829  09B5                     __ptext32:	
  7830 ;; *************** function _CC2500_RxData *****************
  7831 ;; Defined at:
  7832 ;;		line 73 in file "../src/CC2500_B1.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  loop_f          1    7[COMMON] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;		None               void
  7839 ;; Registers used:
  7840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:        2 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    5
  7853 ;; This function calls:
  7854 ;;		_CC2500_ReadByte
  7855 ;;		_CC2500_ReadStatus
  7856 ;;		_CC2500_WriteByte
  7857 ;;		_CC2500_WriteCommand
  7858 ;;		_RF_Timeout_Counter
  7859 ;;		_setRF_TimeoutCleared
  7860 ;; This function is called by:
  7861 ;;		_setRF_Main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _CC2500_RxData
  7867  09B5                     _CC2500_RxData:	
  7868                           
  7869                           ;CC2500_B1.c: 74: unsigned char loop_f;
  7870                           ;CC2500_B1.c: 78: if (RB0 == 0) {
  7871                           
  7872                           ;incstack = 0
  7873                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7874  09B5  0020               	movlb	0	; select bank0
  7875  09B6  180D               	btfsc	13,0	;volatile
  7876  09B7  0008               	return
  7877                           
  7878                           ;CC2500_B1.c: 87: CC2500_ReadStatus(0x3B);
  7879  09B8  303B               	movlw	59
  7880  09B9  3192  227E  3189   	fcall	_CC2500_ReadStatus
  7881                           
  7882                           ;CC2500_B1.c: 89: if (s_data != 0) {
  7883  09BC  0021               	movlb	1	; select bank1
  7884  09BD  0867               	movf	_s_data^(0+128),w
  7885  09BE  1903               	btfsc	3,2
  7886  09BF  0008               	return
  7887                           
  7888                           ;CC2500_B1.c: 90: RC4 = 0;
  7889  09C0  0020               	movlb	0	; select bank0
  7890  09C1  120E               	bcf	14,4	;volatile
  7891                           
  7892                           ;CC2500_B1.c: 91: SPI0Buffer = 0x3F + 0xC0;
  7893  09C2  30FF               	movlw	255
  7894  09C3  00F6               	movwf	??_CC2500_RxData
  7895  09C4  0876               	movf	??_CC2500_RxData,w
  7896  09C5  00EB               	movwf	_SPI0Buffer
  7897                           
  7898                           ;CC2500_B1.c: 93: while (RC2 == 1 && RF1.Timeout == 0) {
  7899  09C6  29CA               	goto	l10959
  7900  09C7                     l10957:	
  7901                           
  7902                           ;CC2500_B1.c: 94: RF_Timeout_Counter();
  7903  09C7  319E  26E7  3189   	fcall	_RF_Timeout_Counter
  7904  09CA                     l10959:	
  7905  09CA  0020               	movlb	0	; select bank0
  7906  09CB  1D0E               	btfss	14,2	;volatile
  7907  09CC  29D0               	goto	l10963
  7908  09CD  0021               	movlb	1	; select bank1
  7909  09CE  1F31               	btfss	(_RF1^(0+128)+1),6
  7910  09CF  29C7               	goto	l10957
  7911  09D0                     l10963:	
  7912                           
  7913                           ;CC2500_B1.c: 95: };
  7914                           ;CC2500_B1.c: 96: setRF_TimeoutCleared();
  7915  09D0  319C  24AC  3189   	fcall	_setRF_TimeoutCleared
  7916                           
  7917                           ;CC2500_B1.c: 98: CC2500_WriteByte();
  7918  09D3  319E  26BE  3189   	fcall	_CC2500_WriteByte
  7919                           
  7920                           ;CC2500_B1.c: 99: CC2500_ReadByte();
  7921  09D6  319F  2752  3189   	fcall	_CC2500_ReadByte
  7922                           
  7923                           ;CC2500_B1.c: 100: Rx_Length = SPI0Buffer;
  7924  09D9  0020               	movlb	0	; select bank0
  7925  09DA  086B               	movf	_SPI0Buffer,w
  7926  09DB  00F6               	movwf	??_CC2500_RxData
  7927  09DC  0876               	movf	??_CC2500_RxData,w
  7928  09DD  0021               	movlb	1	; select bank1
  7929  09DE  00E3               	movwf	_Rx_Length^(0+128)
  7930                           
  7931                           ;CC2500_B1.c: 101: for (loop_f = 0; loop_f < Rx_Length; loop_f++) {
  7932  09DF  01F7               	clrf	CC2500_RxData@loop_f
  7933  09E0                     l10979:	
  7934  09E0  0021               	movlb	1	; select bank1
  7935  09E1  0863               	movf	_Rx_Length^(0+128),w
  7936  09E2  0277               	subwf	CC2500_RxData@loop_f,w
  7937  09E3  1803               	btfsc	3,0
  7938  09E4  29F7               	goto	l10981
  7939                           
  7940                           ;CC2500_B1.c: 102: CC2500_ReadByte();
  7941  09E5  319F  2752  3189   	fcall	_CC2500_ReadByte
  7942                           
  7943                           ;CC2500_B1.c: 103: RF_Data[loop_f] = SPI0Buffer;
  7944  09E8  0020               	movlb	0	; select bank0
  7945  09E9  086B               	movf	_SPI0Buffer,w
  7946  09EA  00F6               	movwf	??_CC2500_RxData
  7947  09EB  0877               	movf	CC2500_RxData@loop_f,w
  7948  09EC  3E20               	addlw	_RF_Data& (0+255)
  7949  09ED  0086               	movwf	6
  7950  09EE  3001               	movlw	1	; select bank2/3
  7951  09EF  0087               	movwf	7
  7952  09F0  0876               	movf	??_CC2500_RxData,w
  7953  09F1  0081               	movwf	1
  7954  09F2  3001               	movlw	1
  7955  09F3  00F6               	movwf	??_CC2500_RxData
  7956  09F4  0876               	movf	??_CC2500_RxData,w
  7957  09F5  07F7               	addwf	CC2500_RxData@loop_f,f
  7958  09F6  29E0               	goto	l10979
  7959  09F7                     l10981:	
  7960                           
  7961                           ;CC2500_B1.c: 104: }
  7962                           ;CC2500_B1.c: 105: CC2500_ReadByte();
  7963  09F7  319F  2752  3189   	fcall	_CC2500_ReadByte
  7964                           
  7965                           ;CC2500_B1.c: 106: RSSI = SPI0Buffer;
  7966  09FA  0020               	movlb	0	; select bank0
  7967  09FB  086B               	movf	_SPI0Buffer,w
  7968  09FC  00F6               	movwf	??_CC2500_RxData
  7969  09FD  0876               	movf	??_CC2500_RxData,w
  7970  09FE  0021               	movlb	1	; select bank1
  7971  09FF  00E2               	movwf	_RSSI^(0+128)
  7972                           
  7973                           ;CC2500_B1.c: 107: CC2500_ReadByte();
  7974  0A00  319F  2752  3189   	fcall	_CC2500_ReadByte
  7975                           
  7976                           ;CC2500_B1.c: 108: CRC = SPI0Buffer;
  7977  0A03  0020               	movlb	0	; select bank0
  7978  0A04  086B               	movf	_SPI0Buffer,w
  7979  0A05  00F6               	movwf	??_CC2500_RxData
  7980  0A06  0876               	movf	??_CC2500_RxData,w
  7981  0A07  0021               	movlb	1	; select bank1
  7982  0A08  00DF               	movwf	_CRC^(0+128)
  7983                           
  7984                           ;CC2500_B1.c: 109: RC4 = 1;
  7985  0A09  0020               	movlb	0	; select bank0
  7986  0A0A  160E               	bsf	14,4	;volatile
  7987                           
  7988                           ;CC2500_B1.c: 110: if (CRC & 0x80)
  7989  0A0B  0021               	movlb	1	; select bank1
  7990  0A0C  1BDF               	btfsc	_CRC^(0+128),7
  7991                           
  7992                           ;CC2500_B1.c: 111: Receive_OK = 1;
  7993  0A0D  1479               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  7994                           
  7995                           ;CC2500_B1.c: 113: RF1.RxStatus = 0;
  7996  0A0E  11B0               	bcf	_RF1^(0+128),3
  7997                           
  7998                           ;CC2500_B1.c: 114: RF1.ReceiveGO = 1;
  7999  0A0F  14B0               	bsf	_RF1^(0+128),1
  8000                           
  8001                           ;CC2500_B1.c: 115: CC2500_WriteCommand(0x36);
  8002  0A10  3036               	movlw	54
  8003  0A11  319F  2799  3189   	fcall	_CC2500_WriteCommand
  8004                           
  8005                           ;CC2500_B1.c: 116: CC2500_WriteCommand(0x3A);
  8006  0A14  303A               	movlw	58
  8007  0A15  319F  2799         	fcall	_CC2500_WriteCommand
  8008  0A17  0021               	movlb	1	; select bank1
  8009  0A18  0008               	return
  8010  0A19                     __end_of_CC2500_RxData:	
  8011                           
  8012                           	psect	text33
  8013  127E                     __ptext33:	
  8014 ;; *************** function _CC2500_ReadStatus *****************
  8015 ;; Defined at:
  8016 ;;		line 308 in file "../src/CC2500_B1.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  status_addr     1    wreg     unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  status_addr     1    5[COMMON] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;		None               void
  8023 ;; Registers used:
  8024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:        2 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    4
  8037 ;; This function calls:
  8038 ;;		_CC2500_ReadByte
  8039 ;;		_CC2500_WriteByte
  8040 ;;		_RF_Timeout_Counter
  8041 ;;		_setRF_TimeoutCleared
  8042 ;; This function is called by:
  8043 ;;		_CC2500_RxData
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           
  8048                           ;psect for function _CC2500_ReadStatus
  8049  127E                     _CC2500_ReadStatus:	
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in _CC2500_ReadStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8053                           ;CC2500_ReadStatus@status_addr stored from wreg
  8054  127E  00F5               	movwf	CC2500_ReadStatus@status_addr
  8055                           
  8056                           ;CC2500_B1.c: 309: RC4 = 0;
  8057  127F  0020               	movlb	0	; select bank0
  8058  1280  120E               	bcf	14,4	;volatile
  8059                           
  8060                           ;CC2500_B1.c: 310: SPI0Buffer = status_addr + 0xC0;
  8061  1281  0875               	movf	CC2500_ReadStatus@status_addr,w
  8062  1282  3EC0               	addlw	192
  8063  1283  00F4               	movwf	??_CC2500_ReadStatus
  8064  1284  0874               	movf	??_CC2500_ReadStatus,w
  8065  1285  00EB               	movwf	_SPI0Buffer
  8066                           
  8067                           ;CC2500_B1.c: 312: while (RC2 == 1 && RF1.Timeout == 0) {
  8068  1286  2A8A               	goto	l10691
  8069  1287                     l10689:	
  8070                           
  8071                           ;CC2500_B1.c: 313: RF_Timeout_Counter();
  8072  1287  319E  26E7  3192   	fcall	_RF_Timeout_Counter
  8073  128A                     l10691:	
  8074  128A  0020               	movlb	0	; select bank0
  8075  128B  1D0E               	btfss	14,2	;volatile
  8076  128C  2A90               	goto	l10695
  8077  128D  0021               	movlb	1	; select bank1
  8078  128E  1F31               	btfss	(_RF1^(0+128)+1),6
  8079  128F  2A87               	goto	l10689
  8080  1290                     l10695:	
  8081                           
  8082                           ;CC2500_B1.c: 314: };
  8083                           ;CC2500_B1.c: 315: setRF_TimeoutCleared();
  8084  1290  319C  24AC  3192   	fcall	_setRF_TimeoutCleared
  8085                           
  8086                           ;CC2500_B1.c: 317: CC2500_WriteByte();
  8087  1293  319E  26BE  3192   	fcall	_CC2500_WriteByte
  8088                           
  8089                           ;CC2500_B1.c: 318: CC2500_ReadByte();
  8090  1296  319F  2752         	fcall	_CC2500_ReadByte
  8091                           
  8092                           ;CC2500_B1.c: 319: RC4 = 1;
  8093  1298  0020               	movlb	0	; select bank0
  8094  1299  160E               	bsf	14,4	;volatile
  8095                           
  8096                           ;CC2500_B1.c: 321: s_data = SPI0Buffer;
  8097  129A  086B               	movf	_SPI0Buffer,w
  8098  129B  00F4               	movwf	??_CC2500_ReadStatus
  8099  129C  0874               	movf	??_CC2500_ReadStatus,w
  8100  129D  0021               	movlb	1	; select bank1
  8101  129E  00E7               	movwf	_s_data^(0+128)
  8102  129F  0008               	return
  8103  12A0                     __end_of_CC2500_ReadStatus:	
  8104                           
  8105                           	psect	text34
  8106  1F52                     __ptext34:	
  8107 ;; *************** function _CC2500_ReadByte *****************
  8108 ;; Defined at:
  8109 ;;		line 242 in file "../src/CC2500_B1.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  loop_b          1    3[COMMON] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;		None               void
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;Total ram usage:        2 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    3
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_CC2500_RxData
  8134 ;;		_CC2500_ReadStatus
  8135 ;;		_CC2500_ReadREG
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _CC2500_ReadByte
  8141  1F52                     _CC2500_ReadByte:	
  8142                           
  8143                           ;CC2500_B1.c: 243: unsigned char loop_b;
  8144                           ;CC2500_B1.c: 244: for (loop_b = 0; loop_b < 8; loop_b++) {
  8145                           
  8146                           ;incstack = 0
  8147                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  8148  1F52  01F3               	clrf	CC2500_ReadByte@loop_b
  8149  1F53                     L1:	
  8150  1F53  3008               	movlw	8
  8151  1F54  0273               	subwf	CC2500_ReadByte@loop_b,w
  8152  1F55  1803               	btfsc	3,0
  8153  1F56  0008               	return
  8154                           
  8155                           ;CC2500_B1.c: 245: RC1 = 1;
  8156  1F57  0020               	movlb	0	; select bank0
  8157  1F58  148E               	bsf	14,1	;volatile
  8158                           
  8159                           ;CC2500_B1.c: 246: SPI0Buffer <<= 1;
  8160  1F59  1003               	clrc
  8161  1F5A  0DEB               	rlf	_SPI0Buffer,f
  8162                           
  8163                           ;CC2500_B1.c: 247: if (RC2 == 1)
  8164  1F5B  1D0E               	btfss	14,2	;volatile
  8165  1F5C  2F5F               	goto	l6857
  8166                           
  8167                           ;CC2500_B1.c: 248: SPI0Buffer |= 0x01;
  8168  1F5D  146B               	bsf	_SPI0Buffer,0
  8169  1F5E  2F63               	goto	l6859
  8170  1F5F                     l6857:	
  8171                           
  8172                           ;CC2500_B1.c: 249: else
  8173                           ;CC2500_B1.c: 250: SPI0Buffer &= 0xFE;
  8174  1F5F  30FE               	movlw	254
  8175  1F60  00F2               	movwf	??_CC2500_ReadByte
  8176  1F61  0872               	movf	??_CC2500_ReadByte,w
  8177  1F62  05EB               	andwf	_SPI0Buffer,f
  8178  1F63                     l6859:	
  8179                           
  8180                           ;CC2500_B1.c: 251: RC1 = 0;
  8181  1F63  108E               	bcf	14,1	;volatile
  8182  1F64  3001               	movlw	1
  8183  1F65  00F2               	movwf	??_CC2500_ReadByte
  8184  1F66  0872               	movf	??_CC2500_ReadByte,w
  8185  1F67  07F3               	addwf	CC2500_ReadByte@loop_b,f
  8186  1F68  2F53               	goto	L1
  8187  1F69                     __end_of_CC2500_ReadByte:	
  8188                           
  8189                           	psect	text35
  8190  1EFC                     __ptext35:	
  8191 ;; *************** function _CC2500_PowerOnInitial *****************
  8192 ;; Defined at:
  8193 ;;		line 126 in file "../src/CC2500_B1.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;		None               void
  8200 ;; Registers used:
  8201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    6
  8214 ;; This function calls:
  8215 ;;		_CC2500_ClearRXFIFO
  8216 ;;		_CC2500_ClearTXFIFO
  8217 ;;		_CC2500_FrequencyCabr
  8218 ;;		_CC2500_InitPATable
  8219 ;;		_CC2500_InitSetREG
  8220 ;;		_CC2500_PowerRST
  8221 ;;		_CC2500_SIDLEMode
  8222 ;; This function is called by:
  8223 ;;		_main
  8224 ;;		_setRF_Main
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function _CC2500_PowerOnInitial
  8230  1EFC                     _CC2500_PowerOnInitial:	
  8231                           
  8232                           ;CC2500_B1.c: 127: CC2500_PowerRST();
  8233                           
  8234                           ;incstack = 0
  8235                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8236  1EFC  3196  2657  319E   	fcall	_CC2500_PowerRST
  8237                           
  8238                           ;CC2500_B1.c: 128: CC2500_InitSetREG();
  8239  1EFF  3193  233A  319E   	fcall	_CC2500_InitSetREG
  8240                           
  8241                           ;CC2500_B1.c: 129: CC2500_InitPATable();
  8242  1F02  3191  2135  319E   	fcall	_CC2500_InitPATable
  8243                           
  8244                           ;CC2500_B1.c: 130: CC2500_ClearTXFIFO();
  8245  1F05  319C  24B4  319E   	fcall	_CC2500_ClearTXFIFO
  8246                           
  8247                           ;CC2500_B1.c: 131: CC2500_ClearRXFIFO();
  8248  1F08  319C  24B0  319E   	fcall	_CC2500_ClearRXFIFO
  8249                           
  8250                           ;CC2500_B1.c: 132: CC2500_FrequencyCabr();
  8251  1F0B  319D  2519  319E   	fcall	_CC2500_FrequencyCabr
  8252                           
  8253                           ;CC2500_B1.c: 133: CC2500_SIDLEMode();
  8254  1F0E  319C  24B8         	fcall	_CC2500_SIDLEMode
  8255  1F10  0008               	return
  8256  1F11                     __end_of_CC2500_PowerOnInitial:	
  8257                           
  8258                           	psect	text36
  8259  1CB8                     __ptext36:	
  8260 ;; *************** function _CC2500_SIDLEMode *****************
  8261 ;; Defined at:
  8262 ;;		line 216 in file "../src/CC2500_B1.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;		None               void
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:        0 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    5
  8283 ;; This function calls:
  8284 ;;		_CC2500_WriteCommand
  8285 ;; This function is called by:
  8286 ;;		_CC2500_PowerOnInitial
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _CC2500_SIDLEMode
  8292  1CB8                     _CC2500_SIDLEMode:	
  8293                           
  8294                           ;CC2500_B1.c: 217: CC2500_WriteCommand(0x36);
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8298  1CB8  3036               	movlw	54
  8299  1CB9  319F  2799         	fcall	_CC2500_WriteCommand
  8300  1CBB  0008               	return
  8301  1CBC                     __end_of_CC2500_SIDLEMode:	
  8302                           
  8303                           	psect	text37
  8304  1657                     __ptext37:	
  8305 ;; *************** function _CC2500_PowerRST *****************
  8306 ;; Defined at:
  8307 ;;		line 139 in file "../src/CC2500_B1.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;		None               void
  8314 ;; Registers used:
  8315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;Total ram usage:        1 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    4
  8328 ;; This function calls:
  8329 ;;		_CC2500_WriteByte
  8330 ;;		_DelayTime_1us
  8331 ;;		_RF_Timeout_Counter
  8332 ;;		_setRF_TimeoutCleared
  8333 ;; This function is called by:
  8334 ;;		_CC2500_PowerOnInitial
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _CC2500_PowerRST
  8340  1657                     _CC2500_PowerRST:	
  8341                           
  8342                           ;CC2500_B1.c: 140: RC1 = 0;
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8346  1657  0020               	movlb	0	; select bank0
  8347  1658  108E               	bcf	14,1	;volatile
  8348                           
  8349                           ;CC2500_B1.c: 141: RC0 = 0;
  8350  1659  100E               	bcf	14,0	;volatile
  8351                           
  8352                           ;CC2500_B1.c: 142: RC4 = 1;
  8353  165A  160E               	bsf	14,4	;volatile
  8354                           
  8355                           ;CC2500_B1.c: 143: DelayTime_1us(10);
  8356  165B  300A               	movlw	10
  8357  165C  00F2               	movwf	DelayTime_1us@count
  8358  165D  3000               	movlw	0
  8359  165E  00F3               	movwf	DelayTime_1us@count+1
  8360  165F  3192  22C4  3196   	fcall	_DelayTime_1us
  8361                           
  8362                           ;CC2500_B1.c: 144: RC4 = 0;
  8363  1662  0020               	movlb	0	; select bank0
  8364  1663  120E               	bcf	14,4	;volatile
  8365                           
  8366                           ;CC2500_B1.c: 145: DelayTime_1us(10);
  8367  1664  300A               	movlw	10
  8368  1665  00F2               	movwf	DelayTime_1us@count
  8369  1666  3000               	movlw	0
  8370  1667  00F3               	movwf	DelayTime_1us@count+1
  8371  1668  3192  22C4  3196   	fcall	_DelayTime_1us
  8372                           
  8373                           ;CC2500_B1.c: 146: RC4 = 1;
  8374  166B  0020               	movlb	0	; select bank0
  8375  166C  160E               	bsf	14,4	;volatile
  8376                           
  8377                           ;CC2500_B1.c: 147: DelayTime_1us(40);
  8378  166D  3028               	movlw	40
  8379  166E  00F2               	movwf	DelayTime_1us@count
  8380  166F  3000               	movlw	0
  8381  1670  00F3               	movwf	DelayTime_1us@count+1
  8382  1671  3192  22C4  3196   	fcall	_DelayTime_1us
  8383                           
  8384                           ;CC2500_B1.c: 148: RC4 = 0;
  8385  1674  0020               	movlb	0	; select bank0
  8386  1675  120E               	bcf	14,4	;volatile
  8387                           
  8388                           ;CC2500_B1.c: 149: SPI0Buffer = 0x30;
  8389  1676  3030               	movlw	48
  8390  1677  00F8               	movwf	??_CC2500_PowerRST
  8391  1678  0878               	movf	??_CC2500_PowerRST,w
  8392  1679  00EB               	movwf	_SPI0Buffer
  8393                           
  8394                           ;CC2500_B1.c: 150: while (RC2 == 1 && RF1.Timeout == 0) {
  8395  167A  2E7E               	goto	l10719
  8396  167B                     l10717:	
  8397                           
  8398                           ;CC2500_B1.c: 151: RF_Timeout_Counter();
  8399  167B  319E  26E7  3196   	fcall	_RF_Timeout_Counter
  8400  167E                     l10719:	
  8401  167E  0020               	movlb	0	; select bank0
  8402  167F  1D0E               	btfss	14,2	;volatile
  8403  1680  2E84               	goto	l10723
  8404  1681  0021               	movlb	1	; select bank1
  8405  1682  1F31               	btfss	(_RF1^(0+128)+1),6
  8406  1683  2E7B               	goto	l10717
  8407  1684                     l10723:	
  8408                           
  8409                           ;CC2500_B1.c: 152: };
  8410                           ;CC2500_B1.c: 153: setRF_TimeoutCleared();
  8411  1684  319C  24AC  3196   	fcall	_setRF_TimeoutCleared
  8412                           
  8413                           ;CC2500_B1.c: 154: CC2500_WriteByte();
  8414  1687  319E  26BE  3196   	fcall	_CC2500_WriteByte
  8415                           
  8416                           ;CC2500_B1.c: 155: while (RC2 == 1 && RF1.Timeout == 0) {
  8417  168A  2E8E               	goto	l10729
  8418  168B                     l10727:	
  8419                           
  8420                           ;CC2500_B1.c: 156: RF_Timeout_Counter();
  8421  168B  319E  26E7  3196   	fcall	_RF_Timeout_Counter
  8422  168E                     l10729:	
  8423  168E  0020               	movlb	0	; select bank0
  8424  168F  1D0E               	btfss	14,2	;volatile
  8425  1690  2E94               	goto	l10733
  8426  1691  0021               	movlb	1	; select bank1
  8427  1692  1F31               	btfss	(_RF1^(0+128)+1),6
  8428  1693  2E8B               	goto	l10727
  8429  1694                     l10733:	
  8430                           
  8431                           ;CC2500_B1.c: 157: };
  8432                           ;CC2500_B1.c: 158: setRF_TimeoutCleared();
  8433  1694  319C  24AC         	fcall	_setRF_TimeoutCleared
  8434                           
  8435                           ;CC2500_B1.c: 159: RC0 = 0;
  8436  1696  0020               	movlb	0	; select bank0
  8437  1697  100E               	bcf	14,0	;volatile
  8438                           
  8439                           ;CC2500_B1.c: 160: RC4 = 1;
  8440  1698  160E               	bsf	14,4	;volatile
  8441  1699  0008               	return
  8442  169A                     __end_of_CC2500_PowerRST:	
  8443                           
  8444                           	psect	text38
  8445  133A                     __ptext38:	
  8446 ;; *************** function _CC2500_InitSetREG *****************
  8447 ;; Defined at:
  8448 ;;		line 166 in file "../src/CC2500_B1.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  loop_c          1    2[BANK0 ] unsigned char 
  8453 ;;  temp2           1    1[BANK0 ] unsigned char 
  8454 ;;  temp1           1    0[BANK0 ] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;		None               void
  8457 ;; Registers used:
  8458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;Total ram usage:        4 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:    5
  8471 ;; This function calls:
  8472 ;;		_CC2500_WriteREG
  8473 ;; This function is called by:
  8474 ;;		_CC2500_PowerOnInitial
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           
  8479                           ;psect for function _CC2500_InitSetREG
  8480  133A                     _CC2500_InitSetREG:	
  8481                           
  8482                           ;CC2500_B1.c: 167: unsigned char loop_c;
  8483                           ;CC2500_B1.c: 168: unsigned char temp1, temp2;
  8484                           ;CC2500_B1.c: 170: for (loop_c = 0; loop_c < 47; loop_c++) {
  8485                           
  8486                           ;incstack = 0
  8487                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8488  133A  0020               	movlb	0	; select bank0
  8489  133B  01A2               	clrf	CC2500_InitSetREG@loop_c
  8490  133C                     L2:	
  8491  133C  302F               	movlw	47
  8492  133D  0222               	subwf	CC2500_InitSetREG@loop_c,w
  8493  133E  1803               	btfsc	3,0
  8494  133F  0008               	return
  8495                           
  8496                           ;CC2500_B1.c: 171: temp1 = CC2500_registers_address[loop_c];
  8497  1340  0822               	movf	CC2500_InitSetREG@loop_c,w
  8498  1341  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  8499  1342  0084               	movwf	4
  8500  1343  3090               	movlw	high (_CC2500_registers_address| (0+32768))
  8501  1344  1803               	skipnc
  8502  1345  3E01               	addlw	1
  8503  1346  0085               	movwf	5
  8504  1347  0800               	movf	0,w	;code access
  8505  1348  00F7               	movwf	??_CC2500_InitSetREG
  8506  1349  0877               	movf	??_CC2500_InitSetREG,w
  8507  134A  00A0               	movwf	CC2500_InitSetREG@temp1
  8508                           
  8509                           ;CC2500_B1.c: 172: temp2 = CC2500_rfSettings[loop_c];
  8510  134B  0822               	movf	CC2500_InitSetREG@loop_c,w
  8511  134C  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  8512  134D  0084               	movwf	4
  8513  134E  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
  8514  134F  1803               	skipnc
  8515  1350  3E01               	addlw	1
  8516  1351  0085               	movwf	5
  8517  1352  0800               	movf	0,w	;code access
  8518  1353  00F7               	movwf	??_CC2500_InitSetREG
  8519  1354  0877               	movf	??_CC2500_InitSetREG,w
  8520  1355  00A1               	movwf	CC2500_InitSetREG@temp2
  8521                           
  8522                           ;CC2500_B1.c: 174: CC2500_WriteREG(temp1, temp2);
  8523  1356  0821               	movf	CC2500_InitSetREG@temp2,w
  8524  1357  00F7               	movwf	??_CC2500_InitSetREG
  8525  1358  0877               	movf	??_CC2500_InitSetREG,w
  8526  1359  00F4               	movwf	CC2500_WriteREG@value
  8527  135A  0820               	movf	CC2500_InitSetREG@temp1,w
  8528  135B  3191  21B4  3193   	fcall	_CC2500_WriteREG
  8529  135E  3001               	movlw	1
  8530  135F  00F7               	movwf	??_CC2500_InitSetREG
  8531  1360  0877               	movf	??_CC2500_InitSetREG,w
  8532  1361  0020               	movlb	0	; select bank0
  8533  1362  07A2               	addwf	CC2500_InitSetREG@loop_c,f
  8534  1363  2B3C               	goto	L2
  8535  1364                     __end_of_CC2500_InitSetREG:	
  8536                           
  8537                           	psect	text39
  8538  1135                     __ptext39:	
  8539 ;; *************** function _CC2500_InitPATable *****************
  8540 ;; Defined at:
  8541 ;;		line 181 in file "../src/CC2500_B1.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;		None
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  loop_d          1    1[BANK0 ] unsigned char 
  8546 ;;  temp            1    0[BANK0 ] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;		None               void
  8549 ;; Registers used:
  8550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8560 ;;Total ram usage:        3 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    5
  8563 ;; This function calls:
  8564 ;;		_CC2500_WriteREG
  8565 ;; This function is called by:
  8566 ;;		_CC2500_PowerOnInitial
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           
  8571                           ;psect for function _CC2500_InitPATable
  8572  1135                     _CC2500_InitPATable:	
  8573                           
  8574                           ;CC2500_B1.c: 182: unsigned char loop_d;
  8575                           ;CC2500_B1.c: 183: unsigned char temp;
  8576                           ;CC2500_B1.c: 185: for (loop_d = 0; loop_d < 8; loop_d++) {
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8580  1135  0020               	movlb	0	; select bank0
  8581  1136  01A1               	clrf	CC2500_InitPATable@loop_d
  8582  1137                     L3:	
  8583  1137  3008               	movlw	8
  8584  1138  0221               	subwf	CC2500_InitPATable@loop_d,w
  8585  1139  1803               	btfsc	3,0
  8586  113A  0008               	return
  8587                           
  8588                           ;CC2500_B1.c: 186: temp = CC2500_patable_vaule[loop_d];
  8589  113B  0821               	movf	CC2500_InitPATable@loop_d,w
  8590  113C  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  8591  113D  0084               	movwf	4
  8592  113E  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
  8593  113F  1803               	skipnc
  8594  1140  3E01               	addlw	1
  8595  1141  0085               	movwf	5
  8596  1142  0800               	movf	0,w	;code access
  8597  1143  00F7               	movwf	??_CC2500_InitPATable
  8598  1144  0877               	movf	??_CC2500_InitPATable,w
  8599  1145  00A0               	movwf	CC2500_InitPATable@temp
  8600                           
  8601                           ;CC2500_B1.c: 187: CC2500_WriteREG(0x3E, temp);
  8602  1146  0820               	movf	CC2500_InitPATable@temp,w
  8603  1147  00F7               	movwf	??_CC2500_InitPATable
  8604  1148  0877               	movf	??_CC2500_InitPATable,w
  8605  1149  00F4               	movwf	CC2500_WriteREG@value
  8606  114A  303E               	movlw	62
  8607  114B  3191  21B4  3191   	fcall	_CC2500_WriteREG
  8608  114E  3001               	movlw	1
  8609  114F  00F7               	movwf	??_CC2500_InitPATable
  8610  1150  0877               	movf	??_CC2500_InitPATable,w
  8611  1151  0020               	movlb	0	; select bank0
  8612  1152  07A1               	addwf	CC2500_InitPATable@loop_d,f
  8613  1153  2937               	goto	L3
  8614  1154                     __end_of_CC2500_InitPATable:	
  8615                           
  8616                           	psect	text40
  8617  11B4                     __ptext40:	
  8618 ;; *************** function _CC2500_WriteREG *****************
  8619 ;; Defined at:
  8620 ;;		line 258 in file "../src/CC2500_B1.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  w_addr          1    wreg     unsigned char 
  8623 ;;  value           1    4[COMMON] unsigned char 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  w_addr          1    6[COMMON] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;		None               void
  8628 ;; Registers used:
  8629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8635 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;Total ram usage:        3 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    4
  8642 ;; This function calls:
  8643 ;;		_CC2500_WriteByte
  8644 ;;		_RF_Timeout_Counter
  8645 ;;		_setRF_TimeoutCleared
  8646 ;; This function is called by:
  8647 ;;		_CC2500_InitSetREG
  8648 ;;		_CC2500_InitPATable
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _CC2500_WriteREG
  8654  11B4                     _CC2500_WriteREG:	
  8655                           
  8656                           ;incstack = 0
  8657                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8658                           ;CC2500_WriteREG@w_addr stored from wreg
  8659  11B4  00F6               	movwf	CC2500_WriteREG@w_addr
  8660                           
  8661                           ;CC2500_B1.c: 259: RC4 = 0;
  8662  11B5  0020               	movlb	0	; select bank0
  8663  11B6  120E               	bcf	14,4	;volatile
  8664                           
  8665                           ;CC2500_B1.c: 260: SPI0Buffer = w_addr;
  8666  11B7  0876               	movf	CC2500_WriteREG@w_addr,w
  8667  11B8  00F5               	movwf	??_CC2500_WriteREG
  8668  11B9  0875               	movf	??_CC2500_WriteREG,w
  8669  11BA  00EB               	movwf	_SPI0Buffer
  8670                           
  8671                           ;CC2500_B1.c: 261: while (RC2 == 1 && RF1.Timeout == 0) {
  8672  11BB  29BF               	goto	l10587
  8673  11BC                     l10585:	
  8674                           
  8675                           ;CC2500_B1.c: 262: RF_Timeout_Counter();
  8676  11BC  319E  26E7  3191   	fcall	_RF_Timeout_Counter
  8677  11BF                     l10587:	
  8678  11BF  0020               	movlb	0	; select bank0
  8679  11C0  1D0E               	btfss	14,2	;volatile
  8680  11C1  29C5               	goto	l10591
  8681  11C2  0021               	movlb	1	; select bank1
  8682  11C3  1F31               	btfss	(_RF1^(0+128)+1),6
  8683  11C4  29BC               	goto	l10585
  8684  11C5                     l10591:	
  8685                           
  8686                           ;CC2500_B1.c: 263: };
  8687                           ;CC2500_B1.c: 264: setRF_TimeoutCleared();
  8688  11C5  319C  24AC  3191   	fcall	_setRF_TimeoutCleared
  8689                           
  8690                           ;CC2500_B1.c: 266: CC2500_WriteByte();
  8691  11C8  319E  26BE  3191   	fcall	_CC2500_WriteByte
  8692                           
  8693                           ;CC2500_B1.c: 267: SPI0Buffer = value;
  8694  11CB  0874               	movf	CC2500_WriteREG@value,w
  8695  11CC  00F5               	movwf	??_CC2500_WriteREG
  8696  11CD  0875               	movf	??_CC2500_WriteREG,w
  8697  11CE  0020               	movlb	0	; select bank0
  8698  11CF  00EB               	movwf	_SPI0Buffer
  8699                           
  8700                           ;CC2500_B1.c: 268: CC2500_WriteByte();
  8701  11D0  319E  26BE         	fcall	_CC2500_WriteByte
  8702                           
  8703                           ;CC2500_B1.c: 269: RC4 = 1;
  8704  11D2  0020               	movlb	0	; select bank0
  8705  11D3  160E               	bsf	14,4	;volatile
  8706  11D4  0008               	return
  8707  11D5                     __end_of_CC2500_WriteREG:	
  8708                           
  8709                           	psect	text41
  8710  1D19                     __ptext41:	
  8711 ;; *************** function _CC2500_FrequencyCabr *****************
  8712 ;; Defined at:
  8713 ;;		line 208 in file "../src/CC2500_B1.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;		None               void
  8720 ;; Registers used:
  8721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;Total ram usage:        0 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:    5
  8734 ;; This function calls:
  8735 ;;		_CC2500_WriteCommand
  8736 ;;		_DelayTime_1us
  8737 ;; This function is called by:
  8738 ;;		_CC2500_PowerOnInitial
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           
  8743                           ;psect for function _CC2500_FrequencyCabr
  8744  1D19                     _CC2500_FrequencyCabr:	
  8745                           
  8746                           ;CC2500_B1.c: 209: CC2500_WriteCommand(0x33);
  8747                           
  8748                           ;incstack = 0
  8749                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8750  1D19  3033               	movlw	51
  8751  1D1A  319F  2799  319D   	fcall	_CC2500_WriteCommand
  8752                           
  8753                           ;CC2500_B1.c: 210: DelayTime_1us(1000);
  8754  1D1D  30E8               	movlw	232
  8755  1D1E  00F2               	movwf	DelayTime_1us@count
  8756  1D1F  3003               	movlw	3
  8757  1D20  00F3               	movwf	DelayTime_1us@count+1
  8758  1D21  3192  22C4         	fcall	_DelayTime_1us
  8759  1D23  0008               	return
  8760  1D24                     __end_of_CC2500_FrequencyCabr:	
  8761                           
  8762                           	psect	text42
  8763  12C4                     __ptext42:	
  8764 ;; *************** function _DelayTime_1us *****************
  8765 ;; Defined at:
  8766 ;;		line 327 in file "../src/CC2500_B1.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  count           2    2[COMMON] int 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  j               2    6[COMMON] unsigned int 
  8771 ;;  i               2    4[COMMON] unsigned int 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, status,2
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;Total ram usage:        6 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    3
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_CC2500_PowerRST
  8792 ;;		_CC2500_FrequencyCabr
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function _DelayTime_1us
  8798  12C4                     _DelayTime_1us:	
  8799                           
  8800                           ;CC2500_B1.c: 328: unsigned int i, j;
  8801                           ;CC2500_B1.c: 329: for (i = 1; i < count; i++)
  8802                           
  8803                           ;incstack = 0
  8804                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  8805  12C4  3001               	movlw	1
  8806  12C5  00F4               	movwf	DelayTime_1us@i
  8807  12C6  3000               	movlw	0
  8808  12C7  00F5               	movwf	DelayTime_1us@i+1
  8809  12C8                     l387:	
  8810  12C8  0873               	movf	DelayTime_1us@count+1,w
  8811  12C9  0275               	subwf	DelayTime_1us@i+1,w
  8812  12CA  1D03               	skipz
  8813  12CB  2ACE               	goto	u6175
  8814  12CC  0872               	movf	DelayTime_1us@count,w
  8815  12CD  0274               	subwf	DelayTime_1us@i,w
  8816  12CE                     u6175:	
  8817  12CE  1803               	btfsc	3,0
  8818  12CF  0008               	return
  8819                           
  8820                           ;CC2500_B1.c: 330: for (j = 0; j <= 1; j++);
  8821  12D0  01F6               	clrf	DelayTime_1us@j
  8822  12D1  01F7               	clrf	DelayTime_1us@j+1
  8823  12D2  3000               	movlw	0
  8824  12D3  0277               	subwf	DelayTime_1us@j+1,w
  8825  12D4  3002               	movlw	2
  8826  12D5  1903               	skipnz
  8827  12D6  0276               	subwf	DelayTime_1us@j,w
  8828  12D7  1803               	btfsc	3,0
  8829  12D8  2AE4               	goto	l6873
  8830  12D9                     l6871:	
  8831  12D9  3001               	movlw	1
  8832  12DA  07F6               	addwf	DelayTime_1us@j,f
  8833  12DB  3000               	movlw	0
  8834  12DC  3DF7               	addwfc	DelayTime_1us@j+1,f
  8835  12DD  3000               	movlw	0
  8836  12DE  0277               	subwf	DelayTime_1us@j+1,w
  8837  12DF  3002               	movlw	2
  8838  12E0  1903               	skipnz
  8839  12E1  0276               	subwf	DelayTime_1us@j,w
  8840  12E2  1C03               	skipc
  8841  12E3  2AD9               	goto	l6871
  8842  12E4                     l6873:	
  8843  12E4  3001               	movlw	1
  8844  12E5  07F4               	addwf	DelayTime_1us@i,f
  8845  12E6  3000               	movlw	0
  8846  12E7  3DF5               	addwfc	DelayTime_1us@i+1,f
  8847  12E8  2AC8               	goto	l387
  8848  12E9                     __end_of_DelayTime_1us:	
  8849                           
  8850                           	psect	text43
  8851  1CB4                     __ptext43:	
  8852 ;; *************** function _CC2500_ClearTXFIFO *****************
  8853 ;; Defined at:
  8854 ;;		line 194 in file "../src/CC2500_B1.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;		None               void
  8861 ;; Registers used:
  8862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    5
  8875 ;; This function calls:
  8876 ;;		_CC2500_WriteCommand
  8877 ;; This function is called by:
  8878 ;;		_CC2500_PowerOnInitial
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           
  8883                           ;psect for function _CC2500_ClearTXFIFO
  8884  1CB4                     _CC2500_ClearTXFIFO:	
  8885                           
  8886                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3B);
  8887                           
  8888                           ;incstack = 0
  8889                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8890  1CB4  303B               	movlw	59
  8891  1CB5  319F  2799         	fcall	_CC2500_WriteCommand
  8892  1CB7  0008               	return
  8893  1CB8                     __end_of_CC2500_ClearTXFIFO:	
  8894                           
  8895                           	psect	text44
  8896  1CB0                     __ptext44:	
  8897 ;; *************** function _CC2500_ClearRXFIFO *****************
  8898 ;; Defined at:
  8899 ;;		line 201 in file "../src/CC2500_B1.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;		None               void
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;Total ram usage:        0 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    5
  8920 ;; This function calls:
  8921 ;;		_CC2500_WriteCommand
  8922 ;; This function is called by:
  8923 ;;		_CC2500_PowerOnInitial
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function _CC2500_ClearRXFIFO
  8929  1CB0                     _CC2500_ClearRXFIFO:	
  8930                           
  8931                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x3A);
  8932                           
  8933                           ;incstack = 0
  8934                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8935  1CB0  303A               	movlw	58
  8936  1CB1  319F  2799         	fcall	_CC2500_WriteCommand
  8937  1CB3  0008               	return
  8938  1CB4                     __end_of_CC2500_ClearRXFIFO:	
  8939                           
  8940                           	psect	text45
  8941  1F99                     __ptext45:	
  8942 ;; *************** function _CC2500_WriteCommand *****************
  8943 ;; Defined at:
  8944 ;;		line 292 in file "../src/CC2500_B1.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  command         1    wreg     unsigned char 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  command         1    5[COMMON] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;		None               void
  8951 ;; Registers used:
  8952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;Total ram usage:        2 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    4
  8965 ;; This function calls:
  8966 ;;		_CC2500_WriteByte
  8967 ;;		_RF_Timeout_Counter
  8968 ;;		_setRF_TimeoutCleared
  8969 ;; This function is called by:
  8970 ;;		_CC2500_TxData
  8971 ;;		_CC2500_RxData
  8972 ;;		_CC2500_ClearTXFIFO
  8973 ;;		_CC2500_ClearRXFIFO
  8974 ;;		_CC2500_FrequencyCabr
  8975 ;;		_CC2500_SIDLEMode
  8976 ;;		_setRF_Main
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function _CC2500_WriteCommand
  8982  1F99                     _CC2500_WriteCommand:	
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8986                           ;CC2500_WriteCommand@command stored from wreg
  8987  1F99  00F5               	movwf	CC2500_WriteCommand@command
  8988                           
  8989                           ;CC2500_B1.c: 293: RC4 = 0;
  8990  1F9A  0020               	movlb	0	; select bank0
  8991  1F9B  120E               	bcf	14,4	;volatile
  8992                           
  8993                           ;CC2500_B1.c: 294: SPI0Buffer = command;
  8994  1F9C  0875               	movf	CC2500_WriteCommand@command,w
  8995  1F9D  00F4               	movwf	??_CC2500_WriteCommand
  8996  1F9E  0874               	movf	??_CC2500_WriteCommand,w
  8997  1F9F  00EB               	movwf	_SPI0Buffer
  8998                           
  8999                           ;CC2500_B1.c: 296: while (RC2 == 1 && RF1.Timeout == 0) {
  9000  1FA0  2FA4               	goto	l10571
  9001  1FA1                     l10569:	
  9002                           
  9003                           ;CC2500_B1.c: 297: RF_Timeout_Counter();
  9004  1FA1  319E  26E7  319F   	fcall	_RF_Timeout_Counter
  9005  1FA4                     l10571:	
  9006  1FA4  0020               	movlb	0	; select bank0
  9007  1FA5  1D0E               	btfss	14,2	;volatile
  9008  1FA6  2FAA               	goto	l10575
  9009  1FA7  0021               	movlb	1	; select bank1
  9010  1FA8  1F31               	btfss	(_RF1^(0+128)+1),6
  9011  1FA9  2FA1               	goto	l10569
  9012  1FAA                     l10575:	
  9013                           
  9014                           ;CC2500_B1.c: 298: };
  9015                           ;CC2500_B1.c: 299: setRF_TimeoutCleared();
  9016  1FAA  319C  24AC  319F   	fcall	_setRF_TimeoutCleared
  9017                           
  9018                           ;CC2500_B1.c: 301: CC2500_WriteByte();
  9019  1FAD  319E  26BE         	fcall	_CC2500_WriteByte
  9020                           
  9021                           ;CC2500_B1.c: 302: RC4 = 1;
  9022  1FAF  0020               	movlb	0	; select bank0
  9023  1FB0  160E               	bsf	14,4	;volatile
  9024  1FB1  0008               	return
  9025  1FB2                     __end_of_CC2500_WriteCommand:	
  9026                           
  9027                           	psect	text46
  9028  1CAC                     __ptext46:	
  9029 ;; *************** function _setRF_TimeoutCleared *****************
  9030 ;; Defined at:
  9031 ;;		line 150 in file "../src/RF_Control_B1.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;		None
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;		None               void
  9038 ;; Registers used:
  9039 ;;		status,2
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;Total ram usage:        0 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    3
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_CC2500_TxData
  9056 ;;		_CC2500_RxData
  9057 ;;		_CC2500_PowerRST
  9058 ;;		_CC2500_WriteREG
  9059 ;;		_CC2500_WriteCommand
  9060 ;;		_CC2500_ReadStatus
  9061 ;;		_CC2500_ReadREG
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function _setRF_TimeoutCleared
  9067  1CAC                     _setRF_TimeoutCleared:	
  9068                           
  9069                           ;RF_Control_B1.c: 151: RF1.TimeoutCount = 0;
  9070                           
  9071                           ;incstack = 0
  9072                           ; Regs used in _setRF_TimeoutCleared: [status,2]
  9073  1CAC  0021               	movlb	1	; select bank1
  9074  1CAD  01BD               	clrf	(_RF1^(0+128)+13)
  9075  1CAE  01BE               	clrf	((_RF1+1)^(0+128)+13)
  9076  1CAF  0008               	return
  9077  1CB0                     __end_of_setRF_TimeoutCleared:	
  9078                           
  9079                           	psect	text47
  9080  1EE7                     __ptext47:	
  9081 ;; *************** function _RF_Timeout_Counter *****************
  9082 ;; Defined at:
  9083 ;;		line 142 in file "../src/RF_Control_B1.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;		None
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;		None
  9088 ;; Return value:  Size  Location     Type
  9089 ;;		None               void
  9090 ;; Registers used:
  9091 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;Total ram usage:        0 bytes
  9102 ;; Hardware stack levels used:    1
  9103 ;; Hardware stack levels required when called:    3
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_CC2500_TxData
  9108 ;;		_CC2500_RxData
  9109 ;;		_CC2500_PowerRST
  9110 ;;		_CC2500_WriteREG
  9111 ;;		_CC2500_WriteCommand
  9112 ;;		_CC2500_ReadStatus
  9113 ;;		_CC2500_ReadREG
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function _RF_Timeout_Counter
  9119  1EE7                     _RF_Timeout_Counter:	
  9120                           
  9121                           ;RF_Control_B1.c: 143: RF1.TimeoutCount++;
  9122                           
  9123                           ;incstack = 0
  9124                           ; Regs used in _RF_Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  9125  1EE7  3001               	movlw	1
  9126  1EE8  0021               	movlb	1	; select bank1
  9127  1EE9  07BD               	addwf	(_RF1^(0+128)+13),f
  9128  1EEA  3000               	movlw	0
  9129  1EEB  3DBE               	addwfc	((_RF1+1)^(0+128)+13),f
  9130                           
  9131                           ;RF_Control_B1.c: 144: if (RF1.TimeoutCount == 25000) {
  9132  1EEC  300D               	movlw	13
  9133  1EED  3EB0               	addlw	_RF1& (0+255)
  9134  1EEE  0086               	movwf	6
  9135  1EEF  0187               	clrf	7
  9136  1EF0  3F40               	moviw [0]fsr1
  9137  1EF1  3AA8               	xorlw	168
  9138  1EF2  1D03               	skipz
  9139  1EF3  2EF6               	goto	u12005
  9140  1EF4  3F41               	moviw [1]fsr1
  9141  1EF5  3A61               	xorlw	97
  9142  1EF6                     u12005:	
  9143  1EF6  1D03               	skipz
  9144  1EF7  0008               	return
  9145                           
  9146                           ;RF_Control_B1.c: 145: RF1.TimeoutCount = 0;
  9147  1EF8  01BD               	clrf	(_RF1^(0+128)+13)
  9148  1EF9  01BE               	clrf	((_RF1+1)^(0+128)+13)
  9149                           
  9150                           ;RF_Control_B1.c: 146: RF1.Timeout = 1;
  9151  1EFA  1731               	bsf	(_RF1^(0+128)+1),6
  9152  1EFB  0008               	return
  9153  1EFC                     __end_of_RF_Timeout_Counter:	
  9154                           
  9155                           	psect	text48
  9156  1EBE                     __ptext48:	
  9157 ;; *************** function _CC2500_WriteByte *****************
  9158 ;; Defined at:
  9159 ;;		line 226 in file "../src/CC2500_B1.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  loop_a          1    3[COMMON] unsigned char 
  9164 ;; Return value:  Size  Location     Type
  9165 ;;		None               void
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;Total ram usage:        2 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    3
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_CC2500_TxData
  9184 ;;		_CC2500_RxData
  9185 ;;		_CC2500_PowerRST
  9186 ;;		_CC2500_WriteREG
  9187 ;;		_CC2500_WriteCommand
  9188 ;;		_CC2500_ReadStatus
  9189 ;;		_CC2500_ReadREG
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           
  9194                           ;psect for function _CC2500_WriteByte
  9195  1EBE                     _CC2500_WriteByte:	
  9196                           
  9197                           ;CC2500_B1.c: 227: unsigned char loop_a;
  9198                           ;CC2500_B1.c: 228: for (loop_a = 0; loop_a < 8; loop_a++) {
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  9202  1EBE  01F3               	clrf	CC2500_WriteByte@loop_a
  9203  1EBF                     L4:	
  9204  1EBF  3008               	movlw	8
  9205  1EC0  0273               	subwf	CC2500_WriteByte@loop_a,w
  9206  1EC1  1803               	btfsc	3,0
  9207  1EC2  0008               	return
  9208                           
  9209                           ;CC2500_B1.c: 229: if (SPI0Buffer & 0x80)
  9210  1EC3  0020               	movlb	0	; select bank0
  9211  1EC4  1FEB               	btfss	_SPI0Buffer,7
  9212  1EC5  2EC8               	goto	l343
  9213                           
  9214                           ;CC2500_B1.c: 230: RC0 = 1;
  9215  1EC6  140E               	bsf	14,0	;volatile
  9216  1EC7  2EC9               	goto	l344
  9217  1EC8                     l343:	
  9218                           
  9219                           ;CC2500_B1.c: 231: else
  9220                           ;CC2500_B1.c: 232: RC0 = 0;
  9221  1EC8  100E               	bcf	14,0	;volatile
  9222  1EC9                     l344:	
  9223                           
  9224                           ;CC2500_B1.c: 233: RC1 = 1;
  9225  1EC9  148E               	bsf	14,1	;volatile
  9226                           
  9227                           ;CC2500_B1.c: 234: SPI0Buffer <<= 1;
  9228  1ECA  1003               	clrc
  9229  1ECB  0DEB               	rlf	_SPI0Buffer,f
  9230                           
  9231                           ;CC2500_B1.c: 235: RC1 = 0;
  9232  1ECC  108E               	bcf	14,1	;volatile
  9233  1ECD  3001               	movlw	1
  9234  1ECE  00F2               	movwf	??_CC2500_WriteByte
  9235  1ECF  0872               	movf	??_CC2500_WriteByte,w
  9236  1ED0  07F3               	addwf	CC2500_WriteByte@loop_a,f
  9237  1ED1  2EBF               	goto	L4
  9238  1ED2                     __end_of_CC2500_WriteByte:	
  9239                           
  9240                           	psect	text49
  9241  1CA2                     __ptext49:	
  9242 ;; *************** function _RF_Initialization *****************
  9243 ;; Defined at:
  9244 ;;		line 9 in file "../src/RF_Control_B1.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;		None               void
  9251 ;; Registers used:
  9252 ;;		wreg, status,2, status,0, pclath, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    4
  9265 ;; This function calls:
  9266 ;;		_setRF_Initialization
  9267 ;; This function is called by:
  9268 ;;		_main
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           
  9273                           ;psect for function _RF_Initialization
  9274  1CA2                     _RF_Initialization:	
  9275                           
  9276                           ;RF_Control_B1.c: 11: setRF_Initialization();
  9277                           
  9278                           ;incstack = 0
  9279                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9280  1CA2  319D  250E         	fcall	_setRF_Initialization
  9281  1CA4  0008               	return
  9282  1CA5                     __end_of_RF_Initialization:	
  9283                           
  9284                           	psect	text50
  9285  1D0E                     __ptext50:	
  9286 ;; *************** function _setRF_Initialization *****************
  9287 ;; Defined at:
  9288 ;;		line 17 in file "../src/RF_Control_B1.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;		None
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;		None               void
  9295 ;; Registers used:
  9296 ;;		wreg
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;Total ram usage:        1 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:    3
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_RF_Initialization
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           
  9317                           ;psect for function _setRF_Initialization
  9318  1D0E                     _setRF_Initialization:	
  9319                           
  9320                           ;RF_Control_B1.c: 19: Tx_Length = 21;
  9321                           
  9322                           ;incstack = 0
  9323                           ; Regs used in _setRF_Initialization: [wreg]
  9324  1D0E  3015               	movlw	21
  9325  1D0F  00F2               	movwf	??_setRF_Initialization
  9326  1D10  0872               	movf	??_setRF_Initialization,w
  9327  1D11  0020               	movlb	0	; select bank0
  9328  1D12  00ED               	movwf	_Tx_Length
  9329                           
  9330                           ;RF_Control_B1.c: 20: RF1.RunTime = 200;
  9331  1D13  30C8               	movlw	200
  9332  1D14  0021               	movlb	1	; select bank1
  9333  1D15  00B8               	movwf	(_RF1^(0+128)+8)
  9334  1D16  3000               	movlw	0
  9335  1D17  00B9               	movwf	(_RF1^(0+128)+9)
  9336  1D18  0008               	return
  9337  1D19                     __end_of_setRF_Initialization:	
  9338                           
  9339                           	psect	text51
  9340  1E98                     __ptext51:	
  9341 ;; *************** function _Mcu_Initialization *****************
  9342 ;; Defined at:
  9343 ;;		line 30 in file "../src/MCU_B1.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;		None               void
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0, pclath, cstack
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;Total ram usage:        0 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:    4
  9364 ;; This function calls:
  9365 ;;		_ADC_Set
  9366 ;;		_Fosc_Set
  9367 ;;		_IOC_Set
  9368 ;;		_IO_Set
  9369 ;;		_TMR1_Set
  9370 ;;		_WDT_Set
  9371 ;; This function is called by:
  9372 ;;		_main
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           
  9377                           ;psect for function _Mcu_Initialization
  9378  1E98                     _Mcu_Initialization:	
  9379                           
  9380                           ;MCU_B1.c: 32: Fosc_Set();
  9381                           
  9382                           ;incstack = 0
  9383                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9384  1E98  319C  24A8  319E   	fcall	_Fosc_Set
  9385                           
  9386                           ;MCU_B1.c: 34: IO_Set();
  9387  1E9B  3190  20C2  319E   	fcall	_IO_Set
  9388                           
  9389                           ;MCU_B1.c: 36: ;;
  9390                           ;MCU_B1.c: 38: TMR1_Set();
  9391  1E9E  319D  2554  319E   	fcall	_TMR1_Set
  9392                           
  9393                           ;MCU_B1.c: 40: ADC_Set();
  9394  1EA1  319C  24D9  319E   	fcall	_ADC_Set
  9395                           
  9396                           ;MCU_B1.c: 42: ;;
  9397                           ;MCU_B1.c: 44: ;;
  9398                           ;MCU_B1.c: 46: IOC_Set();
  9399  1EA4  319D  2503  319E   	fcall	_IOC_Set
  9400                           
  9401                           ;MCU_B1.c: 48: ;;
  9402                           ;MCU_B1.c: 50: ;;
  9403                           ;MCU_B1.c: 52: WDT_Set();
  9404  1EA7  3187  27F6         	fcall	_WDT_Set
  9405  1EA9  0008               	return
  9406  1EAA                     __end_of_Mcu_Initialization:	
  9407                           
  9408                           	psect	text52
  9409  07F6                     __ptext52:	
  9410 ;; *************** function _WDT_Set *****************
  9411 ;; Defined at:
  9412 ;;		line 1107 in file "../src/MCU_B1.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;		None
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;		None
  9417 ;; Return value:  Size  Location     Type
  9418 ;;		None               void
  9419 ;; Registers used:
  9420 ;;		wreg
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;Total ram usage:        1 bytes
  9431 ;; Hardware stack levels used:    1
  9432 ;; Hardware stack levels required when called:    3
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_Mcu_Initialization
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _WDT_Set
  9442  07F6                     _WDT_Set:	
  9443                           
  9444                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  9445                           
  9446                           ;incstack = 0
  9447                           ; Regs used in _WDT_Set: [wreg]
  9448  07F6  3017               	movlw	23
  9449  07F7  0021               	movlb	1	; select bank1
  9450  07F8  0097               	movwf	23	;volatile
  9451                           
  9452                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  9453  07F9  145D               	bsf	_WDT^(0+128),0
  9454                           
  9455                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  9456  07FA  300A               	movlw	10
  9457  07FB  00F2               	movwf	??_WDT_Set
  9458  07FC  0872               	movf	??_WDT_Set,w
  9459  07FD  00DE               	movwf	(_WDT^(0+128)+1)
  9460  07FE  0008               	return
  9461  07FF                     __end_of_WDT_Set:	
  9462                           
  9463                           	psect	text53
  9464  1D54                     __ptext53:	
  9465 ;; *************** function _TMR1_Set *****************
  9466 ;; Defined at:
  9467 ;;		line 226 in file "../src/MCU_B1.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;		None               void
  9474 ;; Registers used:
  9475 ;;		wreg
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    3
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_Mcu_Initialization
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           
  9496                           ;psect for function _TMR1_Set
  9497  1D54                     _TMR1_Set:	
  9498                           
  9499                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  9500                           
  9501                           ;incstack = 0
  9502                           ; Regs used in _TMR1_Set: [wreg]
  9503  1D54  3041               	movlw	65
  9504  1D55  0020               	movlb	0	; select bank0
  9505  1D56  0098               	movwf	24	;volatile
  9506                           
  9507                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  9508  1D57  30FA               	movlw	250
  9509  1D58  0097               	movwf	23	;volatile
  9510                           
  9511                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  9512  1D59  3038               	movlw	56
  9513  1D5A  0096               	movwf	22	;volatile
  9514                           
  9515                           ;MCU_B1.c: 230: TMR1IE = 1;
  9516  1D5B  0021               	movlb	1	; select bank1
  9517  1D5C  1411               	bsf	17,0	;volatile
  9518                           
  9519                           ;MCU_B1.c: 231: PEIE = 1;
  9520  1D5D  170B               	bsf	11,6	;volatile
  9521                           
  9522                           ;MCU_B1.c: 232: GIE = 1;
  9523  1D5E  178B               	bsf	11,7	;volatile
  9524  1D5F  0008               	return
  9525  1D60                     __end_of_TMR1_Set:	
  9526                           
  9527                           	psect	text54
  9528  10C2                     __ptext54:	
  9529 ;; *************** function _IO_Set *****************
  9530 ;; Defined at:
  9531 ;;		line 60 in file "../src/MCU_B1.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;		None               void
  9538 ;; Registers used:
  9539 ;;		wreg, status,2
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;Total ram usage:        0 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:    3
  9552 ;; This function calls:
  9553 ;;		Nothing
  9554 ;; This function is called by:
  9555 ;;		_Mcu_Initialization
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           
  9560                           ;psect for function _IO_Set
  9561  10C2                     _IO_Set:	
  9562                           
  9563                           ;MCU_B1.c: 92: TRISA = 0b01110111;;
  9564                           
  9565                           ;incstack = 0
  9566                           ; Regs used in _IO_Set: [wreg+status,2]
  9567  10C2  3077               	movlw	119
  9568  10C3  0021               	movlb	1	; select bank1
  9569  10C4  008C               	movwf	12	;volatile
  9570                           
  9571                           ;MCU_B1.c: 93: TRISB = 0b00000101;;
  9572  10C5  3005               	movlw	5
  9573  10C6  008D               	movwf	13	;volatile
  9574                           
  9575                           ;MCU_B1.c: 94: TRISC = 0b00001100;;
  9576  10C7  300C               	movlw	12
  9577  10C8  008E               	movwf	14	;volatile
  9578                           
  9579                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  9580  10C9  0022               	movlb	2	; select bank2
  9581  10CA  018C               	clrf	12	;volatile
  9582                           
  9583                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  9584  10CB  018D               	clrf	13	;volatile
  9585                           
  9586                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  9587  10CC  018E               	clrf	14	;volatile
  9588                           
  9589                           ;MCU_B1.c: 100: ANSELA = 0b00000010;;
  9590  10CD  3002               	movlw	2
  9591  10CE  0023               	movlb	3	; select bank3
  9592  10CF  008C               	movwf	12	;volatile
  9593                           
  9594                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  9595  10D0  018D               	clrf	13	;volatile
  9596                           
  9597                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  9598  10D1  018E               	clrf	14	;volatile
  9599                           
  9600                           ;MCU_B1.c: 104: PORTA = 0b01110111;;
  9601  10D2  3077               	movlw	119
  9602  10D3  0020               	movlb	0	; select bank0
  9603  10D4  008C               	movwf	12	;volatile
  9604                           
  9605                           ;MCU_B1.c: 105: PORTB = 0b00000101;;
  9606  10D5  3005               	movlw	5
  9607  10D6  008D               	movwf	13	;volatile
  9608                           
  9609                           ;MCU_B1.c: 106: PORTC = 0b00001100;;
  9610  10D7  300C               	movlw	12
  9611  10D8  008E               	movwf	14	;volatile
  9612                           
  9613                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  9614  10D9  0024               	movlb	4	; select bank4
  9615  10DA  018D               	clrf	13	;volatile
  9616  10DB  0008               	return
  9617  10DC                     __end_of_IO_Set:	
  9618                           
  9619                           	psect	text55
  9620  1D03                     __ptext55:	
  9621 ;; *************** function _IOC_Set *****************
  9622 ;; Defined at:
  9623 ;;		line 381 in file "../src/MCU_B1.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;		None
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;		None               void
  9630 ;; Registers used:
  9631 ;;		wreg, status,2
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;Total ram usage:        0 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    3
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_Mcu_Initialization
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _IOC_Set
  9653  1D03                     _IOC_Set:	
  9654                           
  9655                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in _IOC_Set: [wreg+status,2]
  9659  1D03  3004               	movlw	4
  9660  1D04  0027               	movlb	7	; select bank7
  9661  1D05  0094               	movwf	20	;volatile
  9662                           
  9663                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  9664  1D06  3004               	movlw	4
  9665  1D07  0095               	movwf	21	;volatile
  9666                           
  9667                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  9668  1D08  0196               	clrf	22	;volatile
  9669                           
  9670                           ;MCU_B1.c: 388: IOCIE = 1;
  9671  1D09  158B               	bsf	11,3	;volatile
  9672                           
  9673                           ;MCU_B1.c: 389: IOCIF = 0;
  9674  1D0A  100B               	bcf	11,0	;volatile
  9675                           
  9676                           ;MCU_B1.c: 390: PEIE = 1;
  9677  1D0B  170B               	bsf	11,6	;volatile
  9678                           
  9679                           ;MCU_B1.c: 391: GIE = 1;
  9680  1D0C  178B               	bsf	11,7	;volatile
  9681  1D0D  0008               	return
  9682  1D0E                     __end_of_IOC_Set:	
  9683                           
  9684                           	psect	text56
  9685  1CA8                     __ptext56:	
  9686 ;; *************** function _Fosc_Set *****************
  9687 ;; Defined at:
  9688 ;;		line 56 in file "../src/MCU_B1.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;		None               void
  9695 ;; Registers used:
  9696 ;;		wreg
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    3
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_Mcu_Initialization
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           
  9717                           ;psect for function _Fosc_Set
  9718  1CA8                     _Fosc_Set:	
  9719                           
  9720                           ;MCU_B1.c: 57: OSCCON = 0x78;
  9721                           
  9722                           ;incstack = 0
  9723                           ; Regs used in _Fosc_Set: [wreg]
  9724  1CA8  3078               	movlw	120
  9725  1CA9  0021               	movlb	1	; select bank1
  9726  1CAA  0099               	movwf	25	;volatile
  9727  1CAB  0008               	return
  9728  1CAC                     __end_of_Fosc_Set:	
  9729                           
  9730                           	psect	text57
  9731  1CD9                     __ptext57:	
  9732 ;; *************** function _ADC_Set *****************
  9733 ;; Defined at:
  9734 ;;		line 429 in file "../src/MCU_B1.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;		None
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;		None
  9739 ;; Return value:  Size  Location     Type
  9740 ;;		None               void
  9741 ;; Registers used:
  9742 ;;		wreg
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;Total ram usage:        0 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; Hardware stack levels required when called:    3
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		_Mcu_Initialization
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           
  9763                           ;psect for function _ADC_Set
  9764  1CD9                     _ADC_Set:	
  9765                           
  9766                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  9767                           
  9768                           ;incstack = 0
  9769                           ; Regs used in _ADC_Set: [wreg]
  9770  1CD9  30F3               	movlw	243
  9771  1CDA  0021               	movlb	1	; select bank1
  9772  1CDB  009E               	movwf	30	;volatile
  9773                           
  9774                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  9775  1CDC  30C1               	movlw	193
  9776  1CDD  0022               	movlb	2	; select bank2
  9777  1CDE  0097               	movwf	23	;volatile
  9778  1CDF  0008               	return
  9779  1CE0                     __end_of_ADC_Set:	
  9780                           
  9781                           	psect	text58
  9782  1E36                     __ptext58:	
  9783 ;; *************** function _LED_Main *****************
  9784 ;; Defined at:
  9785 ;;		line 47 in file "../src/LED_B1.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;		None               void
  9792 ;; Registers used:
  9793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;Total ram usage:        0 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    5
  9806 ;; This function calls:
  9807 ;;		_setLED_Main
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _LED_Main
  9815  1E36                     _LED_Main:	
  9816                           
  9817                           ;LED_B1.c: 58: setLED_Main(1);
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9821  1E36  3001               	movlw	1
  9822  1E37  3197  276A  319E   	fcall	_setLED_Main
  9823                           
  9824                           ;LED_B1.c: 61: setLED_Main(2);
  9825  1E3A  3002               	movlw	2
  9826  1E3B  3197  276A  319E   	fcall	_setLED_Main
  9827                           
  9828                           ;LED_B1.c: 64: setLED_Main(3);
  9829  1E3E  3003               	movlw	3
  9830  1E3F  3197  276A  319E   	fcall	_setLED_Main
  9831                           
  9832                           ;LED_B1.c: 67: setLED_Main(99);
  9833  1E42  3063               	movlw	99
  9834  1E43  3197  276A         	fcall	_setLED_Main
  9835  1E45  0008               	return
  9836  1E46                     __end_of_LED_Main:	
  9837                           
  9838                           	psect	text59
  9839  176A                     __ptext59:	
  9840 ;; *************** function _setLED_Main *****************
  9841 ;; Defined at:
  9842 ;;		line 229 in file "../src/LED_B1.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  led             1    wreg     unsigned char 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  led             1    5[COMMON] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;		None               void
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;Total ram usage:        3 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    4
  9863 ;; This function calls:
  9864 ;;		_LedPointSelect
  9865 ;; This function is called by:
  9866 ;;		_LED_Main
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           
  9871                           ;psect for function _setLED_Main
  9872  176A                     _setLED_Main:	
  9873                           
  9874                           ;incstack = 0
  9875                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9876                           ;setLED_Main@led stored from wreg
  9877  176A  00F5               	movwf	setLED_Main@led
  9878                           
  9879                           ;LED_B1.c: 230: LedPointSelect(led);
  9880  176B  0875               	movf	setLED_Main@led,w
  9881  176C  3192  225C  3197   	fcall	_LedPointSelect
  9882                           
  9883                           ;LED_B1.c: 231: if (LED->GO == 1) {
  9884  176F  087A               	movf	_LED,w
  9885  1770  0086               	movwf	6
  9886  1771  087B               	movf	_LED+1,w
  9887  1772  0087               	movwf	7
  9888  1773  1C81               	btfss	1,1
  9889  1774  0008               	return
  9890                           
  9891                           ;LED_B1.c: 232: LED->Time++;
  9892  1775  087A               	movf	_LED,w
  9893  1776  0086               	movwf	6
  9894  1777  087B               	movf	_LED+1,w
  9895  1778  0087               	movwf	7
  9896  1779  3141               	addfsr 1,1
  9897  177A  3001               	movlw	1
  9898  177B  0781               	addwf	1,f
  9899  177C  3141               	addfsr 1,1
  9900  177D  1803               	skipnc
  9901  177E  0A81               	incf	1,f
  9902                           
  9903                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  9904  177F  087A               	movf	_LED,w
  9905  1780  0086               	movwf	6
  9906  1781  087B               	movf	_LED+1,w
  9907  1782  0087               	movwf	7
  9908  1783  3141               	addfsr 1,1
  9909  1784  3F40               	moviw [0]fsr1
  9910  1785  00F3               	movwf	??_setLED_Main
  9911  1786  3F41               	moviw [1]fsr1
  9912  1787  00F4               	movwf	??_setLED_Main+1
  9913  1788  3000               	movlw	0
  9914  1789  0274               	subwf	??_setLED_Main+1,w
  9915  178A  3019               	movlw	25
  9916  178B  1903               	skipnz
  9917  178C  0273               	subwf	??_setLED_Main,w
  9918  178D  1C03               	skipc
  9919  178E  0008               	return
  9920                           
  9921                           ;LED_B1.c: 234: LED->Time = 0;
  9922  178F  087A               	movf	_LED,w
  9923  1790  0086               	movwf	6
  9924  1791  087B               	movf	_LED+1,w
  9925  1792  0087               	movwf	7
  9926  1793  3141               	addfsr 1,1
  9927  1794  3000               	movlw	0
  9928  1795  3FC0               	movwi [0]fsr1
  9929  1796  3FC1               	movwi [1]fsr1
  9930                           
  9931                           ;LED_B1.c: 237: if (led == 1) {
  9932  1797  0875               	movf	setLED_Main@led,w
  9933  1798  3A01               	xorlw	1
  9934  1799  1D03               	skipz
  9935  179A  2F9E               	goto	l1307
  9936                           
  9937                           ;LED_B1.c: 238: RC7 = RC7 == 1 ? 0 : 1;
  9938  179B  3080               	movlw	128
  9939  179C  0020               	movlb	0	; select bank0
  9940  179D  068E               	xorwf	14,f
  9941  179E                     l1307:	
  9942                           
  9943                           ;LED_B1.c: 239: }
  9944                           ;LED_B1.c: 242: if (led == 2) {
  9945  179E  0875               	movf	setLED_Main@led,w
  9946  179F  3A02               	xorlw	2
  9947  17A0  1D03               	skipz
  9948  17A1  2FA5               	goto	l1308
  9949                           
  9950                           ;LED_B1.c: 243: RA3 = RA3 == 1 ? 0 : 1;
  9951  17A2  3008               	movlw	8
  9952  17A3  0020               	movlb	0	; select bank0
  9953  17A4  068C               	xorwf	12,f
  9954  17A5                     l1308:	
  9955                           
  9956                           ;LED_B1.c: 244: }
  9957                           ;LED_B1.c: 247: if (led == 3) {
  9958  17A5  0875               	movf	setLED_Main@led,w
  9959  17A6  3A03               	xorlw	3
  9960  17A7  1D03               	skipz
  9961  17A8  2FAC               	goto	l1309
  9962                           
  9963                           ;LED_B1.c: 248: RC6 = RC6 == 1 ? 0 : 1;
  9964  17A9  3040               	movlw	64
  9965  17AA  0020               	movlb	0	; select bank0
  9966  17AB  068E               	xorwf	14,f
  9967  17AC                     l1309:	
  9968                           
  9969                           ;LED_B1.c: 249: }
  9970                           ;LED_B1.c: 252: if (led == 99) {
  9971  17AC  0875               	movf	setLED_Main@led,w
  9972  17AD  3A63               	xorlw	99
  9973  17AE  1D03               	skipz
  9974  17AF  0008               	return
  9975                           
  9976                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  9977  17B0  3020               	movlw	32
  9978  17B1  0020               	movlb	0	; select bank0
  9979  17B2  068D               	xorwf	13,f
  9980  17B3  0008               	return
  9981  17B4                     __end_of_setLED_Main:	
  9982                           
  9983                           	psect	text60
  9984  1E26                     __ptext60:	
  9985 ;; *************** function _LED_Initialization *****************
  9986 ;; Defined at:
  9987 ;;		line 31 in file "../src/LED_B1.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;		None               void
  9994 ;; Registers used:
  9995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    6
 10008 ;; This function calls:
 10009 ;;		_setLED_Initialization
 10010 ;; This function is called by:
 10011 ;;		_main
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           
 10016                           ;psect for function _LED_Initialization
 10017  1E26                     _LED_Initialization:	
 10018                           
 10019                           ;LED_B1.c: 33: setLED_Initialization(1);
 10020                           
 10021                           ;incstack = 0
 10022                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10023  1E26  3001               	movlw	1
 10024  1E27  319D  25BA  319E   	fcall	_setLED_Initialization
 10025                           
 10026                           ;LED_B1.c: 36: setLED_Initialization(2);
 10027  1E2A  3002               	movlw	2
 10028  1E2B  319D  25BA  319E   	fcall	_setLED_Initialization
 10029                           
 10030                           ;LED_B1.c: 39: setLED_Initialization(3);
 10031  1E2E  3003               	movlw	3
 10032  1E2F  319D  25BA  319E   	fcall	_setLED_Initialization
 10033                           
 10034                           ;LED_B1.c: 42: setLED_Initialization(99);
 10035  1E32  3063               	movlw	99
 10036  1E33  319D  25BA         	fcall	_setLED_Initialization
 10037  1E35  0008               	return
 10038  1E36                     __end_of_LED_Initialization:	
 10039                           
 10040                           	psect	text61
 10041  1DBA                     __ptext61:	
 10042 ;; *************** function _setLED_Initialization *****************
 10043 ;; Defined at:
 10044 ;;		line 74 in file "../src/LED_B1.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  led             1    wreg     unsigned char 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  led             1    5[COMMON] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;		None               void
 10051 ;; Registers used:
 10052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;Total ram usage:        1 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:    5
 10065 ;; This function calls:
 10066 ;;		_LedPointSelect
 10067 ;;		_setLED
 10068 ;; This function is called by:
 10069 ;;		_LED_Initialization
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           
 10074                           ;psect for function _setLED_Initialization
 10075  1DBA                     _setLED_Initialization:	
 10076                           
 10077                           ;incstack = 0
 10078                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10079                           ;setLED_Initialization@led stored from wreg
 10080  1DBA  00F5               	movwf	setLED_Initialization@led
 10081                           
 10082                           ;LED_B1.c: 75: LedPointSelect(led);
 10083  1DBB  0875               	movf	setLED_Initialization@led,w
 10084  1DBC  3192  225C  319D   	fcall	_LedPointSelect
 10085                           
 10086                           ;LED_B1.c: 76: LED->Enable = 1;
 10087  1DBF  087A               	movf	_LED,w
 10088  1DC0  0086               	movwf	6
 10089  1DC1  087B               	movf	_LED+1,w
 10090  1DC2  0087               	movwf	7
 10091  1DC3  1401               	bsf	1,0
 10092                           
 10093                           ;LED_B1.c: 77: setLED(led, 0);
 10094  1DC4  01F3               	clrf	setLED@command
 10095  1DC5  0875               	movf	setLED_Initialization@led,w
 10096  1DC6  318C  2417         	fcall	_setLED
 10097  1DC8  0008               	return
 10098  1DC9                     __end_of_setLED_Initialization:	
 10099                           
 10100                           	psect	text62
 10101  15D3                     __ptext62:	
 10102 ;; *************** function _Flash_Memory_Main *****************
 10103 ;; Defined at:
 10104 ;;		line 980 in file "../src/MCU_B1.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  key_Status      1    0[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;		None               void
 10111 ;; Registers used:
 10112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;Total ram usage:        3 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    6
 10125 ;; This function calls:
 10126 ;;		_Flash_Memory_Modify
 10127 ;;		_getAll_Sw_KeyStatus
 10128 ;;		_getMain_All_LightsStatus
 10129 ;; This function is called by:
 10130 ;;		_main
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           
 10135                           ;psect for function _Flash_Memory_Main
 10136  15D3                     _Flash_Memory_Main:	
 10137                           
 10138                           ;MCU_B1.c: 981: char key_Status = 0;
 10139                           
 10140                           ;incstack = 0
 10141                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10142  15D3  0020               	movlb	0	; select bank0
 10143  15D4  01A0               	clrf	Flash_Memory_Main@key_Status
 10144                           
 10145                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
 10146  15D5  319D  25AB  3195   	fcall	_getAll_Sw_KeyStatus
 10147  15D8  00F8               	movwf	??_Flash_Memory_Main
 10148  15D9  0878               	movf	??_Flash_Memory_Main,w
 10149  15DA  0020               	movlb	0	; select bank0
 10150  15DB  00A0               	movwf	Flash_Memory_Main@key_Status
 10151                           
 10152                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
 10153  15DC  0024               	movlb	4	; select bank4
 10154  15DD  1C44               	btfss	(_Memory^(0+512)+36),0
 10155  15DE  0008               	return
 10156                           
 10157                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
 10158  15DF  0020               	movlb	0	; select bank0
 10159  15E0  01A1               	clrf	_Flash_Memory_Main$3562
 10160  15E1  319F  273B  3195   	fcall	_getMain_All_LightsStatus
 10161  15E4  3800               	iorlw	0
 10162  15E5  1D03               	skipz
 10163  15E6  2DED               	goto	l10053
 10164  15E7  0020               	movlb	0	; select bank0
 10165  15E8  08A0               	movf	Flash_Memory_Main@key_Status,f
 10166  15E9  1D03               	skipz
 10167  15EA  2DED               	goto	l10053
 10168  15EB  01A1               	clrf	_Flash_Memory_Main$3562
 10169  15EC  0AA1               	incf	_Flash_Memory_Main$3562,f
 10170  15ED                     l10053:	
 10171  15ED  0020               	movlb	0	; select bank0
 10172  15EE  0821               	movf	_Flash_Memory_Main$3562,w
 10173  15EF  0024               	movlb	4	; select bank4
 10174  15F0  10C4               	bcf	(_Memory^(0+512)+36),1
 10175  15F1  1D03               	skipz
 10176  15F2  14C4               	bsf	(_Memory^(0+512)+36),1
 10177                           
 10178                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
 10179  15F3  1CC4               	btfss	(_Memory^(0+512)+36),1
 10180  15F4  2E0E               	goto	l1594
 10181                           
 10182                           ;MCU_B1.c: 988: Memory.Runtime = 1;
 10183  15F5  15C4               	bsf	(_Memory^(0+512)+36),3
 10184                           
 10185                           ;MCU_B1.c: 989: Memory.Time++;
 10186  15F6  3001               	movlw	1
 10187  15F7  07C2               	addwf	(_Memory^(0+512)+34),f
 10188  15F8  3000               	movlw	0
 10189  15F9  3DC3               	addwfc	((_Memory+1)^(0+512)+34),f
 10190                           
 10191                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
 10192  15FA  3022               	movlw	34
 10193  15FB  3E20               	addlw	_Memory& (0+255)
 10194  15FC  0086               	movwf	6
 10195  15FD  3002               	movlw	2	; select bank4/5
 10196  15FE  0087               	movwf	7
 10197  15FF  3F40               	moviw [0]fsr1
 10198  1600  3A0A               	xorlw	10
 10199  1601  1D03               	skipz
 10200  1602  2E05               	goto	u11235
 10201  1603  3F41               	moviw [1]fsr1
 10202  1604  3A00               	xorlw	0
 10203  1605                     u11235:	
 10204  1605  1D03               	skipz
 10205  1606  0008               	return
 10206                           
 10207                           ;MCU_B1.c: 991: Memory.Time = 0;
 10208  1607  01C2               	clrf	(_Memory^(0+512)+34)
 10209  1608  01C3               	clrf	((_Memory+1)^(0+512)+34)
 10210                           
 10211                           ;MCU_B1.c: 992: Memory.Modify = 0;
 10212  1609  1044               	bcf	(_Memory^(0+512)+36),0
 10213                           
 10214                           ;MCU_B1.c: 993: Memory.GO = 0;
 10215  160A  10C4               	bcf	(_Memory^(0+512)+36),1
 10216                           
 10217                           ;MCU_B1.c: 994: Flash_Memory_Modify();
 10218  160B  318E  261A         	fcall	_Flash_Memory_Modify
 10219                           
 10220                           ;MCU_B1.c: 995: }
 10221                           ;MCU_B1.c: 996: } else {
 10222  160D  0008               	return
 10223  160E                     l1594:	
 10224                           
 10225                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
 10226  160E  1DC4               	btfss	(_Memory^(0+512)+36),3
 10227  160F  0008               	return
 10228                           
 10229                           ;MCU_B1.c: 998: Memory.Runtime = 0;
 10230  1610  11C4               	bcf	(_Memory^(0+512)+36),3
 10231                           
 10232                           ;MCU_B1.c: 999: Memory.Time = 0;
 10233  1611  01C2               	clrf	(_Memory^(0+512)+34)
 10234  1612  01C3               	clrf	((_Memory+1)^(0+512)+34)
 10235  1613  0008               	return
 10236  1614                     __end_of_Flash_Memory_Main:	
 10237                           
 10238                           	psect	text63
 10239  1DAB                     __ptext63:	
 10240 ;; *************** function _getAll_Sw_KeyStatus *****************
 10241 ;; Defined at:
 10242 ;;		line 286 in file "../src/Switch_B1.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  status          1    3[COMMON] unsigned char 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      unsigned char 
 10249 ;; Registers used:
 10250 ;;		wreg, status,2
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;Total ram usage:        3 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    3
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_Flash_Memory_Main
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _getAll_Sw_KeyStatus
 10272  1DAB                     _getAll_Sw_KeyStatus:	
 10273                           
 10274                           ;Switch_B1.c: 287: char status = 0;
 10275                           
 10276                           ;incstack = 0
 10277                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
 10278  1DAB  01F3               	clrf	getAll_Sw_KeyStatus@status
 10279                           
 10280                           ;Switch_B1.c: 289: status = RA0 == 1 || RA6 == 1 || RA4 == 1 ? 1 : 0;
 10281  1DAC  01F4               	clrf	_getAll_Sw_KeyStatus$6885
 10282  1DAD  0AF4               	incf	_getAll_Sw_KeyStatus$6885,f
 10283  1DAE  0020               	movlb	0	; select bank0
 10284  1DAF  1C0C               	btfss	12,0	;volatile
 10285  1DB0  1B0C               	btfsc	12,6	;volatile
 10286  1DB1  2DB4               	goto	l9795
 10287  1DB2  1E0C               	btfss	12,4	;volatile
 10288  1DB3  01F4               	clrf	_getAll_Sw_KeyStatus$6885
 10289  1DB4                     l9795:	
 10290  1DB4  0874               	movf	_getAll_Sw_KeyStatus$6885,w
 10291  1DB5  00F2               	movwf	??_getAll_Sw_KeyStatus
 10292  1DB6  0872               	movf	??_getAll_Sw_KeyStatus,w
 10293  1DB7  00F3               	movwf	getAll_Sw_KeyStatus@status
 10294                           
 10295                           ;Switch_B1.c: 315: return status;
 10296  1DB8  0873               	movf	getAll_Sw_KeyStatus@status,w
 10297  1DB9  0008               	return
 10298  1DBA                     __end_of_getAll_Sw_KeyStatus:	
 10299                           
 10300                           	psect	text64
 10301  0E1A                     __ptext64:	
 10302 ;; *************** function _Flash_Memory_Modify *****************
 10303 ;; Defined at:
 10304 ;;		line 1057 in file "../src/MCU_B1.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  i               1    7[COMMON] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;		None               void
 10311 ;; Registers used:
 10312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;Total ram usage:        2 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    5
 10325 ;; This function calls:
 10326 ;;		_Flash_Memory_Erasing
 10327 ;;		_Flash_Memory_Read
 10328 ;;		_Flash_Memory_Write
 10329 ;;		_setMemory_Data
 10330 ;; This function is called by:
 10331 ;;		_Flash_Memory_Main
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function _Flash_Memory_Modify
 10337  0E1A                     _Flash_Memory_Modify:	
 10338                           
 10339                           ;MCU_B1.c: 1058: char i = 0;
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10343  0E1A  01F7               	clrf	Flash_Memory_Modify@i
 10344                           
 10345                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
 10346  0E1B  01F7               	clrf	Flash_Memory_Modify@i
 10347  0E1C  3020               	movlw	32
 10348  0E1D  0277               	subwf	Flash_Memory_Modify@i,w
 10349  0E1E  1803               	btfsc	3,0
 10350  0E1F  2E34               	goto	l9813
 10351  0E20                     l9807:	
 10352                           
 10353                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
 10354  0E20  0877               	movf	Flash_Memory_Modify@i,w
 10355  0E21  319E  26AA  318E   	fcall	_Flash_Memory_Read
 10356  0E24  00F6               	movwf	??_Flash_Memory_Modify
 10357  0E25  0877               	movf	Flash_Memory_Modify@i,w
 10358  0E26  3E20               	addlw	_Memory& (0+255)
 10359  0E27  0086               	movwf	6
 10360  0E28  3002               	movlw	2	; select bank4/5
 10361  0E29  0087               	movwf	7
 10362  0E2A  0876               	movf	??_Flash_Memory_Modify,w
 10363  0E2B  0081               	movwf	1
 10364  0E2C  3001               	movlw	1
 10365  0E2D  00F6               	movwf	??_Flash_Memory_Modify
 10366  0E2E  0876               	movf	??_Flash_Memory_Modify,w
 10367  0E2F  07F7               	addwf	Flash_Memory_Modify@i,f
 10368  0E30  3020               	movlw	32
 10369  0E31  0277               	subwf	Flash_Memory_Modify@i,w
 10370  0E32  1C03               	skipc
 10371  0E33  2E20               	goto	l9807
 10372  0E34                     l9813:	
 10373                           
 10374                           ;MCU_B1.c: 1061: }
 10375                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
 10376  0E34  0020               	movlb	0	; select bank0
 10377  0E35  086E               	movf	_product,w
 10378  0E36  0086               	movwf	6
 10379  0E37  3002               	movlw	2	; select bank4/5
 10380  0E38  0087               	movwf	7
 10381  0E39  3002               	movlw	2	; select bank4/5
 10382  0E3A  3F4B               	moviw [11]fsr1
 10383  0E3B  00F2               	movwf	setMemory_Data@data
 10384  0E3C  3006               	movlw	6
 10385  0E3D  319C  24F8  318E   	fcall	_setMemory_Data
 10386                           
 10387                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
 10388  0E40  0020               	movlb	0	; select bank0
 10389  0E41  086E               	movf	_product,w
 10390  0E42  0086               	movwf	6
 10391  0E43  3002               	movlw	2	; select bank4/5
 10392  0E44  0087               	movwf	7
 10393  0E45  3002               	movlw	2	; select bank4/5
 10394  0E46  3F4C               	moviw [12]fsr1
 10395  0E47  00F2               	movwf	setMemory_Data@data
 10396  0E48  3000               	movlw	0
 10397  0E49  319C  24F8  318E   	fcall	_setMemory_Data
 10398                           
 10399                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
 10400  0E4C  0020               	movlb	0	; select bank0
 10401  0E4D  086E               	movf	_product,w
 10402  0E4E  0086               	movwf	6
 10403  0E4F  3002               	movlw	2	; select bank4/5
 10404  0E50  0087               	movwf	7
 10405  0E51  3002               	movlw	2	; select bank4/5
 10406  0E52  3F4D               	moviw [13]fsr1
 10407  0E53  00F2               	movwf	setMemory_Data@data
 10408  0E54  3001               	movlw	1
 10409  0E55  319C  24F8  318E   	fcall	_setMemory_Data
 10410                           
 10411                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
 10412  0E58  0020               	movlb	0	; select bank0
 10413  0E59  086E               	movf	_product,w
 10414  0E5A  0086               	movwf	6
 10415  0E5B  3002               	movlw	2	; select bank4/5
 10416  0E5C  0087               	movwf	7
 10417  0E5D  3002               	movlw	2	; select bank4/5
 10418  0E5E  3F4E               	moviw [14]fsr1
 10419  0E5F  00F2               	movwf	setMemory_Data@data
 10420  0E60  3002               	movlw	2
 10421  0E61  319C  24F8  318E   	fcall	_setMemory_Data
 10422                           
 10423                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
 10424  0E64  0020               	movlb	0	; select bank0
 10425  0E65  086E               	movf	_product,w
 10426  0E66  0086               	movwf	6
 10427  0E67  3002               	movlw	2	; select bank4/5
 10428  0E68  0087               	movwf	7
 10429  0E69  3002               	movlw	2	; select bank4/5
 10430  0E6A  3F55               	moviw [21]fsr1
 10431  0E6B  00F2               	movwf	setMemory_Data@data
 10432  0E6C  3003               	movlw	3
 10433  0E6D  319C  24F8  318E   	fcall	_setMemory_Data
 10434                           
 10435                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
 10436  0E70  0020               	movlb	0	; select bank0
 10437  0E71  086E               	movf	_product,w
 10438  0E72  0086               	movwf	6
 10439  0E73  3002               	movlw	2	; select bank4/5
 10440  0E74  0087               	movwf	7
 10441  0E75  3002               	movlw	2	; select bank4/5
 10442  0E76  3F56               	moviw [22]fsr1
 10443  0E77  00F2               	movwf	setMemory_Data@data
 10444  0E78  3004               	movlw	4
 10445  0E79  319C  24F8  318E   	fcall	_setMemory_Data
 10446                           
 10447                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
 10448  0E7C  0020               	movlb	0	; select bank0
 10449  0E7D  086E               	movf	_product,w
 10450  0E7E  0086               	movwf	6
 10451  0E7F  3002               	movlw	2	; select bank4/5
 10452  0E80  0087               	movwf	7
 10453  0E81  3002               	movlw	2	; select bank4/5
 10454  0E82  3F57               	moviw [23]fsr1
 10455  0E83  00F2               	movwf	setMemory_Data@data
 10456  0E84  3005               	movlw	5
 10457  0E85  319C  24F8  318E   	fcall	_setMemory_Data
 10458                           
 10459                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
 10460  0E88  0021               	movlb	1	; select bank1
 10461  0E89  1EC9               	btfss	(_myMain^(0+128)+10),5
 10462  0E8A  2E94               	goto	l9821
 10463                           
 10464                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
 10465  0E8B  12C9               	bcf	(_myMain^(0+128)+10),5
 10466                           
 10467                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
 10468  0E8C  30AA               	movlw	170
 10469  0E8D  00F6               	movwf	??_Flash_Memory_Modify
 10470  0E8E  0876               	movf	??_Flash_Memory_Modify,w
 10471  0E8F  00F2               	movwf	setMemory_Data@data
 10472  0E90  301E               	movlw	30
 10473  0E91  319C  24F8  318E   	fcall	_setMemory_Data
 10474  0E94                     l9821:	
 10475                           
 10476                           ;MCU_B1.c: 1073: }
 10477                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
 10478  0E94  0024               	movlb	4	; select bank4
 10479  0E95  1D44               	btfss	(_Memory^(0+512)+36),2
 10480  0E96  2E9B               	goto	l1618
 10481                           
 10482                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
 10483  0E97  1144               	bcf	(_Memory^(0+512)+36),2
 10484                           
 10485                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
 10486  0E98  0021               	movlb	1	; select bank1
 10487  0E99  11BF               	bcf	_myMain^(0+128),3
 10488                           
 10489                           ;MCU_B1.c: 1078: myMain.First = 0;
 10490  0E9A  12BF               	bcf	_myMain^(0+128),5
 10491  0E9B                     l1618:	
 10492                           
 10493                           ;MCU_B1.c: 1080: }
 10494                           ;MCU_B1.c: 1081: GIE = 0;
 10495  0E9B  138B               	bcf	11,7	;volatile
 10496                           
 10497                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
 10498  0E9C  319D  2548  318E   	fcall	_Flash_Memory_Erasing
 10499                           
 10500                           ;MCU_B1.c: 1083: Flash_Memory_Write();
 10501  0E9F  3193  2310         	fcall	_Flash_Memory_Write
 10502                           
 10503                           ;MCU_B1.c: 1084: GIE = 1;
 10504  0EA1  178B               	bsf	11,7	;volatile
 10505  0EA2  0008               	return
 10506  0EA3                     __end_of_Flash_Memory_Modify:	
 10507                           
 10508                           	psect	text65
 10509  1D48                     __ptext65:	
 10510 ;; *************** function _Flash_Memory_Erasing *****************
 10511 ;; Defined at:
 10512 ;;		line 1046 in file "../src/MCU_B1.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;		None
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;		None               void
 10519 ;; Registers used:
 10520 ;;		wreg, status,2, status,0, pclath, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    4
 10533 ;; This function calls:
 10534 ;;		_Flash_Memory_Unlock
 10535 ;; This function is called by:
 10536 ;;		_Flash_Memory_Modify
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           
 10541                           ;psect for function _Flash_Memory_Erasing
 10542  1D48                     _Flash_Memory_Erasing:	
 10543                           
 10544                           ;MCU_B1.c: 1047: CFGS = 0;
 10545                           
 10546                           ;incstack = 0
 10547                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 10548  1D48  0023               	movlb	3	; select bank3
 10549  1D49  1315               	bcf	21,6	;volatile
 10550                           
 10551                           ;MCU_B1.c: 1048: PMADRH = 0x30;
 10552  1D4A  3030               	movlw	48
 10553  1D4B  0092               	movwf	18	;volatile
 10554                           
 10555                           ;MCU_B1.c: 1049: PMADRL = 0x00;
 10556  1D4C  0191               	clrf	17	;volatile
 10557                           
 10558                           ;MCU_B1.c: 1050: FREE = 1;
 10559  1D4D  1615               	bsf	21,4	;volatile
 10560                           
 10561                           ;MCU_B1.c: 1051: WREN = 1;
 10562  1D4E  1515               	bsf	21,2	;volatile
 10563                           
 10564                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
 10565  1D4F  319C  24EF         	fcall	_Flash_Memory_Unlock
 10566                           
 10567                           ;MCU_B1.c: 1053: WREN = 0;
 10568  1D51  0023               	movlb	3	; select bank3
 10569  1D52  1115               	bcf	21,2	;volatile
 10570  1D53  0008               	return
 10571  1D54                     __end_of_Flash_Memory_Erasing:	
 10572                           
 10573                           	psect	text66
 10574  03A8                     __ptext66:	
 10575 ;; *************** function _Flash_Memory_Initialization *****************
 10576 ;; Defined at:
 10577 ;;		line 934 in file "../src/MCU_B1.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  value           1    7[COMMON] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;		None               void
 10584 ;; Registers used:
 10585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;Total ram usage:        2 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    5
 10598 ;; This function calls:
 10599 ;;		_Flash_Memory_Read
 10600 ;;		_Flash_Memory_Write
 10601 ;;		_setMemory_Data
 10602 ;; This function is called by:
 10603 ;;		_main
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           
 10608                           ;psect for function _Flash_Memory_Initialization
 10609  03A8                     _Flash_Memory_Initialization:	
 10610                           
 10611                           ;MCU_B1.c: 935: char value = 0;
 10612                           
 10613                           ;incstack = 0
 10614                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10615  03A8  01F7               	clrf	Flash_Memory_Initialization@value
 10616                           
 10617                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
 10618  03A9  301F               	movlw	31
 10619  03AA  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10620  03AD  3AAA               	xorlw	170
 10621  03AE  1D03               	skipz
 10622  03AF  2C2A               	goto	l10027
 10623                           
 10624                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
 10625  03B0  3006               	movlw	6
 10626  03B1  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10627  03B4  00F6               	movwf	??_Flash_Memory_Initialization
 10628  03B5  0020               	movlb	0	; select bank0
 10629  03B6  086E               	movf	_product,w
 10630  03B7  3E0B               	addlw	11
 10631  03B8  0086               	movwf	6
 10632  03B9  3002               	movlw	2	; select bank4/5
 10633  03BA  0087               	movwf	7
 10634  03BB  0876               	movf	??_Flash_Memory_Initialization,w
 10635  03BC  0081               	movwf	1
 10636                           
 10637                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
 10638  03BD  3000               	movlw	0
 10639  03BE  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10640  03C1  00F6               	movwf	??_Flash_Memory_Initialization
 10641  03C2  0020               	movlb	0	; select bank0
 10642  03C3  086E               	movf	_product,w
 10643  03C4  3E0C               	addlw	12
 10644  03C5  0086               	movwf	6
 10645  03C6  3002               	movlw	2	; select bank4/5
 10646  03C7  0087               	movwf	7
 10647  03C8  0876               	movf	??_Flash_Memory_Initialization,w
 10648  03C9  0081               	movwf	1
 10649                           
 10650                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
 10651  03CA  3001               	movlw	1
 10652  03CB  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10653  03CE  00F6               	movwf	??_Flash_Memory_Initialization
 10654  03CF  0020               	movlb	0	; select bank0
 10655  03D0  086E               	movf	_product,w
 10656  03D1  3E0D               	addlw	13
 10657  03D2  0086               	movwf	6
 10658  03D3  3002               	movlw	2	; select bank4/5
 10659  03D4  0087               	movwf	7
 10660  03D5  0876               	movf	??_Flash_Memory_Initialization,w
 10661  03D6  0081               	movwf	1
 10662                           
 10663                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
 10664  03D7  3002               	movlw	2
 10665  03D8  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10666  03DB  00F6               	movwf	??_Flash_Memory_Initialization
 10667  03DC  0020               	movlb	0	; select bank0
 10668  03DD  086E               	movf	_product,w
 10669  03DE  3E0E               	addlw	14
 10670  03DF  0086               	movwf	6
 10671  03E0  3002               	movlw	2	; select bank4/5
 10672  03E1  0087               	movwf	7
 10673  03E2  0876               	movf	??_Flash_Memory_Initialization,w
 10674  03E3  0081               	movwf	1
 10675                           
 10676                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
 10677  03E4  3003               	movlw	3
 10678  03E5  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10679  03E8  00F6               	movwf	??_Flash_Memory_Initialization
 10680  03E9  0020               	movlb	0	; select bank0
 10681  03EA  086E               	movf	_product,w
 10682  03EB  3E15               	addlw	21
 10683  03EC  0086               	movwf	6
 10684  03ED  3002               	movlw	2	; select bank4/5
 10685  03EE  0087               	movwf	7
 10686  03EF  0876               	movf	??_Flash_Memory_Initialization,w
 10687  03F0  0081               	movwf	1
 10688                           
 10689                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
 10690  03F1  3004               	movlw	4
 10691  03F2  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10692  03F5  00F6               	movwf	??_Flash_Memory_Initialization
 10693  03F6  0020               	movlb	0	; select bank0
 10694  03F7  086E               	movf	_product,w
 10695  03F8  3E16               	addlw	22
 10696  03F9  0086               	movwf	6
 10697  03FA  3002               	movlw	2	; select bank4/5
 10698  03FB  0087               	movwf	7
 10699  03FC  0876               	movf	??_Flash_Memory_Initialization,w
 10700  03FD  0081               	movwf	1
 10701                           
 10702                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
 10703  03FE  3005               	movlw	5
 10704  03FF  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10705  0402  00F6               	movwf	??_Flash_Memory_Initialization
 10706  0403  0020               	movlb	0	; select bank0
 10707  0404  086E               	movf	_product,w
 10708  0405  3E17               	addlw	23
 10709  0406  0086               	movwf	6
 10710  0407  3002               	movlw	2	; select bank4/5
 10711  0408  0087               	movwf	7
 10712  0409  0876               	movf	??_Flash_Memory_Initialization,w
 10713  040A  0081               	movwf	1
 10714                           
 10715                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
 10716  040B  086E               	movf	_product,w
 10717  040C  3E0C               	addlw	12
 10718  040D  0086               	movwf	6
 10719  040E  3002               	movlw	2	; select bank4/5
 10720  040F  0087               	movwf	7
 10721  0410  0801               	movf	1,w
 10722  0411  3AFF               	xorlw	255
 10723  0412  1D03               	skipz
 10724  0413  0008               	return
 10725  0414  086E               	movf	_product,w
 10726  0415  3E0D               	addlw	13
 10727  0416  0086               	movwf	6
 10728  0417  3002               	movlw	2	; select bank4/5
 10729  0418  0087               	movwf	7
 10730  0419  0801               	movf	1,w
 10731  041A  3AFF               	xorlw	255
 10732  041B  1D03               	skipz
 10733  041C  0008               	return
 10734  041D  086E               	movf	_product,w
 10735  041E  3E0E               	addlw	14
 10736  041F  0086               	movwf	6
 10737  0420  3002               	movlw	2	; select bank4/5
 10738  0421  0087               	movwf	7
 10739  0422  0801               	movf	1,w
 10740  0423  3AFF               	xorlw	255
 10741  0424  1D03               	skipz
 10742  0425  0008               	return
 10743                           
 10744                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
 10745  0426  0021               	movlb	1	; select bank1
 10746  0427  15BF               	bsf	_myMain^(0+128),3
 10747                           
 10748                           ;MCU_B1.c: 954: myMain.First = 1;
 10749  0428  16BF               	bsf	_myMain^(0+128),5
 10750                           
 10751                           ;MCU_B1.c: 955: }
 10752                           ;MCU_B1.c: 956: } else {
 10753  0429  0008               	return
 10754  042A                     l10027:	
 10755                           
 10756                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
 10757  042A  30FF               	movlw	255
 10758  042B  00F6               	movwf	??_Flash_Memory_Initialization
 10759  042C  0876               	movf	??_Flash_Memory_Initialization,w
 10760  042D  00F2               	movwf	setMemory_Data@data
 10761  042E  3000               	movlw	0
 10762  042F  319C  24F8  3183   	fcall	_setMemory_Data
 10763                           
 10764                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
 10765  0432  30FF               	movlw	255
 10766  0433  00F6               	movwf	??_Flash_Memory_Initialization
 10767  0434  0876               	movf	??_Flash_Memory_Initialization,w
 10768  0435  00F2               	movwf	setMemory_Data@data
 10769  0436  3001               	movlw	1
 10770  0437  319C  24F8  3183   	fcall	_setMemory_Data
 10771                           
 10772                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
 10773  043A  30FF               	movlw	255
 10774  043B  00F6               	movwf	??_Flash_Memory_Initialization
 10775  043C  0876               	movf	??_Flash_Memory_Initialization,w
 10776  043D  00F2               	movwf	setMemory_Data@data
 10777  043E  3002               	movlw	2
 10778  043F  319C  24F8  3183   	fcall	_setMemory_Data
 10779                           
 10780                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
 10781  0442  30FF               	movlw	255
 10782  0443  00F6               	movwf	??_Flash_Memory_Initialization
 10783  0444  0876               	movf	??_Flash_Memory_Initialization,w
 10784  0445  00F2               	movwf	setMemory_Data@data
 10785  0446  3003               	movlw	3
 10786  0447  319C  24F8  3183   	fcall	_setMemory_Data
 10787                           
 10788                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
 10789  044A  30FF               	movlw	255
 10790  044B  00F6               	movwf	??_Flash_Memory_Initialization
 10791  044C  0876               	movf	??_Flash_Memory_Initialization,w
 10792  044D  00F2               	movwf	setMemory_Data@data
 10793  044E  3004               	movlw	4
 10794  044F  319C  24F8  3183   	fcall	_setMemory_Data
 10795                           
 10796                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
 10797  0452  30FF               	movlw	255
 10798  0453  00F6               	movwf	??_Flash_Memory_Initialization
 10799  0454  0876               	movf	??_Flash_Memory_Initialization,w
 10800  0455  00F2               	movwf	setMemory_Data@data
 10801  0456  3005               	movlw	5
 10802  0457  319C  24F8  3183   	fcall	_setMemory_Data
 10803                           
 10804                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
 10805  045A  30FF               	movlw	255
 10806  045B  00F6               	movwf	??_Flash_Memory_Initialization
 10807  045C  0876               	movf	??_Flash_Memory_Initialization,w
 10808  045D  00F2               	movwf	setMemory_Data@data
 10809  045E  3006               	movlw	6
 10810  045F  319C  24F8  3183   	fcall	_setMemory_Data
 10811                           
 10812                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
 10813  0462  30AA               	movlw	170
 10814  0463  00F6               	movwf	??_Flash_Memory_Initialization
 10815  0464  0876               	movf	??_Flash_Memory_Initialization,w
 10816  0465  00F2               	movwf	setMemory_Data@data
 10817  0466  301F               	movlw	31
 10818  0467  319C  24F8  3183   	fcall	_setMemory_Data
 10819                           
 10820                           ;MCU_B1.c: 970: GIE = 0;
 10821  046A  138B               	bcf	11,7	;volatile
 10822                           
 10823                           ;MCU_B1.c: 971: Flash_Memory_Write();
 10824  046B  3193  2310         	fcall	_Flash_Memory_Write
 10825                           
 10826                           ;MCU_B1.c: 972: GIE = 1;
 10827  046D  178B               	bsf	11,7	;volatile
 10828                           
 10829                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
 10830  046E  0021               	movlb	1	; select bank1
 10831  046F  15BF               	bsf	_myMain^(0+128),3
 10832                           
 10833                           ;MCU_B1.c: 974: myMain.First = 1;
 10834  0470  16BF               	bsf	_myMain^(0+128),5
 10835                           
 10836                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
 10837  0471  1649               	bsf	(_myMain^(0+128)+10),4
 10838  0472  0008               	return
 10839  0473                     __end_of_Flash_Memory_Initialization:	
 10840                           
 10841                           	psect	text67
 10842  1CF8                     __ptext67:	
 10843 ;; *************** function _setMemory_Data *****************
 10844 ;; Defined at:
 10845 ;;		line 1099 in file "../src/MCU_B1.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  address         1    wreg     unsigned char 
 10848 ;;  data            1    2[COMMON] unsigned char 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  address         1    4[COMMON] unsigned char 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;		None               void
 10853 ;; Registers used:
 10854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;Total ram usage:        3 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    3
 10867 ;; This function calls:
 10868 ;;		Nothing
 10869 ;; This function is called by:
 10870 ;;		_Flash_Memory_Initialization
 10871 ;;		_Flash_Memory_Modify
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           
 10876                           ;psect for function _setMemory_Data
 10877  1CF8                     _setMemory_Data:	
 10878                           
 10879                           ;incstack = 0
 10880                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
 10881                           ;setMemory_Data@address stored from wreg
 10882  1CF8  00F4               	movwf	setMemory_Data@address
 10883                           
 10884                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
 10885  1CF9  0872               	movf	setMemory_Data@data,w
 10886  1CFA  00F3               	movwf	??_setMemory_Data
 10887  1CFB  0874               	movf	setMemory_Data@address,w
 10888  1CFC  3E20               	addlw	_Memory& (0+255)
 10889  1CFD  0086               	movwf	6
 10890  1CFE  3002               	movlw	2	; select bank4/5
 10891  1CFF  0087               	movwf	7
 10892  1D00  0873               	movf	??_setMemory_Data,w
 10893  1D01  0081               	movwf	1
 10894  1D02  0008               	return
 10895  1D03                     __end_of_setMemory_Data:	
 10896                           
 10897                           	psect	text68
 10898  1310                     __ptext68:	
 10899 ;; *************** function _Flash_Memory_Write *****************
 10900 ;; Defined at:
 10901 ;;		line 1027 in file "../src/MCU_B1.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;		None
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  i               1    3[COMMON] unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;		None               void
 10908 ;; Registers used:
 10909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;Total ram usage:        2 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    4
 10922 ;; This function calls:
 10923 ;;		_Flash_Memory_Unlock
 10924 ;; This function is called by:
 10925 ;;		_Flash_Memory_Initialization
 10926 ;;		_Flash_Memory_Modify
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _Flash_Memory_Write
 10932  1310                     _Flash_Memory_Write:	
 10933                           
 10934                           ;MCU_B1.c: 1028: char i = 0;
 10935                           
 10936                           ;incstack = 0
 10937                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10938  1310  01F3               	clrf	Flash_Memory_Write@i
 10939                           
 10940                           ;MCU_B1.c: 1029: CFGS = 0;
 10941  1311  0023               	movlb	3	; select bank3
 10942  1312  1315               	bcf	21,6	;volatile
 10943                           
 10944                           ;MCU_B1.c: 1030: PMADRH = 0x30;
 10945  1313  3030               	movlw	48
 10946  1314  0092               	movwf	18	;volatile
 10947                           
 10948                           ;MCU_B1.c: 1031: PMDATH = 0;
 10949  1315  0194               	clrf	20	;volatile
 10950                           
 10951                           ;MCU_B1.c: 1032: FREE = 0;
 10952  1316  1215               	bcf	21,4	;volatile
 10953                           
 10954                           ;MCU_B1.c: 1033: LWLO = 1;
 10955  1317  1695               	bsf	21,5	;volatile
 10956                           
 10957                           ;MCU_B1.c: 1034: WREN = 1;
 10958  1318  1515               	bsf	21,2	;volatile
 10959                           
 10960                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
 10961  1319  01F3               	clrf	Flash_Memory_Write@i
 10962  131A  3020               	movlw	32
 10963  131B  0273               	subwf	Flash_Memory_Write@i,w
 10964  131C  1803               	btfsc	3,0
 10965  131D  2B33               	goto	l1608
 10966  131E                     l9639:	
 10967                           
 10968                           ;MCU_B1.c: 1036: PMADRL = i;
 10969  131E  0873               	movf	Flash_Memory_Write@i,w
 10970  131F  0023               	movlb	3	; select bank3
 10971  1320  0091               	movwf	17	;volatile
 10972                           
 10973                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
 10974  1321  0873               	movf	Flash_Memory_Write@i,w
 10975  1322  3E20               	addlw	_Memory& (0+255)
 10976  1323  0086               	movwf	6
 10977  1324  3002               	movlw	2	; select bank4/5
 10978  1325  0087               	movwf	7
 10979  1326  0801               	movf	1,w
 10980  1327  0093               	movwf	19	;volatile
 10981                           
 10982                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
 10983  1328  319C  24EF  3193   	fcall	_Flash_Memory_Unlock
 10984  132B  3001               	movlw	1
 10985  132C  00F2               	movwf	??_Flash_Memory_Write
 10986  132D  0872               	movf	??_Flash_Memory_Write,w
 10987  132E  07F3               	addwf	Flash_Memory_Write@i,f
 10988  132F  3020               	movlw	32
 10989  1330  0273               	subwf	Flash_Memory_Write@i,w
 10990  1331  1C03               	skipc
 10991  1332  2B1E               	goto	l9639
 10992  1333                     l1608:	
 10993                           
 10994                           ;MCU_B1.c: 1039: }
 10995                           ;MCU_B1.c: 1040: LWLO = 0;
 10996  1333  0023               	movlb	3	; select bank3
 10997  1334  1295               	bcf	21,5	;volatile
 10998                           
 10999                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
 11000  1335  319C  24EF         	fcall	_Flash_Memory_Unlock
 11001                           
 11002                           ;MCU_B1.c: 1042: WREN = 0;
 11003  1337  0023               	movlb	3	; select bank3
 11004  1338  1115               	bcf	21,2	;volatile
 11005  1339  0008               	return
 11006  133A                     __end_of_Flash_Memory_Write:	
 11007                           
 11008                           	psect	text69
 11009  1CEF                     __ptext69:	
 11010 ;; *************** function _Flash_Memory_Unlock *****************
 11011 ;; Defined at:
 11012 ;;		line 1006 in file "../src/MCU_B1.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;		None
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;		None               void
 11019 ;; Registers used:
 11020 ;;		wreg
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;Total ram usage:        0 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    3
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_Flash_Memory_Write
 11037 ;;		_Flash_Memory_Erasing
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           
 11042                           ;psect for function _Flash_Memory_Unlock
 11043  1CEF                     _Flash_Memory_Unlock:	
 11044                           
 11045                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
 11046                           
 11047                           ;incstack = 0
 11048                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 11049  1CEF  3055               	movlw	85
 11050  1CF0  0023               	movlb	3	; select bank3
 11051  1CF1  0096               	movwf	22	;volatile
 11052                           
 11053                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
 11054  1CF2  30AA               	movlw	170
 11055  1CF3  0096               	movwf	22	;volatile
 11056                           
 11057                           ;MCU_B1.c: 1009: WR = 1;
 11058  1CF4  1495               	bsf	21,1	;volatile
 11059                           
 11060                           ;MCU_B1.c: 1010: __nop();
 11061  1CF5  0000               	nop
 11062                           
 11063                           ;MCU_B1.c: 1011: __nop();
 11064  1CF6  0000               	nop
 11065  1CF7  0008               	return
 11066  1CF8                     __end_of_Flash_Memory_Unlock:	
 11067                           
 11068                           	psect	text70
 11069  1EAA                     __ptext70:	
 11070 ;; *************** function _Flash_Memory_Read *****************
 11071 ;; Defined at:
 11072 ;;		line 1015 in file "../src/MCU_B1.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;  address         1    wreg     unsigned char 
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  address         1    4[COMMON] unsigned char 
 11077 ;;  ret             1    5[COMMON] unsigned char 
 11078 ;;  i               1    3[COMMON] unsigned char 
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  1    wreg      unsigned char 
 11081 ;; Registers used:
 11082 ;;		wreg, status,2
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;Total ram usage:        4 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:    3
 11095 ;; This function calls:
 11096 ;;		Nothing
 11097 ;; This function is called by:
 11098 ;;		_Flash_Memory_Initialization
 11099 ;;		_Flash_Memory_Modify
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           
 11104                           ;psect for function _Flash_Memory_Read
 11105  1EAA                     _Flash_Memory_Read:	
 11106                           
 11107                           ;incstack = 0
 11108                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 11109                           ;Flash_Memory_Read@address stored from wreg
 11110  1EAA  00F4               	movwf	Flash_Memory_Read@address
 11111                           
 11112                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
 11113  1EAB  01F3               	clrf	Flash_Memory_Read@i
 11114  1EAC  01F5               	clrf	Flash_Memory_Read@ret
 11115                           
 11116                           ;MCU_B1.c: 1017: PMADRH = 0x30;
 11117  1EAD  3030               	movlw	48
 11118  1EAE  0023               	movlb	3	; select bank3
 11119  1EAF  0092               	movwf	18	;volatile
 11120                           
 11121                           ;MCU_B1.c: 1018: PMADRL = address;
 11122  1EB0  0874               	movf	Flash_Memory_Read@address,w
 11123  1EB1  0091               	movwf	17	;volatile
 11124                           
 11125                           ;MCU_B1.c: 1019: CFGS = 0;
 11126  1EB2  1315               	bcf	21,6	;volatile
 11127                           
 11128                           ;MCU_B1.c: 1020: RD = 1;
 11129  1EB3  1415               	bsf	21,0	;volatile
 11130                           
 11131                           ;MCU_B1.c: 1021: i = PMDATH;
 11132  1EB4  0814               	movf	20,w	;volatile
 11133  1EB5  00F2               	movwf	??_Flash_Memory_Read
 11134  1EB6  0872               	movf	??_Flash_Memory_Read,w
 11135  1EB7  00F3               	movwf	Flash_Memory_Read@i
 11136                           
 11137                           ;MCU_B1.c: 1022: ret = PMDATL;
 11138  1EB8  0813               	movf	19,w	;volatile
 11139  1EB9  00F2               	movwf	??_Flash_Memory_Read
 11140  1EBA  0872               	movf	??_Flash_Memory_Read,w
 11141  1EBB  00F5               	movwf	Flash_Memory_Read@ret
 11142                           
 11143                           ;MCU_B1.c: 1023: return ret;
 11144  1EBC  0875               	movf	Flash_Memory_Read@ret,w
 11145  1EBD  0008               	return
 11146  1EBE                     __end_of_Flash_Memory_Read:	
 11147                           
 11148                           	psect	text71
 11149  14A3                     __ptext71:	
 11150 ;; *************** function _Exception_Main *****************
 11151 ;; Defined at:
 11152 ;;		line 505 in file "../src/Main_B1.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;		None
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;  error           1    3[BANK0 ] unsigned char 
 11157 ;;  status          1    2[BANK0 ] unsigned char 
 11158 ;;  count           1    1[BANK0 ] unsigned char 
 11159 ;;  lights          1    0[BANK0 ] unsigned char 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;		None               void
 11162 ;; Registers used:
 11163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;Total ram usage:        5 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:    5
 11176 ;; This function calls:
 11177 ;;		_getMain_All_Error_Status
 11178 ;;		_setLED
 11179 ;; This function is called by:
 11180 ;;		_main
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           
 11185                           ;psect for function _Exception_Main
 11186  14A3                     _Exception_Main:	
 11187                           
 11188                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
 11189                           
 11190                           ;incstack = 0
 11191                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11192  14A3  3000               	movlw	0
 11193  14A4  319C  249F  3194   	fcall	_getMain_All_Error_Status
 11194  14A7  00F5               	movwf	??_Exception_Main
 11195  14A8  0875               	movf	??_Exception_Main,w
 11196  14A9  0020               	movlb	0	; select bank0
 11197  14AA  00A3               	movwf	Exception_Main@error
 11198                           
 11199                           ;Main_B1.c: 507: char lights = 0, count = 3;
 11200  14AB  01A0               	clrf	Exception_Main@lights
 11201  14AC  3003               	movlw	3
 11202  14AD  00F5               	movwf	??_Exception_Main
 11203  14AE  0875               	movf	??_Exception_Main,w
 11204  14AF  00A1               	movwf	Exception_Main@count
 11205                           
 11206                           ;Main_B1.c: 508: char status = 0;
 11207  14B0  01A2               	clrf	Exception_Main@status
 11208                           
 11209                           ;Main_B1.c: 510: if (myMain.Error_Run == 1) {
 11210  14B1  0021               	movlb	1	; select bank1
 11211  14B2  1DC9               	btfss	(_myMain^(0+128)+10),3
 11212  14B3  2CC3               	goto	l11499
 11213                           
 11214                           ;Main_B1.c: 511: if (error == 0) {
 11215  14B4  0020               	movlb	0	; select bank0
 11216  14B5  08A3               	movf	Exception_Main@error,f
 11217  14B6  1D03               	skipz
 11218  14B7  0008               	return
 11219                           
 11220                           ;Main_B1.c: 512: myMain.Error_Run = 0;
 11221  14B8  0021               	movlb	1	; select bank1
 11222  14B9  11C9               	bcf	(_myMain^(0+128)+10),3
 11223                           
 11224                           ;Main_B1.c: 517: setLED(error, 110);
 11225  14BA  306E               	movlw	110
 11226  14BB  00F5               	movwf	??_Exception_Main
 11227  14BC  0875               	movf	??_Exception_Main,w
 11228  14BD  00F3               	movwf	setLED@command
 11229  14BE  0020               	movlb	0	; select bank0
 11230  14BF  0823               	movf	Exception_Main@error,w
 11231  14C0  318C  2417         	fcall	_setLED
 11232                           
 11233                           ;Main_B1.c: 528: }
 11234                           ;Main_B1.c: 529: } else {
 11235  14C2  0008               	return
 11236  14C3                     l11499:	
 11237                           
 11238                           ;Main_B1.c: 530: if (error != 0) {
 11239  14C3  0020               	movlb	0	; select bank0
 11240  14C4  0823               	movf	Exception_Main@error,w
 11241  14C5  1903               	btfsc	3,2
 11242  14C6  0008               	return
 11243                           
 11244                           ;Main_B1.c: 531: myMain.Error_Run = 1;
 11245  14C7  0021               	movlb	1	; select bank1
 11246  14C8  15C9               	bsf	(_myMain^(0+128)+10),3
 11247                           
 11248                           ;Main_B1.c: 535: setLED(error, 111);
 11249  14C9  306F               	movlw	111
 11250  14CA  00F5               	movwf	??_Exception_Main
 11251  14CB  0875               	movf	??_Exception_Main,w
 11252  14CC  00F3               	movwf	setLED@command
 11253  14CD  0020               	movlb	0	; select bank0
 11254  14CE  0823               	movf	Exception_Main@error,w
 11255  14CF  318C  2417  3194   	fcall	_setLED
 11256                           
 11257                           ;Main_B1.c: 592: }
 11258                           
 11259                           ;Main_B1.c: 591: break;
 11260                           
 11261                           ;Main_B1.c: 567: case 3:
 11262                           
 11263                           ;Main_B1.c: 566: break;
 11264                           
 11265                           ;Main_B1.c: 545: case 2:
 11266                           
 11267                           ;Main_B1.c: 544: switch (error) {
 11268  14D2  0020               	movlb	0	; select bank0
 11269  14D3  0823               	movf	Exception_Main@error,w
 11270                           
 11271                           ; Switch size 1, requested type "space"
 11272                           ; Number of cases is 2, Range of values is 2 to 3
 11273                           ; switch strategies available:
 11274                           ; Name         Instructions Cycles
 11275                           ; simple_byte            7     4 (average)
 11276                           ; direct_byte           13     9 (fixed)
 11277                           ; jumptable            263     9 (fixed)
 11278                           ;	Chosen strategy is simple_byte
 11279  14D4  3A02               	xorlw	2	; case 2
 11280  14D5  1903               	skipnz
 11281  14D6  2CDC               	goto	l1831
 11282  14D7  3A01               	xorlw	1	; case 3
 11283  14D8  1903               	skipnz
 11284  14D9  2CDC               	goto	l1831
 11285  14DA  2CDC               	goto	l1831
 11286  14DB  0008               	return
 11287  14DC                     l1831:	
 11288  14DC  0008               	return
 11289  14DD                     __end_of_Exception_Main:	
 11290                           
 11291                           	psect	text72
 11292  1C9F                     __ptext72:	
 11293 ;; *************** function _getMain_All_Error_Status *****************
 11294 ;; Defined at:
 11295 ;;		line 430 in file "../src/Main_B1.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  command         1    wreg     unsigned char 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  command         1    0[COMMON] unsigned char 
 11300 ;;  status          1    2[COMMON] unsigned char 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      unsigned char 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;Total ram usage:        1 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_Exception_Main
 11321 ;;		_getRxData
 11322 ;;		_setSw_Main
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           
 11327                           ;psect for function _getMain_All_Error_Status
 11328  1C9F                     _getMain_All_Error_Status:	
 11329                           
 11330                           ;Main_B1.c: 431: char status = 0;
 11331                           
 11332                           ;incstack = 0
 11333                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
 11334  1C9F  01F2               	clrf	getMain_All_Error_Status@status
 11335                           
 11336                           ;Main_B1.c: 461: return status;
 11337  1CA0  0872               	movf	getMain_All_Error_Status@status,w
 11338  1CA1  0008               	return
 11339  1CA2                     __end_of_getMain_All_Error_Status:	
 11340                           
 11341                           	psect	text73
 11342  1F69                     __ptext73:	
 11343 ;; *************** function _DimmerLights_Main *****************
 11344 ;; Defined at:
 11345 ;;		line 867 in file "../src/Dimmer_B1.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;		None
 11350 ;; Return value:  Size  Location     Type
 11351 ;;		None               void
 11352 ;; Registers used:
 11353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;Total ram usage:        0 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; Hardware stack levels required when called:    8
 11366 ;; This function calls:
 11367 ;;		_DimmerLights_DimmingFunction
 11368 ;;		_setDimmerLights_Main
 11369 ;; This function is called by:
 11370 ;;		_main
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           
 11375                           ;psect for function _DimmerLights_Main
 11376  1F69                     _DimmerLights_Main:	
 11377                           
 11378                           ;Dimmer_B1.c: 879: setDimmerLights_Main(1);
 11379                           
 11380                           ;incstack = 0
 11381                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11382  1F69  3001               	movlw	1
 11383  1F6A  318A  2219  319F   	fcall	_setDimmerLights_Main
 11384                           
 11385                           ;Dimmer_B1.c: 882: DimmerLights_DimmingFunction(1);
 11386  1F6D  3001               	movlw	1
 11387  1F6E  3182  22C0  319F   	fcall	_DimmerLights_DimmingFunction
 11388                           
 11389                           ;Dimmer_B1.c: 892: setDimmerLights_Main(2);
 11390  1F71  3002               	movlw	2
 11391  1F72  318A  2219  319F   	fcall	_setDimmerLights_Main
 11392                           
 11393                           ;Dimmer_B1.c: 894: DimmerLights_DimmingFunction(2);
 11394  1F75  3002               	movlw	2
 11395  1F76  3182  22C0  319F   	fcall	_DimmerLights_DimmingFunction
 11396                           
 11397                           ;Dimmer_B1.c: 904: setDimmerLights_Main(3);
 11398  1F79  3003               	movlw	3
 11399  1F7A  318A  2219  319F   	fcall	_setDimmerLights_Main
 11400                           
 11401                           ;Dimmer_B1.c: 907: DimmerLights_DimmingFunction(3);
 11402  1F7D  3003               	movlw	3
 11403  1F7E  3182  22C0         	fcall	_DimmerLights_DimmingFunction
 11404  1F80  0008               	return
 11405  1F81                     __end_of_DimmerLights_Main:	
 11406                           
 11407                           	psect	text74
 11408  0A19                     __ptext74:	
 11409 ;; *************** function _setDimmerLights_Main *****************
 11410 ;; Defined at:
 11411 ;;		line 924 in file "../src/Dimmer_B1.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  lights          1    wreg     unsigned char 
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;  lights          1   69[BANK0 ] unsigned char 
 11416 ;; Return value:  Size  Location     Type
 11417 ;;		None               void
 11418 ;; Registers used:
 11419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;Total ram usage:        1 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    7
 11432 ;; This function calls:
 11433 ;;		_DimmerLights_SelectPointer
 11434 ;;		_getDimmerLights_Allow_Condition
 11435 ;;		_getMain_All_LightsStatus
 11436 ;;		_setDimmerLights_Dimming
 11437 ;;		_setDimmerLights_OnOff
 11438 ;; This function is called by:
 11439 ;;		_DimmerLights_Main
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           
 11444                           ;psect for function _setDimmerLights_Main
 11445  0A19                     _setDimmerLights_Main:	
 11446                           
 11447                           ;incstack = 0
 11448                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11449                           ;setDimmerLights_Main@lights stored from wreg
 11450  0A19  0020               	movlb	0	; select bank0
 11451  0A1A  00E5               	movwf	setDimmerLights_Main@lights
 11452                           
 11453                           ;Dimmer_B1.c: 926: DimmerLights_SelectPointer(lights);
 11454  0A1B  0865               	movf	setDimmerLights_Main@lights,w
 11455  0A1C  3191  2193  318A   	fcall	_DimmerLights_SelectPointer
 11456                           
 11457                           ;Dimmer_B1.c: 927: if (DimmerLights->Trigger == 1) {
 11458  0A1F  0020               	movlb	0	; select bank0
 11459  0A20  086A               	movf	_DimmerLights,w
 11460  0A21  0086               	movwf	6
 11461  0A22  3001               	movlw	1	; select bank2/3
 11462  0A23  0087               	movwf	7
 11463  0A24  1C81               	btfss	1,1
 11464  0A25  2A45               	goto	l11217
 11465                           
 11466                           ;Dimmer_B1.c: 928: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11467  0A26  0865               	movf	setDimmerLights_Main@lights,w
 11468  0A27  3196  2614  318A   	fcall	_getDimmerLights_Allow_Condition
 11469  0A2A  3800               	iorlw	0
 11470  0A2B  1D03               	skipz
 11471  0A2C  0008               	return
 11472                           
 11473                           ;Dimmer_B1.c: 929: DimmerLights->Trigger = 0;
 11474  0A2D  0020               	movlb	0	; select bank0
 11475  0A2E  086A               	movf	_DimmerLights,w
 11476  0A2F  0086               	movwf	6
 11477  0A30  3001               	movlw	1	; select bank2/3
 11478  0A31  0087               	movwf	7
 11479  0A32  1081               	bcf	1,1
 11480                           
 11481                           ;Dimmer_B1.c: 930: if (DimmerLights->Switch == 1) {
 11482  0A33  086A               	movf	_DimmerLights,w
 11483  0A34  0086               	movwf	6
 11484  0A35  3001               	movlw	1	; select bank2/3
 11485  0A36  0087               	movwf	7
 11486  0A37  1D01               	btfss	1,2
 11487  0A38  2A3F               	goto	l11215
 11488                           
 11489                           ;Dimmer_B1.c: 931: setDimmerLights_OnOff(lights, 1);
 11490  0A39  01E1               	clrf	setDimmerLights_OnOff@command
 11491  0A3A  0AE1               	incf	setDimmerLights_OnOff@command,f
 11492  0A3B  0865               	movf	setDimmerLights_Main@lights,w
 11493  0A3C  3184  2473         	fcall	_setDimmerLights_OnOff
 11494                           
 11495                           ;Dimmer_B1.c: 932: } else {
 11496  0A3E  0008               	return
 11497  0A3F                     l11215:	
 11498                           
 11499                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 0);
 11500  0A3F  0020               	movlb	0	; select bank0
 11501  0A40  01E1               	clrf	setDimmerLights_OnOff@command
 11502  0A41  0865               	movf	setDimmerLights_Main@lights,w
 11503  0A42  3184  2473         	fcall	_setDimmerLights_OnOff
 11504                           
 11505                           ;Dimmer_B1.c: 934: }
 11506                           ;Dimmer_B1.c: 935: }
 11507                           ;Dimmer_B1.c: 936: } else {
 11508  0A44  0008               	return
 11509  0A45                     l11217:	
 11510                           
 11511                           ;Dimmer_B1.c: 937: if (getMain_All_LightsStatus() == 1) {
 11512  0A45  319F  273B  318A   	fcall	_getMain_All_LightsStatus
 11513  0A48  3A01               	xorlw	1
 11514  0A49  1D03               	skipz
 11515  0A4A  2A71               	goto	l11229
 11516                           
 11517                           ;Dimmer_B1.c: 938: if (DimmerLights->DimmingTrigger == 1) {
 11518  0A4B  0020               	movlb	0	; select bank0
 11519  0A4C  086A               	movf	_DimmerLights,w
 11520  0A4D  0086               	movwf	6
 11521  0A4E  3001               	movlw	1	; select bank2/3
 11522  0A4F  0087               	movwf	7
 11523  0A50  1E01               	btfss	1,4
 11524  0A51  0008               	return
 11525                           
 11526                           ;Dimmer_B1.c: 939: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11527  0A52  0865               	movf	setDimmerLights_Main@lights,w
 11528  0A53  3196  2614  318A   	fcall	_getDimmerLights_Allow_Condition
 11529  0A56  3800               	iorlw	0
 11530  0A57  1D03               	skipz
 11531  0A58  0008               	return
 11532                           
 11533                           ;Dimmer_B1.c: 940: DimmerLights->DimmingTrigger = 0;
 11534  0A59  0020               	movlb	0	; select bank0
 11535  0A5A  086A               	movf	_DimmerLights,w
 11536  0A5B  0086               	movwf	6
 11537  0A5C  3001               	movlw	1	; select bank2/3
 11538  0A5D  0087               	movwf	7
 11539  0A5E  1201               	bcf	1,4
 11540                           
 11541                           ;Dimmer_B1.c: 941: if (DimmerLights->DimmingSwitch == 1) {
 11542  0A5F  086A               	movf	_DimmerLights,w
 11543  0A60  0086               	movwf	6
 11544  0A61  3001               	movlw	1	; select bank2/3
 11545  0A62  0087               	movwf	7
 11546  0A63  1E81               	btfss	1,5
 11547  0A64  2A6B               	goto	l11227
 11548                           
 11549                           ;Dimmer_B1.c: 942: setDimmerLights_Dimming(lights, 1);
 11550  0A65  01DE               	clrf	setDimmerLights_Dimming@status
 11551  0A66  0ADE               	incf	setDimmerLights_Dimming@status,f
 11552  0A67  0865               	movf	setDimmerLights_Main@lights,w
 11553  0A68  3197  27B4         	fcall	_setDimmerLights_Dimming
 11554                           
 11555                           ;Dimmer_B1.c: 943: } else {
 11556  0A6A  0008               	return
 11557  0A6B                     l11227:	
 11558                           
 11559                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 0);
 11560  0A6B  0020               	movlb	0	; select bank0
 11561  0A6C  01DE               	clrf	setDimmerLights_Dimming@status
 11562  0A6D  0865               	movf	setDimmerLights_Main@lights,w
 11563  0A6E  3197  27B4         	fcall	_setDimmerLights_Dimming
 11564                           
 11565                           ;Dimmer_B1.c: 945: }
 11566                           ;Dimmer_B1.c: 946: }
 11567                           ;Dimmer_B1.c: 947: }
 11568                           ;Dimmer_B1.c: 948: } else {
 11569  0A70  0008               	return
 11570  0A71                     l11229:	
 11571                           
 11572                           ;Dimmer_B1.c: 949: if (DimmerLights->DimmingTrigger == 1) {
 11573  0A71  0020               	movlb	0	; select bank0
 11574  0A72  086A               	movf	_DimmerLights,w
 11575  0A73  0086               	movwf	6
 11576  0A74  3001               	movlw	1	; select bank2/3
 11577  0A75  0087               	movwf	7
 11578  0A76  1E01               	btfss	1,4
 11579  0A77  0008               	return
 11580                           
 11581                           ;Dimmer_B1.c: 950: DimmerLights->DimmingTrigger = 0;
 11582  0A78  086A               	movf	_DimmerLights,w
 11583  0A79  0086               	movwf	6
 11584  0A7A  3001               	movlw	1	; select bank2/3
 11585  0A7B  0087               	movwf	7
 11586  0A7C  1201               	bcf	1,4
 11587  0A7D  0008               	return
 11588  0A7E                     __end_of_setDimmerLights_Main:	
 11589                           
 11590                           	psect	text75
 11591  0473                     __ptext75:	
 11592 ;; *************** function _setDimmerLights_OnOff *****************
 11593 ;; Defined at:
 11594 ;;		line 1001 in file "../src/Dimmer_B1.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  lights          1    wreg     unsigned char 
 11597 ;;  command         1   65[BANK0 ] unsigned char 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  lights          1   68[BANK0 ] unsigned char 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;		None               void
 11602 ;; Registers used:
 11603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11609 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;Total ram usage:        4 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:    6
 11616 ;; This function calls:
 11617 ;;		_DimmerIntr_ValueCalculate
 11618 ;;		_getCmd_Status
 11619 ;;		_getDelayOff_GO
 11620 ;;		_getDimmerLights_PercentToValue
 11621 ;;		_getMain_All_LightsStatus
 11622 ;;		_setCmd_Status
 11623 ;;		_setDelayOff_GO
 11624 ;;		_setDimmerIntr_ControlStatus
 11625 ;;		_setDimmerIntr_DimmingValue
 11626 ;;		_setDimmerIntr_Dimming_RF
 11627 ;;		_setDimmerIntr_MaxmumValue
 11628 ;;		_setDimmerLights_DimmingClose
 11629 ;;		_setLED
 11630 ;;		_setProductData
 11631 ;;		_setRF_DimmerLights
 11632 ;;		_setTxData
 11633 ;; This function is called by:
 11634 ;;		_setDimmerLights_Main
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _setDimmerLights_OnOff
 11640  0473                     _setDimmerLights_OnOff:	
 11641                           
 11642                           ;incstack = 0
 11643                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11644                           ;setDimmerLights_OnOff@lights stored from wreg
 11645  0473  0020               	movlb	0	; select bank0
 11646  0474  00E4               	movwf	setDimmerLights_OnOff@lights
 11647                           
 11648                           ;Dimmer_B1.c: 1003: if (command == 1) {
 11649  0475  0861               	movf	setDimmerLights_OnOff@command,w
 11650  0476  3A01               	xorlw	1
 11651  0477  1D03               	skipz
 11652  0478  2CD6               	goto	l11033
 11653                           
 11654                           ;Dimmer_B1.c: 1005: setDimmerIntr_ControlStatus(lights, 1);
 11655  0479  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11656  047A  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
 11657  047B  0864               	movf	setDimmerLights_OnOff@lights,w
 11658  047C  3195  2519  3184   	fcall	_setDimmerIntr_ControlStatus
 11659                           
 11660                           ;Dimmer_B1.c: 1015: setLED(lights, 0);
 11661  047F  01F3               	clrf	setLED@command
 11662  0480  0020               	movlb	0	; select bank0
 11663  0481  0864               	movf	setDimmerLights_OnOff@lights,w
 11664  0482  318C  2417  3184   	fcall	_setLED
 11665                           
 11666                           ;Dimmer_B1.c: 1036: if (DimmerLights->DimmingRun == 1) {
 11667  0485  0020               	movlb	0	; select bank0
 11668  0486  0A6A               	incf	_DimmerLights,w
 11669  0487  0086               	movwf	6
 11670  0488  3001               	movlw	1	; select bank2/3
 11671  0489  0087               	movwf	7
 11672  048A  1F01               	btfss	1,6
 11673  048B  2CAD               	goto	l11023
 11674                           
 11675                           ;Dimmer_B1.c: 1037: DimmerLights->DimmingRun = 0;
 11676  048C  0A6A               	incf	_DimmerLights,w
 11677  048D  0086               	movwf	6
 11678  048E  3001               	movlw	1	; select bank2/3
 11679  048F  0087               	movwf	7
 11680  0490  1301               	bcf	1,6
 11681                           
 11682                           ;Dimmer_B1.c: 1038: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 11683  0491  0864               	movf	setDimmerLights_OnOff@lights,w
 11684  0492  3E14               	addlw	20
 11685  0493  076E               	addwf	_product,w
 11686  0494  00E2               	movwf	??_setDimmerLights_OnOff
 11687  0495  0862               	movf	??_setDimmerLights_OnOff,w
 11688  0496  0086               	movwf	6
 11689  0497  3002               	movlw	2	; select bank4/5
 11690  0498  0087               	movwf	7
 11691  0499  0801               	movf	1,w
 11692  049A  3188  20F7  3184   	fcall	_getDimmerLights_PercentToValue
 11693  049D  0020               	movlb	0	; select bank0
 11694  049E  00E3               	movwf	??_setDimmerLights_OnOff+1
 11695  049F  0863               	movf	??_setDimmerLights_OnOff+1,w
 11696  04A0  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 11697  04A1  0864               	movf	setDimmerLights_OnOff@lights,w
 11698  04A2  3192  2218  3184   	fcall	_setDimmerIntr_MaxmumValue
 11699                           
 11700                           ;Dimmer_B1.c: 1039: setDimmerIntr_Dimming_RF(lights, 1);
 11701  04A5  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 11702  04A6  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 11703  04A7  0020               	movlb	0	; select bank0
 11704  04A8  0864               	movf	setDimmerLights_OnOff@lights,w
 11705  04A9  3195  2556  3184   	fcall	_setDimmerIntr_Dimming_RF
 11706                           
 11707                           ;Dimmer_B1.c: 1040: } else {
 11708  04AC  2CC2               	goto	l11025
 11709  04AD                     l11023:	
 11710                           
 11711                           ;Dimmer_B1.c: 1043: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pr
      +                          oduct->Data[20 + lights]));
 11712  04AD  0020               	movlb	0	; select bank0
 11713  04AE  0864               	movf	setDimmerLights_OnOff@lights,w
 11714  04AF  3E14               	addlw	20
 11715  04B0  076E               	addwf	_product,w
 11716  04B1  00E2               	movwf	??_setDimmerLights_OnOff
 11717  04B2  0862               	movf	??_setDimmerLights_OnOff,w
 11718  04B3  0086               	movwf	6
 11719  04B4  3002               	movlw	2	; select bank4/5
 11720  04B5  0087               	movwf	7
 11721  04B6  0801               	movf	1,w
 11722  04B7  3188  20F7  3184   	fcall	_getDimmerLights_PercentToValue
 11723  04BA  0020               	movlb	0	; select bank0
 11724  04BB  00E3               	movwf	??_setDimmerLights_OnOff+1
 11725  04BC  0863               	movf	??_setDimmerLights_OnOff+1,w
 11726  04BD  00D8               	movwf	setDimmerIntr_DimmingValue@value
 11727  04BE  0864               	movf	setDimmerLights_OnOff@lights,w
 11728  04BF  3192  223A  3184   	fcall	_setDimmerIntr_DimmingValue
 11729  04C2                     l11025:	
 11730                           
 11731                           ;Dimmer_B1.c: 1049: }
 11732                           ;Dimmer_B1.c: 1051: if (lights == 1) {
 11733  04C2  0020               	movlb	0	; select bank0
 11734  04C3  0864               	movf	setDimmerLights_OnOff@lights,w
 11735  04C4  3A01               	xorlw	1
 11736  04C5  1D03               	skipz
 11737  04C6  2CCC               	goto	l11029
 11738                           
 11739                           ;Dimmer_B1.c: 1054: DimmerIntr_ValueCalculate(1);
 11740  04C7  3001               	movlw	1
 11741  04C8  3193  2364  3184   	fcall	_DimmerIntr_ValueCalculate
 11742                           
 11743                           ;Dimmer_B1.c: 1056: } else if (lights == 2) {
 11744  04CB  2D06               	goto	l11053
 11745  04CC                     l11029:	
 11746  04CC  0020               	movlb	0	; select bank0
 11747  04CD  0864               	movf	setDimmerLights_OnOff@lights,w
 11748  04CE  3A02               	xorlw	2
 11749  04CF  1D03               	skipz
 11750  04D0  2D06               	goto	l11053
 11751                           
 11752                           ;Dimmer_B1.c: 1059: DimmerIntr_ValueCalculate(2);
 11753  04D1  3002               	movlw	2
 11754  04D2  3193  2364  3184   	fcall	_DimmerIntr_ValueCalculate
 11755                           
 11756                           ;Dimmer_B1.c: 1061: }
 11757                           ;Dimmer_B1.c: 1067: } else if (command == 0) {
 11758  04D5  2D06               	goto	l11053
 11759  04D6                     l11033:	
 11760  04D6  0020               	movlb	0	; select bank0
 11761  04D7  08E1               	movf	setDimmerLights_OnOff@command,f
 11762  04D8  1D03               	skipz
 11763  04D9  2D06               	goto	l11053
 11764                           
 11765                           ;Dimmer_B1.c: 1069: setDimmerIntr_ControlStatus(lights, 0);
 11766  04DA  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11767  04DB  0864               	movf	setDimmerLights_OnOff@lights,w
 11768  04DC  3195  2519  3184   	fcall	_setDimmerIntr_ControlStatus
 11769                           
 11770                           ;Dimmer_B1.c: 1076: if (getDelayOff_GO(lights) == 1) {
 11771  04DF  0020               	movlb	0	; select bank0
 11772  04E0  0864               	movf	setDimmerLights_OnOff@lights,w
 11773  04E1  319D  258D  3184   	fcall	_getDelayOff_GO
 11774  04E4  3A01               	xorlw	1
 11775  04E5  1D03               	skipz
 11776  04E6  2CEE               	goto	l973
 11777                           
 11778                           ;Dimmer_B1.c: 1077: setDelayOff_GO(lights, 0, 0);
 11779  04E7  0020               	movlb	0	; select bank0
 11780  04E8  01D9               	clrf	setDelayOff_GO@command
 11781  04E9  01DA               	clrf	setDelayOff_GO@value
 11782  04EA  0864               	movf	setDimmerLights_OnOff@lights,w
 11783  04EB  318C  2488  3184   	fcall	_setDelayOff_GO
 11784  04EE                     l973:	
 11785                           
 11786                           ;Dimmer_B1.c: 1078: }
 11787                           ;Dimmer_B1.c: 1083: setLED(lights, 1);
 11788  04EE  01F3               	clrf	setLED@command
 11789  04EF  0AF3               	incf	setLED@command,f
 11790  04F0  0020               	movlb	0	; select bank0
 11791  04F1  0864               	movf	setDimmerLights_OnOff@lights,w
 11792  04F2  318C  2417  3184   	fcall	_setLED
 11793                           
 11794                           ;Dimmer_B1.c: 1088: if (lights == 1) {
 11795  04F5  0020               	movlb	0	; select bank0
 11796  04F6  0864               	movf	setDimmerLights_OnOff@lights,w
 11797  04F7  3A01               	xorlw	1
 11798  04F8  1D03               	skipz
 11799  04F9  2CFC               	goto	l11045
 11800                           
 11801                           ;Dimmer_B1.c: 1094: RB4 = 0;
 11802  04FA  120D               	bcf	13,4	;volatile
 11803                           
 11804                           ;Dimmer_B1.c: 1096: }
 11805  04FB  2D06               	goto	l11053
 11806  04FC                     l11045:	
 11807                           
 11808                           ;Dimmer_B1.c: 1099: else if (lights == 2) {
 11809  04FC  0864               	movf	setDimmerLights_OnOff@lights,w
 11810  04FD  3A02               	xorlw	2
 11811  04FE  1D03               	skipz
 11812  04FF  2D02               	goto	l11049
 11813                           
 11814                           ;Dimmer_B1.c: 1104: RA7 = 0;
 11815  0500  138C               	bcf	12,7	;volatile
 11816                           
 11817                           ;Dimmer_B1.c: 1106: }
 11818  0501  2D06               	goto	l11053
 11819  0502                     l11049:	
 11820                           
 11821                           ;Dimmer_B1.c: 1110: else if (lights == 3) {
 11822  0502  0864               	movf	setDimmerLights_OnOff@lights,w
 11823  0503  3A03               	xorlw	3
 11824  0504  1903               	btfsc	3,2
 11825                           
 11826                           ;Dimmer_B1.c: 1115: RB1 = 0;
 11827  0505  108D               	bcf	13,1	;volatile
 11828  0506                     l11053:	
 11829                           
 11830                           ;Dimmer_B1.c: 1117: }
 11831                           ;Dimmer_B1.c: 1122: }
 11832                           ;Dimmer_B1.c: 1124: setDimmerLights_DimmingClose();
 11833  0506  319D  259C  3184   	fcall	_setDimmerLights_DimmingClose
 11834                           
 11835                           ;Dimmer_B1.c: 1126: setRF_DimmerLights(lights, command);
 11836  0509  0020               	movlb	0	; select bank0
 11837  050A  0861               	movf	setDimmerLights_OnOff@command,w
 11838  050B  00E2               	movwf	??_setDimmerLights_OnOff
 11839  050C  0862               	movf	??_setDimmerLights_OnOff,w
 11840  050D  00D9               	movwf	setRF_DimmerLights@on
 11841  050E  0864               	movf	setDimmerLights_OnOff@lights,w
 11842  050F  318A  22E3  3184   	fcall	_setRF_DimmerLights
 11843                           
 11844                           ;Dimmer_B1.c: 1128: if (getCmd_Status(1) == 1) {
 11845  0512  3001               	movlw	1
 11846  0513  319E  2616  3184   	fcall	_getCmd_Status
 11847  0516  3A01               	xorlw	1
 11848  0517  1D03               	skipz
 11849  0518  2D33               	goto	l11069
 11850                           
 11851                           ;Dimmer_B1.c: 1129: if (getMain_All_LightsStatus() == 0) {
 11852  0519  319F  273B  3184   	fcall	_getMain_All_LightsStatus
 11853  051C  3800               	iorlw	0
 11854  051D  1D03               	skipz
 11855  051E  0008               	return
 11856                           
 11857                           ;Dimmer_B1.c: 1130: setCmd_Status(1, 0);
 11858  051F  01F2               	clrf	setCmd_Status@cmd
 11859  0520  3001               	movlw	1
 11860  0521  319E  26D2  3184   	fcall	_setCmd_Status
 11861                           
 11862                           ;Dimmer_B1.c: 1131: setProductData(11, 0);
 11863  0524  0020               	movlb	0	; select bank0
 11864  0525  01D6               	clrf	setProductData@value
 11865  0526  300B               	movlw	11
 11866  0527  319D  2530  3184   	fcall	_setProductData
 11867                           
 11868                           ;Dimmer_B1.c: 1132: setProductData(17, 0);
 11869  052A  0020               	movlb	0	; select bank0
 11870  052B  01D6               	clrf	setProductData@value
 11871  052C  3011               	movlw	17
 11872  052D  319D  2530  3184   	fcall	_setProductData
 11873                           
 11874                           ;Dimmer_B1.c: 1133: setTxData();
 11875  0530  319C  24D2         	fcall	_setTxData
 11876                           
 11877                           ;Dimmer_B1.c: 1134: }
 11878                           ;Dimmer_B1.c: 1135: } else {
 11879  0532  0008               	return
 11880  0533                     l11069:	
 11881                           
 11882                           ;Dimmer_B1.c: 1136: setTxData();
 11883  0533  319C  24D2         	fcall	_setTxData
 11884  0535  0008               	return
 11885  0536                     __end_of_setDimmerLights_OnOff:	
 11886                           
 11887                           	psect	text76
 11888  0C17                     __ptext76:	
 11889 ;; *************** function _setLED *****************
 11890 ;; Defined at:
 11891 ;;		line 81 in file "../src/LED_B1.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  led             1    wreg     unsigned char 
 11894 ;;  command         1    3[COMMON] unsigned char 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  led             1    4[COMMON] unsigned char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;		None               void
 11899 ;; Registers used:
 11900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11906 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;Total ram usage:        2 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:    4
 11913 ;; This function calls:
 11914 ;;		_LedPointSelect
 11915 ;; This function is called by:
 11916 ;;		_setDimmerLights_OnOff
 11917 ;;		_setLED_Initialization
 11918 ;;		_Exception_Main
 11919 ;;		_setSw_Initialization
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           
 11924                           ;psect for function _setLED
 11925  0C17                     _setLED:	
 11926                           
 11927                           ;incstack = 0
 11928                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11929                           ;setLED@led stored from wreg
 11930  0C17  00F4               	movwf	setLED@led
 11931                           
 11932                           ;LED_B1.c: 82: LedPointSelect(led);
 11933  0C18  0874               	movf	setLED@led,w
 11934  0C19  3192  225C  318C   	fcall	_LedPointSelect
 11935                           
 11936                           ;LED_B1.c: 83: if (command == 0) {
 11937  0C1C  08F3               	movf	setLED@command,f
 11938  0C1D  1D03               	skipz
 11939  0C1E  2C37               	goto	l10805
 11940                           
 11941                           ;LED_B1.c: 85: if (led == 1) {
 11942  0C1F  0874               	movf	setLED@led,w
 11943  0C20  3A01               	xorlw	1
 11944  0C21  1D03               	skipz
 11945  0C22  2C25               	goto	l10793
 11946                           
 11947                           ;LED_B1.c: 89: RC7 = 1;
 11948  0C23  0020               	movlb	0	; select bank0
 11949  0C24  178E               	bsf	14,7	;volatile
 11950  0C25                     l10793:	
 11951                           
 11952                           ;LED_B1.c: 91: }
 11953                           ;LED_B1.c: 94: if (led == 2) {
 11954  0C25  0874               	movf	setLED@led,w
 11955  0C26  3A02               	xorlw	2
 11956  0C27  1D03               	skipz
 11957  0C28  2C2B               	goto	l10797
 11958                           
 11959                           ;LED_B1.c: 98: RA3 = 1;
 11960  0C29  0020               	movlb	0	; select bank0
 11961  0C2A  158C               	bsf	12,3	;volatile
 11962  0C2B                     l10797:	
 11963                           
 11964                           ;LED_B1.c: 100: }
 11965                           ;LED_B1.c: 103: if (led == 3) {
 11966  0C2B  0874               	movf	setLED@led,w
 11967  0C2C  3A03               	xorlw	3
 11968  0C2D  1D03               	skipz
 11969  0C2E  2C31               	goto	l10801
 11970                           
 11971                           ;LED_B1.c: 107: RC6 = 1;
 11972  0C2F  0020               	movlb	0	; select bank0
 11973  0C30  170E               	bsf	14,6	;volatile
 11974  0C31                     l10801:	
 11975                           
 11976                           ;LED_B1.c: 109: }
 11977                           ;LED_B1.c: 112: if (led == 99) {
 11978  0C31  0874               	movf	setLED@led,w
 11979  0C32  3A63               	xorlw	99
 11980  0C33  1D03               	skipz
 11981  0C34  2C37               	goto	l10805
 11982                           
 11983                           ;LED_B1.c: 116: RB5 = 1;
 11984  0C35  0020               	movlb	0	; select bank0
 11985  0C36  168D               	bsf	13,5	;volatile
 11986  0C37                     l10805:	
 11987                           
 11988                           ;LED_B1.c: 118: }
 11989                           ;LED_B1.c: 120: }
 11990                           ;LED_B1.c: 121: if (command == 1) {
 11991  0C37  0873               	movf	setLED@command,w
 11992  0C38  3A01               	xorlw	1
 11993  0C39  1D03               	skipz
 11994  0C3A  2C53               	goto	l10823
 11995                           
 11996                           ;LED_B1.c: 123: if (led == 1) {
 11997  0C3B  0874               	movf	setLED@led,w
 11998  0C3C  3A01               	xorlw	1
 11999  0C3D  1D03               	skipz
 12000  0C3E  2C41               	goto	l10811
 12001                           
 12002                           ;LED_B1.c: 127: RC7 = 0;
 12003  0C3F  0020               	movlb	0	; select bank0
 12004  0C40  138E               	bcf	14,7	;volatile
 12005  0C41                     l10811:	
 12006                           
 12007                           ;LED_B1.c: 129: }
 12008                           ;LED_B1.c: 132: if (led == 2) {
 12009  0C41  0874               	movf	setLED@led,w
 12010  0C42  3A02               	xorlw	2
 12011  0C43  1D03               	skipz
 12012  0C44  2C47               	goto	l10815
 12013                           
 12014                           ;LED_B1.c: 136: RA3 = 0;
 12015  0C45  0020               	movlb	0	; select bank0
 12016  0C46  118C               	bcf	12,3	;volatile
 12017  0C47                     l10815:	
 12018                           
 12019                           ;LED_B1.c: 138: }
 12020                           ;LED_B1.c: 141: if (led == 3) {
 12021  0C47  0874               	movf	setLED@led,w
 12022  0C48  3A03               	xorlw	3
 12023  0C49  1D03               	skipz
 12024  0C4A  2C4D               	goto	l10819
 12025                           
 12026                           ;LED_B1.c: 145: RC6 = 0;
 12027  0C4B  0020               	movlb	0	; select bank0
 12028  0C4C  130E               	bcf	14,6	;volatile
 12029  0C4D                     l10819:	
 12030                           
 12031                           ;LED_B1.c: 147: }
 12032                           ;LED_B1.c: 150: if (led == 99) {
 12033  0C4D  0874               	movf	setLED@led,w
 12034  0C4E  3A63               	xorlw	99
 12035  0C4F  1D03               	skipz
 12036  0C50  2C53               	goto	l10823
 12037                           
 12038                           ;LED_B1.c: 154: RB5 = 0;
 12039  0C51  0020               	movlb	0	; select bank0
 12040  0C52  128D               	bcf	13,5	;volatile
 12041  0C53                     l10823:	
 12042                           
 12043                           ;LED_B1.c: 156: }
 12044                           ;LED_B1.c: 158: }
 12045                           ;LED_B1.c: 159: if (command == 10) {
 12046  0C53  0873               	movf	setLED@command,w
 12047  0C54  3A0A               	xorlw	10
 12048  0C55  1D03               	skipz
 12049  0C56  2C7E               	goto	l10843
 12050                           
 12051                           ;LED_B1.c: 160: LED->GO = 0;
 12052  0C57  087A               	movf	_LED,w
 12053  0C58  0086               	movwf	6
 12054  0C59  087B               	movf	_LED+1,w
 12055  0C5A  0087               	movwf	7
 12056  0C5B  1081               	bcf	1,1
 12057                           
 12058                           ;LED_B1.c: 161: LED->Time = 0;
 12059  0C5C  087A               	movf	_LED,w
 12060  0C5D  0086               	movwf	6
 12061  0C5E  087B               	movf	_LED+1,w
 12062  0C5F  0087               	movwf	7
 12063  0C60  3141               	addfsr 1,1
 12064  0C61  3000               	movlw	0
 12065  0C62  3FC0               	movwi [0]fsr1
 12066  0C63  3FC1               	movwi [1]fsr1
 12067                           
 12068                           ;LED_B1.c: 163: if (led == 1) {
 12069  0C64  0874               	movf	setLED@led,w
 12070  0C65  3A01               	xorlw	1
 12071  0C66  1D03               	skipz
 12072  0C67  2C6B               	goto	l10831
 12073                           
 12074                           ;LED_B1.c: 167: RC7 = 1;
 12075  0C68  0020               	movlb	0	; select bank0
 12076  0C69  178E               	bsf	14,7	;volatile
 12077                           
 12078                           ;LED_B1.c: 169: }
 12079  0C6A  2C78               	goto	l10839
 12080  0C6B                     l10831:	
 12081                           
 12082                           ;LED_B1.c: 172: else if (led == 2) {
 12083  0C6B  0874               	movf	setLED@led,w
 12084  0C6C  3A02               	xorlw	2
 12085  0C6D  1D03               	skipz
 12086  0C6E  2C72               	goto	l10835
 12087                           
 12088                           ;LED_B1.c: 176: RA3 = 1;
 12089  0C6F  0020               	movlb	0	; select bank0
 12090  0C70  158C               	bsf	12,3	;volatile
 12091                           
 12092                           ;LED_B1.c: 178: }
 12093  0C71  2C78               	goto	l10839
 12094  0C72                     l10835:	
 12095                           
 12096                           ;LED_B1.c: 181: else if (led == 3) {
 12097  0C72  0874               	movf	setLED@led,w
 12098  0C73  3A03               	xorlw	3
 12099  0C74  1D03               	skipz
 12100  0C75  2C78               	goto	l10839
 12101                           
 12102                           ;LED_B1.c: 185: RC6 = 1;
 12103  0C76  0020               	movlb	0	; select bank0
 12104  0C77  170E               	bsf	14,6	;volatile
 12105  0C78                     l10839:	
 12106                           
 12107                           ;LED_B1.c: 187: }
 12108                           ;LED_B1.c: 190: if (led == 99) {
 12109  0C78  0874               	movf	setLED@led,w
 12110  0C79  3A63               	xorlw	99
 12111  0C7A  1D03               	skipz
 12112  0C7B  2C7E               	goto	l10843
 12113                           
 12114                           ;LED_B1.c: 194: RB5 = 1;
 12115  0C7C  0020               	movlb	0	; select bank0
 12116  0C7D  168D               	bsf	13,5	;volatile
 12117  0C7E                     l10843:	
 12118                           
 12119                           ;LED_B1.c: 196: }
 12120                           ;LED_B1.c: 198: }
 12121                           ;LED_B1.c: 199: if (command == 11) {
 12122  0C7E  0873               	movf	setLED@command,w
 12123  0C7F  3A0B               	xorlw	11
 12124  0C80  1D03               	skipz
 12125  0C81  0008               	return
 12126                           
 12127                           ;LED_B1.c: 200: LED->GO = 1;
 12128  0C82  087A               	movf	_LED,w
 12129  0C83  0086               	movwf	6
 12130  0C84  087B               	movf	_LED+1,w
 12131  0C85  0087               	movwf	7
 12132  0C86  1481               	bsf	1,1
 12133  0C87  0008               	return
 12134  0C88                     __end_of_setLED:	
 12135                           
 12136                           	psect	text77
 12137  125C                     __ptext77:	
 12138 ;; *************** function _LedPointSelect *****************
 12139 ;; Defined at:
 12140 ;;		line 7 in file "../src/LED_B1.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;  led             1    wreg     unsigned char 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  led             1    2[COMMON] unsigned char 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;		None               void
 12147 ;; Registers used:
 12148 ;;		wreg, status,2, status,0
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;Total ram usage:        1 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:    3
 12161 ;; This function calls:
 12162 ;;		Nothing
 12163 ;; This function is called by:
 12164 ;;		_setLED_Initialization
 12165 ;;		_setLED
 12166 ;;		_setLED_Main
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           
 12171                           ;psect for function _LedPointSelect
 12172  125C                     _LedPointSelect:	
 12173                           
 12174                           ;incstack = 0
 12175                           ; Regs used in _LedPointSelect: [wreg+status,2+status,0]
 12176                           ;LedPointSelect@led stored from wreg
 12177  125C  00F2               	movwf	LedPointSelect@led
 12178                           
 12179                           ;LED_B1.c: 9: if (led == 1) {
 12180  125D  0872               	movf	LedPointSelect@led,w
 12181  125E  3A01               	xorlw	1
 12182  125F  1D03               	skipz
 12183  1260  2A65               	goto	l10603
 12184                           
 12185                           ;LED_B1.c: 10: LED = &VarLED1;
 12186  1261  30EC               	movlw	low _VarLED1
 12187  1262  00FA               	movwf	_LED
 12188  1263  3000               	movlw	high _VarLED1
 12189  1264  00FB               	movwf	_LED+1
 12190  1265                     l10603:	
 12191                           
 12192                           ;LED_B1.c: 11: }
 12193                           ;LED_B1.c: 14: if (led == 2) {
 12194  1265  0872               	movf	LedPointSelect@led,w
 12195  1266  3A02               	xorlw	2
 12196  1267  1D03               	skipz
 12197  1268  2A6D               	goto	l10607
 12198                           
 12199                           ;LED_B1.c: 15: LED = &VarLED2;
 12200  1269  30E8               	movlw	low _VarLED2
 12201  126A  00FA               	movwf	_LED
 12202  126B  3001               	movlw	high _VarLED2
 12203  126C  00FB               	movwf	_LED+1
 12204  126D                     l10607:	
 12205                           
 12206                           ;LED_B1.c: 16: }
 12207                           ;LED_B1.c: 19: if (led == 3) {
 12208  126D  0872               	movf	LedPointSelect@led,w
 12209  126E  3A03               	xorlw	3
 12210  126F  1D03               	skipz
 12211  1270  2A75               	goto	l10611
 12212                           
 12213                           ;LED_B1.c: 20: LED = &VarLED3;
 12214  1271  30EC               	movlw	low _VarLED3
 12215  1272  00FA               	movwf	_LED
 12216  1273  3001               	movlw	high _VarLED3
 12217  1274  00FB               	movwf	_LED+1
 12218  1275                     l10611:	
 12219                           
 12220                           ;LED_B1.c: 21: }
 12221                           ;LED_B1.c: 24: if (led == 99) {
 12222  1275  0872               	movf	LedPointSelect@led,w
 12223  1276  3A63               	xorlw	99
 12224  1277  1D03               	skipz
 12225  1278  0008               	return
 12226                           
 12227                           ;LED_B1.c: 25: LED = &VarErrLED;
 12228  1279  30E8               	movlw	low _VarErrLED
 12229  127A  00FA               	movwf	_LED
 12230  127B  3000               	movlw	high _VarErrLED
 12231  127C  00FB               	movwf	_LED+1
 12232  127D  0008               	return
 12233  127E                     __end_of_LedPointSelect:	
 12234                           
 12235                           	psect	text78
 12236  1D9C                     __ptext78:	
 12237 ;; *************** function _setDimmerLights_DimmingClose *****************
 12238 ;; Defined at:
 12239 ;;		line 2043 in file "../src/Dimmer_B1.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;		None               void
 12246 ;; Registers used:
 12247 ;;		wreg, status,2, status,0, pclath, cstack
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    4
 12260 ;; This function calls:
 12261 ;;		_setDimmerIntr_Dimming_Sw
 12262 ;; This function is called by:
 12263 ;;		_setDimmerLights_OnOff
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           
 12268                           ;psect for function _setDimmerLights_DimmingClose
 12269  1D9C                     _setDimmerLights_DimmingClose:	
 12270                           
 12271                           ;Dimmer_B1.c: 2045: setDimmerIntr_Dimming_Sw(1, 0);
 12272                           
 12273                           ;incstack = 0
 12274                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 12275  1D9C  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12276  1D9D  3001               	movlw	1
 12277  1D9E  3193  23C4  319D   	fcall	_setDimmerIntr_Dimming_Sw
 12278                           
 12279                           ;Dimmer_B1.c: 2049: setDimmerIntr_Dimming_Sw(2, 0);
 12280  1DA1  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12281  1DA2  3002               	movlw	2
 12282  1DA3  3193  23C4  319D   	fcall	_setDimmerIntr_Dimming_Sw
 12283                           
 12284                           ;Dimmer_B1.c: 2053: setDimmerIntr_Dimming_Sw(3, 0);
 12285  1DA6  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12286  1DA7  3003               	movlw	3
 12287  1DA8  3193  23C4         	fcall	_setDimmerIntr_Dimming_Sw
 12288  1DAA  0008               	return
 12289  1DAB                     __end_of_setDimmerLights_DimmingClose:	
 12290                           
 12291                           	psect	text79
 12292  1556                     __ptext79:	
 12293 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 12294 ;; Defined at:
 12295 ;;		line 290 in file "../src/Dimmer_B1.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  lights          1    wreg     unsigned char 
 12298 ;;  command         1    2[COMMON] unsigned char 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  lights          1    4[COMMON] unsigned char 
 12301 ;; Return value:  Size  Location     Type
 12302 ;;		None               void
 12303 ;; Registers used:
 12304 ;;		wreg, status,2, status,0
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;Total ram usage:        3 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    3
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_setDimmerLights_OnOff
 12321 ;;		_setRFSW_AdjControl
 12322 ;;		_DimmerLights_AssignationDimming
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           
 12327                           ;psect for function _setDimmerIntr_Dimming_RF
 12328  1556                     _setDimmerIntr_Dimming_RF:	
 12329                           
 12330                           ;incstack = 0
 12331                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 12332                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 12333  1556  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 12334                           
 12335                           ;Dimmer_B1.c: 292: if (lights == 1) {
 12336  1557  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12337  1558  3A01               	xorlw	1
 12338  1559  1D03               	skipz
 12339  155A  2D6B               	goto	l6793
 12340                           
 12341                           ;Dimmer_B1.c: 293: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 12342  155B  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12343  155C  3A01               	xorlw	1
 12344  155D  3000               	movlw	0
 12345  155E  1903               	skipnz
 12346  155F  3001               	movlw	1
 12347  1560  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12348  1561  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12349  1562  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12350  1563  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12351  1564  0021               	movlb	1	; select bank1
 12352  1565  0820               	movf	_DimmerIntr1^(0+128),w
 12353  1566  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12354  1567  39BF               	andlw	-65
 12355  1568  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12356  1569  00A0               	movwf	_DimmerIntr1^(0+128)
 12357                           
 12358                           ;Dimmer_B1.c: 294: }
 12359  156A  0008               	return
 12360  156B                     l6793:	
 12361                           
 12362                           ;Dimmer_B1.c: 297: else if (lights == 2) {
 12363  156B  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12364  156C  3A02               	xorlw	2
 12365  156D  1D03               	skipz
 12366  156E  2D7F               	goto	l6797
 12367                           
 12368                           ;Dimmer_B1.c: 298: DimmerIntr2.Dimming_RF = command == 1 ? 1 : 0;
 12369  156F  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12370  1570  3A01               	xorlw	1
 12371  1571  3000               	movlw	0
 12372  1572  1903               	skipnz
 12373  1573  3001               	movlw	1
 12374  1574  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12375  1575  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12376  1576  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12377  1577  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12378  1578  0022               	movlb	2	; select bank2
 12379  1579  083E               	movf	_DimmerIntr2^(0+256),w
 12380  157A  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12381  157B  39BF               	andlw	-65
 12382  157C  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12383  157D  00BE               	movwf	_DimmerIntr2^(0+256)
 12384                           
 12385                           ;Dimmer_B1.c: 299: }
 12386  157E  0008               	return
 12387  157F                     l6797:	
 12388                           
 12389                           ;Dimmer_B1.c: 302: else if (lights == 3) {
 12390  157F  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12391  1580  3A03               	xorlw	3
 12392  1581  1D03               	skipz
 12393  1582  0008               	return
 12394                           
 12395                           ;Dimmer_B1.c: 303: DimmerIntr3.Dimming_RF = command == 1 ? 1 : 0;
 12396  1583  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12397  1584  3A01               	xorlw	1
 12398  1585  3000               	movlw	0
 12399  1586  1903               	skipnz
 12400  1587  3001               	movlw	1
 12401  1588  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12402  1589  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12403  158A  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12404  158B  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12405  158C  0022               	movlb	2	; select bank2
 12406  158D  084E               	movf	_DimmerIntr3^(0+256),w
 12407  158E  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12408  158F  39BF               	andlw	-65
 12409  1590  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12410  1591  00CE               	movwf	_DimmerIntr3^(0+256)
 12411  1592  0008               	return
 12412  1593                     __end_of_setDimmerIntr_Dimming_RF:	
 12413                           
 12414                           	psect	text80
 12415  123A                     __ptext80:	
 12416 ;; *************** function _setDimmerIntr_DimmingValue *****************
 12417 ;; Defined at:
 12418 ;;		line 137 in file "../src/Dimmer_B1.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;  lights          1    wreg     unsigned char 
 12421 ;;  value           1   56[BANK0 ] unsigned char 
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;  lights          1   58[BANK0 ] unsigned char 
 12424 ;; Return value:  Size  Location     Type
 12425 ;;		None               void
 12426 ;; Registers used:
 12427 ;;		wreg
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12433 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;Total ram usage:        3 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    3
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_setDimmerLights_OnOff
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           
 12448                           ;psect for function _setDimmerIntr_DimmingValue
 12449  123A                     _setDimmerIntr_DimmingValue:	
 12450                           
 12451                           ;incstack = 0
 12452                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 12453                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 12454  123A  0020               	movlb	0	; select bank0
 12455  123B  00DA               	movwf	setDimmerIntr_DimmingValue@lights
 12456                           
 12457                           ;Dimmer_B1.c: 139: if (lights == 1) {
 12458  123C  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12459  123D  3A01               	xorlw	1
 12460  123E  1D03               	skipz
 12461  123F  2A46               	goto	l7141
 12462                           
 12463                           ;Dimmer_B1.c: 140: DimmerIntr1.DimmingValue = value;
 12464  1240  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12465  1241  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12466  1242  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12467  1243  0021               	movlb	1	; select bank1
 12468  1244  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 12469                           
 12470                           ;Dimmer_B1.c: 141: }
 12471  1245  0008               	return
 12472  1246                     l7141:	
 12473                           
 12474                           ;Dimmer_B1.c: 144: else if (lights == 2) {
 12475  1246  0020               	movlb	0	; select bank0
 12476  1247  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12477  1248  3A02               	xorlw	2
 12478  1249  1D03               	skipz
 12479  124A  2A51               	goto	l7145
 12480                           
 12481                           ;Dimmer_B1.c: 145: DimmerIntr2.DimmingValue = value;
 12482  124B  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12483  124C  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12484  124D  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12485  124E  0022               	movlb	2	; select bank2
 12486  124F  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 12487                           
 12488                           ;Dimmer_B1.c: 146: }
 12489  1250  0008               	return
 12490  1251                     l7145:	
 12491                           
 12492                           ;Dimmer_B1.c: 149: else if (lights == 3) {
 12493  1251  0020               	movlb	0	; select bank0
 12494  1252  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12495  1253  3A03               	xorlw	3
 12496  1254  1D03               	skipz
 12497  1255  0008               	return
 12498                           
 12499                           ;Dimmer_B1.c: 150: DimmerIntr3.DimmingValue = value;
 12500  1256  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12501  1257  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12502  1258  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12503  1259  0022               	movlb	2	; select bank2
 12504  125A  00D3               	movwf	(_DimmerIntr3^(0+256)+5)
 12505  125B  0008               	return
 12506  125C                     __end_of_setDimmerIntr_DimmingValue:	
 12507                           
 12508                           	psect	text81
 12509  1519                     __ptext81:	
 12510 ;; *************** function _setDimmerIntr_ControlStatus *****************
 12511 ;; Defined at:
 12512 ;;		line 119 in file "../src/Dimmer_B1.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  lights          1    wreg     unsigned char 
 12515 ;;  command         1    2[COMMON] unsigned char 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  lights          1    4[COMMON] unsigned char 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;		None               void
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12527 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;Total ram usage:        3 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:    3
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_setDimmerLights_OnOff
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           
 12542                           ;psect for function _setDimmerIntr_ControlStatus
 12543  1519                     _setDimmerIntr_ControlStatus:	
 12544                           
 12545                           ;incstack = 0
 12546                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 12547                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 12548  1519  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 12549                           
 12550                           ;Dimmer_B1.c: 121: if (lights == 1) {
 12551  151A  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12552  151B  3A01               	xorlw	1
 12553  151C  1D03               	skipz
 12554  151D  2D2E               	goto	l7129
 12555                           
 12556                           ;Dimmer_B1.c: 122: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 12557  151E  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12558  151F  3A01               	xorlw	1
 12559  1520  3000               	movlw	0
 12560  1521  1903               	skipnz
 12561  1522  3001               	movlw	1
 12562  1523  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12563  1524  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12564  1525  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12565  1526  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12566  1527  0021               	movlb	1	; select bank1
 12567  1528  0820               	movf	_DimmerIntr1^(0+128),w
 12568  1529  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12569  152A  39F7               	andlw	-9
 12570  152B  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12571  152C  00A0               	movwf	_DimmerIntr1^(0+128)
 12572                           
 12573                           ;Dimmer_B1.c: 123: }
 12574  152D  0008               	return
 12575  152E                     l7129:	
 12576                           
 12577                           ;Dimmer_B1.c: 126: else if (lights == 2) {
 12578  152E  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12579  152F  3A02               	xorlw	2
 12580  1530  1D03               	skipz
 12581  1531  2D42               	goto	l7133
 12582                           
 12583                           ;Dimmer_B1.c: 127: DimmerIntr2.ControlStatus = command == 1 ? 1 : 0;
 12584  1532  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12585  1533  3A01               	xorlw	1
 12586  1534  3000               	movlw	0
 12587  1535  1903               	skipnz
 12588  1536  3001               	movlw	1
 12589  1537  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12590  1538  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12591  1539  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12592  153A  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12593  153B  0022               	movlb	2	; select bank2
 12594  153C  083E               	movf	_DimmerIntr2^(0+256),w
 12595  153D  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12596  153E  39F7               	andlw	-9
 12597  153F  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12598  1540  00BE               	movwf	_DimmerIntr2^(0+256)
 12599                           
 12600                           ;Dimmer_B1.c: 128: }
 12601  1541  0008               	return
 12602  1542                     l7133:	
 12603                           
 12604                           ;Dimmer_B1.c: 131: else if (lights == 3) {
 12605  1542  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12606  1543  3A03               	xorlw	3
 12607  1544  1D03               	skipz
 12608  1545  0008               	return
 12609                           
 12610                           ;Dimmer_B1.c: 132: DimmerIntr3.ControlStatus = command == 1 ? 1 : 0;
 12611  1546  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12612  1547  3A01               	xorlw	1
 12613  1548  3000               	movlw	0
 12614  1549  1903               	skipnz
 12615  154A  3001               	movlw	1
 12616  154B  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12617  154C  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12618  154D  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12619  154E  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12620  154F  0022               	movlb	2	; select bank2
 12621  1550  084E               	movf	_DimmerIntr3^(0+256),w
 12622  1551  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12623  1552  39F7               	andlw	-9
 12624  1553  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12625  1554  00CE               	movwf	_DimmerIntr3^(0+256)
 12626  1555  0008               	return
 12627  1556                     __end_of_setDimmerIntr_ControlStatus:	
 12628                           
 12629                           	psect	text82
 12630  0C88                     __ptext82:	
 12631 ;; *************** function _setDelayOff_GO *****************
 12632 ;; Defined at:
 12633 ;;		line 87 in file "../src/DelayOff_B1.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;  sw              1    wreg     unsigned char 
 12636 ;;  command         1   57[BANK0 ] unsigned char 
 12637 ;;  value           1   58[BANK0 ] unsigned char 
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;  sw              1   64[BANK0 ] unsigned char 
 12640 ;;  k               1   63[BANK0 ] unsigned char 
 12641 ;;  j               1   62[BANK0 ] unsigned char 
 12642 ;;  i               1   61[BANK0 ] unsigned char 
 12643 ;; Return value:  Size  Location     Type
 12644 ;;		None               void
 12645 ;; Registers used:
 12646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:        8 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    4
 12659 ;; This function calls:
 12660 ;;		_DelayOffPointSelect
 12661 ;;		___bmul
 12662 ;;		_setProductData
 12663 ;; This function is called by:
 12664 ;;		_setDimmerLights_OnOff
 12665 ;;		_setRFSW_Control
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669                           
 12670                           ;psect for function _setDelayOff_GO
 12671  0C88                     _setDelayOff_GO:	
 12672                           
 12673                           ;incstack = 0
 12674                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12675                           ;setDelayOff_GO@sw stored from wreg
 12676  0C88  0020               	movlb	0	; select bank0
 12677  0C89  00E0               	movwf	setDelayOff_GO@sw
 12678                           
 12679                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 12680  0C8A  0860               	movf	setDelayOff_GO@sw,w
 12681  0C8B  3190  20F7  318C   	fcall	_DelayOffPointSelect
 12682                           
 12683                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 12684  0C8E  0020               	movlb	0	; select bank0
 12685  0C8F  0859               	movf	setDelayOff_GO@command,w
 12686  0C90  3A01               	xorlw	1
 12687  0C91  3000               	movlw	0
 12688  0C92  1903               	skipnz
 12689  0C93  3001               	movlw	1
 12690  0C94  00DB               	movwf	??_setDelayOff_GO
 12691  0C95  0869               	movf	_DelayOff,w
 12692  0C96  0086               	movwf	6
 12693  0C97  3001               	movlw	1	; select bank2/3
 12694  0C98  0087               	movwf	7
 12695  0C99  0DDB               	rlf	??_setDelayOff_GO,f
 12696  0C9A  0801               	movf	1,w
 12697  0C9B  065B               	xorwf	??_setDelayOff_GO,w
 12698  0C9C  39FD               	andlw	-3
 12699  0C9D  065B               	xorwf	??_setDelayOff_GO,w
 12700  0C9E  0081               	movwf	1
 12701                           
 12702                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 12703  0C9F  0869               	movf	_DelayOff,w
 12704  0CA0  3E02               	addlw	2
 12705  0CA1  0086               	movwf	6
 12706  0CA2  3001               	movlw	1	; select bank2/3
 12707  0CA3  0087               	movwf	7
 12708  0CA4  3000               	movlw	0
 12709  0CA5  3FC0               	movwi [0]fsr1
 12710  0CA6  3FC1               	movwi [1]fsr1
 12711                           
 12712                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 12713  0CA7  0869               	movf	_DelayOff,w
 12714  0CA8  3E04               	addlw	4
 12715  0CA9  0086               	movwf	6
 12716  0CAA  3001               	movlw	1	; select bank2/3
 12717  0CAB  0087               	movwf	7
 12718  0CAC  0181               	clrf	1
 12719                           
 12720                           ;DelayOff_B1.c: 94: if (command == 1) {
 12721  0CAD  0859               	movf	setDelayOff_GO@command,w
 12722  0CAE  3A01               	xorlw	1
 12723  0CAF  1D03               	skipz
 12724  0CB0  2D02               	goto	l6761
 12725                           
 12726                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 12727  0CB1  3005               	movlw	5
 12728  0CB2  00DB               	movwf	??_setDelayOff_GO
 12729  0CB3  085B               	movf	??_setDelayOff_GO,w
 12730  0CB4  00DD               	movwf	setDelayOff_GO@i
 12731  0CB5  01DE               	clrf	setDelayOff_GO@j
 12732  0CB6  01DF               	clrf	setDelayOff_GO@k
 12733                           
 12734                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 12735  0CB7  300F               	movlw	15
 12736  0CB8  055A               	andwf	setDelayOff_GO@value,w
 12737  0CB9  00DB               	movwf	??_setDelayOff_GO
 12738  0CBA  085B               	movf	??_setDelayOff_GO,w
 12739  0CBB  3A05               	xorlw	5
 12740  0CBC  1903               	skipnz
 12741  0CBD  2CC2               	goto	l6747
 12742  0CBE  085A               	movf	setDelayOff_GO@value,w
 12743  0CBF  390F               	andlw	15
 12744  0CC0  1D03               	btfss	3,2
 12745  0CC1  2CF0               	goto	l6757
 12746  0CC2                     l6747:	
 12747  0CC2  3031               	movlw	49
 12748  0CC3  025A               	subwf	setDelayOff_GO@value,w
 12749  0CC4  1803               	skipnc
 12750  0CC5  2CF0               	goto	l6757
 12751                           
 12752                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 12753  0CC6  085A               	movf	setDelayOff_GO@value,w
 12754  0CC7  390F               	andlw	15
 12755  0CC8  00DB               	movwf	??_setDelayOff_GO
 12756  0CC9  085B               	movf	??_setDelayOff_GO,w
 12757  0CCA  00DE               	movwf	setDelayOff_GO@j
 12758                           
 12759                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 12760  0CCB  085A               	movf	setDelayOff_GO@value,w
 12761  0CCC  00DB               	movwf	??_setDelayOff_GO
 12762  0CCD  3004               	movlw	4
 12763  0CCE                     u6005:	
 12764  0CCE  36DB               	lsrf	??_setDelayOff_GO,f
 12765  0CCF  0B89               	decfsz	9,f
 12766  0CD0  2CCE               	goto	u6005
 12767  0CD1  085B               	movf	??_setDelayOff_GO,w
 12768  0CD2  390F               	andlw	15
 12769  0CD3  00DC               	movwf	??_setDelayOff_GO+1
 12770  0CD4  085C               	movf	??_setDelayOff_GO+1,w
 12771  0CD5  00DF               	movwf	setDelayOff_GO@k
 12772                           
 12773                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 12774  0CD6  300A               	movlw	10
 12775  0CD7  00DB               	movwf	??_setDelayOff_GO
 12776  0CD8  085B               	movf	??_setDelayOff_GO,w
 12777  0CD9  00F2               	movwf	___bmul@multiplicand
 12778  0CDA  085F               	movf	setDelayOff_GO@k,w
 12779  0CDB  319E  2676  318C   	fcall	___bmul
 12780  0CDE  0020               	movlb	0	; select bank0
 12781  0CDF  075E               	addwf	setDelayOff_GO@j,w
 12782  0CE0  00DC               	movwf	??_setDelayOff_GO+1
 12783  0CE1  0A69               	incf	_DelayOff,w
 12784  0CE2  0086               	movwf	6
 12785  0CE3  3001               	movlw	1	; select bank2/3
 12786  0CE4  0087               	movwf	7
 12787  0CE5  085C               	movf	??_setDelayOff_GO+1,w
 12788  0CE6  0081               	movwf	1
 12789                           
 12790                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 12791  0CE7  085A               	movf	setDelayOff_GO@value,w
 12792  0CE8  00DB               	movwf	??_setDelayOff_GO
 12793  0CE9  085B               	movf	??_setDelayOff_GO,w
 12794  0CEA  00D6               	movwf	setProductData@value
 12795  0CEB  0860               	movf	setDelayOff_GO@sw,w
 12796  0CEC  3E1A               	addlw	26
 12797  0CED  319D  2530         	fcall	_setProductData
 12798                           
 12799                           ;DelayOff_B1.c: 103: } else {
 12800  0CEF  0008               	return
 12801  0CF0                     l6757:	
 12802                           
 12803                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 12804  0CF0  3005               	movlw	5
 12805  0CF1  0020               	movlb	0	; select bank0
 12806  0CF2  00DB               	movwf	??_setDelayOff_GO
 12807  0CF3  0A69               	incf	_DelayOff,w
 12808  0CF4  0086               	movwf	6
 12809  0CF5  3001               	movlw	1	; select bank2/3
 12810  0CF6  0087               	movwf	7
 12811  0CF7  085B               	movf	??_setDelayOff_GO,w
 12812  0CF8  0081               	movwf	1
 12813                           
 12814                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 12815  0CF9  3005               	movlw	5
 12816  0CFA  00DB               	movwf	??_setDelayOff_GO
 12817  0CFB  085B               	movf	??_setDelayOff_GO,w
 12818  0CFC  00D6               	movwf	setProductData@value
 12819  0CFD  0860               	movf	setDelayOff_GO@sw,w
 12820  0CFE  3E1A               	addlw	26
 12821  0CFF  319D  2530         	fcall	_setProductData
 12822                           
 12823                           ;DelayOff_B1.c: 106: }
 12824                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 12825  0D01  0008               	return
 12826  0D02                     l6761:	
 12827  0D02  0020               	movlb	0	; select bank0
 12828  0D03  08D9               	movf	setDelayOff_GO@command,f
 12829  0D04  1D03               	skipz
 12830  0D05  0008               	return
 12831                           
 12832                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 12833  0D06  01D6               	clrf	setProductData@value
 12834  0D07  0860               	movf	setDelayOff_GO@sw,w
 12835  0D08  3E1A               	addlw	26
 12836  0D09  319D  2530         	fcall	_setProductData
 12837  0D0B  0008               	return
 12838  0D0C                     __end_of_setDelayOff_GO:	
 12839                           
 12840                           	psect	text83
 12841  1E76                     __ptext83:	
 12842 ;; *************** function ___bmul *****************
 12843 ;; Defined at:
 12844 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  multiplier      1    wreg     unsigned char 
 12847 ;;  multiplicand    1    2[COMMON] unsigned char 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;  multiplier      1    5[COMMON] unsigned char 
 12850 ;;  product         1    4[COMMON] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      unsigned char 
 12853 ;; Registers used:
 12854 ;;		wreg, status,2, status,0
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;Total ram usage:        4 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    3
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		_setDelayOff_GO
 12871 ;;		_DelayTimejudge
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           
 12876                           ;psect for function ___bmul
 12877  1E76                     ___bmul:	
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12881                           ;___bmul@multiplier stored from wreg
 12882  1E76  00F5               	movwf	___bmul@multiplier
 12883  1E77  01F4               	clrf	___bmul@product
 12884  1E78                     l6383:	
 12885  1E78  1C75               	btfss	___bmul@multiplier,0
 12886  1E79  2E7E               	goto	l6387
 12887  1E7A  0872               	movf	___bmul@multiplicand,w
 12888  1E7B  00F3               	movwf	??___bmul
 12889  1E7C  0873               	movf	??___bmul,w
 12890  1E7D  07F4               	addwf	___bmul@product,f
 12891  1E7E                     l6387:	
 12892  1E7E  1003               	clrc
 12893  1E7F  0DF2               	rlf	___bmul@multiplicand,f
 12894  1E80  1003               	clrc
 12895  1E81  0CF5               	rrf	___bmul@multiplier,f
 12896  1E82  08F5               	movf	___bmul@multiplier,f
 12897  1E83  1D03               	skipz
 12898  1E84  2E78               	goto	l6383
 12899  1E85  0874               	movf	___bmul@product,w
 12900  1E86  0008               	return
 12901  1E87                     __end_of___bmul:	
 12902                           
 12903                           	psect	text84
 12904  1ED2                     __ptext84:	
 12905 ;; *************** function _setCmd_Status *****************
 12906 ;; Defined at:
 12907 ;;		line 657 in file "../src/Main_B1.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  number          1    wreg     unsigned char 
 12910 ;;  cmd             1    2[COMMON] unsigned char 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  number          1    4[COMMON] unsigned char 
 12913 ;; Return value:  Size  Location     Type
 12914 ;;		None               void
 12915 ;; Registers used:
 12916 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12922 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12926 ;;Total ram usage:        3 bytes
 12927 ;; Hardware stack levels used:    1
 12928 ;; Hardware stack levels required when called:    3
 12929 ;; This function calls:
 12930 ;;		Nothing
 12931 ;; This function is called by:
 12932 ;;		_setDimmerLights_OnOff
 12933 ;;		_setControl_Lights_Table
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           
 12938                           ;psect for function _setCmd_Status
 12939  1ED2                     _setCmd_Status:	
 12940                           
 12941                           ;incstack = 0
 12942                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 12943                           ;setCmd_Status@number stored from wreg
 12944  1ED2  00F4               	movwf	setCmd_Status@number
 12945                           
 12946                           ;Main_B1.c: 658: switch (number) {
 12947  1ED3  2EE1               	goto	l6927
 12948  1ED4                     l6923:	
 12949                           ;Main_B1.c: 659: case 1:
 12950                           
 12951                           
 12952                           ;Main_B1.c: 660: Cmd.all_off = cmd == 1 ? 1 : 0;
 12953  1ED4  0872               	movf	setCmd_Status@cmd,w
 12954  1ED5  3A01               	xorlw	1
 12955  1ED6  3000               	movlw	0
 12956  1ED7  1903               	skipnz
 12957  1ED8  3001               	movlw	1
 12958  1ED9  00F3               	movwf	??_setCmd_Status
 12959  1EDA  0020               	movlb	0	; select bank0
 12960  1EDB  0868               	movf	_Cmd,w
 12961  1EDC  0673               	xorwf	??_setCmd_Status,w
 12962  1EDD  39FE               	andlw	-2
 12963  1EDE  0673               	xorwf	??_setCmd_Status,w
 12964  1EDF  00E8               	movwf	_Cmd
 12965                           
 12966                           ;Main_B1.c: 662: }
 12967                           
 12968                           ;Main_B1.c: 661: break;
 12969  1EE0  0008               	return
 12970  1EE1                     l6927:	
 12971  1EE1  0874               	movf	setCmd_Status@number,w
 12972                           
 12973                           ; Switch size 1, requested type "space"
 12974                           ; Number of cases is 1, Range of values is 1 to 1
 12975                           ; switch strategies available:
 12976                           ; Name         Instructions Cycles
 12977                           ; simple_byte            4     3 (average)
 12978                           ; direct_byte           11     9 (fixed)
 12979                           ; jumptable            263     9 (fixed)
 12980                           ;	Chosen strategy is simple_byte
 12981  1EE2  3A01               	xorlw	1	; case 1
 12982  1EE3  1903               	skipnz
 12983  1EE4  2ED4               	goto	l6923
 12984  1EE5  2EE6               	goto	l1840
 12985  1EE6                     l1840:	
 12986  1EE6  0008               	return
 12987  1EE7                     __end_of_setCmd_Status:	
 12988                           
 12989                           	psect	text85
 12990  1F3B                     __ptext85:	
 12991 ;; *************** function _getMain_All_LightsStatus *****************
 12992 ;; Defined at:
 12993 ;;		line 379 in file "../src/Main_B1.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  status          1    2[COMMON] unsigned char 
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  1    wreg      unsigned char 
 13000 ;; Registers used:
 13001 ;;		wreg, status,2, status,0
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;Total ram usage:        1 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    3
 13014 ;; This function calls:
 13015 ;;		Nothing
 13016 ;; This function is called by:
 13017 ;;		_setDimmerLights_Main
 13018 ;;		_setDimmerLights_OnOff
 13019 ;;		_Flash_Memory_Main
 13020 ;;		_setControl_Lights_Table
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _getMain_All_LightsStatus
 13026  1F3B                     _getMain_All_LightsStatus:	
 13027                           
 13028                           ;Main_B1.c: 380: char status = 0;
 13029                           
 13030                           ;incstack = 0
 13031                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2+status,0]
 13032  1F3B  01F2               	clrf	getMain_All_LightsStatus@status
 13033                           
 13034                           ;Main_B1.c: 417: status = DimmerLights1.Status == 1 ? 1 : 0;
 13035  1F3C  3000               	movlw	0
 13036  1F3D  0022               	movlb	2	; select bank2
 13037  1F3E  185F               	btfsc	(_DimmerLights1^(0+256)+1),0
 13038  1F3F  3001               	movlw	1
 13039  1F40  00F2               	movwf	getMain_All_LightsStatus@status
 13040                           
 13041                           ;Main_B1.c: 418: if (status == 0) {
 13042  1F41  08F2               	movf	getMain_All_LightsStatus@status,f
 13043  1F42  1D03               	skipz
 13044  1F43  2F48               	goto	l9197
 13045                           
 13046                           ;Main_B1.c: 419: status = DimmerLights2.Status == 1 ? 1 : 0;
 13047  1F44  3000               	movlw	0
 13048  1F45  1868               	btfsc	(_DimmerLights2^(0+256)+1),0
 13049  1F46  3001               	movlw	1
 13050  1F47  00F2               	movwf	getMain_All_LightsStatus@status
 13051  1F48                     l9197:	
 13052                           
 13053                           ;Main_B1.c: 420: }
 13054                           ;Main_B1.c: 421: if (status == 0) {
 13055  1F48  08F2               	movf	getMain_All_LightsStatus@status,f
 13056  1F49  1D03               	skipz
 13057  1F4A  2F50               	goto	l9201
 13058                           
 13059                           ;Main_B1.c: 422: status = DimmerLights3.Status == 1 ? 1 : 0;
 13060  1F4B  3000               	movlw	0
 13061  1F4C  0023               	movlb	3	; select bank3
 13062  1F4D  1836               	btfsc	(_DimmerLights3^(0+384)+1),0
 13063  1F4E  3001               	movlw	1
 13064  1F4F  00F2               	movwf	getMain_All_LightsStatus@status
 13065  1F50                     l9201:	
 13066                           
 13067                           ;Main_B1.c: 423: }
 13068                           ;Main_B1.c: 426: return status;
 13069  1F50  0872               	movf	getMain_All_LightsStatus@status,w
 13070  1F51  0008               	return
 13071  1F52                     __end_of_getMain_All_LightsStatus:	
 13072                           
 13073                           	psect	text86
 13074  1D8D                     __ptext86:	
 13075 ;; *************** function _getDelayOff_GO *****************
 13076 ;; Defined at:
 13077 ;;		line 114 in file "../src/DelayOff_B1.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;  sw              1    wreg     unsigned char 
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;  sw              1    4[COMMON] unsigned char 
 13082 ;;  go              1    5[COMMON] unsigned char 
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      unsigned char 
 13085 ;; Registers used:
 13086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;Total ram usage:        2 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:    4
 13099 ;; This function calls:
 13100 ;;		_DelayOffPointSelect
 13101 ;; This function is called by:
 13102 ;;		_setDimmerLights_OnOff
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function _getDelayOff_GO
 13108  1D8D                     _getDelayOff_GO:	
 13109                           
 13110                           ;incstack = 0
 13111                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13112                           ;getDelayOff_GO@sw stored from wreg
 13113  1D8D  00F4               	movwf	getDelayOff_GO@sw
 13114                           
 13115                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 13116  1D8E  0874               	movf	getDelayOff_GO@sw,w
 13117  1D8F  3190  20F7         	fcall	_DelayOffPointSelect
 13118                           
 13119                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 13120  1D91  0020               	movlb	0	; select bank0
 13121  1D92  0869               	movf	_DelayOff,w
 13122  1D93  0086               	movwf	6
 13123  1D94  3001               	movlw	1	; select bank2/3
 13124  1D95  0087               	movwf	7
 13125  1D96  3000               	movlw	0
 13126  1D97  1881               	btfsc	1,1
 13127  1D98  3001               	movlw	1
 13128  1D99  00F5               	movwf	getDelayOff_GO@go
 13129                           
 13130                           ;DelayOff_B1.c: 117: return go;
 13131  1D9A  0875               	movf	getDelayOff_GO@go,w
 13132  1D9B  0008               	return
 13133  1D9C                     __end_of_getDelayOff_GO:	
 13134                           
 13135                           	psect	text87
 13136  1E16                     __ptext87:	
 13137 ;; *************** function _getCmd_Status *****************
 13138 ;; Defined at:
 13139 ;;		line 665 in file "../src/Main_B1.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;  number          1    wreg     unsigned char 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  number          1    2[COMMON] unsigned char 
 13144 ;;  cmd             1    3[COMMON] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      unsigned char 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;Total ram usage:        2 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    3
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		_setDimmerLights_OnOff
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           
 13169                           ;psect for function _getCmd_Status
 13170  1E16                     _getCmd_Status:	
 13171                           
 13172                           ;incstack = 0
 13173                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 13174                           ;getCmd_Status@number stored from wreg
 13175  1E16  00F2               	movwf	getCmd_Status@number
 13176                           
 13177                           ;Main_B1.c: 666: char cmd = 0;
 13178  1E17  01F3               	clrf	getCmd_Status@cmd
 13179                           
 13180                           ;Main_B1.c: 667: switch (number) {
 13181  1E18  2E1F               	goto	l7249
 13182  1E19                     l7245:	
 13183                           ;Main_B1.c: 668: case 1:
 13184                           
 13185                           
 13186                           ;Main_B1.c: 669: cmd = Cmd.all_off == 1 ? 1 : 0;
 13187  1E19  3000               	movlw	0
 13188  1E1A  0020               	movlb	0	; select bank0
 13189  1E1B  1868               	btfsc	_Cmd,0
 13190  1E1C  3001               	movlw	1
 13191  1E1D  00F3               	movwf	getCmd_Status@cmd
 13192                           
 13193                           ;Main_B1.c: 671: }
 13194                           
 13195                           ;Main_B1.c: 670: break;
 13196  1E1E  2E24               	goto	l7251
 13197  1E1F                     l7249:	
 13198  1E1F  0872               	movf	getCmd_Status@number,w
 13199                           
 13200                           ; Switch size 1, requested type "space"
 13201                           ; Number of cases is 1, Range of values is 1 to 1
 13202                           ; switch strategies available:
 13203                           ; Name         Instructions Cycles
 13204                           ; simple_byte            4     3 (average)
 13205                           ; direct_byte           11     9 (fixed)
 13206                           ; jumptable            263     9 (fixed)
 13207                           ;	Chosen strategy is simple_byte
 13208  1E20  3A01               	xorlw	1	; case 1
 13209  1E21  1903               	skipnz
 13210  1E22  2E19               	goto	l7245
 13211  1E23  2E24               	goto	l7251
 13212  1E24                     l7251:	
 13213                           
 13214                           ;Main_B1.c: 672: return cmd;
 13215  1E24  0873               	movf	getCmd_Status@cmd,w
 13216  1E25  0008               	return
 13217  1E26                     __end_of_getCmd_Status:	
 13218                           
 13219                           	psect	text88
 13220  17B4                     __ptext88:	
 13221 ;; *************** function _setDimmerLights_Dimming *****************
 13222 ;; Defined at:
 13223 ;;		line 1142 in file "../src/Dimmer_B1.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  lights          1    wreg     unsigned char 
 13226 ;;  status          1   62[BANK0 ] unsigned char 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  lights          1   65[BANK0 ] unsigned char 
 13229 ;;  value           1   64[BANK0 ] unsigned char 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;		None               void
 13232 ;; Registers used:
 13233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;Total ram usage:        4 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    6
 13246 ;; This function calls:
 13247 ;;		_getDimmerIntr_DimmingValue
 13248 ;;		_getDimmerLights_ValueToPercent
 13249 ;;		_setBuz
 13250 ;;		_setDimmerIntr_Dimming_Sw
 13251 ;;		_setDimmerIntr_MaxmumValue
 13252 ;;		_setMemory_Modify
 13253 ;;		_setProductData
 13254 ;;		_setRF_DimmerLights
 13255 ;;		_setRF_TransceiveGO
 13256 ;;		_setTxData
 13257 ;; This function is called by:
 13258 ;;		_setDimmerLights_Main
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           
 13263                           ;psect for function _setDimmerLights_Dimming
 13264  17B4                     _setDimmerLights_Dimming:	
 13265                           
 13266                           ;incstack = 0
 13267                           ; Regs used in _setDimmerLights_Dimming: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13268                           ;setDimmerLights_Dimming@lights stored from wreg
 13269  17B4  0020               	movlb	0	; select bank0
 13270  17B5  00E1               	movwf	setDimmerLights_Dimming@lights
 13271                           
 13272                           ;Dimmer_B1.c: 1143: setDimmerIntr_Dimming_Sw(lights, status);
 13273  17B6  085E               	movf	setDimmerLights_Dimming@status,w
 13274  17B7  00DF               	movwf	??_setDimmerLights_Dimming
 13275  17B8  085F               	movf	??_setDimmerLights_Dimming,w
 13276  17B9  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 13277  17BA  0861               	movf	setDimmerLights_Dimming@lights,w
 13278  17BB  3193  23C4  3197   	fcall	_setDimmerIntr_Dimming_Sw
 13279                           
 13280                           ;Dimmer_B1.c: 1144: if (status == 1) {
 13281  17BE  0020               	movlb	0	; select bank0
 13282  17BF  085E               	movf	setDimmerLights_Dimming@status,w
 13283  17C0  3A01               	xorlw	1
 13284  17C1  1D03               	skipz
 13285  17C2  2FD0               	goto	l11077
 13286                           
 13287                           ;Dimmer_B1.c: 1146: setRF_TransceiveGO(0);
 13288  17C3  3000               	movlw	0
 13289  17C4  319E  2606  3197   	fcall	_setRF_TransceiveGO
 13290                           
 13291                           ;Dimmer_B1.c: 1148: setBuz(1, 100);
 13292  17C7  3064               	movlw	100
 13293  17C8  0020               	movlb	0	; select bank0
 13294  17C9  00A4               	movwf	setBuz@time
 13295  17CA  3000               	movlw	0
 13296  17CB  00A5               	movwf	setBuz@time+1
 13297  17CC  3001               	movlw	1
 13298  17CD  3188  2050         	fcall	_setBuz
 13299                           
 13300                           ;Dimmer_B1.c: 1149: } else if (status == 0) {
 13301  17CF  0008               	return
 13302  17D0                     l11077:	
 13303  17D0  0020               	movlb	0	; select bank0
 13304  17D1  08DE               	movf	setDimmerLights_Dimming@status,f
 13305  17D2  1D03               	skipz
 13306  17D3  0008               	return
 13307                           
 13308                           ;Dimmer_B1.c: 1155: char value = getDimmerIntr_DimmingValue(lights);
 13309  17D4  0861               	movf	setDimmerLights_Dimming@lights,w
 13310  17D5  3190  20DC  3197   	fcall	_getDimmerIntr_DimmingValue
 13311  17D8  0020               	movlb	0	; select bank0
 13312  17D9  00DF               	movwf	??_setDimmerLights_Dimming
 13313  17DA  085F               	movf	??_setDimmerLights_Dimming,w
 13314  17DB  00E0               	movwf	setDimmerLights_Dimming@value
 13315                           
 13316                           ;Dimmer_B1.c: 1156: setDimmerIntr_MaxmumValue(lights, value);
 13317  17DC  0860               	movf	setDimmerLights_Dimming@value,w
 13318  17DD  00DF               	movwf	??_setDimmerLights_Dimming
 13319  17DE  085F               	movf	??_setDimmerLights_Dimming,w
 13320  17DF  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 13321  17E0  0861               	movf	setDimmerLights_Dimming@lights,w
 13322  17E1  3192  2218  3197   	fcall	_setDimmerIntr_MaxmumValue
 13323                           
 13324                           ;Dimmer_B1.c: 1157: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 13325  17E4  0020               	movlb	0	; select bank0
 13326  17E5  0860               	movf	setDimmerLights_Dimming@value,w
 13327  17E6  3197  2724  3197   	fcall	_getDimmerLights_ValueToPercent
 13328  17E9  0020               	movlb	0	; select bank0
 13329  17EA  00DF               	movwf	??_setDimmerLights_Dimming
 13330  17EB  085F               	movf	??_setDimmerLights_Dimming,w
 13331  17EC  00D6               	movwf	setProductData@value
 13332  17ED  0861               	movf	setDimmerLights_Dimming@lights,w
 13333  17EE  3E14               	addlw	20
 13334  17EF  319D  2530  3197   	fcall	_setProductData
 13335                           
 13336                           ;Dimmer_B1.c: 1164: setMemory_Modify(1);
 13337  17F2  3001               	movlw	1
 13338  17F3  319D  25F6  3197   	fcall	_setMemory_Modify
 13339                           
 13340                           ;Dimmer_B1.c: 1168: setRF_DimmerLights(lights, 1);
 13341  17F6  0020               	movlb	0	; select bank0
 13342  17F7  01D9               	clrf	setRF_DimmerLights@on
 13343  17F8  0AD9               	incf	setRF_DimmerLights@on,f
 13344  17F9  0861               	movf	setDimmerLights_Dimming@lights,w
 13345  17FA  318A  22E3  3197   	fcall	_setRF_DimmerLights
 13346                           
 13347                           ;Dimmer_B1.c: 1169: setTxData();
 13348  17FD  319C  24D2         	fcall	_setTxData
 13349  17FF  0008               	return
 13350  1800                     __end_of_setDimmerLights_Dimming:	
 13351                           
 13352                           	psect	text89
 13353  1CD2                     __ptext89:	
 13354 ;; *************** function _setTxData *****************
 13355 ;; Defined at:
 13356 ;;		line 237 in file "../src/RF_Control_B1.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;		None
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;  i               1    0        unsigned char 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;		None               void
 13363 ;; Registers used:
 13364 ;;		status,2
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;Total ram usage:        0 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    3
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_setDimmerLights_OnOff
 13381 ;;		_setDimmerLights_Dimming
 13382 ;;		_getRxData
 13383 ;;		_setControl_Lights_Table
 13384 ;;		_setRFSW_Control
 13385 ;;		_setRFSW_AdjControl
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           
 13390                           ;psect for function _setTxData
 13391  1CD2                     _setTxData:	
 13392                           
 13393                           ;RF_Control_B1.c: 238: char i;
 13394                           ;RF_Control_B1.c: 239: if (RF1.Enable == 1) {
 13395                           
 13396                           ;incstack = 0
 13397                           ; Regs used in _setTxData: [status,2]
 13398  1CD2  0021               	movlb	1	; select bank1
 13399  1CD3  1C30               	btfss	_RF1^(0+128),0
 13400  1CD4  0008               	return
 13401                           
 13402                           ;RF_Control_B1.c: 241: RF1.TransceiveGO = 1;
 13403  1CD5  1530               	bsf	_RF1^(0+128),2
 13404                           
 13405                           ;RF_Control_B1.c: 242: RF1.Count = 0;
 13406  1CD6  01B3               	clrf	(_RF1^(0+128)+3)
 13407  1CD7  01B4               	clrf	((_RF1+1)^(0+128)+3)
 13408  1CD8  0008               	return
 13409  1CD9                     __end_of_setTxData:	
 13410                           
 13411                           	psect	text90
 13412  1E06                     __ptext90:	
 13413 ;; *************** function _setRF_TransceiveGO *****************
 13414 ;; Defined at:
 13415 ;;		line 575 in file "../src/RF_Control_B1.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  command         1    wreg     unsigned char 
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  command         1    3[COMMON] unsigned char 
 13420 ;; Return value:  Size  Location     Type
 13421 ;;		None               void
 13422 ;; Registers used:
 13423 ;;		wreg, status,2, status,0
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/0
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;Total ram usage:        2 bytes
 13434 ;; Hardware stack levels used:    1
 13435 ;; Hardware stack levels required when called:    3
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_setDimmerLights_Dimming
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           
 13444                           ;psect for function _setRF_TransceiveGO
 13445  1E06                     _setRF_TransceiveGO:	
 13446                           
 13447                           ;incstack = 0
 13448                           ; Regs used in _setRF_TransceiveGO: [wreg+status,2+status,0]
 13449                           ;setRF_TransceiveGO@command stored from wreg
 13450  1E06  00F3               	movwf	setRF_TransceiveGO@command
 13451                           
 13452                           ;RF_Control_B1.c: 576: RF1.TransceiveGO = command == 1 ? 1 : 0;
 13453  1E07  0873               	movf	setRF_TransceiveGO@command,w
 13454  1E08  3A01               	xorlw	1
 13455  1E09  3000               	movlw	0
 13456  1E0A  1903               	skipnz
 13457  1E0B  3001               	movlw	1
 13458  1E0C  00F2               	movwf	??_setRF_TransceiveGO
 13459  1E0D  0DF2               	rlf	??_setRF_TransceiveGO,f
 13460  1E0E  0DF2               	rlf	??_setRF_TransceiveGO,f
 13461  1E0F  0021               	movlb	1	; select bank1
 13462  1E10  0830               	movf	_RF1^(0+128),w
 13463  1E11  0672               	xorwf	??_setRF_TransceiveGO,w
 13464  1E12  39FB               	andlw	-5
 13465  1E13  0672               	xorwf	??_setRF_TransceiveGO,w
 13466  1E14  00B0               	movwf	_RF1^(0+128)
 13467  1E15  0008               	return
 13468  1E16                     __end_of_setRF_TransceiveGO:	
 13469                           
 13470                           	psect	text91
 13471  0AE3                     __ptext91:	
 13472 ;; *************** function _setRF_DimmerLights *****************
 13473 ;; Defined at:
 13474 ;;		line 550 in file "../src/RF_Control_B1.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  lights          1    wreg     unsigned char 
 13477 ;;  on              1   57[BANK0 ] unsigned char 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  lights          1   61[BANK0 ] unsigned char 
 13480 ;;  status          1   60[BANK0 ] unsigned char 
 13481 ;; Return value:  Size  Location     Type
 13482 ;;		None               void
 13483 ;; Registers used:
 13484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13490 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;Total ram usage:        5 bytes
 13495 ;; Hardware stack levels used:    1
 13496 ;; Hardware stack levels required when called:    4
 13497 ;; This function calls:
 13498 ;;		_setProductData
 13499 ;; This function is called by:
 13500 ;;		_setDimmerLights_OnOff
 13501 ;;		_setDimmerLights_Dimming
 13502 ;;		_setRFSW_Control
 13503 ;; This function uses a non-reentrant model
 13504 ;;
 13505                           
 13506                           
 13507                           ;psect for function _setRF_DimmerLights
 13508  0AE3                     _setRF_DimmerLights:	
 13509                           
 13510                           ;incstack = 0
 13511                           ; Regs used in _setRF_DimmerLights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13512                           ;setRF_DimmerLights@lights stored from wreg
 13513  0AE3  0020               	movlb	0	; select bank0
 13514  0AE4  00DD               	movwf	setRF_DimmerLights@lights
 13515                           
 13516                           ;RF_Control_B1.c: 551: char status = 1;
 13517  0AE5  01DC               	clrf	setRF_DimmerLights@status
 13518  0AE6  0ADC               	incf	setRF_DimmerLights@status,f
 13519                           
 13520                           ;RF_Control_B1.c: 552: switch (lights) {
 13521  0AE7  2AEE               	goto	l6809
 13522  0AE8                     l6803:	
 13523                           ;RF_Control_B1.c: 553: case 2:
 13524                           
 13525  0AE8  2AEB               	goto	L5
 13526  0AE9                     l6805:	
 13527                           ;RF_Control_B1.c: 556: case 3:
 13528                           
 13529                           ;RF_Control_B1.c: 555: break;
 13530                           
 13531                           ;RF_Control_B1.c: 554: status <<= 1;
 13532                           
 13533                           
 13534                           ;RF_Control_B1.c: 557: status <<= 2;
 13535  0AE9  1003               	clrc
 13536  0AEA  0DDC               	rlf	setRF_DimmerLights@status,f
 13537  0AEB                     L5:	
 13538  0AEB  1003               	clrc
 13539  0AEC  0DDC               	rlf	setRF_DimmerLights@status,f
 13540                           
 13541                           ;RF_Control_B1.c: 559: }
 13542                           
 13543                           ;RF_Control_B1.c: 558: break;
 13544  0AED  2AF6               	goto	l2524
 13545  0AEE                     l6809:	
 13546  0AEE  085D               	movf	setRF_DimmerLights@lights,w
 13547                           
 13548                           ; Switch size 1, requested type "space"
 13549                           ; Number of cases is 2, Range of values is 2 to 3
 13550                           ; switch strategies available:
 13551                           ; Name         Instructions Cycles
 13552                           ; simple_byte            7     4 (average)
 13553                           ; direct_byte           13     9 (fixed)
 13554                           ; jumptable            263     9 (fixed)
 13555                           ;	Chosen strategy is simple_byte
 13556  0AEF  3A02               	xorlw	2	; case 2
 13557  0AF0  1903               	skipnz
 13558  0AF1  2AE8               	goto	l6803
 13559  0AF2  3A01               	xorlw	1	; case 3
 13560  0AF3  1903               	skipnz
 13561  0AF4  2AE9               	goto	l6805
 13562  0AF5  2AF6               	goto	l2524
 13563  0AF6                     l2524:	
 13564                           
 13565                           ;RF_Control_B1.c: 560: status = ~status;
 13566  0AF6  09DC               	comf	setRF_DimmerLights@status,f
 13567                           
 13568                           ;RF_Control_B1.c: 562: setProductData(11, lights);
 13569  0AF7  085D               	movf	setRF_DimmerLights@lights,w
 13570  0AF8  00DA               	movwf	??_setRF_DimmerLights
 13571  0AF9  085A               	movf	??_setRF_DimmerLights,w
 13572  0AFA  00D6               	movwf	setProductData@value
 13573  0AFB  300B               	movlw	11
 13574  0AFC  319D  2530  318A   	fcall	_setProductData
 13575                           
 13576                           ;RF_Control_B1.c: 563: setProductData(17, product->Data[26 + lights]);
 13577  0AFF  0020               	movlb	0	; select bank0
 13578  0B00  085D               	movf	setRF_DimmerLights@lights,w
 13579  0B01  3E1A               	addlw	26
 13580  0B02  076E               	addwf	_product,w
 13581  0B03  00DA               	movwf	??_setRF_DimmerLights
 13582  0B04  085A               	movf	??_setRF_DimmerLights,w
 13583  0B05  0086               	movwf	6
 13584  0B06  3002               	movlw	2	; select bank4/5
 13585  0B07  0087               	movwf	7
 13586  0B08  0801               	movf	1,w
 13587  0B09  00DB               	movwf	??_setRF_DimmerLights+1
 13588  0B0A  085B               	movf	??_setRF_DimmerLights+1,w
 13589  0B0B  00D6               	movwf	setProductData@value
 13590  0B0C  3011               	movlw	17
 13591  0B0D  319D  2530  318A   	fcall	_setProductData
 13592                           
 13593                           ;RF_Control_B1.c: 564: if (on == 1) {
 13594  0B10  0020               	movlb	0	; select bank0
 13595  0B11  0859               	movf	setRF_DimmerLights@on,w
 13596  0B12  3A01               	xorlw	1
 13597  0B13  1D03               	skipz
 13598  0B14  2B34               	goto	l6817
 13599                           
 13600                           ;RF_Control_B1.c: 565: setProductData(9, product->Data[20 + lights]);
 13601  0B15  085D               	movf	setRF_DimmerLights@lights,w
 13602  0B16  3E14               	addlw	20
 13603  0B17  076E               	addwf	_product,w
 13604  0B18  00DA               	movwf	??_setRF_DimmerLights
 13605  0B19  085A               	movf	??_setRF_DimmerLights,w
 13606  0B1A  0086               	movwf	6
 13607  0B1B  3002               	movlw	2	; select bank4/5
 13608  0B1C  0087               	movwf	7
 13609  0B1D  0801               	movf	1,w
 13610  0B1E  00DB               	movwf	??_setRF_DimmerLights+1
 13611  0B1F  085B               	movf	??_setRF_DimmerLights+1,w
 13612  0B20  00D6               	movwf	setProductData@value
 13613  0B21  3009               	movlw	9
 13614  0B22  319D  2530  318A   	fcall	_setProductData
 13615                           
 13616                           ;RF_Control_B1.c: 566: setProductData(15, (product->Data[15] | lights));
 13617  0B25  0020               	movlb	0	; select bank0
 13618  0B26  086E               	movf	_product,w
 13619  0B27  3E0F               	addlw	15
 13620  0B28  0086               	movwf	6
 13621  0B29  3002               	movlw	2	; select bank4/5
 13622  0B2A  0087               	movwf	7
 13623  0B2B  0801               	movf	1,w
 13624  0B2C  045D               	iorwf	setRF_DimmerLights@lights,w
 13625  0B2D  00DA               	movwf	??_setRF_DimmerLights
 13626  0B2E  085A               	movf	??_setRF_DimmerLights,w
 13627  0B2F  00D6               	movwf	setProductData@value
 13628  0B30  300F               	movlw	15
 13629  0B31  319D  2530         	fcall	_setProductData
 13630                           
 13631                           ;RF_Control_B1.c: 567: } else {
 13632  0B33  0008               	return
 13633  0B34                     l6817:	
 13634                           
 13635                           ;RF_Control_B1.c: 568: setProductData(9, 0x00);
 13636  0B34  0020               	movlb	0	; select bank0
 13637  0B35  01D6               	clrf	setProductData@value
 13638  0B36  3009               	movlw	9
 13639  0B37  319D  2530  318A   	fcall	_setProductData
 13640                           
 13641                           ;RF_Control_B1.c: 569: setProductData(15, (product->Data[15] & status));
 13642  0B3A  0020               	movlb	0	; select bank0
 13643  0B3B  086E               	movf	_product,w
 13644  0B3C  3E0F               	addlw	15
 13645  0B3D  0086               	movwf	6
 13646  0B3E  3002               	movlw	2	; select bank4/5
 13647  0B3F  0087               	movwf	7
 13648  0B40  0801               	movf	1,w
 13649  0B41  055C               	andwf	setRF_DimmerLights@status,w
 13650  0B42  00DA               	movwf	??_setRF_DimmerLights
 13651  0B43  085A               	movf	??_setRF_DimmerLights,w
 13652  0B44  00D6               	movwf	setProductData@value
 13653  0B45  300F               	movlw	15
 13654  0B46  319D  2530         	fcall	_setProductData
 13655  0B48  0008               	return
 13656  0B49                     __end_of_setRF_DimmerLights:	
 13657                           
 13658                           	psect	text92
 13659  1218                     __ptext92:	
 13660 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 13661 ;; Defined at:
 13662 ;;		line 175 in file "../src/Dimmer_B1.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;  lights          1    wreg     unsigned char 
 13665 ;;  value           1   56[BANK0 ] unsigned char 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  lights          1   58[BANK0 ] unsigned char 
 13668 ;; Return value:  Size  Location     Type
 13669 ;;		None               void
 13670 ;; Registers used:
 13671 ;;		wreg
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13677 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;Total ram usage:        3 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; Hardware stack levels required when called:    3
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_setDimmerLights_OnOff
 13688 ;;		_setDimmerLights_Dimming
 13689 ;;		_setRFSW_AdjControl
 13690 ;;		_DimmerLights_AssignationDimming
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           
 13695                           ;psect for function _setDimmerIntr_MaxmumValue
 13696  1218                     _setDimmerIntr_MaxmumValue:	
 13697                           
 13698                           ;incstack = 0
 13699                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 13700                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 13701  1218  0020               	movlb	0	; select bank0
 13702  1219  00DA               	movwf	setDimmerIntr_MaxmumValue@lights
 13703                           
 13704                           ;Dimmer_B1.c: 177: if (lights == 1) {
 13705  121A  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13706  121B  3A01               	xorlw	1
 13707  121C  1D03               	skipz
 13708  121D  2A24               	goto	l6781
 13709                           
 13710                           ;Dimmer_B1.c: 178: DimmerIntr1.MaxmumValue = value;
 13711  121E  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13712  121F  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13713  1220  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13714  1221  0021               	movlb	1	; select bank1
 13715  1222  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 13716                           
 13717                           ;Dimmer_B1.c: 179: }
 13718  1223  0008               	return
 13719  1224                     l6781:	
 13720                           
 13721                           ;Dimmer_B1.c: 182: else if (lights == 2) {
 13722  1224  0020               	movlb	0	; select bank0
 13723  1225  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13724  1226  3A02               	xorlw	2
 13725  1227  1D03               	skipz
 13726  1228  2A2F               	goto	l6785
 13727                           
 13728                           ;Dimmer_B1.c: 183: DimmerIntr2.MaxmumValue = value;
 13729  1229  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13730  122A  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13731  122B  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13732  122C  0022               	movlb	2	; select bank2
 13733  122D  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 13734                           
 13735                           ;Dimmer_B1.c: 184: }
 13736  122E  0008               	return
 13737  122F                     l6785:	
 13738                           
 13739                           ;Dimmer_B1.c: 187: else if (lights == 3) {
 13740  122F  0020               	movlb	0	; select bank0
 13741  1230  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13742  1231  3A03               	xorlw	3
 13743  1232  1D03               	skipz
 13744  1233  0008               	return
 13745                           
 13746                           ;Dimmer_B1.c: 188: DimmerIntr3.MaxmumValue = value;
 13747  1234  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13748  1235  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13749  1236  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13750  1237  0022               	movlb	2	; select bank2
 13751  1238  00D4               	movwf	(_DimmerIntr3^(0+256)+6)
 13752  1239  0008               	return
 13753  123A                     __end_of_setDimmerIntr_MaxmumValue:	
 13754                           
 13755                           	psect	text93
 13756  13C4                     __ptext93:	
 13757 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 13758 ;; Defined at:
 13759 ;;		line 251 in file "../src/Dimmer_B1.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;  lights          1    wreg     unsigned char 
 13762 ;;  command         1    2[COMMON] unsigned char 
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;  lights          1    4[COMMON] unsigned char 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;		None               void
 13767 ;; Registers used:
 13768 ;;		wreg, status,2, status,0
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13774 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13777 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;Total ram usage:        3 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; Hardware stack levels required when called:    3
 13781 ;; This function calls:
 13782 ;;		Nothing
 13783 ;; This function is called by:
 13784 ;;		_setDimmerLights_Dimming
 13785 ;;		_setDimmerLights_DimmingClose
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           
 13790                           ;psect for function _setDimmerIntr_Dimming_Sw
 13791  13C4                     _setDimmerIntr_Dimming_Sw:	
 13792                           
 13793                           ;incstack = 0
 13794                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 13795                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 13796  13C4  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 13797                           
 13798                           ;Dimmer_B1.c: 253: if (lights == 1) {
 13799  13C5  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13800  13C6  3A01               	xorlw	1
 13801  13C7  1D03               	skipz
 13802  13C8  2BD7               	goto	l6897
 13803                           
 13804                           ;Dimmer_B1.c: 254: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 13805  13C9  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13806  13CA  3A01               	xorlw	1
 13807  13CB  3000               	movlw	0
 13808  13CC  1903               	skipnz
 13809  13CD  3001               	movlw	1
 13810  13CE  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13811  13CF  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13812  13D0  0021               	movlb	1	; select bank1
 13813  13D1  0820               	movf	_DimmerIntr1^(0+128),w
 13814  13D2  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13815  13D3  39EF               	andlw	-17
 13816  13D4  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13817  13D5  00A0               	movwf	_DimmerIntr1^(0+128)
 13818                           
 13819                           ;Dimmer_B1.c: 255: }
 13820  13D6  0008               	return
 13821  13D7                     l6897:	
 13822                           
 13823                           ;Dimmer_B1.c: 258: else if (lights == 2) {
 13824  13D7  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13825  13D8  3A02               	xorlw	2
 13826  13D9  1D03               	skipz
 13827  13DA  2BE9               	goto	l6901
 13828                           
 13829                           ;Dimmer_B1.c: 259: DimmerIntr2.Dimming_Sw = command == 1 ? 1 : 0;
 13830  13DB  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13831  13DC  3A01               	xorlw	1
 13832  13DD  3000               	movlw	0
 13833  13DE  1903               	skipnz
 13834  13DF  3001               	movlw	1
 13835  13E0  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13836  13E1  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13837  13E2  0022               	movlb	2	; select bank2
 13838  13E3  083E               	movf	_DimmerIntr2^(0+256),w
 13839  13E4  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13840  13E5  39EF               	andlw	-17
 13841  13E6  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13842  13E7  00BE               	movwf	_DimmerIntr2^(0+256)
 13843                           
 13844                           ;Dimmer_B1.c: 260: }
 13845  13E8  0008               	return
 13846  13E9                     l6901:	
 13847                           
 13848                           ;Dimmer_B1.c: 263: else if (lights == 3) {
 13849  13E9  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13850  13EA  3A03               	xorlw	3
 13851  13EB  1D03               	skipz
 13852  13EC  0008               	return
 13853                           
 13854                           ;Dimmer_B1.c: 264: DimmerIntr3.Dimming_Sw = command == 1 ? 1 : 0;
 13855  13ED  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13856  13EE  3A01               	xorlw	1
 13857  13EF  3000               	movlw	0
 13858  13F0  1903               	skipnz
 13859  13F1  3001               	movlw	1
 13860  13F2  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13861  13F3  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13862  13F4  0022               	movlb	2	; select bank2
 13863  13F5  084E               	movf	_DimmerIntr3^(0+256),w
 13864  13F6  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13865  13F7  39EF               	andlw	-17
 13866  13F8  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13867  13F9  00CE               	movwf	_DimmerIntr3^(0+256)
 13868  13FA  0008               	return
 13869  13FB                     __end_of_setDimmerIntr_Dimming_Sw:	
 13870                           
 13871                           	psect	text94
 13872  10DC                     __ptext94:	
 13873 ;; *************** function _getDimmerIntr_DimmingValue *****************
 13874 ;; Defined at:
 13875 ;;		line 155 in file "../src/Dimmer_B1.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  lights          1    wreg     unsigned char 
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;  lights          1    4[COMMON] unsigned char 
 13880 ;;  value           1    3[COMMON] unsigned char 
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  1    wreg      unsigned char 
 13883 ;; Registers used:
 13884 ;;		wreg, status,2
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;Total ram usage:        3 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; Hardware stack levels required when called:    3
 13897 ;; This function calls:
 13898 ;;		Nothing
 13899 ;; This function is called by:
 13900 ;;		_setDimmerLights_Dimming
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           
 13905                           ;psect for function _getDimmerIntr_DimmingValue
 13906  10DC                     _getDimmerIntr_DimmingValue:	
 13907                           
 13908                           ;incstack = 0
 13909                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 13910                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 13911  10DC  00F4               	movwf	getDimmerIntr_DimmingValue@lights
 13912                           
 13913                           ;Dimmer_B1.c: 156: char value = 0;
 13914  10DD  01F3               	clrf	getDimmerIntr_DimmingValue@value
 13915                           
 13916                           ;Dimmer_B1.c: 158: if (lights == 1) {
 13917  10DE  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13918  10DF  3A01               	xorlw	1
 13919  10E0  1D03               	skipz
 13920  10E1  28E5               	goto	l7155
 13921                           
 13922                           ;Dimmer_B1.c: 159: value = DimmerIntr1.DimmingValue;
 13923  10E2  0021               	movlb	1	; select bank1
 13924  10E3  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 13925  10E4  28F2               	goto	L7
 13926  10E5                     l7155:	
 13927                           ;Dimmer_B1.c: 160: }
 13928                           
 13929                           
 13930                           ;Dimmer_B1.c: 163: else if (lights == 2) {
 13931  10E5  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13932  10E6  3A02               	xorlw	2
 13933  10E7  1D03               	skipz
 13934  10E8  28EC               	goto	l7159
 13935                           
 13936                           ;Dimmer_B1.c: 164: value = DimmerIntr2.DimmingValue;
 13937  10E9  0022               	movlb	2	; select bank2
 13938  10EA  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 13939  10EB  28F2               	goto	L7
 13940  10EC                     l7159:	
 13941                           ;Dimmer_B1.c: 165: }
 13942                           
 13943                           
 13944                           ;Dimmer_B1.c: 168: else if (lights == 3) {
 13945  10EC  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13946  10ED  3A03               	xorlw	3
 13947  10EE  1D03               	skipz
 13948  10EF  28F5               	goto	l809
 13949                           
 13950                           ;Dimmer_B1.c: 169: value = DimmerIntr3.DimmingValue;
 13951  10F0  0022               	movlb	2	; select bank2
 13952  10F1  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 13953  10F2                     L7:	
 13954  10F2  00F2               	movwf	??_getDimmerIntr_DimmingValue
 13955  10F3  0872               	movf	??_getDimmerIntr_DimmingValue,w
 13956  10F4  00F3               	movwf	getDimmerIntr_DimmingValue@value
 13957  10F5                     l809:	
 13958                           
 13959                           ;Dimmer_B1.c: 170: }
 13960                           ;Dimmer_B1.c: 172: return value;
 13961  10F5  0873               	movf	getDimmerIntr_DimmingValue@value,w
 13962  10F6  0008               	return
 13963  10F7                     __end_of_getDimmerIntr_DimmingValue:	
 13964                           
 13965                           	psect	text95
 13966  1614                     __ptext95:	
 13967 ;; *************** function _getDimmerLights_Allow_Condition *****************
 13968 ;; Defined at:
 13969 ;;		line 1175 in file "../src/Dimmer_B1.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  lights          1    wreg     unsigned char 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;  lights          1    6[COMMON] unsigned char 
 13974 ;;  allow           1    7[COMMON] unsigned char 
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  1    wreg      unsigned char 
 13977 ;; Registers used:
 13978 ;;		wreg, status,2, status,0
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;Total ram usage:        6 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    3
 13991 ;; This function calls:
 13992 ;;		Nothing
 13993 ;; This function is called by:
 13994 ;;		_setDimmerLights_Main
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           
 13999                           ;psect for function _getDimmerLights_Allow_Condition
 14000  1614                     _getDimmerLights_Allow_Condition:	
 14001                           
 14002                           ;incstack = 0
 14003                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+status,0]
 14004                           ;getDimmerLights_Allow_Condition@lights stored from wreg
 14005  1614  00F6               	movwf	getDimmerLights_Allow_Condition@lights
 14006                           
 14007                           ;Dimmer_B1.c: 1176: char allow = 0;
 14008  1615  01F7               	clrf	getDimmerLights_Allow_Condition@allow
 14009                           
 14010                           ;Dimmer_B1.c: 1196: if (allow == 0) {
 14011  1616  08F7               	movf	getDimmerLights_Allow_Condition@allow,f
 14012  1617  1D03               	skipz
 14013  1618  2E55               	goto	l7487
 14014                           
 14015                           ;Dimmer_B1.c: 1197: if (lights == 1) {
 14016  1619  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 14017  161A  3A01               	xorlw	1
 14018  161B  1D03               	skipz
 14019  161C  2E2C               	goto	l7459
 14020                           
 14021                           ;Dimmer_B1.c: 1198: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 14022                           ;Dimmer_B1.c: 1199: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 14023  161D  01F3               	clrf	_getDimmerLights_Allow_Condition$2624
 14024  161E  0AF3               	incf	_getDimmerLights_Allow_Condition$2624,f
 14025  161F  0022               	movlb	2	; select bank2
 14026  1620  1E67               	btfss	_DimmerLights2^(0+256),4
 14027  1621  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 14028  1622  2E2A               	goto	l7457
 14029  1623  0023               	movlb	3	; select bank3
 14030  1624  1A35               	btfsc	_DimmerLights3^(0+384),4
 14031  1625  2E2A               	goto	l7457
 14032  1626  0022               	movlb	2	; select bank2
 14033  1627  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 14034  1628  2E2A               	goto	l7457
 14035  1629  01F3               	clrf	_getDimmerLights_Allow_Condition$2624
 14036  162A                     l7457:	
 14037  162A  0873               	movf	_getDimmerLights_Allow_Condition$2624,w
 14038  162B  2E52               	goto	L9
 14039  162C                     l7459:	
 14040                           ;Dimmer_B1.c: 1200: } else if (lights == 2) {
 14041                           
 14042  162C  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 14043  162D  3A02               	xorlw	2
 14044  162E  1D03               	skipz
 14045  162F  2E41               	goto	l7473
 14046                           
 14047                           ;Dimmer_B1.c: 1201: allow = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw 
      +                          == 1
 14048                           ;Dimmer_B1.c: 1202: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 14049  1630  01F4               	clrf	_getDimmerLights_Allow_Condition$2625
 14050  1631  0AF4               	incf	_getDimmerLights_Allow_Condition$2625,f
 14051  1632  0022               	movlb	2	; select bank2
 14052  1633  1A5E               	btfsc	_DimmerLights1^(0+256),4
 14053  1634  2E3F               	goto	l7471
 14054  1635  0021               	movlb	1	; select bank1
 14055  1636  1A20               	btfsc	_DimmerIntr1^(0+128),4
 14056  1637  2E3F               	goto	l7471
 14057  1638  0023               	movlb	3	; select bank3
 14058  1639  1A35               	btfsc	_DimmerLights3^(0+384),4
 14059  163A  2E3F               	goto	l7471
 14060  163B  0022               	movlb	2	; select bank2
 14061  163C  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 14062  163D  2E3F               	goto	l7471
 14063  163E  01F4               	clrf	_getDimmerLights_Allow_Condition$2625
 14064  163F                     l7471:	
 14065  163F  0874               	movf	_getDimmerLights_Allow_Condition$2625,w
 14066  1640  2E52               	goto	L9
 14067  1641                     l7473:	
 14068                           ;Dimmer_B1.c: 1203: } else if (lights == 3) {
 14069                           
 14070  1641  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 14071  1642  3A03               	xorlw	3
 14072  1643  1D03               	skipz
 14073  1644  2E55               	goto	l7487
 14074                           
 14075                           ;Dimmer_B1.c: 1204: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 14076                           ;Dimmer_B1.c: 1205: || DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw == 1 
      +                          ? 1 : 0;
 14077  1645  01F5               	clrf	_getDimmerLights_Allow_Condition$2626
 14078  1646  0AF5               	incf	_getDimmerLights_Allow_Condition$2626,f
 14079  1647  0022               	movlb	2	; select bank2
 14080  1648  1E67               	btfss	_DimmerLights2^(0+256),4
 14081  1649  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 14082  164A  2E51               	goto	l7485
 14083  164B  1A5E               	btfsc	_DimmerLights1^(0+256),4
 14084  164C  2E51               	goto	l7485
 14085  164D  0021               	movlb	1	; select bank1
 14086  164E  1A20               	btfsc	_DimmerIntr1^(0+128),4
 14087  164F  2E51               	goto	l7485
 14088  1650  01F5               	clrf	_getDimmerLights_Allow_Condition$2626
 14089  1651                     l7485:	
 14090  1651  0875               	movf	_getDimmerLights_Allow_Condition$2626,w
 14091  1652                     L9:	
 14092  1652  00F2               	movwf	??_getDimmerLights_Allow_Condition
 14093  1653  0872               	movf	??_getDimmerLights_Allow_Condition,w
 14094  1654  00F7               	movwf	getDimmerLights_Allow_Condition@allow
 14095  1655                     l7487:	
 14096                           
 14097                           ;Dimmer_B1.c: 1206: }
 14098                           ;Dimmer_B1.c: 1207: }
 14099                           ;Dimmer_B1.c: 1210: return allow;
 14100  1655  0877               	movf	getDimmerLights_Allow_Condition@allow,w
 14101  1656  0008               	return
 14102  1657                     __end_of_getDimmerLights_Allow_Condition:	
 14103                           
 14104                           	psect	text96
 14105  02C0                     __ptext96:	
 14106 ;; *************** function _DimmerLights_DimmingFunction *****************
 14107 ;; Defined at:
 14108 ;;		line 2127 in file "../src/Dimmer_B1.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  lights          1    wreg     unsigned char 
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;  lights          1    5[COMMON] unsigned char 
 14113 ;; Return value:  Size  Location     Type
 14114 ;;		None               void
 14115 ;; Registers used:
 14116 ;;		wreg, status,2, status,0, pclath, cstack
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;Total ram usage:        2 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:    4
 14129 ;; This function calls:
 14130 ;;		_DimmerIntr_ValueCalculate
 14131 ;; This function is called by:
 14132 ;;		_DimmerLights_Main
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           
 14137                           ;psect for function _DimmerLights_DimmingFunction
 14138  02C0                     _DimmerLights_DimmingFunction:	
 14139                           
 14140                           ;incstack = 0
 14141                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 14142                           ;DimmerLights_DimmingFunction@lights stored from wreg
 14143  02C0  00F5               	movwf	DimmerLights_DimmingFunction@lights
 14144                           
 14145                           ;Dimmer_B1.c: 2129: if (lights == 1) {
 14146  02C1  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14147  02C2  3A01               	xorlw	1
 14148  02C3  1D03               	skipz
 14149  02C4  2B0F               	goto	l7931
 14150                           
 14151                           ;Dimmer_B1.c: 2130: if (DimmerIntr1.Tune == 1) {
 14152  02C5  0021               	movlb	1	; select bank1
 14153  02C6  1CA0               	btfss	_DimmerIntr1^(0+128),1
 14154  02C7  2B0F               	goto	l7931
 14155                           
 14156                           ;Dimmer_B1.c: 2131: DimmerIntr1.Tune = 0;
 14157  02C8  10A0               	bcf	_DimmerIntr1^(0+128),1
 14158                           
 14159                           ;Dimmer_B1.c: 2132: DimmerIntr1.TuneTime++;
 14160  02C9  3001               	movlw	1
 14161  02CA  00F4               	movwf	??_DimmerLights_DimmingFunction
 14162  02CB  0874               	movf	??_DimmerLights_DimmingFunction,w
 14163  02CC  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 14164                           
 14165                           ;Dimmer_B1.c: 2133: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 14166  02CD  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 14167  02CE  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 14168  02CF  1C03               	skipc
 14169  02D0  2B0F               	goto	l7931
 14170                           
 14171                           ;Dimmer_B1.c: 2134: DimmerIntr1.TuneTime = 0;
 14172  02D1  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 14173                           
 14174                           ;Dimmer_B1.c: 2135: DimmerIntr1.TuneGO = 1;
 14175  02D2  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 14176                           
 14177                           ;Dimmer_B1.c: 2136: if (DimmerIntr1.Dimming_Sw == 1) {
 14178  02D3  1E20               	btfss	_DimmerIntr1^(0+128),4
 14179  02D4  2AF3               	goto	l1109
 14180                           
 14181                           ;Dimmer_B1.c: 2155: if (DimmerIntr1.Dimming_Status == 0) {
 14182  02D5  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 14183  02D6  2AE4               	goto	l7913
 14184                           
 14185                           ;Dimmer_B1.c: 2156: if (DimmerIntr1.DimmingValue > ((char)((100-77)*0.55))) {
 14186  02D7  300D               	movlw	13
 14187  02D8  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14188  02D9  1C03               	skipc
 14189  02DA  2AE2               	goto	l1111
 14190                           
 14191                           ;Dimmer_B1.c: 2157: DimmerIntr1.DimmingValue--;
 14192  02DB  3001               	movlw	1
 14193  02DC  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 14194                           
 14195                           ;Dimmer_B1.c: 2158: DimmerIntr_ValueCalculate(1);
 14196  02DD  3001               	movlw	1
 14197  02DE  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14198                           
 14199                           ;Dimmer_B1.c: 2159: } else {
 14200  02E1  2B0F               	goto	l7931
 14201  02E2                     l1111:	
 14202                           
 14203                           ;Dimmer_B1.c: 2160: DimmerIntr1.Dimming_Status = 1;
 14204  02E2  16A0               	bsf	_DimmerIntr1^(0+128),5
 14205                           
 14206                           ;Dimmer_B1.c: 2161: }
 14207                           ;Dimmer_B1.c: 2162: } else {
 14208  02E3  2B0F               	goto	l7931
 14209  02E4                     l7913:	
 14210                           
 14211                           ;Dimmer_B1.c: 2163: if (DimmerIntr1.DimmingValue < ((char)((100-5)*0.55))) {
 14212  02E4  3034               	movlw	52
 14213  02E5  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14214  02E6  1803               	skipnc
 14215  02E7  2AF1               	goto	l1114
 14216                           
 14217                           ;Dimmer_B1.c: 2164: DimmerIntr1.DimmingValue++;
 14218  02E8  3001               	movlw	1
 14219  02E9  00F4               	movwf	??_DimmerLights_DimmingFunction
 14220  02EA  0874               	movf	??_DimmerLights_DimmingFunction,w
 14221  02EB  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 14222                           
 14223                           ;Dimmer_B1.c: 2165: DimmerIntr_ValueCalculate(1);
 14224  02EC  3001               	movlw	1
 14225  02ED  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14226                           
 14227                           ;Dimmer_B1.c: 2166: } else {
 14228  02F0  2B0F               	goto	l7931
 14229  02F1                     l1114:	
 14230                           
 14231                           ;Dimmer_B1.c: 2167: DimmerIntr1.Dimming_Status = 0;
 14232  02F1  12A0               	bcf	_DimmerIntr1^(0+128),5
 14233                           
 14234                           ;Dimmer_B1.c: 2168: }
 14235                           ;Dimmer_B1.c: 2169: }
 14236                           ;Dimmer_B1.c: 2171: } else if (DimmerIntr1.Dimming_RF == 1) {
 14237  02F2  2B0F               	goto	l7931
 14238  02F3                     l1109:	
 14239  02F3  1F20               	btfss	_DimmerIntr1^(0+128),6
 14240  02F4  2B0F               	goto	l7931
 14241                           
 14242                           ;Dimmer_B1.c: 2184: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 14243  02F5  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14244  02F6  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 14245  02F7  1803               	skipnc
 14246  02F8  2B00               	goto	l7925
 14247                           
 14248                           ;Dimmer_B1.c: 2185: DimmerIntr1.DimmingValue--;
 14249  02F9  3001               	movlw	1
 14250  02FA  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 14251                           
 14252                           ;Dimmer_B1.c: 2186: DimmerIntr_ValueCalculate(1);
 14253  02FB  3001               	movlw	1
 14254  02FC  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14255                           
 14256                           ;Dimmer_B1.c: 2187: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 14257  02FF  2B0F               	goto	l7931
 14258  0300                     l7925:	
 14259  0300  0021               	movlb	1	; select bank1
 14260  0301  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 14261  0302  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14262  0303  1803               	skipnc
 14263  0304  2B0E               	goto	l1120
 14264                           
 14265                           ;Dimmer_B1.c: 2188: DimmerIntr1.DimmingValue++;
 14266  0305  3001               	movlw	1
 14267  0306  00F4               	movwf	??_DimmerLights_DimmingFunction
 14268  0307  0874               	movf	??_DimmerLights_DimmingFunction,w
 14269  0308  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 14270                           
 14271                           ;Dimmer_B1.c: 2189: DimmerIntr_ValueCalculate(1);
 14272  0309  3001               	movlw	1
 14273  030A  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14274                           
 14275                           ;Dimmer_B1.c: 2190: } else {
 14276  030D  2B0F               	goto	l7931
 14277  030E                     l1120:	
 14278                           
 14279                           ;Dimmer_B1.c: 2191: DimmerIntr1.Dimming_RF = 0;
 14280  030E  1320               	bcf	_DimmerIntr1^(0+128),6
 14281  030F                     l7931:	
 14282                           
 14283                           ;Dimmer_B1.c: 2192: }
 14284                           ;Dimmer_B1.c: 2194: }
 14285                           ;Dimmer_B1.c: 2195: }
 14286                           ;Dimmer_B1.c: 2196: }
 14287                           ;Dimmer_B1.c: 2197: }
 14288                           ;Dimmer_B1.c: 2201: if (lights == 2) {
 14289  030F  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14290  0310  3A02               	xorlw	2
 14291  0311  1D03               	skipz
 14292  0312  2B5D               	goto	l7973
 14293                           
 14294                           ;Dimmer_B1.c: 2202: if (DimmerIntr2.Tune == 1) {
 14295  0313  0022               	movlb	2	; select bank2
 14296  0314  1CBE               	btfss	_DimmerIntr2^(0+256),1
 14297  0315  2B5D               	goto	l7973
 14298                           
 14299                           ;Dimmer_B1.c: 2203: DimmerIntr2.Tune = 0;
 14300  0316  10BE               	bcf	_DimmerIntr2^(0+256),1
 14301                           
 14302                           ;Dimmer_B1.c: 2204: DimmerIntr2.TuneTime++;
 14303  0317  3001               	movlw	1
 14304  0318  00F4               	movwf	??_DimmerLights_DimmingFunction
 14305  0319  0874               	movf	??_DimmerLights_DimmingFunction,w
 14306  031A  07C1               	addwf	(_DimmerIntr2^(0+256)+3),f
 14307                           
 14308                           ;Dimmer_B1.c: 2205: if (DimmerIntr2.TuneTime >= DimmerIntr2.TuneTimeValue) {
 14309  031B  0842               	movf	(_DimmerIntr2^(0+256)+4),w
 14310  031C  0241               	subwf	(_DimmerIntr2^(0+256)+3),w
 14311  031D  1C03               	skipc
 14312  031E  2B5D               	goto	l7973
 14313                           
 14314                           ;Dimmer_B1.c: 2206: DimmerIntr2.TuneTime = 0;
 14315  031F  01C1               	clrf	(_DimmerIntr2^(0+256)+3)
 14316                           
 14317                           ;Dimmer_B1.c: 2207: DimmerIntr2.TuneGO = 1;
 14318  0320  173F               	bsf	(_DimmerIntr2^(0+256)+1),6
 14319                           
 14320                           ;Dimmer_B1.c: 2208: if (DimmerIntr2.Dimming_Sw == 1) {
 14321  0321  1E3E               	btfss	_DimmerIntr2^(0+256),4
 14322  0322  2B41               	goto	l1125
 14323                           
 14324                           ;Dimmer_B1.c: 2227: if (DimmerIntr2.Dimming_Status == 0) {
 14325  0323  1ABE               	btfsc	_DimmerIntr2^(0+256),5
 14326  0324  2B32               	goto	l7955
 14327                           
 14328                           ;Dimmer_B1.c: 2228: if (DimmerIntr2.DimmingValue > ((char)((100-77)*0.55))) {
 14329  0325  300D               	movlw	13
 14330  0326  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14331  0327  1C03               	skipc
 14332  0328  2B30               	goto	l1127
 14333                           
 14334                           ;Dimmer_B1.c: 2229: DimmerIntr2.DimmingValue--;
 14335  0329  3001               	movlw	1
 14336  032A  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 14337                           
 14338                           ;Dimmer_B1.c: 2230: DimmerIntr_ValueCalculate(2);
 14339  032B  3002               	movlw	2
 14340  032C  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14341                           
 14342                           ;Dimmer_B1.c: 2231: } else {
 14343  032F  2B5D               	goto	l7973
 14344  0330                     l1127:	
 14345                           
 14346                           ;Dimmer_B1.c: 2232: DimmerIntr2.Dimming_Status = 1;
 14347  0330  16BE               	bsf	_DimmerIntr2^(0+256),5
 14348                           
 14349                           ;Dimmer_B1.c: 2233: }
 14350                           ;Dimmer_B1.c: 2234: } else {
 14351  0331  2B5D               	goto	l7973
 14352  0332                     l7955:	
 14353                           
 14354                           ;Dimmer_B1.c: 2235: if (DimmerIntr2.DimmingValue < ((char)((100-5)*0.55))) {
 14355  0332  3034               	movlw	52
 14356  0333  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14357  0334  1803               	skipnc
 14358  0335  2B3F               	goto	l1130
 14359                           
 14360                           ;Dimmer_B1.c: 2236: DimmerIntr2.DimmingValue++;
 14361  0336  3001               	movlw	1
 14362  0337  00F4               	movwf	??_DimmerLights_DimmingFunction
 14363  0338  0874               	movf	??_DimmerLights_DimmingFunction,w
 14364  0339  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 14365                           
 14366                           ;Dimmer_B1.c: 2237: DimmerIntr_ValueCalculate(2);
 14367  033A  3002               	movlw	2
 14368  033B  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14369                           
 14370                           ;Dimmer_B1.c: 2238: } else {
 14371  033E  2B5D               	goto	l7973
 14372  033F                     l1130:	
 14373                           
 14374                           ;Dimmer_B1.c: 2239: DimmerIntr2.Dimming_Status = 0;
 14375  033F  12BE               	bcf	_DimmerIntr2^(0+256),5
 14376                           
 14377                           ;Dimmer_B1.c: 2240: }
 14378                           ;Dimmer_B1.c: 2241: }
 14379                           ;Dimmer_B1.c: 2243: } else if (DimmerIntr2.Dimming_RF == 1) {
 14380  0340  2B5D               	goto	l7973
 14381  0341                     l1125:	
 14382  0341  1F3E               	btfss	_DimmerIntr2^(0+256),6
 14383  0342  2B5D               	goto	l7973
 14384                           
 14385                           ;Dimmer_B1.c: 2256: if (DimmerIntr2.DimmingValue > DimmerIntr2.MaxmumValue) {
 14386  0343  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14387  0344  0244               	subwf	(_DimmerIntr2^(0+256)+6),w
 14388  0345  1803               	skipnc
 14389  0346  2B4E               	goto	l7967
 14390                           
 14391                           ;Dimmer_B1.c: 2257: DimmerIntr2.DimmingValue--;
 14392  0347  3001               	movlw	1
 14393  0348  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 14394                           
 14395                           ;Dimmer_B1.c: 2258: DimmerIntr_ValueCalculate(2);
 14396  0349  3002               	movlw	2
 14397  034A  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14398                           
 14399                           ;Dimmer_B1.c: 2259: } else if (DimmerIntr2.DimmingValue < DimmerIntr2.MaxmumValue) {
 14400  034D  2B5D               	goto	l7973
 14401  034E                     l7967:	
 14402  034E  0022               	movlb	2	; select bank2
 14403  034F  0844               	movf	(_DimmerIntr2^(0+256)+6),w
 14404  0350  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14405  0351  1803               	skipnc
 14406  0352  2B5C               	goto	l1136
 14407                           
 14408                           ;Dimmer_B1.c: 2260: DimmerIntr2.DimmingValue++;
 14409  0353  3001               	movlw	1
 14410  0354  00F4               	movwf	??_DimmerLights_DimmingFunction
 14411  0355  0874               	movf	??_DimmerLights_DimmingFunction,w
 14412  0356  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 14413                           
 14414                           ;Dimmer_B1.c: 2261: DimmerIntr_ValueCalculate(2);
 14415  0357  3002               	movlw	2
 14416  0358  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14417                           
 14418                           ;Dimmer_B1.c: 2262: } else {
 14419  035B  2B5D               	goto	l7973
 14420  035C                     l1136:	
 14421                           
 14422                           ;Dimmer_B1.c: 2263: DimmerIntr2.Dimming_RF = 0;
 14423  035C  133E               	bcf	_DimmerIntr2^(0+256),6
 14424  035D                     l7973:	
 14425                           
 14426                           ;Dimmer_B1.c: 2264: }
 14427                           ;Dimmer_B1.c: 2266: }
 14428                           ;Dimmer_B1.c: 2267: }
 14429                           ;Dimmer_B1.c: 2268: }
 14430                           ;Dimmer_B1.c: 2269: }
 14431                           ;Dimmer_B1.c: 2273: if (lights == 3) {
 14432  035D  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14433  035E  3A03               	xorlw	3
 14434  035F  1D03               	skipz
 14435  0360  0008               	return
 14436                           
 14437                           ;Dimmer_B1.c: 2274: if (DimmerIntr3.Tune == 1) {
 14438  0361  0022               	movlb	2	; select bank2
 14439  0362  1CCE               	btfss	_DimmerIntr3^(0+256),1
 14440  0363  0008               	return
 14441                           
 14442                           ;Dimmer_B1.c: 2275: DimmerIntr3.Tune = 0;
 14443  0364  10CE               	bcf	_DimmerIntr3^(0+256),1
 14444                           
 14445                           ;Dimmer_B1.c: 2276: DimmerIntr3.TuneTime++;
 14446  0365  3001               	movlw	1
 14447  0366  00F4               	movwf	??_DimmerLights_DimmingFunction
 14448  0367  0874               	movf	??_DimmerLights_DimmingFunction,w
 14449  0368  07D1               	addwf	(_DimmerIntr3^(0+256)+3),f
 14450                           
 14451                           ;Dimmer_B1.c: 2277: if (DimmerIntr3.TuneTime >= DimmerIntr3.TuneTimeValue) {
 14452  0369  0852               	movf	(_DimmerIntr3^(0+256)+4),w
 14453  036A  0251               	subwf	(_DimmerIntr3^(0+256)+3),w
 14454  036B  1C03               	skipc
 14455  036C  0008               	return
 14456                           
 14457                           ;Dimmer_B1.c: 2278: DimmerIntr3.TuneTime = 0;
 14458  036D  01D1               	clrf	(_DimmerIntr3^(0+256)+3)
 14459                           
 14460                           ;Dimmer_B1.c: 2279: DimmerIntr3.TuneGO = 1;
 14461  036E  174F               	bsf	(_DimmerIntr3^(0+256)+1),6
 14462                           
 14463                           ;Dimmer_B1.c: 2280: if (DimmerIntr3.Dimming_Sw == 1) {
 14464  036F  1E4E               	btfss	_DimmerIntr3^(0+256),4
 14465  0370  2B8D               	goto	l1141
 14466                           
 14467                           ;Dimmer_B1.c: 2299: if (DimmerIntr3.Dimming_Status == 0) {
 14468  0371  1ACE               	btfsc	_DimmerIntr3^(0+256),5
 14469  0372  2B7F               	goto	l7997
 14470                           
 14471                           ;Dimmer_B1.c: 2300: if (DimmerIntr3.DimmingValue > ((char)((100-77)*0.55))) {
 14472  0373  300D               	movlw	13
 14473  0374  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14474  0375  1C03               	skipc
 14475  0376  2B7D               	goto	l1143
 14476                           
 14477                           ;Dimmer_B1.c: 2301: DimmerIntr3.DimmingValue--;
 14478  0377  3001               	movlw	1
 14479  0378  02D3               	subwf	(_DimmerIntr3^(0+256)+5),f
 14480                           
 14481                           ;Dimmer_B1.c: 2302: DimmerIntr_ValueCalculate(3);
 14482  0379  3003               	movlw	3
 14483  037A  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14484                           
 14485                           ;Dimmer_B1.c: 2303: } else {
 14486  037C  0008               	return
 14487  037D                     l1143:	
 14488                           
 14489                           ;Dimmer_B1.c: 2304: DimmerIntr3.Dimming_Status = 1;
 14490  037D  16CE               	bsf	_DimmerIntr3^(0+256),5
 14491                           
 14492                           ;Dimmer_B1.c: 2305: }
 14493                           ;Dimmer_B1.c: 2306: } else {
 14494  037E  0008               	return
 14495  037F                     l7997:	
 14496                           
 14497                           ;Dimmer_B1.c: 2307: if (DimmerIntr3.DimmingValue < ((char)((100-5)*0.55))) {
 14498  037F  3034               	movlw	52
 14499  0380  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14500  0381  1803               	skipnc
 14501  0382  2B8B               	goto	l1146
 14502                           
 14503                           ;Dimmer_B1.c: 2308: DimmerIntr3.DimmingValue++;
 14504  0383  3001               	movlw	1
 14505  0384  00F4               	movwf	??_DimmerLights_DimmingFunction
 14506  0385  0874               	movf	??_DimmerLights_DimmingFunction,w
 14507  0386  07D3               	addwf	(_DimmerIntr3^(0+256)+5),f
 14508                           
 14509                           ;Dimmer_B1.c: 2309: DimmerIntr_ValueCalculate(3);
 14510  0387  3003               	movlw	3
 14511  0388  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14512                           
 14513                           ;Dimmer_B1.c: 2310: } else {
 14514  038A  0008               	return
 14515  038B                     l1146:	
 14516                           
 14517                           ;Dimmer_B1.c: 2311: DimmerIntr3.Dimming_Status = 0;
 14518  038B  12CE               	bcf	_DimmerIntr3^(0+256),5
 14519                           
 14520                           ;Dimmer_B1.c: 2312: }
 14521                           ;Dimmer_B1.c: 2313: }
 14522                           ;Dimmer_B1.c: 2315: } else if (DimmerIntr3.Dimming_RF == 1) {
 14523  038C  0008               	return
 14524  038D                     l1141:	
 14525  038D  1F4E               	btfss	_DimmerIntr3^(0+256),6
 14526  038E  0008               	return
 14527                           
 14528                           ;Dimmer_B1.c: 2328: if (DimmerIntr3.DimmingValue > DimmerIntr3.MaxmumValue) {
 14529  038F  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 14530  0390  0254               	subwf	(_DimmerIntr3^(0+256)+6),w
 14531  0391  1803               	skipnc
 14532  0392  2B99               	goto	l8009
 14533                           
 14534                           ;Dimmer_B1.c: 2329: DimmerIntr3.DimmingValue--;
 14535  0393  3001               	movlw	1
 14536  0394  02D3               	subwf	(_DimmerIntr3^(0+256)+5),f
 14537                           
 14538                           ;Dimmer_B1.c: 2330: DimmerIntr_ValueCalculate(3);
 14539  0395  3003               	movlw	3
 14540  0396  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14541                           
 14542                           ;Dimmer_B1.c: 2331: } else if (DimmerIntr3.DimmingValue < DimmerIntr3.MaxmumValue) {
 14543  0398  0008               	return
 14544  0399                     l8009:	
 14545  0399  0022               	movlb	2	; select bank2
 14546  039A  0854               	movf	(_DimmerIntr3^(0+256)+6),w
 14547  039B  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14548  039C  1803               	skipnc
 14549  039D  2BA6               	goto	l1152
 14550                           
 14551                           ;Dimmer_B1.c: 2332: DimmerIntr3.DimmingValue++;
 14552  039E  3001               	movlw	1
 14553  039F  00F4               	movwf	??_DimmerLights_DimmingFunction
 14554  03A0  0874               	movf	??_DimmerLights_DimmingFunction,w
 14555  03A1  07D3               	addwf	(_DimmerIntr3^(0+256)+5),f
 14556                           
 14557                           ;Dimmer_B1.c: 2333: DimmerIntr_ValueCalculate(3);
 14558  03A2  3003               	movlw	3
 14559  03A3  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14560                           
 14561                           ;Dimmer_B1.c: 2334: } else {
 14562  03A5  0008               	return
 14563  03A6                     l1152:	
 14564                           
 14565                           ;Dimmer_B1.c: 2335: DimmerIntr3.Dimming_RF = 0;
 14566  03A6  134E               	bcf	_DimmerIntr3^(0+256),6
 14567  03A7  0008               	return
 14568  03A8                     __end_of_DimmerLights_DimmingFunction:	
 14569                           
 14570                           	psect	text97
 14571  1364                     __ptext97:	
 14572 ;; *************** function _DimmerIntr_ValueCalculate *****************
 14573 ;; Defined at:
 14574 ;;		line 2058 in file "../src/Dimmer_B1.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;  lights          1    wreg     unsigned char 
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;  lights          1    3[COMMON] unsigned char 
 14579 ;; Return value:  Size  Location     Type
 14580 ;;		None               void
 14581 ;; Registers used:
 14582 ;;		wreg
 14583 ;; Tracked objects:
 14584 ;;		On entry : 0/0
 14585 ;;		On exit  : 0/0
 14586 ;;		Unchanged: 0/0
 14587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;Total ram usage:        2 bytes
 14593 ;; Hardware stack levels used:    1
 14594 ;; Hardware stack levels required when called:    3
 14595 ;; This function calls:
 14596 ;;		Nothing
 14597 ;; This function is called by:
 14598 ;;		_setDimmerLights_OnOff
 14599 ;;		_DimmerLights_DimmingFunction
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603                           
 14604                           ;psect for function _DimmerIntr_ValueCalculate
 14605  1364                     _DimmerIntr_ValueCalculate:	
 14606                           
 14607                           ;incstack = 0
 14608                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg]
 14609                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 14610  1364  00F3               	movwf	DimmerIntr_ValueCalculate@lights
 14611                           
 14612                           ;Dimmer_B1.c: 2060: if (lights == 1) {
 14613  1365  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14614  1366  3A01               	xorlw	1
 14615  1367  1D03               	skipz
 14616  1368  2B73               	goto	l1100
 14617                           
 14618                           ;Dimmer_B1.c: 2062: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 14619  1369  0021               	movlb	1	; select bank1
 14620  136A  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14621  136B  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14622  136C  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14623  136D  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 14624                           
 14625                           ;Dimmer_B1.c: 2063: DimmerIntr1.TuneEnd = 55;
 14626  136E  3037               	movlw	55
 14627  136F  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14628  1370  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14629  1371  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 14630                           
 14631                           ;Dimmer_B1.c: 2064: DimmerIntr1.Calculate = 1;
 14632  1372  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 14633  1373                     l1100:	
 14634                           
 14635                           ;Dimmer_B1.c: 2078: }
 14636                           ;Dimmer_B1.c: 2083: if (lights == 2) {
 14637  1373  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14638  1374  3A02               	xorlw	2
 14639  1375  1D03               	skipz
 14640  1376  2B81               	goto	l1101
 14641                           
 14642                           ;Dimmer_B1.c: 2085: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14643  1377  0022               	movlb	2	; select bank2
 14644  1378  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14645  1379  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14646  137A  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14647  137B  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14648                           
 14649                           ;Dimmer_B1.c: 2086: DimmerIntr2.TuneEnd = 55;
 14650  137C  3037               	movlw	55
 14651  137D  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14652  137E  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14653  137F  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14654                           
 14655                           ;Dimmer_B1.c: 2087: DimmerIntr2.Calculate = 1;
 14656  1380  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14657  1381                     l1101:	
 14658                           
 14659                           ;Dimmer_B1.c: 2101: }
 14660                           ;Dimmer_B1.c: 2105: if (lights == 3) {
 14661  1381  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14662  1382  3A03               	xorlw	3
 14663  1383  1D03               	skipz
 14664  1384  0008               	return
 14665                           
 14666                           ;Dimmer_B1.c: 2107: DimmerIntr3.TuneValue2 = DimmerIntr3.DimmingValue;
 14667  1385  0022               	movlb	2	; select bank2
 14668  1386  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 14669  1387  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14670  1388  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14671  1389  00D6               	movwf	(_DimmerIntr3^(0+256)+8)
 14672                           
 14673                           ;Dimmer_B1.c: 2108: DimmerIntr3.TuneEnd = 55;
 14674  138A  3037               	movlw	55
 14675  138B  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14676  138C  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14677  138D  00D9               	movwf	(_DimmerIntr3^(0+256)+11)
 14678                           
 14679                           ;Dimmer_B1.c: 2109: DimmerIntr3.Calculate = 1;
 14680  138E  17CF               	bsf	(_DimmerIntr3^(0+256)+1),7
 14681  138F  0008               	return
 14682  1390                     __end_of_DimmerIntr_ValueCalculate:	
 14683                           
 14684                           	psect	text98
 14685  1D7E                     __ptext98:	
 14686 ;; *************** function _DimmerLights_Initialization *****************
 14687 ;; Defined at:
 14688 ;;		line 703 in file "../src/Dimmer_B1.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;		None
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;		None
 14693 ;; Return value:  Size  Location     Type
 14694 ;;		None               void
 14695 ;; Registers used:
 14696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;Total ram usage:        0 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    7
 14709 ;; This function calls:
 14710 ;;		_DimmerIntr_Initialization
 14711 ;;		_setDimmerLights_Initialization
 14712 ;; This function is called by:
 14713 ;;		_main
 14714 ;; This function uses a non-reentrant model
 14715 ;;
 14716                           
 14717                           
 14718                           ;psect for function _DimmerLights_Initialization
 14719  1D7E                     _DimmerLights_Initialization:	
 14720                           
 14721                           ;Dimmer_B1.c: 705: setDimmerLights_Initialization(1);
 14722                           
 14723                           ;incstack = 0
 14724                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14725  1D7E  3001               	movlw	1
 14726  1D7F  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14727                           
 14728                           ;Dimmer_B1.c: 709: setDimmerLights_Initialization(2);
 14729  1D82  3002               	movlw	2
 14730  1D83  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14731                           
 14732                           ;Dimmer_B1.c: 713: setDimmerLights_Initialization(3);
 14733  1D86  3003               	movlw	3
 14734  1D87  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14735                           
 14736                           ;Dimmer_B1.c: 715: DimmerIntr_Initialization();
 14737  1D8A  3185  25F5         	fcall	_DimmerIntr_Initialization
 14738  1D8C  0008               	return
 14739  1D8D                     __end_of_DimmerLights_Initialization:	
 14740                           
 14741                           	psect	text99
 14742  07FF                     __ptext99:	
 14743 ;; *************** function _setDimmerLights_Initialization *****************
 14744 ;; Defined at:
 14745 ;;		line 719 in file "../src/Dimmer_B1.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;  lights          1    wreg     unsigned char 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;  lights          1    0[COMMON] unsigned char 
 14750 ;; Return value:  Size  Location     Type
 14751 ;;		None               void
 14752 ;; Registers used:
 14753 ;;		wreg
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/0
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;Total ram usage:        0 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:    3
 14766 ;; This function calls:
 14767 ;;		Nothing
 14768 ;; This function is called by:
 14769 ;;		_DimmerLights_Initialization
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           
 14774                           ;psect for function _setDimmerLights_Initialization
 14775  07FF                     _setDimmerLights_Initialization:	
 14776                           
 14777                           ;incstack = 0
 14778                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 14779  07FF  0008               	return
 14780  0800                     __end_of_setDimmerLights_Initialization:	
 14781                           
 14782                           	psect	text100
 14783  05F5                     __ptext100:	
 14784 ;; *************** function _DimmerIntr_Initialization *****************
 14785 ;; Defined at:
 14786 ;;		line 7 in file "../src/Dimmer_B1.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;		None               void
 14793 ;; Registers used:
 14794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;Total ram usage:        1 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    6
 14807 ;; This function calls:
 14808 ;;		_getDimmerLights_PercentToValue
 14809 ;;		_getDimmerLights_ValueToPercent
 14810 ;;		_setMemory_Modify
 14811 ;; This function is called by:
 14812 ;;		_DimmerLights_Initialization
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           
 14817                           ;psect for function _DimmerIntr_Initialization
 14818  05F5                     _DimmerIntr_Initialization:	
 14819                           
 14820                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 14821                           
 14822                           ;incstack = 0
 14823                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14824  05F5  3003               	movlw	3
 14825  05F6  0020               	movlb	0	; select bank0
 14826  05F7  00D8               	movwf	??_DimmerIntr_Initialization
 14827  05F8  0858               	movf	??_DimmerIntr_Initialization,w
 14828  05F9  0021               	movlb	1	; select bank1
 14829  05FA  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 14830                           
 14831                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-77)*0.55));
 14832  05FB  300C               	movlw	12
 14833  05FC  0020               	movlb	0	; select bank0
 14834  05FD  00D8               	movwf	??_DimmerIntr_Initialization
 14835  05FE  0858               	movf	??_DimmerIntr_Initialization,w
 14836  05FF  0021               	movlb	1	; select bank1
 14837  0600  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 14838                           
 14839                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-5)*0.55));
 14840  0601  3034               	movlw	52
 14841  0602  0020               	movlb	0	; select bank0
 14842  0603  00D8               	movwf	??_DimmerIntr_Initialization
 14843  0604  0858               	movf	??_DimmerIntr_Initialization,w
 14844  0605  0021               	movlb	1	; select bank1
 14845  0606  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 14846                           
 14847                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 14848  0607  10A0               	bcf	_DimmerIntr1^(0+128),1
 14849                           
 14850                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 14851  0608  300C               	movlw	12
 14852  0609  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14853  060C  0020               	movlb	0	; select bank0
 14854  060D  00D8               	movwf	??_DimmerIntr_Initialization
 14855  060E  086E               	movf	_product,w
 14856  060F  3E15               	addlw	21
 14857  0610  0086               	movwf	6
 14858  0611  3002               	movlw	2	; select bank4/5
 14859  0612  0087               	movwf	7
 14860  0613  0858               	movf	??_DimmerIntr_Initialization,w
 14861  0614  0081               	movwf	1
 14862                           
 14863                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 14864  0615  086E               	movf	_product,w
 14865  0616  3E15               	addlw	21
 14866  0617  0086               	movwf	6
 14867  0618  3002               	movlw	2	; select bank4/5
 14868  0619  0087               	movwf	7
 14869  061A  0801               	movf	1,w
 14870  061B  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 14871  061E  0020               	movlb	0	; select bank0
 14872  061F  00D8               	movwf	??_DimmerIntr_Initialization
 14873  0620  0858               	movf	??_DimmerIntr_Initialization,w
 14874  0621  0021               	movlb	1	; select bank1
 14875  0622  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 14876                           
 14877                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 14878  0623  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14879  0624  0020               	movlb	0	; select bank0
 14880  0625  00D8               	movwf	??_DimmerIntr_Initialization
 14881  0626  0858               	movf	??_DimmerIntr_Initialization,w
 14882  0627  0021               	movlb	1	; select bank1
 14883  0628  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 14884                           
 14885                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneEnd = 55;
 14886  0629  3037               	movlw	55
 14887  062A  0020               	movlb	0	; select bank0
 14888  062B  00D8               	movwf	??_DimmerIntr_Initialization
 14889  062C  0858               	movf	??_DimmerIntr_Initialization,w
 14890  062D  0021               	movlb	1	; select bank1
 14891  062E  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 14892                           
 14893                           ;Dimmer_B1.c: 32: DimmerIntr1.Calculate = 1;
 14894  062F  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 14895                           
 14896                           ;Dimmer_B1.c: 51: DimmerIntr2.TuneTimeValue = 3;
 14897  0630  3003               	movlw	3
 14898  0631  0020               	movlb	0	; select bank0
 14899  0632  00D8               	movwf	??_DimmerIntr_Initialization
 14900  0633  0858               	movf	??_DimmerIntr_Initialization,w
 14901  0634  0022               	movlb	2	; select bank2
 14902  0635  00C2               	movwf	(_DimmerIntr2^(0+256)+4)
 14903                           
 14904                           ;Dimmer_B1.c: 52: DimmerIntr2.MaxmumValue = ((char)((100-77)*0.55));
 14905  0636  300C               	movlw	12
 14906  0637  0020               	movlb	0	; select bank0
 14907  0638  00D8               	movwf	??_DimmerIntr_Initialization
 14908  0639  0858               	movf	??_DimmerIntr_Initialization,w
 14909  063A  0022               	movlb	2	; select bank2
 14910  063B  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 14911                           
 14912                           ;Dimmer_B1.c: 53: DimmerIntr2.MinimumValue = ((char)((100-5)*0.55));
 14913  063C  3034               	movlw	52
 14914  063D  0020               	movlb	0	; select bank0
 14915  063E  00D8               	movwf	??_DimmerIntr_Initialization
 14916  063F  0858               	movf	??_DimmerIntr_Initialization,w
 14917  0640  0022               	movlb	2	; select bank2
 14918  0641  00C5               	movwf	(_DimmerIntr2^(0+256)+7)
 14919                           
 14920                           ;Dimmer_B1.c: 54: DimmerIntr2.Tune = 0;
 14921  0642  10BE               	bcf	_DimmerIntr2^(0+256),1
 14922                           
 14923                           ;Dimmer_B1.c: 59: product->Data[22] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 14924  0643  300C               	movlw	12
 14925  0644  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14926  0647  0020               	movlb	0	; select bank0
 14927  0648  00D8               	movwf	??_DimmerIntr_Initialization
 14928  0649  086E               	movf	_product,w
 14929  064A  3E16               	addlw	22
 14930  064B  0086               	movwf	6
 14931  064C  3002               	movlw	2	; select bank4/5
 14932  064D  0087               	movwf	7
 14933  064E  0858               	movf	??_DimmerIntr_Initialization,w
 14934  064F  0081               	movwf	1
 14935                           
 14936                           ;Dimmer_B1.c: 62: DimmerIntr2.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[22]);
 14937  0650  086E               	movf	_product,w
 14938  0651  3E16               	addlw	22
 14939  0652  0086               	movwf	6
 14940  0653  3002               	movlw	2	; select bank4/5
 14941  0654  0087               	movwf	7
 14942  0655  0801               	movf	1,w
 14943  0656  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 14944  0659  0020               	movlb	0	; select bank0
 14945  065A  00D8               	movwf	??_DimmerIntr_Initialization
 14946  065B  0858               	movf	??_DimmerIntr_Initialization,w
 14947  065C  0022               	movlb	2	; select bank2
 14948  065D  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 14949                           
 14950                           ;Dimmer_B1.c: 71: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14951  065E  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14952  065F  0020               	movlb	0	; select bank0
 14953  0660  00D8               	movwf	??_DimmerIntr_Initialization
 14954  0661  0858               	movf	??_DimmerIntr_Initialization,w
 14955  0662  0022               	movlb	2	; select bank2
 14956  0663  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14957                           
 14958                           ;Dimmer_B1.c: 72: DimmerIntr2.TuneEnd = 55;
 14959  0664  3037               	movlw	55
 14960  0665  0020               	movlb	0	; select bank0
 14961  0666  00D8               	movwf	??_DimmerIntr_Initialization
 14962  0667  0858               	movf	??_DimmerIntr_Initialization,w
 14963  0668  0022               	movlb	2	; select bank2
 14964  0669  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14965                           
 14966                           ;Dimmer_B1.c: 73: DimmerIntr2.Calculate = 1;
 14967  066A  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14968                           
 14969                           ;Dimmer_B1.c: 90: DimmerIntr3.TuneTimeValue = 3;
 14970  066B  3003               	movlw	3
 14971  066C  0020               	movlb	0	; select bank0
 14972  066D  00D8               	movwf	??_DimmerIntr_Initialization
 14973  066E  0858               	movf	??_DimmerIntr_Initialization,w
 14974  066F  0022               	movlb	2	; select bank2
 14975  0670  00D2               	movwf	(_DimmerIntr3^(0+256)+4)
 14976                           
 14977                           ;Dimmer_B1.c: 91: DimmerIntr3.MaxmumValue = ((char)((100-77)*0.55));
 14978  0671  300C               	movlw	12
 14979  0672  0020               	movlb	0	; select bank0
 14980  0673  00D8               	movwf	??_DimmerIntr_Initialization
 14981  0674  0858               	movf	??_DimmerIntr_Initialization,w
 14982  0675  0022               	movlb	2	; select bank2
 14983  0676  00D4               	movwf	(_DimmerIntr3^(0+256)+6)
 14984                           
 14985                           ;Dimmer_B1.c: 92: DimmerIntr3.MinimumValue = ((char)((100-5)*0.55));
 14986  0677  3034               	movlw	52
 14987  0678  0020               	movlb	0	; select bank0
 14988  0679  00D8               	movwf	??_DimmerIntr_Initialization
 14989  067A  0858               	movf	??_DimmerIntr_Initialization,w
 14990  067B  0022               	movlb	2	; select bank2
 14991  067C  00D5               	movwf	(_DimmerIntr3^(0+256)+7)
 14992                           
 14993                           ;Dimmer_B1.c: 95: product->Data[23] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 14994  067D  300C               	movlw	12
 14995  067E  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14996  0681  0020               	movlb	0	; select bank0
 14997  0682  00D8               	movwf	??_DimmerIntr_Initialization
 14998  0683  086E               	movf	_product,w
 14999  0684  3E17               	addlw	23
 15000  0685  0086               	movwf	6
 15001  0686  3002               	movlw	2	; select bank4/5
 15002  0687  0087               	movwf	7
 15003  0688  0858               	movf	??_DimmerIntr_Initialization,w
 15004  0689  0081               	movwf	1
 15005                           
 15006                           ;Dimmer_B1.c: 97: DimmerIntr3.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[23]);
 15007  068A  086E               	movf	_product,w
 15008  068B  3E17               	addlw	23
 15009  068C  0086               	movwf	6
 15010  068D  3002               	movlw	2	; select bank4/5
 15011  068E  0087               	movwf	7
 15012  068F  0801               	movf	1,w
 15013  0690  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 15014  0693  0020               	movlb	0	; select bank0
 15015  0694  00D8               	movwf	??_DimmerIntr_Initialization
 15016  0695  0858               	movf	??_DimmerIntr_Initialization,w
 15017  0696  0022               	movlb	2	; select bank2
 15018  0697  00D3               	movwf	(_DimmerIntr3^(0+256)+5)
 15019                           
 15020                           ;Dimmer_B1.c: 104: DimmerIntr3.TuneValue2 = DimmerIntr3.DimmingValue;
 15021  0698  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 15022  0699  0020               	movlb	0	; select bank0
 15023  069A  00D8               	movwf	??_DimmerIntr_Initialization
 15024  069B  0858               	movf	??_DimmerIntr_Initialization,w
 15025  069C  0022               	movlb	2	; select bank2
 15026  069D  00D6               	movwf	(_DimmerIntr3^(0+256)+8)
 15027                           
 15028                           ;Dimmer_B1.c: 105: DimmerIntr3.TuneEnd = 55;
 15029  069E  3037               	movlw	55
 15030  069F  0020               	movlb	0	; select bank0
 15031  06A0  00D8               	movwf	??_DimmerIntr_Initialization
 15032  06A1  0858               	movf	??_DimmerIntr_Initialization,w
 15033  06A2  0022               	movlb	2	; select bank2
 15034  06A3  00D9               	movwf	(_DimmerIntr3^(0+256)+11)
 15035                           
 15036                           ;Dimmer_B1.c: 106: DimmerIntr3.Calculate = 1;
 15037  06A4  17CF               	bsf	(_DimmerIntr3^(0+256)+1),7
 15038                           
 15039                           ;Dimmer_B1.c: 111: if (myMain.InitDimmer == 1) {
 15040  06A5  0021               	movlb	1	; select bank1
 15041  06A6  1E49               	btfss	(_myMain^(0+128)+10),4
 15042  06A7  0008               	return
 15043                           
 15044                           ;Dimmer_B1.c: 112: myMain.InitDimmer = 0;
 15045  06A8  1249               	bcf	(_myMain^(0+128)+10),4
 15046                           
 15047                           ;Dimmer_B1.c: 113: myMain.SaveDimmer = 1;
 15048  06A9  16C9               	bsf	(_myMain^(0+128)+10),5
 15049                           
 15050                           ;Dimmer_B1.c: 114: setMemory_Modify(1);
 15051  06AA  3001               	movlw	1
 15052  06AB  319D  25F6         	fcall	_setMemory_Modify
 15053  06AD  0008               	return
 15054  06AE                     __end_of_DimmerIntr_Initialization:	
 15055                           
 15056                           	psect	text101
 15057  1DF6                     __ptext101:	
 15058 ;; *************** function _setMemory_Modify *****************
 15059 ;; Defined at:
 15060 ;;		line 1088 in file "../src/MCU_B1.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  command         1    wreg     unsigned char 
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;  command         1    3[COMMON] unsigned char 
 15065 ;; Return value:  Size  Location     Type
 15066 ;;		None               void
 15067 ;; Registers used:
 15068 ;;		wreg, status,2, status,0
 15069 ;; Tracked objects:
 15070 ;;		On entry : 0/0
 15071 ;;		On exit  : 0/0
 15072 ;;		Unchanged: 0/0
 15073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;Total ram usage:        2 bytes
 15079 ;; Hardware stack levels used:    1
 15080 ;; Hardware stack levels required when called:    3
 15081 ;; This function calls:
 15082 ;;		Nothing
 15083 ;; This function is called by:
 15084 ;;		_DimmerIntr_Initialization
 15085 ;;		_setDimmerLights_Dimming
 15086 ;;		_setLog_Code
 15087 ;;		_setRFSW_AdjControl
 15088 ;;		_DimmerLights_AssignationDimming
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           
 15093                           ;psect for function _setMemory_Modify
 15094  1DF6                     _setMemory_Modify:	
 15095                           
 15096                           ;incstack = 0
 15097                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 15098                           ;setMemory_Modify@command stored from wreg
 15099  1DF6  00F3               	movwf	setMemory_Modify@command
 15100                           
 15101                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
 15102  1DF7  0873               	movf	setMemory_Modify@command,w
 15103  1DF8  3A01               	xorlw	1
 15104  1DF9  3000               	movlw	0
 15105  1DFA  1903               	skipnz
 15106  1DFB  3001               	movlw	1
 15107  1DFC  00F2               	movwf	??_setMemory_Modify
 15108  1DFD  0024               	movlb	4	; select bank4
 15109  1DFE  0844               	movf	(_Memory^(0+512)+36),w
 15110  1DFF  0672               	xorwf	??_setMemory_Modify,w
 15111  1E00  39FE               	andlw	-2
 15112  1E01  0672               	xorwf	??_setMemory_Modify,w
 15113  1E02  00C4               	movwf	(_Memory^(0+512)+36)
 15114                           
 15115                           ;MCU_B1.c: 1090: Memory.Time = 0;
 15116  1E03  01C2               	clrf	(_Memory^(0+512)+34)
 15117  1E04  01C3               	clrf	((_Memory+1)^(0+512)+34)
 15118  1E05  0008               	return
 15119  1E06                     __end_of_setMemory_Modify:	
 15120                           
 15121                           	psect	text102
 15122  1724                     __ptext102:	
 15123 ;; *************** function _getDimmerLights_ValueToPercent *****************
 15124 ;; Defined at:
 15125 ;;		line 1315 in file "../src/Dimmer_B1.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  value           1    wreg     unsigned char 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;  value           1   50[BANK0 ] unsigned char 
 15130 ;;  i               3   51[BANK0 ] float 
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      unsigned char 
 15133 ;; Registers used:
 15134 ;;		wreg, status,2, status,0, pclath, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;Total ram usage:        4 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    5
 15147 ;; This function calls:
 15148 ;;		___awtoft
 15149 ;;		___ftdiv
 15150 ;;		___fttol
 15151 ;; This function is called by:
 15152 ;;		_DimmerIntr_Initialization
 15153 ;;		_setDimmerLights_Dimming
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           
 15158                           ;psect for function _getDimmerLights_ValueToPercent
 15159  1724                     _getDimmerLights_ValueToPercent:	
 15160                           
 15161                           ;incstack = 0
 15162                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 15163                           ;getDimmerLights_ValueToPercent@value stored from wreg
 15164  1724  0020               	movlb	0	; select bank0
 15165  1725  00D2               	movwf	getDimmerLights_ValueToPercent@value
 15166                           
 15167                           ;Dimmer_B1.c: 1317: float i = ((char)((100-5)*0.55)) - ((char)((100-77)*0.55));
 15168  1726  3000               	movlw	0
 15169  1727  00D3               	movwf	getDimmerLights_ValueToPercent@i
 15170  1728  3020               	movlw	32
 15171  1729  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 15172  172A  3042               	movlw	66
 15173  172B  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 15174                           
 15175                           ;Dimmer_B1.c: 1318: i /= 100;
 15176  172C  3000               	movlw	0
 15177  172D  00A7               	movwf	___ftdiv@f2
 15178  172E  30C8               	movlw	200
 15179  172F  00A8               	movwf	___ftdiv@f2+1
 15180  1730  3042               	movlw	66
 15181  1731  00A9               	movwf	___ftdiv@f2+2
 15182  1732  0853               	movf	getDimmerLights_ValueToPercent@i,w
 15183  1733  00AA               	movwf	___ftdiv@f1
 15184  1734  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 15185  1735  00AB               	movwf	___ftdiv@f1+1
 15186  1736  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 15187  1737  00AC               	movwf	___ftdiv@f1+2
 15188  1738  318E  26A3  3197   	fcall	___ftdiv
 15189  173B  0020               	movlb	0	; select bank0
 15190  173C  0827               	movf	?___ftdiv,w
 15191  173D  00D3               	movwf	getDimmerLights_ValueToPercent@i
 15192  173E  0828               	movf	?___ftdiv+1,w
 15193  173F  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 15194  1740  0829               	movf	?___ftdiv+2,w
 15195  1741  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 15196                           
 15197                           ;Dimmer_B1.c: 1319: return (100 - (char) ((value - ((char)((100-77)*0.55))) / i));
 15198  1742  0852               	movf	getDimmerLights_ValueToPercent@value,w
 15199  1743  3EF4               	addlw	244
 15200  1744  00A3               	movwf	___awtoft@c
 15201  1745  30FF               	movlw	255
 15202  1746  1803               	skipnc
 15203  1747  3000               	movlw	0
 15204  1748  00A4               	movwf	___awtoft@c+1
 15205  1749  3191  21F6  3197   	fcall	___awtoft
 15206  174C  0020               	movlb	0	; select bank0
 15207  174D  0823               	movf	?___awtoft,w
 15208  174E  00AA               	movwf	___ftdiv@f1
 15209  174F  0824               	movf	?___awtoft+1,w
 15210  1750  00AB               	movwf	___ftdiv@f1+1
 15211  1751  0825               	movf	?___awtoft+2,w
 15212  1752  00AC               	movwf	___ftdiv@f1+2
 15213  1753  0853               	movf	getDimmerLights_ValueToPercent@i,w
 15214  1754  00A7               	movwf	___ftdiv@f2
 15215  1755  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 15216  1756  00A8               	movwf	___ftdiv@f2+1
 15217  1757  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 15218  1758  00A9               	movwf	___ftdiv@f2+2
 15219  1759  318E  26A3  3197   	fcall	___ftdiv
 15220  175C  0020               	movlb	0	; select bank0
 15221  175D  0827               	movf	?___ftdiv,w
 15222  175E  00C4               	movwf	___fttol@f1
 15223  175F  0828               	movf	?___ftdiv+1,w
 15224  1760  00C5               	movwf	___fttol@f1+1
 15225  1761  0829               	movf	?___ftdiv+2,w
 15226  1762  00C6               	movwf	___fttol@f1+2
 15227  1763  318D  250C         	fcall	___fttol
 15228  1765  0020               	movlb	0	; select bank0
 15229  1766  0344               	decf	?___fttol,w
 15230  1767  3AFF               	xorlw	255
 15231  1768  3E64               	addlw	100
 15232  1769  0008               	return
 15233  176A                     __end_of_getDimmerLights_ValueToPercent:	
 15234                           
 15235                           	psect	text103
 15236  08F7                     __ptext103:	
 15237 ;; *************** function _getDimmerLights_PercentToValue *****************
 15238 ;; Defined at:
 15239 ;;		line 1299 in file "../src/Dimmer_B1.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;  value           1    wreg     unsigned char 
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;  value           1   52[BANK0 ] unsigned char 
 15244 ;;  i               3   53[BANK0 ] float 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  1    wreg      unsigned char 
 15247 ;; Registers used:
 15248 ;;		wreg, status,2, status,0, pclath, cstack
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15255 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;Total ram usage:        6 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:    5
 15261 ;; This function calls:
 15262 ;;		___awtoft
 15263 ;;		___ftadd
 15264 ;;		___ftdiv
 15265 ;;		___ftmul
 15266 ;;		___fttol
 15267 ;; This function is called by:
 15268 ;;		_DimmerIntr_Initialization
 15269 ;;		_setDimmerLights_OnOff
 15270 ;;		_setRFSW_AdjControl
 15271 ;;		_DimmerLights_AssignationDimming
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           
 15276                           ;psect for function _getDimmerLights_PercentToValue
 15277  08F7                     _getDimmerLights_PercentToValue:	
 15278                           
 15279                           ;incstack = 0
 15280                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 15281                           ;getDimmerLights_PercentToValue@value stored from wreg
 15282  08F7  0020               	movlb	0	; select bank0
 15283  08F8  00D4               	movwf	getDimmerLights_PercentToValue@value
 15284                           
 15285                           ;Dimmer_B1.c: 1301: float i = ((char)((100-5)*0.55)) - ((char)((100-77)*0.55));
 15286  08F9  3000               	movlw	0
 15287  08FA  00D5               	movwf	getDimmerLights_PercentToValue@i
 15288  08FB  3020               	movlw	32
 15289  08FC  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 15290  08FD  3042               	movlw	66
 15291  08FE  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 15292                           
 15293                           ;Dimmer_B1.c: 1302: i /= 100;
 15294  08FF  3000               	movlw	0
 15295  0900  00A7               	movwf	___ftdiv@f2
 15296  0901  30C8               	movlw	200
 15297  0902  00A8               	movwf	___ftdiv@f2+1
 15298  0903  3042               	movlw	66
 15299  0904  00A9               	movwf	___ftdiv@f2+2
 15300  0905  0855               	movf	getDimmerLights_PercentToValue@i,w
 15301  0906  00AA               	movwf	___ftdiv@f1
 15302  0907  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 15303  0908  00AB               	movwf	___ftdiv@f1+1
 15304  0909  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 15305  090A  00AC               	movwf	___ftdiv@f1+2
 15306  090B  318E  26A3  3188   	fcall	___ftdiv
 15307  090E  0020               	movlb	0	; select bank0
 15308  090F  0827               	movf	?___ftdiv,w
 15309  0910  00D5               	movwf	getDimmerLights_PercentToValue@i
 15310  0911  0828               	movf	?___ftdiv+1,w
 15311  0912  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 15312  0913  0829               	movf	?___ftdiv+2,w
 15313  0914  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 15314                           
 15315                           ;Dimmer_B1.c: 1303: return (char) (((100 - value) * i) + ((char)((100-77)*0.55)));
 15316  0915  0854               	movf	getDimmerLights_PercentToValue@value,w
 15317  0916  00D2               	movwf	??_getDimmerLights_PercentToValue
 15318  0917  01D3               	clrf	??_getDimmerLights_PercentToValue+1
 15319  0918  09D2               	comf	??_getDimmerLights_PercentToValue,f
 15320  0919  09D3               	comf	??_getDimmerLights_PercentToValue+1,f
 15321  091A  0AD2               	incf	??_getDimmerLights_PercentToValue,f
 15322  091B  1903               	skipnz
 15323  091C  0AD3               	incf	??_getDimmerLights_PercentToValue+1,f
 15324  091D  0852               	movf	??_getDimmerLights_PercentToValue,w
 15325  091E  3E64               	addlw	100
 15326  091F  00A3               	movwf	___awtoft@c
 15327  0920  3000               	movlw	0
 15328  0921  3D53               	addwfc	??_getDimmerLights_PercentToValue+1,w
 15329  0922  00A4               	movwf	___awtoft@c+1
 15330  0923  3191  21F6  3188   	fcall	___awtoft
 15331  0926  0020               	movlb	0	; select bank0
 15332  0927  0823               	movf	?___awtoft,w
 15333  0928  00AA               	movwf	___ftmul@f2
 15334  0929  0824               	movf	?___awtoft+1,w
 15335  092A  00AB               	movwf	___ftmul@f2+1
 15336  092B  0825               	movf	?___awtoft+2,w
 15337  092C  00AC               	movwf	___ftmul@f2+2
 15338  092D  0855               	movf	getDimmerLights_PercentToValue@i,w
 15339  092E  00A7               	movwf	___ftmul@f1
 15340  092F  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 15341  0930  00A8               	movwf	___ftmul@f1+1
 15342  0931  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 15343  0932  00A9               	movwf	___ftmul@f1+2
 15344  0933  318F  274C  3188   	fcall	___ftmul
 15345  0936  0020               	movlb	0	; select bank0
 15346  0937  0827               	movf	?___ftmul,w
 15347  0938  00BA               	movwf	___ftadd@f2
 15348  0939  0828               	movf	?___ftmul+1,w
 15349  093A  00BB               	movwf	___ftadd@f2+1
 15350  093B  0829               	movf	?___ftmul+2,w
 15351  093C  00BC               	movwf	___ftadd@f2+2
 15352  093D  3000               	movlw	0
 15353  093E  00B7               	movwf	___ftadd@f1
 15354  093F  3040               	movlw	64
 15355  0940  00B8               	movwf	___ftadd@f1+1
 15356  0941  3041               	movlw	65
 15357  0942  00B9               	movwf	___ftadd@f1+2
 15358  0943  3181  21CA  3188   	fcall	___ftadd
 15359  0946  0020               	movlb	0	; select bank0
 15360  0947  0837               	movf	?___ftadd,w
 15361  0948  00C4               	movwf	___fttol@f1
 15362  0949  0838               	movf	?___ftadd+1,w
 15363  094A  00C5               	movwf	___fttol@f1+1
 15364  094B  0839               	movf	?___ftadd+2,w
 15365  094C  00C6               	movwf	___fttol@f1+2
 15366  094D  318D  250C         	fcall	___fttol
 15367  094F  0020               	movlb	0	; select bank0
 15368  0950  0844               	movf	?___fttol,w
 15369  0951  0008               	return
 15370  0952                     __end_of_getDimmerLights_PercentToValue:	
 15371                           
 15372                           	psect	text104
 15373  0D0C                     __ptext104:	
 15374 ;; *************** function ___fttol *****************
 15375 ;; Defined at:
 15376 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;  f1              3   36[BANK0 ] float 
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;  lval            4   45[BANK0 ] unsigned long 
 15381 ;;  exp1            1   49[BANK0 ] unsigned char 
 15382 ;;  sign1           1   44[BANK0 ] unsigned char 
 15383 ;; Return value:  Size  Location     Type
 15384 ;;                  4   36[BANK0 ] long 
 15385 ;; Registers used:
 15386 ;;		wreg, status,2, status,0
 15387 ;; Tracked objects:
 15388 ;;		On entry : 0/0
 15389 ;;		On exit  : 0/0
 15390 ;;		Unchanged: 0/0
 15391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15392 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;Total ram usage:       14 bytes
 15397 ;; Hardware stack levels used:    1
 15398 ;; Hardware stack levels required when called:    3
 15399 ;; This function calls:
 15400 ;;		Nothing
 15401 ;; This function is called by:
 15402 ;;		_getDimmerLights_PercentToValue
 15403 ;;		_getDimmerLights_ValueToPercent
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           
 15408                           ;psect for function ___fttol
 15409  0D0C                     ___fttol:	
 15410                           
 15411                           ;incstack = 0
 15412                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15413  0D0C  0020               	movlb	0	; select bank0
 15414  0D0D  0844               	movf	___fttol@f1,w
 15415  0D0E  00C8               	movwf	??___fttol
 15416  0D0F  0845               	movf	___fttol@f1+1,w
 15417  0D10  00C9               	movwf	??___fttol+1
 15418  0D11  0846               	movf	___fttol@f1+2,w
 15419  0D12  00CA               	movwf	??___fttol+2
 15420  0D13  1003               	clrc
 15421  0D14  0D49               	rlf	??___fttol+1,w
 15422  0D15  0D4A               	rlf	??___fttol+2,w
 15423  0D16  00CB               	movwf	??___fttol+3
 15424  0D17  084B               	movf	??___fttol+3,w
 15425  0D18  00D1               	movwf	___fttol@exp1
 15426  0D19  08D1               	movf	___fttol@exp1,f
 15427  0D1A  1D03               	skipz
 15428  0D1B  2D25               	goto	l6579
 15429  0D1C  3000               	movlw	0
 15430  0D1D  00C7               	movwf	?___fttol+3
 15431  0D1E  3000               	movlw	0
 15432  0D1F  00C6               	movwf	?___fttol+2
 15433  0D20  3000               	movlw	0
 15434  0D21  00C5               	movwf	?___fttol+1
 15435  0D22  3000               	movlw	0
 15436  0D23  00C4               	movwf	?___fttol
 15437  0D24  0008               	return
 15438  0D25                     l6579:	
 15439  0D25  0844               	movf	___fttol@f1,w
 15440  0D26  00C8               	movwf	??___fttol
 15441  0D27  0845               	movf	___fttol@f1+1,w
 15442  0D28  00C9               	movwf	??___fttol+1
 15443  0D29  0846               	movf	___fttol@f1+2,w
 15444  0D2A  00CA               	movwf	??___fttol+2
 15445  0D2B  3017               	movlw	23
 15446  0D2C                     u5615:	
 15447  0D2C  36CA               	lsrf	??___fttol+2,f
 15448  0D2D  0CC9               	rrf	??___fttol+1,f
 15449  0D2E  0CC8               	rrf	??___fttol,f
 15450  0D2F  0B89               	decfsz	9,f
 15451  0D30  2D2C               	goto	u5615
 15452  0D31  0848               	movf	??___fttol,w
 15453  0D32  00CB               	movwf	??___fttol+3
 15454  0D33  084B               	movf	??___fttol+3,w
 15455  0D34  00CC               	movwf	___fttol@sign1
 15456  0D35  17C5               	bsf	___fttol@f1+1,7
 15457  0D36  30FF               	movlw	255
 15458  0D37  05C4               	andwf	___fttol@f1,f
 15459  0D38  30FF               	movlw	255
 15460  0D39  05C5               	andwf	___fttol@f1+1,f
 15461  0D3A  3000               	movlw	0
 15462  0D3B  05C6               	andwf	___fttol@f1+2,f
 15463  0D3C  0844               	movf	___fttol@f1,w
 15464  0D3D  00CD               	movwf	___fttol@lval
 15465  0D3E  0845               	movf	___fttol@f1+1,w
 15466  0D3F  00CE               	movwf	___fttol@lval+1
 15467  0D40  0846               	movf	___fttol@f1+2,w
 15468  0D41  00CF               	movwf	___fttol@lval+2
 15469  0D42  01D0               	clrf	___fttol@lval+3
 15470  0D43  308E               	movlw	142
 15471  0D44  02D1               	subwf	___fttol@exp1,f
 15472  0D45  1FD1               	btfss	___fttol@exp1,7
 15473  0D46  2D63               	goto	l6599
 15474  0D47  0851               	movf	___fttol@exp1,w
 15475  0D48  3A80               	xorlw	128
 15476  0D49  3E8F               	addlw	143
 15477  0D4A  1803               	skipnc
 15478  0D4B  2D55               	goto	l6597
 15479  0D4C  3000               	movlw	0
 15480  0D4D  00C7               	movwf	?___fttol+3
 15481  0D4E  3000               	movlw	0
 15482  0D4F  00C6               	movwf	?___fttol+2
 15483  0D50  3000               	movlw	0
 15484  0D51  00C5               	movwf	?___fttol+1
 15485  0D52  3000               	movlw	0
 15486  0D53  00C4               	movwf	?___fttol
 15487  0D54  0008               	return
 15488  0D55                     l6597:	
 15489  0D55  3001               	movlw	1
 15490  0D56                     u5645:	
 15491  0D56  36D0               	lsrf	___fttol@lval+3,f
 15492  0D57  0CCF               	rrf	___fttol@lval+2,f
 15493  0D58  0CCE               	rrf	___fttol@lval+1,f
 15494  0D59  0CCD               	rrf	___fttol@lval,f
 15495  0D5A  0B89               	decfsz	9,f
 15496  0D5B  2D56               	goto	u5645
 15497  0D5C  3001               	movlw	1
 15498  0D5D  00C8               	movwf	??___fttol
 15499  0D5E  0848               	movf	??___fttol,w
 15500  0D5F  07D1               	addwf	___fttol@exp1,f
 15501  0D60  1903               	btfsc	3,2
 15502  0D61  2D7C               	goto	l6609
 15503  0D62  2D55               	goto	l6597
 15504  0D63                     l6599:	
 15505  0D63  3018               	movlw	24
 15506  0D64  0251               	subwf	___fttol@exp1,w
 15507  0D65  1C03               	skipc
 15508  0D66  2D79               	goto	l6607
 15509  0D67  3000               	movlw	0
 15510  0D68  00C7               	movwf	?___fttol+3
 15511  0D69  3000               	movlw	0
 15512  0D6A  00C6               	movwf	?___fttol+2
 15513  0D6B  3000               	movlw	0
 15514  0D6C  00C5               	movwf	?___fttol+1
 15515  0D6D  3000               	movlw	0
 15516  0D6E  00C4               	movwf	?___fttol
 15517  0D6F  0008               	return
 15518  0D70                     l6605:	
 15519  0D70  3001               	movlw	1
 15520  0D71                     u5675:	
 15521  0D71  35CD               	lslf	___fttol@lval,f
 15522  0D72  0DCE               	rlf	___fttol@lval+1,f
 15523  0D73  0DCF               	rlf	___fttol@lval+2,f
 15524  0D74  0DD0               	rlf	___fttol@lval+3,f
 15525  0D75  0B89               	decfsz	9,f
 15526  0D76  2D71               	goto	u5675
 15527  0D77  3001               	movlw	1
 15528  0D78  02D1               	subwf	___fttol@exp1,f
 15529  0D79                     l6607:	
 15530  0D79  08D1               	movf	___fttol@exp1,f
 15531  0D7A  1D03               	skipz
 15532  0D7B  2D70               	goto	l6605
 15533  0D7C                     l6609:	
 15534  0D7C  084C               	movf	___fttol@sign1,w
 15535  0D7D  1903               	btfsc	3,2
 15536  0D7E  2D8A               	goto	l6613
 15537  0D7F  09CD               	comf	___fttol@lval,f
 15538  0D80  09CE               	comf	___fttol@lval+1,f
 15539  0D81  09CF               	comf	___fttol@lval+2,f
 15540  0D82  09D0               	comf	___fttol@lval+3,f
 15541  0D83  0ACD               	incf	___fttol@lval,f
 15542  0D84  1903               	skipnz
 15543  0D85  0ACE               	incf	___fttol@lval+1,f
 15544  0D86  1903               	skipnz
 15545  0D87  0ACF               	incf	___fttol@lval+2,f
 15546  0D88  1903               	skipnz
 15547  0D89  0AD0               	incf	___fttol@lval+3,f
 15548  0D8A                     l6613:	
 15549  0D8A  0850               	movf	___fttol@lval+3,w
 15550  0D8B  00C7               	movwf	?___fttol+3
 15551  0D8C  084F               	movf	___fttol@lval+2,w
 15552  0D8D  00C6               	movwf	?___fttol+2
 15553  0D8E  084E               	movf	___fttol@lval+1,w
 15554  0D8F  00C5               	movwf	?___fttol+1
 15555  0D90  084D               	movf	___fttol@lval,w
 15556  0D91  00C4               	movwf	?___fttol
 15557  0D92  0008               	return
 15558  0D93                     __end_of___fttol:	
 15559                           
 15560                           	psect	text105
 15561  0F4C                     __ptext105:	
 15562 ;; *************** function ___ftmul *****************
 15563 ;; Defined at:
 15564 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;  f1              3    7[BANK0 ] float 
 15567 ;;  f2              3   10[BANK0 ] float 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
 15570 ;;  sign            1   22[BANK0 ] unsigned char 
 15571 ;;  cntr            1   21[BANK0 ] unsigned char 
 15572 ;;  exp             1   17[BANK0 ] unsigned char 
 15573 ;; Return value:  Size  Location     Type
 15574 ;;                  3    7[BANK0 ] float 
 15575 ;; Registers used:
 15576 ;;		wreg, status,2, status,0, pclath, cstack
 15577 ;; Tracked objects:
 15578 ;;		On entry : 0/0
 15579 ;;		On exit  : 0/0
 15580 ;;		Unchanged: 0/0
 15581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15582 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;Total ram usage:       16 bytes
 15587 ;; Hardware stack levels used:    1
 15588 ;; Hardware stack levels required when called:    4
 15589 ;; This function calls:
 15590 ;;		___ftpack
 15591 ;; This function is called by:
 15592 ;;		_getDimmerLights_PercentToValue
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           
 15597                           ;psect for function ___ftmul
 15598  0F4C                     ___ftmul:	
 15599                           
 15600                           ;incstack = 0
 15601                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 15602  0F4C  0020               	movlb	0	; select bank0
 15603  0F4D  0827               	movf	___ftmul@f1,w
 15604  0F4E  00AD               	movwf	??___ftmul
 15605  0F4F  0828               	movf	___ftmul@f1+1,w
 15606  0F50  00AE               	movwf	??___ftmul+1
 15607  0F51  0829               	movf	___ftmul@f1+2,w
 15608  0F52  00AF               	movwf	??___ftmul+2
 15609  0F53  1003               	clrc
 15610  0F54  0D2E               	rlf	??___ftmul+1,w
 15611  0F55  0D2F               	rlf	??___ftmul+2,w
 15612  0F56  00B0               	movwf	??___ftmul+3
 15613  0F57  0830               	movf	??___ftmul+3,w
 15614  0F58  00B1               	movwf	___ftmul@exp
 15615  0F59  08B1               	movf	___ftmul@exp,f
 15616  0F5A  1D03               	skipz
 15617  0F5B  2F63               	goto	l10399
 15618  0F5C  3000               	movlw	0
 15619  0F5D  00A7               	movwf	?___ftmul
 15620  0F5E  3000               	movlw	0
 15621  0F5F  00A8               	movwf	?___ftmul+1
 15622  0F60  3000               	movlw	0
 15623  0F61  00A9               	movwf	?___ftmul+2
 15624  0F62  0008               	return
 15625  0F63                     l10399:	
 15626  0F63  082A               	movf	___ftmul@f2,w
 15627  0F64  00AD               	movwf	??___ftmul
 15628  0F65  082B               	movf	___ftmul@f2+1,w
 15629  0F66  00AE               	movwf	??___ftmul+1
 15630  0F67  082C               	movf	___ftmul@f2+2,w
 15631  0F68  00AF               	movwf	??___ftmul+2
 15632  0F69  1003               	clrc
 15633  0F6A  0D2E               	rlf	??___ftmul+1,w
 15634  0F6B  0D2F               	rlf	??___ftmul+2,w
 15635  0F6C  00B0               	movwf	??___ftmul+3
 15636  0F6D  0830               	movf	??___ftmul+3,w
 15637  0F6E  00B6               	movwf	___ftmul@sign
 15638  0F6F  08B6               	movf	___ftmul@sign,f
 15639  0F70  1D03               	skipz
 15640  0F71  2F79               	goto	l10405
 15641  0F72  3000               	movlw	0
 15642  0F73  00A7               	movwf	?___ftmul
 15643  0F74  3000               	movlw	0
 15644  0F75  00A8               	movwf	?___ftmul+1
 15645  0F76  3000               	movlw	0
 15646  0F77  00A9               	movwf	?___ftmul+2
 15647  0F78  0008               	return
 15648  0F79                     l10405:	
 15649  0F79  0836               	movf	___ftmul@sign,w
 15650  0F7A  3E7B               	addlw	123
 15651  0F7B  00AD               	movwf	??___ftmul
 15652  0F7C  082D               	movf	??___ftmul,w
 15653  0F7D  07B1               	addwf	___ftmul@exp,f
 15654  0F7E  0827               	movf	___ftmul@f1,w
 15655  0F7F  00AD               	movwf	??___ftmul
 15656  0F80  0828               	movf	___ftmul@f1+1,w
 15657  0F81  00AE               	movwf	??___ftmul+1
 15658  0F82  0829               	movf	___ftmul@f1+2,w
 15659  0F83  00AF               	movwf	??___ftmul+2
 15660  0F84  3010               	movlw	16
 15661  0F85                     u11905:	
 15662  0F85  36AF               	lsrf	??___ftmul+2,f
 15663  0F86  0CAE               	rrf	??___ftmul+1,f
 15664  0F87  0CAD               	rrf	??___ftmul,f
 15665  0F88  0B89               	decfsz	9,f
 15666  0F89  2F85               	goto	u11905
 15667  0F8A  082D               	movf	??___ftmul,w
 15668  0F8B  00B0               	movwf	??___ftmul+3
 15669  0F8C  0830               	movf	??___ftmul+3,w
 15670  0F8D  00B6               	movwf	___ftmul@sign
 15671  0F8E  082A               	movf	___ftmul@f2,w
 15672  0F8F  00AD               	movwf	??___ftmul
 15673  0F90  082B               	movf	___ftmul@f2+1,w
 15674  0F91  00AE               	movwf	??___ftmul+1
 15675  0F92  082C               	movf	___ftmul@f2+2,w
 15676  0F93  00AF               	movwf	??___ftmul+2
 15677  0F94  3010               	movlw	16
 15678  0F95                     u11915:	
 15679  0F95  36AF               	lsrf	??___ftmul+2,f
 15680  0F96  0CAE               	rrf	??___ftmul+1,f
 15681  0F97  0CAD               	rrf	??___ftmul,f
 15682  0F98  0B89               	decfsz	9,f
 15683  0F99  2F95               	goto	u11915
 15684  0F9A  082D               	movf	??___ftmul,w
 15685  0F9B  00B0               	movwf	??___ftmul+3
 15686  0F9C  0830               	movf	??___ftmul+3,w
 15687  0F9D  06B6               	xorwf	___ftmul@sign,f
 15688  0F9E  3080               	movlw	128
 15689  0F9F  00AD               	movwf	??___ftmul
 15690  0FA0  082D               	movf	??___ftmul,w
 15691  0FA1  05B6               	andwf	___ftmul@sign,f
 15692  0FA2  17A8               	bsf	___ftmul@f1+1,7
 15693  0FA3  17AB               	bsf	___ftmul@f2+1,7
 15694  0FA4  30FF               	movlw	255
 15695  0FA5  05AA               	andwf	___ftmul@f2,f
 15696  0FA6  30FF               	movlw	255
 15697  0FA7  05AB               	andwf	___ftmul@f2+1,f
 15698  0FA8  3000               	movlw	0
 15699  0FA9  05AC               	andwf	___ftmul@f2+2,f
 15700  0FAA  3000               	movlw	0
 15701  0FAB  00B2               	movwf	___ftmul@f3_as_product
 15702  0FAC  3000               	movlw	0
 15703  0FAD  00B3               	movwf	___ftmul@f3_as_product+1
 15704  0FAE  3000               	movlw	0
 15705  0FAF  00B4               	movwf	___ftmul@f3_as_product+2
 15706  0FB0  3007               	movlw	7
 15707  0FB1  00AD               	movwf	??___ftmul
 15708  0FB2  082D               	movf	??___ftmul,w
 15709  0FB3  00B5               	movwf	___ftmul@cntr
 15710  0FB4                     l10417:	
 15711  0FB4  1C27               	btfss	___ftmul@f1,0
 15712  0FB5  2FBC               	goto	l10421
 15713  0FB6  082A               	movf	___ftmul@f2,w
 15714  0FB7  07B2               	addwf	___ftmul@f3_as_product,f
 15715  0FB8  082B               	movf	___ftmul@f2+1,w
 15716  0FB9  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 15717  0FBA  082C               	movf	___ftmul@f2+2,w
 15718  0FBB  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 15719  0FBC                     l10421:	
 15720  0FBC  3001               	movlw	1
 15721  0FBD                     u11935:	
 15722  0FBD  36A9               	lsrf	___ftmul@f1+2,f
 15723  0FBE  0CA8               	rrf	___ftmul@f1+1,f
 15724  0FBF  0CA7               	rrf	___ftmul@f1,f
 15725  0FC0  0B89               	decfsz	9,f
 15726  0FC1  2FBD               	goto	u11935
 15727  0FC2  3001               	movlw	1
 15728  0FC3                     u11945:	
 15729  0FC3  35AA               	lslf	___ftmul@f2,f
 15730  0FC4  0DAB               	rlf	___ftmul@f2+1,f
 15731  0FC5  0DAC               	rlf	___ftmul@f2+2,f
 15732  0FC6  0B89               	decfsz	9,f
 15733  0FC7  2FC3               	goto	u11945
 15734  0FC8  3001               	movlw	1
 15735  0FC9  02B5               	subwf	___ftmul@cntr,f
 15736  0FCA  1D03               	btfss	3,2
 15737  0FCB  2FB4               	goto	l10417
 15738  0FCC  3009               	movlw	9
 15739  0FCD  00AD               	movwf	??___ftmul
 15740  0FCE  082D               	movf	??___ftmul,w
 15741  0FCF  00B5               	movwf	___ftmul@cntr
 15742  0FD0                     l10429:	
 15743  0FD0  1C27               	btfss	___ftmul@f1,0
 15744  0FD1  2FD8               	goto	l10433
 15745  0FD2  082A               	movf	___ftmul@f2,w
 15746  0FD3  07B2               	addwf	___ftmul@f3_as_product,f
 15747  0FD4  082B               	movf	___ftmul@f2+1,w
 15748  0FD5  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 15749  0FD6  082C               	movf	___ftmul@f2+2,w
 15750  0FD7  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 15751  0FD8                     l10433:	
 15752  0FD8  3001               	movlw	1
 15753  0FD9                     u11975:	
 15754  0FD9  36A9               	lsrf	___ftmul@f1+2,f
 15755  0FDA  0CA8               	rrf	___ftmul@f1+1,f
 15756  0FDB  0CA7               	rrf	___ftmul@f1,f
 15757  0FDC  0B89               	decfsz	9,f
 15758  0FDD  2FD9               	goto	u11975
 15759  0FDE  3001               	movlw	1
 15760  0FDF                     u11985:	
 15761  0FDF  36B4               	lsrf	___ftmul@f3_as_product+2,f
 15762  0FE0  0CB3               	rrf	___ftmul@f3_as_product+1,f
 15763  0FE1  0CB2               	rrf	___ftmul@f3_as_product,f
 15764  0FE2  0B89               	decfsz	9,f
 15765  0FE3  2FDF               	goto	u11985
 15766  0FE4  3001               	movlw	1
 15767  0FE5  02B5               	subwf	___ftmul@cntr,f
 15768  0FE6  1D03               	btfss	3,2
 15769  0FE7  2FD0               	goto	l10429
 15770  0FE8  0832               	movf	___ftmul@f3_as_product,w
 15771  0FE9  00F2               	movwf	___ftpack@arg
 15772  0FEA  0833               	movf	___ftmul@f3_as_product+1,w
 15773  0FEB  00F3               	movwf	___ftpack@arg+1
 15774  0FEC  0834               	movf	___ftmul@f3_as_product+2,w
 15775  0FED  00F4               	movwf	___ftpack@arg+2
 15776  0FEE  0831               	movf	___ftmul@exp,w
 15777  0FEF  00AD               	movwf	??___ftmul
 15778  0FF0  082D               	movf	??___ftmul,w
 15779  0FF1  00F5               	movwf	___ftpack@exp
 15780  0FF2  0836               	movf	___ftmul@sign,w
 15781  0FF3  00AE               	movwf	??___ftmul+1
 15782  0FF4  082E               	movf	??___ftmul+1,w
 15783  0FF5  00F6               	movwf	___ftpack@sign
 15784  0FF6  3189  2152         	fcall	___ftpack
 15785  0FF8  0872               	movf	?___ftpack,w
 15786  0FF9  0020               	movlb	0	; select bank0
 15787  0FFA  00A7               	movwf	?___ftmul
 15788  0FFB  0873               	movf	?___ftpack+1,w
 15789  0FFC  00A8               	movwf	?___ftmul+1
 15790  0FFD  0874               	movf	?___ftpack+2,w
 15791  0FFE  00A9               	movwf	?___ftmul+2
 15792  0FFF  0008               	return
 15793  1000                     __end_of___ftmul:	
 15794                           
 15795                           	psect	text106
 15796  0EA3                     __ptext106:	
 15797 ;; *************** function ___ftdiv *****************
 15798 ;; Defined at:
 15799 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  f2              3    7[BANK0 ] float 
 15802 ;;  f1              3   10[BANK0 ] float 
 15803 ;; Auto vars:     Size  Location     Type
 15804 ;;  f3              3   18[BANK0 ] float 
 15805 ;;  sign            1   22[BANK0 ] unsigned char 
 15806 ;;  exp             1   21[BANK0 ] unsigned char 
 15807 ;;  cntr            1   17[BANK0 ] unsigned char 
 15808 ;; Return value:  Size  Location     Type
 15809 ;;                  3    7[BANK0 ] float 
 15810 ;; Registers used:
 15811 ;;		wreg, status,2, status,0, pclath, cstack
 15812 ;; Tracked objects:
 15813 ;;		On entry : 0/0
 15814 ;;		On exit  : 0/0
 15815 ;;		Unchanged: 0/0
 15816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15817 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15820 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15821 ;;Total ram usage:       16 bytes
 15822 ;; Hardware stack levels used:    1
 15823 ;; Hardware stack levels required when called:    4
 15824 ;; This function calls:
 15825 ;;		___ftpack
 15826 ;; This function is called by:
 15827 ;;		_getDimmerLights_PercentToValue
 15828 ;;		_getDimmerLights_ValueToPercent
 15829 ;; This function uses a non-reentrant model
 15830 ;;
 15831                           
 15832                           
 15833                           ;psect for function ___ftdiv
 15834  0EA3                     ___ftdiv:	
 15835                           
 15836                           ;incstack = 0
 15837                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15838  0EA3  0020               	movlb	0	; select bank0
 15839  0EA4  082A               	movf	___ftdiv@f1,w
 15840  0EA5  00AD               	movwf	??___ftdiv
 15841  0EA6  082B               	movf	___ftdiv@f1+1,w
 15842  0EA7  00AE               	movwf	??___ftdiv+1
 15843  0EA8  082C               	movf	___ftdiv@f1+2,w
 15844  0EA9  00AF               	movwf	??___ftdiv+2
 15845  0EAA  1003               	clrc
 15846  0EAB  0D2E               	rlf	??___ftdiv+1,w
 15847  0EAC  0D2F               	rlf	??___ftdiv+2,w
 15848  0EAD  00B0               	movwf	??___ftdiv+3
 15849  0EAE  0830               	movf	??___ftdiv+3,w
 15850  0EAF  00B5               	movwf	___ftdiv@exp
 15851  0EB0  08B5               	movf	___ftdiv@exp,f
 15852  0EB1  1D03               	skipz
 15853  0EB2  2EBA               	goto	l10357
 15854  0EB3  3000               	movlw	0
 15855  0EB4  00A7               	movwf	?___ftdiv
 15856  0EB5  3000               	movlw	0
 15857  0EB6  00A8               	movwf	?___ftdiv+1
 15858  0EB7  3000               	movlw	0
 15859  0EB8  00A9               	movwf	?___ftdiv+2
 15860  0EB9  0008               	return
 15861  0EBA                     l10357:	
 15862  0EBA  0827               	movf	___ftdiv@f2,w
 15863  0EBB  00AD               	movwf	??___ftdiv
 15864  0EBC  0828               	movf	___ftdiv@f2+1,w
 15865  0EBD  00AE               	movwf	??___ftdiv+1
 15866  0EBE  0829               	movf	___ftdiv@f2+2,w
 15867  0EBF  00AF               	movwf	??___ftdiv+2
 15868  0EC0  1003               	clrc
 15869  0EC1  0D2E               	rlf	??___ftdiv+1,w
 15870  0EC2  0D2F               	rlf	??___ftdiv+2,w
 15871  0EC3  00B0               	movwf	??___ftdiv+3
 15872  0EC4  0830               	movf	??___ftdiv+3,w
 15873  0EC5  00B6               	movwf	___ftdiv@sign
 15874  0EC6  08B6               	movf	___ftdiv@sign,f
 15875  0EC7  1D03               	skipz
 15876  0EC8  2ED0               	goto	l10363
 15877  0EC9  3000               	movlw	0
 15878  0ECA  00A7               	movwf	?___ftdiv
 15879  0ECB  3000               	movlw	0
 15880  0ECC  00A8               	movwf	?___ftdiv+1
 15881  0ECD  3000               	movlw	0
 15882  0ECE  00A9               	movwf	?___ftdiv+2
 15883  0ECF  0008               	return
 15884  0ED0                     l10363:	
 15885  0ED0  3000               	movlw	0
 15886  0ED1  00B2               	movwf	___ftdiv@f3
 15887  0ED2  3000               	movlw	0
 15888  0ED3  00B3               	movwf	___ftdiv@f3+1
 15889  0ED4  3000               	movlw	0
 15890  0ED5  00B4               	movwf	___ftdiv@f3+2
 15891  0ED6  3089               	movlw	137
 15892  0ED7  0736               	addwf	___ftdiv@sign,w
 15893  0ED8  00AD               	movwf	??___ftdiv
 15894  0ED9  082D               	movf	??___ftdiv,w
 15895  0EDA  02B5               	subwf	___ftdiv@exp,f
 15896  0EDB  082A               	movf	___ftdiv@f1,w
 15897  0EDC  00AD               	movwf	??___ftdiv
 15898  0EDD  082B               	movf	___ftdiv@f1+1,w
 15899  0EDE  00AE               	movwf	??___ftdiv+1
 15900  0EDF  082C               	movf	___ftdiv@f1+2,w
 15901  0EE0  00AF               	movwf	??___ftdiv+2
 15902  0EE1  3010               	movlw	16
 15903  0EE2                     u11825:	
 15904  0EE2  36AF               	lsrf	??___ftdiv+2,f
 15905  0EE3  0CAE               	rrf	??___ftdiv+1,f
 15906  0EE4  0CAD               	rrf	??___ftdiv,f
 15907  0EE5  0B89               	decfsz	9,f
 15908  0EE6  2EE2               	goto	u11825
 15909  0EE7  082D               	movf	??___ftdiv,w
 15910  0EE8  00B0               	movwf	??___ftdiv+3
 15911  0EE9  0830               	movf	??___ftdiv+3,w
 15912  0EEA  00B6               	movwf	___ftdiv@sign
 15913  0EEB  0827               	movf	___ftdiv@f2,w
 15914  0EEC  00AD               	movwf	??___ftdiv
 15915  0EED  0828               	movf	___ftdiv@f2+1,w
 15916  0EEE  00AE               	movwf	??___ftdiv+1
 15917  0EEF  0829               	movf	___ftdiv@f2+2,w
 15918  0EF0  00AF               	movwf	??___ftdiv+2
 15919  0EF1  3010               	movlw	16
 15920  0EF2                     u11835:	
 15921  0EF2  36AF               	lsrf	??___ftdiv+2,f
 15922  0EF3  0CAE               	rrf	??___ftdiv+1,f
 15923  0EF4  0CAD               	rrf	??___ftdiv,f
 15924  0EF5  0B89               	decfsz	9,f
 15925  0EF6  2EF2               	goto	u11835
 15926  0EF7  082D               	movf	??___ftdiv,w
 15927  0EF8  00B0               	movwf	??___ftdiv+3
 15928  0EF9  0830               	movf	??___ftdiv+3,w
 15929  0EFA  06B6               	xorwf	___ftdiv@sign,f
 15930  0EFB  3080               	movlw	128
 15931  0EFC  00AD               	movwf	??___ftdiv
 15932  0EFD  082D               	movf	??___ftdiv,w
 15933  0EFE  05B6               	andwf	___ftdiv@sign,f
 15934  0EFF  17AB               	bsf	___ftdiv@f1+1,7
 15935  0F00  30FF               	movlw	255
 15936  0F01  05AA               	andwf	___ftdiv@f1,f
 15937  0F02  30FF               	movlw	255
 15938  0F03  05AB               	andwf	___ftdiv@f1+1,f
 15939  0F04  3000               	movlw	0
 15940  0F05  05AC               	andwf	___ftdiv@f1+2,f
 15941  0F06  17A8               	bsf	___ftdiv@f2+1,7
 15942  0F07  30FF               	movlw	255
 15943  0F08  05A7               	andwf	___ftdiv@f2,f
 15944  0F09  30FF               	movlw	255
 15945  0F0A  05A8               	andwf	___ftdiv@f2+1,f
 15946  0F0B  3000               	movlw	0
 15947  0F0C  05A9               	andwf	___ftdiv@f2+2,f
 15948  0F0D  3018               	movlw	24
 15949  0F0E  00AD               	movwf	??___ftdiv
 15950  0F0F  082D               	movf	??___ftdiv,w
 15951  0F10  00B1               	movwf	___ftdiv@cntr
 15952  0F11                     l10377:	
 15953  0F11  3001               	movlw	1
 15954  0F12                     u11845:	
 15955  0F12  35B2               	lslf	___ftdiv@f3,f
 15956  0F13  0DB3               	rlf	___ftdiv@f3+1,f
 15957  0F14  0DB4               	rlf	___ftdiv@f3+2,f
 15958  0F15  0B89               	decfsz	9,f
 15959  0F16  2F12               	goto	u11845
 15960  0F17  0829               	movf	___ftdiv@f2+2,w
 15961  0F18  022C               	subwf	___ftdiv@f1+2,w
 15962  0F19  1D03               	skipz
 15963  0F1A  2F21               	goto	u11855
 15964  0F1B  0828               	movf	___ftdiv@f2+1,w
 15965  0F1C  022B               	subwf	___ftdiv@f1+1,w
 15966  0F1D  1D03               	skipz
 15967  0F1E  2F21               	goto	u11855
 15968  0F1F  0827               	movf	___ftdiv@f2,w
 15969  0F20  022A               	subwf	___ftdiv@f1,w
 15970  0F21                     u11855:	
 15971  0F21  1C03               	skipc
 15972  0F22  2F2A               	goto	l10385
 15973  0F23  0827               	movf	___ftdiv@f2,w
 15974  0F24  02AA               	subwf	___ftdiv@f1,f
 15975  0F25  0828               	movf	___ftdiv@f2+1,w
 15976  0F26  3BAB               	subwfb	___ftdiv@f1+1,f
 15977  0F27  0829               	movf	___ftdiv@f2+2,w
 15978  0F28  3BAC               	subwfb	___ftdiv@f1+2,f
 15979  0F29  1432               	bsf	___ftdiv@f3,0
 15980  0F2A                     l10385:	
 15981  0F2A  3001               	movlw	1
 15982  0F2B                     u11865:	
 15983  0F2B  35AA               	lslf	___ftdiv@f1,f
 15984  0F2C  0DAB               	rlf	___ftdiv@f1+1,f
 15985  0F2D  0DAC               	rlf	___ftdiv@f1+2,f
 15986  0F2E  0B89               	decfsz	9,f
 15987  0F2F  2F2B               	goto	u11865
 15988  0F30  3001               	movlw	1
 15989  0F31  02B1               	subwf	___ftdiv@cntr,f
 15990  0F32  1D03               	btfss	3,2
 15991  0F33  2F11               	goto	l10377
 15992  0F34  0832               	movf	___ftdiv@f3,w
 15993  0F35  00F2               	movwf	___ftpack@arg
 15994  0F36  0833               	movf	___ftdiv@f3+1,w
 15995  0F37  00F3               	movwf	___ftpack@arg+1
 15996  0F38  0834               	movf	___ftdiv@f3+2,w
 15997  0F39  00F4               	movwf	___ftpack@arg+2
 15998  0F3A  0835               	movf	___ftdiv@exp,w
 15999  0F3B  00AD               	movwf	??___ftdiv
 16000  0F3C  082D               	movf	??___ftdiv,w
 16001  0F3D  00F5               	movwf	___ftpack@exp
 16002  0F3E  0836               	movf	___ftdiv@sign,w
 16003  0F3F  00AE               	movwf	??___ftdiv+1
 16004  0F40  082E               	movf	??___ftdiv+1,w
 16005  0F41  00F6               	movwf	___ftpack@sign
 16006  0F42  3189  2152         	fcall	___ftpack
 16007  0F44  0872               	movf	?___ftpack,w
 16008  0F45  0020               	movlb	0	; select bank0
 16009  0F46  00A7               	movwf	?___ftdiv
 16010  0F47  0873               	movf	?___ftpack+1,w
 16011  0F48  00A8               	movwf	?___ftdiv+1
 16012  0F49  0874               	movf	?___ftpack+2,w
 16013  0F4A  00A9               	movwf	?___ftdiv+2
 16014  0F4B  0008               	return
 16015  0F4C                     __end_of___ftdiv:	
 16016                           
 16017                           	psect	text107
 16018  01CA                     __ptext107:	
 16019 ;; *************** function ___ftadd *****************
 16020 ;; Defined at:
 16021 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;  f1              3   23[BANK0 ] float 
 16024 ;;  f2              3   26[BANK0 ] float 
 16025 ;; Auto vars:     Size  Location     Type
 16026 ;;  exp1            1   35[BANK0 ] unsigned char 
 16027 ;;  exp2            1   34[BANK0 ] unsigned char 
 16028 ;;  sign            1   33[BANK0 ] unsigned char 
 16029 ;; Return value:  Size  Location     Type
 16030 ;;                  3   23[BANK0 ] float 
 16031 ;; Registers used:
 16032 ;;		wreg, status,2, status,0, pclath, cstack
 16033 ;; Tracked objects:
 16034 ;;		On entry : 0/0
 16035 ;;		On exit  : 0/0
 16036 ;;		Unchanged: 0/0
 16037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16038 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;Total ram usage:       13 bytes
 16043 ;; Hardware stack levels used:    1
 16044 ;; Hardware stack levels required when called:    4
 16045 ;; This function calls:
 16046 ;;		___ftpack
 16047 ;; This function is called by:
 16048 ;;		_getDimmerLights_PercentToValue
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           
 16053                           ;psect for function ___ftadd
 16054  01CA                     ___ftadd:	
 16055                           
 16056                           ;incstack = 0
 16057                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 16058  01CA  0020               	movlb	0	; select bank0
 16059  01CB  0837               	movf	___ftadd@f1,w
 16060  01CC  00BD               	movwf	??___ftadd
 16061  01CD  0838               	movf	___ftadd@f1+1,w
 16062  01CE  00BE               	movwf	??___ftadd+1
 16063  01CF  0839               	movf	___ftadd@f1+2,w
 16064  01D0  00BF               	movwf	??___ftadd+2
 16065  01D1  1003               	clrc
 16066  01D2  0D3E               	rlf	??___ftadd+1,w
 16067  01D3  0D3F               	rlf	??___ftadd+2,w
 16068  01D4  00C0               	movwf	??___ftadd+3
 16069  01D5  0840               	movf	??___ftadd+3,w
 16070  01D6  00C3               	movwf	___ftadd@exp1
 16071  01D7  083A               	movf	___ftadd@f2,w
 16072  01D8  00BD               	movwf	??___ftadd
 16073  01D9  083B               	movf	___ftadd@f2+1,w
 16074  01DA  00BE               	movwf	??___ftadd+1
 16075  01DB  083C               	movf	___ftadd@f2+2,w
 16076  01DC  00BF               	movwf	??___ftadd+2
 16077  01DD  1003               	clrc
 16078  01DE  0D3E               	rlf	??___ftadd+1,w
 16079  01DF  0D3F               	rlf	??___ftadd+2,w
 16080  01E0  00C0               	movwf	??___ftadd+3
 16081  01E1  0840               	movf	??___ftadd+3,w
 16082  01E2  00C2               	movwf	___ftadd@exp2
 16083  01E3  0843               	movf	___ftadd@exp1,w
 16084  01E4  1903               	btfsc	3,2
 16085  01E5  29F2               	goto	l10287
 16086  01E6  0842               	movf	___ftadd@exp2,w
 16087  01E7  0243               	subwf	___ftadd@exp1,w
 16088  01E8  1803               	skipnc
 16089  01E9  29F9               	goto	l10291
 16090  01EA  0343               	decf	___ftadd@exp1,w
 16091  01EB  3AFF               	xorlw	255
 16092  01EC  0742               	addwf	___ftadd@exp2,w
 16093  01ED  00BD               	movwf	??___ftadd
 16094  01EE  3019               	movlw	25
 16095  01EF  023D               	subwf	??___ftadd,w
 16096  01F0  1C03               	skipc
 16097  01F1  29F9               	goto	l10291
 16098  01F2                     l10287:	
 16099  01F2  083A               	movf	___ftadd@f2,w
 16100  01F3  00B7               	movwf	?___ftadd
 16101  01F4  083B               	movf	___ftadd@f2+1,w
 16102  01F5  00B8               	movwf	?___ftadd+1
 16103  01F6  083C               	movf	___ftadd@f2+2,w
 16104  01F7  00B9               	movwf	?___ftadd+2
 16105  01F8  0008               	return
 16106  01F9                     l10291:	
 16107  01F9  0842               	movf	___ftadd@exp2,w
 16108  01FA  1903               	btfsc	3,2
 16109  01FB  0008               	return
 16110  01FC  0843               	movf	___ftadd@exp1,w
 16111  01FD  0242               	subwf	___ftadd@exp2,w
 16112  01FE  1803               	skipnc
 16113  01FF  2A08               	goto	l10297
 16114  0200  0342               	decf	___ftadd@exp2,w
 16115  0201  3AFF               	xorlw	255
 16116  0202  0743               	addwf	___ftadd@exp1,w
 16117  0203  00BD               	movwf	??___ftadd
 16118  0204  3019               	movlw	25
 16119  0205  023D               	subwf	??___ftadd,w
 16120  0206  1803               	btfsc	3,0
 16121  0207  0008               	return
 16122  0208                     l10297:	
 16123  0208  3006               	movlw	6
 16124  0209  00BD               	movwf	??___ftadd
 16125  020A  083D               	movf	??___ftadd,w
 16126  020B  00C1               	movwf	___ftadd@sign
 16127  020C  1BB9               	btfsc	___ftadd@f1+2,7
 16128  020D  17C1               	bsf	___ftadd@sign,7
 16129  020E  1BBC               	btfsc	___ftadd@f2+2,7
 16130  020F  1741               	bsf	___ftadd@sign,6
 16131  0210  17B8               	bsf	___ftadd@f1+1,7
 16132  0211  30FF               	movlw	255
 16133  0212  05B7               	andwf	___ftadd@f1,f
 16134  0213  30FF               	movlw	255
 16135  0214  05B8               	andwf	___ftadd@f1+1,f
 16136  0215  3000               	movlw	0
 16137  0216  05B9               	andwf	___ftadd@f1+2,f
 16138  0217  17BB               	bsf	___ftadd@f2+1,7
 16139  0218  30FF               	movlw	255
 16140  0219  05BA               	andwf	___ftadd@f2,f
 16141  021A  30FF               	movlw	255
 16142  021B  05BB               	andwf	___ftadd@f2+1,f
 16143  021C  3000               	movlw	0
 16144  021D  05BC               	andwf	___ftadd@f2+2,f
 16145  021E  0842               	movf	___ftadd@exp2,w
 16146  021F  0243               	subwf	___ftadd@exp1,w
 16147  0220  1803               	skipnc
 16148  0221  2A44               	goto	l10319
 16149  0222                     l10309:	
 16150  0222  3001               	movlw	1
 16151  0223                     u11665:	
 16152  0223  35BA               	lslf	___ftadd@f2,f
 16153  0224  0DBB               	rlf	___ftadd@f2+1,f
 16154  0225  0DBC               	rlf	___ftadd@f2+2,f
 16155  0226  0B89               	decfsz	9,f
 16156  0227  2A23               	goto	u11665
 16157  0228  3001               	movlw	1
 16158  0229  02C2               	subwf	___ftadd@exp2,f
 16159  022A  0842               	movf	___ftadd@exp2,w
 16160  022B  0643               	xorwf	___ftadd@exp1,w
 16161  022C  1903               	skipnz
 16162  022D  2A3F               	goto	l10317
 16163  022E  3001               	movlw	1
 16164  022F  02C1               	subwf	___ftadd@sign,f
 16165  0230  0841               	movf	___ftadd@sign,w
 16166  0231  3907               	andlw	7
 16167  0232  1903               	btfsc	3,2
 16168  0233  2A3F               	goto	l10317
 16169  0234  2A22               	goto	l10309
 16170  0235                     l10315:	
 16171  0235  3001               	movlw	1
 16172  0236                     u11695:	
 16173  0236  36B9               	lsrf	___ftadd@f1+2,f
 16174  0237  0CB8               	rrf	___ftadd@f1+1,f
 16175  0238  0CB7               	rrf	___ftadd@f1,f
 16176  0239  0B89               	decfsz	9,f
 16177  023A  2A36               	goto	u11695
 16178  023B  3001               	movlw	1
 16179  023C  00BD               	movwf	??___ftadd
 16180  023D  083D               	movf	??___ftadd,w
 16181  023E  07C3               	addwf	___ftadd@exp1,f
 16182  023F                     l10317:	
 16183  023F  0843               	movf	___ftadd@exp1,w
 16184  0240  0642               	xorwf	___ftadd@exp2,w
 16185  0241  1903               	btfsc	3,2
 16186  0242  2A69               	goto	l3292
 16187  0243  2A35               	goto	l10315
 16188  0244                     l10319:	
 16189  0244  0843               	movf	___ftadd@exp1,w
 16190  0245  0242               	subwf	___ftadd@exp2,w
 16191  0246  1803               	skipnc
 16192  0247  2A69               	goto	l3292
 16193  0248                     l10321:	
 16194  0248  3001               	movlw	1
 16195  0249                     u11725:	
 16196  0249  35B7               	lslf	___ftadd@f1,f
 16197  024A  0DB8               	rlf	___ftadd@f1+1,f
 16198  024B  0DB9               	rlf	___ftadd@f1+2,f
 16199  024C  0B89               	decfsz	9,f
 16200  024D  2A49               	goto	u11725
 16201  024E  3001               	movlw	1
 16202  024F  02C3               	subwf	___ftadd@exp1,f
 16203  0250  0842               	movf	___ftadd@exp2,w
 16204  0251  0643               	xorwf	___ftadd@exp1,w
 16205  0252  1903               	skipnz
 16206  0253  2A65               	goto	l10329
 16207  0254  3001               	movlw	1
 16208  0255  02C1               	subwf	___ftadd@sign,f
 16209  0256  0841               	movf	___ftadd@sign,w
 16210  0257  3907               	andlw	7
 16211  0258  1903               	btfsc	3,2
 16212  0259  2A65               	goto	l10329
 16213  025A  2A48               	goto	l10321
 16214  025B                     l10327:	
 16215  025B  3001               	movlw	1
 16216  025C                     u11755:	
 16217  025C  36BC               	lsrf	___ftadd@f2+2,f
 16218  025D  0CBB               	rrf	___ftadd@f2+1,f
 16219  025E  0CBA               	rrf	___ftadd@f2,f
 16220  025F  0B89               	decfsz	9,f
 16221  0260  2A5C               	goto	u11755
 16222  0261  3001               	movlw	1
 16223  0262  00BD               	movwf	??___ftadd
 16224  0263  083D               	movf	??___ftadd,w
 16225  0264  07C2               	addwf	___ftadd@exp2,f
 16226  0265                     l10329:	
 16227  0265  0843               	movf	___ftadd@exp1,w
 16228  0266  0642               	xorwf	___ftadd@exp2,w
 16229  0267  1D03               	skipz
 16230  0268  2A5B               	goto	l10327
 16231  0269                     l3292:	
 16232  0269  1FC1               	btfss	___ftadd@sign,7
 16233  026A  2A7B               	goto	l10333
 16234  026B  30FF               	movlw	255
 16235  026C  06B7               	xorwf	___ftadd@f1,f
 16236  026D  30FF               	movlw	255
 16237  026E  06B8               	xorwf	___ftadd@f1+1,f
 16238  026F  30FF               	movlw	255
 16239  0270  06B9               	xorwf	___ftadd@f1+2,f
 16240  0271  3001               	movlw	1
 16241  0272  07B7               	addwf	___ftadd@f1,f
 16242  0273  3000               	movlw	0
 16243  0274  1803               	skipnc
 16244  0275  3001               	movlw	1
 16245  0276  07B8               	addwf	___ftadd@f1+1,f
 16246  0277  3000               	movlw	0
 16247  0278  1803               	skipnc
 16248  0279  3001               	movlw	1
 16249  027A  07B9               	addwf	___ftadd@f1+2,f
 16250  027B                     l10333:	
 16251  027B  1F41               	btfss	___ftadd@sign,6
 16252  027C  2A8D               	goto	l10337
 16253  027D  30FF               	movlw	255
 16254  027E  06BA               	xorwf	___ftadd@f2,f
 16255  027F  30FF               	movlw	255
 16256  0280  06BB               	xorwf	___ftadd@f2+1,f
 16257  0281  30FF               	movlw	255
 16258  0282  06BC               	xorwf	___ftadd@f2+2,f
 16259  0283  3001               	movlw	1
 16260  0284  07BA               	addwf	___ftadd@f2,f
 16261  0285  3000               	movlw	0
 16262  0286  1803               	skipnc
 16263  0287  3001               	movlw	1
 16264  0288  07BB               	addwf	___ftadd@f2+1,f
 16265  0289  3000               	movlw	0
 16266  028A  1803               	skipnc
 16267  028B  3001               	movlw	1
 16268  028C  07BC               	addwf	___ftadd@f2+2,f
 16269  028D                     l10337:	
 16270  028D  01C1               	clrf	___ftadd@sign
 16271  028E  0837               	movf	___ftadd@f1,w
 16272  028F  07BA               	addwf	___ftadd@f2,f
 16273  0290  0838               	movf	___ftadd@f1+1,w
 16274  0291  3DBB               	addwfc	___ftadd@f2+1,f
 16275  0292  0839               	movf	___ftadd@f1+2,w
 16276  0293  3DBC               	addwfc	___ftadd@f2+2,f
 16277  0294  1FBC               	btfss	___ftadd@f2+2,7
 16278  0295  2AA8               	goto	l10347
 16279  0296  30FF               	movlw	255
 16280  0297  06BA               	xorwf	___ftadd@f2,f
 16281  0298  30FF               	movlw	255
 16282  0299  06BB               	xorwf	___ftadd@f2+1,f
 16283  029A  30FF               	movlw	255
 16284  029B  06BC               	xorwf	___ftadd@f2+2,f
 16285  029C  3001               	movlw	1
 16286  029D  07BA               	addwf	___ftadd@f2,f
 16287  029E  3000               	movlw	0
 16288  029F  1803               	skipnc
 16289  02A0  3001               	movlw	1
 16290  02A1  07BB               	addwf	___ftadd@f2+1,f
 16291  02A2  3000               	movlw	0
 16292  02A3  1803               	skipnc
 16293  02A4  3001               	movlw	1
 16294  02A5  07BC               	addwf	___ftadd@f2+2,f
 16295  02A6  01C1               	clrf	___ftadd@sign
 16296  02A7  0AC1               	incf	___ftadd@sign,f
 16297  02A8                     l10347:	
 16298  02A8  083A               	movf	___ftadd@f2,w
 16299  02A9  00F2               	movwf	___ftpack@arg
 16300  02AA  083B               	movf	___ftadd@f2+1,w
 16301  02AB  00F3               	movwf	___ftpack@arg+1
 16302  02AC  083C               	movf	___ftadd@f2+2,w
 16303  02AD  00F4               	movwf	___ftpack@arg+2
 16304  02AE  0843               	movf	___ftadd@exp1,w
 16305  02AF  00BD               	movwf	??___ftadd
 16306  02B0  083D               	movf	??___ftadd,w
 16307  02B1  00F5               	movwf	___ftpack@exp
 16308  02B2  0841               	movf	___ftadd@sign,w
 16309  02B3  00BE               	movwf	??___ftadd+1
 16310  02B4  083E               	movf	??___ftadd+1,w
 16311  02B5  00F6               	movwf	___ftpack@sign
 16312  02B6  3189  2152         	fcall	___ftpack
 16313  02B8  0872               	movf	?___ftpack,w
 16314  02B9  0020               	movlb	0	; select bank0
 16315  02BA  00B7               	movwf	?___ftadd
 16316  02BB  0873               	movf	?___ftpack+1,w
 16317  02BC  00B8               	movwf	?___ftadd+1
 16318  02BD  0874               	movf	?___ftpack+2,w
 16319  02BE  00B9               	movwf	?___ftadd+2
 16320  02BF  0008               	return
 16321  02C0                     __end_of___ftadd:	
 16322                           
 16323                           	psect	text108
 16324  11F6                     __ptext108:	
 16325 ;; *************** function ___awtoft *****************
 16326 ;; Defined at:
 16327 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;  c               2    3[BANK0 ] int 
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;  sign            1    6[BANK0 ] unsigned char 
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  3    3[BANK0 ] float 
 16334 ;; Registers used:
 16335 ;;		wreg, status,2, status,0, pclath, cstack
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 0/0
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16341 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;Total ram usage:        6 bytes
 16346 ;; Hardware stack levels used:    1
 16347 ;; Hardware stack levels required when called:    4
 16348 ;; This function calls:
 16349 ;;		___ftpack
 16350 ;; This function is called by:
 16351 ;;		_getDimmerLights_PercentToValue
 16352 ;;		_getDimmerLights_ValueToPercent
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           
 16357                           ;psect for function ___awtoft
 16358  11F6                     ___awtoft:	
 16359                           
 16360                           ;incstack = 0
 16361                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 16362  11F6  0020               	movlb	0	; select bank0
 16363  11F7  01A6               	clrf	___awtoft@sign
 16364  11F8  1FA4               	btfss	___awtoft@c+1,7
 16365  11F9  2A01               	goto	l10275
 16366  11FA  09A3               	comf	___awtoft@c,f
 16367  11FB  09A4               	comf	___awtoft@c+1,f
 16368  11FC  0AA3               	incf	___awtoft@c,f
 16369  11FD  1903               	skipnz
 16370  11FE  0AA4               	incf	___awtoft@c+1,f
 16371  11FF  01A6               	clrf	___awtoft@sign
 16372  1200  0AA6               	incf	___awtoft@sign,f
 16373  1201                     l10275:	
 16374  1201  0823               	movf	___awtoft@c,w
 16375  1202  00F2               	movwf	___ftpack@arg
 16376  1203  0824               	movf	___awtoft@c+1,w
 16377  1204  00F3               	movwf	___ftpack@arg+1
 16378  1205  01F4               	clrf	___ftpack@arg+2
 16379  1206  308E               	movlw	142
 16380  1207  00F7               	movwf	??___awtoft
 16381  1208  0877               	movf	??___awtoft,w
 16382  1209  00F5               	movwf	___ftpack@exp
 16383  120A  0826               	movf	___awtoft@sign,w
 16384  120B  00F8               	movwf	??___awtoft+1
 16385  120C  0878               	movf	??___awtoft+1,w
 16386  120D  00F6               	movwf	___ftpack@sign
 16387  120E  3189  2152         	fcall	___ftpack
 16388  1210  0872               	movf	?___ftpack,w
 16389  1211  0020               	movlb	0	; select bank0
 16390  1212  00A3               	movwf	?___awtoft
 16391  1213  0873               	movf	?___ftpack+1,w
 16392  1214  00A4               	movwf	?___awtoft+1
 16393  1215  0874               	movf	?___ftpack+2,w
 16394  1216  00A5               	movwf	?___awtoft+2
 16395  1217  0008               	return
 16396  1218                     __end_of___awtoft:	
 16397                           
 16398                           	psect	text109
 16399  0952                     __ptext109:	
 16400 ;; *************** function ___ftpack *****************
 16401 ;; Defined at:
 16402 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;  arg             3    2[COMMON] unsigned um
 16405 ;;  exp             1    5[COMMON] unsigned char 
 16406 ;;  sign            1    6[COMMON] unsigned char 
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;		None
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  3    2[COMMON] float 
 16411 ;; Registers used:
 16412 ;;		wreg, status,2, status,0
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16418 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16421 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;Total ram usage:        8 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    3
 16425 ;; This function calls:
 16426 ;;		Nothing
 16427 ;; This function is called by:
 16428 ;;		___awtoft
 16429 ;;		___ftadd
 16430 ;;		___ftdiv
 16431 ;;		___ftmul
 16432 ;; This function uses a non-reentrant model
 16433 ;;
 16434                           
 16435                           
 16436                           ;psect for function ___ftpack
 16437  0952                     ___ftpack:	
 16438                           
 16439                           ;incstack = 0
 16440                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 16441  0952  0875               	movf	___ftpack@exp,w
 16442  0953  1903               	btfsc	3,2
 16443  0954  295A               	goto	l10207
 16444  0955  0874               	movf	___ftpack@arg+2,w
 16445  0956  0473               	iorwf	___ftpack@arg+1,w
 16446  0957  0472               	iorwf	___ftpack@arg,w
 16447  0958  1D03               	skipz
 16448  0959  296C               	goto	l10213
 16449  095A                     l10207:	
 16450  095A  3000               	movlw	0
 16451  095B  00F2               	movwf	?___ftpack
 16452  095C  3000               	movlw	0
 16453  095D  00F3               	movwf	?___ftpack+1
 16454  095E  3000               	movlw	0
 16455  095F  00F4               	movwf	?___ftpack+2
 16456  0960  0008               	return
 16457  0961                     l10211:	
 16458  0961  3001               	movlw	1
 16459  0962  0020               	movlb	0	; select bank0
 16460  0963  00A0               	movwf	??___ftpack
 16461  0964  0820               	movf	??___ftpack,w
 16462  0965  07F5               	addwf	___ftpack@exp,f
 16463  0966  3001               	movlw	1
 16464  0967                     u11415:	
 16465  0967  36F4               	lsrf	___ftpack@arg+2,f
 16466  0968  0CF3               	rrf	___ftpack@arg+1,f
 16467  0969  0CF2               	rrf	___ftpack@arg,f
 16468  096A  0B89               	decfsz	9,f
 16469  096B  2967               	goto	u11415
 16470  096C                     l10213:	
 16471  096C  30FE               	movlw	254
 16472  096D  0574               	andwf	___ftpack@arg+2,w
 16473  096E  1903               	btfsc	3,2
 16474  096F  2986               	goto	l3263
 16475  0970  2961               	goto	l10211
 16476  0971                     l10215:	
 16477  0971  3001               	movlw	1
 16478  0972  0020               	movlb	0	; select bank0
 16479  0973  00A0               	movwf	??___ftpack
 16480  0974  0820               	movf	??___ftpack,w
 16481  0975  07F5               	addwf	___ftpack@exp,f
 16482  0976  3001               	movlw	1
 16483  0977  07F2               	addwf	___ftpack@arg,f
 16484  0978  3000               	movlw	0
 16485  0979  1803               	skipnc
 16486  097A  3001               	movlw	1
 16487  097B  07F3               	addwf	___ftpack@arg+1,f
 16488  097C  3000               	movlw	0
 16489  097D  1803               	skipnc
 16490  097E  3001               	movlw	1
 16491  097F  07F4               	addwf	___ftpack@arg+2,f
 16492  0980  3001               	movlw	1
 16493  0981                     u11435:	
 16494  0981  36F4               	lsrf	___ftpack@arg+2,f
 16495  0982  0CF3               	rrf	___ftpack@arg+1,f
 16496  0983  0CF2               	rrf	___ftpack@arg,f
 16497  0984  0B89               	decfsz	9,f
 16498  0985  2981               	goto	u11435
 16499  0986                     l3263:	
 16500  0986  30FF               	movlw	255
 16501  0987  0574               	andwf	___ftpack@arg+2,w
 16502  0988  1903               	btfsc	3,2
 16503  0989  2993               	goto	l10223
 16504  098A  2971               	goto	l10215
 16505  098B                     l10221:	
 16506  098B  3001               	movlw	1
 16507  098C  02F5               	subwf	___ftpack@exp,f
 16508  098D  3001               	movlw	1
 16509  098E                     u11455:	
 16510  098E  35F2               	lslf	___ftpack@arg,f
 16511  098F  0DF3               	rlf	___ftpack@arg+1,f
 16512  0990  0DF4               	rlf	___ftpack@arg+2,f
 16513  0991  0B89               	decfsz	9,f
 16514  0992  298E               	goto	u11455
 16515  0993                     l10223:	
 16516  0993  1FF3               	btfss	___ftpack@arg+1,7
 16517  0994  298B               	goto	l10221
 16518  0995  1875               	btfsc	___ftpack@exp,0
 16519  0996  299D               	goto	l3269
 16520  0997  30FF               	movlw	255
 16521  0998  05F2               	andwf	___ftpack@arg,f
 16522  0999  307F               	movlw	127
 16523  099A  05F3               	andwf	___ftpack@arg+1,f
 16524  099B  30FF               	movlw	255
 16525  099C  05F4               	andwf	___ftpack@arg+2,f
 16526  099D                     l3269:	
 16527  099D  1003               	clrc
 16528  099E  0CF5               	rrf	___ftpack@exp,f
 16529  099F  0875               	movf	___ftpack@exp,w
 16530  09A0  0020               	movlb	0	; select bank0
 16531  09A1  00A0               	movwf	??___ftpack
 16532  09A2  01A1               	clrf	??___ftpack+1
 16533  09A3  01A2               	clrf	??___ftpack+2
 16534  09A4  3010               	movlw	16
 16535  09A5                     u11485:	
 16536  09A5  35A0               	lslf	??___ftpack,f
 16537  09A6  0DA1               	rlf	??___ftpack+1,f
 16538  09A7  0DA2               	rlf	??___ftpack+2,f
 16539  09A8  0B89               	decfsz	9,f
 16540  09A9  29A5               	goto	u11485
 16541  09AA  0820               	movf	??___ftpack,w
 16542  09AB  04F2               	iorwf	___ftpack@arg,f
 16543  09AC  0821               	movf	??___ftpack+1,w
 16544  09AD  04F3               	iorwf	___ftpack@arg+1,f
 16545  09AE  0822               	movf	??___ftpack+2,w
 16546  09AF  04F4               	iorwf	___ftpack@arg+2,f
 16547  09B0  0876               	movf	___ftpack@sign,w
 16548  09B1  1903               	btfsc	3,2
 16549  09B2  0008               	return
 16550  09B3  17F4               	bsf	___ftpack@arg+2,7
 16551  09B4  0008               	return
 16552  09B5                     __end_of___ftpack:	
 16553                           
 16554                           	psect	text110
 16555  1D3C                     __ptext110:	
 16556 ;; *************** function _DelayOff_Main *****************
 16557 ;; Defined at:
 16558 ;;		line 41 in file "../src/DelayOff_B1.c"
 16559 ;; Parameters:    Size  Location     Type
 16560 ;;		None
 16561 ;; Auto vars:     Size  Location     Type
 16562 ;;		None
 16563 ;; Return value:  Size  Location     Type
 16564 ;;		None               void
 16565 ;; Registers used:
 16566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16576 ;;Total ram usage:        0 bytes
 16577 ;; Hardware stack levels used:    1
 16578 ;; Hardware stack levels required when called:    7
 16579 ;; This function calls:
 16580 ;;		_DlyOff_Main
 16581 ;; This function is called by:
 16582 ;;		_main
 16583 ;; This function uses a non-reentrant model
 16584 ;;
 16585                           
 16586                           
 16587                           ;psect for function _DelayOff_Main
 16588  1D3C                     _DelayOff_Main:	
 16589                           
 16590                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 16591                           
 16592                           ;incstack = 0
 16593                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16594  1D3C  3001               	movlw	1
 16595  1D3D  318B  23AF  319D   	fcall	_DlyOff_Main
 16596                           
 16597                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 16598  1D40  3002               	movlw	2
 16599  1D41  318B  23AF  319D   	fcall	_DlyOff_Main
 16600                           
 16601                           ;DelayOff_B1.c: 51: DlyOff_Main(3);
 16602  1D44  3003               	movlw	3
 16603  1D45  318B  23AF         	fcall	_DlyOff_Main
 16604  1D47  0008               	return
 16605  1D48                     __end_of_DelayOff_Main:	
 16606                           
 16607                           	psect	text111
 16608  0BAF                     __ptext111:	
 16609 ;; *************** function _DlyOff_Main *****************
 16610 ;; Defined at:
 16611 ;;		line 61 in file "../src/DelayOff_B1.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;  sw              1    wreg     unsigned char 
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;  sw              1   59[BANK0 ] unsigned char 
 16616 ;; Return value:  Size  Location     Type
 16617 ;;		None               void
 16618 ;; Registers used:
 16619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16620 ;; Tracked objects:
 16621 ;;		On entry : 0/0
 16622 ;;		On exit  : 0/0
 16623 ;;		Unchanged: 0/0
 16624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;Total ram usage:        3 bytes
 16630 ;; Hardware stack levels used:    1
 16631 ;; Hardware stack levels required when called:    6
 16632 ;; This function calls:
 16633 ;;		_DelayOffPointSelect
 16634 ;;		_getDimmerLights_Status
 16635 ;;		_setDimmerLights_SwOff
 16636 ;;		_setDimmerLights_SwOn
 16637 ;;		_setProductData
 16638 ;; This function is called by:
 16639 ;;		_DelayOff_Main
 16640 ;; This function uses a non-reentrant model
 16641 ;;
 16642                           
 16643                           
 16644                           ;psect for function _DlyOff_Main
 16645  0BAF                     _DlyOff_Main:	
 16646                           
 16647                           ;incstack = 0
 16648                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16649                           ;DlyOff_Main@sw stored from wreg
 16650  0BAF  0020               	movlb	0	; select bank0
 16651  0BB0  00DB               	movwf	DlyOff_Main@sw
 16652                           
 16653                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 16654  0BB1  085B               	movf	DlyOff_Main@sw,w
 16655  0BB2  3190  20F7  318B   	fcall	_DelayOffPointSelect
 16656                           
 16657                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 16658  0BB5  0020               	movlb	0	; select bank0
 16659  0BB6  0869               	movf	_DelayOff,w
 16660  0BB7  0086               	movwf	6
 16661  0BB8  3001               	movlw	1	; select bank2/3
 16662  0BB9  0087               	movwf	7
 16663  0BBA  1C81               	btfss	1,1
 16664  0BBB  0008               	return
 16665                           
 16666                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 16667  0BBC  0869               	movf	_DelayOff,w
 16668  0BBD  3E02               	addlw	2
 16669  0BBE  0086               	movwf	6
 16670  0BBF  3001               	movlw	1	; select bank2/3
 16671  0BC0  0087               	movwf	7
 16672  0BC1  3001               	movlw	1
 16673  0BC2  0781               	addwf	1,f
 16674  0BC3  3141               	addfsr 1,1
 16675  0BC4  1803               	skipnc
 16676  0BC5  0A81               	incf	1,f
 16677                           
 16678                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 16679  0BC6  0869               	movf	_DelayOff,w
 16680  0BC7  3E02               	addlw	2
 16681  0BC8  0086               	movwf	6
 16682  0BC9  3001               	movlw	1	; select bank2/3
 16683  0BCA  0087               	movwf	7
 16684  0BCB  3F40               	moviw [0]fsr1
 16685  0BCC  00D9               	movwf	??_DlyOff_Main
 16686  0BCD  3F41               	moviw [1]fsr1
 16687  0BCE  00DA               	movwf	??_DlyOff_Main+1
 16688  0BCF  3009               	movlw	9
 16689  0BD0  025A               	subwf	??_DlyOff_Main+1,w
 16690  0BD1  30C4               	movlw	196
 16691  0BD2  1903               	skipnz
 16692  0BD3  0259               	subwf	??_DlyOff_Main,w
 16693  0BD4  1C03               	skipc
 16694  0BD5  0008               	return
 16695                           
 16696                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 16697  0BD6  0869               	movf	_DelayOff,w
 16698  0BD7  3E02               	addlw	2
 16699  0BD8  0086               	movwf	6
 16700  0BD9  3001               	movlw	1	; select bank2/3
 16701  0BDA  0087               	movwf	7
 16702  0BDB  3000               	movlw	0
 16703  0BDC  3FC0               	movwi [0]fsr1
 16704  0BDD  3FC1               	movwi [1]fsr1
 16705                           
 16706                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 16707  0BDE  3001               	movlw	1
 16708  0BDF  00D9               	movwf	??_DlyOff_Main
 16709  0BE0  0869               	movf	_DelayOff,w
 16710  0BE1  3E04               	addlw	4
 16711  0BE2  0086               	movwf	6
 16712  0BE3  3001               	movlw	1	; select bank2/3
 16713  0BE4  0087               	movwf	7
 16714  0BE5  0859               	movf	??_DlyOff_Main,w
 16715  0BE6  0781               	addwf	1,f
 16716                           
 16717                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 16718  0BE7  0869               	movf	_DelayOff,w
 16719  0BE8  3E04               	addlw	4
 16720  0BE9  0086               	movwf	6
 16721  0BEA  3001               	movlw	1	; select bank2/3
 16722  0BEB  0087               	movwf	7
 16723  0BEC  0A69               	incf	_DelayOff,w
 16724  0BED  0084               	movwf	4
 16725  0BEE  3001               	movlw	1	; select bank2/3
 16726  0BEF  0085               	movwf	5
 16727  0BF0  0800               	movf	0,w
 16728  0BF1  0201               	subwf	1,w
 16729  0BF2  1C03               	skipc
 16730  0BF3  0008               	return
 16731                           
 16732                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 16733  0BF4  0869               	movf	_DelayOff,w
 16734  0BF5  3E04               	addlw	4
 16735  0BF6  0086               	movwf	6
 16736  0BF7  3001               	movlw	1	; select bank2/3
 16737  0BF8  0087               	movwf	7
 16738  0BF9  0181               	clrf	1
 16739                           
 16740                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 16741  0BFA  0869               	movf	_DelayOff,w
 16742  0BFB  0086               	movwf	6
 16743  0BFC  3001               	movlw	1	; select bank2/3
 16744  0BFD  0087               	movwf	7
 16745  0BFE  1081               	bcf	1,1
 16746                           
 16747                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 16748  0BFF  085B               	movf	DlyOff_Main@sw,w
 16749  0C00  319D  256F  318B   	fcall	_getDimmerLights_Status
 16750  0C03  3A01               	xorlw	1
 16751  0C04  1D03               	skipz
 16752  0C05  2C10               	goto	l615
 16753                           
 16754                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 16755  0C06  0020               	movlb	0	; select bank0
 16756  0C07  085B               	movf	DlyOff_Main@sw,w
 16757  0C08  3187  2766  318B   	fcall	_setDimmerLights_SwOn
 16758                           
 16759                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 16760  0C0B  0020               	movlb	0	; select bank0
 16761  0C0C  085B               	movf	DlyOff_Main@sw,w
 16762  0C0D  3194  2432  318B   	fcall	_setDimmerLights_SwOff
 16763  0C10                     l615:	
 16764                           
 16765                           ;DelayOff_B1.c: 78: }
 16766                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 16767  0C10  0020               	movlb	0	; select bank0
 16768  0C11  01D6               	clrf	setProductData@value
 16769  0C12  085B               	movf	DlyOff_Main@sw,w
 16770  0C13  3E1A               	addlw	26
 16771  0C14  319D  2530         	fcall	_setProductData
 16772  0C16  0008               	return
 16773  0C17                     __end_of_DlyOff_Main:	
 16774                           
 16775                           	psect	text112
 16776  1D30                     __ptext112:	
 16777 ;; *************** function _setProductData *****************
 16778 ;; Defined at:
 16779 ;;		line 651 in file "../src/Main_B1.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;  address         1    wreg     unsigned char 
 16782 ;;  value           1   54[BANK0 ] unsigned char 
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;  address         1   56[BANK0 ] unsigned char 
 16785 ;; Return value:  Size  Location     Type
 16786 ;;		None               void
 16787 ;; Registers used:
 16788 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16789 ;; Tracked objects:
 16790 ;;		On entry : 0/0
 16791 ;;		On exit  : 0/0
 16792 ;;		Unchanged: 0/0
 16793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16794 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;Total ram usage:        3 bytes
 16799 ;; Hardware stack levels used:    1
 16800 ;; Hardware stack levels required when called:    3
 16801 ;; This function calls:
 16802 ;;		Nothing
 16803 ;; This function is called by:
 16804 ;;		_DlyOff_Main
 16805 ;;		_setDelayOff_GO
 16806 ;;		_setDimmerLights_OnOff
 16807 ;;		_setDimmerLights_Dimming
 16808 ;;		_setLog_Code
 16809 ;;		_setControl_Lights_Table
 16810 ;;		_setRFSW_AdjControl
 16811 ;;		_setRF_DimmerLights
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815                           
 16816                           ;psect for function _setProductData
 16817  1D30                     _setProductData:	
 16818                           
 16819                           ;incstack = 0
 16820                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 16821                           ;setProductData@address stored from wreg
 16822  1D30  0020               	movlb	0	; select bank0
 16823  1D31  00D8               	movwf	setProductData@address
 16824                           
 16825                           ;Main_B1.c: 652: _product.Data[address] = value;
 16826  1D32  0856               	movf	setProductData@value,w
 16827  1D33  00D7               	movwf	??_setProductData
 16828  1D34  0858               	movf	setProductData@address,w
 16829  1D35  3E45               	addlw	__product& (0+255)
 16830  1D36  0086               	movwf	6
 16831  1D37  3002               	movlw	2	; select bank4/5
 16832  1D38  0087               	movwf	7
 16833  1D39  0857               	movf	??_setProductData,w
 16834  1D3A  0081               	movwf	1
 16835  1D3B  0008               	return
 16836  1D3C                     __end_of_setProductData:	
 16837                           
 16838                           	psect	text113
 16839  0766                     __ptext113:	
 16840 ;; *************** function _setDimmerLights_SwOn *****************
 16841 ;; Defined at:
 16842 ;;		line 759 in file "../src/Dimmer_B1.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;  sw              1    wreg     unsigned char 
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;  sw              1   12[BANK0 ] unsigned char 
 16847 ;;  idle            1   11[BANK0 ] unsigned char 
 16848 ;;  dimmingStatu    1    7[BANK0 ] unsigned char 
 16849 ;; Return value:  Size  Location     Type
 16850 ;;		None               void
 16851 ;; Registers used:
 16852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16859 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;Total ram usage:        7 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; Hardware stack levels required when called:    5
 16865 ;; This function calls:
 16866 ;;		_DimmerLights_SelectPointer
 16867 ;;		_getDimmerIntr_Dimming_Sw
 16868 ;;		_setBuz
 16869 ;; This function is called by:
 16870 ;;		_DlyOff_Main
 16871 ;;		_setControl_Lights_Table
 16872 ;;		_setRFSW_Control
 16873 ;;		_setRFSW_AdjControl
 16874 ;;		_setSw_Main
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           
 16879                           ;psect for function _setDimmerLights_SwOn
 16880  0766                     _setDimmerLights_SwOn:	
 16881                           
 16882                           ;incstack = 0
 16883                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16884                           ;setDimmerLights_SwOn@sw stored from wreg
 16885  0766  0020               	movlb	0	; select bank0
 16886  0767  00AC               	movwf	setDimmerLights_SwOn@sw
 16887                           
 16888                           ;Dimmer_B1.c: 760: char idle = 0;
 16889  0768  01AB               	clrf	setDimmerLights_SwOn@idle
 16890                           
 16891                           ;Dimmer_B1.c: 762: char dimmingStatus = 0;
 16892  0769  01A7               	clrf	setDimmerLights_SwOn@dimmingStatus
 16893                           
 16894                           ;Dimmer_B1.c: 763: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 16895  076A  082C               	movf	setDimmerLights_SwOn@sw,w
 16896  076B  3191  2116  3187   	fcall	_getDimmerIntr_Dimming_Sw
 16897  076E  0020               	movlb	0	; select bank0
 16898  076F  00A6               	movwf	??_setDimmerLights_SwOn
 16899  0770  0826               	movf	??_setDimmerLights_SwOn,w
 16900  0771  00A7               	movwf	setDimmerLights_SwOn@dimmingStatus
 16901                           
 16902                           ;Dimmer_B1.c: 776: if (idle == 0) {
 16903  0772  08AB               	movf	setDimmerLights_SwOn@idle,f
 16904  0773  1D03               	skipz
 16905  0774  2FB8               	goto	l10525
 16906                           
 16907                           ;Dimmer_B1.c: 777: if (sw == 1) {
 16908  0775  082C               	movf	setDimmerLights_SwOn@sw,w
 16909  0776  3A01               	xorlw	1
 16910  0777  1D03               	skipz
 16911  0778  2F8A               	goto	l10497
 16912                           
 16913                           ;Dimmer_B1.c: 778: idle = DimmerLights2.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 16914                           ;Dimmer_B1.c: 779: || DimmerIntr2.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16915  0779  01A8               	clrf	_setDimmerLights_SwOn$2561
 16916  077A  0AA8               	incf	_setDimmerLights_SwOn$2561,f
 16917  077B  0022               	movlb	2	; select bank2
 16918  077C  1A67               	btfsc	_DimmerLights2^(0+256),4
 16919  077D  2F87               	goto	l10495
 16920  077E  0023               	movlb	3	; select bank3
 16921  077F  1A35               	btfsc	_DimmerLights3^(0+384),4
 16922  0780  2F87               	goto	l10495
 16923  0781  0022               	movlb	2	; select bank2
 16924  0782  1E3E               	btfss	_DimmerIntr2^(0+256),4
 16925  0783  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 16926  0784  2F87               	goto	l10495
 16927  0785  0020               	movlb	0	; select bank0
 16928  0786  01A8               	clrf	_setDimmerLights_SwOn$2561
 16929  0787                     l10495:	
 16930  0787  0020               	movlb	0	; select bank0
 16931  0788  0828               	movf	_setDimmerLights_SwOn$2561,w
 16932  0789  2FB5               	goto	L11
 16933  078A                     l10497:	
 16934                           ;Dimmer_B1.c: 780: } else if (sw == 2) {
 16935                           
 16936  078A  082C               	movf	setDimmerLights_SwOn@sw,w
 16937  078B  3A02               	xorlw	2
 16938  078C  1D03               	skipz
 16939  078D  2FA1               	goto	l10511
 16940                           
 16941                           ;Dimmer_B1.c: 781: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 16942                           ;Dimmer_B1.c: 782: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16943  078E  01A9               	clrf	_setDimmerLights_SwOn$2570
 16944  078F  0AA9               	incf	_setDimmerLights_SwOn$2570,f
 16945  0790  0022               	movlb	2	; select bank2
 16946  0791  1A5E               	btfsc	_DimmerLights1^(0+256),4
 16947  0792  2F9E               	goto	l10509
 16948  0793  0023               	movlb	3	; select bank3
 16949  0794  1A35               	btfsc	_DimmerLights3^(0+384),4
 16950  0795  2F9E               	goto	l10509
 16951  0796  0021               	movlb	1	; select bank1
 16952  0797  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16953  0798  2F9E               	goto	l10509
 16954  0799  0022               	movlb	2	; select bank2
 16955  079A  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 16956  079B  2F9E               	goto	l10509
 16957  079C  0020               	movlb	0	; select bank0
 16958  079D  01A9               	clrf	_setDimmerLights_SwOn$2570
 16959  079E                     l10509:	
 16960  079E  0020               	movlb	0	; select bank0
 16961  079F  0829               	movf	_setDimmerLights_SwOn$2570,w
 16962  07A0  2FB5               	goto	L11
 16963  07A1                     l10511:	
 16964                           ;Dimmer_B1.c: 783: } else if (sw == 3) {
 16965                           
 16966  07A1  082C               	movf	setDimmerLights_SwOn@sw,w
 16967  07A2  3A03               	xorlw	3
 16968  07A3  1D03               	skipz
 16969  07A4  2FB8               	goto	l10525
 16970                           
 16971                           ;Dimmer_B1.c: 784: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights2.DimmingTrig
      +                          ger == 1
 16972                           ;Dimmer_B1.c: 785: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr2.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16973  07A5  01AA               	clrf	_setDimmerLights_SwOn$2571
 16974  07A6  0AAA               	incf	_setDimmerLights_SwOn$2571,f
 16975  07A7  0022               	movlb	2	; select bank2
 16976  07A8  1E5E               	btfss	_DimmerLights1^(0+256),4
 16977  07A9  1A67               	btfsc	_DimmerLights2^(0+256),4
 16978  07AA  2FB3               	goto	l10523
 16979  07AB  0021               	movlb	1	; select bank1
 16980  07AC  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16981  07AD  2FB3               	goto	l10523
 16982  07AE  0022               	movlb	2	; select bank2
 16983  07AF  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 16984  07B0  2FB3               	goto	l10523
 16985  07B1  0020               	movlb	0	; select bank0
 16986  07B2  01AA               	clrf	_setDimmerLights_SwOn$2571
 16987  07B3                     l10523:	
 16988  07B3  0020               	movlb	0	; select bank0
 16989  07B4  082A               	movf	_setDimmerLights_SwOn$2571,w
 16990  07B5                     L11:	
 16991  07B5  00A6               	movwf	??_setDimmerLights_SwOn
 16992  07B6  0826               	movf	??_setDimmerLights_SwOn,w
 16993  07B7  00AB               	movwf	setDimmerLights_SwOn@idle
 16994  07B8                     l10525:	
 16995                           
 16996                           ;Dimmer_B1.c: 786: }
 16997                           ;Dimmer_B1.c: 787: }
 16998                           ;Dimmer_B1.c: 790: DimmerLights_SelectPointer(sw);
 16999  07B8  082C               	movf	setDimmerLights_SwOn@sw,w
 17000  07B9  3191  2193  3187   	fcall	_DimmerLights_SelectPointer
 17001                           
 17002                           ;Dimmer_B1.c: 791: if (idle == 0) {
 17003  07BC  0020               	movlb	0	; select bank0
 17004  07BD  08AB               	movf	setDimmerLights_SwOn@idle,f
 17005  07BE  1D03               	skipz
 17006  07BF  0008               	return
 17007                           
 17008                           ;Dimmer_B1.c: 793: if (dimmingStatus == 0) {
 17009  07C0  08A7               	movf	setDimmerLights_SwOn@dimmingStatus,f
 17010  07C1  1D03               	skipz
 17011  07C2  2FE4               	goto	l10537
 17012                           
 17013                           ;Dimmer_B1.c: 794: DimmerLights->SwFlag = 1;
 17014  07C3  086A               	movf	_DimmerLights,w
 17015  07C4  0086               	movwf	6
 17016  07C5  3001               	movlw	1	; select bank2/3
 17017  07C6  0087               	movwf	7
 17018  07C7  1401               	bsf	1,0
 17019                           
 17020                           ;Dimmer_B1.c: 795: if (DimmerLights->Status == 0) {
 17021  07C8  0A6A               	incf	_DimmerLights,w
 17022  07C9  0086               	movwf	6
 17023  07CA  3001               	movlw	1	; select bank2/3
 17024  07CB  0087               	movwf	7
 17025  07CC  1801               	btfsc	1,0
 17026  07CD  2FDE               	goto	l10535
 17027                           
 17028                           ;Dimmer_B1.c: 796: DimmerLights->Status = 1;
 17029  07CE  0A6A               	incf	_DimmerLights,w
 17030  07CF  0086               	movwf	6
 17031  07D0  3001               	movlw	1	; select bank2/3
 17032  07D1  0087               	movwf	7
 17033  07D2  1401               	bsf	1,0
 17034                           
 17035                           ;Dimmer_B1.c: 799: DimmerLights->Trigger = 1;
 17036  07D3  086A               	movf	_DimmerLights,w
 17037  07D4  0086               	movwf	6
 17038  07D5  3001               	movlw	1	; select bank2/3
 17039  07D6  0087               	movwf	7
 17040  07D7  1481               	bsf	1,1
 17041                           
 17042                           ;Dimmer_B1.c: 800: DimmerLights->Switch = 1;
 17043  07D8  086A               	movf	_DimmerLights,w
 17044  07D9  0086               	movwf	6
 17045  07DA  3001               	movlw	1	; select bank2/3
 17046  07DB  0087               	movwf	7
 17047  07DC  1501               	bsf	1,2
 17048                           
 17049                           ;Dimmer_B1.c: 807: } else {
 17050  07DD  2FEE               	goto	l10539
 17051  07DE                     l10535:	
 17052                           
 17053                           ;Dimmer_B1.c: 808: DimmerLights->Status = 0;
 17054  07DE  0A6A               	incf	_DimmerLights,w
 17055  07DF  0086               	movwf	6
 17056  07E0  3001               	movlw	1	; select bank2/3
 17057  07E1  0087               	movwf	7
 17058  07E2  1001               	bcf	1,0
 17059                           
 17060                           ;Dimmer_B1.c: 809: }
 17061                           ;Dimmer_B1.c: 810: } else {
 17062  07E3  2FEE               	goto	l10539
 17063  07E4                     l10537:	
 17064                           
 17065                           ;Dimmer_B1.c: 811: DimmerLights->DimmingTrigger = 1;
 17066  07E4  086A               	movf	_DimmerLights,w
 17067  07E5  0086               	movwf	6
 17068  07E6  3001               	movlw	1	; select bank2/3
 17069  07E7  0087               	movwf	7
 17070  07E8  1601               	bsf	1,4
 17071                           
 17072                           ;Dimmer_B1.c: 812: DimmerLights->DimmingSwitch = 0;
 17073  07E9  086A               	movf	_DimmerLights,w
 17074  07EA  0086               	movwf	6
 17075  07EB  3001               	movlw	1	; select bank2/3
 17076  07EC  0087               	movwf	7
 17077  07ED  1281               	bcf	1,5
 17078  07EE                     l10539:	
 17079                           
 17080                           ;Dimmer_B1.c: 813: }
 17081                           ;Dimmer_B1.c: 814: setBuz(1, 100);
 17082  07EE  3064               	movlw	100
 17083  07EF  00A4               	movwf	setBuz@time
 17084  07F0  3000               	movlw	0
 17085  07F1  00A5               	movwf	setBuz@time+1
 17086  07F2  3001               	movlw	1
 17087  07F3  3188  2050         	fcall	_setBuz
 17088  07F5  0008               	return
 17089  07F6                     __end_of_setDimmerLights_SwOn:	
 17090                           
 17091                           	psect	text114
 17092  0850                     __ptext114:	
 17093 ;; *************** function _setBuz *****************
 17094 ;; Defined at:
 17095 ;;		line 22 in file "../src/Buzzer_B1.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;  count           1    wreg     unsigned char 
 17098 ;;  time            2    4[BANK0 ] int 
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;  count           1    8[COMMON] unsigned char 
 17101 ;; Return value:  Size  Location     Type
 17102 ;;		None               void
 17103 ;; Registers used:
 17104 ;;		wreg, status,2, status,0, pclath, cstack
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17113 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17114 ;;Total ram usage:        4 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; Hardware stack levels required when called:    4
 17117 ;; This function calls:
 17118 ;;		___awdiv
 17119 ;; This function is called by:
 17120 ;;		_setDimmerLights_SwOn
 17121 ;;		_setDimmerLights_Dimming
 17122 ;;		_my_MainTimer
 17123 ;;		_setLog_Code
 17124 ;;		_setRFSW_Control
 17125 ;;		_setRFSW_AdjControl
 17126 ;;		_setSw_Main
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           
 17131                           ;psect for function _setBuz
 17132  0850                     _setBuz:	
 17133                           
 17134                           ;incstack = 0
 17135                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 17136                           ;setBuz@count stored from wreg
 17137  0850  00F8               	movwf	setBuz@count
 17138                           
 17139                           ;Buzzer_B1.c: 23: time /= 20;
 17140  0851  3014               	movlw	20
 17141  0852  00F2               	movwf	___awdiv@divisor
 17142  0853  3000               	movlw	0
 17143  0854  00F3               	movwf	___awdiv@divisor+1
 17144  0855  0020               	movlb	0	; select bank0
 17145  0856  0825               	movf	setBuz@time+1,w
 17146  0857  01F5               	clrf	___awdiv@dividend+1
 17147  0858  07F5               	addwf	___awdiv@dividend+1,f
 17148  0859  0824               	movf	setBuz@time,w
 17149  085A  01F4               	clrf	___awdiv@dividend
 17150  085B  07F4               	addwf	___awdiv@dividend,f
 17151  085C  3188  20A3  3188   	fcall	___awdiv
 17152  085F  0873               	movf	?___awdiv+1,w
 17153  0860  0020               	movlb	0	; select bank0
 17154  0861  01A5               	clrf	setBuz@time+1
 17155  0862  07A5               	addwf	setBuz@time+1,f
 17156  0863  0872               	movf	?___awdiv,w
 17157  0864  01A4               	clrf	setBuz@time
 17158  0865  07A4               	addwf	setBuz@time,f
 17159                           
 17160                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 17161  0866  0021               	movlb	1	; select bank1
 17162  0867  1C4C               	btfss	_Buz1^(0+128),0
 17163  0868  0008               	return
 17164                           
 17165                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 17166  0869  18CC               	btfsc	_Buz1^(0+128),1
 17167  086A  287F               	goto	l106
 17168                           
 17169                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 17170  086B  14CC               	bsf	_Buz1^(0+128),1
 17171                           
 17172                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 17173  086C  01CD               	clrf	(_Buz1^(0+128)+1)
 17174  086D  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 17175                           
 17176                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 17177  086E  0878               	movf	setBuz@count,w
 17178  086F  00F7               	movwf	??_setBuz
 17179  0870  0877               	movf	??_setBuz,w
 17180  0871  00CF               	movwf	(_Buz1^(0+128)+3)
 17181                           
 17182                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 17183  0872  0020               	movlb	0	; select bank0
 17184  0873  0825               	movf	setBuz@time+1,w
 17185  0874  0021               	movlb	1	; select bank1
 17186  0875  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17187  0876  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17188  0877  0020               	movlb	0	; select bank0
 17189  0878  0824               	movf	setBuz@time,w
 17190  0879  0021               	movlb	1	; select bank1
 17191  087A  01D2               	clrf	(_Buz1^(0+128)+6)
 17192  087B  07D2               	addwf	(_Buz1^(0+128)+6),f
 17193                           
 17194                           ;Buzzer_B1.c: 30: RB3 = 1;
 17195  087C  0020               	movlb	0	; select bank0
 17196  087D  158D               	bsf	13,3	;volatile
 17197                           
 17198                           ;Buzzer_B1.c: 31: } else {
 17199  087E  0008               	return
 17200  087F                     l106:	
 17201                           
 17202                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 17203  087F  19CC               	btfsc	_Buz1^(0+128),3
 17204  0880  2891               	goto	l108
 17205                           
 17206                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 17207  0881  15CC               	bsf	_Buz1^(0+128),3
 17208                           
 17209                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 17210  0882  0878               	movf	setBuz@count,w
 17211  0883  00F7               	movwf	??_setBuz
 17212  0884  0877               	movf	??_setBuz,w
 17213  0885  00D0               	movwf	(_Buz1^(0+128)+4)
 17214                           
 17215                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 17216  0886  0020               	movlb	0	; select bank0
 17217  0887  0825               	movf	setBuz@time+1,w
 17218  0888  0021               	movlb	1	; select bank1
 17219  0889  01D5               	clrf	((_Buz1+1)^(0+128)+8)
 17220  088A  07D5               	addwf	((_Buz1+1)^(0+128)+8),f
 17221  088B  0020               	movlb	0	; select bank0
 17222  088C  0824               	movf	setBuz@time,w
 17223  088D  0021               	movlb	1	; select bank1
 17224  088E  01D4               	clrf	(_Buz1^(0+128)+8)
 17225  088F  07D4               	addwf	(_Buz1^(0+128)+8),f
 17226                           
 17227                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 17228  0890  0008               	return
 17229  0891                     l108:	
 17230  0891  1A4C               	btfsc	_Buz1^(0+128),4
 17231  0892  0008               	return
 17232                           
 17233                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 17234  0893  164C               	bsf	_Buz1^(0+128),4
 17235                           
 17236                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 17237  0894  0878               	movf	setBuz@count,w
 17238  0895  00F7               	movwf	??_setBuz
 17239  0896  0877               	movf	??_setBuz,w
 17240  0897  00D1               	movwf	(_Buz1^(0+128)+5)
 17241                           
 17242                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 17243  0898  0020               	movlb	0	; select bank0
 17244  0899  0825               	movf	setBuz@time+1,w
 17245  089A  0021               	movlb	1	; select bank1
 17246  089B  01D7               	clrf	((_Buz1+1)^(0+128)+10)
 17247  089C  07D7               	addwf	((_Buz1+1)^(0+128)+10),f
 17248  089D  0020               	movlb	0	; select bank0
 17249  089E  0824               	movf	setBuz@time,w
 17250  089F  0021               	movlb	1	; select bank1
 17251  08A0  01D6               	clrf	(_Buz1^(0+128)+10)
 17252  08A1  07D6               	addwf	(_Buz1^(0+128)+10),f
 17253  08A2  0008               	return
 17254  08A3                     __end_of_setBuz:	
 17255                           
 17256                           	psect	text115
 17257  08A3                     __ptext115:	
 17258 ;; *************** function ___awdiv *****************
 17259 ;; Defined at:
 17260 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 17261 ;; Parameters:    Size  Location     Type
 17262 ;;  divisor         2    2[COMMON] int 
 17263 ;;  dividend        2    4[COMMON] int 
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;  quotient        2    2[BANK0 ] int 
 17266 ;;  sign            1    1[BANK0 ] unsigned char 
 17267 ;;  counter         1    0[BANK0 ] unsigned char 
 17268 ;; Return value:  Size  Location     Type
 17269 ;;                  2    2[COMMON] int 
 17270 ;; Registers used:
 17271 ;;		wreg, status,2, status,0
 17272 ;; Tracked objects:
 17273 ;;		On entry : 0/0
 17274 ;;		On exit  : 0/0
 17275 ;;		Unchanged: 0/0
 17276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17280 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;Total ram usage:        9 bytes
 17282 ;; Hardware stack levels used:    1
 17283 ;; Hardware stack levels required when called:    3
 17284 ;; This function calls:
 17285 ;;		Nothing
 17286 ;; This function is called by:
 17287 ;;		_setBuz
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           
 17292                           ;psect for function ___awdiv
 17293  08A3                     ___awdiv:	
 17294                           
 17295                           ;incstack = 0
 17296                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 17297  08A3  0020               	movlb	0	; select bank0
 17298  08A4  01A1               	clrf	___awdiv@sign
 17299  08A5  1FF3               	btfss	___awdiv@divisor+1,7
 17300  08A6  28AE               	goto	l8981
 17301  08A7  09F2               	comf	___awdiv@divisor,f
 17302  08A8  09F3               	comf	___awdiv@divisor+1,f
 17303  08A9  0AF2               	incf	___awdiv@divisor,f
 17304  08AA  1903               	skipnz
 17305  08AB  0AF3               	incf	___awdiv@divisor+1,f
 17306  08AC  01A1               	clrf	___awdiv@sign
 17307  08AD  0AA1               	incf	___awdiv@sign,f
 17308  08AE                     l8981:	
 17309  08AE  1FF5               	btfss	___awdiv@dividend+1,7
 17310  08AF  28B9               	goto	l8987
 17311  08B0  09F4               	comf	___awdiv@dividend,f
 17312  08B1  09F5               	comf	___awdiv@dividend+1,f
 17313  08B2  0AF4               	incf	___awdiv@dividend,f
 17314  08B3  1903               	skipnz
 17315  08B4  0AF5               	incf	___awdiv@dividend+1,f
 17316  08B5  3001               	movlw	1
 17317  08B6  00F6               	movwf	??___awdiv
 17318  08B7  0876               	movf	??___awdiv,w
 17319  08B8  06A1               	xorwf	___awdiv@sign,f
 17320  08B9                     l8987:	
 17321  08B9  01A2               	clrf	___awdiv@quotient
 17322  08BA  01A3               	clrf	___awdiv@quotient+1
 17323  08BB  0873               	movf	___awdiv@divisor+1,w
 17324  08BC  0472               	iorwf	___awdiv@divisor,w
 17325  08BD  1903               	skipnz
 17326  08BE  28E8               	goto	l9009
 17327  08BF  01A0               	clrf	___awdiv@counter
 17328  08C0  0AA0               	incf	___awdiv@counter,f
 17329  08C1                     l8997:	
 17330  08C1  1BF3               	btfsc	___awdiv@divisor+1,7
 17331  08C2  28CD               	goto	l8999
 17332  08C3  3001               	movlw	1
 17333  08C4                     u9625:	
 17334  08C4  35F2               	lslf	___awdiv@divisor,f
 17335  08C5  0DF3               	rlf	___awdiv@divisor+1,f
 17336  08C6  0B89               	decfsz	9,f
 17337  08C7  28C4               	goto	u9625
 17338  08C8  3001               	movlw	1
 17339  08C9  00F6               	movwf	??___awdiv
 17340  08CA  0876               	movf	??___awdiv,w
 17341  08CB  07A0               	addwf	___awdiv@counter,f
 17342  08CC  28C1               	goto	l8997
 17343  08CD                     l8999:	
 17344  08CD  3001               	movlw	1
 17345  08CE                     u9645:	
 17346  08CE  35A2               	lslf	___awdiv@quotient,f
 17347  08CF  0DA3               	rlf	___awdiv@quotient+1,f
 17348  08D0  0B89               	decfsz	9,f
 17349  08D1  28CE               	goto	u9645
 17350  08D2  0873               	movf	___awdiv@divisor+1,w
 17351  08D3  0275               	subwf	___awdiv@dividend+1,w
 17352  08D4  1D03               	skipz
 17353  08D5  28D8               	goto	u9655
 17354  08D6  0872               	movf	___awdiv@divisor,w
 17355  08D7  0274               	subwf	___awdiv@dividend,w
 17356  08D8                     u9655:	
 17357  08D8  1C03               	skipc
 17358  08D9  28DF               	goto	l9005
 17359  08DA  0872               	movf	___awdiv@divisor,w
 17360  08DB  02F4               	subwf	___awdiv@dividend,f
 17361  08DC  0873               	movf	___awdiv@divisor+1,w
 17362  08DD  3BF5               	subwfb	___awdiv@dividend+1,f
 17363  08DE  1422               	bsf	___awdiv@quotient,0
 17364  08DF                     l9005:	
 17365  08DF  3001               	movlw	1
 17366  08E0                     u9665:	
 17367  08E0  36F3               	lsrf	___awdiv@divisor+1,f
 17368  08E1  0CF2               	rrf	___awdiv@divisor,f
 17369  08E2  0B89               	decfsz	9,f
 17370  08E3  28E0               	goto	u9665
 17371  08E4  3001               	movlw	1
 17372  08E5  02A0               	subwf	___awdiv@counter,f
 17373  08E6  1D03               	btfss	3,2
 17374  08E7  28CD               	goto	l8999
 17375  08E8                     l9009:	
 17376  08E8  0821               	movf	___awdiv@sign,w
 17377  08E9  1903               	btfsc	3,2
 17378  08EA  28F0               	goto	l9013
 17379  08EB  09A2               	comf	___awdiv@quotient,f
 17380  08EC  09A3               	comf	___awdiv@quotient+1,f
 17381  08ED  0AA2               	incf	___awdiv@quotient,f
 17382  08EE  1903               	skipnz
 17383  08EF  0AA3               	incf	___awdiv@quotient+1,f
 17384  08F0                     l9013:	
 17385  08F0  0823               	movf	___awdiv@quotient+1,w
 17386  08F1  01F3               	clrf	?___awdiv+1
 17387  08F2  07F3               	addwf	?___awdiv+1,f
 17388  08F3  0822               	movf	___awdiv@quotient,w
 17389  08F4  01F2               	clrf	?___awdiv
 17390  08F5  07F2               	addwf	?___awdiv,f
 17391  08F6  0008               	return
 17392  08F7                     __end_of___awdiv:	
 17393                           
 17394                           	psect	text116
 17395  1116                     __ptext116:	
 17396 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 17397 ;; Defined at:
 17398 ;;		line 269 in file "../src/Dimmer_B1.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  lights          1    wreg     unsigned char 
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;  lights          1    3[COMMON] unsigned char 
 17403 ;;  status          1    2[COMMON] unsigned char 
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      unsigned char 
 17406 ;; Registers used:
 17407 ;;		wreg, status,2
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;Total ram usage:        2 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:    3
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_setDimmerLights_SwOn
 17424 ;;		_setRF_AdjControl
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           
 17429                           ;psect for function _getDimmerIntr_Dimming_Sw
 17430  1116                     _getDimmerIntr_Dimming_Sw:	
 17431                           
 17432                           ;incstack = 0
 17433                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 17434                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 17435  1116  00F3               	movwf	getDimmerIntr_Dimming_Sw@lights
 17436                           
 17437                           ;Dimmer_B1.c: 270: char status = 0;
 17438  1117  01F2               	clrf	getDimmerIntr_Dimming_Sw@status
 17439                           
 17440                           ;Dimmer_B1.c: 272: if (lights == 1) {
 17441  1118  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17442  1119  3A01               	xorlw	1
 17443  111A  1D03               	skipz
 17444  111B  2921               	goto	l10239
 17445                           
 17446                           ;Dimmer_B1.c: 273: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 17447  111C  3000               	movlw	0
 17448  111D  0021               	movlb	1	; select bank1
 17449  111E  1A20               	btfsc	_DimmerIntr1^(0+128),4
 17450  111F  3001               	movlw	1
 17451  1120  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17452  1121                     l10239:	
 17453                           
 17454                           ;Dimmer_B1.c: 274: }
 17455                           ;Dimmer_B1.c: 277: if (lights == 2) {
 17456  1121  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17457  1122  3A02               	xorlw	2
 17458  1123  1D03               	skipz
 17459  1124  292A               	goto	l10243
 17460                           
 17461                           ;Dimmer_B1.c: 278: status = DimmerIntr2.Dimming_Sw == 1 ? 1 : 0;
 17462  1125  3000               	movlw	0
 17463  1126  0022               	movlb	2	; select bank2
 17464  1127  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 17465  1128  3001               	movlw	1
 17466  1129  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17467  112A                     l10243:	
 17468                           
 17469                           ;Dimmer_B1.c: 279: }
 17470                           ;Dimmer_B1.c: 282: if (lights == 3) {
 17471  112A  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17472  112B  3A03               	xorlw	3
 17473  112C  1D03               	skipz
 17474  112D  2933               	goto	l10247
 17475                           
 17476                           ;Dimmer_B1.c: 283: status = DimmerIntr3.Dimming_Sw == 1 ? 1 : 0;
 17477  112E  3000               	movlw	0
 17478  112F  0022               	movlb	2	; select bank2
 17479  1130  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 17480  1131  3001               	movlw	1
 17481  1132  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17482  1133                     l10247:	
 17483                           
 17484                           ;Dimmer_B1.c: 284: }
 17485                           ;Dimmer_B1.c: 287: return status;
 17486  1133  0872               	movf	getDimmerIntr_Dimming_Sw@status,w
 17487  1134  0008               	return
 17488  1135                     __end_of_getDimmerIntr_Dimming_Sw:	
 17489                           
 17490                           	psect	text117
 17491  1432                     __ptext117:	
 17492 ;; *************** function _setDimmerLights_SwOff *****************
 17493 ;; Defined at:
 17494 ;;		line 819 in file "../src/Dimmer_B1.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;  sw              1    wreg     unsigned char 
 17497 ;; Auto vars:     Size  Location     Type
 17498 ;;  sw              1    4[COMMON] unsigned char 
 17499 ;; Return value:  Size  Location     Type
 17500 ;;		None               void
 17501 ;; Registers used:
 17502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17503 ;; Tracked objects:
 17504 ;;		On entry : 0/0
 17505 ;;		On exit  : 0/0
 17506 ;;		Unchanged: 0/0
 17507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;Total ram usage:        1 bytes
 17513 ;; Hardware stack levels used:    1
 17514 ;; Hardware stack levels required when called:    4
 17515 ;; This function calls:
 17516 ;;		_DimmerLights_SelectPointer
 17517 ;; This function is called by:
 17518 ;;		_DlyOff_Main
 17519 ;;		_setControl_Lights_Table
 17520 ;;		_setRFSW_Control
 17521 ;;		_setRFSW_AdjControl
 17522 ;;		_setSw_Main
 17523 ;; This function uses a non-reentrant model
 17524 ;;
 17525                           
 17526                           
 17527                           ;psect for function _setDimmerLights_SwOff
 17528  1432                     _setDimmerLights_SwOff:	
 17529                           
 17530                           ;incstack = 0
 17531                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17532                           ;setDimmerLights_SwOff@sw stored from wreg
 17533  1432  00F4               	movwf	setDimmerLights_SwOff@sw
 17534                           
 17535                           ;Dimmer_B1.c: 821: DimmerLights_SelectPointer(sw);
 17536  1433  0874               	movf	setDimmerLights_SwOff@sw,w
 17537  1434  3191  2193  3194   	fcall	_DimmerLights_SelectPointer
 17538                           
 17539                           ;Dimmer_B1.c: 823: if (DimmerLights->SwFlag == 1) {
 17540  1437  0020               	movlb	0	; select bank0
 17541  1438  086A               	movf	_DimmerLights,w
 17542  1439  0086               	movwf	6
 17543  143A  3001               	movlw	1	; select bank2/3
 17544  143B  0087               	movwf	7
 17545  143C  1C01               	btfss	1,0
 17546  143D  0008               	return
 17547                           
 17548                           ;Dimmer_B1.c: 824: DimmerLights->SwFlag = 0;
 17549  143E  086A               	movf	_DimmerLights,w
 17550  143F  0086               	movwf	6
 17551  1440  3001               	movlw	1	; select bank2/3
 17552  1441  0087               	movwf	7
 17553  1442  1001               	bcf	1,0
 17554                           
 17555                           ;Dimmer_B1.c: 825: if (DimmerLights->Status == 1) {
 17556  1443  0A6A               	incf	_DimmerLights,w
 17557  1444  0086               	movwf	6
 17558  1445  3001               	movlw	1	; select bank2/3
 17559  1446  0087               	movwf	7
 17560  1447  1C01               	btfss	1,0
 17561  1448  2C5F               	goto	l10551
 17562                           
 17563                           ;Dimmer_B1.c: 826: if (DimmerLights->DimmingSwFlag == 1) {
 17564  1449  086A               	movf	_DimmerLights,w
 17565  144A  0086               	movwf	6
 17566  144B  3001               	movlw	1	; select bank2/3
 17567  144C  0087               	movwf	7
 17568  144D  1D81               	btfss	1,3
 17569  144E  0008               	return
 17570                           
 17571                           ;Dimmer_B1.c: 827: DimmerLights->DimmingSwFlag = 0;
 17572  144F  086A               	movf	_DimmerLights,w
 17573  1450  0086               	movwf	6
 17574  1451  3001               	movlw	1	; select bank2/3
 17575  1452  0087               	movwf	7
 17576  1453  1181               	bcf	1,3
 17577                           
 17578                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 1;
 17579  1454  086A               	movf	_DimmerLights,w
 17580  1455  0086               	movwf	6
 17581  1456  3001               	movlw	1	; select bank2/3
 17582  1457  0087               	movwf	7
 17583  1458  1601               	bsf	1,4
 17584                           
 17585                           ;Dimmer_B1.c: 830: DimmerLights->DimmingSwitch = 0;
 17586  1459  086A               	movf	_DimmerLights,w
 17587  145A  0086               	movwf	6
 17588  145B  3001               	movlw	1	; select bank2/3
 17589  145C  0087               	movwf	7
 17590  145D  1281               	bcf	1,5
 17591                           
 17592                           ;Dimmer_B1.c: 831: }
 17593                           ;Dimmer_B1.c: 832: } else {
 17594  145E  0008               	return
 17595  145F                     l10551:	
 17596                           
 17597                           ;Dimmer_B1.c: 835: DimmerLights->Trigger = 1;
 17598  145F  086A               	movf	_DimmerLights,w
 17599  1460  0086               	movwf	6
 17600  1461  3001               	movlw	1	; select bank2/3
 17601  1462  0087               	movwf	7
 17602  1463  1481               	bsf	1,1
 17603                           
 17604                           ;Dimmer_B1.c: 836: DimmerLights->Switch = 0;
 17605  1464  086A               	movf	_DimmerLights,w
 17606  1465  0086               	movwf	6
 17607  1466  3001               	movlw	1	; select bank2/3
 17608  1467  0087               	movwf	7
 17609  1468  1101               	bcf	1,2
 17610  1469  0008               	return
 17611  146A                     __end_of_setDimmerLights_SwOff:	
 17612                           
 17613                           	psect	text118
 17614  1D6F                     __ptext118:	
 17615 ;; *************** function _getDimmerLights_Status *****************
 17616 ;; Defined at:
 17617 ;;		line 1266 in file "../src/Dimmer_B1.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;  lights          1    wreg     unsigned char 
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;  lights          1    4[COMMON] unsigned char 
 17622 ;;  status          1    5[COMMON] unsigned char 
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  1    wreg      unsigned char 
 17625 ;; Registers used:
 17626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17636 ;;Total ram usage:        2 bytes
 17637 ;; Hardware stack levels used:    1
 17638 ;; Hardware stack levels required when called:    4
 17639 ;; This function calls:
 17640 ;;		_DimmerLights_SelectPointer
 17641 ;; This function is called by:
 17642 ;;		_DlyOff_Main
 17643 ;;		_setControl_Lights_Table
 17644 ;;		_setRFSW_Control
 17645 ;;		_setRFSW_AdjControl
 17646 ;;		_setRF_AdjControl
 17647 ;;		_DimmerLights_AssignationDimming
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           
 17652                           ;psect for function _getDimmerLights_Status
 17653  1D6F                     _getDimmerLights_Status:	
 17654                           
 17655                           ;incstack = 0
 17656                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17657                           ;getDimmerLights_Status@lights stored from wreg
 17658  1D6F  00F4               	movwf	getDimmerLights_Status@lights
 17659                           
 17660                           ;Dimmer_B1.c: 1267: DimmerLights_SelectPointer(lights);
 17661  1D70  0874               	movf	getDimmerLights_Status@lights,w
 17662  1D71  3191  2193         	fcall	_DimmerLights_SelectPointer
 17663                           
 17664                           ;Dimmer_B1.c: 1268: char status = DimmerLights->Status == 1 ? 1 : 0;
 17665  1D73  0020               	movlb	0	; select bank0
 17666  1D74  0A6A               	incf	_DimmerLights,w
 17667  1D75  0086               	movwf	6
 17668  1D76  3001               	movlw	1	; select bank2/3
 17669  1D77  0087               	movwf	7
 17670  1D78  3000               	movlw	0
 17671  1D79  1801               	btfsc	1,0
 17672  1D7A  3001               	movlw	1
 17673  1D7B  00F5               	movwf	getDimmerLights_Status@status
 17674                           
 17675                           ;Dimmer_B1.c: 1269: return status;
 17676  1D7C  0875               	movf	getDimmerLights_Status@status,w
 17677  1D7D  0008               	return
 17678  1D7E                     __end_of_getDimmerLights_Status:	
 17679                           
 17680                           	psect	text119
 17681  1193                     __ptext119:	
 17682 ;; *************** function _DimmerLights_SelectPointer *****************
 17683 ;; Defined at:
 17684 ;;		line 682 in file "../src/Dimmer_B1.c"
 17685 ;; Parameters:    Size  Location     Type
 17686 ;;  lights          1    wreg     unsigned char 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;  lights          1    3[COMMON] unsigned char 
 17689 ;; Return value:  Size  Location     Type
 17690 ;;		None               void
 17691 ;; Registers used:
 17692 ;;		wreg
 17693 ;; Tracked objects:
 17694 ;;		On entry : 0/0
 17695 ;;		On exit  : 0/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17702 ;;Total ram usage:        2 bytes
 17703 ;; Hardware stack levels used:    1
 17704 ;; Hardware stack levels required when called:    3
 17705 ;; This function calls:
 17706 ;;		Nothing
 17707 ;; This function is called by:
 17708 ;;		_setDimmerLights_SwOn
 17709 ;;		_setDimmerLights_SwOff
 17710 ;;		_setDimmerLights_DimmingOn
 17711 ;;		_setDimmerLights_Main
 17712 ;;		_getDimmerLights_Status
 17713 ;;		_setDimmerLights_DimmingRun
 17714 ;;		_setRF_AdjControl
 17715 ;;		_DimmerLights_TwoPhase_Main
 17716 ;;		_setDimmerLights_Status
 17717 ;; This function uses a non-reentrant model
 17718 ;;
 17719                           
 17720                           
 17721                           ;psect for function _DimmerLights_SelectPointer
 17722  1193                     _DimmerLights_SelectPointer:	
 17723                           
 17724                           ;incstack = 0
 17725                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 17726                           ;DimmerLights_SelectPointer@lights stored from wreg
 17727  1193  00F3               	movwf	DimmerLights_SelectPointer@lights
 17728                           
 17729                           ;Dimmer_B1.c: 684: if (lights == 1) {
 17730  1194  0873               	movf	DimmerLights_SelectPointer@lights,w
 17731  1195  3A01               	xorlw	1
 17732  1196  1D03               	skipz
 17733  1197  299E               	goto	l10255
 17734                           
 17735                           ;Dimmer_B1.c: 685: DimmerLights = &DimmerLights1;
 17736  1198  305E               	movlw	_DimmerLights1& (0+255)
 17737  1199  00F2               	movwf	??_DimmerLights_SelectPointer
 17738  119A  0872               	movf	??_DimmerLights_SelectPointer,w
 17739  119B  0020               	movlb	0	; select bank0
 17740  119C  00EA               	movwf	_DimmerLights
 17741                           
 17742                           ;Dimmer_B1.c: 686: }
 17743  119D  0008               	return
 17744  119E                     l10255:	
 17745                           
 17746                           ;Dimmer_B1.c: 689: else if (lights == 2) {
 17747  119E  0873               	movf	DimmerLights_SelectPointer@lights,w
 17748  119F  3A02               	xorlw	2
 17749  11A0  1D03               	skipz
 17750  11A1  29A8               	goto	l10259
 17751                           
 17752                           ;Dimmer_B1.c: 690: DimmerLights = &DimmerLights2;
 17753  11A2  3067               	movlw	_DimmerLights2& (0+255)
 17754  11A3  00F2               	movwf	??_DimmerLights_SelectPointer
 17755  11A4  0872               	movf	??_DimmerLights_SelectPointer,w
 17756  11A5  0020               	movlb	0	; select bank0
 17757  11A6  00EA               	movwf	_DimmerLights
 17758                           
 17759                           ;Dimmer_B1.c: 691: }
 17760  11A7  0008               	return
 17761  11A8                     l10259:	
 17762                           
 17763                           ;Dimmer_B1.c: 694: else if (lights == 3) {
 17764  11A8  0873               	movf	DimmerLights_SelectPointer@lights,w
 17765  11A9  3A03               	xorlw	3
 17766  11AA  1D03               	skipz
 17767  11AB  0008               	return
 17768                           
 17769                           ;Dimmer_B1.c: 695: DimmerLights = &DimmerLights3;
 17770  11AC  30B5               	movlw	_DimmerLights3& (0+255)
 17771  11AD  00F2               	movwf	??_DimmerLights_SelectPointer
 17772  11AE  0872               	movf	??_DimmerLights_SelectPointer,w
 17773  11AF  0020               	movlb	0	; select bank0
 17774  11B0  00EA               	movwf	_DimmerLights
 17775                           
 17776                           ;Dimmer_B1.c: 696: __nop();
 17777  11B1  0000               	nop
 17778                           
 17779                           ;Dimmer_B1.c: 697: __nop();
 17780  11B2  0000               	nop
 17781  11B3  0008               	return
 17782  11B4                     __end_of_DimmerLights_SelectPointer:	
 17783                           
 17784                           	psect	text120
 17785  1D24                     __ptext120:	
 17786 ;; *************** function _DelayOff_Initialization *****************
 17787 ;; Defined at:
 17788 ;;		line 26 in file "../src/DelayOff_B1.c"
 17789 ;; Parameters:    Size  Location     Type
 17790 ;;		None
 17791 ;; Auto vars:     Size  Location     Type
 17792 ;;		None
 17793 ;; Return value:  Size  Location     Type
 17794 ;;		None               void
 17795 ;; Registers used:
 17796 ;;		wreg, status,2, status,0, pclath, cstack
 17797 ;; Tracked objects:
 17798 ;;		On entry : 0/0
 17799 ;;		On exit  : 0/0
 17800 ;;		Unchanged: 0/0
 17801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;Total ram usage:        0 bytes
 17807 ;; Hardware stack levels used:    1
 17808 ;; Hardware stack levels required when called:    5
 17809 ;; This function calls:
 17810 ;;		_DlyOff_Initialization
 17811 ;; This function is called by:
 17812 ;;		_main
 17813 ;; This function uses a non-reentrant model
 17814 ;;
 17815                           
 17816                           
 17817                           ;psect for function _DelayOff_Initialization
 17818  1D24                     _DelayOff_Initialization:	
 17819                           
 17820                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 17821                           
 17822                           ;incstack = 0
 17823                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17824  1D24  3001               	movlw	1
 17825  1D25  319C  24BC  319D   	fcall	_DlyOff_Initialization
 17826                           
 17827                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 17828  1D28  3002               	movlw	2
 17829  1D29  319C  24BC  319D   	fcall	_DlyOff_Initialization
 17830                           
 17831                           ;DelayOff_B1.c: 36: DlyOff_Initialization(3);
 17832  1D2C  3003               	movlw	3
 17833  1D2D  319C  24BC         	fcall	_DlyOff_Initialization
 17834  1D2F  0008               	return
 17835  1D30                     __end_of_DelayOff_Initialization:	
 17836                           
 17837                           	psect	text121
 17838  1CBC                     __ptext121:	
 17839 ;; *************** function _DlyOff_Initialization *****************
 17840 ;; Defined at:
 17841 ;;		line 56 in file "../src/DelayOff_B1.c"
 17842 ;; Parameters:    Size  Location     Type
 17843 ;;  sw              1    wreg     unsigned char 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;  sw              1    4[COMMON] unsigned char 
 17846 ;; Return value:  Size  Location     Type
 17847 ;;		None               void
 17848 ;; Registers used:
 17849 ;;		wreg, status,2, status,0, pclath, cstack
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;Total ram usage:        1 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; Hardware stack levels required when called:    4
 17862 ;; This function calls:
 17863 ;;		_DelayOffPointSelect
 17864 ;; This function is called by:
 17865 ;;		_DelayOff_Initialization
 17866 ;; This function uses a non-reentrant model
 17867 ;;
 17868                           
 17869                           
 17870                           ;psect for function _DlyOff_Initialization
 17871  1CBC                     _DlyOff_Initialization:	
 17872                           
 17873                           ;incstack = 0
 17874                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17875                           ;DlyOff_Initialization@sw stored from wreg
 17876  1CBC  00F4               	movwf	DlyOff_Initialization@sw
 17877                           
 17878                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 17879  1CBD  0874               	movf	DlyOff_Initialization@sw,w
 17880  1CBE  3190  20F7         	fcall	_DelayOffPointSelect
 17881  1CC0  0008               	return
 17882  1CC1                     __end_of_DlyOff_Initialization:	
 17883                           
 17884                           	psect	text122
 17885  10F7                     __ptext122:	
 17886 ;; *************** function _DelayOffPointSelect *****************
 17887 ;; Defined at:
 17888 ;;		line 7 in file "../src/DelayOff_B1.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;  sw              1    wreg     unsigned char 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;  sw              1    3[COMMON] unsigned char 
 17893 ;; Return value:  Size  Location     Type
 17894 ;;		None               void
 17895 ;; Registers used:
 17896 ;;		wreg
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17906 ;;Total ram usage:        2 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:    3
 17909 ;; This function calls:
 17910 ;;		Nothing
 17911 ;; This function is called by:
 17912 ;;		_DlyOff_Initialization
 17913 ;;		_DlyOff_Main
 17914 ;;		_setDelayOff_GO
 17915 ;;		_getDelayOff_GO
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919                           
 17920                           ;psect for function _DelayOffPointSelect
 17921  10F7                     _DelayOffPointSelect:	
 17922                           
 17923                           ;incstack = 0
 17924                           ; Regs used in _DelayOffPointSelect: [wreg]
 17925                           ;DelayOffPointSelect@sw stored from wreg
 17926  10F7  00F3               	movwf	DelayOffPointSelect@sw
 17927                           
 17928                           ;DelayOff_B1.c: 9: if (sw == 1) {
 17929  10F8  0873               	movf	DelayOffPointSelect@sw,w
 17930  10F9  3A01               	xorlw	1
 17931  10FA  1D03               	skipz
 17932  10FB  2902               	goto	l6337
 17933                           
 17934                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 17935  10FC  30D9               	movlw	_DlySw1& (0+255)
 17936  10FD  00F2               	movwf	??_DelayOffPointSelect
 17937  10FE  0872               	movf	??_DelayOffPointSelect,w
 17938  10FF  0020               	movlb	0	; select bank0
 17939  1100  00E9               	movwf	_DelayOff
 17940                           
 17941                           ;DelayOff_B1.c: 11: }
 17942  1101  0008               	return
 17943  1102                     l6337:	
 17944                           
 17945                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 17946  1102  0873               	movf	DelayOffPointSelect@sw,w
 17947  1103  3A02               	xorlw	2
 17948  1104  1D03               	skipz
 17949  1105  290C               	goto	l6341
 17950                           
 17951                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 17952  1106  30DE               	movlw	_DlySw2& (0+255)
 17953  1107  00F2               	movwf	??_DelayOffPointSelect
 17954  1108  0872               	movf	??_DelayOffPointSelect,w
 17955  1109  0020               	movlb	0	; select bank0
 17956  110A  00E9               	movwf	_DelayOff
 17957                           
 17958                           ;DelayOff_B1.c: 16: }
 17959  110B  0008               	return
 17960  110C                     l6341:	
 17961                           
 17962                           ;DelayOff_B1.c: 19: else if (sw == 3) {
 17963  110C  0873               	movf	DelayOffPointSelect@sw,w
 17964  110D  3A03               	xorlw	3
 17965  110E  1D03               	skipz
 17966  110F  0008               	return
 17967                           
 17968                           ;DelayOff_B1.c: 20: DelayOff = &DlySw3;
 17969  1110  30E3               	movlw	_DlySw3& (0+255)
 17970  1111  00F2               	movwf	??_DelayOffPointSelect
 17971  1112  0872               	movf	??_DelayOffPointSelect,w
 17972  1113  0020               	movlb	0	; select bank0
 17973  1114  00E9               	movwf	_DelayOff
 17974  1115  0008               	return
 17975  1116                     __end_of_DelayOffPointSelect:	
 17976                           
 17977                           	psect	text123
 17978  16DE                     __ptext123:	
 17979 ;; *************** function _Buzzer_Main *****************
 17980 ;; Defined at:
 17981 ;;		line 46 in file "../src/Buzzer_B1.c"
 17982 ;; Parameters:    Size  Location     Type
 17983 ;;		None
 17984 ;; Auto vars:     Size  Location     Type
 17985 ;;		None
 17986 ;; Return value:  Size  Location     Type
 17987 ;;		None               void
 17988 ;; Registers used:
 17989 ;;		wreg, status,2, status,0
 17990 ;; Tracked objects:
 17991 ;;		On entry : 0/0
 17992 ;;		On exit  : 0/0
 17993 ;;		Unchanged: 0/0
 17994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17999 ;;Total ram usage:        1 bytes
 18000 ;; Hardware stack levels used:    1
 18001 ;; Hardware stack levels required when called:    3
 18002 ;; This function calls:
 18003 ;;		Nothing
 18004 ;; This function is called by:
 18005 ;;		_main
 18006 ;; This function uses a non-reentrant model
 18007 ;;
 18008                           
 18009                           
 18010                           ;psect for function _Buzzer_Main
 18011  16DE                     _Buzzer_Main:	
 18012                           
 18013                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 18014                           
 18015                           ;incstack = 0
 18016                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 18017  16DE  0021               	movlb	1	; select bank1
 18018  16DF  1CCC               	btfss	_Buz1^(0+128),1
 18019  16E0  0008               	return
 18020                           
 18021                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 18022  16E1  3001               	movlw	1
 18023  16E2  07CD               	addwf	(_Buz1^(0+128)+1),f
 18024  16E3  3000               	movlw	0
 18025  16E4  3DCE               	addwfc	((_Buz1+1)^(0+128)+1),f
 18026                           
 18027                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 18028  16E5  0853               	movf	((_Buz1+1)^(0+128)+6),w
 18029  16E6  024E               	subwf	((_Buz1+1)^(0+128)+1),w
 18030  16E7  1D03               	skipz
 18031  16E8  2EEB               	goto	u8795
 18032  16E9  0852               	movf	(_Buz1^(0+128)+6),w
 18033  16EA  024D               	subwf	(_Buz1^(0+128)+1),w
 18034  16EB                     u8795:	
 18035  16EB  1C03               	skipc
 18036  16EC  0008               	return
 18037                           
 18038                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 18039  16ED  01CD               	clrf	(_Buz1^(0+128)+1)
 18040  16EE  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 18041                           
 18042                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 18043  16EF  12CC               	bcf	_Buz1^(0+128),5
 18044  16F0  0020               	movlb	0	; select bank0
 18045  16F1  1D8D               	btfss	13,3	;volatile
 18046  16F2  2EF5               	goto	l8439
 18047  16F3  0021               	movlb	1	; select bank1
 18048  16F4  16CC               	bsf	_Buz1^(0+128),5
 18049  16F5                     l8439:	
 18050                           
 18051                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 18052  16F5  0021               	movlb	1	; select bank1
 18053  16F6  1ACC               	btfsc	_Buz1^(0+128),5
 18054  16F7  2F1D               	goto	l116
 18055                           
 18056                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 18057  16F8  08CF               	movf	(_Buz1^(0+128)+3),f
 18058  16F9  1D03               	skipz
 18059  16FA  2F19               	goto	l117
 18060                           
 18061                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 18062  16FB  1DCC               	btfss	_Buz1^(0+128),3
 18063  16FC  2F09               	goto	l118
 18064                           
 18065                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 18066  16FD  11CC               	bcf	_Buz1^(0+128),3
 18067                           
 18068                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 18069  16FE  0850               	movf	(_Buz1^(0+128)+4),w
 18070  16FF  00F2               	movwf	??_Buzzer_Main
 18071  1700  0872               	movf	??_Buzzer_Main,w
 18072  1701  00CF               	movwf	(_Buz1^(0+128)+3)
 18073                           
 18074                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 18075  1702  0855               	movf	((_Buz1+1)^(0+128)+8),w
 18076  1703  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 18077  1704  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 18078  1705  0854               	movf	(_Buz1^(0+128)+8),w
 18079  1706  01D2               	clrf	(_Buz1^(0+128)+6)
 18080  1707  07D2               	addwf	(_Buz1^(0+128)+6),f
 18081                           
 18082                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 18083  1708  0008               	return
 18084  1709                     l118:	
 18085  1709  1E4C               	btfss	_Buz1^(0+128),4
 18086  170A  2F17               	goto	l120
 18087                           
 18088                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 18089  170B  124C               	bcf	_Buz1^(0+128),4
 18090                           
 18091                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 18092  170C  0851               	movf	(_Buz1^(0+128)+5),w
 18093  170D  00F2               	movwf	??_Buzzer_Main
 18094  170E  0872               	movf	??_Buzzer_Main,w
 18095  170F  00CF               	movwf	(_Buz1^(0+128)+3)
 18096                           
 18097                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 18098  1710  0857               	movf	((_Buz1+1)^(0+128)+10),w
 18099  1711  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 18100  1712  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 18101  1713  0856               	movf	(_Buz1^(0+128)+10),w
 18102  1714  01D2               	clrf	(_Buz1^(0+128)+6)
 18103  1715  07D2               	addwf	(_Buz1^(0+128)+6),f
 18104                           
 18105                           ;Buzzer_B1.c: 62: } else {
 18106  1716  0008               	return
 18107  1717                     l120:	
 18108                           
 18109                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 18110  1717  10CC               	bcf	_Buz1^(0+128),1
 18111                           
 18112                           ;Buzzer_B1.c: 64: }
 18113                           ;Buzzer_B1.c: 65: } else {
 18114  1718  0008               	return
 18115  1719                     l117:	
 18116                           
 18117                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 18118  1719  16CC               	bsf	_Buz1^(0+128),5
 18119                           
 18120                           ;Buzzer_B1.c: 68: RB3 = 1;
 18121  171A  0020               	movlb	0	; select bank0
 18122  171B  158D               	bsf	13,3	;volatile
 18123                           
 18124                           ;Buzzer_B1.c: 69: }
 18125                           ;Buzzer_B1.c: 70: } else {
 18126  171C  0008               	return
 18127  171D                     l116:	
 18128                           
 18129                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 18130  171D  12CC               	bcf	_Buz1^(0+128),5
 18131                           
 18132                           ;Buzzer_B1.c: 73: RB3 = 0;
 18133  171E  0020               	movlb	0	; select bank0
 18134  171F  118D               	bcf	13,3	;volatile
 18135                           
 18136                           ;Buzzer_B1.c: 75: Buz1.Count--;
 18137  1720  3001               	movlw	1
 18138  1721  0021               	movlb	1	; select bank1
 18139  1722  02CF               	subwf	(_Buz1^(0+128)+3),f
 18140  1723  0008               	return
 18141  1724                     __end_of_Buzzer_Main:	
 18142                           
 18143                           	psect	text124
 18144  1C9C                     __ptext124:	
 18145 ;; *************** function _Buzzer_Initialization *****************
 18146 ;; Defined at:
 18147 ;;		line 11 in file "../src/Buzzer_B1.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;		None
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;		None
 18152 ;; Return value:  Size  Location     Type
 18153 ;;		None               void
 18154 ;; Registers used:
 18155 ;;		None
 18156 ;; Tracked objects:
 18157 ;;		On entry : 0/0
 18158 ;;		On exit  : 0/0
 18159 ;;		Unchanged: 0/0
 18160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18165 ;;Total ram usage:        0 bytes
 18166 ;; Hardware stack levels used:    1
 18167 ;; Hardware stack levels required when called:    3
 18168 ;; This function calls:
 18169 ;;		Nothing
 18170 ;; This function is called by:
 18171 ;;		_main
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           
 18176                           ;psect for function _Buzzer_Initialization
 18177  1C9C                     _Buzzer_Initialization:	
 18178                           
 18179                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 18180                           
 18181                           ;incstack = 0
 18182                           ; Regs used in _Buzzer_Initialization: []
 18183  1C9C  0021               	movlb	1	; select bank1
 18184  1C9D  144C               	bsf	_Buz1^(0+128),0
 18185  1C9E  0008               	return
 18186  1C9F                     __end_of_Buzzer_Initialization:	
 18187                           
 18188                           	psect	intentry
 18189  0004                     __pintentry:	
 18190 ;; *************** function _ISR *****************
 18191 ;; Defined at:
 18192 ;;		line 116 in file "../src/MCU_B1.c"
 18193 ;; Parameters:    Size  Location     Type
 18194 ;;		None
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;		None
 18197 ;; Return value:  Size  Location     Type
 18198 ;;		None               void
 18199 ;; Registers used:
 18200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18201 ;; Tracked objects:
 18202 ;;		On entry : 0/0
 18203 ;;		On exit  : 0/0
 18204 ;;		Unchanged: 0/0
 18205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18210 ;;Total ram usage:        1 bytes
 18211 ;; Hardware stack levels used:    1
 18212 ;; Hardware stack levels required when called:    2
 18213 ;; This function calls:
 18214 ;;		_IOC_ISR
 18215 ;;		_TMR1_ISR
 18216 ;; This function is called by:
 18217 ;;		Interrupt level 1
 18218 ;; This function uses a non-reentrant model
 18219 ;;
 18220                           
 18221  0004                     _ISR:	
 18222                           
 18223                           ;incstack = 0
 18224                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18225  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18226  0005  3180               	pagesel	$
 18227  0006  0020               	movlb	0	; select bank0
 18228  0007  087F               	movf	127,w
 18229  0008  00F1               	movwf	??_ISR
 18230                           
 18231                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 18232  0009  0021               	movlb	1	; select bank1
 18233  000A  1C11               	btfss	17,0	;volatile
 18234  000B  2812               	goto	i1l8881
 18235  000C  0020               	movlb	0	; select bank0
 18236  000D  1C11               	btfss	17,0	;volatile
 18237  000E  2812               	goto	i1l8881
 18238                           
 18239                           ;MCU_B1.c: 126: TMR1_ISR();
 18240  000F  3192  22A0  3180   	fcall	_TMR1_ISR
 18241  0012                     i1l8881:	
 18242                           
 18243                           ;MCU_B1.c: 127: }
 18244                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 18245  0012  198B               	btfsc	11,3	;volatile
 18246  0013  1C0B               	btfss	11,0	;volatile
 18247  0014  281A               	goto	i1l1557
 18248  0015  0027               	movlb	7	; select bank7
 18249  0016  1D16               	btfss	22,2	;volatile
 18250  0017  281A               	goto	i1l1557
 18251                           
 18252                           ;MCU_B1.c: 139: IOC_ISR();
 18253  0018  319D  2560         	fcall	_IOC_ISR
 18254  001A                     i1l1557:	
 18255                           ;MCU_B1.c: 140: }
 18256                           ;MCU_B1.c: 148: return;
 18257                           
 18258  001A  0871               	movf	??_ISR,w
 18259  001B  0020               	movlb	0	; select bank0
 18260  001C  00FF               	movwf	127
 18261  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 18262  001E  0009               	retfie
 18263  001F                     __end_of_ISR:	
 18264                           
 18265                           	psect	text126
 18266  12A0                     __ptext126:	
 18267 ;; *************** function _TMR1_ISR *****************
 18268 ;; Defined at:
 18269 ;;		line 236 in file "../src/MCU_B1.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;		None
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;		None
 18274 ;; Return value:  Size  Location     Type
 18275 ;;		None               void
 18276 ;; Registers used:
 18277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18278 ;; Tracked objects:
 18279 ;;		On entry : 0/0
 18280 ;;		On exit  : 0/0
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18287 ;;Total ram usage:        0 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; Hardware stack levels required when called:    1
 18290 ;; This function calls:
 18291 ;;		_DimmerLights_TMR_1
 18292 ;;		_DimmerLights_TMR_2
 18293 ;;		_DimmerLights_TMR_3
 18294 ;; This function is called by:
 18295 ;;		_ISR
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           
 18300                           ;psect for function _TMR1_ISR
 18301  12A0                     _TMR1_ISR:	
 18302                           
 18303                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 18304                           
 18305                           ;incstack = 0
 18306                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18307  12A0  3190  2074  3192   	fcall	_DimmerLights_TMR_1
 18308                           
 18309                           ;MCU_B1.c: 259: DimmerLights_TMR_2();
 18310  12A3  3190  208E  3192   	fcall	_DimmerLights_TMR_2
 18311                           
 18312                           ;MCU_B1.c: 264: DimmerLights_TMR_3();
 18313  12A6  3190  20A8  3192   	fcall	_DimmerLights_TMR_3
 18314                           
 18315                           ;MCU_B1.c: 269: Timer1.Count++;
 18316  12A9  3001               	movlw	1
 18317  12AA  0021               	movlb	1	; select bank1
 18318  12AB  07D9               	addwf	(_Timer1^(0+128)+1),f
 18319  12AC  3000               	movlw	0
 18320  12AD  3DDA               	addwfc	((_Timer1+1)^(0+128)+1),f
 18321                           
 18322                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 18323  12AE  3001               	movlw	1
 18324  12AF  3ED8               	addlw	_Timer1& (0+255)
 18325  12B0  0086               	movwf	6
 18326  12B1  0187               	clrf	7
 18327  12B2  3F40               	moviw [0]fsr1
 18328  12B3  3AC8               	xorlw	200
 18329  12B4  1D03               	skipz
 18330  12B5  2AB8               	goto	u885_25
 18331  12B6  3F41               	moviw [1]fsr1
 18332  12B7  3A00               	xorlw	0
 18333  12B8                     u885_25:	
 18334  12B8  1D03               	skipz
 18335  12B9  2ABD               	goto	i1l8493
 18336                           
 18337                           ;MCU_B1.c: 271: Timer1.Count = 0;
 18338  12BA  01D9               	clrf	(_Timer1^(0+128)+1)
 18339  12BB  01DA               	clrf	((_Timer1+1)^(0+128)+1)
 18340                           
 18341                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 18342  12BC  1458               	bsf	_Timer1^(0+128),0
 18343  12BD                     i1l8493:	
 18344                           
 18345                           ;MCU_B1.c: 273: }
 18346                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 18347  12BD  30FA               	movlw	250
 18348  12BE  0020               	movlb	0	; select bank0
 18349  12BF  0097               	movwf	23	;volatile
 18350                           
 18351                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 18352  12C0  3038               	movlw	56
 18353  12C1  0096               	movwf	22	;volatile
 18354                           
 18355                           ;MCU_B1.c: 277: TMR1IF = 0;
 18356  12C2  1011               	bcf	17,0	;volatile
 18357  12C3  0008               	return
 18358  12C4                     __end_of_TMR1_ISR:	
 18359                           
 18360                           	psect	text127
 18361  10A8                     __ptext127:	
 18362 ;; *************** function _DimmerLights_TMR_3 *****************
 18363 ;; Defined at:
 18364 ;;		line 1701 in file "../src/Dimmer_B1.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;		None
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;		None               void
 18371 ;; Registers used:
 18372 ;;		wreg, status,2, status,0
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;Total ram usage:        1 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; This function calls:
 18385 ;;		Nothing
 18386 ;; This function is called by:
 18387 ;;		_TMR1_ISR
 18388 ;; This function uses a non-reentrant model
 18389 ;;
 18390                           
 18391                           
 18392                           ;psect for function _DimmerLights_TMR_3
 18393  10A8                     _DimmerLights_TMR_3:	
 18394                           
 18395                           ;Dimmer_B1.c: 1702: if (DimmerIntr3.GO == 1) {
 18396                           
 18397                           ;incstack = 0
 18398                           ; Regs used in _DimmerLights_TMR_3: [wreg+status,2+status,0]
 18399  10A8  0022               	movlb	2	; select bank2
 18400  10A9  1C4E               	btfss	_DimmerIntr3^(0+256),0
 18401  10AA  0008               	return
 18402                           
 18403                           ;Dimmer_B1.c: 1703: DimmerIntr3.Count++;
 18404  10AB  3001               	movlw	1
 18405  10AC  00F0               	movwf	??_DimmerLights_TMR_3
 18406  10AD  0870               	movf	??_DimmerLights_TMR_3,w
 18407  10AE  07D0               	addwf	(_DimmerIntr3^(0+256)+2),f
 18408                           
 18409                           ;Dimmer_B1.c: 1706: if (DimmerIntr3.Count == DimmerIntr3.TuneValue2_Value) {
 18410  10AF  0850               	movf	(_DimmerIntr3^(0+256)+2),w
 18411  10B0  065A               	xorwf	(_DimmerIntr3^(0+256)+12),w
 18412  10B1  1903               	btfsc	3,2
 18413                           
 18414                           ;Dimmer_B1.c: 1707: if (DimmerIntr3.ControlStatus == 1) {
 18415  10B2  1DCE               	btfss	_DimmerIntr3^(0+256),3
 18416  10B3  28B6               	goto	i1l8113
 18417                           
 18418                           ;Dimmer_B1.c: 1708: RB1 = 1;
 18419  10B4  0020               	movlb	0	; select bank0
 18420  10B5  148D               	bsf	13,1	;volatile
 18421  10B6                     i1l8113:	
 18422                           
 18423                           ;Dimmer_B1.c: 1709: }
 18424                           ;Dimmer_B1.c: 1710: }
 18425                           ;Dimmer_B1.c: 1712: if (DimmerIntr3.Count == 55) {
 18426  10B6  0022               	movlb	2	; select bank2
 18427  10B7  0850               	movf	(_DimmerIntr3^(0+256)+2),w
 18428  10B8  3A37               	xorlw	55
 18429  10B9  1D03               	skipz
 18430  10BA  0008               	return
 18431                           
 18432                           ;Dimmer_B1.c: 1713: DimmerIntr3.GO = 0;
 18433  10BB  104E               	bcf	_DimmerIntr3^(0+256),0
 18434                           
 18435                           ;Dimmer_B1.c: 1714: DimmerIntr3.Count = 0;
 18436  10BC  01D0               	clrf	(_DimmerIntr3^(0+256)+2)
 18437                           
 18438                           ;Dimmer_B1.c: 1716: if (DimmerIntr3.ControlStatus == 1) {
 18439  10BD  1DCE               	btfss	_DimmerIntr3^(0+256),3
 18440  10BE  0008               	return
 18441                           
 18442                           ;Dimmer_B1.c: 1717: RB1 = 0;
 18443  10BF  0020               	movlb	0	; select bank0
 18444  10C0  108D               	bcf	13,1	;volatile
 18445  10C1  0008               	return
 18446  10C2                     __end_of_DimmerLights_TMR_3:	
 18447                           
 18448                           	psect	text128
 18449  108E                     __ptext128:	
 18450 ;; *************** function _DimmerLights_TMR_2 *****************
 18451 ;; Defined at:
 18452 ;;		line 1641 in file "../src/Dimmer_B1.c"
 18453 ;; Parameters:    Size  Location     Type
 18454 ;;		None
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;		None
 18457 ;; Return value:  Size  Location     Type
 18458 ;;		None               void
 18459 ;; Registers used:
 18460 ;;		wreg, status,2, status,0
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18470 ;;Total ram usage:        1 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; This function calls:
 18473 ;;		Nothing
 18474 ;; This function is called by:
 18475 ;;		_TMR1_ISR
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479                           
 18480                           ;psect for function _DimmerLights_TMR_2
 18481  108E                     _DimmerLights_TMR_2:	
 18482                           
 18483                           ;Dimmer_B1.c: 1642: if (DimmerIntr2.GO == 1) {
 18484                           
 18485                           ;incstack = 0
 18486                           ; Regs used in _DimmerLights_TMR_2: [wreg+status,2+status,0]
 18487  108E  0022               	movlb	2	; select bank2
 18488  108F  1C3E               	btfss	_DimmerIntr2^(0+256),0
 18489  1090  0008               	return
 18490                           
 18491                           ;Dimmer_B1.c: 1643: DimmerIntr2.Count++;
 18492  1091  3001               	movlw	1
 18493  1092  00F0               	movwf	??_DimmerLights_TMR_2
 18494  1093  0870               	movf	??_DimmerLights_TMR_2,w
 18495  1094  07C0               	addwf	(_DimmerIntr2^(0+256)+2),f
 18496                           
 18497                           ;Dimmer_B1.c: 1646: if (DimmerIntr2.Count == DimmerIntr2.TuneValue2_Value) {
 18498  1095  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 18499  1096  064A               	xorwf	(_DimmerIntr2^(0+256)+12),w
 18500  1097  1903               	btfsc	3,2
 18501                           
 18502                           ;Dimmer_B1.c: 1647: if (DimmerIntr2.ControlStatus == 1) {
 18503  1098  1DBE               	btfss	_DimmerIntr2^(0+256),3
 18504  1099  289C               	goto	i1l8077
 18505                           
 18506                           ;Dimmer_B1.c: 1648: RA7 = 1;
 18507  109A  0020               	movlb	0	; select bank0
 18508  109B  178C               	bsf	12,7	;volatile
 18509  109C                     i1l8077:	
 18510                           
 18511                           ;Dimmer_B1.c: 1649: }
 18512                           ;Dimmer_B1.c: 1650: }
 18513                           ;Dimmer_B1.c: 1652: if (DimmerIntr2.Count == 55) {
 18514  109C  0022               	movlb	2	; select bank2
 18515  109D  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 18516  109E  3A37               	xorlw	55
 18517  109F  1D03               	skipz
 18518  10A0  0008               	return
 18519                           
 18520                           ;Dimmer_B1.c: 1653: DimmerIntr2.GO = 0;
 18521  10A1  103E               	bcf	_DimmerIntr2^(0+256),0
 18522                           
 18523                           ;Dimmer_B1.c: 1654: DimmerIntr2.Count = 0;
 18524  10A2  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 18525                           
 18526                           ;Dimmer_B1.c: 1656: if (DimmerIntr2.ControlStatus == 1) {
 18527  10A3  1DBE               	btfss	_DimmerIntr2^(0+256),3
 18528  10A4  0008               	return
 18529                           
 18530                           ;Dimmer_B1.c: 1657: RA7 = 0;
 18531  10A5  0020               	movlb	0	; select bank0
 18532  10A6  138C               	bcf	12,7	;volatile
 18533  10A7  0008               	return
 18534  10A8                     __end_of_DimmerLights_TMR_2:	
 18535                           
 18536                           	psect	text129
 18537  1074                     __ptext129:	
 18538 ;; *************** function _DimmerLights_TMR_1 *****************
 18539 ;; Defined at:
 18540 ;;		line 1522 in file "../src/Dimmer_B1.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;		None
 18543 ;; Auto vars:     Size  Location     Type
 18544 ;;		None
 18545 ;; Return value:  Size  Location     Type
 18546 ;;		None               void
 18547 ;; Registers used:
 18548 ;;		wreg, status,2, status,0
 18549 ;; Tracked objects:
 18550 ;;		On entry : 0/0
 18551 ;;		On exit  : 0/0
 18552 ;;		Unchanged: 0/0
 18553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;Total ram usage:        1 bytes
 18559 ;; Hardware stack levels used:    1
 18560 ;; This function calls:
 18561 ;;		Nothing
 18562 ;; This function is called by:
 18563 ;;		_TMR1_ISR
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           
 18567                           
 18568                           ;psect for function _DimmerLights_TMR_1
 18569  1074                     _DimmerLights_TMR_1:	
 18570                           
 18571                           ;Dimmer_B1.c: 1523: if (DimmerIntr1.GO == 1) {
 18572                           
 18573                           ;incstack = 0
 18574                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 18575  1074  0021               	movlb	1	; select bank1
 18576  1075  1C20               	btfss	_DimmerIntr1^(0+128),0
 18577  1076  0008               	return
 18578                           
 18579                           ;Dimmer_B1.c: 1524: DimmerIntr1.Count++;
 18580  1077  3001               	movlw	1
 18581  1078  00F0               	movwf	??_DimmerLights_TMR_1
 18582  1079  0870               	movf	??_DimmerLights_TMR_1,w
 18583  107A  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 18584                           
 18585                           ;Dimmer_B1.c: 1527: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 18586  107B  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 18587  107C  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 18588  107D  1903               	btfsc	3,2
 18589                           
 18590                           ;Dimmer_B1.c: 1528: if (DimmerIntr1.ControlStatus == 1) {
 18591  107E  1DA0               	btfss	_DimmerIntr1^(0+128),3
 18592  107F  2882               	goto	i1l8041
 18593                           
 18594                           ;Dimmer_B1.c: 1529: RB4 = 1;
 18595  1080  0020               	movlb	0	; select bank0
 18596  1081  160D               	bsf	13,4	;volatile
 18597  1082                     i1l8041:	
 18598                           
 18599                           ;Dimmer_B1.c: 1530: }
 18600                           ;Dimmer_B1.c: 1531: }
 18601                           ;Dimmer_B1.c: 1533: if (DimmerIntr1.Count == 55) {
 18602  1082  0021               	movlb	1	; select bank1
 18603  1083  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 18604  1084  3A37               	xorlw	55
 18605  1085  1D03               	skipz
 18606  1086  0008               	return
 18607                           
 18608                           ;Dimmer_B1.c: 1534: DimmerIntr1.GO = 0;
 18609  1087  1020               	bcf	_DimmerIntr1^(0+128),0
 18610                           
 18611                           ;Dimmer_B1.c: 1535: DimmerIntr1.Count = 0;
 18612  1088  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 18613                           
 18614                           ;Dimmer_B1.c: 1537: if (DimmerIntr1.ControlStatus == 1) {
 18615  1089  1DA0               	btfss	_DimmerIntr1^(0+128),3
 18616  108A  0008               	return
 18617                           
 18618                           ;Dimmer_B1.c: 1538: RB4 = 0;
 18619  108B  0020               	movlb	0	; select bank0
 18620  108C  120D               	bcf	13,4	;volatile
 18621  108D  0008               	return
 18622  108E                     __end_of_DimmerLights_TMR_1:	
 18623                           
 18624                           	psect	text130
 18625  1D60                     __ptext130:	
 18626 ;; *************** function _IOC_ISR *****************
 18627 ;; Defined at:
 18628 ;;		line 396 in file "../src/MCU_B1.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;		None
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;		None
 18633 ;; Return value:  Size  Location     Type
 18634 ;;		None               void
 18635 ;; Registers used:
 18636 ;;		wreg, status,2, status,0, pclath, cstack
 18637 ;; Tracked objects:
 18638 ;;		On entry : 0/0
 18639 ;;		On exit  : 0/0
 18640 ;;		Unchanged: 0/0
 18641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;Total ram usage:        0 bytes
 18647 ;; Hardware stack levels used:    1
 18648 ;; Hardware stack levels required when called:    1
 18649 ;; This function calls:
 18650 ;;		_DimmerLights_IOC_1
 18651 ;;		_DimmerLights_IOC_2
 18652 ;;		_DimmerLights_IOC_3
 18653 ;; This function is called by:
 18654 ;;		_ISR
 18655 ;; This function uses a non-reentrant model
 18656 ;;
 18657                           
 18658                           
 18659                           ;psect for function _IOC_ISR
 18660  1D60                     _IOC_ISR:	
 18661                           
 18662                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 18663                           
 18664                           ;incstack = 0
 18665                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 18666  1D60  0021               	movlb	1	; select bank1
 18667  1D61  1C3F               	btfss	_myMain^(0+128),0
 18668  1D62  2D6B               	goto	i1l8503
 18669                           
 18670                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 18671  1D63  319F  27B2  319D   	fcall	_DimmerLights_IOC_1
 18672                           
 18673                           ;MCU_B1.c: 409: DimmerLights_IOC_2();
 18674  1D66  319F  27CC  319D   	fcall	_DimmerLights_IOC_2
 18675                           
 18676                           ;MCU_B1.c: 414: DimmerLights_IOC_3();
 18677  1D69  319F  27E6         	fcall	_DimmerLights_IOC_3
 18678  1D6B                     i1l8503:	
 18679                           
 18680                           ;MCU_B1.c: 418: }
 18681                           ;MCU_B1.c: 420: IOCBF2 = 0;
 18682  1D6B  0027               	movlb	7	; select bank7
 18683  1D6C  1116               	bcf	22,2	;volatile
 18684                           
 18685                           ;MCU_B1.c: 421: IOCIF = 0;
 18686  1D6D  100B               	bcf	11,0	;volatile
 18687  1D6E  0008               	return
 18688  1D6F                     __end_of_IOC_ISR:	
 18689                           
 18690                           	psect	text131
 18691  1FE6                     __ptext131:	
 18692 ;; *************** function _DimmerLights_IOC_3 *****************
 18693 ;; Defined at:
 18694 ;;		line 1667 in file "../src/Dimmer_B1.c"
 18695 ;; Parameters:    Size  Location     Type
 18696 ;;		None
 18697 ;; Auto vars:     Size  Location     Type
 18698 ;;		None
 18699 ;; Return value:  Size  Location     Type
 18700 ;;		None               void
 18701 ;; Registers used:
 18702 ;;		wreg, status,2
 18703 ;; Tracked objects:
 18704 ;;		On entry : 0/0
 18705 ;;		On exit  : 0/0
 18706 ;;		Unchanged: 0/0
 18707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18712 ;;Total ram usage:        1 bytes
 18713 ;; Hardware stack levels used:    1
 18714 ;; This function calls:
 18715 ;;		Nothing
 18716 ;; This function is called by:
 18717 ;;		_IOC_ISR
 18718 ;; This function uses a non-reentrant model
 18719 ;;
 18720                           
 18721                           
 18722                           ;psect for function _DimmerLights_IOC_3
 18723  1FE6                     _DimmerLights_IOC_3:	
 18724                           
 18725                           ;Dimmer_B1.c: 1668: if (DimmerIntr3.GO == 0) {
 18726                           
 18727                           ;incstack = 0
 18728                           ; Regs used in _DimmerLights_IOC_3: [wreg+status,2]
 18729  1FE6  0022               	movlb	2	; select bank2
 18730  1FE7  184E               	btfsc	_DimmerIntr3^(0+256),0
 18731  1FE8  0008               	return
 18732                           
 18733                           ;Dimmer_B1.c: 1672: DimmerIntr3.Count = 0;
 18734  1FE9  01D0               	clrf	(_DimmerIntr3^(0+256)+2)
 18735                           
 18736                           ;Dimmer_B1.c: 1673: DimmerIntr3.GO = 1;
 18737  1FEA  144E               	bsf	_DimmerIntr3^(0+256),0
 18738                           
 18739                           ;Dimmer_B1.c: 1675: if (DimmerIntr3.Dimming_Sw == 1 || DimmerIntr3.Dimming_RF == 1) {
 18740  1FEB  1E4E               	btfss	_DimmerIntr3^(0+256),4
 18741  1FEC  1B4E               	btfsc	_DimmerIntr3^(0+256),6
 18742                           
 18743                           ;Dimmer_B1.c: 1676: DimmerIntr3.Tune = 1;
 18744  1FED  14CE               	bsf	_DimmerIntr3^(0+256),1
 18745                           
 18746                           ;Dimmer_B1.c: 1677: }
 18747                           ;Dimmer_B1.c: 1679: if (DimmerIntr3.Calculate == 1) {
 18748  1FEE  1FCF               	btfss	(_DimmerIntr3^(0+256)+1),7
 18749  1FEF  2FF9               	goto	i1l8101
 18750                           
 18751                           ;Dimmer_B1.c: 1680: DimmerIntr3.Calculate = 0;
 18752  1FF0  13CF               	bcf	(_DimmerIntr3^(0+256)+1),7
 18753                           
 18754                           ;Dimmer_B1.c: 1681: DimmerIntr3.TuneEnd_Value = DimmerIntr3.TuneEnd;
 18755  1FF1  0859               	movf	(_DimmerIntr3^(0+256)+11),w
 18756  1FF2  00F0               	movwf	??_DimmerLights_IOC_3
 18757  1FF3  0870               	movf	??_DimmerLights_IOC_3,w
 18758  1FF4  00DD               	movwf	(_DimmerIntr3^(0+256)+15)
 18759                           
 18760                           ;Dimmer_B1.c: 1682: DimmerIntr3.TuneValue2_Value = DimmerIntr3.TuneValue2;
 18761  1FF5  0856               	movf	(_DimmerIntr3^(0+256)+8),w
 18762  1FF6  00F0               	movwf	??_DimmerLights_IOC_3
 18763  1FF7  0870               	movf	??_DimmerLights_IOC_3,w
 18764  1FF8  00DA               	movwf	(_DimmerIntr3^(0+256)+12)
 18765  1FF9                     i1l8101:	
 18766                           
 18767                           ;Dimmer_B1.c: 1683: }
 18768                           ;Dimmer_B1.c: 1694: DimmerIntr3.Status = RB2 == 1 ? 1 : 0;
 18769  1FF9  12CF               	bcf	(_DimmerIntr3^(0+256)+1),5
 18770  1FFA  0020               	movlb	0	; select bank0
 18771  1FFB  1D0D               	btfss	13,2	;volatile
 18772  1FFC  0008               	return
 18773  1FFD  0022               	movlb	2	; select bank2
 18774  1FFE  16CF               	bsf	(_DimmerIntr3^(0+256)+1),5
 18775  1FFF  0008               	return
 18776  2000                     __end_of_DimmerLights_IOC_3:	
 18777                           
 18778                           	psect	text132
 18779  1FCC                     __ptext132:	
 18780 ;; *************** function _DimmerLights_IOC_2 *****************
 18781 ;; Defined at:
 18782 ;;		line 1606 in file "../src/Dimmer_B1.c"
 18783 ;; Parameters:    Size  Location     Type
 18784 ;;		None
 18785 ;; Auto vars:     Size  Location     Type
 18786 ;;		None
 18787 ;; Return value:  Size  Location     Type
 18788 ;;		None               void
 18789 ;; Registers used:
 18790 ;;		wreg, status,2
 18791 ;; Tracked objects:
 18792 ;;		On entry : 0/0
 18793 ;;		On exit  : 0/0
 18794 ;;		Unchanged: 0/0
 18795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18800 ;;Total ram usage:        1 bytes
 18801 ;; Hardware stack levels used:    1
 18802 ;; This function calls:
 18803 ;;		Nothing
 18804 ;; This function is called by:
 18805 ;;		_IOC_ISR
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           
 18810                           ;psect for function _DimmerLights_IOC_2
 18811  1FCC                     _DimmerLights_IOC_2:	
 18812                           
 18813                           ;Dimmer_B1.c: 1607: if (DimmerIntr2.GO == 0) {
 18814                           
 18815                           ;incstack = 0
 18816                           ; Regs used in _DimmerLights_IOC_2: [wreg+status,2]
 18817  1FCC  0022               	movlb	2	; select bank2
 18818  1FCD  183E               	btfsc	_DimmerIntr2^(0+256),0
 18819  1FCE  0008               	return
 18820                           
 18821                           ;Dimmer_B1.c: 1611: DimmerIntr2.Count = 0;
 18822  1FCF  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 18823                           
 18824                           ;Dimmer_B1.c: 1612: DimmerIntr2.GO = 1;
 18825  1FD0  143E               	bsf	_DimmerIntr2^(0+256),0
 18826                           
 18827                           ;Dimmer_B1.c: 1614: if (DimmerIntr2.Dimming_Sw == 1 || DimmerIntr2.Dimming_RF == 1) {
 18828  1FD1  1E3E               	btfss	_DimmerIntr2^(0+256),4
 18829  1FD2  1B3E               	btfsc	_DimmerIntr2^(0+256),6
 18830                           
 18831                           ;Dimmer_B1.c: 1615: DimmerIntr2.Tune = 1;
 18832  1FD3  14BE               	bsf	_DimmerIntr2^(0+256),1
 18833                           
 18834                           ;Dimmer_B1.c: 1616: }
 18835                           ;Dimmer_B1.c: 1618: if (DimmerIntr2.Calculate == 1) {
 18836  1FD4  1FBF               	btfss	(_DimmerIntr2^(0+256)+1),7
 18837  1FD5  2FDF               	goto	i1l8065
 18838                           
 18839                           ;Dimmer_B1.c: 1619: DimmerIntr2.Calculate = 0;
 18840  1FD6  13BF               	bcf	(_DimmerIntr2^(0+256)+1),7
 18841                           
 18842                           ;Dimmer_B1.c: 1620: DimmerIntr2.TuneEnd_Value = DimmerIntr2.TuneEnd;
 18843  1FD7  0849               	movf	(_DimmerIntr2^(0+256)+11),w
 18844  1FD8  00F0               	movwf	??_DimmerLights_IOC_2
 18845  1FD9  0870               	movf	??_DimmerLights_IOC_2,w
 18846  1FDA  00CD               	movwf	(_DimmerIntr2^(0+256)+15)
 18847                           
 18848                           ;Dimmer_B1.c: 1621: DimmerIntr2.TuneValue2_Value = DimmerIntr2.TuneValue2;
 18849  1FDB  0846               	movf	(_DimmerIntr2^(0+256)+8),w
 18850  1FDC  00F0               	movwf	??_DimmerLights_IOC_2
 18851  1FDD  0870               	movf	??_DimmerLights_IOC_2,w
 18852  1FDE  00CA               	movwf	(_DimmerIntr2^(0+256)+12)
 18853  1FDF                     i1l8065:	
 18854                           
 18855                           ;Dimmer_B1.c: 1622: }
 18856                           ;Dimmer_B1.c: 1633: DimmerIntr2.Status = RB2 == 1 ? 1 : 0;
 18857  1FDF  12BF               	bcf	(_DimmerIntr2^(0+256)+1),5
 18858  1FE0  0020               	movlb	0	; select bank0
 18859  1FE1  1D0D               	btfss	13,2	;volatile
 18860  1FE2  0008               	return
 18861  1FE3  0022               	movlb	2	; select bank2
 18862  1FE4  16BF               	bsf	(_DimmerIntr2^(0+256)+1),5
 18863  1FE5  0008               	return
 18864  1FE6                     __end_of_DimmerLights_IOC_2:	
 18865                           
 18866                           	psect	text133
 18867  1FB2                     __ptext133:	
 18868 ;; *************** function _DimmerLights_IOC_1 *****************
 18869 ;; Defined at:
 18870 ;;		line 1463 in file "../src/Dimmer_B1.c"
 18871 ;; Parameters:    Size  Location     Type
 18872 ;;		None
 18873 ;; Auto vars:     Size  Location     Type
 18874 ;;		None
 18875 ;; Return value:  Size  Location     Type
 18876 ;;		None               void
 18877 ;; Registers used:
 18878 ;;		wreg, status,2
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18888 ;;Total ram usage:        1 bytes
 18889 ;; Hardware stack levels used:    1
 18890 ;; This function calls:
 18891 ;;		Nothing
 18892 ;; This function is called by:
 18893 ;;		_IOC_ISR
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           
 18898                           ;psect for function _DimmerLights_IOC_1
 18899  1FB2                     _DimmerLights_IOC_1:	
 18900                           
 18901                           ;Dimmer_B1.c: 1482: if (DimmerIntr1.GO == 0) {
 18902                           
 18903                           ;incstack = 0
 18904                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2]
 18905  1FB2  0021               	movlb	1	; select bank1
 18906  1FB3  1820               	btfsc	_DimmerIntr1^(0+128),0
 18907  1FB4  0008               	return
 18908                           
 18909                           ;Dimmer_B1.c: 1486: DimmerIntr1.Count = 0;
 18910  1FB5  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 18911                           
 18912                           ;Dimmer_B1.c: 1487: DimmerIntr1.GO = 1;
 18913  1FB6  1420               	bsf	_DimmerIntr1^(0+128),0
 18914                           
 18915                           ;Dimmer_B1.c: 1489: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 18916  1FB7  1E20               	btfss	_DimmerIntr1^(0+128),4
 18917  1FB8  1B20               	btfsc	_DimmerIntr1^(0+128),6
 18918                           
 18919                           ;Dimmer_B1.c: 1490: DimmerIntr1.Tune = 1;
 18920  1FB9  14A0               	bsf	_DimmerIntr1^(0+128),1
 18921                           
 18922                           ;Dimmer_B1.c: 1491: }
 18923                           ;Dimmer_B1.c: 1493: if (DimmerIntr1.Calculate == 1) {
 18924  1FBA  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 18925  1FBB  2FC5               	goto	i1l8029
 18926                           
 18927                           ;Dimmer_B1.c: 1494: DimmerIntr1.Calculate = 0;
 18928  1FBC  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 18929                           
 18930                           ;Dimmer_B1.c: 1495: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 18931  1FBD  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 18932  1FBE  00F0               	movwf	??_DimmerLights_IOC_1
 18933  1FBF  0870               	movf	??_DimmerLights_IOC_1,w
 18934  1FC0  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 18935                           
 18936                           ;Dimmer_B1.c: 1496: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 18937  1FC1  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 18938  1FC2  00F0               	movwf	??_DimmerLights_IOC_1
 18939  1FC3  0870               	movf	??_DimmerLights_IOC_1,w
 18940  1FC4  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 18941  1FC5                     i1l8029:	
 18942                           
 18943                           ;Dimmer_B1.c: 1497: }
 18944                           ;Dimmer_B1.c: 1508: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 18945  1FC5  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 18946  1FC6  0020               	movlb	0	; select bank0
 18947  1FC7  1D0D               	btfss	13,2	;volatile
 18948  1FC8  0008               	return
 18949  1FC9  0021               	movlb	1	; select bank1
 18950  1FCA  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 18951  1FCB  0008               	return
 18952  1FCC                     __end_of_DimmerLights_IOC_1:	
 18953  007E                     btemp	set	126	;btemp
 18954  007E                     pic14e$flags	set	126
 18955  007E                     wtemp	set	126
 18956  007E                     wtemp0	set	126
 18957  0080                     wtemp1	set	128
 18958  0082                     wtemp2	set	130
 18959  0084                     wtemp3	set	132
 18960  0086                     wtemp4	set	134
 18961  0088                     wtemp5	set	136
 18962  007F                     wtemp6	set	127
 18963  007E                     ttemp	set	126
 18964  007E                     ttemp0	set	126
 18965  0081                     ttemp1	set	129
 18966  0084                     ttemp2	set	132
 18967  0087                     ttemp3	set	135
 18968  007F                     ttemp4	set	127
 18969  007E                     ltemp	set	126
 18970  007E                     ltemp0	set	126
 18971  0082                     ltemp1	set	130
 18972  0086                     ltemp2	set	134
 18973  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         285
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     72      79
    BANK1            80      0      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      4      73
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK3[9]), Sw2(BANK3[9]), Sw1(BANK3[9]), 

    LED	PTR struct LED size(2) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED3(BANK3[4]), VarLED2(BANK3[4]), 
		 -> VarLED1(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights3(BANK3[9]), DimmerLights2(BANK2[9]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK4[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw3(BANK3[5]), DlySw2(BANK3[5]), DlySw1(BANK3[5]), 


Critical Paths under _main in COMMON

    _main->_Flash_Memory_Main
    _my_MainTimer->_setBuz
    _setSw_Main->_setBuz
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _setLog_Code->_setBuz
    _setRF_AdjControl->_getDimmerLights_Status
    _setRFSW_Control->_setBuz
    _setRFSW_AdjControl->_setBuz
    _setDimmerLights_DimmingRun->_DimmerLights_SelectPointer
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _CC2500_PowerOnInitial->_CC2500_PowerRST
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setLED
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _setDimmerLights_Dimming->_setBuz
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _getDimmerLights_ValueToPercent->___awtoft
    _getDimmerLights_PercentToValue->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _TMR1_ISR->_DimmerLights_TMR_2
    _TMR1_ISR->_DimmerLights_TMR_3
    _IOC_ISR->_DimmerLights_IOC_1
    _IOC_ISR->_DimmerLights_IOC_2
    _IOC_ISR->_DimmerLights_IOC_3

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _setLog_Code->_setProductData
    _setControl_Lights_Table->_setRFSW_Control
    _setRFSW_Control->_setDelayOff_GO
    _setRFSW_AdjControl->_setDimmerIntr_MaxmumValue
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setRF_DimmerLights
    _setRF_DimmerLights->_setProductData
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  152182
                                              0 BANK4      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1601
                                              6 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4637
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4637
                                             13 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
                             _setBuz
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0     124
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1310
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1310
                                              5 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   52350
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           2     2      0   52350
                                             70 BANK0      2     2      0
              _CC2500_PowerOnInitial
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                            ___lwdiv
                          _getBuz_GO
                    _getRF_KeyStatus
                          _getRxData
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   47518
                                             68 BANK0      2     2      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0    4181
                                             57 BANK0      1     1      0
                             _setBuz
                 _setMemory_LoopSave
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setMemory_LoopSave                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0   43255
             _getDimmerLights_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
                 _setRFSW_AdjControl
                    _setRFSW_Control
                   _setRF_AdjControl
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRF_AdjControl                                     4     4      0     585
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0   11057
                                             65 BANK0      3     3      0
             _getDimmerLights_Status
                             _setBuz
                     _setDelayOff_GO
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   4     4      0   26104
                                             59 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
                             _setBuz
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
         _setDimmerLights_DimmingRun
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                   _setMemory_Modify
                     _setProductData
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setDimmerLights_DimmingRun                           3     2      1     261
                                              4 COMMON     3     2      1
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getRF_KeyStatus                                      3     3      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getBuz_GO                                            6     4      2      23
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     877
                                              2 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     330
                                              6 COMMON     2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     560
                                              6 COMMON     2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     184
                                              4 COMMON     2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CC2500_PowerOnInitial                                0     0      0    2850
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (4) _CC2500_SIDLEMode                                     0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_PowerRST                                      1     1      0     544
                                              8 COMMON     1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitSetREG                                    4     4      0     698
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitPATable                                   3     3      0     608
                                              7 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteREG                                      3     2      1     422
                                              4 COMMON     3     2      1
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_FrequencyCabr                                 0     0      0     586
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (5) _DelayTime_1us                                        6     4      2     448
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearTXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearRXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteCommand                                  2     2      0     138
                                              4 COMMON     2     2      0
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _setRF_TimeoutCleared                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RF_Timeout_Counter                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteByte                                     2     2      0      96
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     279
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     279
                                              3 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1465
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1465
                                              5 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    1480
                                              5 COMMON     1     1      0
                                              0 BANK0      4     4      0
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             2     2      0      34
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   49998
       _DimmerLights_DimmingFunction
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   49866
                                             69 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   31576
                                             65 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
                             _setLED
                     _setProductData
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1279
                                              3 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     488
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_Dimming_RF                             3     2      1     399
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     221
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     310
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _setDelayOff_GO                                       8     6      2    3563
                                             57 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _setCmd_Status                                        3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _getMain_All_LightsStatus                             1     1      0     105
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0     111
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   17612
                                             62 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
                     _setProductData
                 _setRF_DimmerLights
                 _setRF_TransceiveGO
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _setRF_TransceiveGO                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerLights                                   5     4      1    2983
                                             57 BANK0      5     4      1
                     _setProductData
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_MaxmumValue                            3     2      1     488
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     488
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      92
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      6     6      0     186
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     132
                                              4 COMMON     2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   26411
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0   26411
                                             56 BANK0      1     1      0
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (5) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       4     4      0    8712
                                             50 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_PercentToValue                       6     6      0   17677
                                             50 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     430
                                             36 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    4030
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             16    10      6    4386
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             13     7      6    4935
                                             23 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             6     3      3    3758
                                              7 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    3330
                                              2 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    5458
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    5458
                                             57 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setProductData                                       3     2      1    2536
                                             54 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 7     7      0    2364
                                              6 BANK0      7     7      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1601
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0     136
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0     124
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_Status                               2     2      0     158
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      93
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      88
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      88
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (7) _DelayOffPointSelect                                  2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0       0
                 _DimmerLights_TMR_1
                 _DimmerLights_TMR_2
                 _DimmerLights_TMR_3
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_3                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOC_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_IOC_2
                 _DimmerLights_IOC_3
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_3                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _RF_Timeout_Counter
       _setRF_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setRF_TransceiveGO
         _setTxData
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
   _Exception_Main
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_PowerOnInitial
         _CC2500_ClearRXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_ClearTXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_FrequencyCabr
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
           _DelayTime_1us
         _CC2500_InitPATable
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_InitSetREG
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_PowerRST
           _CC2500_WriteByte
           _DelayTime_1us
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_SIDLEMode
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _RF_RxDisable
       ___lwdiv
       _getBuz_GO
       _getRF_KeyStatus
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _getDimmerLights_Status
             _DimmerLights_SelectPointer
           _getMain_All_LightsStatus
           _setCmd_Status
           _setDimmerLights_SwOff
             _DimmerLights_SelectPointer
           _setDimmerLights_SwOn
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _setBuz
               ___awdiv
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
           _setRFSW_AdjControl
             _getDimmerLights_PercentToValue
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDimmerIntr_Dimming_RF
             _setDimmerIntr_MaxmumValue
               _getDimmerLights_PercentToValue (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setDimmerLights_DimmingRun
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setMemory_Modify
             _setProductData
               _getDimmerLights_ValueToPercent (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setTxData
           _setRFSW_Control
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDelayOff_GO
               _DelayOffPointSelect
               ___bmul
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setRF_DimmerLights
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
           _setRF_AdjControl
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
           _setTxData
         _setLog_Code
           _setBuz
             ___awdiv
           _setMemory_LoopSave
           _setMemory_Modify
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
       _setData
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setRF_Learn
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
     _DimmerLights_IOC_2
     _DimmerLights_IOC_3
   _TMR1_ISR
     _DimmerLights_TMR_1
     _DimmerLights_TMR_2
     _DimmerLights_TMR_3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      4      49      13       91.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     194      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     194      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Mar 27 17:06:12 2015

                    __size_of_Switch_Main 000F                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 1EE7                            ___bmul@product 0074  
                                      _RD 0CA8                   __end_of_CC2500_WriteREG 11D5  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 01A0                                        _Sw 006C  
                  __end_of_setDelayOff_GO 0D0C                              ___ftadd@exp1 0043  
                            ___ftadd@exp2 0042                    setRF_AdjControl@status 0020  
                __size_of_getRF_KeyStatus 000F                      _setDimmerLights_Main 0A19  
                            ___ftadd@sign 0041                                       l120 1717  
                                     l106 087F                                       l116 171D  
                                     l108 0891                                       l117 1719  
                                     l118 1709                      _setDimmerLights_SwOn 0766  
                                     l343 1EC8                                       l344 1EC9  
                                     l275 0B87                                       l615 0C10  
                                     l387 12C8                                       l809 10F5  
                                     l973 04EE                                       _GIE 005F  
                                     _CRC 00DF                                       _RA0 0060  
                                     _RB0 0068      __size_of_DimmerLights_Initialization 000F  
                                     _RB1 0069                                       _RA3 0063  
                                     _RC0 0070                                       _RB2 006A  
                                     _RA4 0064                                       _LED 007A  
                                     _RC1 0071                                       _RB3 006B  
                                     _RC2 0072                                       _RB4 006C  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _RC4 0074  
                                     _RC5 0075                                       _RC6 0076  
                                     _RC7 0077                                       _RF1 00B0  
                                     _ISR 0004                                       _WDT 00DD  
                                     _Cmd 0068              getDimmerLights_Status@lights 0074  
                                     _Sw1 01BE                                       _Sw2 01C7  
                                     _Sw3 01D0                ??_setDimmerIntr_Dimming_RF 0073  
              ??_setDimmerIntr_Dimming_Sw 0073           setDimmerIntr_Dimming_RF@command 0072  
                __end_of_CC2500_WriteByte 1ED2                     _Buzzer_Initialization 1C9C  
                         __end_of_ADC_Set 1CE0                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0075  
     __end_of_setDimmerIntr_ControlStatus 1556               _setDimmerIntr_ControlStatus 1519  
                       ??_getSw_KeyStatus 0072                                      ?_ISR 0070  
                            ___ftdiv@cntr 0031                           __end_of_IOC_ISR 1D6F  
                   _setDimmerLights_OnOff 0473          setDimmerLights_DimmingRun@lights 0076  
                            ___ftdiv@sign 0036                                      l1100 1373  
                                    l1101 1381                                      l1111 02E2  
                                    l1120 030E                                      l1130 033F  
                                    l1114 02F1                                      l1141 038D  
                                    l1125 0341                                      l1109 02F3  
                                    l1143 037D                                      l1127 0330  
                                    l1152 03A6                                      l1136 035C  
                                    l1146 038B                                      l1307 179E  
                                    l1308 17A5                                      l1309 17AC  
                                    l2410 05F1                                      l2414 0559  
                                    l2415 059D                                      l1608 1333  
                                    l2440 1CEC                                      l1618 0E9B  
                                    l2524 0AF6                           __end_of_IOC_Set 1D0E  
                                    l3263 0986                                      l1831 14DC  
                                    l2471 13C0                                      l1840 1EE6  
                                    l1594 160E                                      l2458 0AE1  
                                    l3292 0269                                      l2492 0765  
                                    l3269 099D                                      l1781 16B8  
                                    l2478 06C4                                      l2479 06D3  
                                    l2851 1F2D                                      l1797 1517  
                                    l2875 01C0                                      l6341 110C  
                                    l7133 1542                                      l7141 1246  
                                    l2877 009E                                      l6337 1102  
                                    l8009 0399                                      l7129 152E  
                                    l7145 1251                                      l7155 10E5  
                                    l7251 1E24                     _setDimmerLights_SwOff 1432  
                                    l9013 08F0                                      l9005 08DF  
                                    l6613 0D8A                                      l6605 0D70  
                                    l7245 1E19                                      l6607 0D79  
                                    l7159 10EC                                      l6383 1E78  
                                    l9009 08E8                                      l6609 0D7C  
                                    l7249 1E1F                                      l9201 1F50  
                                    l6803 0AE8                                      l6387 1E7E  
                                    l6901 13E9                                      l6805 0AE9  
                                    l8333 1F32                                      l7471 163F  
                                    l7473 1641                                      l7457 162A  
                                    l6817 0B34                                      l6809 0AEE  
                                    l6761 0D02                                      l8337 1F38  
                                    l6579 0D25                                      l7459 162C  
                                    l6923 1ED4                                      l6747 0CC2  
                                    l6597 0D55                                      l7485 1651  
                                    l6781 1224                                      l6757 0CF0  
                                    l8439 16F5                                      l6599 0D63  
                                    l7487 1655                                      l6927 1EE1  
                                    l6871 12D9                                      l7913 02E4  
                                    l6785 122F                                      l6793 156B  
                                    l6873 12E4                                      l6857 1F5F  
                                    l7931 030F                                      l6859 1F63  
                                    l7667 1DD2                                      l7755 115F  
                                    l7925 0300                                      l9197 1F48  
                                    l6797 157F                                      l7773 11EB  
                   _myMain_Initialization 1DE7                                      l7759 1169  
                                    l6897 13D7                                      l7777 11F4  
                                    l7769 11E1                                      l7955 0332  
                                    l7973 035D                                      l9821 0E94  
                                    l9813 0E34                                      l7967 034E  
                                    l9639 131E                                      l9807 0E20  
                                    _CFGS 0CAE                                      l8981 08AE  
                                    l7997 037F                              __CFG_WDTE$ON 0000  
                                    l8987 08B9                                      l9795 1DB4  
                                    l8997 08C1                                      l8999 08CD  
                                    _FREE 0CAC                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u6005 0CCE                                      _PEIE 005E  
                                    u5615 0D2C                                      u6175 12CE  
                                    u5645 0D56                                      u7255 1F20  
                                    u5675 0D71                                      u9625 08C4  
                                    u9645 08CE                                      u9655 08D8  
                                    u9665 08E0                                      u8795 16EB  
                                    _LWLO 0CAD                                      _RSSI 00E2  
                                    _WREN 0CAA                                      _WPUB 020D  
      __end_of_setDimmerLights_DimmingRun 1F99                _setDimmerLights_DimmingRun 1F81  
                                    _Buz1 00CC                                      _main 169A  
                            ___ftpack@arg 0072                       __end_of_DlyOff_Main 0C17  
                         __end_of_RF_Main 1CA8                              ___ftpack@exp 0075  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_of_WDT_Set 07FF  
                                    ltemp 007E             __size_of_setRF_Initialization 000B  
                                    start 001F                                      ttemp 007E  
                                    wtemp 007E         setDimmerLights_SwOn@dimmingStatus 0027  
    __end_of_DimmerLights_DimmingFunction 03A8     __size_of_DimmerLights_DimmingFunction 00E8  
            _DimmerLights_DimmingFunction 02C0                __end_of_setRFSW_AdjControl 0E1A  
                       ___bmul@multiplier 0075                              ___ftmul@cntr 0035  
                            ___ftmul@sign 0036      _getDimmerLights_Allow_Condition$2624 0073  
    _getDimmerLights_Allow_Condition$2625 0074      _getDimmerLights_Allow_Condition$2626 0075  
                                   ??_ISR 0071                              ___fttol@exp1 0051  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004D  
       setDimmerLights_DimmingRun@command 0074   __end_of_getDimmerLights_Allow_Condition 1657  
__size_of_getDimmerLights_Allow_Condition 0043         ??_getDimmerLights_Allow_Condition 0072  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 1614  
                  _getDimmerLights_Status 1D6F                          __end_of_LED_Main 1E46  
                              _DimmerIntr 00E0                                     l10211 0961  
                                   l10027 042A                                     l10221 098B  
                                   l10213 096C                                     l10053 15ED  
                                   l10223 0993                                     l10215 0971  
                                   l10207 095A                                     l11023 04AD  
                                   l11111 0AAD                                     l10321 0248  
                                   l11025 04C2                                     l11033 04D6  
                                   l10243 112A                                     l10315 0235  
                                   l11115 0AB6                                     l10333 027B  
                                   l10317 023F                                     l10309 0222  
                                   l10421 0FBC                                     l10405 0F79  
                                   l11045 04FC                                     l11053 0506  
                                   l11029 04CC                                     l10255 119E  
                                   l10247 1133                                     l10239 1121  
                                   l10511 07A1                                     l10327 025B  
                                   l10319 0244                                     l11215 0A3F  
                                   l11303 05AC                                     l10337 028D  
                                   l10329 0265                                     l10433 0FD8  
                                   l10417 0FB4                                     l11049 0502  
                                   l11217 0A45                                     l11145 1422  
                                   l11137 1404                                     l10259 11A8  
                                   l10523 07B3                                     l10275 1201  
                                   l10347 02A8                                     l10291 01F9  
                                   l10363 0ED0                                     l10611 1275  
                                   l10603 1265                                     l11227 0A6B  
                                   l11139 1410                                     l10509 079E  
                                   l10525 07B8                                     l10357 0EBA  
                                   l10429 0FD0                                     l11077 17D0  
                                   l11069 0533                                     l11229 0A71  
                                   l11149 142B                                     l11317 05D6  
                                   l10551 145F                                     l10535 07DE  
                                   l10287 01F2                                     l10607 126D  
                                   l10537 07E4                                     l10297 0208  
                                   l10385 0F2A                                     l10377 0F11  
                                   l10801 0C31                                     l10641 0DAA  
                                   l11329 05EA                                     l10539 07EE  
                                   l10811 0C41                                     l10571 1FA4  
                                   l10723 1684                                     l11099 0A94  
                                   l10805 0C37                                     l10733 1694  
                                   l10717 167B                                     l10901 0B58  
                                   l10645 0DAF                                     l10629 15C6  
                                   l11365 00CB                                     l11349 0088  
                                   l10495 0787                                     l10399 0F63  
                                   l10831 0C6B                                     l10815 0C47  
                                   l10823 0C53                                     l10575 1FAA  
                                   l10591 11C5                                     l10727 168B  
                                   l10719 167E                                     l10903 0B5B  
                                   l11375 00FD                                     l11463 14F7  
                   ?_setDimmerLights_Main 0070                                     l10497 078A  
                                   l10569 1FA1                                     l10585 11BC  
                                   l10729 168E                                     l10921 0B70  
                                   l10657 0E06                                     l11289 0598  
                                   l10835 0C72                                     l10843 0C7E  
                                   l10819 0C4D                                     l10587 11BF  
                                   l10691 128A                                     l10931 0B96  
                                   l10907 0B61                                     l10933 0B9A  
                                   l10925 0B8D                                     l11389 013B  
                                   l10839 0C78                                     l10695 1290  
                                   l10935 0B9D                                     l10927 0B90  
                                   l10679 1494                                     l10871 0703  
                                   l10855 06AF                                     l11399 016D  
                                   l10793 0C25                                     l10689 1287  
                                   l10881 0730                                     l10865 06E2  
                                   l11499 14C3                                     l10963 09D0  
                                   l10939 0BA3                                     l10883 0734  
                                   l10875 0724                                     l10867 06E8  
                                   l10797 0C2B                                     l10981 09F7  
                                   l10957 09C7                                     l10885 0738  
                                   l10877 0728                                     l10893 0744  
                                   l10959 09CA                                     l10887 073C  
                                   l10879 072C                                     l10889 0740  
                                   l10979 09E0                           ?_setDelayOff_GO 0059  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 0265  
                         __end_of___awdiv 08F7                           __end_of___ftadd 02C0  
                         __end_of___ftdiv 0F4C                           __end_of___ftmul 1000  
                                   u12005 1EF6                                     u11235 1605  
                         ___awdiv@divisor 0072                                     u11415 0967  
                                   _T1CON 0018                                     u11435 0981  
                         __end_of___fttol 0D93                                     u11455 098E  
                                   u13155 1407                                     u11485 09A5  
                                   u11725 0249                                     u13175 1411  
                                   u11665 0223                                     u11825 0EE2  
                                   u11905 0F85                                     u13185 141B  
                                   u11755 025C                                     u11835 0EF2  
                                   u11915 0F95                                     u13195 1423  
                                   u11845 0F12                                     u11695 0236  
                                   u11855 0F21                                     u11935 0FBD  
                                   u11865 0F2B                                     u11945 0FC3  
                                   u13465 0575                                     u13725 150F  
                                   _IOCBF 0396                                     u11975 0FD9  
                                   u13495 05C5                                     u11985 0FDF  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 1432                           ___awdiv@counter 0020  
           __size_of_CC2500_FrequencyCabr 000B                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                        setRF_Learn@command 0073  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 1F26  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 176A  
 __size_of_getDimmerLights_ValueToPercent 0046            _getDimmerLights_ValueToPercent 1724  
                                   _Light 00E1                          __end_of_TMR1_ISR 12C4  
                 __size_of_setProductData 000C              __size_of_CC2500_WriteCommand 0019  
                        __end_of_TMR1_Set 1D60        DimmerLights_DimmingFunction@lights 0075  
                           ___awtoft@sign 0026                             ___ftpack@sign 0076  
                         __end_of_setData 0850               __size_of_CC2500_ClearRXFIFO 0004  
                           ??_Buzzer_Main 0072                          __end_of_WDT_Main 1E76  
             __size_of_CC2500_ClearTXFIFO 0004                       CC2500_RxData@loop_f 0077  
                          __pbitbssCOMMON 03C8                            __CFG_BOREN$OFF 0000  
                      Flash_Memory_Read@i 0073                          ?_CC2500_ReadByte 0070  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 000F             __end_of_setLED_Initialization 1DC9  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                              ?_setRF_Learn 0070  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                     _getAll_Sw_KeyStatus 1DAB                        _setRF_DimmerLights 0AE3  
             __size_of_Flash_Memory_Write 002A                         ?_CC2500_SIDLEMode 0070  
              __size_of_RF_Initialization 0003          __size_of_DelayOff_Initialization 000C  
             __size_of_setRF_TransceiveGO 0010                    ??_Flash_Memory_Erasing 0072  
             ??_setDimmerLights_DimmingOn 0074                        ??_CC2500_SIDLEMode 0076  
                         __initialization 0021                          ?_CC2500_PowerRST 0070  
           ?_DimmerLights_DimmingFunction 0070                         ?_setMemory_Modify 0070  
                 __size_of_getDelayOff_GO 000F                              __end_of_main 16DE  
                     ?_setRF_DimmerLights 0059                          __end_of_Fosc_Set 1CAC  
          getMain_All_LightsStatus@status 0072                        ??_setMemory_Modify 0072  
            setDimmerLights_OnOff@command 0061                            _Exception_Main 14A3  
                        ?_CC2500_WriteREG 0074         __end_of_DimmerIntr_ValueCalculate 1390  
                               ??_ADC_Set 0072                      _setSw_Initialization 1CE0  
                                  ??_main 0079                             ___fttol@sign1 004C  
                    ?_getAll_Sw_KeyStatus 0070                              ?_setLog_Code 0070  
             ?_setDimmerIntr_DimmingValue 0058              ??_DimmerLights_SelectPointer 0072  
                 _setControl_Lights_Table 06AE                            _setMemory_Data 1CF8  
                  ?_Buzzer_Initialization 0070                   ??_DlyOff_Initialization 0074  
                              _Receive_OK 03C8        setDimmerIntr_ControlStatus@command 0072  
                 _setDimmerLights_Dimming 17B4                                 ??_IOC_ISR 0071  
                               ??_IOC_Set 0072                               _DimmerIntr1 00A0  
                             _DimmerIntr2 013E                               _DimmerIntr3 014E  
                _getMain_All_LightsStatus 1F3B                  __size_of_setRFSW_Control 0040  
                      _RF_Timeout_Counter 1EE7                   ??_Switch_Initialization 0076  
                  ?_setDimmerLights_OnOff 0061                      ??_setRF_DimmerLights 005A  
                       ??_getRF_KeyStatus 0072                    ?_setDimmerLights_SwOff 0070  
                             _DlyOff_Main 0BAF                    ?_myMain_Initialization 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
        __end_of_getDimmerIntr_Dimming_Sw 1135                                 ??_RF_Main 0079  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                                 ??_WDT_Set 0072  
                        __end_of___awtoft 1218                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 09B5                  _getMain_All_Error_Status 1C9F  
                                  _IOCBF2 1CB2                                    i1l1557 001A  
                                  i1l8101 1FF9                                    i1l8041 1082  
                                  i1l8113 10B6                                    i1l8029 1FC5  
                                  i1l8065 1FDF                                    i1l8077 109C  
                                  i1l8503 1D6B                                    i1l8493 12BD  
                                  i1l8881 0012                                    _FVRCON 0117  
    getDimmerLights_Allow_Condition@allow 0077                                    _PMADRH 0192  
                                  _PMADRL 0191                                    _PMDATH 0194  
                                  _PMDATL 0193                       ?_RF_Timeout_Counter 0070  
                                  _PMCON2 0196                                    _OSCCON 0099  
                                  _TMR1IE 0488                                    _TMR1IF 0088  
                                  _IO_Set 10C2                                    _WDTCON 0097  
    __end_of_setDimmerLights_DimmingClose 1DAB     __size_of_setDimmerLights_DimmingClose 000F  
            _setDimmerLights_DimmingClose 1D9C                                    u885_25 12B8  
                      DelayTime_1us@count 0072                        setRF_AdjControl@sw 0022  
          __size_of_CC2500_PowerOnInitial 0015               ??_setDimmerIntr_MaxmumValue 0059  
           __end_of_CC2500_PowerOnInitial 1F11                                    _Dimmer 01B0  
                                  _DlySw1 01D9                                    _DlySw2 01DE  
                                  _DlySw3 01E3                          _setRF_AdjControl 146A  
           __size_of_setRF_TimeoutCleared 0004                     __end_of_getCmd_Status 1E26  
              __end_of_Mcu_Initialization 1EAA                       __end_of_Buzzer_Main 1724  
                                  _Memory 0220                                    _Timer1 00D8  
                                  ___bmul 1E76                    __end_of_Exception_Main 14DD  
                    Exception_Main@lights 0020                                 ??___awdiv 0076  
                               ??___ftadd 003D              __size_of_DelayOffPointSelect 001F  
                               ??___ftdiv 002D                                 ??___ftmul 002D  
                               ??___fttol 0048              ?_Flash_Memory_Initialization 0070  
                               ??___lwdiv 0076                    ??_setDimmerLights_Main 0079  
                                  _r_data 00E6                      Exception_Main@status 0022  
                                  _s_data 00E7                    ??_setDimmerLights_SwOn 0026  
                                  _setLED 0C17                                    _myMain 00BF  
                    ??_RF_Timeout_Counter 0072                    __end_of_setMemory_Data 1D03  
                   ?_setSw_Initialization 0070                          ___awdiv@quotient 0022  
                                  _setBuz 0850          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 1593          __end_of_setDimmerIntr_Dimming_Sw 13FB  
                   ___ftmul@f3_as_product 0032                 _setDimmerLights_DimmingOn 12E9  
                               ??_setData 0072                  Flash_Memory_Read@address 0074  
                        ?_Timeout_Counter 0070                __end_of_setMemory_LoopSave 1E66  
             __size_of_DimmerLights_IOC_1 001A               __size_of_DimmerLights_IOC_2 001A  
             __size_of_DimmerLights_IOC_3 001A                     __end_of_SwPointSelect 1173  
             __size_of_DimmerLights_TMR_1 001A               __size_of_DimmerLights_TMR_2 001A  
             __size_of_DimmerLights_TMR_3 001A              __size_of_Flash_Memory_Modify 0089  
                 __size_of_LedPointSelect 0022           setDimmerIntr_Dimming_Sw@command 0072  
                     Flash_Memory_Write@i 0073              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 1F26               __size_of_CC2500_InitPATable 001F  
                     CC2500_TxData@loop_e 0077          __end_of_CC2500_registers_address 102F  
                 __end_of__initialization 0055           setDimmerIntr_DimmingValue@value 0058  
         getDimmerIntr_DimmingValue@value 0073                                 ?_LED_Main 0070  
                              ___ftadd@f1 0037                                ___ftadd@f2 003A  
                    _getRF_KeyStatus$5789 0074                             ?_my_MainTimer 0070  
               _setDimmerLights_SwOn$2561 0028                 _setDimmerLights_SwOn$2570 0029  
               _setDimmerLights_SwOn$2571 002A                                ___ftdiv@f1 002A  
                              ___ftdiv@f2 0027                                ___ftdiv@f3 0032  
           ?_setDimmerLights_DimmingClose 0070                                ___awtoft@c 0023  
                     ___bmul@multiplicand 0072              ?_DimmerLights_Initialization 0070  
                              ___ftmul@f1 0027                                ___ftmul@f2 002A  
              ?_DimmerIntr_Initialization 0070                                ___fttol@f1 0044  
                          __pcstackCOMMON 0070                           ?_Exception_Main 0070  
                            __pidataBANK4 1173                                 ?_TMR1_ISR 0070  
                               ?_TMR1_Set 0070                 setMemory_LoopSave@command 0073  
                      _LED_Initialization 1E26                           _getSw_KeyStatus 11D5  
               ??_setControl_Lights_Table 0079                        getRF_KeyStatus@key 0073  
                         ?_setMemory_Data 0072            ??_DimmerLights_DimmingFunction 0074  
        ??_getDimmerLights_PercentToValue 0052           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 005F             ??_Flash_Memory_Initialization 0076  
                               ?_WDT_Main 0070         setDimmerIntr_ControlStatus@lights 0074  
                      __size_of_getBuz_GO 0010                 _setDimmerIntr_MaxmumValue 1218  
              __end_of_set_TimeoutCleared 1CC6           setDimmerIntr_MaxmumValue@lights 005A  
                      __size_of_getRxData 0065                       ?_LED_Initialization 0070  
                       ?_CC2500_WriteByte 0070                            _setProductData 1D30  
                    __size_of_setLED_Main 004A                        ??_CC2500_WriteByte 0072  
                              __pbssBANK0 0068                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 16DE                         ??_setRFSW_Control 0061  
             ?_setDimmerLights_DimmingRun 0074                                   ?_IO_Set 0070  
                          ??_my_MainTimer 0026                                ??_LED_Main 0076  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 1D24  
                           ??_Switch_Main 0079                            DelayTime_1us@i 0074  
                          DelayTime_1us@j 0076                      ??_LED_Initialization 0076  
                            _DimmerLights 006A                         LedPointSelect@led 0072  
                  __size_of_DelayOff_Main 000C                      __size_of_setRF_Learn 0011  
                             setBuz@count 0078                   ?_getDimmerLights_Status 0070  
                              __pmaintext 169A                            _getDelayOff_GO 1D8D  
                     _CC2500_WriteCommand 1F99                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005B         __end_of_DimmerIntr_Initialization 06AE  
           ??_DimmerLights_Initialization 0079                                ??_TMR1_ISR 0071  
       __size_of_getDimmerIntr_Dimming_Sw 001F                                ??_TMR1_Set 0072  
                              __pintentry 0004                    ??_setSw_Initialization 0075  
               ?_getDimmerIntr_Dimming_Sw 0070                        __size_of_setTxData 0007  
             ??_DimmerIntr_ValueCalculate 0072                                   ?_setLED 0073  
                  __size_of_DelayTime_1us 0025                                   _ADC_Set 1CD9  
                                 ?_setBuz 0024                                 ?___awtoft 0023  
                               ?___ftpack 0072        __end_of_DimmerLights_SelectPointer 11B4  
              _DimmerLights_SelectPointer 1193                                ??_WDT_Main 0072  
            __end_of_setRF_Initialization 1D19                        _setRFSW_AdjControl 0D93  
                  __end_of_setProductData 1D3C             setDimmerLights_Dimming@lights 0061  
                                 _IOC_ISR 1D60                                   _IOC_Set 1D03  
                    __size_of_setLog_Code 0034             setDimmerLights_Dimming@status 005E  
   getDimmerLights_Allow_Condition@lights 0076                      ?_CC2500_WriteCommand 0070  
                       _Flash_Memory_Main 15D3                         _Flash_Memory_Read 1EAA  
                  __size_of_CC2500_RxData 0064                    __size_of_CC2500_TxData 0066  
                     ?_setRFSW_AdjControl 0070                                   _RF_Data 0120  
                                 _RF_Main 1CA5                        ?_Flash_Memory_Main 0070  
                      ?_Flash_Memory_Read 0070                                   _WDT_Set 07F6  
         __end_of_setControl_Lights_Table 0766                           setRF_Main@error 0067  
                  __size_of_setCmd_Status 0015                                ??_Fosc_Set 0072  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 1800  
                     getCmd_Status@number 0072              __end_of_CC2500_FrequencyCabr 1D24  
                         __size_of_IO_Set 001A                       setCmd_Status@number 0074  
       __size_of_setDimmerIntr_Dimming_RF 003D         __size_of_setDimmerIntr_Dimming_Sw 0037  
                       __end_of_getBuz_GO 1E56                 ?_setDimmerIntr_Dimming_RF 0072  
                     ??_Flash_Memory_Main 0078                 ?_setDimmerIntr_Dimming_Sw 0072  
                     ??_Flash_Memory_Read 0072                    __end_of_getDelayOff_GO 1D9C  
                                 _VarLED1 00EC                                   _VarLED2 01E8  
                                 _VarLED3 01EC            __end_of_getDimmerLights_Status 1D7E  
                       __end_of_getRxData 0AE3                   __end_of_getSw_KeyStatus 11F6  
                _CC2500_registers_address 1000                      ??_setRFSW_AdjControl 005B  
                         __size_of___bmul 0011                       setProductData@value 0056  
                                 ___awdiv 08A3            ??_setDimmerLights_DimmingClose 0075  
                                 ___ftadd 01CA                                   ___ftdiv 0EA3  
                                 ___ftmul 0F4C                                   ___fttol 0D0C  
                     __end_of_Switch_Main 1DE7                                   ___lwdiv 13FB  
              ??_getMain_All_LightsStatus 0072                   ??_Buzzer_Initialization 0072  
                         _getRF_KeyStatus 1DC9                                ??___awtoft 0077  
                              ??___ftpack 0020                           __size_of_setLED 0071  
                    setRFSW_AdjControl@sw 005E           DimmerIntr_ValueCalculate@lights 0073  
                         __size_of_setBuz 0053                                   __ptext1 14DD  
                                 __ptext2 1DE7                                   __ptext3 1E66  
                                 __ptext4 0002                                   __ptext5 1DD8  
                                 __ptext6 0059                                   __ptext7 1E87  
                                 __ptext8 12E9                                   __ptext9 11D5  
               __size_of_CC2500_SIDLEMode 0004                              __size_of_ISR 001B  
              ??_getMain_All_Error_Status 0072                   ??_setDimmerLights_OnOff 0062  
                         ?_setProductData 0056                 __end_of_Flash_Memory_Main 1614  
               __end_of_Flash_Memory_Read 1EBE                   ??_setDimmerLights_SwOff 0074  
                              _setRF_Main 0536                   ??_myMain_Initialization 0072  
                           _DelayOff_Main 1D3C                  __end_of_setRF_AdjControl 14A3  
                       _DimmerLights_Main 1F69                                   _setData 0800  
          __size_of_DlyOff_Initialization 0005                     ??_CC2500_WriteCommand 0074  
               __size_of_setMemory_Modify 0010             __end_of_DlyOff_Initialization 1CC1  
              __end_of_CC2500_ClearRXFIFO 1CB4                __end_of_CC2500_ClearTXFIFO 1CB8  
                            ?_DlyOff_Main 0070                        ?_DimmerLights_Main 0070  
                                 _product 006E                            _LedPointSelect 125C  
               getAll_Sw_KeyStatus@status 0073                       _DelayOffPointSelect 10F7  
                                 clrloop0 1CCD            __size_of_Switch_Initialization 000C  
               _DimmerIntr_ValueCalculate 1364             __end_of_Switch_Initialization 1074  
                    end_of_initialization 0055                 ??_DelayOff_Initialization 0075  
                       _CC2500_InitSetREG 133A                             _DelayTime_1us 12C4  
                       __end_of_setTxData 1CD9                __end_of_Flash_Memory_Write 133A  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 1CC6  
              __end_of_setRF_TransceiveGO 1E16                        ?_CC2500_InitSetREG 0070  
                     ??_DimmerLights_Main 0079                      Flash_Memory_Read@ret 0075  
                                 initloop 1CC7                                _setSw_Main 0059  
                   CC2500_ReadByte@loop_b 0073                    setDimmerLights_SwOn@sw 002C  
                       _CC2500_ReadStatus 127E                      Flash_Memory_Modify@i 0077  
                   _setLED_Initialization 1DBA                           ?_getDelayOff_GO 0070  
                              getBuz_GO@i 0076                        ?_CC2500_ReadStatus 0070  
                __size_of_CC2500_ReadByte 0017                             _CC2500_RxData 09B5  
                           _CC2500_TxData 0B49                       ??_CC2500_InitSetREG 0077  
           __size_of_Flash_Memory_Erasing 000C                      ?_DelayOffPointSelect 0070  
                     _Flash_Memory_Modify 0E1A                              __pstringtext 1000  
                           _setCmd_Status 1ED2                       _Flash_Memory_Unlock 1CEF  
                     ??_CC2500_ReadStatus 0074                   CC2500_InitSetREG@loop_c 0022  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0075  
                  setSw_Initialization@sw 0075                 __end_of_DimmerLights_Main 1F81  
                      _Mcu_Initialization 1E98                  __size_of_CC2500_PowerRST 0043  
            __end_of_setRF_TimeoutCleared 1CB0                      __end_of_my_MainTimer 1519  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 127E                  __size_of_CC2500_WriteREG 0021  
        setDimmerIntr_DimmingValue@lights 005A          getDimmerIntr_DimmingValue@lights 0074  
               __end_of_CC2500_InitSetREG 1364                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070               __size_of_setRF_DimmerLights 0066  
                          ?_DelayTime_1us 0072                      ?_Flash_Memory_Unlock 0070  
      __size_of_setDimmerIntr_MaxmumValue 0022                 __end_of_CC2500_ReadStatus 12A0  
                           ?_RF_RxDisable 0070            setDimmerIntr_Dimming_RF@lights 0074  
         getMain_All_Error_Status@command 0070                               ___ftdiv@exp 0035  
       __end_of_setDimmerLights_DimmingOn 1310                          ??_Exception_Main 0075  
                          __end_of_IO_Set 10DC                      _setRF_Initialization 1D0E  
                      _setMemory_LoopSave 1E56                               _Switch_Main 1DD8  
                       __size_of_LED_Main 0010                          ?_getSw_KeyStatus 0070  
                          ?_CC2500_RxData 0070                            ?_CC2500_TxData 0070  
                 __end_of_getRF_KeyStatus 1DD8                          ??_setMemory_Data 0073  
                             ___ftmul@exp 0031                     _CC2500_PowerOnInitial 1EFC  
             ??_DimmerIntr_Initialization 0058                      ??_Mcu_Initialization 0073  
             __end_of_getAll_Sw_KeyStatus 1DBA                     ??_DelayOffPointSelect 0072  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0072  
                     ?_setMemory_LoopSave 0070                            __end_of___bmul 1E87  
     __size_of_getDimmerIntr_DimmingValue 001B                      setRF_DimmerLights@on 0059  
                       getSw_KeyStatus@sw 0073               __size_of_RF_Timeout_Counter 0015  
                       __size_of_TMR1_ISR 0024          DimmerLights_SelectPointer@lights 0073  
                       __size_of_TMR1_Set 000C             __size_of_setDimmerLights_Main 0065  
                          __end_of_setLED 0C88             __size_of_setDimmerLights_SwOn 0090  
                          __end_of_setBuz 08A3                __end_of_DimmerLights_IOC_1 1FCC  
              __end_of_DimmerLights_IOC_2 1FE6                __end_of_DimmerLights_IOC_3 2000  
                    _CC2500_FrequencyCabr 1D19                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                               ?_setRF_Main 0070  
                         _setRFSW_Control 1593                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 108E                __end_of_DimmerLights_TMR_2 10A8  
              __end_of_DimmerLights_TMR_3 10C2                       start_initialization 0021  
                         ?_LedPointSelect 0070                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 0010                     ??_Flash_Memory_Modify 0076  
            ?_setDimmerIntr_ControlStatus 0072                __end_of_CC2500_InitPATable 1154  
                    ??_setMemory_LoopSave 0072                     ??_Flash_Memory_Unlock 0072  
                          ??_RF_RxDisable 0072    __end_of_getDimmerLights_PercentToValue 0952  
 __size_of_getDimmerLights_PercentToValue 005B            _getDimmerLights_PercentToValue 08F7  
                            ?_Buzzer_Main 0070       getDimmerLights_PercentToValue@value 0054  
           setRF_AdjControl@dimmingStatus 0021                        _set_TimeoutCleared 1CC1  
       __end_of_setDimmerIntr_MaxmumValue 123A                                  ??_IO_Set 0072  
                __size_of_Timeout_Counter 0015                                 _VarErrLED 00E8  
                             ?_setSw_Main 0070                    ?_setLED_Initialization 0070  
                   ?_setRF_Initialization 0070                         __size_of_Fosc_Set 0004  
               __size_of_CC2500_WriteByte 0014                       ?_set_TimeoutCleared 0070  
                          ??_WDT_Clearing 0072                                 _Rx_Length 00E3  
                   setProductData@address 0058                       Exception_Main@count 0021  
                     Exception_Main@error 0023                                  ??___bmul 0073  
                  __size_of_SwPointSelect 001F          __end_of_getMain_All_LightsStatus 1F52  
                               _Tx_Length 006D                               __pdataBANK4 0245  
                                ??_setLED 0074                                  ?_ADC_Set 0070  
                                ??_setBuz 0077                           ??_DelayOff_Main 0079  
                       ??_CC2500_ReadByte 0072               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 1CA2                          _CC2500_SIDLEMode 1CB8  
              __size_of_DimmerLights_Main 0018                        setMemory_Data@data 0072  
                   ?_CC2500_FrequencyCabr 0070            setDimmerIntr_Dimming_Sw@lights 0074  
          getDimmerIntr_Dimming_Sw@lights 0073                             ??_setLED_Main 0073  
                       __size_of___awtoft 0022                         __size_of___ftpack 0063  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007A  
                                ?_IOC_Set 0070            getDimmerIntr_Dimming_Sw@status 0072  
                               ___latbits 0003                          _setMemory_Modify 1DF6  
                           __pcstackBANK0 0020                 setRF_TransceiveGO@command 0073  
                           __pcstackBANK4 0265                      ??_set_TimeoutCleared 0072  
               _DimmerIntr_Initialization 05F5                           ??_DelayTime_1us 0074  
              __size_of_CC2500_InitSetREG 002A                             DlyOff_Main@sw 005B  
                       ??_CC2500_PowerRST 0078                                  ?_RF_Main 0070  
                                ?_WDT_Set 0070             ??_setDimmerIntr_ControlStatus 0073  
                            ??_TouchPower 0072                      __size_of_DlyOff_Main 0068  
              __size_of_CC2500_ReadStatus 0022            setDimmerIntr_MaxmumValue@value 0058  
             setDimmerLights_DimmingOn@sw 0074                         ??_CC2500_WriteREG 0075  
                           ??_setRF_Learn 0072                             _DimmerLights1 015E  
                           _DimmerLights2 0167                             _DimmerLights3 01B5  
                   CC2500_WriteREG@w_addr 0076                     setDelayOff_GO@command 0059  
                         ??_CC2500_RxData 0076                  setRFSW_AdjControl@status 005D  
                         ??_CC2500_TxData 0076                                 __pnvBANK0 006E  
                          getRxData@error 0065               __size_of_LED_Initialization 0010  
                    _setRF_TimeoutCleared 1CAC                    ?_CC2500_PowerOnInitial 0070  
      __size_of_DimmerIntr_ValueCalculate 002C                       __size_of_setRF_Main 00BF  
                        ___lwdiv@dividend 0074                     DelayOffPointSelect@sw 0073  
                           _getCmd_Status 1E16                                setBuz@time 0024  
                         ??_setCmd_Status 0073                       setDelayOff_GO@value 005A  
                ?_setControl_Lights_Table 0070                          ?_getRF_KeyStatus 0070  
                               _getBuz_GO 1E46                  ?_setDimmerLights_Dimming 005E  
     __end_of_Flash_Memory_Initialization 0473               _Flash_Memory_Initialization 03A8  
                                ?___awdiv 0072                                 __ptext100 05F5  
                               __ptext101 1DF6                                 __ptext110 1D3C  
                               __ptext102 1724                                 __ptext111 0BAF  
                               __ptext103 08F7                                 __ptext120 1D24  
                               __ptext112 1D30                                 __ptext104 0D0C  
                               __ptext121 1CBC                                 __ptext113 0766  
                               __ptext105 0F4C                                 __ptext130 1D60  
                               __ptext122 10F7                                 __ptext114 0850  
                               __ptext106 0EA3                                 __ptext131 1FE6  
                               __ptext123 16DE                                 __ptext115 08A3  
                               __ptext107 01CA                                 __ptext132 1FCC  
                               __ptext124 1C9C                                 __ptext116 1116  
                               __ptext108 11F6                                 __ptext133 1FB2  
                               __ptext117 1432                                 __ptext109 0952  
                                ?___ftadd 0037                                 __ptext126 12A0  
                               __ptext118 1D6F                                 __ptext127 10A8  
                               __ptext119 1193                                 __ptext128 108E  
                               __ptext129 1074                                 _getRxData 0A7E  
                                ?___ftdiv 0027                                  ?___ftmul 0027  
                                ?___fttol 0044                     __size_of_my_MainTimer 003C  
                                ?___lwdiv 0072                   __end_of_setRFSW_Control 15D3  
                        ??_setProductData 0057             __size_of_setSw_Initialization 0007  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 1C9F  
                           ??_setLog_Code 0059                        __end_of_TouchPower 1F3B  
                     __size_of_setSw_Main 0171              CC2500_ReadStatus@status_addr 0075  
      __end_of_getDimmerIntr_DimmingValue 10F7              ??_setDimmerIntr_DimmingValue 0059  
              _getDimmerIntr_DimmingValue 10DC                    CC2500_WriteByte@loop_a 0073  
                                ?_setData 0070            __size_of_setDimmerLights_OnOff 00C3  
                       ?_setRF_AdjControl 0070                                 _r_address 00E5  
           __end_of_setDimmerLights_OnOff 0536            __size_of_setDimmerLights_SwOff 0038  
          __size_of_myMain_Initialization 000F             __end_of_setDimmerLights_SwOff 146A  
            __end_of_CC2500_patable_vaule 1066             __end_of_myMain_Initialization 1DF6  
                        ___lwdiv@quotient 0021                        ??_setRF_AdjControl 0076  
                           _SwPointSelect 1154                       __end_of_setLED_Main 17B4  
                        ??_getDelayOff_GO 0074                    ??_setRF_Initialization 0072  
                       _CC2500_rfSettings 102F                                  _LED_Main 1E36  
                         SwPointSelect@sw 0073                                 clear_ram0 1CCC  
                CC2500_InitPATable@loop_d 0021                     ?_setRF_TimeoutCleared 0070  
                            _my_MainTimer 14DD                                 _setTxData 1CD2  
     __end_of_DimmerLights_Initialization 1D8D               _DimmerLights_Initialization 1D7E  
                      _CC2500_ClearRXFIFO 1CB0                    _Flash_Memory_Main$3562 0021  
                          ?_getCmd_Status 0070                        _CC2500_ClearTXFIFO 1CB4  
                _getDimmerIntr_Dimming_Sw 1116                  setRF_DimmerLights@lights 005D  
                                _GO_nDONE 04E9                       __end_of_setRF_Learn 1E98  
                       ??_Timeout_Counter 0072                                ?_getBuz_GO 0072  
                setRF_DimmerLights@status 005C      __size_of_setDimmerIntr_ControlStatus 003D  
             __size_of_setRFSW_AdjControl 0087       __size_of_setDimmerIntr_DimmingValue 0022  
                      _Flash_Memory_Write 1310                                ?_getRxData 0070  
                                _TMR1_ISR 12A0                    CC2500_InitSetREG@temp1 0020  
                  CC2500_InitSetREG@temp2 0021                                  _TMR1_Set 1D54  
                     ?_CC2500_ClearRXFIFO 0070                       ?_CC2500_ClearTXFIFO 0070  
                      _setRF_TransceiveGO 1E06                                  _RF_Count 00DB  
                    __end_of_RF_RxDisable 1CEF               __end_of_CC2500_WriteCommand 1FB2  
                  ??_CC2500_FrequencyCabr 0078                                  _WDT_Main 1E66  
                 DlyOff_Initialization@sw 0074                     getSw_KeyStatus@status 0072  
                        __size_of_ADC_Set 0007                       ?_Flash_Memory_Write 0070  
                     ?_setRF_TransceiveGO 0070                   __size_of_setDelayOff_GO 0084  
                                _DelayOff 0069                              setSw_Main@sw 002F  
                        __size_of_IOC_ISR 000F            getMain_All_Error_Status@status 0072  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1D54  
                          ?_SwPointSelect 0070                            setLED_Main@led 0075  
                    __end_of_WDT_Clearing 0004                       __end_of_setLog_Code 13C4  
                   _DlyOff_Initialization 1CBC         __size_of_getMain_All_LightsStatus 0017  
                    ??_CC2500_ClearRXFIFO 0076                 ?_getMain_All_LightsStatus 0070  
                    ??_CC2500_ClearTXFIFO 0076                 __end_of_CC2500_rfSettings 105E  
                        __size_of_RF_Main 0003                  _setDimmerIntr_Dimming_RF 1556  
             setDimmerLights_OnOff@lights 0064                  _setDimmerIntr_Dimming_Sw 13C4  
                                _Fosc_Set 1CA8                          __size_of_WDT_Set 0009  
                   setRFSW_Control@status 0062                     _Switch_Initialization 1068  
       __size_of_getMain_All_Error_Status 0003                      ??_Flash_Memory_Write 0072  
               ?_getMain_All_Error_Status 0070                      __size_of_Buzzer_Main 0046  
                              ?_setTxData 0070                              ?_Switch_Main 0070  
                        _CC2500_WriteByte 1EBE       __size_of_DimmerLights_SelectPointer 0021  
                    ??_setRF_TransceiveGO 0072                                  _SwDetect 00E4  
                        getCmd_Status@cmd 0073                          setCmd_Status@cmd 0072  
                       setRFSW_Control@sw 0063          ??_getDimmerLights_ValueToPercent 0079  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0074  
                        __size_of___awdiv 0054                          __size_of___ftadd 00F6  
                        ?_setRFSW_Control 0070                          __size_of___ftdiv 00A9  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                  setDimmerLights_SwOn@idle 002B  
                                ___awtoft 11F6                          ??_LedPointSelect 0072  
                                ___ftpack 0952                              ??_setRF_Main 0066  
                    CC2500_WriteREG@value 0074                               _setLED_Main 176A  
              __end_of_setRF_DimmerLights 0B49                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
                        setDelayOff_GO@sw 0060                           ___lwdiv@divisor 0072  
                        __size_of_setData 0050                           ___lwdiv@counter 0020  
                                __ptext10 1154                                  __ptext11 1F26  
                                __ptext20 1390                                  __ptext12 1CC1  
                                __ptext21 1E56                                  __ptext13 1F11  
                                __ptext30 1CE7                                  __ptext22 06AE  
                                __ptext14 1068                                  __ptext31 0B49  
                                __ptext23 146A                                  __ptext15 1CE0  
                                __ptext40 11B4                                  __ptext32 09B5  
                                __ptext24 1593                                  __ptext16 1CA5  
                                __ptext41 1D19                                  __ptext33 127E  
                                __ptext25 0D93                                  __ptext17 0536  
                                __ptext50 1D0E                                  __ptext42 12C4  
                                __ptext34 1F52                                  __ptext26 1F81  
                                __ptext18 0800                                  __ptext51 1E98  
                                __ptext43 1CB4                                  __ptext35 1EFC  
                                __ptext27 1DC9                                  __ptext19 0A7E  
                                __ptext60 1E26                                  __ptext52 07F6  
                                __ptext44 1CB0                                  __ptext36 1CB8  
                                __ptext28 1E46                                  __ptext61 1DBA  
                                __ptext53 1D54                                  __ptext45 1F99  
                                __ptext37 1657                                  __ptext29 13FB  
                                __ptext70 1EAA                                  __ptext62 15D3  
                                __ptext54 10C2                                  __ptext46 1CAC  
                                __ptext38 133A                                  __ptext71 14A3  
                                __ptext63 1DAB                                  __ptext55 1D03  
                                __ptext47 1EE7                                  __ptext39 1135  
                                __ptext80 123A                                  __ptext72 1C9F  
                                __ptext64 0E1A                                  __ptext56 1CA8  
                                __ptext48 1EBE                                  __ptext81 1519  
                                __ptext73 1F69                                  __ptext65 1D48  
                                __ptext57 1CD9                                  __ptext49 1CA2  
                                __ptext90 1E06                                  __ptext82 0C88  
                                __ptext74 0A19                                  __ptext66 03A8  
                                __ptext58 1E36                                  __ptext91 0AE3  
                                __ptext83 1E76                                  __ptext75 0473  
                                __ptext67 1CF8                                  __ptext59 176A  
                                __ptext92 1218                                  __ptext84 1ED2  
                                __ptext76 0C17                                  __ptext68 1310  
                                __ptext93 13C4                                  __ptext85 1F3B  
                                __ptext77 125C                                  __ptext69 1CEF  
                                __ptext94 10DC                                  __ptext86 1D8D  
                                __ptext78 1D9C                                  __ptext95 1614  
                                __ptext87 1E16                                  __ptext79 1556  
                                __ptext96 02C0                                  __ptext88 17B4  
                                __ptext97 1364                                  __ptext89 1CD2  
                                __ptext98 1D7E                                  __ptext99 07FF  
                                __product 0245                   ??_setLED_Initialization 0075  
                ??_getDimmerLights_Status 0074              __end_of_setDimmerLights_Main 0A7E  
                      _DimmerLights_IOC_1 1FB2                        _DimmerLights_IOC_2 1FCC  
            __end_of_setDimmerLights_SwOn 07F6                        _DimmerLights_IOC_3 1FE6  
                            ??_setSw_Main 002D                    ??_setRF_TimeoutCleared 0072  
            ??_setDimmerLights_DimmingRun 0075                             setLED@command 0073  
                           __size_of_main 0044                               _setRF_Learn 1E87  
      __size_of_DimmerIntr_Initialization 00B9                           ??_getCmd_Status 0072  
                      _DimmerLights_TMR_1 1074                        _DimmerLights_TMR_2 108E  
                      _DimmerLights_TMR_3 10A8                  __end_of_CC2500_SIDLEMode 1CBC  
              setDimmerLights_Main@lights 0065               __end_of_DelayOffPointSelect 1116  
              CC2500_WriteCommand@command 0075                           _CC2500_ReadByte 1F52  
              ?_setDimmerLights_DimmingOn 0070                        _CC2500_InitPATable 1135  
                __end_of_setMemory_Modify 1E06                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_IOC_2 0070                       ?_DimmerLights_IOC_3 0070  
                      __end_of_setRF_Main 05F5                               ??_getBuz_GO 0074  
                     ?_DimmerLights_TMR_1 0070                       ?_DimmerLights_TMR_2 0070  
                     ?_DimmerLights_TMR_3 0070               __size_of_Mcu_Initialization 0012  
                    _CC2500_patable_vaule 105E                               ??_getRxData 0064  
              __end_of_RF_Timeout_Counter 1EFC               Flash_Memory_Main@key_Status 0020  
                _getAll_Sw_KeyStatus$6885 0074                                  main@argc 0265  
                                main@argv 0267                       ?_CC2500_InitPATable 0070  
     getDimmerLights_ValueToPercent@value 0052                           _CC2500_PowerRST 1657  
                __size_of_getSw_KeyStatus 0021              setDimmerLights_Dimming@value 0060  
      __end_of_setDimmerIntr_DimmingValue 125C                _setDimmerIntr_DimmingValue 123A  
             __end_of_Flash_Memory_Modify 0EA3              __size_of_getAll_Sw_KeyStatus 000F  
                             _setLog_Code 1390               __end_of_Flash_Memory_Unlock 1CF8  
                         ??_SwPointSelect 0072                           _CC2500_WriteREG 11B4  
                      __end_of_setSw_Main 01CA                      ??_DimmerLights_IOC_1 0070  
                    ??_DimmerLights_IOC_2 0070                      ??_DimmerLights_IOC_3 0070  
         getDimmerLights_PercentToValue@i 0055       __size_of_setDimmerLights_DimmingRun 0018  
                           _Transceive_OK 03C9                    ?_DlyOff_Initialization 0070  
                    ??_DimmerLights_TMR_1 0070                      ??_DimmerLights_TMR_2 0070  
                    ??_DimmerLights_TMR_3 0070                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0072                   setDimmerLights_SwOff@sw 0074  
             __size_of_setMemory_LoopSave 0010                                  intlevel1 0000  
                    ??_CC2500_InitPATable 0077                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 005D                           setDelayOff_GO@j 005E  
                         setDelayOff_GO@k 005F                   ??_CC2500_PowerOnInitial 0079  
  __end_of_setDimmerLights_Initialization 0800   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 07FF                ?_setDimmerIntr_MaxmumValue 0058  
                             ??_setTxData 0072                    CC2500_InitPATable@temp 0020  
                   __size_of_RF_RxDisable 0008                         _RF_Initialization 1CA2  
                    _Flash_Memory_Erasing 1D48                        ?_RF_Initialization 0070  
                              _SPI0Buffer 006B                   __size_of_Exception_Main 003A  
         __end_of_DelayOff_Initialization 1D30                     __size_of_WDT_Clearing 0002  
                   __end_of_DelayOff_Main 1D48                       ??_RF_Initialization 0073  
                 __size_of_setMemory_Data 000B                            _setDelayOff_GO 0C88  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setControl_Lights_Table 00B8  
        __size_of_setDimmerLights_Dimming 004C      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 0059  
                   setMemory_Data@address 0074                     __end_of_DelayTime_1us 12E9  
              ??_getDimmerIntr_Dimming_Sw 0072                   __end_of_CC2500_ReadByte 1F69  
            __end_of_setSw_Initialization 1CE7                           _Timeout_Counter 1F11  
         __size_of_getDimmerLights_Status 000F           getDimmerLights_ValueToPercent@i 0053  
                            _RF_RxDisable 1CE7          Flash_Memory_Initialization@value 0077  
              __end_of_LED_Initialization 1E36                   setMemory_Modify@command 0073  
               __end_of_RF_Initialization 1CA5                 __size_of_setRF_AdjControl 0039  
                   __end_of_CC2500_RxData 0A19                     __end_of_CC2500_TxData 0BAF  
                 __end_of_CC2500_PowerRST 169A  
