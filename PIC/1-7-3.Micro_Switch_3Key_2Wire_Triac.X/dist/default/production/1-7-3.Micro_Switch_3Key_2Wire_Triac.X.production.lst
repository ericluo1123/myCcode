

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Mar 26 16:18:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	text70,local,class=CODE,merge=1,delta=2
    92                           	psect	text71,local,class=CODE,merge=1,delta=2
    93                           	psect	text72,local,class=CODE,merge=1,delta=2
    94                           	psect	text73,local,class=CODE,merge=1,delta=2
    95                           	psect	text74,local,class=CODE,merge=1,delta=2
    96                           	psect	text75,local,class=CODE,merge=1,delta=2
    97                           	psect	text76,local,class=CODE,merge=1,delta=2
    98                           	psect	text77,local,class=CODE,merge=1,delta=2
    99                           	psect	text78,local,class=CODE,merge=1,delta=2
   100                           	psect	text79,local,class=CODE,merge=1,delta=2
   101                           	psect	text80,local,class=CODE,merge=1,delta=2
   102                           	psect	text81,local,class=CODE,merge=1,delta=2
   103                           	psect	text82,local,class=CODE,merge=1,delta=2
   104                           	psect	text83,local,class=CODE,merge=1,delta=2
   105                           	psect	text84,local,class=CODE,merge=1,delta=2
   106                           	psect	text85,local,class=CODE,merge=1,delta=2
   107                           	psect	text86,local,class=CODE,merge=1,delta=2
   108                           	psect	text87,local,class=CODE,merge=1,delta=2
   109                           	psect	text88,local,class=CODE,merge=1,delta=2
   110                           	psect	text89,local,class=CODE,merge=1,delta=2
   111                           	psect	text90,local,class=CODE,merge=1,delta=2
   112                           	psect	text91,local,class=CODE,merge=1,delta=2
   113                           	psect	text92,local,class=CODE,merge=1,delta=2
   114                           	psect	text93,local,class=CODE,merge=1,delta=2
   115                           	psect	text94,local,class=CODE,merge=1,delta=2
   116                           	psect	text95,local,class=CODE,merge=1,delta=2
   117                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text99,local,class=CODE,merge=1,delta=2
   121                           	psect	text100,local,class=CODE,merge=1,delta=2
   122                           	psect	text101,local,class=CODE,merge=1,delta=2
   123                           	psect	text102,local,class=CODE,merge=1,delta=2
   124                           	psect	text103,local,class=CODE,merge=1,delta=2
   125                           	psect	text104,local,class=CODE,merge=1,delta=2
   126                           	psect	text105,local,class=CODE,merge=1,delta=2
   127                           	psect	text106,local,class=CODE,merge=1,delta=2
   128                           	psect	text107,local,class=CODE,merge=1,delta=2
   129                           	psect	text108,local,class=CODE,merge=1,delta=2
   130                           	psect	text109,local,class=CODE,merge=1,delta=2
   131                           	psect	text110,local,class=CODE,merge=1,delta=2
   132                           	psect	text111,local,class=CODE,merge=1,delta=2
   133                           	psect	text112,local,class=CODE,merge=1,delta=2
   134                           	psect	text113,local,class=CODE,merge=1,delta=2
   135                           	psect	text114,local,class=CODE,merge=1,delta=2
   136                           	psect	text115,local,class=CODE,merge=1,delta=2
   137                           	psect	text116,local,class=CODE,merge=1,delta=2
   138                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   139                           	psect	text118,local,class=CODE,merge=1,delta=2
   140                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text120,local,class=CODE,merge=1,delta=2
   142                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	text122,local,class=CODE,merge=1,delta=2
   144                           	psect	text123,local,class=CODE,merge=1,delta=2
   145                           	psect	text124,local,class=CODE,merge=1,delta=2
   146                           	psect	text125,local,class=CODE,merge=1,delta=2
   147                           	psect	text126,local,class=CODE,merge=1,delta=2
   148                           	psect	text127,local,class=CODE,merge=1,delta=2
   149                           	psect	text128,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text130,local,class=CODE,merge=1,delta=2
   152                           	psect	text131,local,class=CODE,merge=1,delta=2
   153                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	intentry,global,class=CODE,delta=2
   156                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   159                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   161                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   163                           	dabs	1,0x7E,2
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  0116                     	;# 
   211  0117                     	;# 
   212  011D                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  018E                     	;# 
   216  0191                     	;# 
   217  0191                     	;# 
   218  0192                     	;# 
   219  0193                     	;# 
   220  0193                     	;# 
   221  0194                     	;# 
   222  0195                     	;# 
   223  0196                     	;# 
   224  0197                     	;# 
   225  0199                     	;# 
   226  019A                     	;# 
   227  019B                     	;# 
   228  019B                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019C                     	;# 
   232  019C                     	;# 
   233  019D                     	;# 
   234  019E                     	;# 
   235  019F                     	;# 
   236  020D                     	;# 
   237  0210                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  0291                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  029A                     	;# 
   261  0394                     	;# 
   262  0395                     	;# 
   263  0396                     	;# 
   264  0FE4                     	;# 
   265  0FE5                     	;# 
   266  0FE6                     	;# 
   267  0FE7                     	;# 
   268  0FE8                     	;# 
   269  0FE9                     	;# 
   270  0FEA                     	;# 
   271  0FEB                     	;# 
   272  0FED                     	;# 
   273  0FEE                     	;# 
   274  0FEF                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0008                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0095                     	;# 
   309  0096                     	;# 
   310  0097                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  0116                     	;# 
   322  0117                     	;# 
   323  011D                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  018E                     	;# 
   327  0191                     	;# 
   328  0191                     	;# 
   329  0192                     	;# 
   330  0193                     	;# 
   331  0193                     	;# 
   332  0194                     	;# 
   333  0195                     	;# 
   334  0196                     	;# 
   335  0197                     	;# 
   336  0199                     	;# 
   337  019A                     	;# 
   338  019B                     	;# 
   339  019B                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019C                     	;# 
   343  019C                     	;# 
   344  019D                     	;# 
   345  019E                     	;# 
   346  019F                     	;# 
   347  020D                     	;# 
   348  0210                     	;# 
   349  0211                     	;# 
   350  0211                     	;# 
   351  0212                     	;# 
   352  0212                     	;# 
   353  0213                     	;# 
   354  0213                     	;# 
   355  0214                     	;# 
   356  0214                     	;# 
   357  0215                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0216                     	;# 
   361  0216                     	;# 
   362  0217                     	;# 
   363  0217                     	;# 
   364  0291                     	;# 
   365  0291                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0298                     	;# 
   369  0298                     	;# 
   370  0299                     	;# 
   371  029A                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  0116                     	;# 
   433  0117                     	;# 
   434  011D                     	;# 
   435  018C                     	;# 
   436  018D                     	;# 
   437  018E                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0194                     	;# 
   444  0195                     	;# 
   445  0196                     	;# 
   446  0197                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019B                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019C                     	;# 
   454  019C                     	;# 
   455  019D                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  020D                     	;# 
   459  0210                     	;# 
   460  0211                     	;# 
   461  0211                     	;# 
   462  0212                     	;# 
   463  0212                     	;# 
   464  0213                     	;# 
   465  0213                     	;# 
   466  0214                     	;# 
   467  0214                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0216                     	;# 
   473  0217                     	;# 
   474  0217                     	;# 
   475  0291                     	;# 
   476  0291                     	;# 
   477  0292                     	;# 
   478  0293                     	;# 
   479  0298                     	;# 
   480  0298                     	;# 
   481  0299                     	;# 
   482  029A                     	;# 
   483  0394                     	;# 
   484  0395                     	;# 
   485  0396                     	;# 
   486  0FE4                     	;# 
   487  0FE5                     	;# 
   488  0FE6                     	;# 
   489  0FE7                     	;# 
   490  0FE8                     	;# 
   491  0FE9                     	;# 
   492  0FEA                     	;# 
   493  0FEB                     	;# 
   494  0FED                     	;# 
   495  0FEE                     	;# 
   496  0FEF                     	;# 
   497  0000                     	;# 
   498  0001                     	;# 
   499  0002                     	;# 
   500  0003                     	;# 
   501  0004                     	;# 
   502  0005                     	;# 
   503  0006                     	;# 
   504  0007                     	;# 
   505  0008                     	;# 
   506  0009                     	;# 
   507  000A                     	;# 
   508  000B                     	;# 
   509  000C                     	;# 
   510  000D                     	;# 
   511  000E                     	;# 
   512  0010                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  008C                     	;# 
   525  008D                     	;# 
   526  008E                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0099                     	;# 
   534  009A                     	;# 
   535  009B                     	;# 
   536  009B                     	;# 
   537  009C                     	;# 
   538  009D                     	;# 
   539  009E                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  0116                     	;# 
   544  0117                     	;# 
   545  011D                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  0197                     	;# 
   558  0199                     	;# 
   559  019A                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019C                     	;# 
   565  019C                     	;# 
   566  019D                     	;# 
   567  019E                     	;# 
   568  019F                     	;# 
   569  020D                     	;# 
   570  0210                     	;# 
   571  0211                     	;# 
   572  0211                     	;# 
   573  0212                     	;# 
   574  0212                     	;# 
   575  0213                     	;# 
   576  0213                     	;# 
   577  0214                     	;# 
   578  0214                     	;# 
   579  0215                     	;# 
   580  0215                     	;# 
   581  0215                     	;# 
   582  0216                     	;# 
   583  0216                     	;# 
   584  0217                     	;# 
   585  0217                     	;# 
   586  0291                     	;# 
   587  0291                     	;# 
   588  0292                     	;# 
   589  0293                     	;# 
   590  0298                     	;# 
   591  0298                     	;# 
   592  0299                     	;# 
   593  029A                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  0FE4                     	;# 
   598  0FE5                     	;# 
   599  0FE6                     	;# 
   600  0FE7                     	;# 
   601  0FE8                     	;# 
   602  0FE9                     	;# 
   603  0FEA                     	;# 
   604  0FEB                     	;# 
   605  0FED                     	;# 
   606  0FEE                     	;# 
   607  0FEF                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  0010                     	;# 
   624  0011                     	;# 
   625  0012                     	;# 
   626  0015                     	;# 
   627  0016                     	;# 
   628  0016                     	;# 
   629  0017                     	;# 
   630  0018                     	;# 
   631  0019                     	;# 
   632  001A                     	;# 
   633  001B                     	;# 
   634  001C                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0097                     	;# 
   644  0099                     	;# 
   645  009A                     	;# 
   646  009B                     	;# 
   647  009B                     	;# 
   648  009C                     	;# 
   649  009D                     	;# 
   650  009E                     	;# 
   651  010C                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  011D                     	;# 
   657  018C                     	;# 
   658  018D                     	;# 
   659  018E                     	;# 
   660  0191                     	;# 
   661  0191                     	;# 
   662  0192                     	;# 
   663  0193                     	;# 
   664  0193                     	;# 
   665  0194                     	;# 
   666  0195                     	;# 
   667  0196                     	;# 
   668  0197                     	;# 
   669  0199                     	;# 
   670  019A                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019C                     	;# 
   676  019C                     	;# 
   677  019D                     	;# 
   678  019E                     	;# 
   679  019F                     	;# 
   680  020D                     	;# 
   681  0210                     	;# 
   682  0211                     	;# 
   683  0211                     	;# 
   684  0212                     	;# 
   685  0212                     	;# 
   686  0213                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0216                     	;# 
   695  0217                     	;# 
   696  0217                     	;# 
   697  0291                     	;# 
   698  0291                     	;# 
   699  0292                     	;# 
   700  0293                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  029A                     	;# 
   705  0394                     	;# 
   706  0395                     	;# 
   707  0396                     	;# 
   708  0FE4                     	;# 
   709  0FE5                     	;# 
   710  0FE6                     	;# 
   711  0FE7                     	;# 
   712  0FE8                     	;# 
   713  0FE9                     	;# 
   714  0FEA                     	;# 
   715  0FEB                     	;# 
   716  0FED                     	;# 
   717  0FEE                     	;# 
   718  0FEF                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0008                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  000E                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  008E                     	;# 
   749  0090                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0097                     	;# 
   755  0099                     	;# 
   756  009A                     	;# 
   757  009B                     	;# 
   758  009B                     	;# 
   759  009C                     	;# 
   760  009D                     	;# 
   761  009E                     	;# 
   762  010C                     	;# 
   763  010D                     	;# 
   764  010E                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  011D                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  018E                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0197                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020D                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0298                     	;# 
   813  0298                     	;# 
   814  0299                     	;# 
   815  029A                     	;# 
   816  0394                     	;# 
   817  0395                     	;# 
   818  0396                     	;# 
   819  0FE4                     	;# 
   820  0FE5                     	;# 
   821  0FE6                     	;# 
   822  0FE7                     	;# 
   823  0FE8                     	;# 
   824  0FE9                     	;# 
   825  0FEA                     	;# 
   826  0FEB                     	;# 
   827  0FED                     	;# 
   828  0FEE                     	;# 
   829  0FEF                     	;# 
   830  0000                     	;# 
   831  0001                     	;# 
   832  0002                     	;# 
   833  0003                     	;# 
   834  0004                     	;# 
   835  0005                     	;# 
   836  0006                     	;# 
   837  0007                     	;# 
   838  0008                     	;# 
   839  0009                     	;# 
   840  000A                     	;# 
   841  000B                     	;# 
   842  000C                     	;# 
   843  000D                     	;# 
   844  000E                     	;# 
   845  0010                     	;# 
   846  0011                     	;# 
   847  0012                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0016                     	;# 
   851  0017                     	;# 
   852  0018                     	;# 
   853  0019                     	;# 
   854  001A                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  008C                     	;# 
   858  008D                     	;# 
   859  008E                     	;# 
   860  0090                     	;# 
   861  0091                     	;# 
   862  0092                     	;# 
   863  0095                     	;# 
   864  0096                     	;# 
   865  0097                     	;# 
   866  0099                     	;# 
   867  009A                     	;# 
   868  009B                     	;# 
   869  009B                     	;# 
   870  009C                     	;# 
   871  009D                     	;# 
   872  009E                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  0116                     	;# 
   877  0117                     	;# 
   878  011D                     	;# 
   879  018C                     	;# 
   880  018D                     	;# 
   881  018E                     	;# 
   882  0191                     	;# 
   883  0191                     	;# 
   884  0192                     	;# 
   885  0193                     	;# 
   886  0193                     	;# 
   887  0194                     	;# 
   888  0195                     	;# 
   889  0196                     	;# 
   890  0197                     	;# 
   891  0199                     	;# 
   892  019A                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019E                     	;# 
   901  019F                     	;# 
   902  020D                     	;# 
   903  0210                     	;# 
   904  0211                     	;# 
   905  0211                     	;# 
   906  0212                     	;# 
   907  0212                     	;# 
   908  0213                     	;# 
   909  0213                     	;# 
   910  0214                     	;# 
   911  0214                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0216                     	;# 
   916  0216                     	;# 
   917  0217                     	;# 
   918  0217                     	;# 
   919  0291                     	;# 
   920  0291                     	;# 
   921  0292                     	;# 
   922  0293                     	;# 
   923  0298                     	;# 
   924  0298                     	;# 
   925  0299                     	;# 
   926  029A                     	;# 
   927  0394                     	;# 
   928  0395                     	;# 
   929  0396                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  0000                     	;# 
   942  0001                     	;# 
   943  0002                     	;# 
   944  0003                     	;# 
   945  0004                     	;# 
   946  0005                     	;# 
   947  0006                     	;# 
   948  0007                     	;# 
   949  0008                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000D                     	;# 
   955  000E                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0015                     	;# 
   960  0016                     	;# 
   961  0016                     	;# 
   962  0017                     	;# 
   963  0018                     	;# 
   964  0019                     	;# 
   965  001A                     	;# 
   966  001B                     	;# 
   967  001C                     	;# 
   968  008C                     	;# 
   969  008D                     	;# 
   970  008E                     	;# 
   971  0090                     	;# 
   972  0091                     	;# 
   973  0092                     	;# 
   974  0095                     	;# 
   975  0096                     	;# 
   976  0097                     	;# 
   977  0099                     	;# 
   978  009A                     	;# 
   979  009B                     	;# 
   980  009B                     	;# 
   981  009C                     	;# 
   982  009D                     	;# 
   983  009E                     	;# 
   984  010C                     	;# 
   985  010D                     	;# 
   986  010E                     	;# 
   987  0116                     	;# 
   988  0117                     	;# 
   989  011D                     	;# 
   990  018C                     	;# 
   991  018D                     	;# 
   992  018E                     	;# 
   993  0191                     	;# 
   994  0191                     	;# 
   995  0192                     	;# 
   996  0193                     	;# 
   997  0193                     	;# 
   998  0194                     	;# 
   999  0195                     	;# 
  1000  0196                     	;# 
  1001  0197                     	;# 
  1002  0199                     	;# 
  1003  019A                     	;# 
  1004  019B                     	;# 
  1005  019B                     	;# 
  1006  019B                     	;# 
  1007  019B                     	;# 
  1008  019C                     	;# 
  1009  019C                     	;# 
  1010  019D                     	;# 
  1011  019E                     	;# 
  1012  019F                     	;# 
  1013  020D                     	;# 
  1014  0210                     	;# 
  1015  0211                     	;# 
  1016  0211                     	;# 
  1017  0212                     	;# 
  1018  0212                     	;# 
  1019  0213                     	;# 
  1020  0213                     	;# 
  1021  0214                     	;# 
  1022  0214                     	;# 
  1023  0215                     	;# 
  1024  0215                     	;# 
  1025  0215                     	;# 
  1026  0216                     	;# 
  1027  0216                     	;# 
  1028  0217                     	;# 
  1029  0217                     	;# 
  1030  0291                     	;# 
  1031  0291                     	;# 
  1032  0292                     	;# 
  1033  0293                     	;# 
  1034  0298                     	;# 
  1035  0298                     	;# 
  1036  0299                     	;# 
  1037  029A                     	;# 
  1038  0394                     	;# 
  1039  0395                     	;# 
  1040  0396                     	;# 
  1041  0FE4                     	;# 
  1042  0FE5                     	;# 
  1043  0FE6                     	;# 
  1044  0FE7                     	;# 
  1045  0FE8                     	;# 
  1046  0FE9                     	;# 
  1047  0FEA                     	;# 
  1048  0FEB                     	;# 
  1049  0FED                     	;# 
  1050  0FEE                     	;# 
  1051  0FEF                     	;# 
  1052  0000                     	;# 
  1053  0001                     	;# 
  1054  0002                     	;# 
  1055  0003                     	;# 
  1056  0004                     	;# 
  1057  0005                     	;# 
  1058  0006                     	;# 
  1059  0007                     	;# 
  1060  0008                     	;# 
  1061  0009                     	;# 
  1062  000A                     	;# 
  1063  000B                     	;# 
  1064  000C                     	;# 
  1065  000D                     	;# 
  1066  000E                     	;# 
  1067  0010                     	;# 
  1068  0011                     	;# 
  1069  0012                     	;# 
  1070  0015                     	;# 
  1071  0016                     	;# 
  1072  0016                     	;# 
  1073  0017                     	;# 
  1074  0018                     	;# 
  1075  0019                     	;# 
  1076  001A                     	;# 
  1077  001B                     	;# 
  1078  001C                     	;# 
  1079  008C                     	;# 
  1080  008D                     	;# 
  1081  008E                     	;# 
  1082  0090                     	;# 
  1083  0091                     	;# 
  1084  0092                     	;# 
  1085  0095                     	;# 
  1086  0096                     	;# 
  1087  0097                     	;# 
  1088  0099                     	;# 
  1089  009A                     	;# 
  1090  009B                     	;# 
  1091  009B                     	;# 
  1092  009C                     	;# 
  1093  009D                     	;# 
  1094  009E                     	;# 
  1095  010C                     	;# 
  1096  010D                     	;# 
  1097  010E                     	;# 
  1098  0116                     	;# 
  1099  0117                     	;# 
  1100  011D                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  018E                     	;# 
  1104  0191                     	;# 
  1105  0191                     	;# 
  1106  0192                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0194                     	;# 
  1110  0195                     	;# 
  1111  0196                     	;# 
  1112  0197                     	;# 
  1113  0199                     	;# 
  1114  019A                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019C                     	;# 
  1120  019C                     	;# 
  1121  019D                     	;# 
  1122  019E                     	;# 
  1123  019F                     	;# 
  1124  020D                     	;# 
  1125  0210                     	;# 
  1126  0211                     	;# 
  1127  0211                     	;# 
  1128  0212                     	;# 
  1129  0212                     	;# 
  1130  0213                     	;# 
  1131  0213                     	;# 
  1132  0214                     	;# 
  1133  0214                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0216                     	;# 
  1138  0216                     	;# 
  1139  0217                     	;# 
  1140  0217                     	;# 
  1141  0291                     	;# 
  1142  0291                     	;# 
  1143  0292                     	;# 
  1144  0293                     	;# 
  1145  0298                     	;# 
  1146  0298                     	;# 
  1147  0299                     	;# 
  1148  029A                     	;# 
  1149  0394                     	;# 
  1150  0395                     	;# 
  1151  0396                     	;# 
  1152  0FE4                     	;# 
  1153  0FE5                     	;# 
  1154  0FE6                     	;# 
  1155  0FE7                     	;# 
  1156  0FE8                     	;# 
  1157  0FE9                     	;# 
  1158  0FEA                     	;# 
  1159  0FEB                     	;# 
  1160  0FED                     	;# 
  1161  0FEE                     	;# 
  1162  0FEF                     	;# 
  1163  0000                     	;# 
  1164  0001                     	;# 
  1165  0002                     	;# 
  1166  0003                     	;# 
  1167  0004                     	;# 
  1168  0005                     	;# 
  1169  0006                     	;# 
  1170  0007                     	;# 
  1171  0008                     	;# 
  1172  0009                     	;# 
  1173  000A                     	;# 
  1174  000B                     	;# 
  1175  000C                     	;# 
  1176  000D                     	;# 
  1177  000E                     	;# 
  1178  0010                     	;# 
  1179  0011                     	;# 
  1180  0012                     	;# 
  1181  0015                     	;# 
  1182  0016                     	;# 
  1183  0016                     	;# 
  1184  0017                     	;# 
  1185  0018                     	;# 
  1186  0019                     	;# 
  1187  001A                     	;# 
  1188  001B                     	;# 
  1189  001C                     	;# 
  1190  008C                     	;# 
  1191  008D                     	;# 
  1192  008E                     	;# 
  1193  0090                     	;# 
  1194  0091                     	;# 
  1195  0092                     	;# 
  1196  0095                     	;# 
  1197  0096                     	;# 
  1198  0097                     	;# 
  1199  0099                     	;# 
  1200  009A                     	;# 
  1201  009B                     	;# 
  1202  009B                     	;# 
  1203  009C                     	;# 
  1204  009D                     	;# 
  1205  009E                     	;# 
  1206  010C                     	;# 
  1207  010D                     	;# 
  1208  010E                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  011D                     	;# 
  1212  018C                     	;# 
  1213  018D                     	;# 
  1214  018E                     	;# 
  1215  0191                     	;# 
  1216  0191                     	;# 
  1217  0192                     	;# 
  1218  0193                     	;# 
  1219  0193                     	;# 
  1220  0194                     	;# 
  1221  0195                     	;# 
  1222  0196                     	;# 
  1223  0197                     	;# 
  1224  0199                     	;# 
  1225  019A                     	;# 
  1226  019B                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019C                     	;# 
  1231  019C                     	;# 
  1232  019D                     	;# 
  1233  019E                     	;# 
  1234  019F                     	;# 
  1235  020D                     	;# 
  1236  0210                     	;# 
  1237  0211                     	;# 
  1238  0211                     	;# 
  1239  0212                     	;# 
  1240  0212                     	;# 
  1241  0213                     	;# 
  1242  0213                     	;# 
  1243  0214                     	;# 
  1244  0214                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0215                     	;# 
  1248  0216                     	;# 
  1249  0216                     	;# 
  1250  0217                     	;# 
  1251  0217                     	;# 
  1252  0291                     	;# 
  1253  0291                     	;# 
  1254  0292                     	;# 
  1255  0293                     	;# 
  1256  0298                     	;# 
  1257  0298                     	;# 
  1258  0299                     	;# 
  1259  029A                     	;# 
  1260  0394                     	;# 
  1261  0395                     	;# 
  1262  0396                     	;# 
  1263  0FE4                     	;# 
  1264  0FE5                     	;# 
  1265  0FE6                     	;# 
  1266  0FE7                     	;# 
  1267  0FE8                     	;# 
  1268  0FE9                     	;# 
  1269  0FEA                     	;# 
  1270  0FEB                     	;# 
  1271  0FED                     	;# 
  1272  0FEE                     	;# 
  1273  0FEF                     	;# 
  1274  0000                     	;# 
  1275  0001                     	;# 
  1276  0002                     	;# 
  1277  0003                     	;# 
  1278  0004                     	;# 
  1279  0005                     	;# 
  1280  0006                     	;# 
  1281  0007                     	;# 
  1282  0008                     	;# 
  1283  0009                     	;# 
  1284  000A                     	;# 
  1285  000B                     	;# 
  1286  000C                     	;# 
  1287  000D                     	;# 
  1288  000E                     	;# 
  1289  0010                     	;# 
  1290  0011                     	;# 
  1291  0012                     	;# 
  1292  0015                     	;# 
  1293  0016                     	;# 
  1294  0016                     	;# 
  1295  0017                     	;# 
  1296  0018                     	;# 
  1297  0019                     	;# 
  1298  001A                     	;# 
  1299  001B                     	;# 
  1300  001C                     	;# 
  1301  008C                     	;# 
  1302  008D                     	;# 
  1303  008E                     	;# 
  1304  0090                     	;# 
  1305  0091                     	;# 
  1306  0092                     	;# 
  1307  0095                     	;# 
  1308  0096                     	;# 
  1309  0097                     	;# 
  1310  0099                     	;# 
  1311  009A                     	;# 
  1312  009B                     	;# 
  1313  009B                     	;# 
  1314  009C                     	;# 
  1315  009D                     	;# 
  1316  009E                     	;# 
  1317  010C                     	;# 
  1318  010D                     	;# 
  1319  010E                     	;# 
  1320  0116                     	;# 
  1321  0117                     	;# 
  1322  011D                     	;# 
  1323  018C                     	;# 
  1324  018D                     	;# 
  1325  018E                     	;# 
  1326  0191                     	;# 
  1327  0191                     	;# 
  1328  0192                     	;# 
  1329  0193                     	;# 
  1330  0193                     	;# 
  1331  0194                     	;# 
  1332  0195                     	;# 
  1333  0196                     	;# 
  1334  0197                     	;# 
  1335  0199                     	;# 
  1336  019A                     	;# 
  1337  019B                     	;# 
  1338  019B                     	;# 
  1339  019B                     	;# 
  1340  019B                     	;# 
  1341  019C                     	;# 
  1342  019C                     	;# 
  1343  019D                     	;# 
  1344  019E                     	;# 
  1345  019F                     	;# 
  1346  020D                     	;# 
  1347  0210                     	;# 
  1348  0211                     	;# 
  1349  0211                     	;# 
  1350  0212                     	;# 
  1351  0212                     	;# 
  1352  0213                     	;# 
  1353  0213                     	;# 
  1354  0214                     	;# 
  1355  0214                     	;# 
  1356  0215                     	;# 
  1357  0215                     	;# 
  1358  0215                     	;# 
  1359  0216                     	;# 
  1360  0216                     	;# 
  1361  0217                     	;# 
  1362  0217                     	;# 
  1363  0291                     	;# 
  1364  0291                     	;# 
  1365  0292                     	;# 
  1366  0293                     	;# 
  1367  0298                     	;# 
  1368  0298                     	;# 
  1369  0299                     	;# 
  1370  029A                     	;# 
  1371  0394                     	;# 
  1372  0395                     	;# 
  1373  0396                     	;# 
  1374  0FE4                     	;# 
  1375  0FE5                     	;# 
  1376  0FE6                     	;# 
  1377  0FE7                     	;# 
  1378  0FE8                     	;# 
  1379  0FE9                     	;# 
  1380  0FEA                     	;# 
  1381  0FEB                     	;# 
  1382  0FED                     	;# 
  1383  0FEE                     	;# 
  1384  0FEF                     	;# 
  1385  0000                     	;# 
  1386  0001                     	;# 
  1387  0002                     	;# 
  1388  0003                     	;# 
  1389  0004                     	;# 
  1390  0005                     	;# 
  1391  0006                     	;# 
  1392  0007                     	;# 
  1393  0008                     	;# 
  1394  0009                     	;# 
  1395  000A                     	;# 
  1396  000B                     	;# 
  1397  000C                     	;# 
  1398  000D                     	;# 
  1399  000E                     	;# 
  1400  0010                     	;# 
  1401  0011                     	;# 
  1402  0012                     	;# 
  1403  0015                     	;# 
  1404  0016                     	;# 
  1405  0016                     	;# 
  1406  0017                     	;# 
  1407  0018                     	;# 
  1408  0019                     	;# 
  1409  001A                     	;# 
  1410  001B                     	;# 
  1411  001C                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0090                     	;# 
  1416  0091                     	;# 
  1417  0092                     	;# 
  1418  0095                     	;# 
  1419  0096                     	;# 
  1420  0097                     	;# 
  1421  0099                     	;# 
  1422  009A                     	;# 
  1423  009B                     	;# 
  1424  009B                     	;# 
  1425  009C                     	;# 
  1426  009D                     	;# 
  1427  009E                     	;# 
  1428  010C                     	;# 
  1429  010D                     	;# 
  1430  010E                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  011D                     	;# 
  1434  018C                     	;# 
  1435  018D                     	;# 
  1436  018E                     	;# 
  1437  0191                     	;# 
  1438  0191                     	;# 
  1439  0192                     	;# 
  1440  0193                     	;# 
  1441  0193                     	;# 
  1442  0194                     	;# 
  1443  0195                     	;# 
  1444  0196                     	;# 
  1445  0197                     	;# 
  1446  0199                     	;# 
  1447  019A                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019C                     	;# 
  1453  019C                     	;# 
  1454  019D                     	;# 
  1455  019E                     	;# 
  1456  019F                     	;# 
  1457  020D                     	;# 
  1458  0210                     	;# 
  1459  0211                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0212                     	;# 
  1463  0213                     	;# 
  1464  0213                     	;# 
  1465  0214                     	;# 
  1466  0214                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0216                     	;# 
  1471  0216                     	;# 
  1472  0217                     	;# 
  1473  0217                     	;# 
  1474  0291                     	;# 
  1475  0291                     	;# 
  1476  0292                     	;# 
  1477  0293                     	;# 
  1478  0298                     	;# 
  1479  0298                     	;# 
  1480  0299                     	;# 
  1481  029A                     	;# 
  1482  0394                     	;# 
  1483  0395                     	;# 
  1484  0396                     	;# 
  1485  0FE4                     	;# 
  1486  0FE5                     	;# 
  1487  0FE6                     	;# 
  1488  0FE7                     	;# 
  1489  0FE8                     	;# 
  1490  0FE9                     	;# 
  1491  0FEA                     	;# 
  1492  0FEB                     	;# 
  1493  0FED                     	;# 
  1494  0FEE                     	;# 
  1495  0FEF                     	;# 
  1496  0000                     	;# 
  1497  0001                     	;# 
  1498  0002                     	;# 
  1499  0003                     	;# 
  1500  0004                     	;# 
  1501  0005                     	;# 
  1502  0006                     	;# 
  1503  0007                     	;# 
  1504  0008                     	;# 
  1505  0009                     	;# 
  1506  000A                     	;# 
  1507  000B                     	;# 
  1508  000C                     	;# 
  1509  000D                     	;# 
  1510  000E                     	;# 
  1511  0010                     	;# 
  1512  0011                     	;# 
  1513  0012                     	;# 
  1514  0015                     	;# 
  1515  0016                     	;# 
  1516  0016                     	;# 
  1517  0017                     	;# 
  1518  0018                     	;# 
  1519  0019                     	;# 
  1520  001A                     	;# 
  1521  001B                     	;# 
  1522  001C                     	;# 
  1523  008C                     	;# 
  1524  008D                     	;# 
  1525  008E                     	;# 
  1526  0090                     	;# 
  1527  0091                     	;# 
  1528  0092                     	;# 
  1529  0095                     	;# 
  1530  0096                     	;# 
  1531  0097                     	;# 
  1532  0099                     	;# 
  1533  009A                     	;# 
  1534  009B                     	;# 
  1535  009B                     	;# 
  1536  009C                     	;# 
  1537  009D                     	;# 
  1538  009E                     	;# 
  1539  010C                     	;# 
  1540  010D                     	;# 
  1541  010E                     	;# 
  1542  0116                     	;# 
  1543  0117                     	;# 
  1544  011D                     	;# 
  1545  018C                     	;# 
  1546  018D                     	;# 
  1547  018E                     	;# 
  1548  0191                     	;# 
  1549  0191                     	;# 
  1550  0192                     	;# 
  1551  0193                     	;# 
  1552  0193                     	;# 
  1553  0194                     	;# 
  1554  0195                     	;# 
  1555  0196                     	;# 
  1556  0197                     	;# 
  1557  0199                     	;# 
  1558  019A                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019C                     	;# 
  1564  019C                     	;# 
  1565  019D                     	;# 
  1566  019E                     	;# 
  1567  019F                     	;# 
  1568  020D                     	;# 
  1569  0210                     	;# 
  1570  0211                     	;# 
  1571  0211                     	;# 
  1572  0212                     	;# 
  1573  0212                     	;# 
  1574  0213                     	;# 
  1575  0213                     	;# 
  1576  0214                     	;# 
  1577  0214                     	;# 
  1578  0215                     	;# 
  1579  0215                     	;# 
  1580  0215                     	;# 
  1581  0216                     	;# 
  1582  0216                     	;# 
  1583  0217                     	;# 
  1584  0217                     	;# 
  1585  0291                     	;# 
  1586  0291                     	;# 
  1587  0292                     	;# 
  1588  0293                     	;# 
  1589  0298                     	;# 
  1590  0298                     	;# 
  1591  0299                     	;# 
  1592  029A                     	;# 
  1593  0394                     	;# 
  1594  0395                     	;# 
  1595  0396                     	;# 
  1596  0FE4                     	;# 
  1597  0FE5                     	;# 
  1598  0FE6                     	;# 
  1599  0FE7                     	;# 
  1600  0FE8                     	;# 
  1601  0FE9                     	;# 
  1602  0FEA                     	;# 
  1603  0FEB                     	;# 
  1604  0FED                     	;# 
  1605  0FEE                     	;# 
  1606  0FEF                     	;# 
  1607  0000                     	;# 
  1608  0001                     	;# 
  1609  0002                     	;# 
  1610  0003                     	;# 
  1611  0004                     	;# 
  1612  0005                     	;# 
  1613  0006                     	;# 
  1614  0007                     	;# 
  1615  0008                     	;# 
  1616  0009                     	;# 
  1617  000A                     	;# 
  1618  000B                     	;# 
  1619  000C                     	;# 
  1620  000D                     	;# 
  1621  000E                     	;# 
  1622  0010                     	;# 
  1623  0011                     	;# 
  1624  0012                     	;# 
  1625  0015                     	;# 
  1626  0016                     	;# 
  1627  0016                     	;# 
  1628  0017                     	;# 
  1629  0018                     	;# 
  1630  0019                     	;# 
  1631  001A                     	;# 
  1632  001B                     	;# 
  1633  001C                     	;# 
  1634  008C                     	;# 
  1635  008D                     	;# 
  1636  008E                     	;# 
  1637  0090                     	;# 
  1638  0091                     	;# 
  1639  0092                     	;# 
  1640  0095                     	;# 
  1641  0096                     	;# 
  1642  0097                     	;# 
  1643  0099                     	;# 
  1644  009A                     	;# 
  1645  009B                     	;# 
  1646  009B                     	;# 
  1647  009C                     	;# 
  1648  009D                     	;# 
  1649  009E                     	;# 
  1650  010C                     	;# 
  1651  010D                     	;# 
  1652  010E                     	;# 
  1653  0116                     	;# 
  1654  0117                     	;# 
  1655  011D                     	;# 
  1656  018C                     	;# 
  1657  018D                     	;# 
  1658  018E                     	;# 
  1659  0191                     	;# 
  1660  0191                     	;# 
  1661  0192                     	;# 
  1662  0193                     	;# 
  1663  0193                     	;# 
  1664  0194                     	;# 
  1665  0195                     	;# 
  1666  0196                     	;# 
  1667  0197                     	;# 
  1668  0199                     	;# 
  1669  019A                     	;# 
  1670  019B                     	;# 
  1671  019B                     	;# 
  1672  019B                     	;# 
  1673  019B                     	;# 
  1674  019C                     	;# 
  1675  019C                     	;# 
  1676  019D                     	;# 
  1677  019E                     	;# 
  1678  019F                     	;# 
  1679  020D                     	;# 
  1680  0210                     	;# 
  1681  0211                     	;# 
  1682  0211                     	;# 
  1683  0212                     	;# 
  1684  0212                     	;# 
  1685  0213                     	;# 
  1686  0213                     	;# 
  1687  0214                     	;# 
  1688  0214                     	;# 
  1689  0215                     	;# 
  1690  0215                     	;# 
  1691  0215                     	;# 
  1692  0216                     	;# 
  1693  0216                     	;# 
  1694  0217                     	;# 
  1695  0217                     	;# 
  1696  0291                     	;# 
  1697  0291                     	;# 
  1698  0292                     	;# 
  1699  0293                     	;# 
  1700  0298                     	;# 
  1701  0298                     	;# 
  1702  0299                     	;# 
  1703  029A                     	;# 
  1704  0394                     	;# 
  1705  0395                     	;# 
  1706  0396                     	;# 
  1707  0FE4                     	;# 
  1708  0FE5                     	;# 
  1709  0FE6                     	;# 
  1710  0FE7                     	;# 
  1711  0FE8                     	;# 
  1712  0FE9                     	;# 
  1713  0FEA                     	;# 
  1714  0FEB                     	;# 
  1715  0FED                     	;# 
  1716  0FEE                     	;# 
  1717  0FEF                     	;# 
  1718  0000                     	;# 
  1719  0001                     	;# 
  1720  0002                     	;# 
  1721  0003                     	;# 
  1722  0004                     	;# 
  1723  0005                     	;# 
  1724  0006                     	;# 
  1725  0007                     	;# 
  1726  0008                     	;# 
  1727  0009                     	;# 
  1728  000A                     	;# 
  1729  000B                     	;# 
  1730  000C                     	;# 
  1731  000D                     	;# 
  1732  000E                     	;# 
  1733  0010                     	;# 
  1734  0011                     	;# 
  1735  0012                     	;# 
  1736  0015                     	;# 
  1737  0016                     	;# 
  1738  0016                     	;# 
  1739  0017                     	;# 
  1740  0018                     	;# 
  1741  0019                     	;# 
  1742  001A                     	;# 
  1743  001B                     	;# 
  1744  001C                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  008E                     	;# 
  1748  0090                     	;# 
  1749  0091                     	;# 
  1750  0092                     	;# 
  1751  0095                     	;# 
  1752  0096                     	;# 
  1753  0097                     	;# 
  1754  0099                     	;# 
  1755  009A                     	;# 
  1756  009B                     	;# 
  1757  009B                     	;# 
  1758  009C                     	;# 
  1759  009D                     	;# 
  1760  009E                     	;# 
  1761  010C                     	;# 
  1762  010D                     	;# 
  1763  010E                     	;# 
  1764  0116                     	;# 
  1765  0117                     	;# 
  1766  011D                     	;# 
  1767  018C                     	;# 
  1768  018D                     	;# 
  1769  018E                     	;# 
  1770  0191                     	;# 
  1771  0191                     	;# 
  1772  0192                     	;# 
  1773  0193                     	;# 
  1774  0193                     	;# 
  1775  0194                     	;# 
  1776  0195                     	;# 
  1777  0196                     	;# 
  1778  0197                     	;# 
  1779  0199                     	;# 
  1780  019A                     	;# 
  1781  019B                     	;# 
  1782  019B                     	;# 
  1783  019B                     	;# 
  1784  019B                     	;# 
  1785  019C                     	;# 
  1786  019C                     	;# 
  1787  019D                     	;# 
  1788  019E                     	;# 
  1789  019F                     	;# 
  1790  020D                     	;# 
  1791  0210                     	;# 
  1792  0211                     	;# 
  1793  0211                     	;# 
  1794  0212                     	;# 
  1795  0212                     	;# 
  1796  0213                     	;# 
  1797  0213                     	;# 
  1798  0214                     	;# 
  1799  0214                     	;# 
  1800  0215                     	;# 
  1801  0215                     	;# 
  1802  0215                     	;# 
  1803  0216                     	;# 
  1804  0216                     	;# 
  1805  0217                     	;# 
  1806  0217                     	;# 
  1807  0291                     	;# 
  1808  0291                     	;# 
  1809  0292                     	;# 
  1810  0293                     	;# 
  1811  0298                     	;# 
  1812  0298                     	;# 
  1813  0299                     	;# 
  1814  029A                     	;# 
  1815  0394                     	;# 
  1816  0395                     	;# 
  1817  0396                     	;# 
  1818  0FE4                     	;# 
  1819  0FE5                     	;# 
  1820  0FE6                     	;# 
  1821  0FE7                     	;# 
  1822  0FE8                     	;# 
  1823  0FE9                     	;# 
  1824  0FEA                     	;# 
  1825  0FEB                     	;# 
  1826  0FED                     	;# 
  1827  0FEE                     	;# 
  1828  0FEF                     	;# 
  1829  0000                     	;# 
  1830  0001                     	;# 
  1831  0002                     	;# 
  1832  0003                     	;# 
  1833  0004                     	;# 
  1834  0005                     	;# 
  1835  0006                     	;# 
  1836  0007                     	;# 
  1837  0008                     	;# 
  1838  0009                     	;# 
  1839  000A                     	;# 
  1840  000B                     	;# 
  1841  000C                     	;# 
  1842  000D                     	;# 
  1843  000E                     	;# 
  1844  0010                     	;# 
  1845  0011                     	;# 
  1846  0012                     	;# 
  1847  0015                     	;# 
  1848  0016                     	;# 
  1849  0016                     	;# 
  1850  0017                     	;# 
  1851  0018                     	;# 
  1852  0019                     	;# 
  1853  001A                     	;# 
  1854  001B                     	;# 
  1855  001C                     	;# 
  1856  008C                     	;# 
  1857  008D                     	;# 
  1858  008E                     	;# 
  1859  0090                     	;# 
  1860  0091                     	;# 
  1861  0092                     	;# 
  1862  0095                     	;# 
  1863  0096                     	;# 
  1864  0097                     	;# 
  1865  0099                     	;# 
  1866  009A                     	;# 
  1867  009B                     	;# 
  1868  009B                     	;# 
  1869  009C                     	;# 
  1870  009D                     	;# 
  1871  009E                     	;# 
  1872  010C                     	;# 
  1873  010D                     	;# 
  1874  010E                     	;# 
  1875  0116                     	;# 
  1876  0117                     	;# 
  1877  011D                     	;# 
  1878  018C                     	;# 
  1879  018D                     	;# 
  1880  018E                     	;# 
  1881  0191                     	;# 
  1882  0191                     	;# 
  1883  0192                     	;# 
  1884  0193                     	;# 
  1885  0193                     	;# 
  1886  0194                     	;# 
  1887  0195                     	;# 
  1888  0196                     	;# 
  1889  0197                     	;# 
  1890  0199                     	;# 
  1891  019A                     	;# 
  1892  019B                     	;# 
  1893  019B                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019C                     	;# 
  1897  019C                     	;# 
  1898  019D                     	;# 
  1899  019E                     	;# 
  1900  019F                     	;# 
  1901  020D                     	;# 
  1902  0210                     	;# 
  1903  0211                     	;# 
  1904  0211                     	;# 
  1905  0212                     	;# 
  1906  0212                     	;# 
  1907  0213                     	;# 
  1908  0213                     	;# 
  1909  0214                     	;# 
  1910  0214                     	;# 
  1911  0215                     	;# 
  1912  0215                     	;# 
  1913  0215                     	;# 
  1914  0216                     	;# 
  1915  0216                     	;# 
  1916  0217                     	;# 
  1917  0217                     	;# 
  1918  0291                     	;# 
  1919  0291                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0298                     	;# 
  1923  0298                     	;# 
  1924  0299                     	;# 
  1925  029A                     	;# 
  1926  0394                     	;# 
  1927  0395                     	;# 
  1928  0396                     	;# 
  1929  0FE4                     	;# 
  1930  0FE5                     	;# 
  1931  0FE6                     	;# 
  1932  0FE7                     	;# 
  1933  0FE8                     	;# 
  1934  0FE9                     	;# 
  1935  0FEA                     	;# 
  1936  0FEB                     	;# 
  1937  0FED                     	;# 
  1938  0FEE                     	;# 
  1939  0FEF                     	;# 
  1940  0000                     	;# 
  1941  0001                     	;# 
  1942  0002                     	;# 
  1943  0003                     	;# 
  1944  0004                     	;# 
  1945  0005                     	;# 
  1946  0006                     	;# 
  1947  0007                     	;# 
  1948  0008                     	;# 
  1949  0009                     	;# 
  1950  000A                     	;# 
  1951  000B                     	;# 
  1952  000C                     	;# 
  1953  000D                     	;# 
  1954  000E                     	;# 
  1955  0010                     	;# 
  1956  0011                     	;# 
  1957  0012                     	;# 
  1958  0015                     	;# 
  1959  0016                     	;# 
  1960  0016                     	;# 
  1961  0017                     	;# 
  1962  0018                     	;# 
  1963  0019                     	;# 
  1964  001A                     	;# 
  1965  001B                     	;# 
  1966  001C                     	;# 
  1967  008C                     	;# 
  1968  008D                     	;# 
  1969  008E                     	;# 
  1970  0090                     	;# 
  1971  0091                     	;# 
  1972  0092                     	;# 
  1973  0095                     	;# 
  1974  0096                     	;# 
  1975  0097                     	;# 
  1976  0099                     	;# 
  1977  009A                     	;# 
  1978  009B                     	;# 
  1979  009B                     	;# 
  1980  009C                     	;# 
  1981  009D                     	;# 
  1982  009E                     	;# 
  1983  010C                     	;# 
  1984  010D                     	;# 
  1985  010E                     	;# 
  1986  0116                     	;# 
  1987  0117                     	;# 
  1988  011D                     	;# 
  1989  018C                     	;# 
  1990  018D                     	;# 
  1991  018E                     	;# 
  1992  0191                     	;# 
  1993  0191                     	;# 
  1994  0192                     	;# 
  1995  0193                     	;# 
  1996  0193                     	;# 
  1997  0194                     	;# 
  1998  0195                     	;# 
  1999  0196                     	;# 
  2000  0197                     	;# 
  2001  0199                     	;# 
  2002  019A                     	;# 
  2003  019B                     	;# 
  2004  019B                     	;# 
  2005  019B                     	;# 
  2006  019B                     	;# 
  2007  019C                     	;# 
  2008  019C                     	;# 
  2009  019D                     	;# 
  2010  019E                     	;# 
  2011  019F                     	;# 
  2012  020D                     	;# 
  2013  0210                     	;# 
  2014  0211                     	;# 
  2015  0211                     	;# 
  2016  0212                     	;# 
  2017  0212                     	;# 
  2018  0213                     	;# 
  2019  0213                     	;# 
  2020  0214                     	;# 
  2021  0214                     	;# 
  2022  0215                     	;# 
  2023  0215                     	;# 
  2024  0215                     	;# 
  2025  0216                     	;# 
  2026  0216                     	;# 
  2027  0217                     	;# 
  2028  0217                     	;# 
  2029  0291                     	;# 
  2030  0291                     	;# 
  2031  0292                     	;# 
  2032  0293                     	;# 
  2033  0298                     	;# 
  2034  0298                     	;# 
  2035  0299                     	;# 
  2036  029A                     	;# 
  2037  0394                     	;# 
  2038  0395                     	;# 
  2039  0396                     	;# 
  2040  0FE4                     	;# 
  2041  0FE5                     	;# 
  2042  0FE6                     	;# 
  2043  0FE7                     	;# 
  2044  0FE8                     	;# 
  2045  0FE9                     	;# 
  2046  0FEA                     	;# 
  2047  0FEB                     	;# 
  2048  0FED                     	;# 
  2049  0FEE                     	;# 
  2050  0FEF                     	;# 
  2051  0000                     	;# 
  2052  0001                     	;# 
  2053  0002                     	;# 
  2054  0003                     	;# 
  2055  0004                     	;# 
  2056  0005                     	;# 
  2057  0006                     	;# 
  2058  0007                     	;# 
  2059  0008                     	;# 
  2060  0009                     	;# 
  2061  000A                     	;# 
  2062  000B                     	;# 
  2063  000C                     	;# 
  2064  000D                     	;# 
  2065  000E                     	;# 
  2066  0010                     	;# 
  2067  0011                     	;# 
  2068  0012                     	;# 
  2069  0015                     	;# 
  2070  0016                     	;# 
  2071  0016                     	;# 
  2072  0017                     	;# 
  2073  0018                     	;# 
  2074  0019                     	;# 
  2075  001A                     	;# 
  2076  001B                     	;# 
  2077  001C                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  0090                     	;# 
  2082  0091                     	;# 
  2083  0092                     	;# 
  2084  0095                     	;# 
  2085  0096                     	;# 
  2086  0097                     	;# 
  2087  0099                     	;# 
  2088  009A                     	;# 
  2089  009B                     	;# 
  2090  009B                     	;# 
  2091  009C                     	;# 
  2092  009D                     	;# 
  2093  009E                     	;# 
  2094  010C                     	;# 
  2095  010D                     	;# 
  2096  010E                     	;# 
  2097  0116                     	;# 
  2098  0117                     	;# 
  2099  011D                     	;# 
  2100  018C                     	;# 
  2101  018D                     	;# 
  2102  018E                     	;# 
  2103  0191                     	;# 
  2104  0191                     	;# 
  2105  0192                     	;# 
  2106  0193                     	;# 
  2107  0193                     	;# 
  2108  0194                     	;# 
  2109  0195                     	;# 
  2110  0196                     	;# 
  2111  0197                     	;# 
  2112  0199                     	;# 
  2113  019A                     	;# 
  2114  019B                     	;# 
  2115  019B                     	;# 
  2116  019B                     	;# 
  2117  019B                     	;# 
  2118  019C                     	;# 
  2119  019C                     	;# 
  2120  019D                     	;# 
  2121  019E                     	;# 
  2122  019F                     	;# 
  2123  020D                     	;# 
  2124  0210                     	;# 
  2125  0211                     	;# 
  2126  0211                     	;# 
  2127  0212                     	;# 
  2128  0212                     	;# 
  2129  0213                     	;# 
  2130  0213                     	;# 
  2131  0214                     	;# 
  2132  0214                     	;# 
  2133  0215                     	;# 
  2134  0215                     	;# 
  2135  0215                     	;# 
  2136  0216                     	;# 
  2137  0216                     	;# 
  2138  0217                     	;# 
  2139  0217                     	;# 
  2140  0291                     	;# 
  2141  0291                     	;# 
  2142  0292                     	;# 
  2143  0293                     	;# 
  2144  0298                     	;# 
  2145  0298                     	;# 
  2146  0299                     	;# 
  2147  029A                     	;# 
  2148  0394                     	;# 
  2149  0395                     	;# 
  2150  0396                     	;# 
  2151  0FE4                     	;# 
  2152  0FE5                     	;# 
  2153  0FE6                     	;# 
  2154  0FE7                     	;# 
  2155  0FE8                     	;# 
  2156  0FE9                     	;# 
  2157  0FEA                     	;# 
  2158  0FEB                     	;# 
  2159  0FED                     	;# 
  2160  0FEE                     	;# 
  2161  0FEF                     	;# 
  2162                           
  2163                           	psect	idataBANK5
  2164  1F18                     __pidataBANK5:	
  2165                           
  2166                           ;initializer for __product
  2167  1F18  3463               	retlw	99
  2168  1F19  3402               	retlw	2
  2169  1F1A  3400               	retlw	0
  2170  1F1B  3400               	retlw	0
  2171  1F1C  3400               	retlw	0
  2172  1F1D  3400               	retlw	0
  2173  1F1E  3400               	retlw	0
  2174  1F1F  3400               	retlw	0
  2175  1F20  3400               	retlw	0
  2176  1F21  3400               	retlw	0
  2177  1F22  3400               	retlw	0
  2178  1F23  3400               	retlw	0
  2179  1F24  34FF               	retlw	255
  2180  1F25  34FF               	retlw	255
  2181  1F26  34FF               	retlw	255
  2182  1F27  3400               	retlw	0
  2183  1F28  3400               	retlw	0
  2184  1F29  3400               	retlw	0
  2185  1F2A  3400               	retlw	0
  2186  1F2B  3400               	retlw	0
  2187  1F2C  3400               	retlw	0
  2188  1F2D  3400               	retlw	0
  2189  1F2E  3400               	retlw	0
  2190  1F2F  3400               	retlw	0
  2191  1F30  3400               	retlw	0
  2192  1F31  3400               	retlw	0
  2193  1F32  3400               	retlw	0
  2194  1F33  3400               	retlw	0
  2195  1F34  3400               	retlw	0
  2196  1F35  3400               	retlw	0
  2197  1F36  3400               	retlw	0
  2198  1F37  3400               	retlw	0
  2199                           
  2200                           	psect	stringtext
  2201  1000                     __pstringtext:	
  2202  1000                     _CC2500_registers_address:	
  2203  1000  3403               	retlw	3
  2204  1001  3416               	retlw	22
  2205  1002  3417               	retlw	23
  2206  1003  341E               	retlw	30
  2207  1004  341F               	retlw	31
  2208  1005  3420               	retlw	32
  2209  1006  342A               	retlw	42
  2210  1007  342B               	retlw	43
  2211  1008  340B               	retlw	11
  2212  1009  340C               	retlw	12
  2213  100A  340D               	retlw	13
  2214  100B  340E               	retlw	14
  2215  100C  340F               	retlw	15
  2216  100D  3410               	retlw	16
  2217  100E  3411               	retlw	17
  2218  100F  3412               	retlw	18
  2219  1010  3413               	retlw	19
  2220  1011  3414               	retlw	20
  2221  1012  340A               	retlw	10
  2222  1013  3415               	retlw	21
  2223  1014  3421               	retlw	33
  2224  1015  3422               	retlw	34
  2225  1016  3418               	retlw	24
  2226  1017  3419               	retlw	25
  2227  1018  341A               	retlw	26
  2228  1019  341B               	retlw	27
  2229  101A  341C               	retlw	28
  2230  101B  341D               	retlw	29
  2231  101C  3423               	retlw	35
  2232  101D  3424               	retlw	36
  2233  101E  3425               	retlw	37
  2234  101F  3426               	retlw	38
  2235  1020  3429               	retlw	41
  2236  1021  342C               	retlw	44
  2237  1022  342D               	retlw	45
  2238  1023  342E               	retlw	46
  2239  1024  3400               	retlw	0
  2240  1025  3401               	retlw	1
  2241  1026  3402               	retlw	2
  2242  1027  3407               	retlw	7
  2243  1028  3408               	retlw	8
  2244  1029  3409               	retlw	9
  2245  102A  3406               	retlw	6
  2246  102B  3404               	retlw	4
  2247  102C  3405               	retlw	5
  2248  102D  3427               	retlw	39
  2249  102E  3428               	retlw	40
  2250  102F                     __end_of_CC2500_registers_address:	
  2251  102F                     _CC2500_rfSettings:	
  2252  102F  3407               	retlw	7
  2253  1030  3407               	retlw	7
  2254  1031  3430               	retlw	48
  2255  1032  3487               	retlw	135
  2256  1033  346B               	retlw	107
  2257  1034  34F8               	retlw	248
  2258  1035  347F               	retlw	127
  2259  1036  343F               	retlw	63
  2260  1037  3409               	retlw	9
  2261  1038  3400               	retlw	0
  2262  1039  345C               	retlw	92
  2263  103A  34A7               	retlw	167
  2264  103B  3462               	retlw	98
  2265  103C  3486               	retlw	134
  2266  103D  3483               	retlw	131
  2267  103E  3403               	retlw	3
  2268  103F  3422               	retlw	34
  2269  1040  34F8               	retlw	248
  2270  1041  3400               	retlw	0
  2271  1042  3444               	retlw	68
  2272  1043  34B6               	retlw	182
  2273  1044  3410               	retlw	16
  2274  1045  3418               	retlw	24
  2275  1046  341D               	retlw	29
  2276  1047  341C               	retlw	28
  2277  1048  34C7               	retlw	199
  2278  1049  3400               	retlw	0
  2279  104A  34B2               	retlw	178
  2280  104B  34EA               	retlw	234
  2281  104C  340A               	retlw	10
  2282  104D  3400               	retlw	0
  2283  104E  3411               	retlw	17
  2284  104F  3459               	retlw	89
  2285  1050  3488               	retlw	136
  2286  1051  3431               	retlw	49
  2287  1052  340B               	retlw	11
  2288  1053  342F               	retlw	47
  2289  1054  342E               	retlw	46
  2290  1055  3406               	retlw	6
  2291  1056  3404               	retlw	4
  2292  1057  3405               	retlw	5
  2293  1058  3400               	retlw	0
  2294  1059  3430               	retlw	48
  2295  105A  34D3               	retlw	211
  2296  105B  3491               	retlw	145
  2297  105C  3441               	retlw	65
  2298  105D  3400               	retlw	0
  2299  105E                     __end_of_CC2500_rfSettings:	
  2300  105E                     _CC2500_patable_vaule:	
  2301  105E  34FE               	retlw	254
  2302  105F  34FE               	retlw	254
  2303  1060  34FE               	retlw	254
  2304  1061  34FE               	retlw	254
  2305  1062  34FE               	retlw	254
  2306  1063  34FE               	retlw	254
  2307  1064  34FE               	retlw	254
  2308  1065  34FE               	retlw	254
  2309  1066                     __end_of_CC2500_patable_vaule:	
  2310                           
  2311                           	psect	nvBANK0
  2312  006D                     __pnvBANK0:	
  2313  006D                     _product:	
  2314  006D                     	ds	1
  2315  000C                     _PORTA	set	12
  2316  000D                     _PORTB	set	13
  2317  000E                     _PORTC	set	14
  2318  0018                     _T1CON	set	24
  2319  0017                     _TMR1H	set	23
  2320  0016                     _TMR1L	set	22
  2321  005F                     _GIE	set	95
  2322  005B                     _IOCIE	set	91
  2323  0058                     _IOCIF	set	88
  2324  005E                     _PEIE	set	94
  2325  0060                     _RA0	set	96
  2326  0063                     _RA3	set	99
  2327  0064                     _RA4	set	100
  2328  0066                     _RA6	set	102
  2329  0068                     _RB0	set	104
  2330  006A                     _RB2	set	106
  2331  006B                     _RB3	set	107
  2332  006C                     _RB4	set	108
  2333  006D                     _RB5	set	109
  2334  0070                     _RC0	set	112
  2335  0071                     _RC1	set	113
  2336  0072                     _RC2	set	114
  2337  0074                     _RC4	set	116
  2338  0075                     _RC5	set	117
  2339  0076                     _RC6	set	118
  2340  0077                     _RC7	set	119
  2341  0088                     _TMR1IF	set	136
  2342  009D                     _ADCON0	set	157
  2343  009E                     _ADCON1	set	158
  2344  009C                     _ADRESH	set	156
  2345  009B                     _ADRESL	set	155
  2346  0099                     _OSCCON	set	153
  2347  008C                     _TRISA	set	140
  2348  008D                     _TRISB	set	141
  2349  008E                     _TRISC	set	142
  2350  0097                     _WDTCON	set	151
  2351  04E9                     _GO_nDONE	set	1257
  2352  0488                     _TMR1IE	set	1160
  2353  0117                     _FVRCON	set	279
  2354  010C                     _LATA	set	268
  2355  010D                     _LATB	set	269
  2356  010E                     _LATC	set	270
  2357  018C                     _ANSELA	set	396
  2358  018D                     _ANSELB	set	397
  2359  018E                     _ANSELC	set	398
  2360  0192                     _PMADRH	set	402
  2361  0191                     _PMADRL	set	401
  2362  0196                     _PMCON2	set	406
  2363  0194                     _PMDATH	set	404
  2364  0193                     _PMDATL	set	403
  2365  0CAE                     _CFGS	set	3246
  2366  0CAC                     _FREE	set	3244
  2367  0CAD                     _LWLO	set	3245
  2368  0CA8                     _RD	set	3240
  2369  0CA9                     _WR	set	3241
  2370  0CAA                     _WREN	set	3242
  2371  020D                     _WPUB	set	525
  2372  0396                     _IOCBF	set	918
  2373  0395                     _IOCBN	set	917
  2374  0394                     _IOCBP	set	916
  2375  1CB2                     _IOCBF2	set	7346
  2376                           
  2377                           ; #config settings
  2378  0000                     
  2379                           	psect	cinit
  2380  0021                     start_initialization:	
  2381  0021                     __initialization:	
  2382                           
  2383                           ; Clear objects allocated to BITCOMMON
  2384  0021  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2385                           
  2386                           ; Clear objects allocated to COMMON
  2387  0022  01FB               	clrf	__pbssCOMMON& (0+127)
  2388                           
  2389                           ; Clear objects allocated to BANK0
  2390  0023  01E7               	clrf	__pbssBANK0& (0+127)
  2391  0024  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  2392  0025  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  2393  0026  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  2394  0027  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  2395  0028  01EC               	clrf	(__pbssBANK0+5)& (0+127)
  2396                           
  2397                           ; Clear objects allocated to BANK1
  2398  0029  30A0               	movlw	low __pbssBANK1
  2399  002A  0084               	movwf	4
  2400  002B  3000               	movlw	high __pbssBANK1
  2401  002C  0085               	movwf	5
  2402  002D  304F               	movlw	79
  2403  002E  319B  232A  3180   	fcall	clear_ram0
  2404                           
  2405                           ; Clear objects allocated to BANK2
  2406  0031  3020               	movlw	low __pbssBANK2
  2407  0032  0084               	movwf	4
  2408  0033  3001               	movlw	high __pbssBANK2
  2409  0034  0085               	movwf	5
  2410  0035  3050               	movlw	80
  2411  0036  319B  232A  3180   	fcall	clear_ram0
  2412                           
  2413                           ; Clear objects allocated to BANK3
  2414  0039  30A0               	movlw	low __pbssBANK3
  2415  003A  0084               	movwf	4
  2416  003B  3001               	movlw	high __pbssBANK3
  2417  003C  0085               	movwf	5
  2418  003D  304F               	movlw	79
  2419  003E  319B  232A  3180   	fcall	clear_ram0
  2420                           
  2421                           ; Clear objects allocated to BANK4
  2422  0041  3020               	movlw	low __pbssBANK4
  2423  0042  0084               	movwf	4
  2424  0043  3002               	movlw	high __pbssBANK4
  2425  0044  0085               	movwf	5
  2426  0045  3035               	movlw	53
  2427  0046  319B  232A  3180   	fcall	clear_ram0
  2428                           
  2429                           ; Initialize objects allocated to BANK5
  2430  0049  3018               	movlw	low __pidataBANK5
  2431  004A  0084               	movwf	4
  2432  004B  309F               	movlw	(high __pidataBANK5)| (0+128)
  2433  004C  0085               	movwf	5
  2434  004D  30A0               	movlw	low __pdataBANK5
  2435  004E  0086               	movwf	6
  2436  004F  3002               	movlw	high __pdataBANK5
  2437  0050  0087               	movwf	7
  2438  0051  3020               	movlw	32
  2439  0052  319B  2324         	fcall	init_ram
  2440  0054                     end_of_initialization:	
  2441                           ;End of C runtime variable initialization code
  2442                           
  2443  0054                     __end_of__initialization:	
  2444  0054  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2445  0055  0020               	movlb	0
  2446  0056  3195  2DA2         	ljmp	_main	;jump to C main() function
  2447                           
  2448                           	psect	bitbssCOMMON
  2449  03D0                     __pbitbssCOMMON:	
  2450  03D0                     _Receive_OK:	
  2451  03D0                     	ds	1
  2452  03D1                     _Transceive_OK:	
  2453  03D1                     	ds	1
  2454                           
  2455                           	psect	bssCOMMON
  2456  007B                     __pbssCOMMON:	
  2457  007B                     _LED:	
  2458  007B                     	ds	1
  2459                           
  2460                           	psect	bssBANK0
  2461  0067                     __pbssBANK0:	
  2462  0067                     _Cmd:	
  2463  0067                     	ds	1
  2464  0068                     _DelayOff:	
  2465  0068                     	ds	1
  2466  0069                     _DimmerLights:	
  2467  0069                     	ds	1
  2468  006A                     _SPI0Buffer:	
  2469  006A                     	ds	1
  2470  006B                     _Sw:	
  2471  006B                     	ds	1
  2472  006C                     _Tx_Length:	
  2473  006C                     	ds	1
  2474                           
  2475                           	psect	bssBANK1
  2476  00A0                     __pbssBANK1:	
  2477  00A0                     _DimmerIntr1:	
  2478  00A0                     	ds	16
  2479  00B0                     _RF1:	
  2480  00B0                     	ds	15
  2481  00BF                     _myMain:	
  2482  00BF                     	ds	13
  2483  00CC                     _Buz1:	
  2484  00CC                     	ds	12
  2485  00D8                     _CRC:	
  2486  00D8                     	ds	1
  2487  00D9                     _DimmerIntr:	
  2488  00D9                     	ds	1
  2489  00DA                     _Light:	
  2490  00DA                     	ds	1
  2491  00DB                     _RSSI:	
  2492  00DB                     	ds	1
  2493  00DC                     _Rx_Length:	
  2494  00DC                     	ds	1
  2495  00DD                     _SwDetect:	
  2496  00DD                     	ds	1
  2497  00DE                     _r_address:	
  2498  00DE                     	ds	1
  2499  00DF                     _r_data:	
  2500  00DF                     	ds	1
  2501  00E0                     _s_data:	
  2502  00E0                     	ds	1
  2503  00E1                     _Temp:	
  2504  00E1                     	ds	14
  2505                           
  2506                           	psect	bssBANK2
  2507  0120                     __pbssBANK2:	
  2508  0120                     _RF_Data:	
  2509  0120                     	ds	30
  2510  013E                     _DimmerIntr2:	
  2511  013E                     	ds	16
  2512  014E                     _Timer1:	
  2513  014E                     	ds	3
  2514  0151                     _RF_Count:	
  2515  0151                     	ds	2
  2516  0153                     _WDT:	
  2517  0153                     	ds	2
  2518  0155                     _DimmerLights1:	
  2519  0155                     	ds	9
  2520  015E                     _DimmerLights2:	
  2521  015E                     	ds	9
  2522  0167                     _DimmerLights3:	
  2523  0167                     	ds	9
  2524                           
  2525                           	psect	bssBANK3
  2526  01A0                     __pbssBANK3:	
  2527  01A0                     _DimmerIntr3:	
  2528  01A0                     	ds	16
  2529  01B0                     _Dimmer:	
  2530  01B0                     	ds	5
  2531  01B5                     _Sw1:	
  2532  01B5                     	ds	9
  2533  01BE                     _Sw2:	
  2534  01BE                     	ds	9
  2535  01C7                     _Sw3:	
  2536  01C7                     	ds	9
  2537  01D0                     _DlySw1:	
  2538  01D0                     	ds	5
  2539  01D5                     _DlySw2:	
  2540  01D5                     	ds	5
  2541  01DA                     _DlySw3:	
  2542  01DA                     	ds	5
  2543  01DF                     _VarErrLED:	
  2544  01DF                     	ds	4
  2545  01E3                     _VarLED1:	
  2546  01E3                     	ds	4
  2547  01E7                     _VarLED2:	
  2548  01E7                     	ds	4
  2549  01EB                     _VarLED3:	
  2550  01EB                     	ds	4
  2551                           
  2552                           	psect	bssBANK4
  2553  0220                     __pbssBANK4:	
  2554  0220                     _u1:	
  2555  0220                     	ds	16
  2556  0230                     _Memory:	
  2557  0230                     	ds	37
  2558                           
  2559                           	psect	dataBANK5
  2560  02A0                     __pdataBANK5:	
  2561  02A0                     __product:	
  2562  02A0                     	ds	32
  2563                           
  2564                           	psect	clrtext
  2565  1B2A                     clear_ram0:	
  2566                           ;	Called with FSR0 containing the base address, and
  2567                           ;	WREG with the size to clear
  2568                           
  2569  1B2A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2570  1B2B                     clrloop0:	
  2571  1B2B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2572  1B2C  3101               	addfsr 0,1
  2573  1B2D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2574  1B2E  2B2B               	goto	clrloop0	;have we reached the end yet?
  2575  1B2F  3400               	retlw	0	;all done for this memory range, return
  2576                           
  2577                           	psect	inittext
  2578  1B24                     init_ram:	
  2579  1B24  00FE               	movwf	126
  2580  1B25                     initloop:	
  2581  1B25  0012               	moviw fsr0++
  2582  1B26  001E               	movwi fsr1++
  2583  1B27  0BFE               	decfsz	126,f
  2584  1B28  2B25               	goto	initloop
  2585  1B29  3400               	retlw	0
  2586                           
  2587                           	psect	cstackBANK4
  2588  0255                     __pcstackBANK4:	
  2589  0255                     ?_main:	
  2590  0255                     main@argc:	
  2591                           ; 2 bytes @ 0x0
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x0
  2595  0255                     	ds	2
  2596  0257                     main@argv:	
  2597                           
  2598                           ; 2 bytes @ 0x2
  2599  0257                     	ds	2
  2600                           
  2601                           	psect	cstackCOMMON
  2602  0070                     __pcstackCOMMON:	
  2603  0070                     ?_CC2500_WriteCommand:	
  2604  0070                     ?_RF_Timeout_Counter:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ?_setRF_TimeoutCleared:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ?_CC2500_WriteByte:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_CC2500_ReadStatus:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ?_CC2500_ReadByte:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ?_CC2500_PowerRST:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ?_CC2500_InitSetREG:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_CC2500_InitPATable:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_CC2500_ClearTXFIFO:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_CC2500_ClearRXFIFO:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_CC2500_FrequencyCabr:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ?_CC2500_SIDLEMode:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ?_DlyOff_Initialization:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_DlyOff_Main:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ?_setDimmerLights_SwOn:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_setDimmerLights_SwOff:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?_setMemory_Modify:	
  2653                           ; 0 bytes @ 0x0
  2654                           
  2655  0070                     ?_setDimmerLights_Initialization:	
  2656                           ; 0 bytes @ 0x0
  2657                           
  2658  0070                     ?_setDimmerLights_Main:	
  2659                           ; 0 bytes @ 0x0
  2660                           
  2661  0070                     ?_DimmerLights_DimmingFunction:	
  2662                           ; 0 bytes @ 0x0
  2663                           
  2664  0070                     ?_DimmerIntr_ValueCalculate:	
  2665                           ; 0 bytes @ 0x0
  2666                           
  2667  0070                     ?_setDimmerLights_DimmingClose:	
  2668                           ; 0 bytes @ 0x0
  2669                           
  2670  0070                     ?_setTxData:	
  2671                           ; 0 bytes @ 0x0
  2672                           
  2673  0070                     ?_setRF_TransceiveGO:	
  2674                           ; 0 bytes @ 0x0
  2675                           
  2676  0070                     ?_setLED_Initialization:	
  2677                           ; 0 bytes @ 0x0
  2678                           
  2679  0070                     ?_setLED_Main:	
  2680                           ; 0 bytes @ 0x0
  2681                           
  2682  0070                     ?_Fosc_Set:	
  2683                           ; 0 bytes @ 0x0
  2684                           
  2685  0070                     ?_IO_Set:	
  2686                           ; 0 bytes @ 0x0
  2687                           
  2688  0070                     ?_TMR1_Set:	
  2689                           ; 0 bytes @ 0x0
  2690                           
  2691  0070                     ?_ADC_Set:	
  2692                           ; 0 bytes @ 0x0
  2693                           
  2694  0070                     ?_IOC_Set:	
  2695                           ; 0 bytes @ 0x0
  2696                           
  2697  0070                     ?_WDT_Set:	
  2698                           ; 0 bytes @ 0x0
  2699                           
  2700  0070                     ?_TMR1_ISR:	
  2701                           ; 0 bytes @ 0x0
  2702                           
  2703  0070                     ?_IOC_ISR:	
  2704                           ; 0 bytes @ 0x0
  2705                           
  2706  0070                     ??_IOC_ISR:	
  2707                           ; 0 bytes @ 0x0
  2708                           
  2709  0070                     ?_Timeout_Counter:	
  2710                           ; 0 bytes @ 0x0
  2711                           
  2712  0070                     ?_set_TimeoutCleared:	
  2713                           ; 0 bytes @ 0x0
  2714                           
  2715  0070                     ?_Flash_Memory_Write:	
  2716                           ; 0 bytes @ 0x0
  2717                           
  2718  0070                     ?_Flash_Memory_Modify:	
  2719                           ; 0 bytes @ 0x0
  2720                           
  2721  0070                     ?_WDT_Clearing:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0070                     ?_myMain_Initialization:	
  2725                           ; 0 bytes @ 0x0
  2726                           
  2727  0070                     ?_Temp_Initialization:	
  2728                           ; 0 bytes @ 0x0
  2729                           
  2730  0070                     ?_Switch_Initialization:	
  2731                           ; 0 bytes @ 0x0
  2732                           
  2733  0070                     ?_RF_Initialization:	
  2734                           ; 0 bytes @ 0x0
  2735                           
  2736  0070                     ?_getTemp_AD:	
  2737                           ; 0 bytes @ 0x0
  2738                           
  2739  0070                     ?_my_MainTimer:	
  2740                           ; 0 bytes @ 0x0
  2741                           
  2742  0070                     ?_Temp_Main:	
  2743                           ; 0 bytes @ 0x0
  2744                           
  2745  0070                     ?_Switch_Main:	
  2746                           ; 0 bytes @ 0x0
  2747                           
  2748  0070                     ?_RF_Main:	
  2749                           ; 0 bytes @ 0x0
  2750                           
  2751  0070                     ?_Exception_Main:	
  2752                           ; 0 bytes @ 0x0
  2753                           
  2754  0070                     ?_setTemp_Initialization:	
  2755                           ; 0 bytes @ 0x0
  2756                           
  2757  0070                     ?_setTemp_Main:	
  2758                           ; 0 bytes @ 0x0
  2759                           
  2760  0070                     ?_setOverTemp_ADV_Restore:	
  2761                           ; 0 bytes @ 0x0
  2762                           
  2763  0070                     ?_setRF_Initialization:	
  2764                           ; 0 bytes @ 0x0
  2765                           
  2766  0070                     ?_setRF_Main:	
  2767                           ; 0 bytes @ 0x0
  2768                           
  2769  0070                     ?_RF_RxDisable:	
  2770                           ; 0 bytes @ 0x0
  2771                           
  2772  0070                     ?_setData:	
  2773                           ; 0 bytes @ 0x0
  2774                           
  2775  0070                     ?_getRxData:	
  2776                           ; 0 bytes @ 0x0
  2777                           
  2778  0070                     ?_setLog_Code:	
  2779                           ; 0 bytes @ 0x0
  2780                           
  2781  0070                     ?_setControl_Lights_Table:	
  2782                           ; 0 bytes @ 0x0
  2783                           
  2784  0070                     ?_setRFSW_Control:	
  2785                           ; 0 bytes @ 0x0
  2786                           
  2787  0070                     ?_setRFSW_AdjControl:	
  2788                           ; 0 bytes @ 0x0
  2789                           
  2790  0070                     ?_setRF_AdjControl:	
  2791                           ; 0 bytes @ 0x0
  2792                           
  2793  0070                     ?_setSw_Initialization:	
  2794                           ; 0 bytes @ 0x0
  2795                           
  2796  0070                     ?_setSw_Main:	
  2797                           ; 0 bytes @ 0x0
  2798                           
  2799  0070                     ?_Buzzer_Initialization:	
  2800                           ; 0 bytes @ 0x0
  2801                           
  2802  0070                     ?_Buzzer_Main:	
  2803                           ; 0 bytes @ 0x0
  2804                           
  2805  0070                     ?_CC2500_TxData:	
  2806                           ; 0 bytes @ 0x0
  2807                           
  2808  0070                     ?_CC2500_RxData:	
  2809                           ; 0 bytes @ 0x0
  2810                           
  2811  0070                     ?_CC2500_PowerOnInitial:	
  2812                           ; 0 bytes @ 0x0
  2813                           
  2814  0070                     ?_DelayOffPointSelect:	
  2815                           ; 0 bytes @ 0x0
  2816                           
  2817  0070                     ?_DelayOff_Initialization:	
  2818                           ; 0 bytes @ 0x0
  2819                           
  2820  0070                     ?_DelayOff_Main:	
  2821                           ; 0 bytes @ 0x0
  2822                           
  2823  0070                     ?_DimmerIntr_Initialization:	
  2824                           ; 0 bytes @ 0x0
  2825                           
  2826  0070                     ?_DimmerLights_SelectPointer:	
  2827                           ; 0 bytes @ 0x0
  2828                           
  2829  0070                     ?_DimmerLights_Initialization:	
  2830                           ; 0 bytes @ 0x0
  2831                           
  2832  0070                     ?_setDimmerLights_DimmingOn:	
  2833                           ; 0 bytes @ 0x0
  2834                           
  2835  0070                     ?_DimmerLights_Main:	
  2836                           ; 0 bytes @ 0x0
  2837                           
  2838  0070                     ?_DimmerLights_TMR_1:	
  2839                           ; 0 bytes @ 0x0
  2840                           
  2841  0070                     ??_DimmerLights_TMR_1:	
  2842                           ; 0 bytes @ 0x0
  2843                           
  2844  0070                     ?_DimmerLights_IOC_1:	
  2845                           ; 0 bytes @ 0x0
  2846                           
  2847  0070                     ??_DimmerLights_IOC_1:	
  2848                           ; 0 bytes @ 0x0
  2849                           
  2850  0070                     ?_DimmerLights_TMR_2:	
  2851                           ; 0 bytes @ 0x0
  2852                           
  2853  0070                     ??_DimmerLights_TMR_2:	
  2854                           ; 0 bytes @ 0x0
  2855                           
  2856  0070                     ?_DimmerLights_IOC_2:	
  2857                           ; 0 bytes @ 0x0
  2858                           
  2859  0070                     ??_DimmerLights_IOC_2:	
  2860                           ; 0 bytes @ 0x0
  2861                           
  2862  0070                     ?_DimmerLights_IOC_3:	
  2863                           ; 0 bytes @ 0x0
  2864                           
  2865  0070                     ??_DimmerLights_IOC_3:	
  2866                           ; 0 bytes @ 0x0
  2867                           
  2868  0070                     ?_LedPointSelect:	
  2869                           ; 0 bytes @ 0x0
  2870                           
  2871  0070                     ?_LED_Initialization:	
  2872                           ; 0 bytes @ 0x0
  2873                           
  2874  0070                     ?_LED_Main:	
  2875                           ; 0 bytes @ 0x0
  2876                           
  2877  0070                     ?_Mcu_Initialization:	
  2878                           ; 0 bytes @ 0x0
  2879                           
  2880  0070                     ?_ISR:	
  2881                           ; 0 bytes @ 0x0
  2882                           
  2883  0070                     ?_Flash_Memory_Initialization:	
  2884                           ; 0 bytes @ 0x0
  2885                           
  2886  0070                     ?_Flash_Memory_Main:	
  2887                           ; 0 bytes @ 0x0
  2888                           
  2889  0070                     ?_Flash_Memory_Unlock:	
  2890                           ; 0 bytes @ 0x0
  2891                           
  2892  0070                     ?_Flash_Memory_Erasing:	
  2893                           ; 0 bytes @ 0x0
  2894                           
  2895  0070                     ?_setMemory_LoopSave:	
  2896                           ; 0 bytes @ 0x0
  2897                           
  2898  0070                     ?_WDT_Main:	
  2899                           ; 0 bytes @ 0x0
  2900                           
  2901  0070                     ?_setRF_Learn:	
  2902                           ; 0 bytes @ 0x0
  2903                           
  2904  0070                     ?_TouchPower:	
  2905                           ; 0 bytes @ 0x0
  2906                           
  2907  0070                     ?_SwPointSelect:	
  2908                           ; 0 bytes @ 0x0
  2909                           
  2910  0070                     ?_getDimmerLights_Status:	
  2911                           ; 0 bytes @ 0x0
  2912                           
  2913  0070                     ?_getDimmerLights_ValueToPercent:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_getDimmerLights_PercentToValue:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_getDimmerLights_Allow_Condition:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_getMain_All_LightsStatus:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_getCmd_Status:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_Flash_Memory_Read:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_getAll_Sw_KeyStatus:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_getRF_KeyStatus:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_getSw_KeyStatus:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_getDelayOff_GO:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_getDimmerIntr_DimmingValue:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_getMain_All_Error_Status:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     setDimmerLights_Initialization@lights:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955                           
  2956                           ; 1 bytes @ 0x0
  2957  0070                     	ds	1
  2958  0071                     ??_TMR1_ISR:	
  2959  0071                     ??_ISR:	
  2960                           ; 0 bytes @ 0x1
  2961                           
  2962                           
  2963                           ; 0 bytes @ 0x1
  2964  0071                     	ds	1
  2965  0072                     ??_RF_Timeout_Counter:	
  2966  0072                     ??_setRF_TimeoutCleared:	
  2967                           ; 0 bytes @ 0x2
  2968                           
  2969  0072                     ??_CC2500_WriteByte:	
  2970                           ; 0 bytes @ 0x2
  2971                           
  2972  0072                     ??_CC2500_ReadByte:	
  2973                           ; 0 bytes @ 0x2
  2974                           
  2975  0072                     ?_DelayTime_1us:	
  2976                           ; 0 bytes @ 0x2
  2977                           
  2978  0072                     ??_setMemory_Modify:	
  2979                           ; 0 bytes @ 0x2
  2980                           
  2981  0072                     ??_setDimmerLights_Initialization:	
  2982                           ; 0 bytes @ 0x2
  2983                           
  2984  0072                     ??_getDimmerLights_Allow_Condition:	
  2985                           ; 0 bytes @ 0x2
  2986                           
  2987  0072                     ??_getMain_All_LightsStatus:	
  2988                           ; 0 bytes @ 0x2
  2989                           
  2990  0072                     ??_getCmd_Status:	
  2991                           ; 0 bytes @ 0x2
  2992                           
  2993  0072                     ?_setCmd_Status:	
  2994                           ; 0 bytes @ 0x2
  2995                           
  2996  0072                     ??_setTxData:	
  2997                           ; 0 bytes @ 0x2
  2998                           
  2999  0072                     ??_setRF_TransceiveGO:	
  3000                           ; 0 bytes @ 0x2
  3001                           
  3002  0072                     ??_Fosc_Set:	
  3003                           ; 0 bytes @ 0x2
  3004                           
  3005  0072                     ??_IO_Set:	
  3006                           ; 0 bytes @ 0x2
  3007                           
  3008  0072                     ??_TMR1_Set:	
  3009                           ; 0 bytes @ 0x2
  3010                           
  3011  0072                     ??_ADC_Set:	
  3012                           ; 0 bytes @ 0x2
  3013                           
  3014  0072                     ??_IOC_Set:	
  3015                           ; 0 bytes @ 0x2
  3016                           
  3017  0072                     ??_WDT_Set:	
  3018                           ; 0 bytes @ 0x2
  3019                           
  3020  0072                     ??_Timeout_Counter:	
  3021                           ; 0 bytes @ 0x2
  3022                           
  3023  0072                     ??_set_TimeoutCleared:	
  3024                           ; 0 bytes @ 0x2
  3025                           
  3026  0072                     ??_Flash_Memory_Read:	
  3027                           ; 0 bytes @ 0x2
  3028                           
  3029  0072                     ?_setMemory_Data:	
  3030                           ; 0 bytes @ 0x2
  3031                           
  3032  0072                     ??_Flash_Memory_Write:	
  3033                           ; 0 bytes @ 0x2
  3034                           
  3035  0072                     ??_getAll_Sw_KeyStatus:	
  3036                           ; 0 bytes @ 0x2
  3037                           
  3038  0072                     ??_WDT_Clearing:	
  3039                           ; 0 bytes @ 0x2
  3040                           
  3041  0072                     ??_myMain_Initialization:	
  3042                           ; 0 bytes @ 0x2
  3043                           
  3044  0072                     ??_Temp_Initialization:	
  3045                           ; 0 bytes @ 0x2
  3046                           
  3047  0072                     ??_setTemp_Initialization:	
  3048                           ; 0 bytes @ 0x2
  3049                           
  3050  0072                     ??_setOverTemp_ADV_Restore:	
  3051                           ; 0 bytes @ 0x2
  3052                           
  3053  0072                     ??_setRF_Initialization:	
  3054                           ; 0 bytes @ 0x2
  3055                           
  3056  0072                     ??_getRF_KeyStatus:	
  3057                           ; 0 bytes @ 0x2
  3058                           
  3059  0072                     ??_RF_RxDisable:	
  3060                           ; 0 bytes @ 0x2
  3061                           
  3062  0072                     ??_setData:	
  3063                           ; 0 bytes @ 0x2
  3064                           
  3065  0072                     ??_getSw_KeyStatus:	
  3066                           ; 0 bytes @ 0x2
  3067                           
  3068  0072                     ??_Buzzer_Initialization:	
  3069                           ; 0 bytes @ 0x2
  3070                           
  3071  0072                     ??_Buzzer_Main:	
  3072                           ; 0 bytes @ 0x2
  3073                           
  3074  0072                     ??_DelayOffPointSelect:	
  3075                           ; 0 bytes @ 0x2
  3076                           
  3077  0072                     ?_setDimmerIntr_ControlStatus:	
  3078                           ; 0 bytes @ 0x2
  3079                           
  3080  0072                     ??_getDimmerIntr_DimmingValue:	
  3081                           ; 0 bytes @ 0x2
  3082                           
  3083  0072                     ?_setDimmerIntr_Dimming_Sw:	
  3084                           ; 0 bytes @ 0x2
  3085                           
  3086  0072                     ??_getDimmerIntr_Dimming_Sw:	
  3087                           ; 0 bytes @ 0x2
  3088                           
  3089  0072                     ?_setDimmerIntr_Dimming_RF:	
  3090                           ; 0 bytes @ 0x2
  3091                           
  3092  0072                     ??_DimmerLights_SelectPointer:	
  3093                           ; 0 bytes @ 0x2
  3094                           
  3095  0072                     ??_LedPointSelect:	
  3096                           ; 0 bytes @ 0x2
  3097                           
  3098  0072                     ??_Flash_Memory_Unlock:	
  3099                           ; 0 bytes @ 0x2
  3100                           
  3101  0072                     ??_Flash_Memory_Erasing:	
  3102                           ; 0 bytes @ 0x2
  3103                           
  3104  0072                     ??_setMemory_LoopSave:	
  3105                           ; 0 bytes @ 0x2
  3106                           
  3107  0072                     ??_WDT_Main:	
  3108                           ; 0 bytes @ 0x2
  3109                           
  3110  0072                     ??_getMain_All_Error_Status:	
  3111                           ; 0 bytes @ 0x2
  3112                           
  3113  0072                     ??_setRF_Learn:	
  3114                           ; 0 bytes @ 0x2
  3115                           
  3116  0072                     ??_TouchPower:	
  3117                           ; 0 bytes @ 0x2
  3118                           
  3119  0072                     ??_SwPointSelect:	
  3120                           ; 0 bytes @ 0x2
  3121                           
  3122  0072                     ?___bmul:	
  3123                           ; 0 bytes @ 0x2
  3124                           
  3125  0072                     ?___lbdiv:	
  3126                           ; 1 bytes @ 0x2
  3127                           
  3128  0072                     ?_getBuz_GO:	
  3129                           ; 1 bytes @ 0x2
  3130                           
  3131  0072                     ?_getAD:	
  3132                           ; 2 bytes @ 0x2
  3133                           
  3134  0072                     ?___awdiv:	
  3135                           ; 2 bytes @ 0x2
  3136                           
  3137  0072                     ?___lwdiv:	
  3138                           ; 2 bytes @ 0x2
  3139                           
  3140  0072                     ?___ftpack:	
  3141                           ; 2 bytes @ 0x2
  3142                           
  3143  0072                     setDimmerIntr_ControlStatus@command:	
  3144                           ; 3 bytes @ 0x2
  3145                           
  3146  0072                     setDimmerIntr_Dimming_Sw@command:	
  3147                           ; 1 bytes @ 0x2
  3148                           
  3149  0072                     getDimmerIntr_Dimming_Sw@status:	
  3150                           ; 1 bytes @ 0x2
  3151                           
  3152  0072                     setDimmerIntr_Dimming_RF@command:	
  3153                           ; 1 bytes @ 0x2
  3154                           
  3155  0072                     getAD@adcon1:	
  3156                           ; 1 bytes @ 0x2
  3157                           
  3158  0072                     setMemory_Data@data:	
  3159                           ; 1 bytes @ 0x2
  3160                           
  3161  0072                     getMain_All_LightsStatus@status:	
  3162                           ; 1 bytes @ 0x2
  3163                           
  3164  0072                     setCmd_Status@cmd:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167  0072                     getCmd_Status@number:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170  0072                     getSw_KeyStatus@status:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173  0072                     ___bmul@multiplicand:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176  0072                     ___lbdiv@divisor:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179  0072                     DelayTime_1us@count:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182  0072                     ___awdiv@divisor:	
  3183                           ; 2 bytes @ 0x2
  3184                           
  3185  0072                     ___lwdiv@divisor:	
  3186                           ; 2 bytes @ 0x2
  3187                           
  3188  0072                     ___ftpack@arg:	
  3189                           ; 2 bytes @ 0x2
  3190                           
  3191                           
  3192                           ; 3 bytes @ 0x2
  3193  0072                     	ds	1
  3194  0073                     ??_setCmd_Status:	
  3195  0073                     ??_setMemory_Data:	
  3196                           ; 0 bytes @ 0x3
  3197                           
  3198  0073                     ??_RF_Initialization:	
  3199                           ; 0 bytes @ 0x3
  3200                           
  3201  0073                     ??_setDimmerIntr_ControlStatus:	
  3202                           ; 0 bytes @ 0x3
  3203                           
  3204  0073                     ??_setDimmerIntr_Dimming_Sw:	
  3205                           ; 0 bytes @ 0x3
  3206                           
  3207  0073                     ??_setDimmerIntr_Dimming_RF:	
  3208                           ; 0 bytes @ 0x3
  3209                           
  3210  0073                     ??_Mcu_Initialization:	
  3211                           ; 0 bytes @ 0x3
  3212                           
  3213  0073                     ??___bmul:	
  3214                           ; 0 bytes @ 0x3
  3215                           
  3216  0073                     ??___lbdiv:	
  3217                           ; 0 bytes @ 0x3
  3218                           
  3219  0073                     CC2500_WriteByte@loop_a:	
  3220                           ; 0 bytes @ 0x3
  3221                           
  3222  0073                     CC2500_ReadByte@loop_b:	
  3223                           ; 1 bytes @ 0x3
  3224                           
  3225  0073                     DelayOffPointSelect@sw:	
  3226                           ; 1 bytes @ 0x3
  3227                           
  3228  0073                     getDimmerIntr_DimmingValue@value:	
  3229                           ; 1 bytes @ 0x3
  3230                           
  3231  0073                     getDimmerIntr_Dimming_Sw@lights:	
  3232                           ; 1 bytes @ 0x3
  3233                           
  3234  0073                     DimmerLights_SelectPointer@lights:	
  3235                           ; 1 bytes @ 0x3
  3236                           
  3237  0073                     _getDimmerLights_Allow_Condition$2696:	
  3238                           ; 1 bytes @ 0x3
  3239                           
  3240  0073                     LedPointSelect@led:	
  3241                           ; 1 bytes @ 0x3
  3242                           
  3243  0073                     Flash_Memory_Read@i:	
  3244                           ; 1 bytes @ 0x3
  3245                           
  3246  0073                     Flash_Memory_Write@i:	
  3247                           ; 1 bytes @ 0x3
  3248                           
  3249  0073                     setMemory_Modify@command:	
  3250                           ; 1 bytes @ 0x3
  3251                           
  3252  0073                     setMemory_LoopSave@command:	
  3253                           ; 1 bytes @ 0x3
  3254                           
  3255  0073                     getMain_All_Error_Status@command:	
  3256                           ; 1 bytes @ 0x3
  3257                           
  3258  0073                     getCmd_Status@cmd:	
  3259                           ; 1 bytes @ 0x3
  3260                           
  3261  0073                     setRF_Learn@command:	
  3262                           ; 1 bytes @ 0x3
  3263                           
  3264  0073                     getRF_KeyStatus@key:	
  3265                           ; 1 bytes @ 0x3
  3266                           
  3267  0073                     setRF_TransceiveGO@command:	
  3268                           ; 1 bytes @ 0x3
  3269                           
  3270  0073                     SwPointSelect@sw:	
  3271                           ; 1 bytes @ 0x3
  3272                           
  3273  0073                     getSw_KeyStatus@sw:	
  3274                           ; 1 bytes @ 0x3
  3275                           
  3276  0073                     getAll_Sw_KeyStatus@status:	
  3277                           ; 1 bytes @ 0x3
  3278                           
  3279  0073                     setOverTemp_ADV_Restore@i:	
  3280                           ; 1 bytes @ 0x3
  3281                           
  3282                           
  3283                           ; 2 bytes @ 0x3
  3284  0073                     	ds	1
  3285  0074                     ??_CC2500_WriteCommand:	
  3286  0074                     ??_CC2500_ReadStatus:	
  3287                           ; 0 bytes @ 0x4
  3288                           
  3289  0074                     ??_DelayTime_1us:	
  3290                           ; 0 bytes @ 0x4
  3291                           
  3292  0074                     ?_CC2500_WriteREG:	
  3293                           ; 0 bytes @ 0x4
  3294                           
  3295  0074                     ??_DlyOff_Initialization:	
  3296                           ; 0 bytes @ 0x4
  3297                           
  3298  0074                     ??_getDimmerLights_Status:	
  3299                           ; 0 bytes @ 0x4
  3300                           
  3301  0074                     ??_setDimmerLights_SwOff:	
  3302                           ; 0 bytes @ 0x4
  3303                           
  3304  0074                     ?_setLED:	
  3305                           ; 0 bytes @ 0x4
  3306                           
  3307  0074                     ??_setLED_Main:	
  3308                           ; 0 bytes @ 0x4
  3309                           
  3310  0074                     ??_getBuz_GO:	
  3311                           ; 0 bytes @ 0x4
  3312                           
  3313  0074                     ??_getDelayOff_GO:	
  3314                           ; 0 bytes @ 0x4
  3315                           
  3316  0074                     ??_setDimmerLights_DimmingOn:	
  3317                           ; 0 bytes @ 0x4
  3318                           
  3319  0074                     ?_setDimmerLights_DimmingRun:	
  3320                           ; 0 bytes @ 0x4
  3321                           
  3322  0074                     CC2500_WriteREG@value:	
  3323                           ; 0 bytes @ 0x4
  3324                           
  3325  0074                     DlyOff_Initialization@sw:	
  3326                           ; 1 bytes @ 0x4
  3327                           
  3328  0074                     getDelayOff_GO@sw:	
  3329                           ; 1 bytes @ 0x4
  3330                           
  3331  0074                     setDimmerIntr_ControlStatus@lights:	
  3332                           ; 1 bytes @ 0x4
  3333                           
  3334  0074                     getDimmerIntr_DimmingValue@lights:	
  3335                           ; 1 bytes @ 0x4
  3336                           
  3337  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3338                           ; 1 bytes @ 0x4
  3339                           
  3340  0074                     setDimmerIntr_Dimming_RF@lights:	
  3341                           ; 1 bytes @ 0x4
  3342                           
  3343  0074                     setDimmerLights_SwOff@sw:	
  3344                           ; 1 bytes @ 0x4
  3345                           
  3346  0074                     setDimmerLights_DimmingOn@sw:	
  3347                           ; 1 bytes @ 0x4
  3348                           
  3349  0074                     _getDimmerLights_Allow_Condition$2697:	
  3350                           ; 1 bytes @ 0x4
  3351                           
  3352  0074                     getDimmerLights_Status@lights:	
  3353                           ; 1 bytes @ 0x4
  3354                           
  3355  0074                     setDimmerLights_DimmingRun@command:	
  3356                           ; 1 bytes @ 0x4
  3357                           
  3358  0074                     setLED@command:	
  3359                           ; 1 bytes @ 0x4
  3360                           
  3361  0074                     Flash_Memory_Read@address:	
  3362                           ; 1 bytes @ 0x4
  3363                           
  3364  0074                     setMemory_Data@address:	
  3365                           ; 1 bytes @ 0x4
  3366                           
  3367  0074                     setCmd_Status@number:	
  3368                           ; 1 bytes @ 0x4
  3369                           
  3370  0074                     _getRF_KeyStatus$6018:	
  3371                           ; 1 bytes @ 0x4
  3372                           
  3373  0074                     _getAll_Sw_KeyStatus$7153:	
  3374                           ; 1 bytes @ 0x4
  3375                           
  3376  0074                     ___bmul@product:	
  3377                           ; 1 bytes @ 0x4
  3378                           
  3379  0074                     ___lbdiv@dividend:	
  3380                           ; 1 bytes @ 0x4
  3381                           
  3382  0074                     DelayTime_1us@i:	
  3383                           ; 1 bytes @ 0x4
  3384                           
  3385  0074                     _getMain_All_Error_Status$4125:	
  3386                           ; 2 bytes @ 0x4
  3387                           
  3388  0074                     ___awdiv@dividend:	
  3389                           ; 2 bytes @ 0x4
  3390                           
  3391  0074                     ___lwdiv@dividend:	
  3392                           ; 2 bytes @ 0x4
  3393                           
  3394                           
  3395                           ; 2 bytes @ 0x4
  3396  0074                     	ds	1
  3397  0075                     ??_CC2500_WriteREG:	
  3398  0075                     ??_setLED:	
  3399                           ; 0 bytes @ 0x5
  3400                           
  3401  0075                     ??_setDimmerLights_DimmingClose:	
  3402                           ; 0 bytes @ 0x5
  3403                           
  3404  0075                     ??_DelayOff_Initialization:	
  3405                           ; 0 bytes @ 0x5
  3406                           
  3407  0075                     ??_setDimmerLights_DimmingRun:	
  3408                           ; 0 bytes @ 0x5
  3409                           
  3410  0075                     ??_getAD:	
  3411                           ; 0 bytes @ 0x5
  3412                           
  3413  0075                     CC2500_WriteCommand@command:	
  3414                           ; 0 bytes @ 0x5
  3415                           
  3416  0075                     CC2500_ReadStatus@status_addr:	
  3417                           ; 1 bytes @ 0x5
  3418                           
  3419  0075                     getDelayOff_GO@go:	
  3420                           ; 1 bytes @ 0x5
  3421                           
  3422  0075                     _getDimmerLights_Allow_Condition$2698:	
  3423                           ; 1 bytes @ 0x5
  3424                           
  3425  0075                     getDimmerLights_Status@status:	
  3426                           ; 1 bytes @ 0x5
  3427                           
  3428  0075                     setLED@led:	
  3429                           ; 1 bytes @ 0x5
  3430                           
  3431  0075                     getAD@adcon0:	
  3432                           ; 1 bytes @ 0x5
  3433                           
  3434  0075                     Flash_Memory_Read@ret:	
  3435                           ; 1 bytes @ 0x5
  3436                           
  3437  0075                     ___bmul@multiplier:	
  3438                           ; 1 bytes @ 0x5
  3439                           
  3440  0075                     ___ftpack@exp:	
  3441                           ; 1 bytes @ 0x5
  3442                           
  3443  0075                     ___lbdiv@counter:	
  3444                           ; 1 bytes @ 0x5
  3445                           
  3446                           
  3447                           ; 1 bytes @ 0x5
  3448  0075                     	ds	1
  3449  0076                     ??_CC2500_ClearTXFIFO:	
  3450  0076                     ??_CC2500_ClearRXFIFO:	
  3451                           ; 0 bytes @ 0x6
  3452                           
  3453  0076                     ??_CC2500_SIDLEMode:	
  3454                           ; 0 bytes @ 0x6
  3455                           
  3456  0076                     ??_setLED_Initialization:	
  3457                           ; 0 bytes @ 0x6
  3458                           
  3459  0076                     ??_Flash_Memory_Modify:	
  3460                           ; 0 bytes @ 0x6
  3461                           
  3462  0076                     ??_getTemp_AD:	
  3463                           ; 0 bytes @ 0x6
  3464                           
  3465  0076                     ??_setRF_AdjControl:	
  3466                           ; 0 bytes @ 0x6
  3467                           
  3468  0076                     ??_setSw_Initialization:	
  3469                           ; 0 bytes @ 0x6
  3470                           
  3471  0076                     ??_CC2500_TxData:	
  3472                           ; 0 bytes @ 0x6
  3473                           
  3474  0076                     ??_CC2500_RxData:	
  3475                           ; 0 bytes @ 0x6
  3476                           
  3477  0076                     ??_Flash_Memory_Initialization:	
  3478                           ; 0 bytes @ 0x6
  3479                           
  3480  0076                     ??___awdiv:	
  3481                           ; 0 bytes @ 0x6
  3482                           
  3483  0076                     ??___lwdiv:	
  3484                           ; 0 bytes @ 0x6
  3485                           
  3486  0076                     CC2500_WriteREG@w_addr:	
  3487                           ; 0 bytes @ 0x6
  3488                           
  3489  0076                     getDimmerLights_Allow_Condition@lights:	
  3490                           ; 1 bytes @ 0x6
  3491                           
  3492  0076                     setDimmerLights_DimmingRun@lights:	
  3493                           ; 1 bytes @ 0x6
  3494                           
  3495  0076                     setLED_Initialization@led:	
  3496                           ; 1 bytes @ 0x6
  3497                           
  3498  0076                     setLED_Main@led:	
  3499                           ; 1 bytes @ 0x6
  3500                           
  3501  0076                     getMain_All_Error_Status@status:	
  3502                           ; 1 bytes @ 0x6
  3503                           
  3504  0076                     setSw_Initialization@sw:	
  3505                           ; 1 bytes @ 0x6
  3506                           
  3507  0076                     ___ftpack@sign:	
  3508                           ; 1 bytes @ 0x6
  3509                           
  3510  0076                     ___lbdiv@quotient:	
  3511                           ; 1 bytes @ 0x6
  3512                           
  3513  0076                     getBuz_GO@i:	
  3514                           ; 1 bytes @ 0x6
  3515                           
  3516  0076                     DelayTime_1us@j:	
  3517                           ; 2 bytes @ 0x6
  3518                           
  3519                           
  3520                           ; 2 bytes @ 0x6
  3521  0076                     	ds	1
  3522  0077                     ??_CC2500_InitSetREG:	
  3523  0077                     ??_CC2500_InitPATable:	
  3524                           ; 0 bytes @ 0x7
  3525                           
  3526  0077                     ??_Switch_Initialization:	
  3527                           ; 0 bytes @ 0x7
  3528                           
  3529  0077                     ??___ftpack:	
  3530                           ; 0 bytes @ 0x7
  3531                           
  3532  0077                     ??_setBuz:	
  3533                           ; 0 bytes @ 0x7
  3534                           
  3535  0077                     ??_LED_Initialization:	
  3536                           ; 0 bytes @ 0x7
  3537                           
  3538  0077                     ??_LED_Main:	
  3539                           ; 0 bytes @ 0x7
  3540                           
  3541  0077                     ?_Division:	
  3542                           ; 0 bytes @ 0x7
  3543                           
  3544  0077                     CC2500_TxData@loop_e:	
  3545                           ; 1 bytes @ 0x7
  3546                           
  3547  0077                     CC2500_RxData@loop_f:	
  3548                           ; 1 bytes @ 0x7
  3549                           
  3550  0077                     getDimmerLights_Allow_Condition@allow:	
  3551                           ; 1 bytes @ 0x7
  3552                           
  3553  0077                     Division@num:	
  3554                           ; 1 bytes @ 0x7
  3555                           
  3556  0077                     Flash_Memory_Initialization@value:	
  3557                           ; 1 bytes @ 0x7
  3558                           
  3559  0077                     Flash_Memory_Modify@i:	
  3560                           ; 1 bytes @ 0x7
  3561                           
  3562  0077                     getTemp_AD@channel:	
  3563                           ; 1 bytes @ 0x7
  3564                           
  3565  0077                     setRF_AdjControl@status:	
  3566                           ; 1 bytes @ 0x7
  3567                           
  3568  0077                     ___lwdiv@quotient:	
  3569                           ; 1 bytes @ 0x7
  3570                           
  3571                           
  3572                           ; 2 bytes @ 0x7
  3573  0077                     	ds	1
  3574  0078                     ??_CC2500_PowerRST:	
  3575  0078                     ??_CC2500_FrequencyCabr:	
  3576                           ; 0 bytes @ 0x8
  3577                           
  3578  0078                     ??_Division:	
  3579                           ; 0 bytes @ 0x8
  3580                           
  3581  0078                     ??_Flash_Memory_Main:	
  3582                           ; 0 bytes @ 0x8
  3583                           
  3584  0078                     setBuz@count:	
  3585                           ; 0 bytes @ 0x8
  3586                           
  3587  0078                     CC2500_InitPATable@temp:	
  3588                           ; 1 bytes @ 0x8
  3589                           
  3590  0078                     setRF_AdjControl@dimmingStatus:	
  3591                           ; 1 bytes @ 0x8
  3592                           
  3593  0078                     getTemp_AD@ADRES:	
  3594                           ; 1 bytes @ 0x8
  3595                           
  3596                           
  3597                           ; 2 bytes @ 0x8
  3598  0078                     	ds	1
  3599  0079                     ??_setDimmerLights_SwOn:	
  3600  0079                     ??_my_MainTimer:	
  3601                           ; 0 bytes @ 0x9
  3602                           
  3603  0079                     ??_Exception_Main:	
  3604                           ; 0 bytes @ 0x9
  3605                           
  3606  0079                     CC2500_InitPATable@loop_d:	
  3607                           ; 0 bytes @ 0x9
  3608                           
  3609  0079                     setRF_AdjControl@sw:	
  3610                           ; 1 bytes @ 0x9
  3611                           
  3612  0079                     ___lwdiv@counter:	
  3613                           ; 1 bytes @ 0x9
  3614                           
  3615                           
  3616                           ; 1 bytes @ 0x9
  3617  0079                     	ds	1
  3618  007A                     ??_getDimmerLights_ValueToPercent:	
  3619  007A                     ??_setDimmerLights_Main:	
  3620                           ; 0 bytes @ 0xA
  3621                           
  3622  007A                     ??_Temp_Main:	
  3623                           ; 0 bytes @ 0xA
  3624                           
  3625  007A                     ??_Switch_Main:	
  3626                           ; 0 bytes @ 0xA
  3627                           
  3628  007A                     ??_RF_Main:	
  3629                           ; 0 bytes @ 0xA
  3630                           
  3631  007A                     ??_setControl_Lights_Table:	
  3632                           ; 0 bytes @ 0xA
  3633                           
  3634  007A                     ??_CC2500_PowerOnInitial:	
  3635                           ; 0 bytes @ 0xA
  3636                           
  3637  007A                     ??_DelayOff_Main:	
  3638                           ; 0 bytes @ 0xA
  3639                           
  3640  007A                     ??_DimmerLights_Initialization:	
  3641                           ; 0 bytes @ 0xA
  3642                           
  3643  007A                     ??_DimmerLights_Main:	
  3644                           ; 0 bytes @ 0xA
  3645                           
  3646  007A                     ??_main:	
  3647                           ; 0 bytes @ 0xA
  3648                           
  3649                           
  3650                           	psect	cstackBANK0
  3651  0020                     __pcstackBANK0:	
  3652                           ; 0 bytes @ 0xA
  3653                           
  3654  0020                     ?___awtoft:	
  3655  0020                     CC2500_InitSetREG@temp1:	
  3656                           ; 3 bytes @ 0x0
  3657                           
  3658  0020                     Division@value:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0020                     Flash_Memory_Main@key_Status:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0020                     ___awdiv@counter:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0020                     ___awtoft@c:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670                           
  3671                           ; 2 bytes @ 0x0
  3672  0020                     	ds	1
  3673  0021                     CC2500_InitSetREG@temp2:	
  3674  0021                     Division@result:	
  3675                           ; 1 bytes @ 0x1
  3676                           
  3677  0021                     _Flash_Memory_Main$3656:	
  3678                           ; 1 bytes @ 0x1
  3679                           
  3680  0021                     ___awdiv@sign:	
  3681                           ; 1 bytes @ 0x1
  3682                           
  3683                           
  3684                           ; 1 bytes @ 0x1
  3685  0021                     	ds	1
  3686  0022                     ??_DimmerIntr_ValueCalculate:	
  3687  0022                     CC2500_InitSetREG@loop_c:	
  3688                           ; 0 bytes @ 0x2
  3689                           
  3690  0022                     ___awdiv@quotient:	
  3691                           ; 1 bytes @ 0x2
  3692                           
  3693                           
  3694                           ; 2 bytes @ 0x2
  3695  0022                     	ds	1
  3696  0023                     ??___awtoft:	
  3697                           
  3698                           ; 0 bytes @ 0x3
  3699  0023                     	ds	1
  3700  0024                     ?_setBuz:	
  3701  0024                     DimmerIntr_ValueCalculate@lights:	
  3702                           ; 0 bytes @ 0x4
  3703                           
  3704  0024                     setBuz@time:	
  3705                           ; 1 bytes @ 0x4
  3706                           
  3707                           
  3708                           ; 2 bytes @ 0x4
  3709  0024                     	ds	1
  3710  0025                     ??_DimmerLights_DimmingFunction:	
  3711  0025                     ___awtoft@sign:	
  3712                           ; 0 bytes @ 0x5
  3713                           
  3714                           
  3715                           ; 1 bytes @ 0x5
  3716  0025                     	ds	1
  3717  0026                     ?___ftdiv:	
  3718  0026                     ?___ftmul:	
  3719                           ; 3 bytes @ 0x6
  3720                           
  3721  0026                     setDimmerLights_SwOn@dimmingStatus:	
  3722                           ; 3 bytes @ 0x6
  3723                           
  3724  0026                     DimmerLights_DimmingFunction@lights:	
  3725                           ; 1 bytes @ 0x6
  3726                           
  3727  0026                     Exception_Main@lights:	
  3728                           ; 1 bytes @ 0x6
  3729                           
  3730  0026                     ___ftdiv@f2:	
  3731                           ; 1 bytes @ 0x6
  3732                           
  3733  0026                     ___ftmul@f1:	
  3734                           ; 3 bytes @ 0x6
  3735                           
  3736                           
  3737                           ; 3 bytes @ 0x6
  3738  0026                     	ds	1
  3739  0027                     _setDimmerLights_SwOn$2633:	
  3740  0027                     Exception_Main@status:	
  3741                           ; 1 bytes @ 0x7
  3742                           
  3743                           
  3744                           ; 1 bytes @ 0x7
  3745  0027                     	ds	1
  3746  0028                     _setDimmerLights_SwOn$2642:	
  3747  0028                     Exception_Main@count:	
  3748                           ; 1 bytes @ 0x8
  3749                           
  3750                           
  3751                           ; 1 bytes @ 0x8
  3752  0028                     	ds	1
  3753  0029                     _setDimmerLights_SwOn$2643:	
  3754  0029                     Exception_Main@error:	
  3755                           ; 1 bytes @ 0x9
  3756                           
  3757  0029                     ___ftdiv@f1:	
  3758                           ; 1 bytes @ 0x9
  3759                           
  3760  0029                     ___ftmul@f2:	
  3761                           ; 3 bytes @ 0x9
  3762                           
  3763                           
  3764                           ; 3 bytes @ 0x9
  3765  0029                     	ds	1
  3766  002A                     setDimmerLights_SwOn@idle:	
  3767  002A                     Exception_Main@i:	
  3768                           ; 1 bytes @ 0xA
  3769                           
  3770                           
  3771                           ; 2 bytes @ 0xA
  3772  002A                     	ds	1
  3773  002B                     setDimmerLights_SwOn@sw:	
  3774                           
  3775                           ; 1 bytes @ 0xB
  3776  002B                     	ds	1
  3777  002C                     ??_setSw_Main:	
  3778  002C                     ??___ftdiv:	
  3779                           ; 0 bytes @ 0xC
  3780                           
  3781  002C                     ??___ftmul:	
  3782                           ; 0 bytes @ 0xC
  3783                           
  3784                           
  3785                           ; 0 bytes @ 0xC
  3786  002C                     	ds	2
  3787  002E                     setSw_Main@sw:	
  3788                           
  3789                           ; 1 bytes @ 0xE
  3790  002E                     	ds	2
  3791  0030                     ___ftdiv@cntr:	
  3792  0030                     ___ftmul@exp:	
  3793                           ; 1 bytes @ 0x10
  3794                           
  3795                           
  3796                           ; 1 bytes @ 0x10
  3797  0030                     	ds	1
  3798  0031                     ___ftdiv@f3:	
  3799  0031                     ___ftmul@f3_as_product:	
  3800                           ; 3 bytes @ 0x11
  3801                           
  3802                           
  3803                           ; 3 bytes @ 0x11
  3804  0031                     	ds	3
  3805  0034                     ___ftdiv@exp:	
  3806  0034                     ___ftmul@cntr:	
  3807                           ; 1 bytes @ 0x14
  3808                           
  3809                           
  3810                           ; 1 bytes @ 0x14
  3811  0034                     	ds	1
  3812  0035                     ___ftdiv@sign:	
  3813  0035                     ___ftmul@sign:	
  3814                           ; 1 bytes @ 0x15
  3815                           
  3816                           
  3817                           ; 1 bytes @ 0x15
  3818  0035                     	ds	1
  3819  0036                     ?___ftadd:	
  3820  0036                     ___ftadd@f1:	
  3821                           ; 3 bytes @ 0x16
  3822                           
  3823                           
  3824                           ; 3 bytes @ 0x16
  3825  0036                     	ds	3
  3826  0039                     ___ftadd@f2:	
  3827                           
  3828                           ; 3 bytes @ 0x19
  3829  0039                     	ds	3
  3830  003C                     ??___ftadd:	
  3831                           
  3832                           ; 0 bytes @ 0x1C
  3833  003C                     	ds	4
  3834  0040                     ___ftadd@sign:	
  3835                           
  3836                           ; 1 bytes @ 0x20
  3837  0040                     	ds	1
  3838  0041                     ___ftadd@exp2:	
  3839                           
  3840                           ; 1 bytes @ 0x21
  3841  0041                     	ds	1
  3842  0042                     ___ftadd@exp1:	
  3843                           
  3844                           ; 1 bytes @ 0x22
  3845  0042                     	ds	1
  3846  0043                     ?___fttol:	
  3847  0043                     ___fttol@f1:	
  3848                           ; 4 bytes @ 0x23
  3849                           
  3850                           
  3851                           ; 3 bytes @ 0x23
  3852  0043                     	ds	4
  3853  0047                     ??___fttol:	
  3854                           
  3855                           ; 0 bytes @ 0x27
  3856  0047                     	ds	4
  3857  004B                     ___fttol@sign1:	
  3858                           
  3859                           ; 1 bytes @ 0x2B
  3860  004B                     	ds	1
  3861  004C                     ___fttol@lval:	
  3862                           
  3863                           ; 4 bytes @ 0x2C
  3864  004C                     	ds	4
  3865  0050                     ___fttol@exp1:	
  3866                           
  3867                           ; 1 bytes @ 0x30
  3868  0050                     	ds	1
  3869  0051                     ??_getDimmerLights_PercentToValue:	
  3870  0051                     getDimmerLights_ValueToPercent@value:	
  3871                           ; 0 bytes @ 0x31
  3872                           
  3873                           
  3874                           ; 1 bytes @ 0x31
  3875  0051                     	ds	1
  3876  0052                     getDimmerLights_ValueToPercent@i:	
  3877                           
  3878                           ; 3 bytes @ 0x32
  3879  0052                     	ds	1
  3880  0053                     getDimmerLights_PercentToValue@value:	
  3881                           
  3882                           ; 1 bytes @ 0x33
  3883  0053                     	ds	1
  3884  0054                     getDimmerLights_PercentToValue@i:	
  3885                           
  3886                           ; 3 bytes @ 0x34
  3887  0054                     	ds	1
  3888  0055                     ?_setProductData:	
  3889  0055                     setProductData@value:	
  3890                           ; 0 bytes @ 0x35
  3891                           
  3892                           
  3893                           ; 1 bytes @ 0x35
  3894  0055                     	ds	1
  3895  0056                     ??_setProductData:	
  3896                           
  3897                           ; 0 bytes @ 0x36
  3898  0056                     	ds	1
  3899  0057                     ??_DimmerIntr_Initialization:	
  3900  0057                     ?_setDimmerIntr_DimmingValue:	
  3901                           ; 0 bytes @ 0x37
  3902                           
  3903  0057                     ?_setDimmerIntr_MaxmumValue:	
  3904                           ; 0 bytes @ 0x37
  3905                           
  3906  0057                     setDimmerIntr_DimmingValue@value:	
  3907                           ; 0 bytes @ 0x37
  3908                           
  3909  0057                     setDimmerIntr_MaxmumValue@value:	
  3910                           ; 1 bytes @ 0x37
  3911                           
  3912  0057                     setProductData@address:	
  3913                           ; 1 bytes @ 0x37
  3914                           
  3915                           
  3916                           ; 1 bytes @ 0x37
  3917  0057                     	ds	1
  3918  0058                     ??_DlyOff_Main:	
  3919  0058                     ?_setRF_DimmerLights:	
  3920                           ; 0 bytes @ 0x38
  3921                           
  3922  0058                     ??_setTemp_Main:	
  3923                           ; 0 bytes @ 0x38
  3924                           
  3925  0058                     ??_setLog_Code:	
  3926                           ; 0 bytes @ 0x38
  3927                           
  3928  0058                     ?_setDelayOff_GO:	
  3929                           ; 0 bytes @ 0x38
  3930                           
  3931  0058                     ??_setDimmerIntr_DimmingValue:	
  3932                           ; 0 bytes @ 0x38
  3933                           
  3934  0058                     ??_setDimmerIntr_MaxmumValue:	
  3935                           ; 0 bytes @ 0x38
  3936                           
  3937  0058                     setDelayOff_GO@command:	
  3938                           ; 0 bytes @ 0x38
  3939                           
  3940  0058                     setRF_DimmerLights@on:	
  3941                           ; 1 bytes @ 0x38
  3942                           
  3943                           
  3944                           ; 1 bytes @ 0x38
  3945  0058                     	ds	1
  3946  0059                     ??_setRF_DimmerLights:	
  3947  0059                     setDelayOff_GO@value:	
  3948                           ; 0 bytes @ 0x39
  3949                           
  3950  0059                     setDimmerIntr_DimmingValue@lights:	
  3951                           ; 1 bytes @ 0x39
  3952                           
  3953  0059                     setDimmerIntr_MaxmumValue@lights:	
  3954                           ; 1 bytes @ 0x39
  3955                           
  3956                           
  3957                           ; 1 bytes @ 0x39
  3958  0059                     	ds	1
  3959  005A                     ??_setRFSW_AdjControl:	
  3960  005A                     ??_setDelayOff_GO:	
  3961                           ; 0 bytes @ 0x3A
  3962                           
  3963  005A                     DlyOff_Main@sw:	
  3964                           ; 0 bytes @ 0x3A
  3965                           
  3966  005A                     setTemp_Main@error:	
  3967                           ; 1 bytes @ 0x3A
  3968                           
  3969                           
  3970                           ; 1 bytes @ 0x3A
  3971  005A                     	ds	1
  3972  005B                     setTemp_Main@TempGO:	
  3973  005B                     setRF_DimmerLights@status:	
  3974                           ; 1 bytes @ 0x3B
  3975                           
  3976                           
  3977                           ; 1 bytes @ 0x3B
  3978  005B                     	ds	1
  3979  005C                     setDelayOff_GO@i:	
  3980  005C                     setRFSW_AdjControl@status:	
  3981                           ; 1 bytes @ 0x3C
  3982                           
  3983  005C                     setRF_DimmerLights@lights:	
  3984                           ; 1 bytes @ 0x3C
  3985                           
  3986  005C                     setTemp_Main@SafeValue:	
  3987                           ; 1 bytes @ 0x3C
  3988                           
  3989                           
  3990                           ; 2 bytes @ 0x3C
  3991  005C                     	ds	1
  3992  005D                     ?_setDimmerLights_Dimming:	
  3993  005D                     setDelayOff_GO@j:	
  3994                           ; 0 bytes @ 0x3D
  3995                           
  3996  005D                     setDimmerLights_Dimming@status:	
  3997                           ; 1 bytes @ 0x3D
  3998                           
  3999  005D                     setRFSW_AdjControl@sw:	
  4000                           ; 1 bytes @ 0x3D
  4001                           
  4002                           
  4003                           ; 1 bytes @ 0x3D
  4004  005D                     	ds	1
  4005  005E                     ??_setDimmerLights_Dimming:	
  4006  005E                     setDelayOff_GO@k:	
  4007                           ; 0 bytes @ 0x3E
  4008                           
  4009  005E                     setTemp_Main@DangerValue:	
  4010                           ; 1 bytes @ 0x3E
  4011                           
  4012                           
  4013                           ; 2 bytes @ 0x3E
  4014  005E                     	ds	1
  4015  005F                     setDelayOff_GO@sw:	
  4016  005F                     setDimmerLights_Dimming@value:	
  4017                           ; 1 bytes @ 0x3F
  4018                           
  4019                           
  4020                           ; 1 bytes @ 0x3F
  4021  005F                     	ds	1
  4022  0060                     ?_setDimmerLights_OnOff:	
  4023  0060                     ??_setRFSW_Control:	
  4024                           ; 0 bytes @ 0x40
  4025                           
  4026  0060                     setDimmerLights_OnOff@command:	
  4027                           ; 0 bytes @ 0x40
  4028                           
  4029  0060                     setDimmerLights_Dimming@lights:	
  4030                           ; 1 bytes @ 0x40
  4031                           
  4032  0060                     setTemp_Main@AD:	
  4033                           ; 1 bytes @ 0x40
  4034                           
  4035                           
  4036                           ; 2 bytes @ 0x40
  4037  0060                     	ds	1
  4038  0061                     ??_setDimmerLights_OnOff:	
  4039  0061                     setRFSW_Control@status:	
  4040                           ; 0 bytes @ 0x41
  4041                           
  4042                           
  4043                           ; 1 bytes @ 0x41
  4044  0061                     	ds	1
  4045  0062                     setRFSW_Control@sw:	
  4046                           
  4047                           ; 1 bytes @ 0x42
  4048  0062                     	ds	1
  4049  0063                     ??_getRxData:	
  4050  0063                     setDimmerLights_OnOff@lights:	
  4051                           ; 0 bytes @ 0x43
  4052                           
  4053                           
  4054                           ; 1 bytes @ 0x43
  4055  0063                     	ds	1
  4056  0064                     setDimmerLights_Main@lights:	
  4057  0064                     getRxData@error:	
  4058                           ; 1 bytes @ 0x44
  4059                           
  4060                           
  4061                           ; 1 bytes @ 0x44
  4062  0064                     	ds	1
  4063  0065                     ??_setRF_Main:	
  4064                           
  4065                           ; 0 bytes @ 0x45
  4066  0065                     	ds	1
  4067  0066                     setRF_Main@error:	
  4068                           
  4069                           ; 1 bytes @ 0x46
  4070  0066                     	ds	1
  4071                           
  4072                           	psect	maintext
  4073  15A2                     __pmaintext:	
  4074 ;;
  4075 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4076 ;;
  4077 ;; *************** function _main *****************
  4078 ;; Defined at:
  4079 ;;		line 7 in file "../src/Main_B1.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  argc            2    0[BANK4 ] int 
  4082 ;;  argv            2    2[BANK4 ] PTR PTR unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[BANK4 ] int 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 17F/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4094 ;;      Params:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Totals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  4098 ;;Total ram usage:        4 bytes
  4099 ;; Hardware stack levels required when called:   11
  4100 ;; This function calls:
  4101 ;;		_Buzzer_Initialization
  4102 ;;		_Buzzer_Main
  4103 ;;		_CC2500_PowerOnInitial
  4104 ;;		_DelayOff_Initialization
  4105 ;;		_DelayOff_Main
  4106 ;;		_DimmerLights_Initialization
  4107 ;;		_DimmerLights_Main
  4108 ;;		_Exception_Main
  4109 ;;		_Flash_Memory_Initialization
  4110 ;;		_Flash_Memory_Main
  4111 ;;		_LED_Initialization
  4112 ;;		_LED_Main
  4113 ;;		_Mcu_Initialization
  4114 ;;		_RF_Initialization
  4115 ;;		_RF_Main
  4116 ;;		_Switch_Initialization
  4117 ;;		_Switch_Main
  4118 ;;		_Temp_Initialization
  4119 ;;		_Temp_Main
  4120 ;;		_WDT_Main
  4121 ;;		_getTemp_AD
  4122 ;;		_myMain_Initialization
  4123 ;;		_my_MainTimer
  4124 ;; This function is called by:
  4125 ;;		Startup code after reset
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _main
  4131  15A2                     _main:	
  4132                           
  4133                           ;Main_B1.c: 8: myMain_Initialization();
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4137  15A2  319C  2468  3195   	fcall	_myMain_Initialization
  4138                           
  4139                           ;Main_B1.c: 9: Mcu_Initialization();
  4140  15A5  3190  2066  3195   	fcall	_Mcu_Initialization
  4141                           
  4142                           ;Main_B1.c: 10: Flash_Memory_Initialization();
  4143  15A8  3184  246F  3195   	fcall	_Flash_Memory_Initialization
  4144                           
  4145                           ;Main_B1.c: 11: LED_Initialization();
  4146  15AB  319C  24A7  3195   	fcall	_LED_Initialization
  4147                           
  4148                           ;Main_B1.c: 12: Buzzer_Initialization();
  4149  15AE  319A  22F7  3195   	fcall	_Buzzer_Initialization
  4150                           
  4151                           ;Main_B1.c: 14: ;;
  4152                           ;Main_B1.c: 15: Temp_Initialization();
  4153  15B1  319B  2300  3195   	fcall	_Temp_Initialization
  4154                           
  4155                           ;Main_B1.c: 16: ;;
  4156                           ;Main_B1.c: 17: ;;
  4157                           ;Main_B1.c: 18: DelayOff_Initialization();
  4158  15B4  319B  2396  3195   	fcall	_DelayOff_Initialization
  4159                           
  4160                           ;Main_B1.c: 20: DimmerLights_Initialization();
  4161  15B7  319B  23FF  3195   	fcall	_DimmerLights_Initialization
  4162                           
  4163                           ;Main_B1.c: 21: ;;
  4164                           ;Main_B1.c: 22: ;;
  4165                           ;Main_B1.c: 23: ;;
  4166                           ;Main_B1.c: 24: Switch_Initialization();
  4167  15BA  3187  27F2  3195   	fcall	_Switch_Initialization
  4168                           
  4169                           ;Main_B1.c: 25: RF_Initialization();
  4170  15BD  319A  22FA  3195   	fcall	_RF_Initialization
  4171                           
  4172                           ;Main_B1.c: 26: CC2500_PowerOnInitial();
  4173  15C0  319D  257F  3195   	fcall	_CC2500_PowerOnInitial
  4174  15C3                     l10716:	
  4175                           ;Main_B1.c: 27: ;;
  4176                           ;Main_B1.c: 28: ;;
  4177                           ;Main_B1.c: 30: while (1) {
  4178                           
  4179                           
  4180                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  4181  15C3  0021               	movlb	1	; select bank1
  4182  15C4  1C3F               	btfss	_myMain^(0+128),0
  4183  15C5  2DCA               	goto	l10720
  4184                           
  4185                           ;Main_B1.c: 42: getTemp_AD(0x09);
  4186  15C6  3009               	movlw	9
  4187  15C7  3188  2099  3195   	fcall	_getTemp_AD
  4188  15CA                     l10720:	
  4189                           
  4190                           ;Main_B1.c: 57: }
  4191                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  4192  15CA  0022               	movlb	2	; select bank2
  4193  15CB  1C4E               	btfss	_Timer1^(0+256),0
  4194  15CC  2DC3               	goto	l10716
  4195                           
  4196                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  4197  15CD  104E               	bcf	_Timer1^(0+256),0
  4198                           
  4199                           ;Main_B1.c: 96: my_MainTimer();
  4200  15CE  3192  227B  3195   	fcall	_my_MainTimer
  4201                           
  4202                           ;Main_B1.c: 97: WDT_Main();
  4203  15D1  319C  24E7  3195   	fcall	_WDT_Main
  4204                           
  4205                           ;Main_B1.c: 98: ;;
  4206                           ;Main_B1.c: 99: ;;
  4207                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  4208  15D4  0021               	movlb	1	; select bank1
  4209  15D5  1C3F               	btfss	_myMain^(0+128),0
  4210  15D6  2DC3               	goto	l10716
  4211                           
  4212                           ;Main_B1.c: 101: Flash_Memory_Main();
  4213  15D7  3193  236D  3195   	fcall	_Flash_Memory_Main
  4214                           
  4215                           ;Main_B1.c: 103: LED_Main();
  4216  15DA  319C  24B7  3195   	fcall	_LED_Main
  4217                           
  4218                           ;Main_B1.c: 104: Buzzer_Main();
  4219  15DD  3194  2433  3195   	fcall	_Buzzer_Main
  4220                           
  4221                           ;Main_B1.c: 106: ;;
  4222                           ;Main_B1.c: 107: Temp_Main();
  4223  15E0  319B  2303  3195   	fcall	_Temp_Main
  4224                           
  4225                           ;Main_B1.c: 108: ;;
  4226                           ;Main_B1.c: 109: ;;
  4227                           ;Main_B1.c: 111: ;;
  4228                           ;Main_B1.c: 112: DimmerLights_Main();
  4229  15E3  319D  2519  3195   	fcall	_DimmerLights_Main
  4230                           
  4231                           ;Main_B1.c: 113: Switch_Main();
  4232  15E6  319C  2459  3195   	fcall	_Switch_Main
  4233                           
  4234                           ;Main_B1.c: 114: ;;
  4235                           ;Main_B1.c: 115: ;;
  4236                           ;Main_B1.c: 117: RF_Main();
  4237  15E9  319A  22FD  3195   	fcall	_RF_Main
  4238                           
  4239                           ;Main_B1.c: 118: DelayOff_Main();
  4240  15EC  319B  23AE  3195   	fcall	_DelayOff_Main
  4241                           
  4242                           ;Main_B1.c: 119: ;;
  4243                           ;Main_B1.c: 120: ;;
  4244                           ;Main_B1.c: 121: Exception_Main();
  4245  15EF  318B  236B  3195   	fcall	_Exception_Main
  4246  15F2  2DC3               	goto	l10716
  4247  15F3                     __end_of_main:	
  4248                           ;Main_B1.c: 128: }
  4249                           ;Main_B1.c: 129: }
  4250                           ;Main_B1.c: 163: }
  4251                           ;Main_B1.c: 164: return (0);
  4252                           ;	Return value of _main is never used
  4253                           
  4254                           
  4255                           	psect	text1
  4256  127B                     __ptext1:	
  4257 ;; *************** function _my_MainTimer *****************
  4258 ;; Defined at:
  4259 ;;		line 185 in file "../src/Main_B1.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;		None               void
  4266 ;; Registers used:
  4267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:        1 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    5
  4280 ;; This function calls:
  4281 ;;		_setBuz
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _my_MainTimer
  4289  127B                     _my_MainTimer:	
  4290                           
  4291                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  4292                           
  4293                           ;incstack = 0
  4294                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4295  127B  0021               	movlb	1	; select bank1
  4296  127C  183F               	btfsc	_myMain^(0+128),0
  4297  127D  2A93               	goto	l10584
  4298                           
  4299                           ;Main_B1.c: 188: myMain.PowerCount++;
  4300  127E  3001               	movlw	1
  4301  127F  00F9               	movwf	??_my_MainTimer
  4302  1280  0879               	movf	??_my_MainTimer,w
  4303  1281  07C0               	addwf	(_myMain^(0+128)+1),f
  4304                           
  4305                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  4306  1282  0840               	movf	(_myMain^(0+128)+1),w
  4307  1283  3A4B               	xorlw	75
  4308  1284  1D03               	skipz
  4309  1285  0008               	return
  4310                           
  4311                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  4312  1286  01C0               	clrf	(_myMain^(0+128)+1)
  4313                           
  4314                           ;Main_B1.c: 191: myMain.PowerON = 1;
  4315  1287  143F               	bsf	_myMain^(0+128),0
  4316                           
  4317                           ;Main_B1.c: 196: setBuz(3, 50);
  4318  1288  3032               	movlw	50
  4319  1289  0020               	movlb	0	; select bank0
  4320  128A  00A4               	movwf	setBuz@time
  4321  128B  3000               	movlw	0
  4322  128C  00A5               	movwf	setBuz@time+1
  4323  128D  3003               	movlw	3
  4324  128E  3195  25F3         	fcall	_setBuz
  4325                           
  4326                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  4327  1290  0021               	movlb	1	; select bank1
  4328  1291  163F               	bsf	_myMain^(0+128),4
  4329                           
  4330                           ;Main_B1.c: 206: }
  4331                           ;Main_B1.c: 207: } else {
  4332  1292  0008               	return
  4333  1293                     l10584:	
  4334                           
  4335                           ;Main_B1.c: 208: myMain.PowerCount++;
  4336  1293  3001               	movlw	1
  4337  1294  00F9               	movwf	??_my_MainTimer
  4338  1295  0879               	movf	??_my_MainTimer,w
  4339  1296  07C0               	addwf	(_myMain^(0+128)+1),f
  4340                           
  4341                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  4342  1297  0840               	movf	(_myMain^(0+128)+1),w
  4343  1298  3A32               	xorlw	50
  4344  1299  1903               	btfsc	3,2
  4345                           
  4346                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  4347  129A  01C0               	clrf	(_myMain^(0+128)+1)
  4348                           
  4349                           ;Main_B1.c: 232: }
  4350                           ;Main_B1.c: 234: myMain.Count1++;
  4351  129B  3001               	movlw	1
  4352  129C  07C3               	addwf	(_myMain^(0+128)+4),f
  4353  129D  3000               	movlw	0
  4354  129E  3DC4               	addwfc	((_myMain+1)^(0+128)+4),f
  4355                           
  4356                           ;Main_B1.c: 235: if (myMain.Count1 == (1000 / 20)) {
  4357  129F  3004               	movlw	4
  4358  12A0  3EBF               	addlw	_myMain& (0+255)
  4359  12A1  0086               	movwf	6
  4360  12A2  0187               	clrf	7
  4361  12A3  3F40               	moviw [0]fsr1
  4362  12A4  3A32               	xorlw	50
  4363  12A5  1D03               	skipz
  4364  12A6  2AA9               	goto	u11845
  4365  12A7  3F41               	moviw [1]fsr1
  4366  12A8  3A00               	xorlw	0
  4367  12A9                     u11845:	
  4368  12A9  1D03               	skipz
  4369  12AA  0008               	return
  4370                           
  4371                           ;Main_B1.c: 236: myMain.Count1 = 0;
  4372  12AB  01C3               	clrf	(_myMain^(0+128)+4)
  4373  12AC  01C4               	clrf	((_myMain+1)^(0+128)+4)
  4374                           
  4375                           ;Main_B1.c: 248: if (myMain.Flag) {
  4376  12AD  1CBF               	btfss	_myMain^(0+128),1
  4377  12AE  2AB1               	goto	l1793
  4378                           
  4379                           ;Main_B1.c: 249: myMain.Flag = 0;
  4380  12AF  10BF               	bcf	_myMain^(0+128),1
  4381                           
  4382                           ;Main_B1.c: 258: } else {
  4383  12B0  0008               	return
  4384  12B1                     l1793:	
  4385                           
  4386                           ;Main_B1.c: 259: myMain.Flag = 1;
  4387  12B1  14BF               	bsf	_myMain^(0+128),1
  4388  12B2  0008               	return
  4389  12B3                     __end_of_my_MainTimer:	
  4390                           
  4391                           	psect	text2
  4392  1C68                     __ptext2:	
  4393 ;; *************** function _myMain_Initialization *****************
  4394 ;; Defined at:
  4395 ;;		line 170 in file "../src/Main_B1.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, fsr1l, fsr1h
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;Total ram usage:        1 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    3
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _myMain_Initialization
  4425  1C68                     _myMain_Initialization:	
  4426                           
  4427                           ;Main_B1.c: 173: product = &_product;
  4428                           
  4429                           ;incstack = 0
  4430                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4431  1C68  30A0               	movlw	__product& (0+255)
  4432  1C69  00F2               	movwf	??_myMain_Initialization
  4433  1C6A  0872               	movf	??_myMain_Initialization,w
  4434  1C6B  0020               	movlb	0	; select bank0
  4435  1C6C  00ED               	movwf	_product
  4436                           
  4437                           ;Main_B1.c: 174: product->Data[20] = 211;
  4438  1C6D  30D3               	movlw	211
  4439  1C6E  00F2               	movwf	??_myMain_Initialization
  4440  1C6F  086D               	movf	_product,w
  4441  1C70  3E14               	addlw	20
  4442  1C71  0086               	movwf	6
  4443  1C72  3002               	movlw	2	; select bank4/5
  4444  1C73  0087               	movwf	7
  4445  1C74  0872               	movf	??_myMain_Initialization,w
  4446  1C75  0081               	movwf	1
  4447  1C76  0008               	return
  4448  1C77                     __end_of_myMain_Initialization:	
  4449                           
  4450                           	psect	text3
  4451  0899                     __ptext3:	
  4452 ;; *************** function _getTemp_AD *****************
  4453 ;; Defined at:
  4454 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  channel         1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  channel         1    7[COMMON] unsigned char 
  4459 ;;  ADRES           2    8[COMMON] unsigned int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    5
  4476 ;; This function calls:
  4477 ;;		_getAD
  4478 ;; This function is called by:
  4479 ;;		_main
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _getTemp_AD
  4485  0899                     _getTemp_AD:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4489                           ;getTemp_AD@channel stored from wreg
  4490  0899  00F7               	movwf	getTemp_AD@channel
  4491                           
  4492                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  4493  089A  01F8               	clrf	getTemp_AD@ADRES
  4494  089B  01F9               	clrf	getTemp_AD@ADRES+1
  4495                           
  4496                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  4497  089C  0021               	movlb	1	; select bank1
  4498  089D  1D61               	btfss	_Temp^(0+128),2
  4499  089E  0008               	return
  4500                           
  4501                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0xf0);
  4502  089F  30F0               	movlw	240
  4503  08A0  00F6               	movwf	??_getTemp_AD
  4504  08A1  0876               	movf	??_getTemp_AD,w
  4505  08A2  00F2               	movwf	getAD@adcon1
  4506  08A3  0877               	movf	getTemp_AD@channel,w
  4507  08A4  319E  264E  3188   	fcall	_getAD
  4508  08A7  0873               	movf	?_getAD+1,w
  4509  08A8  01F9               	clrf	getTemp_AD@ADRES+1
  4510  08A9  07F9               	addwf	getTemp_AD@ADRES+1,f
  4511  08AA  0872               	movf	?_getAD,w
  4512  08AB  01F8               	clrf	getTemp_AD@ADRES
  4513  08AC  07F8               	addwf	getTemp_AD@ADRES,f
  4514                           
  4515                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  4516  08AD  0879               	movf	getTemp_AD@ADRES+1,w
  4517  08AE  0478               	iorwf	getTemp_AD@ADRES,w
  4518  08AF  1903               	skipnz
  4519  08B0  0008               	return
  4520                           
  4521                           ;OverTemperature_B1.c: 30: if (Temp.ADV[0] < ADRES) {
  4522  08B1  0879               	movf	getTemp_AD@ADRES+1,w
  4523  08B2  0021               	movlb	1	; select bank1
  4524  08B3  0266               	subwf	((_Temp+1)^(0+128)+4),w
  4525  08B4  1D03               	skipz
  4526  08B5  28B8               	goto	u9105
  4527  08B6  0878               	movf	getTemp_AD@ADRES,w
  4528  08B7  0265               	subwf	(_Temp^(0+128)+4),w
  4529  08B8                     u9105:	
  4530  08B8  1803               	skipnc
  4531  08B9  28C1               	goto	l8842
  4532                           
  4533                           ;OverTemperature_B1.c: 31: Temp.ADV[0] = ADRES;
  4534  08BA  0879               	movf	getTemp_AD@ADRES+1,w
  4535  08BB  01E6               	clrf	((_Temp+1)^(0+128)+4)
  4536  08BC  07E6               	addwf	((_Temp+1)^(0+128)+4),f
  4537  08BD  0878               	movf	getTemp_AD@ADRES,w
  4538  08BE  01E5               	clrf	(_Temp^(0+128)+4)
  4539  08BF  07E5               	addwf	(_Temp^(0+128)+4),f
  4540                           
  4541                           ;OverTemperature_B1.c: 32: } else if (Temp.ADV[1] < ADRES) {
  4542  08C0  0008               	return
  4543  08C1                     l8842:	
  4544  08C1  0879               	movf	getTemp_AD@ADRES+1,w
  4545  08C2  0268               	subwf	((_Temp+1)^(0+128)+6),w
  4546  08C3  1D03               	skipz
  4547  08C4  28C7               	goto	u9115
  4548  08C5  0878               	movf	getTemp_AD@ADRES,w
  4549  08C6  0267               	subwf	(_Temp^(0+128)+6),w
  4550  08C7                     u9115:	
  4551  08C7  1803               	skipnc
  4552  08C8  28D0               	goto	l8846
  4553                           
  4554                           ;OverTemperature_B1.c: 33: Temp.ADV[1] = ADRES;
  4555  08C9  0879               	movf	getTemp_AD@ADRES+1,w
  4556  08CA  01E8               	clrf	((_Temp+1)^(0+128)+6)
  4557  08CB  07E8               	addwf	((_Temp+1)^(0+128)+6),f
  4558  08CC  0878               	movf	getTemp_AD@ADRES,w
  4559  08CD  01E7               	clrf	(_Temp^(0+128)+6)
  4560  08CE  07E7               	addwf	(_Temp^(0+128)+6),f
  4561                           
  4562                           ;OverTemperature_B1.c: 34: } else if (Temp.ADV[2] < ADRES) {
  4563  08CF  0008               	return
  4564  08D0                     l8846:	
  4565  08D0  0879               	movf	getTemp_AD@ADRES+1,w
  4566  08D1  026A               	subwf	((_Temp+1)^(0+128)+8),w
  4567  08D2  1D03               	skipz
  4568  08D3  28D6               	goto	u9125
  4569  08D4  0878               	movf	getTemp_AD@ADRES,w
  4570  08D5  0269               	subwf	(_Temp^(0+128)+8),w
  4571  08D6                     u9125:	
  4572  08D6  1803               	skipnc
  4573  08D7  28DF               	goto	l8850
  4574                           
  4575                           ;OverTemperature_B1.c: 35: Temp.ADV[2] = ADRES;
  4576  08D8  0879               	movf	getTemp_AD@ADRES+1,w
  4577  08D9  01EA               	clrf	((_Temp+1)^(0+128)+8)
  4578  08DA  07EA               	addwf	((_Temp+1)^(0+128)+8),f
  4579  08DB  0878               	movf	getTemp_AD@ADRES,w
  4580  08DC  01E9               	clrf	(_Temp^(0+128)+8)
  4581  08DD  07E9               	addwf	(_Temp^(0+128)+8),f
  4582                           
  4583                           ;OverTemperature_B1.c: 36: } else if (Temp.ADV[3] < ADRES) {
  4584  08DE  0008               	return
  4585  08DF                     l8850:	
  4586  08DF  0879               	movf	getTemp_AD@ADRES+1,w
  4587  08E0  026C               	subwf	((_Temp+1)^(0+128)+10),w
  4588  08E1  1D03               	skipz
  4589  08E2  28E5               	goto	u9135
  4590  08E3  0878               	movf	getTemp_AD@ADRES,w
  4591  08E4  026B               	subwf	(_Temp^(0+128)+10),w
  4592  08E5                     u9135:	
  4593  08E5  1803               	skipnc
  4594  08E6  28EE               	goto	l8854
  4595                           
  4596                           ;OverTemperature_B1.c: 37: Temp.ADV[3] = ADRES;
  4597  08E7  0879               	movf	getTemp_AD@ADRES+1,w
  4598  08E8  01EC               	clrf	((_Temp+1)^(0+128)+10)
  4599  08E9  07EC               	addwf	((_Temp+1)^(0+128)+10),f
  4600  08EA  0878               	movf	getTemp_AD@ADRES,w
  4601  08EB  01EB               	clrf	(_Temp^(0+128)+10)
  4602  08EC  07EB               	addwf	(_Temp^(0+128)+10),f
  4603                           
  4604                           ;OverTemperature_B1.c: 38: } else if (Temp.ADV[4] < ADRES) {
  4605  08ED  0008               	return
  4606  08EE                     l8854:	
  4607  08EE  0879               	movf	getTemp_AD@ADRES+1,w
  4608  08EF  026E               	subwf	((_Temp+1)^(0+128)+12),w
  4609  08F0  1D03               	skipz
  4610  08F1  28F4               	goto	u9145
  4611  08F2  0878               	movf	getTemp_AD@ADRES,w
  4612  08F3  026D               	subwf	(_Temp^(0+128)+12),w
  4613  08F4                     u9145:	
  4614  08F4  1803               	skipnc
  4615  08F5  0008               	return
  4616                           
  4617                           ;OverTemperature_B1.c: 39: Temp.ADV[4] = ADRES;
  4618  08F6  0879               	movf	getTemp_AD@ADRES+1,w
  4619  08F7  01EE               	clrf	((_Temp+1)^(0+128)+12)
  4620  08F8  07EE               	addwf	((_Temp+1)^(0+128)+12),f
  4621  08F9  0878               	movf	getTemp_AD@ADRES,w
  4622  08FA  01ED               	clrf	(_Temp^(0+128)+12)
  4623  08FB  07ED               	addwf	(_Temp^(0+128)+12),f
  4624  08FC  0008               	return
  4625  08FD                     __end_of_getTemp_AD:	
  4626                           
  4627                           	psect	text4
  4628  1E4E                     __ptext4:	
  4629 ;; *************** function _getAD *****************
  4630 ;; Defined at:
  4631 ;;		line 462 in file "../src/MCU_B1.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  adcon0          1    wreg     unsigned char 
  4634 ;;  adcon1          1    2[COMMON] unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  adcon0          1    5[COMMON] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2    2[COMMON] int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4646 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;Total ram usage:        4 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    4
  4653 ;; This function calls:
  4654 ;;		_Timeout_Counter
  4655 ;;		_set_TimeoutCleared
  4656 ;; This function is called by:
  4657 ;;		_getTemp_AD
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _getAD
  4663  1E4E                     _getAD:	
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4667                           ;getAD@adcon0 stored from wreg
  4668  1E4E  00F5               	movwf	getAD@adcon0
  4669                           
  4670                           ;MCU_B1.c: 463: ADCON0 = adcon0;
  4671  1E4F  0875               	movf	getAD@adcon0,w
  4672  1E50  0021               	movlb	1	; select bank1
  4673  1E51  009D               	movwf	29	;volatile
  4674                           
  4675                           ;MCU_B1.c: 464: ADCON1 = adcon1;
  4676  1E52  0872               	movf	getAD@adcon1,w
  4677  1E53  009E               	movwf	30	;volatile
  4678                           
  4679                           ;MCU_B1.c: 465: GO_nDONE = 1;
  4680  1E54  149D               	bsf	29,1	;volatile
  4681                           
  4682                           ;MCU_B1.c: 466: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4683  1E55  2E59               	goto	l8356
  4684  1E56                     l8354:	
  4685                           
  4686                           ;MCU_B1.c: 467: Timeout_Counter();
  4687  1E56  319D  2594  319E   	fcall	_Timeout_Counter
  4688  1E59                     l8356:	
  4689  1E59  0021               	movlb	1	; select bank1
  4690  1E5A  1C9D               	btfss	29,1	;volatile
  4691  1E5B  2E5E               	goto	l8360
  4692  1E5C  1D49               	btfss	(_myMain^(0+128)+10),2
  4693  1E5D  2E56               	goto	l8354
  4694  1E5E                     l8360:	
  4695                           
  4696                           ;MCU_B1.c: 468: };
  4697                           ;MCU_B1.c: 469: set_TimeoutCleared();
  4698  1E5E  319B  231F         	fcall	_set_TimeoutCleared
  4699                           
  4700                           ;MCU_B1.c: 470: return ((ADRESH*256)+ADRESL);
  4701  1E60  0021               	movlb	1	; select bank1
  4702  1E61  081C               	movf	28,w	;volatile
  4703  1E62  01F3               	clrf	?_getAD+1
  4704  1E63  07F3               	addwf	?_getAD+1,f
  4705  1E64  081B               	movf	27,w	;volatile
  4706  1E65  01F2               	clrf	?_getAD
  4707  1E66  07F2               	addwf	?_getAD,f
  4708  1E67  0008               	return
  4709  1E68                     __end_of_getAD:	
  4710                           
  4711                           	psect	text5
  4712  1CE7                     __ptext5:	
  4713 ;; *************** function _WDT_Main *****************
  4714 ;; Defined at:
  4715 ;;		line 1120 in file "../src/MCU_B1.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, pclath, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    4
  4736 ;; This function calls:
  4737 ;;		_WDT_Clearing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function _WDT_Main
  4745  1CE7                     _WDT_Main:	
  4746                           
  4747                           ;MCU_B1.c: 1121: if (WDT.Enable == 1) {
  4748                           
  4749                           ;incstack = 0
  4750                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4751  1CE7  0022               	movlb	2	; select bank2
  4752  1CE8  1C53               	btfss	_WDT^(0+256),0
  4753  1CE9  0008               	return
  4754                           
  4755                           ;MCU_B1.c: 1122: if (WDT.Timer-- > 0) {
  4756  1CEA  3001               	movlw	1
  4757  1CEB  02D4               	subwf	(_WDT^(0+256)+1),f
  4758  1CEC  0854               	movf	(_WDT^(0+256)+1),w
  4759  1CED  3AFF               	xorlw	255
  4760  1CEE  1903               	skipnz
  4761  1CEF  0008               	return
  4762                           
  4763                           ;MCU_B1.c: 1123: WDT.Timer = 100;
  4764  1CF0  3064               	movlw	100
  4765  1CF1  00F2               	movwf	??_WDT_Main
  4766  1CF2  0872               	movf	??_WDT_Main,w
  4767  1CF3  00D4               	movwf	(_WDT^(0+256)+1)
  4768                           
  4769                           ;MCU_B1.c: 1124: WDT_Clearing();
  4770  1CF4  3187  27FE         	fcall	_WDT_Clearing
  4771  1CF6  0008               	return
  4772  1CF7                     __end_of_WDT_Main:	
  4773                           
  4774                           	psect	text6
  4775  07FE                     __ptext6:	
  4776 ;; *************** function _WDT_Clearing *****************
  4777 ;; Defined at:
  4778 ;;		line 1130 in file "../src/MCU_B1.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;		None               void
  4785 ;; Registers used:
  4786 ;;		None
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    3
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_WDT_Main
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           
  4807                           ;psect for function _WDT_Clearing
  4808  07FE                     _WDT_Clearing:	
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _WDT_Clearing: []
  4812  07FE  0064               	clrwdt	;# 
  4813  07FF  0008               	return
  4814  0800                     __end_of_WDT_Clearing:	
  4815                           
  4816                           	psect	text7
  4817  1B03                     __ptext7:	
  4818 ;; *************** function _Temp_Main *****************
  4819 ;; Defined at:
  4820 ;;		line 65 in file "../src/OverTemperature_B1.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;		None               void
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    6
  4841 ;; This function calls:
  4842 ;;		_setTemp_Main
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _Temp_Main
  4850  1B03                     _Temp_Main:	
  4851                           
  4852                           ;OverTemperature_B1.c: 67: setTemp_Main();
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4856  1B03  3183  239E         	fcall	_setTemp_Main
  4857  1B05  0008               	return
  4858  1B06                     __end_of_Temp_Main:	
  4859                           
  4860                           	psect	text8
  4861  039E                     __ptext8:	
  4862 ;; *************** function _setTemp_Main *****************
  4863 ;; Defined at:
  4864 ;;		line 72 in file "../src/OverTemperature_B1.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  AD              2   64[BANK0 ] int 
  4869 ;;  DangerValue     2   62[BANK0 ] unsigned int 
  4870 ;;  SafeValue       2   60[BANK0 ] unsigned int 
  4871 ;;  TempGO          1   59[BANK0 ] unsigned char 
  4872 ;;  error           1   58[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;Total ram usage:       10 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    5
  4889 ;; This function calls:
  4890 ;;		___lwdiv
  4891 ;;		_getMain_All_Error_Status
  4892 ;;		_getMain_All_LightsStatus
  4893 ;;		_setBuz
  4894 ;;		_setOverTemp_ADV_Restore
  4895 ;;		_setProductData
  4896 ;; This function is called by:
  4897 ;;		_Temp_Main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _setTemp_Main
  4903  039E                     _setTemp_Main:	
  4904                           
  4905                           ;OverTemperature_B1.c: 73: char error = getMain_All_Error_Status(0);
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4909  039E  3000               	movlw	0
  4910  039F  319E  2603  3183   	fcall	_getMain_All_Error_Status
  4911  03A2  0020               	movlb	0	; select bank0
  4912  03A3  00D8               	movwf	??_setTemp_Main
  4913  03A4  0858               	movf	??_setTemp_Main,w
  4914  03A5  00DA               	movwf	setTemp_Main@error
  4915                           
  4916                           ;OverTemperature_B1.c: 74: ADtype SafeValue = 0, DangerValue = 0;
  4917  03A6  01DC               	clrf	setTemp_Main@SafeValue
  4918  03A7  01DD               	clrf	setTemp_Main@SafeValue+1
  4919  03A8  01DE               	clrf	setTemp_Main@DangerValue
  4920  03A9  01DF               	clrf	setTemp_Main@DangerValue+1
  4921                           
  4922                           ;OverTemperature_B1.c: 75: int AD = 0;
  4923  03AA  01E0               	clrf	setTemp_Main@AD
  4924  03AB  01E1               	clrf	setTemp_Main@AD+1
  4925                           
  4926                           ;OverTemperature_B1.c: 76: char TempGO = getMain_All_LightsStatus();
  4927  03AC  319D  25BE  3183   	fcall	_getMain_All_LightsStatus
  4928  03AF  0020               	movlb	0	; select bank0
  4929  03B0  00D8               	movwf	??_setTemp_Main
  4930  03B1  0858               	movf	??_setTemp_Main,w
  4931  03B2  00DB               	movwf	setTemp_Main@TempGO
  4932                           
  4933                           ;OverTemperature_B1.c: 78: if (Temp.Enable == 1) {
  4934  03B3  0021               	movlb	1	; select bank1
  4935  03B4  1C61               	btfss	_Temp^(0+128),0
  4936  03B5  2C6B               	goto	l2086
  4937                           
  4938                           ;OverTemperature_B1.c: 86: if (Temp.ADtoGO == 0) {
  4939  03B6  1961               	btfsc	_Temp^(0+128),2
  4940  03B7  2BD5               	goto	l10280
  4941                           
  4942                           ;OverTemperature_B1.c: 87: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  4943  03B8  0020               	movlb	0	; select bank0
  4944  03B9  085B               	movf	setTemp_Main@TempGO,w
  4945  03BA  3A01               	xorlw	1
  4946  03BB  1D03               	skipz
  4947  03BC  2BC0               	goto	l2092
  4948  03BD  0021               	movlb	1	; select bank1
  4949  03BE  1CE1               	btfss	_Temp^(0+128),1
  4950  03BF  2BC3               	goto	l10272
  4951  03C0                     l2092:	
  4952  03C0  0021               	movlb	1	; select bank1
  4953  03C1  1CE1               	btfss	_Temp^(0+128),1
  4954  03C2  2BD2               	goto	l10278
  4955  03C3                     l10272:	
  4956                           
  4957                           ;OverTemperature_B1.c: 88: Temp.Time++;
  4958  03C3  3001               	movlw	1
  4959  03C4  07E2               	addwf	(_Temp^(0+128)+1),f
  4960  03C5  3000               	movlw	0
  4961  03C6  3DE3               	addwfc	((_Temp+1)^(0+128)+1),f
  4962                           
  4963                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (5000 / 20)) {
  4964  03C7  3000               	movlw	0
  4965  03C8  0263               	subwf	((_Temp+1)^(0+128)+1),w
  4966  03C9  30FA               	movlw	250
  4967  03CA  1903               	skipnz
  4968  03CB  0262               	subwf	(_Temp^(0+128)+1),w
  4969  03CC  1C03               	skipc
  4970  03CD  0008               	return
  4971                           
  4972                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  4973  03CE  01E2               	clrf	(_Temp^(0+128)+1)
  4974  03CF  01E3               	clrf	((_Temp+1)^(0+128)+1)
  4975                           
  4976                           ;OverTemperature_B1.c: 91: Temp.ADtoGO = 1;
  4977  03D0  1561               	bsf	_Temp^(0+128),2
  4978                           
  4979                           ;OverTemperature_B1.c: 92: }
  4980                           ;OverTemperature_B1.c: 93: } else {
  4981  03D1  0008               	return
  4982  03D2                     l10278:	
  4983                           
  4984                           ;OverTemperature_B1.c: 94: Temp.Time = 0;
  4985  03D2  01E2               	clrf	(_Temp^(0+128)+1)
  4986  03D3  01E3               	clrf	((_Temp+1)^(0+128)+1)
  4987                           
  4988                           ;OverTemperature_B1.c: 95: }
  4989                           ;OverTemperature_B1.c: 96: } else {
  4990  03D4  0008               	return
  4991  03D5                     l10280:	
  4992                           
  4993                           ;OverTemperature_B1.c: 97: Temp.Time++;
  4994  03D5  3001               	movlw	1
  4995  03D6  07E2               	addwf	(_Temp^(0+128)+1),f
  4996  03D7  3000               	movlw	0
  4997  03D8  3DE3               	addwfc	((_Temp+1)^(0+128)+1),f
  4998                           
  4999                           ;OverTemperature_B1.c: 98: if (Temp.Time >= (100 / 20)) {
  5000  03D9  3000               	movlw	0
  5001  03DA  0263               	subwf	((_Temp+1)^(0+128)+1),w
  5002  03DB  3005               	movlw	5
  5003  03DC  1903               	skipnz
  5004  03DD  0262               	subwf	(_Temp^(0+128)+1),w
  5005  03DE  1C03               	skipc
  5006  03DF  0008               	return
  5007                           
  5008                           ;OverTemperature_B1.c: 99: Temp.Time = 0;
  5009  03E0  01E2               	clrf	(_Temp^(0+128)+1)
  5010  03E1  01E3               	clrf	((_Temp+1)^(0+128)+1)
  5011                           
  5012                           ;OverTemperature_B1.c: 104: AD = (Temp.ADV[1] + Temp.ADV[2] + Temp.ADV[3]) / 3;
  5013  03E2  3003               	movlw	3
  5014  03E3  00F2               	movwf	___lwdiv@divisor
  5015  03E4  3000               	movlw	0
  5016  03E5  00F3               	movwf	___lwdiv@divisor+1
  5017  03E6  300A               	movlw	10
  5018  03E7  3EE1               	addlw	_Temp& (0+255)
  5019  03E8  0086               	movwf	6
  5020  03E9  0187               	clrf	7
  5021  03EA  3008               	movlw	8
  5022  03EB  3EE1               	addlw	_Temp& (0+255)
  5023  03EC  0084               	movwf	4
  5024  03ED  0185               	clrf	5
  5025  03EE  3F00               	moviw [0]fsr0
  5026  03EF  0767               	addwf	(_Temp^(0+128)+6),w
  5027  03F0  0020               	movlb	0	; select bank0
  5028  03F1  00D8               	movwf	??_setTemp_Main
  5029  03F2  3F01               	moviw [1]fsr0
  5030  03F3  0021               	movlb	1	; select bank1
  5031  03F4  3D68               	addwfc	((_Temp+1)^(0+128)+6),w
  5032  03F5  0020               	movlb	0	; select bank0
  5033  03F6  00D9               	movwf	??_setTemp_Main+1
  5034  03F7  3F40               	moviw [0]fsr1
  5035  03F8  0758               	addwf	??_setTemp_Main,w
  5036  03F9  00F4               	movwf	___lwdiv@dividend
  5037  03FA  3F41               	moviw [1]fsr1
  5038  03FB  3D59               	addwfc	??_setTemp_Main+1,w
  5039  03FC  00F5               	movwf	___lwdiv@dividend+1
  5040  03FD  3191  21A0  3183   	fcall	___lwdiv
  5041  0400  0873               	movf	?___lwdiv+1,w
  5042  0401  0020               	movlb	0	; select bank0
  5043  0402  01E1               	clrf	setTemp_Main@AD+1
  5044  0403  07E1               	addwf	setTemp_Main@AD+1,f
  5045  0404  0872               	movf	?___lwdiv,w
  5046  0405  01E0               	clrf	setTemp_Main@AD
  5047  0406  07E0               	addwf	setTemp_Main@AD,f
  5048                           
  5049                           ;OverTemperature_B1.c: 105: setOverTemp_ADV_Restore();
  5050  0407  319E  2635  3183   	fcall	_setOverTemp_ADV_Restore
  5051                           
  5052                           ;OverTemperature_B1.c: 106: if (AD > 0) {
  5053  040A  0020               	movlb	0	; select bank0
  5054  040B  0861               	movf	setTemp_Main@AD+1,w
  5055  040C  3A80               	xorlw	128
  5056  040D  00D8               	movwf	??_setTemp_Main
  5057  040E  3080               	movlw	128
  5058  040F  0258               	subwf	??_setTemp_Main,w
  5059  0410  1D03               	skipz
  5060  0411  2C14               	goto	u11355
  5061  0412  3001               	movlw	1
  5062  0413  0260               	subwf	setTemp_Main@AD,w
  5063  0414                     u11355:	
  5064  0414  1C03               	skipc
  5065  0415  0008               	return
  5066                           
  5067                           ;OverTemperature_B1.c: 107: Temp.ADtoGO = 0;
  5068  0416  0021               	movlb	1	; select bank1
  5069  0417  1161               	bcf	_Temp^(0+128),2
  5070                           
  5071                           ;OverTemperature_B1.c: 123: SafeValue = 420;
  5072  0418  30A4               	movlw	164
  5073  0419  0020               	movlb	0	; select bank0
  5074  041A  00DC               	movwf	setTemp_Main@SafeValue
  5075  041B  3001               	movlw	1
  5076  041C  00DD               	movwf	setTemp_Main@SafeValue+1
  5077                           
  5078                           ;OverTemperature_B1.c: 124: DangerValue = 365;
  5079  041D  306D               	movlw	109
  5080  041E  00DE               	movwf	setTemp_Main@DangerValue
  5081  041F  3001               	movlw	1
  5082  0420  00DF               	movwf	setTemp_Main@DangerValue+1
  5083                           
  5084                           ;OverTemperature_B1.c: 130: if (Temp.ERROR == 1) {
  5085  0421  0021               	movlb	1	; select bank1
  5086  0422  1CE1               	btfss	_Temp^(0+128),1
  5087  0423  2C42               	goto	l10310
  5088                           
  5089                           ;OverTemperature_B1.c: 131: if (AD >= SafeValue) {
  5090  0424  0020               	movlb	0	; select bank0
  5091  0425  085D               	movf	setTemp_Main@SafeValue+1,w
  5092  0426  0261               	subwf	setTemp_Main@AD+1,w
  5093  0427  1D03               	skipz
  5094  0428  2C2B               	goto	u11375
  5095  0429  085C               	movf	setTemp_Main@SafeValue,w
  5096  042A  0260               	subwf	setTemp_Main@AD,w
  5097  042B                     u11375:	
  5098  042B  1C03               	skipc
  5099  042C  2C57               	goto	l10320
  5100                           
  5101                           ;OverTemperature_B1.c: 132: Temp.Count++;
  5102  042D  3001               	movlw	1
  5103  042E  00D8               	movwf	??_setTemp_Main
  5104  042F  0858               	movf	??_setTemp_Main,w
  5105  0430  0021               	movlb	1	; select bank1
  5106  0431  07E4               	addwf	(_Temp^(0+128)+3),f
  5107                           
  5108                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  5109  0432  3003               	movlw	3
  5110  0433  0264               	subwf	(_Temp^(0+128)+3),w
  5111  0434  1C03               	skipc
  5112  0435  2C59               	goto	l10322
  5113                           
  5114                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  5115  0436  01E4               	clrf	(_Temp^(0+128)+3)
  5116                           
  5117                           ;OverTemperature_B1.c: 135: Temp.ERROR = 0;
  5118  0437  10E1               	bcf	_Temp^(0+128),1
  5119                           
  5120                           ;OverTemperature_B1.c: 136: setBuz(2, 100);
  5121  0438  3064               	movlw	100
  5122  0439  0020               	movlb	0	; select bank0
  5123  043A  00A4               	movwf	setBuz@time
  5124  043B  3000               	movlw	0
  5125  043C  00A5               	movwf	setBuz@time+1
  5126  043D  3002               	movlw	2
  5127  043E  3195  25F3  3183   	fcall	_setBuz
  5128                           
  5129                           ;OverTemperature_B1.c: 137: }
  5130                           ;OverTemperature_B1.c: 138: } else {
  5131  0441  2C59               	goto	l10322
  5132  0442                     l10310:	
  5133                           ;OverTemperature_B1.c: 140: }
  5134                           ;OverTemperature_B1.c: 141: } else {
  5135                           
  5136                           ;OverTemperature_B1.c: 139: Temp.Count = 0;
  5137                           
  5138                           
  5139                           ;OverTemperature_B1.c: 142: if (AD <= DangerValue) {
  5140  0442  0020               	movlb	0	; select bank0
  5141  0443  0861               	movf	setTemp_Main@AD+1,w
  5142  0444  025F               	subwf	setTemp_Main@DangerValue+1,w
  5143  0445  1D03               	skipz
  5144  0446  2C49               	goto	u11395
  5145  0447  0860               	movf	setTemp_Main@AD,w
  5146  0448  025E               	subwf	setTemp_Main@DangerValue,w
  5147  0449                     u11395:	
  5148  0449  1C03               	skipc
  5149  044A  2C57               	goto	l10320
  5150                           
  5151                           ;OverTemperature_B1.c: 143: Temp.Count++;
  5152  044B  3001               	movlw	1
  5153  044C  00D8               	movwf	??_setTemp_Main
  5154  044D  0858               	movf	??_setTemp_Main,w
  5155  044E  0021               	movlb	1	; select bank1
  5156  044F  07E4               	addwf	(_Temp^(0+128)+3),f
  5157                           
  5158                           ;OverTemperature_B1.c: 144: if (Temp.Count >= 3) {
  5159  0450  3003               	movlw	3
  5160  0451  0264               	subwf	(_Temp^(0+128)+3),w
  5161  0452  1C03               	skipc
  5162  0453  2C59               	goto	l10322
  5163                           
  5164                           ;OverTemperature_B1.c: 145: Temp.Count = 0;
  5165  0454  01E4               	clrf	(_Temp^(0+128)+3)
  5166                           
  5167                           ;OverTemperature_B1.c: 146: Temp.ERROR = 1;
  5168  0455  14E1               	bsf	_Temp^(0+128),1
  5169                           
  5170                           ;OverTemperature_B1.c: 147: }
  5171                           ;OverTemperature_B1.c: 148: } else {
  5172  0456  2C59               	goto	l10322
  5173  0457                     l10320:	
  5174                           
  5175                           ;OverTemperature_B1.c: 149: Temp.Count = 0;
  5176  0457  0021               	movlb	1	; select bank1
  5177  0458  01E4               	clrf	(_Temp^(0+128)+3)
  5178  0459                     l10322:	
  5179                           
  5180                           ;OverTemperature_B1.c: 150: }
  5181                           ;OverTemperature_B1.c: 151: }
  5182                           ;OverTemperature_B1.c: 152: setProductData(24, AD >> 8);
  5183  0459  0020               	movlb	0	; select bank0
  5184  045A  0861               	movf	setTemp_Main@AD+1,w
  5185  045B  00D8               	movwf	??_setTemp_Main
  5186  045C  0858               	movf	??_setTemp_Main,w
  5187  045D  00D5               	movwf	setProductData@value
  5188  045E  3018               	movlw	24
  5189  045F  319B  23A2  3183   	fcall	_setProductData
  5190                           
  5191                           ;OverTemperature_B1.c: 153: setProductData(25, AD);
  5192  0462  0020               	movlb	0	; select bank0
  5193  0463  0860               	movf	setTemp_Main@AD,w
  5194  0464  00D8               	movwf	??_setTemp_Main
  5195  0465  0858               	movf	??_setTemp_Main,w
  5196  0466  00D5               	movwf	setProductData@value
  5197  0467  3019               	movlw	25
  5198  0468  319B  23A2         	fcall	_setProductData
  5199                           
  5200                           ;OverTemperature_B1.c: 169: }
  5201                           ;OverTemperature_B1.c: 170: }
  5202                           ;OverTemperature_B1.c: 171: }
  5203                           ;OverTemperature_B1.c: 174: } else {
  5204  046A  0008               	return
  5205  046B                     l2086:	
  5206                           
  5207                           ;OverTemperature_B1.c: 175: if (myMain.PowerON == 1) {
  5208  046B  1C3F               	btfss	_myMain^(0+128),0
  5209  046C  0008               	return
  5210                           
  5211                           ;OverTemperature_B1.c: 176: Temp.Enable = 1;
  5212  046D  1461               	bsf	_Temp^(0+128),0
  5213  046E  0008               	return
  5214  046F                     __end_of_setTemp_Main:	
  5215                           
  5216                           	psect	text9
  5217  1E35                     __ptext9:	
  5218 ;; *************** function _setOverTemp_ADV_Restore *****************
  5219 ;; Defined at:
  5220 ;;		line 182 in file "../src/OverTemperature_B1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  i               2    3[COMMON] int 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;Total ram usage:        3 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    3
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_setTemp_Main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _setOverTemp_ADV_Restore
  5250  1E35                     _setOverTemp_ADV_Restore:	
  5251                           
  5252                           ;OverTemperature_B1.c: 183: for (int i = 0; i < 5; i++) {
  5253                           
  5254                           ;incstack = 0
  5255                           ; Regs used in _setOverTemp_ADV_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  5256  1E35  01F3               	clrf	setOverTemp_ADV_Restore@i
  5257  1E36  01F4               	clrf	setOverTemp_ADV_Restore@i+1
  5258  1E37                     L1:	
  5259  1E37  0874               	movf	setOverTemp_ADV_Restore@i+1,w
  5260  1E38  3A80               	xorlw	128
  5261  1E39  00F2               	movwf	??_setOverTemp_ADV_Restore
  5262  1E3A  3080               	movlw	128
  5263  1E3B  0272               	subwf	??_setOverTemp_ADV_Restore,w
  5264  1E3C  1D03               	skipz
  5265  1E3D  2E40               	goto	u7405
  5266  1E3E  3005               	movlw	5
  5267  1E3F  0273               	subwf	setOverTemp_ADV_Restore@i,w
  5268  1E40                     u7405:	
  5269  1E40  1803               	btfsc	3,0
  5270  1E41  0008               	return
  5271                           
  5272                           ;OverTemperature_B1.c: 184: Temp.ADV[i] = 0;
  5273  1E42  3573               	lslf	setOverTemp_ADV_Restore@i,w
  5274  1E43  3EE5               	addlw	(_Temp+4)& (0+255)
  5275  1E44  0086               	movwf	6
  5276  1E45  0187               	clrf	7
  5277  1E46  3000               	movlw	0
  5278  1E47  3FC0               	movwi [0]fsr1
  5279  1E48  3FC1               	movwi [1]fsr1
  5280  1E49  3001               	movlw	1
  5281  1E4A  07F3               	addwf	setOverTemp_ADV_Restore@i,f
  5282  1E4B  3000               	movlw	0
  5283  1E4C  3DF4               	addwfc	setOverTemp_ADV_Restore@i+1,f
  5284  1E4D  2E37               	goto	L1
  5285  1E4E                     __end_of_setOverTemp_ADV_Restore:	
  5286                           
  5287                           	psect	text10
  5288  1B00                     __ptext10:	
  5289 ;; *************** function _Temp_Initialization *****************
  5290 ;; Defined at:
  5291 ;;		line 8 in file "../src/OverTemperature_B1.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    4
  5312 ;; This function calls:
  5313 ;;		_setTemp_Initialization
  5314 ;; This function is called by:
  5315 ;;		_main
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function _Temp_Initialization
  5321  1B00                     _Temp_Initialization:	
  5322                           
  5323                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  5324                           
  5325                           ;incstack = 0
  5326                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  5327  1B00  3180  2003         	fcall	_setTemp_Initialization
  5328  1B02  0008               	return
  5329  1B03                     __end_of_Temp_Initialization:	
  5330                           
  5331                           	psect	text11
  5332  0003                     __ptext11:	
  5333 ;; *************** function _setTemp_Initialization *****************
  5334 ;; Defined at:
  5335 ;;		line 60 in file "../src/OverTemperature_B1.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;		None               void
  5342 ;; Registers used:
  5343 ;;		None
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;Total ram usage:        0 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    3
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_Temp_Initialization
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _setTemp_Initialization
  5365  0003                     _setTemp_Initialization:	
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in _setTemp_Initialization: []
  5369  0003  0008               	return
  5370  0004                     __end_of_setTemp_Initialization:	
  5371                           
  5372                           	psect	text12
  5373  1C59                     __ptext12:	
  5374 ;; *************** function _Switch_Main *****************
  5375 ;; Defined at:
  5376 ;;		line 76 in file "../src/Switch_B1.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;		None               void
  5383 ;; Registers used:
  5384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;Total ram usage:        0 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    7
  5397 ;; This function calls:
  5398 ;;		_TouchPower
  5399 ;;		_setSw_Main
  5400 ;; This function is called by:
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _Switch_Main
  5407  1C59                     _Switch_Main:	
  5408                           
  5409                           ;Switch_B1.c: 79: setSw_Main(1);
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5413  1C59  3001               	movlw	1
  5414  1C5A  3180  2058  319C   	fcall	_setSw_Main
  5415                           
  5416                           ;Switch_B1.c: 83: setSw_Main(2);
  5417  1C5D  3002               	movlw	2
  5418  1C5E  3180  2058  319C   	fcall	_setSw_Main
  5419                           
  5420                           ;Switch_B1.c: 87: setSw_Main(3);
  5421  1C61  3003               	movlw	3
  5422  1C62  3180  2058  319C   	fcall	_setSw_Main
  5423                           
  5424                           ;Switch_B1.c: 91: TouchPower();
  5425  1C65  319D  25A9         	fcall	_TouchPower
  5426  1C67  0008               	return
  5427  1C68                     __end_of_Switch_Main:	
  5428                           
  5429                           	psect	text13
  5430  0058                     __ptext13:	
  5431 ;; *************** function _setSw_Main *****************
  5432 ;; Defined at:
  5433 ;;		line 117 in file "../src/Switch_B1.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  sw              1    wreg     unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  sw              1   14[BANK0 ] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;Total ram usage:        3 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    6
  5454 ;; This function calls:
  5455 ;;		_SwPointSelect
  5456 ;;		_getMain_All_Error_Status
  5457 ;;		_getSw_KeyStatus
  5458 ;;		_setBuz
  5459 ;;		_setDimmerLights_DimmingOn
  5460 ;;		_setDimmerLights_SwOff
  5461 ;;		_setDimmerLights_SwOn
  5462 ;;		_setRF_Learn
  5463 ;; This function is called by:
  5464 ;;		_Switch_Main
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function _setSw_Main
  5470  0058                     _setSw_Main:	
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5474                           ;setSw_Main@sw stored from wreg
  5475  0058  0020               	movlb	0	; select bank0
  5476  0059  00AE               	movwf	setSw_Main@sw
  5477                           
  5478                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5479  005A  082E               	movf	setSw_Main@sw,w
  5480  005B  319E  26F9  3180   	fcall	_SwPointSelect
  5481                           
  5482                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5483  005E  0020               	movlb	0	; select bank0
  5484  005F  086B               	movf	_Sw,w
  5485  0060  0086               	movwf	6
  5486  0061  3001               	movlw	1	; select bank2/3
  5487  0062  0087               	movwf	7
  5488  0063  1C01               	btfss	1,0
  5489  0064  29BF               	goto	l2966
  5490                           
  5491                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  5492  0065  3000               	movlw	0
  5493  0066  319E  2603  3180   	fcall	_getMain_All_Error_Status
  5494  0069  3800               	iorlw	0
  5495  006A  1D03               	skipz
  5496  006B  2887               	goto	l10416
  5497                           
  5498                           ;Switch_B1.c: 122: Sw->Detect = 0;
  5499  006C  0020               	movlb	0	; select bank0
  5500  006D  0A6B               	incf	_Sw,w
  5501  006E  0086               	movwf	6
  5502  006F  3001               	movlw	1	; select bank2/3
  5503  0070  0087               	movwf	7
  5504  0071  1081               	bcf	1,1
  5505                           
  5506                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  5507  0072  082E               	movf	setSw_Main@sw,w
  5508  0073  319F  279B  3180   	fcall	_getSw_KeyStatus
  5509  0076  3A01               	xorlw	1
  5510  0077  3000               	movlw	0
  5511  0078  1903               	skipnz
  5512  0079  3001               	movlw	1
  5513  007A  0020               	movlb	0	; select bank0
  5514  007B  00AC               	movwf	??_setSw_Main
  5515  007C  086B               	movf	_Sw,w
  5516  007D  0086               	movwf	6
  5517  007E  3001               	movlw	1	; select bank2/3
  5518  007F  0087               	movwf	7
  5519  0080  0DAC               	rlf	??_setSw_Main,f
  5520  0081  0801               	movf	1,w
  5521  0082  062C               	xorwf	??_setSw_Main,w
  5522  0083  39FD               	andlw	-3
  5523  0084  062C               	xorwf	??_setSw_Main,w
  5524  0085  0081               	movwf	1
  5525                           
  5526                           ;Switch_B1.c: 124: } else {
  5527  0086  289D               	goto	l2968
  5528  0087                     l10416:	
  5529                           
  5530                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  5531  0087  0020               	movlb	0	; select bank0
  5532  0088  0A6B               	incf	_Sw,w
  5533  0089  0086               	movwf	6
  5534  008A  3001               	movlw	1	; select bank2/3
  5535  008B  0087               	movwf	7
  5536  008C  1881               	btfsc	1,1
  5537  008D  289D               	goto	l2968
  5538                           
  5539                           ;Switch_B1.c: 126: Sw->Detect = 1;
  5540  008E  0A6B               	incf	_Sw,w
  5541  008F  0086               	movwf	6
  5542  0090  3001               	movlw	1	; select bank2/3
  5543  0091  0087               	movwf	7
  5544  0092  1481               	bsf	1,1
  5545                           
  5546                           ;Switch_B1.c: 128: Sw->Touch = 0;
  5547  0093  086B               	movf	_Sw,w
  5548  0094  0086               	movwf	6
  5549  0095  3001               	movlw	1	; select bank2/3
  5550  0096  0087               	movwf	7
  5551  0097  1081               	bcf	1,1
  5552                           
  5553                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  5554  0098  086B               	movf	_Sw,w
  5555  0099  0086               	movwf	6
  5556  009A  3001               	movlw	1	; select bank2/3
  5557  009B  0087               	movwf	7
  5558  009C  1501               	bsf	1,2
  5559  009D                     l2968:	
  5560                           
  5561                           ;Switch_B1.c: 130: }
  5562                           ;Switch_B1.c: 131: }
  5563                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  5564  009D  086B               	movf	_Sw,w
  5565  009E  0086               	movwf	6
  5566  009F  3001               	movlw	1	; select bank2/3
  5567  00A0  0087               	movwf	7
  5568  00A1  1C81               	btfss	1,1
  5569  00A2  296C               	goto	l10466
  5570                           
  5571                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  5572  00A3  086B               	movf	_Sw,w
  5573  00A4  0086               	movwf	6
  5574  00A5  3001               	movlw	1	; select bank2/3
  5575  00A6  0087               	movwf	7
  5576  00A7  1901               	btfsc	1,2
  5577  00A8  28CA               	goto	l10432
  5578                           
  5579                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  5580  00A9  3001               	movlw	1
  5581  00AA  00AC               	movwf	??_setSw_Main
  5582  00AB  086B               	movf	_Sw,w
  5583  00AC  3E02               	addlw	2
  5584  00AD  0086               	movwf	6
  5585  00AE  3001               	movlw	1	; select bank2/3
  5586  00AF  0087               	movwf	7
  5587  00B0  082C               	movf	??_setSw_Main,w
  5588  00B1  0781               	addwf	1,f
  5589                           
  5590                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  5591  00B2  086B               	movf	_Sw,w
  5592  00B3  3E02               	addlw	2
  5593  00B4  0086               	movwf	6
  5594  00B5  3001               	movlw	1	; select bank2/3
  5595  00B6  0087               	movwf	7
  5596  00B7  3005               	movlw	5
  5597  00B8  0201               	subwf	1,w
  5598  00B9  1C03               	skipc
  5599  00BA  0008               	return
  5600                           
  5601                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  5602  00BB  086B               	movf	_Sw,w
  5603  00BC  3E02               	addlw	2
  5604  00BD  0086               	movwf	6
  5605  00BE  3001               	movlw	1	; select bank2/3
  5606  00BF  0087               	movwf	7
  5607  00C0  0181               	clrf	1
  5608                           
  5609                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  5610  00C1  086B               	movf	_Sw,w
  5611  00C2  0086               	movwf	6
  5612  00C3  3001               	movlw	1	; select bank2/3
  5613  00C4  0087               	movwf	7
  5614  00C5  1501               	bsf	1,2
  5615                           
  5616                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  5617  00C6  082E               	movf	setSw_Main@sw,w
  5618  00C7  3187  2765         	fcall	_setDimmerLights_SwOn
  5619                           
  5620                           ;Switch_B1.c: 147: }
  5621                           ;Switch_B1.c: 148: } else {
  5622  00C9  0008               	return
  5623  00CA                     l10432:	
  5624                           
  5625                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  5626  00CA  0020               	movlb	0	; select bank0
  5627  00CB  086B               	movf	_Sw,w
  5628  00CC  0086               	movwf	6
  5629  00CD  3001               	movlw	1	; select bank2/3
  5630  00CE  0087               	movwf	7
  5631  00CF  1981               	btfsc	1,3
  5632  00D0  28FC               	goto	l10442
  5633                           
  5634                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  5635  00D1  086B               	movf	_Sw,w
  5636  00D2  3E03               	addlw	3
  5637  00D3  0086               	movwf	6
  5638  00D4  3001               	movlw	1	; select bank2/3
  5639  00D5  0087               	movwf	7
  5640  00D6  3001               	movlw	1
  5641  00D7  0781               	addwf	1,f
  5642  00D8  3141               	addfsr 1,1
  5643  00D9  1803               	skipnc
  5644  00DA  0A81               	incf	1,f
  5645                           
  5646                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  5647  00DB  086B               	movf	_Sw,w
  5648  00DC  3E03               	addlw	3
  5649  00DD  0086               	movwf	6
  5650  00DE  3001               	movlw	1	; select bank2/3
  5651  00DF  0087               	movwf	7
  5652  00E0  3F40               	moviw [0]fsr1
  5653  00E1  00AC               	movwf	??_setSw_Main
  5654  00E2  3F41               	moviw [1]fsr1
  5655  00E3  00AD               	movwf	??_setSw_Main+1
  5656  00E4  3000               	movlw	0
  5657  00E5  022D               	subwf	??_setSw_Main+1,w
  5658  00E6  304B               	movlw	75
  5659  00E7  1903               	skipnz
  5660  00E8  022C               	subwf	??_setSw_Main,w
  5661  00E9  1C03               	skipc
  5662  00EA  0008               	return
  5663                           
  5664                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  5665  00EB  086B               	movf	_Sw,w
  5666  00EC  3E03               	addlw	3
  5667  00ED  0086               	movwf	6
  5668  00EE  3001               	movlw	1	; select bank2/3
  5669  00EF  0087               	movwf	7
  5670  00F0  3000               	movlw	0
  5671  00F1  3FC0               	movwi [0]fsr1
  5672  00F2  3FC1               	movwi [1]fsr1
  5673                           
  5674                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  5675  00F3  086B               	movf	_Sw,w
  5676  00F4  0086               	movwf	6
  5677  00F5  3001               	movlw	1	; select bank2/3
  5678  00F6  0087               	movwf	7
  5679  00F7  1581               	bsf	1,3
  5680                           
  5681                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  5682  00F8  082E               	movf	setSw_Main@sw,w
  5683  00F9  3191  2125         	fcall	_setDimmerLights_DimmingOn
  5684                           
  5685                           ;Switch_B1.c: 162: }
  5686                           ;Switch_B1.c: 163: } else {
  5687  00FB  0008               	return
  5688  00FC                     l10442:	
  5689                           
  5690                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  5691  00FC  0020               	movlb	0	; select bank0
  5692  00FD  086B               	movf	_Sw,w
  5693  00FE  0086               	movwf	6
  5694  00FF  3001               	movlw	1	; select bank2/3
  5695  0100  0087               	movwf	7
  5696  0101  1A01               	btfsc	1,4
  5697  0102  293A               	goto	l10456
  5698                           
  5699                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  5700  0103  086B               	movf	_Sw,w
  5701  0104  3E05               	addlw	5
  5702  0105  0086               	movwf	6
  5703  0106  3001               	movlw	1	; select bank2/3
  5704  0107  0087               	movwf	7
  5705  0108  3001               	movlw	1
  5706  0109  0781               	addwf	1,f
  5707  010A  3141               	addfsr 1,1
  5708  010B  1803               	skipnc
  5709  010C  0A81               	incf	1,f
  5710                           
  5711                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  5712  010D  086B               	movf	_Sw,w
  5713  010E  3E05               	addlw	5
  5714  010F  0086               	movwf	6
  5715  0110  3001               	movlw	1	; select bank2/3
  5716  0111  0087               	movwf	7
  5717  0112  3F40               	moviw [0]fsr1
  5718  0113  00AC               	movwf	??_setSw_Main
  5719  0114  3F41               	moviw [1]fsr1
  5720  0115  00AD               	movwf	??_setSw_Main+1
  5721  0116  3000               	movlw	0
  5722  0117  022D               	subwf	??_setSw_Main+1,w
  5723  0118  304B               	movlw	75
  5724  0119  1903               	skipnz
  5725  011A  022C               	subwf	??_setSw_Main,w
  5726  011B  1C03               	skipc
  5727  011C  0008               	return
  5728                           
  5729                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  5730  011D  086B               	movf	_Sw,w
  5731  011E  3E05               	addlw	5
  5732  011F  0086               	movwf	6
  5733  0120  3001               	movlw	1	; select bank2/3
  5734  0121  0087               	movwf	7
  5735  0122  3000               	movlw	0
  5736  0123  3FC0               	movwi [0]fsr1
  5737  0124  3FC1               	movwi [1]fsr1
  5738                           
  5739                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  5740  0125  086B               	movf	_Sw,w
  5741  0126  0086               	movwf	6
  5742  0127  3001               	movlw	1	; select bank2/3
  5743  0128  0087               	movwf	7
  5744  0129  1601               	bsf	1,4
  5745                           
  5746                           ;Switch_B1.c: 172: setRF_Learn(1);
  5747  012A  3001               	movlw	1
  5748  012B  319D  2508  3180   	fcall	_setRF_Learn
  5749                           
  5750                           ;Switch_B1.c: 173: if (myMain.First == 1) {
  5751  012E  0021               	movlb	1	; select bank1
  5752  012F  1EBF               	btfss	_myMain^(0+128),5
  5753  0130  0008               	return
  5754                           
  5755                           ;Switch_B1.c: 174: setBuz(2, 100);
  5756  0131  3064               	movlw	100
  5757  0132  0020               	movlb	0	; select bank0
  5758  0133  00A4               	movwf	setBuz@time
  5759  0134  3000               	movlw	0
  5760  0135  00A5               	movwf	setBuz@time+1
  5761  0136  3002               	movlw	2
  5762  0137  3195  25F3         	fcall	_setBuz
  5763                           
  5764                           ;Switch_B1.c: 175: }
  5765                           ;Switch_B1.c: 179: }
  5766                           ;Switch_B1.c: 180: } else {
  5767  0139  0008               	return
  5768  013A                     l10456:	
  5769                           
  5770                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  5771  013A  0020               	movlb	0	; select bank0
  5772  013B  086B               	movf	_Sw,w
  5773  013C  0086               	movwf	6
  5774  013D  3001               	movlw	1	; select bank2/3
  5775  013E  0087               	movwf	7
  5776  013F  1A81               	btfsc	1,5
  5777  0140  0008               	return
  5778                           
  5779                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  5780  0141  086B               	movf	_Sw,w
  5781  0142  3E07               	addlw	7
  5782  0143  0086               	movwf	6
  5783  0144  3001               	movlw	1	; select bank2/3
  5784  0145  0087               	movwf	7
  5785  0146  3001               	movlw	1
  5786  0147  0781               	addwf	1,f
  5787  0148  3141               	addfsr 1,1
  5788  0149  1803               	skipnc
  5789  014A  0A81               	incf	1,f
  5790                           
  5791                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  5792  014B  086B               	movf	_Sw,w
  5793  014C  3E07               	addlw	7
  5794  014D  0086               	movwf	6
  5795  014E  3001               	movlw	1	; select bank2/3
  5796  014F  0087               	movwf	7
  5797  0150  3F40               	moviw [0]fsr1
  5798  0151  00AC               	movwf	??_setSw_Main
  5799  0152  3F41               	moviw [1]fsr1
  5800  0153  00AD               	movwf	??_setSw_Main+1
  5801  0154  3000               	movlw	0
  5802  0155  022D               	subwf	??_setSw_Main+1,w
  5803  0156  3096               	movlw	150
  5804  0157  1903               	skipnz
  5805  0158  022C               	subwf	??_setSw_Main,w
  5806  0159  1C03               	skipc
  5807  015A  0008               	return
  5808                           
  5809                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  5810  015B  086B               	movf	_Sw,w
  5811  015C  3E07               	addlw	7
  5812  015D  0086               	movwf	6
  5813  015E  3001               	movlw	1	; select bank2/3
  5814  015F  0087               	movwf	7
  5815  0160  3000               	movlw	0
  5816  0161  3FC0               	movwi [0]fsr1
  5817  0162  3FC1               	movwi [1]fsr1
  5818                           
  5819                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  5820  0163  086B               	movf	_Sw,w
  5821  0164  0086               	movwf	6
  5822  0165  3001               	movlw	1	; select bank2/3
  5823  0166  0087               	movwf	7
  5824  0167  1681               	bsf	1,5
  5825                           
  5826                           ;Switch_B1.c: 188: setRF_Learn(0);
  5827  0168  3000               	movlw	0
  5828  0169  319D  2508         	fcall	_setRF_Learn
  5829                           
  5830                           ;Switch_B1.c: 191: }
  5831                           ;Switch_B1.c: 192: }
  5832                           ;Switch_B1.c: 193: }
  5833                           ;Switch_B1.c: 195: }
  5834                           ;Switch_B1.c: 196: }
  5835                           ;Switch_B1.c: 197: } else {
  5836  016B  0008               	return
  5837  016C                     l10466:	
  5838                           
  5839                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  5840  016C  0020               	movlb	0	; select bank0
  5841  016D  086B               	movf	_Sw,w
  5842  016E  0086               	movwf	6
  5843  016F  3001               	movlw	1	; select bank2/3
  5844  0170  0087               	movwf	7
  5845  0171  1D01               	btfss	1,2
  5846  0172  0008               	return
  5847                           
  5848                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  5849  0173  3001               	movlw	1
  5850  0174  00AC               	movwf	??_setSw_Main
  5851  0175  086B               	movf	_Sw,w
  5852  0176  3E02               	addlw	2
  5853  0177  0086               	movwf	6
  5854  0178  3001               	movlw	1	; select bank2/3
  5855  0179  0087               	movwf	7
  5856  017A  082C               	movf	??_setSw_Main,w
  5857  017B  0781               	addwf	1,f
  5858                           
  5859                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  5860  017C  086B               	movf	_Sw,w
  5861  017D  3E02               	addlw	2
  5862  017E  0086               	movwf	6
  5863  017F  3001               	movlw	1	; select bank2/3
  5864  0180  0087               	movwf	7
  5865  0181  3005               	movlw	5
  5866  0182  0201               	subwf	1,w
  5867  0183  1C03               	skipc
  5868  0184  0008               	return
  5869                           
  5870                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  5871  0185  086B               	movf	_Sw,w
  5872  0186  3E02               	addlw	2
  5873  0187  0086               	movwf	6
  5874  0188  3001               	movlw	1	; select bank2/3
  5875  0189  0087               	movwf	7
  5876  018A  0181               	clrf	1
  5877                           
  5878                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  5879  018B  086B               	movf	_Sw,w
  5880  018C  0086               	movwf	6
  5881  018D  3001               	movlw	1	; select bank2/3
  5882  018E  0087               	movwf	7
  5883  018F  1101               	bcf	1,2
  5884                           
  5885                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  5886  0190  086B               	movf	_Sw,w
  5887  0191  3E03               	addlw	3
  5888  0192  0086               	movwf	6
  5889  0193  3001               	movlw	1	; select bank2/3
  5890  0194  0087               	movwf	7
  5891  0195  3000               	movlw	0
  5892  0196  3FC0               	movwi [0]fsr1
  5893  0197  3FC1               	movwi [1]fsr1
  5894                           
  5895                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  5896  0198  086B               	movf	_Sw,w
  5897  0199  0086               	movwf	6
  5898  019A  3001               	movlw	1	; select bank2/3
  5899  019B  0087               	movwf	7
  5900  019C  1181               	bcf	1,3
  5901                           
  5902                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  5903  019D  086B               	movf	_Sw,w
  5904  019E  0086               	movwf	6
  5905  019F  3001               	movlw	1	; select bank2/3
  5906  01A0  0087               	movwf	7
  5907  01A1  1201               	bcf	1,4
  5908                           
  5909                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  5910  01A2  086B               	movf	_Sw,w
  5911  01A3  0086               	movwf	6
  5912  01A4  3001               	movlw	1	; select bank2/3
  5913  01A5  0087               	movwf	7
  5914  01A6  1281               	bcf	1,5
  5915                           
  5916                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  5917  01A7  086B               	movf	_Sw,w
  5918  01A8  3E05               	addlw	5
  5919  01A9  0086               	movwf	6
  5920  01AA  3001               	movlw	1	; select bank2/3
  5921  01AB  0087               	movwf	7
  5922  01AC  3000               	movlw	0
  5923  01AD  3FC0               	movwi [0]fsr1
  5924  01AE  3FC1               	movwi [1]fsr1
  5925                           
  5926                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  5927  01AF  086B               	movf	_Sw,w
  5928  01B0  3E07               	addlw	7
  5929  01B1  0086               	movwf	6
  5930  01B2  3001               	movlw	1	; select bank2/3
  5931  01B3  0087               	movwf	7
  5932  01B4  3000               	movlw	0
  5933  01B5  3FC0               	movwi [0]fsr1
  5934  01B6  3FC1               	movwi [1]fsr1
  5935                           
  5936                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  5937  01B7  082E               	movf	setSw_Main@sw,w
  5938  01B8  3192  2243  3180   	fcall	_setDimmerLights_SwOff
  5939                           
  5940                           ;Switch_B1.c: 220: setRF_Learn(0);
  5941  01BB  3000               	movlw	0
  5942  01BC  319D  2508         	fcall	_setRF_Learn
  5943                           
  5944                           ;Switch_B1.c: 222: }
  5945                           ;Switch_B1.c: 223: }
  5946                           ;Switch_B1.c: 224: }
  5947                           ;Switch_B1.c: 225: } else {
  5948  01BE  0008               	return
  5949  01BF                     l2966:	
  5950                           
  5951                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5952  01BF  0021               	movlb	1	; select bank1
  5953  01C0  1C3F               	btfss	_myMain^(0+128),0
  5954  01C1  0008               	return
  5955                           
  5956                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5957  01C2  0020               	movlb	0	; select bank0
  5958  01C3  086B               	movf	_Sw,w
  5959  01C4  0086               	movwf	6
  5960  01C5  3001               	movlw	1	; select bank2/3
  5961  01C6  0087               	movwf	7
  5962  01C7  1401               	bsf	1,0
  5963  01C8  0008               	return
  5964  01C9                     __end_of_setSw_Main:	
  5965                           
  5966                           	psect	text14
  5967  1D08                     __ptext14:	
  5968 ;; *************** function _setRF_Learn *****************
  5969 ;; Defined at:
  5970 ;;		line 33 in file "../src/RF_Control_B1.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  command         1    wreg     unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  command         1    3[COMMON] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    3
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_setSw_Main
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _setRF_Learn
  6000  1D08                     _setRF_Learn:	
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in _setRF_Learn: [wreg+status,2+status,0]
  6004                           ;setRF_Learn@command stored from wreg
  6005  1D08  00F3               	movwf	setRF_Learn@command
  6006                           
  6007                           ;RF_Control_B1.c: 34: RF1.Learn = command == 1 ? 1 : 0;
  6008  1D09  0873               	movf	setRF_Learn@command,w
  6009  1D0A  3A01               	xorlw	1
  6010  1D0B  3000               	movlw	0
  6011  1D0C  1903               	skipnz
  6012  1D0D  3001               	movlw	1
  6013  1D0E  00F2               	movwf	??_setRF_Learn
  6014  1D0F  0EF2               	swapf	??_setRF_Learn,f
  6015  1D10  0DF2               	rlf	??_setRF_Learn,f
  6016  1D11  0DF2               	rlf	??_setRF_Learn,f
  6017  1D12  0021               	movlb	1	; select bank1
  6018  1D13  0830               	movf	_RF1^(0+128),w
  6019  1D14  0672               	xorwf	??_setRF_Learn,w
  6020  1D15  39BF               	andlw	-65
  6021  1D16  0672               	xorwf	??_setRF_Learn,w
  6022  1D17  00B0               	movwf	_RF1^(0+128)
  6023  1D18  0008               	return
  6024  1D19                     __end_of_setRF_Learn:	
  6025                           
  6026                           	psect	text15
  6027  1125                     __ptext15:	
  6028 ;; *************** function _setDimmerLights_DimmingOn *****************
  6029 ;; Defined at:
  6030 ;;		line 818 in file "../src/Dimmer_B1.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  sw              1    wreg     unsigned char 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  sw              1    4[COMMON] unsigned char 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;		None               void
  6037 ;; Registers used:
  6038 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;Total ram usage:        1 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    4
  6051 ;; This function calls:
  6052 ;;		_DimmerLights_SelectPointer
  6053 ;; This function is called by:
  6054 ;;		_setSw_Main
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function _setDimmerLights_DimmingOn
  6060  1125                     _setDimmerLights_DimmingOn:	
  6061                           
  6062                           ;incstack = 0
  6063                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6064                           ;setDimmerLights_DimmingOn@sw stored from wreg
  6065  1125  00F4               	movwf	setDimmerLights_DimmingOn@sw
  6066                           
  6067                           ;Dimmer_B1.c: 824: DimmerLights_SelectPointer(sw);
  6068  1126  0874               	movf	setDimmerLights_DimmingOn@sw,w
  6069  1127  319F  2738  3191   	fcall	_DimmerLights_SelectPointer
  6070                           
  6071                           ;Dimmer_B1.c: 825: if (DimmerLights->Trigger == 0) {
  6072  112A  0020               	movlb	0	; select bank0
  6073  112B  0869               	movf	_DimmerLights,w
  6074  112C  0086               	movwf	6
  6075  112D  3001               	movlw	1	; select bank2/3
  6076  112E  0087               	movwf	7
  6077  112F  1881               	btfsc	1,1
  6078  1130  0008               	return
  6079                           
  6080                           ;Dimmer_B1.c: 826: if (DimmerLights->SwFlag == 1) {
  6081  1131  0869               	movf	_DimmerLights,w
  6082  1132  0086               	movwf	6
  6083  1133  3001               	movlw	1	; select bank2/3
  6084  1134  0087               	movwf	7
  6085  1135  1C01               	btfss	1,0
  6086  1136  0008               	return
  6087                           
  6088                           ;Dimmer_B1.c: 827: DimmerLights->Status = 1;
  6089  1137  0A69               	incf	_DimmerLights,w
  6090  1138  0086               	movwf	6
  6091  1139  3001               	movlw	1	; select bank2/3
  6092  113A  0087               	movwf	7
  6093  113B  1401               	bsf	1,0
  6094                           
  6095                           ;Dimmer_B1.c: 829: DimmerLights->DimmingSwFlag = 1;
  6096  113C  0869               	movf	_DimmerLights,w
  6097  113D  0086               	movwf	6
  6098  113E  3001               	movlw	1	; select bank2/3
  6099  113F  0087               	movwf	7
  6100  1140  1581               	bsf	1,3
  6101                           
  6102                           ;Dimmer_B1.c: 830: DimmerLights->DimmingTrigger = 1;
  6103  1141  0869               	movf	_DimmerLights,w
  6104  1142  0086               	movwf	6
  6105  1143  3001               	movlw	1	; select bank2/3
  6106  1144  0087               	movwf	7
  6107  1145  1601               	bsf	1,4
  6108                           
  6109                           ;Dimmer_B1.c: 831: DimmerLights->DimmingSwitch = 1;
  6110  1146  0869               	movf	_DimmerLights,w
  6111  1147  0086               	movwf	6
  6112  1148  3001               	movlw	1	; select bank2/3
  6113  1149  0087               	movwf	7
  6114  114A  1681               	bsf	1,5
  6115  114B  0008               	return
  6116  114C                     __end_of_setDimmerLights_DimmingOn:	
  6117                           
  6118                           	psect	text16
  6119  1F9B                     __ptext16:	
  6120 ;; *************** function _getSw_KeyStatus *****************
  6121 ;; Defined at:
  6122 ;;		line 238 in file "../src/Switch_B1.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  sw              1    wreg     unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  sw              1    3[COMMON] unsigned char 
  6127 ;;  status          1    2[COMMON] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      unsigned char 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;Total ram usage:        2 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    3
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_setSw_Main
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _getSw_KeyStatus
  6153  1F9B                     _getSw_KeyStatus:	
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  6157                           ;getSw_KeyStatus@sw stored from wreg
  6158  1F9B  00F3               	movwf	getSw_KeyStatus@sw
  6159                           
  6160                           ;Switch_B1.c: 239: char status = 0;
  6161  1F9C  01F2               	clrf	getSw_KeyStatus@status
  6162                           
  6163                           ;Switch_B1.c: 241: if (sw == 1) {
  6164  1F9D  0873               	movf	getSw_KeyStatus@sw,w
  6165  1F9E  3A01               	xorlw	1
  6166  1F9F  1D03               	skipz
  6167  1FA0  2FA7               	goto	l7996
  6168                           
  6169                           ;Switch_B1.c: 242: status = (RA6 == 1) ? 1 : 0;
  6170  1FA1  3000               	movlw	0
  6171  1FA2  0020               	movlb	0	; select bank0
  6172  1FA3  1B0C               	btfsc	12,6	;volatile
  6173  1FA4  3001               	movlw	1
  6174  1FA5  00F2               	movwf	getSw_KeyStatus@status
  6175                           
  6176                           ;Switch_B1.c: 243: } else if (sw == 2) {
  6177  1FA6  2FBA               	goto	l8004
  6178  1FA7                     l7996:	
  6179  1FA7  0873               	movf	getSw_KeyStatus@sw,w
  6180  1FA8  3A02               	xorlw	2
  6181  1FA9  1D03               	skipz
  6182  1FAA  2FB1               	goto	l8000
  6183                           
  6184                           ;Switch_B1.c: 244: status = (RA4 == 1) ? 1 : 0;
  6185  1FAB  3000               	movlw	0
  6186  1FAC  0020               	movlb	0	; select bank0
  6187  1FAD  1A0C               	btfsc	12,4	;volatile
  6188  1FAE  3001               	movlw	1
  6189  1FAF  00F2               	movwf	getSw_KeyStatus@status
  6190                           
  6191                           ;Switch_B1.c: 245: } else if (sw == 3) {
  6192  1FB0  2FBA               	goto	l8004
  6193  1FB1                     l8000:	
  6194  1FB1  0873               	movf	getSw_KeyStatus@sw,w
  6195  1FB2  3A03               	xorlw	3
  6196  1FB3  1D03               	skipz
  6197  1FB4  2FBA               	goto	l8004
  6198                           
  6199                           ;Switch_B1.c: 246: status = (RA0 == 1) ? 1 : 0;
  6200  1FB5  3000               	movlw	0
  6201  1FB6  0020               	movlb	0	; select bank0
  6202  1FB7  180C               	btfsc	12,0	;volatile
  6203  1FB8  3001               	movlw	1
  6204  1FB9  00F2               	movwf	getSw_KeyStatus@status
  6205  1FBA                     l8004:	
  6206                           
  6207                           ;Switch_B1.c: 247: }
  6208                           ;Switch_B1.c: 283: return status;
  6209  1FBA  0872               	movf	getSw_KeyStatus@status,w
  6210  1FBB  0008               	return
  6211  1FBC                     __end_of_getSw_KeyStatus:	
  6212                           
  6213                           	psect	text17
  6214  1EF9                     __ptext17:	
  6215 ;; *************** function _SwPointSelect *****************
  6216 ;; Defined at:
  6217 ;;		line 25 in file "../src/Switch_B1.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  sw              1    wreg     unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  sw              1    3[COMMON] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;		None               void
  6224 ;; Registers used:
  6225 ;;		wreg
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;Total ram usage:        2 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    3
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_setSw_Main
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           
  6246                           ;psect for function _SwPointSelect
  6247  1EF9                     _SwPointSelect:	
  6248                           
  6249                           ;incstack = 0
  6250                           ; Regs used in _SwPointSelect: [wreg]
  6251                           ;SwPointSelect@sw stored from wreg
  6252  1EF9  00F3               	movwf	SwPointSelect@sw
  6253                           
  6254                           ;Switch_B1.c: 28: if (sw == 1) {
  6255  1EFA  0873               	movf	SwPointSelect@sw,w
  6256  1EFB  3A01               	xorlw	1
  6257  1EFC  1D03               	skipz
  6258  1EFD  2F04               	goto	l7982
  6259                           
  6260                           ;Switch_B1.c: 29: Sw = &Sw1;
  6261  1EFE  30B5               	movlw	_Sw1& (0+255)
  6262  1EFF  00F2               	movwf	??_SwPointSelect
  6263  1F00  0872               	movf	??_SwPointSelect,w
  6264  1F01  0020               	movlb	0	; select bank0
  6265  1F02  00EB               	movwf	_Sw
  6266                           
  6267                           ;Switch_B1.c: 30: }
  6268  1F03  0008               	return
  6269  1F04                     l7982:	
  6270                           
  6271                           ;Switch_B1.c: 33: else if (sw == 2) {
  6272  1F04  0873               	movf	SwPointSelect@sw,w
  6273  1F05  3A02               	xorlw	2
  6274  1F06  1D03               	skipz
  6275  1F07  2F0E               	goto	l7986
  6276                           
  6277                           ;Switch_B1.c: 34: Sw = &Sw2;
  6278  1F08  30BE               	movlw	_Sw2& (0+255)
  6279  1F09  00F2               	movwf	??_SwPointSelect
  6280  1F0A  0872               	movf	??_SwPointSelect,w
  6281  1F0B  0020               	movlb	0	; select bank0
  6282  1F0C  00EB               	movwf	_Sw
  6283                           
  6284                           ;Switch_B1.c: 35: }
  6285  1F0D  0008               	return
  6286  1F0E                     l7986:	
  6287                           
  6288                           ;Switch_B1.c: 38: else if (sw == 3) {
  6289  1F0E  0873               	movf	SwPointSelect@sw,w
  6290  1F0F  3A03               	xorlw	3
  6291  1F10  1D03               	skipz
  6292  1F11  0008               	return
  6293                           
  6294                           ;Switch_B1.c: 39: Sw = &Sw3;
  6295  1F12  30C7               	movlw	_Sw3& (0+255)
  6296  1F13  00F2               	movwf	??_SwPointSelect
  6297  1F14  0872               	movf	??_SwPointSelect,w
  6298  1F15  0020               	movlb	0	; select bank0
  6299  1F16  00EB               	movwf	_Sw
  6300  1F17  0008               	return
  6301  1F18                     __end_of_SwPointSelect:	
  6302                           
  6303                           	psect	text18
  6304  1DA9                     __ptext18:	
  6305 ;; *************** function _TouchPower *****************
  6306 ;; Defined at:
  6307 ;;		line 10 in file "../src/Switch_B1.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;		None               void
  6314 ;; Registers used:
  6315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    4
  6328 ;; This function calls:
  6329 ;;		_Timeout_Counter
  6330 ;;		_set_TimeoutCleared
  6331 ;; This function is called by:
  6332 ;;		_Switch_Main
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function _TouchPower
  6338  1DA9                     _TouchPower:	
  6339                           
  6340                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  6341                           
  6342                           ;incstack = 0
  6343                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6344  1DA9  0021               	movlb	1	; select bank1
  6345  1DAA  1C3F               	btfss	_myMain^(0+128),0
  6346  1DAB  0008               	return
  6347                           
  6348                           ;Switch_B1.c: 12: if (RC5 == 0) {
  6349  1DAC  0020               	movlb	0	; select bank0
  6350  1DAD  1A8E               	btfsc	14,5	;volatile
  6351  1DAE  0008               	return
  6352  1DAF  2DB5               	goto	l8578
  6353  1DB0                     l2942:	
  6354                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  6355                           
  6356                           
  6357                           ;Switch_B1.c: 14: RC5 = 1;
  6358  1DB0  0020               	movlb	0	; select bank0
  6359  1DB1  168E               	bsf	14,5	;volatile
  6360                           
  6361                           ;Switch_B1.c: 15: Timeout_Counter();
  6362  1DB2  319D  2594  319D   	fcall	_Timeout_Counter
  6363  1DB5                     l8578:	
  6364  1DB5  0020               	movlb	0	; select bank0
  6365  1DB6  1A8E               	btfsc	14,5	;volatile
  6366  1DB7  2DBB               	goto	l8582
  6367  1DB8  0021               	movlb	1	; select bank1
  6368  1DB9  1D49               	btfss	(_myMain^(0+128)+10),2
  6369  1DBA  2DB0               	goto	l2942
  6370  1DBB                     l8582:	
  6371                           
  6372                           ;Switch_B1.c: 16: }
  6373                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6374  1DBB  319B  231F         	fcall	_set_TimeoutCleared
  6375  1DBD  0008               	return
  6376  1DBE                     __end_of_TouchPower:	
  6377                           
  6378                           	psect	text19
  6379  1B1F                     __ptext19:	
  6380 ;; *************** function _set_TimeoutCleared *****************
  6381 ;; Defined at:
  6382 ;;		line 287 in file "../src/Main_B1.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;		None
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;		None               void
  6389 ;; Registers used:
  6390 ;;		status,2
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;Total ram usage:        0 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    3
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_getAD
  6407 ;;		_TouchPower
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _set_TimeoutCleared
  6413  1B1F                     _set_TimeoutCleared:	
  6414                           
  6415                           ;Main_B1.c: 288: myMain.Timeout = 0;
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _set_TimeoutCleared: [status,2]
  6419  1B1F  0021               	movlb	1	; select bank1
  6420  1B20  1149               	bcf	(_myMain^(0+128)+10),2
  6421                           
  6422                           ;Main_B1.c: 289: myMain.Timeout_Counter = 0;
  6423  1B21  01CA               	clrf	(_myMain^(0+128)+11)
  6424  1B22  01CB               	clrf	((_myMain+1)^(0+128)+11)
  6425  1B23  0008               	return
  6426  1B24                     __end_of_set_TimeoutCleared:	
  6427                           
  6428                           	psect	text20
  6429  1D94                     __ptext20:	
  6430 ;; *************** function _Timeout_Counter *****************
  6431 ;; Defined at:
  6432 ;;		line 278 in file "../src/Main_B1.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;		None               void
  6439 ;; Registers used:
  6440 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;Total ram usage:        0 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    3
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_getAD
  6457 ;;		_TouchPower
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function _Timeout_Counter
  6463  1D94                     _Timeout_Counter:	
  6464                           
  6465                           ;Main_B1.c: 279: myMain.Timeout_Counter++;
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6469  1D94  3001               	movlw	1
  6470  1D95  0021               	movlb	1	; select bank1
  6471  1D96  07CA               	addwf	(_myMain^(0+128)+11),f
  6472  1D97  3000               	movlw	0
  6473  1D98  3DCB               	addwfc	((_myMain+1)^(0+128)+11),f
  6474                           
  6475                           ;Main_B1.c: 280: if (myMain.Timeout_Counter == 25000) {
  6476  1D99  300B               	movlw	11
  6477  1D9A  3EBF               	addlw	_myMain& (0+255)
  6478  1D9B  0086               	movwf	6
  6479  1D9C  0187               	clrf	7
  6480  1D9D  3F40               	moviw [0]fsr1
  6481  1D9E  3AA8               	xorlw	168
  6482  1D9F  1D03               	skipz
  6483  1DA0  2DA3               	goto	u7375
  6484  1DA1  3F41               	moviw [1]fsr1
  6485  1DA2  3A61               	xorlw	97
  6486  1DA3                     u7375:	
  6487  1DA3  1D03               	skipz
  6488  1DA4  0008               	return
  6489                           
  6490                           ;Main_B1.c: 281: myMain.Timeout_Counter = 0;
  6491  1DA5  01CA               	clrf	(_myMain^(0+128)+11)
  6492  1DA6  01CB               	clrf	((_myMain+1)^(0+128)+11)
  6493                           
  6494                           ;Main_B1.c: 282: myMain.Timeout = 1;
  6495  1DA7  1549               	bsf	(_myMain^(0+128)+10),2
  6496  1DA8  0008               	return
  6497  1DA9                     __end_of_Timeout_Counter:	
  6498                           
  6499                           	psect	text21
  6500  07F2                     __ptext21:	
  6501 ;; *************** function _Switch_Initialization *****************
  6502 ;; Defined at:
  6503 ;;		line 46 in file "../src/Switch_B1.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    6
  6524 ;; This function calls:
  6525 ;;		_setSw_Initialization
  6526 ;; This function is called by:
  6527 ;;		_main
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function _Switch_Initialization
  6533  07F2                     _Switch_Initialization:	
  6534                           
  6535                           ;Switch_B1.c: 52: setSw_Initialization(1);
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6539  07F2  3001               	movlw	1
  6540  07F3  319B  233E  3187   	fcall	_setSw_Initialization
  6541                           
  6542                           ;Switch_B1.c: 56: setSw_Initialization(2);
  6543  07F6  3002               	movlw	2
  6544  07F7  319B  233E  3187   	fcall	_setSw_Initialization
  6545                           
  6546                           ;Switch_B1.c: 60: setSw_Initialization(3);
  6547  07FA  3003               	movlw	3
  6548  07FB  319B  233E         	fcall	_setSw_Initialization
  6549  07FD  0008               	return
  6550  07FE                     __end_of_Switch_Initialization:	
  6551                           
  6552                           	psect	text22
  6553  1B3E                     __ptext22:	
  6554 ;; *************** function _setSw_Initialization *****************
  6555 ;; Defined at:
  6556 ;;		line 66 in file "../src/Switch_B1.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  sw              1    wreg     unsigned char 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  sw              1    6[COMMON] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;Total ram usage:        1 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    5
  6577 ;; This function calls:
  6578 ;;		_setLED
  6579 ;; This function is called by:
  6580 ;;		_Switch_Initialization
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function _setSw_Initialization
  6586  1B3E                     _setSw_Initialization:	
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6590                           ;setSw_Initialization@sw stored from wreg
  6591  1B3E  00F6               	movwf	setSw_Initialization@sw
  6592                           
  6593                           ;Switch_B1.c: 68: setLED(sw, 1);
  6594  1B3F  01F4               	clrf	setLED@command
  6595  1B40  0AF4               	incf	setLED@command,f
  6596  1B41  0876               	movf	setSw_Initialization@sw,w
  6597  1B42  318A  22FB         	fcall	_setLED
  6598  1B44  0008               	return
  6599  1B45                     __end_of_setSw_Initialization:	
  6600                           
  6601                           	psect	text23
  6602  1AFD                     __ptext23:	
  6603 ;; *************** function _RF_Main *****************
  6604 ;; Defined at:
  6605 ;;		line 26 in file "../src/RF_Control_B1.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;		None               void
  6612 ;; Registers used:
  6613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:   10
  6626 ;; This function calls:
  6627 ;;		_setRF_Main
  6628 ;; This function is called by:
  6629 ;;		_main
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           
  6634                           ;psect for function _RF_Main
  6635  1AFD                     _RF_Main:	
  6636                           
  6637                           ;RF_Control_B1.c: 28: setRF_Main();
  6638                           
  6639                           ;incstack = 0
  6640                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6641  1AFD  3185  253A         	fcall	_setRF_Main
  6642  1AFF  0008               	return
  6643  1B00                     __end_of_RF_Main:	
  6644                           
  6645                           	psect	text24
  6646  053A                     __ptext24:	
  6647 ;; *************** function _setRF_Main *****************
  6648 ;; Defined at:
  6649 ;;		line 53 in file "../src/RF_Control_B1.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  error           1   70[BANK0 ] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;Total ram usage:        2 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    9
  6670 ;; This function calls:
  6671 ;;		_CC2500_PowerOnInitial
  6672 ;;		_CC2500_RxData
  6673 ;;		_CC2500_TxData
  6674 ;;		_CC2500_WriteCommand
  6675 ;;		_RF_RxDisable
  6676 ;;		___lwdiv
  6677 ;;		_getBuz_GO
  6678 ;;		_getRF_KeyStatus
  6679 ;;		_getRxData
  6680 ;;		_setData
  6681 ;; This function is called by:
  6682 ;;		_RF_Main
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           
  6687                           ;psect for function _setRF_Main
  6688  053A                     _setRF_Main:	
  6689                           
  6690                           ;RF_Control_B1.c: 54: char error = 0;
  6691                           
  6692                           ;incstack = 0
  6693                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6694  053A  0020               	movlb	0	; select bank0
  6695  053B  01E6               	clrf	setRF_Main@error
  6696                           
  6697                           ;RF_Control_B1.c: 55: if (RF1.Enable == 1) {
  6698  053C  0021               	movlb	1	; select bank1
  6699  053D  1C30               	btfss	_RF1^(0+128),0
  6700  053E  2DF5               	goto	l2495
  6701                           
  6702                           ;RF_Control_B1.c: 56: if (getBuz_GO() == 0) {
  6703  053F  319C  24C7  3185   	fcall	_getBuz_GO
  6704  0542  0873               	movf	?_getBuz_GO+1,w
  6705  0543  0472               	iorwf	?_getBuz_GO,w
  6706  0544  1D03               	skipz
  6707  0545  2DDA               	goto	l10386
  6708                           
  6709                           ;RF_Control_B1.c: 59: RF1.Key = getRF_KeyStatus() == 1 ? 1 : 0;
  6710  0546  319C  244A  3185   	fcall	_getRF_KeyStatus
  6711  0549  3A01               	xorlw	1
  6712  054A  3000               	movlw	0
  6713  054B  1903               	skipnz
  6714  054C  3001               	movlw	1
  6715  054D  0020               	movlb	0	; select bank0
  6716  054E  00E5               	movwf	??_setRF_Main
  6717  054F  0CE5               	rrf	??_setRF_Main,f
  6718  0550  0CE5               	rrf	??_setRF_Main,f
  6719  0551  0021               	movlb	1	; select bank1
  6720  0552  0830               	movf	_RF1^(0+128),w
  6721  0553  0020               	movlb	0	; select bank0
  6722  0554  0665               	xorwf	??_setRF_Main,w
  6723  0555  397F               	andlw	-129
  6724  0556  0665               	xorwf	??_setRF_Main,w
  6725  0557  0021               	movlb	1	; select bank1
  6726  0558  00B0               	movwf	_RF1^(0+128)
  6727                           
  6728                           ;RF_Control_B1.c: 64: if (RF1.Key == 0 || RF1.Learn == 1) {
  6729  0559  1FB0               	btfss	_RF1^(0+128),7
  6730  055A  2D5D               	goto	l2499
  6731  055B  1F30               	btfss	_RF1^(0+128),6
  6732  055C  2DDA               	goto	l10386
  6733  055D                     l2499:	
  6734                           
  6735                           ;RF_Control_B1.c: 66: if (RF1.TransceiveGO == 1) {
  6736  055D  1D30               	btfss	_RF1^(0+128),2
  6737  055E  2DA1               	goto	l2500
  6738                           
  6739                           ;RF_Control_B1.c: 67: if (RF1.Learn == 0) {
  6740  055F  1B30               	btfsc	_RF1^(0+128),6
  6741  0560  2D9C               	goto	l10358
  6742                           
  6743                           ;RF_Control_B1.c: 68: RF1.Count++;
  6744  0561  3001               	movlw	1
  6745  0562  07B3               	addwf	(_RF1^(0+128)+3),f
  6746  0563  3000               	movlw	0
  6747  0564  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  6748                           
  6749                           ;RF_Control_B1.c: 69: if (RF1.Count >= (RF1.RunTime / 20)) {
  6750  0565  3014               	movlw	20
  6751  0566  00F2               	movwf	___lwdiv@divisor
  6752  0567  3000               	movlw	0
  6753  0568  00F3               	movwf	___lwdiv@divisor+1
  6754  0569  0839               	movf	((_RF1+1)^(0+128)+8),w
  6755  056A  01F5               	clrf	___lwdiv@dividend+1
  6756  056B  07F5               	addwf	___lwdiv@dividend+1,f
  6757  056C  0838               	movf	(_RF1^(0+128)+8),w
  6758  056D  01F4               	clrf	___lwdiv@dividend
  6759  056E  07F4               	addwf	___lwdiv@dividend,f
  6760  056F  3191  21A0  3185   	fcall	___lwdiv
  6761  0572  0873               	movf	?___lwdiv+1,w
  6762  0573  0021               	movlb	1	; select bank1
  6763  0574  0234               	subwf	((_RF1+1)^(0+128)+3),w
  6764  0575  1D03               	skipz
  6765  0576  2D79               	goto	u11485
  6766  0577  0872               	movf	?___lwdiv,w
  6767  0578  0233               	subwf	(_RF1^(0+128)+3),w
  6768  0579                     u11485:	
  6769  0579  1C03               	skipc
  6770  057A  2DDA               	goto	l10386
  6771                           
  6772                           ;RF_Control_B1.c: 70: RF1.Count = (RF1.RunTime / 20);
  6773  057B  3014               	movlw	20
  6774  057C  00F2               	movwf	___lwdiv@divisor
  6775  057D  3000               	movlw	0
  6776  057E  00F3               	movwf	___lwdiv@divisor+1
  6777  057F  0839               	movf	((_RF1+1)^(0+128)+8),w
  6778  0580  01F5               	clrf	___lwdiv@dividend+1
  6779  0581  07F5               	addwf	___lwdiv@dividend+1,f
  6780  0582  0838               	movf	(_RF1^(0+128)+8),w
  6781  0583  01F4               	clrf	___lwdiv@dividend
  6782  0584  07F4               	addwf	___lwdiv@dividend,f
  6783  0585  3191  21A0  3185   	fcall	___lwdiv
  6784  0588  0873               	movf	?___lwdiv+1,w
  6785  0589  0021               	movlb	1	; select bank1
  6786  058A  01B4               	clrf	((_RF1+1)^(0+128)+3)
  6787  058B  07B4               	addwf	((_RF1+1)^(0+128)+3),f
  6788  058C  0872               	movf	?___lwdiv,w
  6789  058D  01B3               	clrf	(_RF1^(0+128)+3)
  6790  058E  07B3               	addwf	(_RF1^(0+128)+3),f
  6791                           
  6792                           ;RF_Control_B1.c: 72: RF1.TransceiveGO = 0;
  6793  058F  1130               	bcf	_RF1^(0+128),2
  6794                           
  6795                           ;RF_Control_B1.c: 73: RF1.CorrectionCounter = 0;
  6796  0590  01BB               	clrf	(_RF1^(0+128)+11)
  6797  0591  01BC               	clrf	((_RF1+1)^(0+128)+11)
  6798                           
  6799                           ;RF_Control_B1.c: 74: RF_RxDisable();
  6800  0592  319B  2345  3185   	fcall	_RF_RxDisable
  6801                           
  6802                           ;RF_Control_B1.c: 75: setData();
  6803  0595  3195  2552  3185   	fcall	_setData
  6804                           
  6805                           ;RF_Control_B1.c: 76: CC2500_TxData();
  6806  0598  318A  222D  3185   	fcall	_CC2500_TxData
  6807                           
  6808                           ;RF_Control_B1.c: 78: }
  6809                           ;RF_Control_B1.c: 79: } else {
  6810  059B  2DDA               	goto	l10386
  6811  059C                     l10358:	
  6812                           
  6813                           ;RF_Control_B1.c: 80: RF1.Count = 0;
  6814  059C  0021               	movlb	1	; select bank1
  6815  059D  01B3               	clrf	(_RF1^(0+128)+3)
  6816  059E  01B4               	clrf	((_RF1+1)^(0+128)+3)
  6817                           
  6818                           ;RF_Control_B1.c: 81: RF1.TransceiveGO = 0;
  6819  059F  1130               	bcf	_RF1^(0+128),2
  6820                           
  6821                           ;RF_Control_B1.c: 82: }
  6822                           ;RF_Control_B1.c: 83: } else {
  6823  05A0  2DDA               	goto	l10386
  6824  05A1                     l2500:	
  6825                           
  6826                           ;RF_Control_B1.c: 84: if (RF1.RxStatus == 1) {
  6827  05A1  1DB0               	btfss	_RF1^(0+128),3
  6828  05A2  2DB0               	goto	l10372
  6829                           
  6830                           ;RF_Control_B1.c: 86: CC2500_RxData();
  6831  05A3  3188  2035  3185   	fcall	_CC2500_RxData
  6832                           
  6833                           ;RF_Control_B1.c: 88: if (RF1.ReceiveGO == 1) {
  6834  05A6  0021               	movlb	1	; select bank1
  6835  05A7  1CB0               	btfss	_RF1^(0+128),1
  6836  05A8  2DDA               	goto	l10386
  6837                           
  6838                           ;RF_Control_B1.c: 89: RF1.ReceiveGO = 0;
  6839  05A9  10B0               	bcf	_RF1^(0+128),1
  6840                           
  6841                           ;RF_Control_B1.c: 90: RF1.CorrectionCounter = 0;
  6842  05AA  01BB               	clrf	(_RF1^(0+128)+11)
  6843  05AB  01BC               	clrf	((_RF1+1)^(0+128)+11)
  6844                           
  6845                           ;RF_Control_B1.c: 98: getRxData();
  6846  05AC  3189  2162  3185   	fcall	_getRxData
  6847                           
  6848                           ;RF_Control_B1.c: 101: }
  6849                           ;RF_Control_B1.c: 102: } else {
  6850  05AF  2DDA               	goto	l10386
  6851  05B0                     l10372:	
  6852                           
  6853                           ;RF_Control_B1.c: 103: RF1.Count++;
  6854  05B0  3001               	movlw	1
  6855  05B1  0021               	movlb	1	; select bank1
  6856  05B2  07B3               	addwf	(_RF1^(0+128)+3),f
  6857  05B3  3000               	movlw	0
  6858  05B4  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  6859                           
  6860                           ;RF_Control_B1.c: 104: if (RF1.Count >= (RF1.RunTime / 20)) {
  6861  05B5  3014               	movlw	20
  6862  05B6  00F2               	movwf	___lwdiv@divisor
  6863  05B7  3000               	movlw	0
  6864  05B8  00F3               	movwf	___lwdiv@divisor+1
  6865  05B9  0839               	movf	((_RF1+1)^(0+128)+8),w
  6866  05BA  01F5               	clrf	___lwdiv@dividend+1
  6867  05BB  07F5               	addwf	___lwdiv@dividend+1,f
  6868  05BC  0838               	movf	(_RF1^(0+128)+8),w
  6869  05BD  01F4               	clrf	___lwdiv@dividend
  6870  05BE  07F4               	addwf	___lwdiv@dividend,f
  6871  05BF  3191  21A0  3185   	fcall	___lwdiv
  6872  05C2  0873               	movf	?___lwdiv+1,w
  6873  05C3  0021               	movlb	1	; select bank1
  6874  05C4  0234               	subwf	((_RF1+1)^(0+128)+3),w
  6875  05C5  1D03               	skipz
  6876  05C6  2DC9               	goto	u11515
  6877  05C7  0872               	movf	?___lwdiv,w
  6878  05C8  0233               	subwf	(_RF1^(0+128)+3),w
  6879  05C9                     u11515:	
  6880  05C9  1C03               	skipc
  6881  05CA  2DDA               	goto	l10386
  6882                           
  6883                           ;RF_Control_B1.c: 105: RF1.Count = 0;
  6884  05CB  01B3               	clrf	(_RF1^(0+128)+3)
  6885  05CC  01B4               	clrf	((_RF1+1)^(0+128)+3)
  6886                           
  6887                           ;RF_Control_B1.c: 107: RF1.RxStatus = 1;
  6888  05CD  15B0               	bsf	_RF1^(0+128),3
  6889                           
  6890                           ;RF_Control_B1.c: 108: CC2500_WriteCommand(0x36);
  6891  05CE  3036               	movlw	54
  6892  05CF  319E  261C  3185   	fcall	_CC2500_WriteCommand
  6893                           
  6894                           ;RF_Control_B1.c: 109: CC2500_WriteCommand(0x3A);
  6895  05D2  303A               	movlw	58
  6896  05D3  319E  261C  3185   	fcall	_CC2500_WriteCommand
  6897                           
  6898                           ;RF_Control_B1.c: 110: CC2500_WriteCommand(0x34);
  6899  05D6  3034               	movlw	52
  6900  05D7  319E  261C  3185   	fcall	_CC2500_WriteCommand
  6901  05DA                     l10386:	
  6902                           
  6903                           ;RF_Control_B1.c: 112: }
  6904                           ;RF_Control_B1.c: 113: }
  6905                           ;RF_Control_B1.c: 114: }
  6906                           ;RF_Control_B1.c: 115: }
  6907                           ;RF_Control_B1.c: 116: }
  6908                           ;RF_Control_B1.c: 118: RF1.CorrectionCounter++;
  6909  05DA  3001               	movlw	1
  6910  05DB  0021               	movlb	1	; select bank1
  6911  05DC  07BB               	addwf	(_RF1^(0+128)+11),f
  6912  05DD  3000               	movlw	0
  6913  05DE  3DBC               	addwfc	((_RF1+1)^(0+128)+11),f
  6914                           
  6915                           ;RF_Control_B1.c: 119: if (RF1.CorrectionCounter > (60000 / 20)) {
  6916  05DF  300B               	movlw	11
  6917  05E0  023C               	subwf	((_RF1+1)^(0+128)+11),w
  6918  05E1  30B9               	movlw	185
  6919  05E2  1903               	skipnz
  6920  05E3  023B               	subwf	(_RF1^(0+128)+11),w
  6921  05E4  1C03               	skipc
  6922  05E5  2DEE               	goto	l10398
  6923                           
  6924                           ;RF_Control_B1.c: 120: RF1.CorrectionCounter = 0;
  6925  05E6  01BB               	clrf	(_RF1^(0+128)+11)
  6926  05E7  01BC               	clrf	((_RF1+1)^(0+128)+11)
  6927                           
  6928                           ;RF_Control_B1.c: 122: RF1.RxStatus = 0;
  6929  05E8  11B0               	bcf	_RF1^(0+128),3
  6930                           
  6931                           ;RF_Control_B1.c: 123: RF1.ReceiveGO = 0;
  6932  05E9  10B0               	bcf	_RF1^(0+128),1
  6933                           
  6934                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x36);
  6935  05EA  3036               	movlw	54
  6936  05EB  319E  261C  3185   	fcall	_CC2500_WriteCommand
  6937  05EE                     l10398:	
  6938                           
  6939                           ;RF_Control_B1.c: 126: }
  6940                           ;RF_Control_B1.c: 128: if (RF1.Timeout == 1) {
  6941  05EE  0021               	movlb	1	; select bank1
  6942  05EF  1F31               	btfss	(_RF1^(0+128)+1),6
  6943  05F0  0008               	return
  6944                           
  6945                           ;RF_Control_B1.c: 129: RF1.Timeout = 0;
  6946  05F1  1331               	bcf	(_RF1^(0+128)+1),6
  6947                           
  6948                           ;RF_Control_B1.c: 130: CC2500_PowerOnInitial();
  6949  05F2  319D  257F         	fcall	_CC2500_PowerOnInitial
  6950                           
  6951                           ;RF_Control_B1.c: 131: }
  6952                           ;RF_Control_B1.c: 133: } else {
  6953  05F4  0008               	return
  6954  05F5                     l2495:	
  6955                           
  6956                           ;RF_Control_B1.c: 134: if (myMain.PowerON == 1) {
  6957  05F5  1C3F               	btfss	_myMain^(0+128),0
  6958  05F6  0008               	return
  6959                           
  6960                           ;RF_Control_B1.c: 135: RF1.Enable = 1;
  6961  05F7  1430               	bsf	_RF1^(0+128),0
  6962  05F8  0008               	return
  6963  05F9                     __end_of_setRF_Main:	
  6964                           
  6965                           	psect	text25
  6966  1552                     __ptext25:	
  6967 ;; *************** function _setData *****************
  6968 ;; Defined at:
  6969 ;;		line 188 in file "../src/RF_Control_B1.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;		None               void
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, status,2
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:        1 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    3
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_setRF_Main
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _setData
  6999  1552                     _setData:	
  7000                           
  7001                           ;RF_Control_B1.c: 212: RF_Data[0] = 0x63;
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in _setData: [wreg+fsr1l+fsr1h+status,2]
  7005  1552  3063               	movlw	99
  7006  1553  00F2               	movwf	??_setData
  7007  1554  0872               	movf	??_setData,w
  7008  1555  0022               	movlb	2	; select bank2
  7009  1556  00A0               	movwf	_RF_Data^(0+256)
  7010                           
  7011                           ;RF_Control_B1.c: 213: RF_Data[1] = 0x02;
  7012  1557  3002               	movlw	2
  7013  1558  00F2               	movwf	??_setData
  7014  1559  0872               	movf	??_setData,w
  7015  155A  00A1               	movwf	(_RF_Data^(0+256)+1)
  7016                           
  7017                           ;RF_Control_B1.c: 215: RF_Data[2] = 0;
  7018  155B  01A2               	clrf	(_RF_Data^(0+256)+2)
  7019                           
  7020                           ;RF_Control_B1.c: 216: RF_Data[3] = 0;
  7021  155C  01A3               	clrf	(_RF_Data^(0+256)+3)
  7022                           
  7023                           ;RF_Control_B1.c: 217: RF_Data[4] = 0;
  7024  155D  01A4               	clrf	(_RF_Data^(0+256)+4)
  7025                           
  7026                           ;RF_Control_B1.c: 218: RF_Data[5] = 0;
  7027  155E  01A5               	clrf	(_RF_Data^(0+256)+5)
  7028                           
  7029                           ;RF_Control_B1.c: 219: RF_Data[6] = 0;
  7030  155F  01A6               	clrf	(_RF_Data^(0+256)+6)
  7031                           
  7032                           ;RF_Control_B1.c: 220: RF_Data[7] = 0;
  7033  1560  01A7               	clrf	(_RF_Data^(0+256)+7)
  7034                           
  7035                           ;RF_Control_B1.c: 221: RF_Data[8] = 0;
  7036  1561  01A8               	clrf	(_RF_Data^(0+256)+8)
  7037                           
  7038                           ;RF_Control_B1.c: 222: RF_Data[9] = product->Data[9];
  7039  1562  0020               	movlb	0	; select bank0
  7040  1563  086D               	movf	_product,w
  7041  1564  0086               	movwf	6
  7042  1565  3002               	movlw	2	; select bank4/5
  7043  1566  0087               	movwf	7
  7044  1567  3002               	movlw	2	; select bank4/5
  7045  1568  3F49               	moviw [9]fsr1
  7046  1569  0022               	movlb	2	; select bank2
  7047  156A  00A9               	movwf	(_RF_Data^(0+256)+9)
  7048                           
  7049                           ;RF_Control_B1.c: 223: RF_Data[10] = 0;
  7050  156B  01AA               	clrf	(_RF_Data^(0+256)+10)
  7051                           
  7052                           ;RF_Control_B1.c: 224: RF_Data[11] = product->Data[11];
  7053  156C  0020               	movlb	0	; select bank0
  7054  156D  086D               	movf	_product,w
  7055  156E  0086               	movwf	6
  7056  156F  3002               	movlw	2	; select bank4/5
  7057  1570  0087               	movwf	7
  7058  1571  3002               	movlw	2	; select bank4/5
  7059  1572  3F4B               	moviw [11]fsr1
  7060  1573  0022               	movlb	2	; select bank2
  7061  1574  00AB               	movwf	(_RF_Data^(0+256)+11)
  7062                           
  7063                           ;RF_Control_B1.c: 225: RF_Data[12] = product->Data[12];
  7064  1575  0020               	movlb	0	; select bank0
  7065  1576  086D               	movf	_product,w
  7066  1577  0086               	movwf	6
  7067  1578  3002               	movlw	2	; select bank4/5
  7068  1579  0087               	movwf	7
  7069  157A  3002               	movlw	2	; select bank4/5
  7070  157B  3F4C               	moviw [12]fsr1
  7071  157C  0022               	movlb	2	; select bank2
  7072  157D  00AC               	movwf	(_RF_Data^(0+256)+12)
  7073                           
  7074                           ;RF_Control_B1.c: 226: RF_Data[13] = product->Data[13];
  7075  157E  0020               	movlb	0	; select bank0
  7076  157F  086D               	movf	_product,w
  7077  1580  0086               	movwf	6
  7078  1581  3002               	movlw	2	; select bank4/5
  7079  1582  0087               	movwf	7
  7080  1583  3002               	movlw	2	; select bank4/5
  7081  1584  3F4D               	moviw [13]fsr1
  7082  1585  0022               	movlb	2	; select bank2
  7083  1586  00AD               	movwf	(_RF_Data^(0+256)+13)
  7084                           
  7085                           ;RF_Control_B1.c: 227: RF_Data[14] = product->Data[14];
  7086  1587  0020               	movlb	0	; select bank0
  7087  1588  086D               	movf	_product,w
  7088  1589  0086               	movwf	6
  7089  158A  3002               	movlw	2	; select bank4/5
  7090  158B  0087               	movwf	7
  7091  158C  3002               	movlw	2	; select bank4/5
  7092  158D  3F4E               	moviw [14]fsr1
  7093  158E  0022               	movlb	2	; select bank2
  7094  158F  00AE               	movwf	(_RF_Data^(0+256)+14)
  7095                           
  7096                           ;RF_Control_B1.c: 228: RF_Data[15] = product->Data[15];
  7097  1590  0020               	movlb	0	; select bank0
  7098  1591  086D               	movf	_product,w
  7099  1592  0086               	movwf	6
  7100  1593  3002               	movlw	2	; select bank4/5
  7101  1594  0087               	movwf	7
  7102  1595  3002               	movlw	2	; select bank4/5
  7103  1596  3F4F               	moviw [15]fsr1
  7104  1597  0022               	movlb	2	; select bank2
  7105  1598  00AF               	movwf	(_RF_Data^(0+256)+15)
  7106                           
  7107                           ;RF_Control_B1.c: 229: RF_Data[16] = 0;
  7108  1599  01B0               	clrf	(_RF_Data^(0+256)+16)
  7109                           
  7110                           ;RF_Control_B1.c: 230: RF_Data[17] = 0;
  7111  159A  01B1               	clrf	(_RF_Data^(0+256)+17)
  7112                           
  7113                           ;RF_Control_B1.c: 231: RF_Data[18] = 0;
  7114  159B  01B2               	clrf	(_RF_Data^(0+256)+18)
  7115                           
  7116                           ;RF_Control_B1.c: 232: RF_Data[19] = 0;
  7117  159C  01B3               	clrf	(_RF_Data^(0+256)+19)
  7118                           
  7119                           ;RF_Control_B1.c: 233: RF_Data[20] = 211;
  7120  159D  30D3               	movlw	211
  7121  159E  00F2               	movwf	??_setData
  7122  159F  0872               	movf	??_setData,w
  7123  15A0  00B4               	movwf	(_RF_Data^(0+256)+20)
  7124  15A1  0008               	return
  7125  15A2                     __end_of_setData:	
  7126                           
  7127                           	psect	text26
  7128  0962                     __ptext26:	
  7129 ;; *************** function _getRxData *****************
  7130 ;; Defined at:
  7131 ;;		line 256 in file "../src/RF_Control_B1.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  error           1   68[BANK0 ] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;		None               void
  7138 ;; Registers used:
  7139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;Total ram usage:        2 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    8
  7152 ;; This function calls:
  7153 ;;		_getMain_All_Error_Status
  7154 ;;		_setControl_Lights_Table
  7155 ;;		_setLog_Code
  7156 ;;		_setTxData
  7157 ;; This function is called by:
  7158 ;;		_setRF_Main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _getRxData
  7164  0962                     _getRxData:	
  7165                           
  7166                           ;RF_Control_B1.c: 258: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7170  0962  0022               	movlb	2	; select bank2
  7171  0963  0820               	movf	_RF_Data^(0+256),w
  7172  0964  3AAA               	xorlw	170
  7173  0965  1D03               	skipz
  7174  0966  2978               	goto	l9992
  7175  0967  0821               	movf	(_RF_Data^(0+256)+1),w
  7176  0968  3A01               	xorlw	1
  7177  0969  1D03               	skipz
  7178  096A  2978               	goto	l9992
  7179                           
  7180                           ;RF_Control_B1.c: 259: product->Data[2] = 0x55;
  7181  096B  3055               	movlw	85
  7182  096C  0020               	movlb	0	; select bank0
  7183  096D  00E3               	movwf	??_getRxData
  7184  096E  086D               	movf	_product,w
  7185  096F  3E02               	addlw	2
  7186  0970  0086               	movwf	6
  7187  0971  3002               	movlw	2	; select bank4/5
  7188  0972  0087               	movwf	7
  7189  0973  0863               	movf	??_getRxData,w
  7190  0974  0081               	movwf	1
  7191                           
  7192                           ;RF_Control_B1.c: 260: setTxData();
  7193  0975  319B  2330         	fcall	_setTxData
  7194                           
  7195                           ;RF_Control_B1.c: 264: } else {
  7196  0977  0008               	return
  7197  0978                     l9992:	
  7198                           
  7199                           ;RF_Control_B1.c: 265: char error = getMain_All_Error_Status(0);
  7200  0978  3000               	movlw	0
  7201  0979  319E  2603  3189   	fcall	_getMain_All_Error_Status
  7202  097C  0020               	movlb	0	; select bank0
  7203  097D  00E3               	movwf	??_getRxData
  7204  097E  0863               	movf	??_getRxData,w
  7205  097F  00E4               	movwf	getRxData@error
  7206                           
  7207                           ;RF_Control_B1.c: 266: if (error == 0) {
  7208  0980  08E4               	movf	getRxData@error,f
  7209  0981  1D03               	skipz
  7210  0982  29C5               	goto	l2543
  7211                           
  7212                           ;RF_Control_B1.c: 267: if (RF1.Learn == 1) {
  7213  0983  0021               	movlb	1	; select bank1
  7214  0984  1F30               	btfss	_RF1^(0+128),6
  7215  0985  2991               	goto	l10004
  7216                           
  7217                           ;RF_Control_B1.c: 269: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x64) {
  7218  0986  0022               	movlb	2	; select bank2
  7219  0987  08A0               	movf	_RF_Data^(0+256),f
  7220  0988  1D03               	skipz
  7221  0989  0008               	return
  7222  098A  0821               	movf	(_RF_Data^(0+256)+1),w
  7223  098B  3A64               	xorlw	100
  7224  098C  1D03               	skipz
  7225  098D  0008               	return
  7226                           
  7227                           ;RF_Control_B1.c: 270: setLog_Code();
  7228  098E  3188  2001         	fcall	_setLog_Code
  7229                           
  7230                           ;RF_Control_B1.c: 271: }
  7231                           ;RF_Control_B1.c: 289: } else {
  7232  0990  0008               	return
  7233  0991                     l10004:	
  7234                           
  7235                           ;RF_Control_B1.c: 290: if (RF_Data[20] == 211 || RF_Data[20] == 0x0a) {
  7236  0991  0022               	movlb	2	; select bank2
  7237  0992  0834               	movf	(_RF_Data^(0+256)+20),w
  7238  0993  3AD3               	xorlw	211
  7239  0994  1903               	skipnz
  7240  0995  299A               	goto	l10008
  7241  0996  0834               	movf	(_RF_Data^(0+256)+20),w
  7242  0997  3A0A               	xorlw	10
  7243  0998  1D03               	skipz
  7244  0999  0008               	return
  7245  099A                     l10008:	
  7246                           
  7247                           ;RF_Control_B1.c: 292: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  7248  099A  08A0               	movf	_RF_Data^(0+256),f
  7249  099B  1D03               	skipz
  7250  099C  0008               	return
  7251  099D  0821               	movf	(_RF_Data^(0+256)+1),w
  7252  099E  3A02               	xorlw	2
  7253  099F  1D03               	skipz
  7254  09A0  0008               	return
  7255                           
  7256                           ;RF_Control_B1.c: 294: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  7257  09A1  0020               	movlb	0	; select bank0
  7258  09A2  086D               	movf	_product,w
  7259  09A3  3E0C               	addlw	12
  7260  09A4  0086               	movwf	6
  7261  09A5  3002               	movlw	2	; select bank4/5
  7262  09A6  0087               	movwf	7
  7263  09A7  0022               	movlb	2	; select bank2
  7264  09A8  082C               	movf	(_RF_Data^(0+256)+12),w
  7265  09A9  0601               	xorwf	1,w
  7266  09AA  1D03               	skipz
  7267  09AB  0008               	return
  7268  09AC  0020               	movlb	0	; select bank0
  7269  09AD  086D               	movf	_product,w
  7270  09AE  3E0D               	addlw	13
  7271  09AF  0086               	movwf	6
  7272  09B0  3002               	movlw	2	; select bank4/5
  7273  09B1  0087               	movwf	7
  7274  09B2  0022               	movlb	2	; select bank2
  7275  09B3  082D               	movf	(_RF_Data^(0+256)+13),w
  7276  09B4  0601               	xorwf	1,w
  7277  09B5  1D03               	skipz
  7278  09B6  0008               	return
  7279  09B7  0020               	movlb	0	; select bank0
  7280  09B8  086D               	movf	_product,w
  7281  09B9  3E0E               	addlw	14
  7282  09BA  0086               	movwf	6
  7283  09BB  3002               	movlw	2	; select bank4/5
  7284  09BC  0087               	movwf	7
  7285  09BD  0022               	movlb	2	; select bank2
  7286  09BE  082E               	movf	(_RF_Data^(0+256)+14),w
  7287  09BF  0601               	xorwf	1,w
  7288  09C0  1D03               	skipz
  7289  09C1  0008               	return
  7290                           
  7291                           ;RF_Control_B1.c: 295: setControl_Lights_Table();
  7292  09C2  3185  25F9         	fcall	_setControl_Lights_Table
  7293                           
  7294                           ;RF_Control_B1.c: 296: }
  7295                           ;RF_Control_B1.c: 299: }
  7296                           ;RF_Control_B1.c: 310: }
  7297                           ;RF_Control_B1.c: 311: }
  7298                           ;RF_Control_B1.c: 312: } else {
  7299  09C4  0008               	return
  7300  09C5                     l2543:	
  7301                           
  7302                           ;RF_Control_B1.c: 313: __nop();
  7303  09C5  0000               	nop
  7304  09C6  0008               	return
  7305  09C7                     __end_of_getRxData:	
  7306                           
  7307                           	psect	text27
  7308  0801                     __ptext27:	
  7309 ;; *************** function _setLog_Code *****************
  7310 ;; Defined at:
  7311 ;;		line 319 in file "../src/RF_Control_B1.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;		None               void
  7318 ;; Registers used:
  7319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;Total ram usage:        1 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    5
  7332 ;; This function calls:
  7333 ;;		_setBuz
  7334 ;;		_setMemory_LoopSave
  7335 ;;		_setMemory_Modify
  7336 ;;		_setProductData
  7337 ;; This function is called by:
  7338 ;;		_getRxData
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           
  7343                           ;psect for function _setLog_Code
  7344  0801                     _setLog_Code:	
  7345                           
  7346                           ;RF_Control_B1.c: 320: RF1.Learn = 0;
  7347                           
  7348                           ;incstack = 0
  7349                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7350  0801  0021               	movlb	1	; select bank1
  7351  0802  1330               	bcf	_RF1^(0+128),6
  7352                           
  7353                           ;RF_Control_B1.c: 321: setProductData(12, RF_Data[12]);
  7354  0803  0022               	movlb	2	; select bank2
  7355  0804  082C               	movf	(_RF_Data^(0+256)+12),w
  7356  0805  0020               	movlb	0	; select bank0
  7357  0806  00D8               	movwf	??_setLog_Code
  7358  0807  0858               	movf	??_setLog_Code,w
  7359  0808  00D5               	movwf	setProductData@value
  7360  0809  300C               	movlw	12
  7361  080A  319B  23A2  3188   	fcall	_setProductData
  7362                           
  7363                           ;RF_Control_B1.c: 322: setProductData(13, RF_Data[13]);
  7364  080D  0022               	movlb	2	; select bank2
  7365  080E  082D               	movf	(_RF_Data^(0+256)+13),w
  7366  080F  0020               	movlb	0	; select bank0
  7367  0810  00D8               	movwf	??_setLog_Code
  7368  0811  0858               	movf	??_setLog_Code,w
  7369  0812  00D5               	movwf	setProductData@value
  7370  0813  300D               	movlw	13
  7371  0814  319B  23A2  3188   	fcall	_setProductData
  7372                           
  7373                           ;RF_Control_B1.c: 323: setProductData(14, RF_Data[14]);
  7374  0817  0022               	movlb	2	; select bank2
  7375  0818  082E               	movf	(_RF_Data^(0+256)+14),w
  7376  0819  0020               	movlb	0	; select bank0
  7377  081A  00D8               	movwf	??_setLog_Code
  7378  081B  0858               	movf	??_setLog_Code,w
  7379  081C  00D5               	movwf	setProductData@value
  7380  081D  300E               	movlw	14
  7381  081E  319B  23A2  3188   	fcall	_setProductData
  7382                           
  7383                           ;RF_Control_B1.c: 324: setBuz(1, 100);
  7384  0821  3064               	movlw	100
  7385  0822  0020               	movlb	0	; select bank0
  7386  0823  00A4               	movwf	setBuz@time
  7387  0824  3000               	movlw	0
  7388  0825  00A5               	movwf	setBuz@time+1
  7389  0826  3001               	movlw	1
  7390  0827  3195  25F3  3188   	fcall	_setBuz
  7391                           
  7392                           ;RF_Control_B1.c: 325: if (myMain.First == 1) {
  7393  082A  0021               	movlb	1	; select bank1
  7394  082B  1EBF               	btfss	_myMain^(0+128),5
  7395  082C  2831               	goto	l2556
  7396                           
  7397                           ;RF_Control_B1.c: 326: setMemory_LoopSave(1);
  7398  082D  3001               	movlw	1
  7399  082E  319C  24D7  3188   	fcall	_setMemory_LoopSave
  7400  0831                     l2556:	
  7401                           
  7402                           ;RF_Control_B1.c: 327: }
  7403                           ;RF_Control_B1.c: 328: setMemory_Modify(1);
  7404  0831  3001               	movlw	1
  7405  0832  319C  2477         	fcall	_setMemory_Modify
  7406  0834  0008               	return
  7407  0835                     __end_of_setLog_Code:	
  7408                           
  7409                           	psect	text28
  7410  1CD7                     __ptext28:	
  7411 ;; *************** function _setMemory_LoopSave *****************
  7412 ;; Defined at:
  7413 ;;		line 1093 in file "../src/MCU_B1.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  command         1    wreg     unsigned char 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  command         1    3[COMMON] unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;		None               void
  7420 ;; Registers used:
  7421 ;;		wreg, status,2, status,0
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;Total ram usage:        2 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    3
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_setLog_Code
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _setMemory_LoopSave
  7443  1CD7                     _setMemory_LoopSave:	
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in _setMemory_LoopSave: [wreg+status,2+status,0]
  7447                           ;setMemory_LoopSave@command stored from wreg
  7448  1CD7  00F3               	movwf	setMemory_LoopSave@command
  7449                           
  7450                           ;MCU_B1.c: 1094: Memory.LoopSave = command == 1 ? 1 : 0;
  7451  1CD8  0873               	movf	setMemory_LoopSave@command,w
  7452  1CD9  3A01               	xorlw	1
  7453  1CDA  3000               	movlw	0
  7454  1CDB  1903               	skipnz
  7455  1CDC  3001               	movlw	1
  7456  1CDD  00F2               	movwf	??_setMemory_LoopSave
  7457  1CDE  0DF2               	rlf	??_setMemory_LoopSave,f
  7458  1CDF  0DF2               	rlf	??_setMemory_LoopSave,f
  7459  1CE0  0024               	movlb	4	; select bank4
  7460  1CE1  0854               	movf	(_Memory^(0+512)+36),w
  7461  1CE2  0672               	xorwf	??_setMemory_LoopSave,w
  7462  1CE3  39FB               	andlw	-5
  7463  1CE4  0672               	xorwf	??_setMemory_LoopSave,w
  7464  1CE5  00D4               	movwf	(_Memory^(0+512)+36)
  7465  1CE6  0008               	return
  7466  1CE7                     __end_of_setMemory_LoopSave:	
  7467                           
  7468                           	psect	text29
  7469  05F9                     __ptext29:	
  7470 ;; *************** function _setControl_Lights_Table *****************
  7471 ;; Defined at:
  7472 ;;		line 332 in file "../src/RF_Control_B1.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;		None               void
  7479 ;; Registers used:
  7480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    7
  7493 ;; This function calls:
  7494 ;;		_getDimmerLights_Status
  7495 ;;		_getMain_All_LightsStatus
  7496 ;;		_setCmd_Status
  7497 ;;		_setDimmerLights_SwOff
  7498 ;;		_setDimmerLights_SwOn
  7499 ;;		_setProductData
  7500 ;;		_setRFSW_AdjControl
  7501 ;;		_setRFSW_Control
  7502 ;;		_setRF_AdjControl
  7503 ;;		_setTxData
  7504 ;; This function is called by:
  7505 ;;		_getRxData
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _setControl_Lights_Table
  7511  05F9                     _setControl_Lights_Table:	
  7512                           
  7513                           ;RF_Control_B1.c: 334: switch (RF_Data[15]) {
  7514                           
  7515                           ;incstack = 0
  7516                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7517  05F9  2E8F               	goto	l9740
  7518  05FA                     l9702:	
  7519                           ;RF_Control_B1.c: 336: case 0x00:
  7520                           
  7521                           
  7522                           ;RF_Control_B1.c: 337: if (getMain_All_LightsStatus() == 1) {
  7523  05FA  319D  25BE  3185   	fcall	_getMain_All_LightsStatus
  7524  05FD  3A01               	xorlw	1
  7525  05FE  1D03               	skipz
  7526  05FF  2E33               	goto	l9714
  7527                           
  7528                           ;RF_Control_B1.c: 340: if (getDimmerLights_Status(1) == 1) {
  7529  0600  3001               	movlw	1
  7530  0601  319B  23E1  3185   	fcall	_getDimmerLights_Status
  7531  0604  3A01               	xorlw	1
  7532  0605  1D03               	skipz
  7533  0606  2E0F               	goto	l2563
  7534                           
  7535                           ;RF_Control_B1.c: 341: setDimmerLights_SwOn(1);
  7536  0607  3001               	movlw	1
  7537  0608  3187  2765  3185   	fcall	_setDimmerLights_SwOn
  7538                           
  7539                           ;RF_Control_B1.c: 342: setDimmerLights_SwOff(1);
  7540  060B  3001               	movlw	1
  7541  060C  3192  2243  3185   	fcall	_setDimmerLights_SwOff
  7542  060F                     l2563:	
  7543                           
  7544                           ;RF_Control_B1.c: 343: }
  7545                           ;RF_Control_B1.c: 346: if (getDimmerLights_Status(2) == 1) {
  7546  060F  3002               	movlw	2
  7547  0610  319B  23E1  3185   	fcall	_getDimmerLights_Status
  7548  0613  3A01               	xorlw	1
  7549  0614  1D03               	skipz
  7550  0615  2E1E               	goto	l2564
  7551                           
  7552                           ;RF_Control_B1.c: 347: setDimmerLights_SwOn(2);
  7553  0616  3002               	movlw	2
  7554  0617  3187  2765  3185   	fcall	_setDimmerLights_SwOn
  7555                           
  7556                           ;RF_Control_B1.c: 348: setDimmerLights_SwOff(2);
  7557  061A  3002               	movlw	2
  7558  061B  3192  2243  3185   	fcall	_setDimmerLights_SwOff
  7559  061E                     l2564:	
  7560                           
  7561                           ;RF_Control_B1.c: 349: }
  7562                           ;RF_Control_B1.c: 352: if (getDimmerLights_Status(3) == 1) {
  7563  061E  3003               	movlw	3
  7564  061F  319B  23E1  3185   	fcall	_getDimmerLights_Status
  7565  0622  3A01               	xorlw	1
  7566  0623  1D03               	skipz
  7567  0624  2E2D               	goto	l9712
  7568                           
  7569                           ;RF_Control_B1.c: 353: setDimmerLights_SwOn(3);
  7570  0625  3003               	movlw	3
  7571  0626  3187  2765  3185   	fcall	_setDimmerLights_SwOn
  7572                           
  7573                           ;RF_Control_B1.c: 354: setDimmerLights_SwOff(3);
  7574  0629  3003               	movlw	3
  7575  062A  3192  2243  3185   	fcall	_setDimmerLights_SwOff
  7576  062D                     l9712:	
  7577                           
  7578                           ;RF_Control_B1.c: 355: }
  7579                           ;RF_Control_B1.c: 358: setCmd_Status(1, 1);
  7580  062D  01F2               	clrf	setCmd_Status@cmd
  7581  062E  0AF2               	incf	setCmd_Status@cmd,f
  7582  062F  3001               	movlw	1
  7583  0630  319D  2555         	fcall	_setCmd_Status
  7584                           
  7585                           ;RF_Control_B1.c: 359: } else {
  7586  0632  0008               	return
  7587  0633                     l9714:	
  7588                           
  7589                           ;RF_Control_B1.c: 360: setProductData(9, 0);
  7590  0633  0020               	movlb	0	; select bank0
  7591  0634  01D5               	clrf	setProductData@value
  7592  0635  3009               	movlw	9
  7593  0636  319B  23A2  3185   	fcall	_setProductData
  7594                           
  7595                           ;RF_Control_B1.c: 361: setProductData(11, 0);
  7596  0639  0020               	movlb	0	; select bank0
  7597  063A  01D5               	clrf	setProductData@value
  7598  063B  300B               	movlw	11
  7599  063C  319B  23A2  3185   	fcall	_setProductData
  7600                           
  7601                           ;RF_Control_B1.c: 362: setProductData(15, 0);
  7602  063F  0020               	movlb	0	; select bank0
  7603  0640  01D5               	clrf	setProductData@value
  7604  0641  300F               	movlw	15
  7605  0642  319B  23A2  3185   	fcall	_setProductData
  7606                           
  7607                           ;RF_Control_B1.c: 363: setProductData(17, 0);
  7608  0645  0020               	movlb	0	; select bank0
  7609  0646  01D5               	clrf	setProductData@value
  7610  0647  3011               	movlw	17
  7611  0648  319B  23A2  3185   	fcall	_setProductData
  7612                           
  7613                           ;RF_Control_B1.c: 364: setTxData();
  7614  064B  319B  2330         	fcall	_setTxData
  7615                           
  7616                           ;RF_Control_B1.c: 365: }
  7617                           ;RF_Control_B1.c: 366: break;
  7618  064D  0008               	return
  7619  064E                     l9718:	
  7620                           ;RF_Control_B1.c: 368: case 0x20:
  7621                           
  7622                           
  7623                           ;RF_Control_B1.c: 369: setProductData(9, 0);
  7624  064E  0020               	movlb	0	; select bank0
  7625  064F  01D5               	clrf	setProductData@value
  7626  0650  3009               	movlw	9
  7627  0651  319B  23A2  3185   	fcall	_setProductData
  7628                           
  7629                           ;RF_Control_B1.c: 370: setProductData(11, 0);
  7630  0654  0020               	movlb	0	; select bank0
  7631  0655  01D5               	clrf	setProductData@value
  7632  0656  300B               	movlw	11
  7633  0657  319B  23A2  3185   	fcall	_setProductData
  7634                           
  7635                           ;RF_Control_B1.c: 371: setProductData(15, product->Data[15]);
  7636  065A  0020               	movlb	0	; select bank0
  7637  065B  086D               	movf	_product,w
  7638  065C  0086               	movwf	6
  7639  065D  3002               	movlw	2	; select bank4/5
  7640  065E  0087               	movwf	7
  7641  065F  3002               	movlw	2	; select bank4/5
  7642  0660  3F4F               	moviw [15]fsr1
  7643  0661  00D5               	movwf	setProductData@value
  7644  0662  300F               	movlw	15
  7645  0663  319B  23A2  3185   	fcall	_setProductData
  7646                           
  7647                           ;RF_Control_B1.c: 372: setProductData(17, 0);
  7648  0666  0020               	movlb	0	; select bank0
  7649  0667  01D5               	clrf	setProductData@value
  7650  0668  3011               	movlw	17
  7651  0669  319B  23A2  3185   	fcall	_setProductData
  7652                           
  7653                           ;RF_Control_B1.c: 373: setTxData();
  7654  066C  319B  2330         	fcall	_setTxData
  7655                           
  7656                           ;RF_Control_B1.c: 374: break;
  7657  066E  0008               	return
  7658  066F                     l9722:	
  7659                           ;RF_Control_B1.c: 377: case 0x01:
  7660                           
  7661                           
  7662                           ;RF_Control_B1.c: 378: setRFSW_Control(1);
  7663  066F  3001               	movlw	1
  7664  0670  3193  232D         	fcall	_setRFSW_Control
  7665                           
  7666                           ;RF_Control_B1.c: 379: break;
  7667  0672  0008               	return
  7668  0673                     l9724:	
  7669                           ;RF_Control_B1.c: 383: case 0x11:
  7670                           
  7671                           
  7672                           ;RF_Control_B1.c: 384: setRFSW_AdjControl(1);
  7673  0673  3001               	movlw	1
  7674  0674  318C  24ED         	fcall	_setRFSW_AdjControl
  7675                           
  7676                           ;RF_Control_B1.c: 385: break;
  7677  0676  0008               	return
  7678  0677                     l9726:	
  7679                           ;RF_Control_B1.c: 387: case 0xd1:
  7680                           
  7681                           
  7682                           ;RF_Control_B1.c: 388: setRF_AdjControl(1);
  7683  0677  3001               	movlw	1
  7684  0678  3191  21D6         	fcall	_setRF_AdjControl
  7685                           
  7686                           ;RF_Control_B1.c: 389: break;
  7687  067A  0008               	return
  7688  067B                     l9728:	
  7689                           ;RF_Control_B1.c: 394: case 0x02:
  7690                           
  7691                           
  7692                           ;RF_Control_B1.c: 395: setRFSW_Control(2);
  7693  067B  3002               	movlw	2
  7694  067C  3193  232D         	fcall	_setRFSW_Control
  7695                           
  7696                           ;RF_Control_B1.c: 396: break;
  7697  067E  0008               	return
  7698  067F                     l9730:	
  7699                           ;RF_Control_B1.c: 399: case 0x21:
  7700                           
  7701                           
  7702                           ;RF_Control_B1.c: 400: setRFSW_AdjControl(2);
  7703  067F  3002               	movlw	2
  7704  0680  318C  24ED         	fcall	_setRFSW_AdjControl
  7705                           
  7706                           ;RF_Control_B1.c: 401: break;
  7707  0682  0008               	return
  7708  0683                     l9732:	
  7709                           ;RF_Control_B1.c: 403: case 0xd2:
  7710                           
  7711                           
  7712                           ;RF_Control_B1.c: 404: setRF_AdjControl(2);
  7713  0683  3002               	movlw	2
  7714  0684  3191  21D6         	fcall	_setRF_AdjControl
  7715                           
  7716                           ;RF_Control_B1.c: 405: break;
  7717  0686  0008               	return
  7718  0687                     l9734:	
  7719                           ;RF_Control_B1.c: 411: case 0x03:
  7720                           
  7721                           
  7722                           ;RF_Control_B1.c: 412: setRFSW_Control(3);
  7723  0687  3003               	movlw	3
  7724  0688  3193  232D         	fcall	_setRFSW_Control
  7725                           
  7726                           ;RF_Control_B1.c: 413: break;
  7727  068A  0008               	return
  7728  068B                     l9736:	
  7729                           ;RF_Control_B1.c: 417: case 0x31:
  7730                           
  7731                           
  7732                           ;RF_Control_B1.c: 418: setRFSW_AdjControl(3);
  7733  068B  3003               	movlw	3
  7734  068C  318C  24ED         	fcall	_setRFSW_AdjControl
  7735                           
  7736                           ;RF_Control_B1.c: 422: }
  7737                           
  7738                           ;RF_Control_B1.c: 419: break;
  7739  068E  0008               	return
  7740  068F                     l9740:	
  7741  068F  0022               	movlb	2	; select bank2
  7742  0690  082F               	movf	(_RF_Data^(0+256)+15),w
  7743                           
  7744                           ; Switch size 1, requested type "space"
  7745                           ; Number of cases is 10, Range of values is 0 to 210
  7746                           ; switch strategies available:
  7747                           ; Name         Instructions Cycles
  7748                           ; simple_byte           31    16 (average)
  7749                           ; jumptable            260     6 (fixed)
  7750                           ;	Chosen strategy is simple_byte
  7751  0691  3A00               	xorlw	0	; case 0
  7752  0692  1903               	skipnz
  7753  0693  2DFA               	goto	l9702
  7754  0694  3A01               	xorlw	1	; case 1
  7755  0695  1903               	skipnz
  7756  0696  2E6F               	goto	l9722
  7757  0697  3A03               	xorlw	3	; case 2
  7758  0698  1903               	skipnz
  7759  0699  2E7B               	goto	l9728
  7760  069A  3A01               	xorlw	1	; case 3
  7761  069B  1903               	skipnz
  7762  069C  2E87               	goto	l9734
  7763  069D  3A12               	xorlw	18	; case 17
  7764  069E  1903               	skipnz
  7765  069F  2E73               	goto	l9724
  7766  06A0  3A31               	xorlw	49	; case 32
  7767  06A1  1903               	skipnz
  7768  06A2  2E4E               	goto	l9718
  7769  06A3  3A01               	xorlw	1	; case 33
  7770  06A4  1903               	skipnz
  7771  06A5  2E7F               	goto	l9730
  7772  06A6  3A10               	xorlw	16	; case 49
  7773  06A7  1903               	skipnz
  7774  06A8  2E8B               	goto	l9736
  7775  06A9  3AE0               	xorlw	224	; case 209
  7776  06AA  1903               	skipnz
  7777  06AB  2E77               	goto	l9726
  7778  06AC  3A03               	xorlw	3	; case 210
  7779  06AD  1903               	skipnz
  7780  06AE  2E83               	goto	l9732
  7781  06AF  2EB0               	goto	l2577
  7782  06B0                     l2577:	
  7783  06B0  0008               	return
  7784  06B1                     __end_of_setControl_Lights_Table:	
  7785                           
  7786                           	psect	text30
  7787  11D6                     __ptext30:	
  7788 ;; *************** function _setRF_AdjControl *****************
  7789 ;; Defined at:
  7790 ;;		line 501 in file "../src/RF_Control_B1.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  sw              1    wreg     unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  sw              1    9[COMMON] unsigned char 
  7795 ;;  dimmingStatu    1    8[COMMON] unsigned char 
  7796 ;;  status          1    7[COMMON] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;		None               void
  7799 ;; Registers used:
  7800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;Total ram usage:        4 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    5
  7813 ;; This function calls:
  7814 ;;		_DimmerLights_SelectPointer
  7815 ;;		_getDimmerIntr_Dimming_Sw
  7816 ;;		_getDimmerLights_Status
  7817 ;; This function is called by:
  7818 ;;		_setControl_Lights_Table
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function _setRF_AdjControl
  7824  11D6                     _setRF_AdjControl:	
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in _setRF_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7828                           ;setRF_AdjControl@sw stored from wreg
  7829  11D6  00F9               	movwf	setRF_AdjControl@sw
  7830                           
  7831                           ;RF_Control_B1.c: 502: char status = 0;
  7832  11D7  01F7               	clrf	setRF_AdjControl@status
  7833                           
  7834                           ;RF_Control_B1.c: 504: status = getDimmerLights_Status(sw);
  7835  11D8  0879               	movf	setRF_AdjControl@sw,w
  7836  11D9  319B  23E1  3191   	fcall	_getDimmerLights_Status
  7837  11DC  00F6               	movwf	??_setRF_AdjControl
  7838  11DD  0876               	movf	??_setRF_AdjControl,w
  7839  11DE  00F7               	movwf	setRF_AdjControl@status
  7840                           
  7841                           ;RF_Control_B1.c: 505: char dimmingStatus = 0;
  7842  11DF  01F8               	clrf	setRF_AdjControl@dimmingStatus
  7843                           
  7844                           ;RF_Control_B1.c: 506: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
  7845  11E0  0879               	movf	setRF_AdjControl@sw,w
  7846  11E1  319E  26DA  3191   	fcall	_getDimmerIntr_Dimming_Sw
  7847  11E4  00F6               	movwf	??_setRF_AdjControl
  7848  11E5  0876               	movf	??_setRF_AdjControl,w
  7849  11E6  00F8               	movwf	setRF_AdjControl@dimmingStatus
  7850                           
  7851                           ;RF_Control_B1.c: 508: if (status == 1) {
  7852  11E7  0877               	movf	setRF_AdjControl@status,w
  7853  11E8  3A01               	xorlw	1
  7854  11E9  1D03               	skipz
  7855  11EA  0008               	return
  7856                           
  7857                           ;RF_Control_B1.c: 509: if (dimmingStatus == 0) {
  7858  11EB  08F8               	movf	setRF_AdjControl@dimmingStatus,f
  7859  11EC  1D03               	skipz
  7860  11ED  29FD               	goto	l7222
  7861                           
  7862                           ;RF_Control_B1.c: 510: DimmerLights_SelectPointer(sw);
  7863  11EE  0879               	movf	setRF_AdjControl@sw,w
  7864  11EF  319F  2738         	fcall	_DimmerLights_SelectPointer
  7865                           
  7866                           ;RF_Control_B1.c: 511: DimmerLights->DimmingTrigger = 1;
  7867  11F1  0020               	movlb	0	; select bank0
  7868  11F2  0869               	movf	_DimmerLights,w
  7869  11F3  0086               	movwf	6
  7870  11F4  3001               	movlw	1	; select bank2/3
  7871  11F5  0087               	movwf	7
  7872  11F6  1601               	bsf	1,4
  7873                           
  7874                           ;RF_Control_B1.c: 512: DimmerLights->DimmingSwitch = 1;
  7875  11F7  0869               	movf	_DimmerLights,w
  7876  11F8  0086               	movwf	6
  7877  11F9  3001               	movlw	1	; select bank2/3
  7878  11FA  0087               	movwf	7
  7879  11FB  1681               	bsf	1,5
  7880                           
  7881                           ;RF_Control_B1.c: 514: } else {
  7882  11FC  0008               	return
  7883  11FD                     l7222:	
  7884                           
  7885                           ;RF_Control_B1.c: 515: DimmerLights_SelectPointer(sw);
  7886  11FD  0879               	movf	setRF_AdjControl@sw,w
  7887  11FE  319F  2738         	fcall	_DimmerLights_SelectPointer
  7888                           
  7889                           ;RF_Control_B1.c: 516: DimmerLights->DimmingTrigger = 1;
  7890  1200  0020               	movlb	0	; select bank0
  7891  1201  0869               	movf	_DimmerLights,w
  7892  1202  0086               	movwf	6
  7893  1203  3001               	movlw	1	; select bank2/3
  7894  1204  0087               	movwf	7
  7895  1205  1601               	bsf	1,4
  7896                           
  7897                           ;RF_Control_B1.c: 517: DimmerLights->DimmingSwitch = 0;
  7898  1206  0869               	movf	_DimmerLights,w
  7899  1207  0086               	movwf	6
  7900  1208  3001               	movlw	1	; select bank2/3
  7901  1209  0087               	movwf	7
  7902  120A  1281               	bcf	1,5
  7903  120B  0008               	return
  7904  120C                     __end_of_setRF_AdjControl:	
  7905                           
  7906                           	psect	text31
  7907  132D                     __ptext31:	
  7908 ;; *************** function _setRFSW_Control *****************
  7909 ;; Defined at:
  7910 ;;		line 430 in file "../src/RF_Control_B1.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  sw              1    wreg     unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  sw              1   66[BANK0 ] unsigned char 
  7915 ;;  status          1   65[BANK0 ] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;		None               void
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;Total ram usage:        3 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    6
  7932 ;; This function calls:
  7933 ;;		_getDimmerLights_Status
  7934 ;;		_setBuz
  7935 ;;		_setDelayOff_GO
  7936 ;;		_setDimmerLights_SwOff
  7937 ;;		_setDimmerLights_SwOn
  7938 ;;		_setRF_DimmerLights
  7939 ;;		_setTxData
  7940 ;; This function is called by:
  7941 ;;		_setControl_Lights_Table
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function _setRFSW_Control
  7947  132D                     _setRFSW_Control:	
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _setRFSW_Control: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7951                           ;setRFSW_Control@sw stored from wreg
  7952  132D  0020               	movlb	0	; select bank0
  7953  132E  00E2               	movwf	setRFSW_Control@sw
  7954                           
  7955                           ;RF_Control_B1.c: 431: char status = 0;
  7956  132F  01E1               	clrf	setRFSW_Control@status
  7957                           
  7958                           ;RF_Control_B1.c: 433: if (RF_Data[16] == 0x80) {
  7959  1330  0022               	movlb	2	; select bank2
  7960  1331  0830               	movf	(_RF_Data^(0+256)+16),w
  7961  1332  3A80               	xorlw	128
  7962  1333  1D03               	skipz
  7963  1334  2B60               	goto	l9526
  7964                           
  7965                           ;RF_Control_B1.c: 434: setDelayOff_GO(sw, 1, RF_Data[17]);
  7966  1335  0020               	movlb	0	; select bank0
  7967  1336  01D8               	clrf	setDelayOff_GO@command
  7968  1337  0AD8               	incf	setDelayOff_GO@command,f
  7969  1338  0022               	movlb	2	; select bank2
  7970  1339  0831               	movf	(_RF_Data^(0+256)+17),w
  7971  133A  0020               	movlb	0	; select bank0
  7972  133B  00E0               	movwf	??_setRFSW_Control
  7973  133C  0860               	movf	??_setRFSW_Control,w
  7974  133D  00D9               	movwf	setDelayOff_GO@value
  7975  133E  0862               	movf	setRFSW_Control@sw,w
  7976  133F  318B  23E2  3193   	fcall	_setDelayOff_GO
  7977                           
  7978                           ;RF_Control_B1.c: 435: if (getDimmerLights_Status(sw) == 1) {
  7979  1342  0020               	movlb	0	; select bank0
  7980  1343  0862               	movf	setRFSW_Control@sw,w
  7981  1344  319B  23E1  3193   	fcall	_getDimmerLights_Status
  7982  1347  3A01               	xorlw	1
  7983  1348  1D03               	skipz
  7984  1349  2B60               	goto	l9526
  7985                           
  7986                           ;RF_Control_B1.c: 436: setBuz(1, 100);
  7987  134A  3064               	movlw	100
  7988  134B  0020               	movlb	0	; select bank0
  7989  134C  00A4               	movwf	setBuz@time
  7990  134D  3000               	movlw	0
  7991  134E  00A5               	movwf	setBuz@time+1
  7992  134F  3001               	movlw	1
  7993  1350  3195  25F3  3193   	fcall	_setBuz
  7994                           
  7995                           ;RF_Control_B1.c: 437: setRF_DimmerLights(sw, 1);
  7996  1353  0020               	movlb	0	; select bank0
  7997  1354  01D8               	clrf	setRF_DimmerLights@on
  7998  1355  0AD8               	incf	setRF_DimmerLights@on,f
  7999  1356  0862               	movf	setRFSW_Control@sw,w
  8000  1357  3189  21C7  3193   	fcall	_setRF_DimmerLights
  8001                           
  8002                           ;RF_Control_B1.c: 438: setTxData();
  8003  135A  319B  2330  3193   	fcall	_setTxData
  8004                           
  8005                           ;RF_Control_B1.c: 439: status = 1;
  8006  135D  0020               	movlb	0	; select bank0
  8007  135E  01E1               	clrf	setRFSW_Control@status
  8008  135F  0AE1               	incf	setRFSW_Control@status,f
  8009  1360                     l9526:	
  8010                           
  8011                           ;RF_Control_B1.c: 440: }
  8012                           ;RF_Control_B1.c: 441: }
  8013                           ;RF_Control_B1.c: 443: if (status == 0) {
  8014  1360  0020               	movlb	0	; select bank0
  8015  1361  08E1               	movf	setRFSW_Control@status,f
  8016  1362  1D03               	skipz
  8017  1363  0008               	return
  8018                           
  8019                           ;RF_Control_B1.c: 445: setDimmerLights_SwOn(sw);
  8020  1364  0862               	movf	setRFSW_Control@sw,w
  8021  1365  3187  2765  3193   	fcall	_setDimmerLights_SwOn
  8022                           
  8023                           ;RF_Control_B1.c: 446: setDimmerLights_SwOff(sw);
  8024  1368  0020               	movlb	0	; select bank0
  8025  1369  0862               	movf	setRFSW_Control@sw,w
  8026  136A  3192  2243         	fcall	_setDimmerLights_SwOff
  8027  136C  0008               	return
  8028  136D                     __end_of_setRFSW_Control:	
  8029                           
  8030                           	psect	text32
  8031  0CED                     __ptext32:	
  8032 ;; *************** function _setRFSW_AdjControl *****************
  8033 ;; Defined at:
  8034 ;;		line 453 in file "../src/RF_Control_B1.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  sw              1    wreg     unsigned char 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  sw              1   61[BANK0 ] unsigned char 
  8039 ;;  status          1   60[BANK0 ] unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;		None               void
  8042 ;; Registers used:
  8043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;Total ram usage:        4 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    6
  8056 ;; This function calls:
  8057 ;;		_getDimmerLights_PercentToValue
  8058 ;;		_getDimmerLights_Status
  8059 ;;		_setBuz
  8060 ;;		_setDimmerIntr_Dimming_RF
  8061 ;;		_setDimmerIntr_MaxmumValue
  8062 ;;		_setDimmerLights_DimmingRun
  8063 ;;		_setDimmerLights_SwOff
  8064 ;;		_setDimmerLights_SwOn
  8065 ;;		_setMemory_Modify
  8066 ;;		_setProductData
  8067 ;;		_setTxData
  8068 ;; This function is called by:
  8069 ;;		_setControl_Lights_Table
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _setRFSW_AdjControl
  8075  0CED                     _setRFSW_AdjControl:	
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8079                           ;setRFSW_AdjControl@sw stored from wreg
  8080  0CED  0020               	movlb	0	; select bank0
  8081  0CEE  00DD               	movwf	setRFSW_AdjControl@sw
  8082                           
  8083                           ;RF_Control_B1.c: 454: char status = 0;
  8084  0CEF  01DC               	clrf	setRFSW_AdjControl@status
  8085                           
  8086                           ;RF_Control_B1.c: 456: status = getDimmerLights_Status(sw);
  8087  0CF0  085D               	movf	setRFSW_AdjControl@sw,w
  8088  0CF1  319B  23E1  318C   	fcall	_getDimmerLights_Status
  8089  0CF4  0020               	movlb	0	; select bank0
  8090  0CF5  00DA               	movwf	??_setRFSW_AdjControl
  8091  0CF6  085A               	movf	??_setRFSW_AdjControl,w
  8092  0CF7  00DC               	movwf	setRFSW_AdjControl@status
  8093                           
  8094                           ;RF_Control_B1.c: 458: if (RF_Data[9] > 0x64) {
  8095  0CF8  3065               	movlw	101
  8096  0CF9  0022               	movlb	2	; select bank2
  8097  0CFA  0229               	subwf	(_RF_Data^(0+256)+9),w
  8098  0CFB  1C03               	skipc
  8099  0CFC  2D04               	goto	l9538
  8100                           
  8101                           ;RF_Control_B1.c: 459: RF_Data[9] = 0x64;
  8102  0CFD  3064               	movlw	100
  8103  0CFE  0020               	movlb	0	; select bank0
  8104  0CFF  00DA               	movwf	??_setRFSW_AdjControl
  8105  0D00  085A               	movf	??_setRFSW_AdjControl,w
  8106  0D01  0022               	movlb	2	; select bank2
  8107  0D02  00A9               	movwf	(_RF_Data^(0+256)+9)
  8108                           
  8109                           ;RF_Control_B1.c: 460: } else if (RF_Data[9] < 0x01) {
  8110  0D03  2D09               	goto	l9542
  8111  0D04                     l9538:	
  8112  0D04  08A9               	movf	(_RF_Data^(0+256)+9),f
  8113  0D05  1D03               	skipz
  8114  0D06  2D09               	goto	l9542
  8115                           
  8116                           ;RF_Control_B1.c: 461: RF_Data[9] = 0x01;
  8117  0D07  01A9               	clrf	(_RF_Data^(0+256)+9)
  8118  0D08  0AA9               	incf	(_RF_Data^(0+256)+9),f
  8119  0D09                     l9542:	
  8120                           
  8121                           ;RF_Control_B1.c: 462: }
  8122                           ;RF_Control_B1.c: 463: setProductData(9, RF_Data[9]);
  8123  0D09  0829               	movf	(_RF_Data^(0+256)+9),w
  8124  0D0A  0020               	movlb	0	; select bank0
  8125  0D0B  00DA               	movwf	??_setRFSW_AdjControl
  8126  0D0C  085A               	movf	??_setRFSW_AdjControl,w
  8127  0D0D  00D5               	movwf	setProductData@value
  8128  0D0E  3009               	movlw	9
  8129  0D0F  319B  23A2  318C   	fcall	_setProductData
  8130                           
  8131                           ;RF_Control_B1.c: 464: setProductData(11, sw);
  8132  0D12  0020               	movlb	0	; select bank0
  8133  0D13  085D               	movf	setRFSW_AdjControl@sw,w
  8134  0D14  00DA               	movwf	??_setRFSW_AdjControl
  8135  0D15  085A               	movf	??_setRFSW_AdjControl,w
  8136  0D16  00D5               	movwf	setProductData@value
  8137  0D17  300B               	movlw	11
  8138  0D18  319B  23A2  318C   	fcall	_setProductData
  8139                           
  8140                           ;RF_Control_B1.c: 465: setProductData(17, product->Data[26 + sw]);
  8141  0D1B  0020               	movlb	0	; select bank0
  8142  0D1C  085D               	movf	setRFSW_AdjControl@sw,w
  8143  0D1D  3E1A               	addlw	26
  8144  0D1E  076D               	addwf	_product,w
  8145  0D1F  00DA               	movwf	??_setRFSW_AdjControl
  8146  0D20  085A               	movf	??_setRFSW_AdjControl,w
  8147  0D21  0086               	movwf	6
  8148  0D22  3002               	movlw	2	; select bank4/5
  8149  0D23  0087               	movwf	7
  8150  0D24  0801               	movf	1,w
  8151  0D25  00DB               	movwf	??_setRFSW_AdjControl+1
  8152  0D26  085B               	movf	??_setRFSW_AdjControl+1,w
  8153  0D27  00D5               	movwf	setProductData@value
  8154  0D28  3011               	movlw	17
  8155  0D29  319B  23A2  318C   	fcall	_setProductData
  8156                           
  8157                           ;RF_Control_B1.c: 466: setProductData((20 + sw), RF_Data[9]);
  8158  0D2C  0022               	movlb	2	; select bank2
  8159  0D2D  0829               	movf	(_RF_Data^(0+256)+9),w
  8160  0D2E  0020               	movlb	0	; select bank0
  8161  0D2F  00DA               	movwf	??_setRFSW_AdjControl
  8162  0D30  085A               	movf	??_setRFSW_AdjControl,w
  8163  0D31  00D5               	movwf	setProductData@value
  8164  0D32  085D               	movf	setRFSW_AdjControl@sw,w
  8165  0D33  3E14               	addlw	20
  8166  0D34  319B  23A2  318C   	fcall	_setProductData
  8167                           
  8168                           ;RF_Control_B1.c: 474: setMemory_Modify(1);
  8169  0D37  3001               	movlw	1
  8170  0D38  319C  2477  318C   	fcall	_setMemory_Modify
  8171                           
  8172                           ;RF_Control_B1.c: 478: if (status == 1) {
  8173  0D3B  0020               	movlb	0	; select bank0
  8174  0D3C  085C               	movf	setRFSW_AdjControl@status,w
  8175  0D3D  3A01               	xorlw	1
  8176  0D3E  1D03               	skipz
  8177  0D3F  2D60               	goto	l9554
  8178                           
  8179                           ;RF_Control_B1.c: 480: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(RF_D
      +                          ata[9]));
  8180  0D40  0022               	movlb	2	; select bank2
  8181  0D41  0829               	movf	(_RF_Data^(0+256)+9),w
  8182  0D42  3197  2745  318C   	fcall	_getDimmerLights_PercentToValue
  8183  0D45  0020               	movlb	0	; select bank0
  8184  0D46  00DA               	movwf	??_setRFSW_AdjControl
  8185  0D47  085A               	movf	??_setRFSW_AdjControl,w
  8186  0D48  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  8187  0D49  085D               	movf	setRFSW_AdjControl@sw,w
  8188  0D4A  3190  2078  318C   	fcall	_setDimmerIntr_MaxmumValue
  8189                           
  8190                           ;RF_Control_B1.c: 481: setDimmerIntr_Dimming_RF(sw, 1);
  8191  0D4D  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  8192  0D4E  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  8193  0D4F  0020               	movlb	0	; select bank0
  8194  0D50  085D               	movf	setRFSW_AdjControl@sw,w
  8195  0D51  3192  22F0  318C   	fcall	_setDimmerIntr_Dimming_RF
  8196                           
  8197                           ;RF_Control_B1.c: 483: setTxData();
  8198  0D54  319B  2330  318C   	fcall	_setTxData
  8199                           
  8200                           ;RF_Control_B1.c: 485: setBuz(1, 100);
  8201  0D57  3064               	movlw	100
  8202  0D58  0020               	movlb	0	; select bank0
  8203  0D59  00A4               	movwf	setBuz@time
  8204  0D5A  3000               	movlw	0
  8205  0D5B  00A5               	movwf	setBuz@time+1
  8206  0D5C  3001               	movlw	1
  8207  0D5D  3195  25F3         	fcall	_setBuz
  8208                           
  8209                           ;RF_Control_B1.c: 486: } else if (status == 0) {
  8210  0D5F  0008               	return
  8211  0D60                     l9554:	
  8212  0D60  0020               	movlb	0	; select bank0
  8213  0D61  08DC               	movf	setRFSW_AdjControl@status,f
  8214  0D62  1D03               	skipz
  8215  0D63  0008               	return
  8216                           
  8217                           ;RF_Control_B1.c: 490: setDimmerLights_DimmingRun(sw, 1);
  8218  0D64  01F4               	clrf	setDimmerLights_DimmingRun@command
  8219  0D65  0AF4               	incf	setDimmerLights_DimmingRun@command,f
  8220  0D66  085D               	movf	setRFSW_AdjControl@sw,w
  8221  0D67  319D  25EB  318C   	fcall	_setDimmerLights_DimmingRun
  8222                           
  8223                           ;RF_Control_B1.c: 491: setDimmerLights_SwOn(sw);
  8224  0D6A  0020               	movlb	0	; select bank0
  8225  0D6B  085D               	movf	setRFSW_AdjControl@sw,w
  8226  0D6C  3187  2765  318C   	fcall	_setDimmerLights_SwOn
  8227                           
  8228                           ;RF_Control_B1.c: 492: setDimmerLights_SwOff(sw);
  8229  0D6F  0020               	movlb	0	; select bank0
  8230  0D70  085D               	movf	setRFSW_AdjControl@sw,w
  8231  0D71  3192  2243         	fcall	_setDimmerLights_SwOff
  8232  0D73  0008               	return
  8233  0D74                     __end_of_setRFSW_AdjControl:	
  8234                           
  8235                           	psect	text33
  8236  1DEB                     __ptext33:	
  8237 ;; *************** function _setDimmerLights_DimmingRun *****************
  8238 ;; Defined at:
  8239 ;;		line 1214 in file "../src/Dimmer_B1.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  lights          1    wreg     unsigned char 
  8242 ;;  command         1    4[COMMON] unsigned char 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  lights          1    6[COMMON] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;		None               void
  8247 ;; Registers used:
  8248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8254 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;Total ram usage:        3 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    4
  8261 ;; This function calls:
  8262 ;;		_DimmerLights_SelectPointer
  8263 ;; This function is called by:
  8264 ;;		_setRFSW_AdjControl
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _setDimmerLights_DimmingRun
  8270  1DEB                     _setDimmerLights_DimmingRun:	
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in _setDimmerLights_DimmingRun: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8274                           ;setDimmerLights_DimmingRun@lights stored from wreg
  8275  1DEB  00F6               	movwf	setDimmerLights_DimmingRun@lights
  8276                           
  8277                           ;Dimmer_B1.c: 1215: DimmerLights_SelectPointer(lights);
  8278  1DEC  0876               	movf	setDimmerLights_DimmingRun@lights,w
  8279  1DED  319F  2738         	fcall	_DimmerLights_SelectPointer
  8280                           
  8281                           ;Dimmer_B1.c: 1216: DimmerLights->DimmingRun = command == 1 ? 1 : 0;
  8282  1DEF  0874               	movf	setDimmerLights_DimmingRun@command,w
  8283  1DF0  3A01               	xorlw	1
  8284  1DF1  3000               	movlw	0
  8285  1DF2  1903               	skipnz
  8286  1DF3  3001               	movlw	1
  8287  1DF4  00F5               	movwf	??_setDimmerLights_DimmingRun
  8288  1DF5  0020               	movlb	0	; select bank0
  8289  1DF6  0A69               	incf	_DimmerLights,w
  8290  1DF7  0086               	movwf	6
  8291  1DF8  3001               	movlw	1	; select bank2/3
  8292  1DF9  0087               	movwf	7
  8293  1DFA  0EF5               	swapf	??_setDimmerLights_DimmingRun,f
  8294  1DFB  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  8295  1DFC  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  8296  1DFD  0801               	movf	1,w
  8297  1DFE  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  8298  1DFF  39BF               	andlw	-65
  8299  1E00  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  8300  1E01  0081               	movwf	1
  8301  1E02  0008               	return
  8302  1E03                     __end_of_setDimmerLights_DimmingRun:	
  8303                           
  8304                           	psect	text34
  8305  1C4A                     __ptext34:	
  8306 ;; *************** function _getRF_KeyStatus *****************
  8307 ;; Defined at:
  8308 ;;		line 167 in file "../src/RF_Control_B1.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  key             1    3[COMMON] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      unsigned char 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:        3 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    3
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_setRF_Main
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _getRF_KeyStatus
  8338  1C4A                     _getRF_KeyStatus:	
  8339                           
  8340                           ;RF_Control_B1.c: 168: char key = 0;
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _getRF_KeyStatus: [wreg+status,2]
  8344  1C4A  01F3               	clrf	getRF_KeyStatus@key
  8345                           
  8346                           ;RF_Control_B1.c: 170: key = (RA6 == 1 || RA4 == 1 || RA0 == 1) ? 1 : 0;
  8347  1C4B  01F4               	clrf	_getRF_KeyStatus$6018
  8348  1C4C  0AF4               	incf	_getRF_KeyStatus$6018,f
  8349  1C4D  0020               	movlb	0	; select bank0
  8350  1C4E  1F0C               	btfss	12,6	;volatile
  8351  1C4F  1A0C               	btfsc	12,4	;volatile
  8352  1C50  2C53               	goto	l7894
  8353  1C51  1C0C               	btfss	12,0	;volatile
  8354  1C52  01F4               	clrf	_getRF_KeyStatus$6018
  8355  1C53                     l7894:	
  8356  1C53  0874               	movf	_getRF_KeyStatus$6018,w
  8357  1C54  00F2               	movwf	??_getRF_KeyStatus
  8358  1C55  0872               	movf	??_getRF_KeyStatus,w
  8359  1C56  00F3               	movwf	getRF_KeyStatus@key
  8360                           
  8361                           ;RF_Control_B1.c: 184: return key;
  8362  1C57  0873               	movf	getRF_KeyStatus@key,w
  8363  1C58  0008               	return
  8364  1C59                     __end_of_getRF_KeyStatus:	
  8365                           
  8366                           	psect	text35
  8367  1CC7                     __ptext35:	
  8368 ;; *************** function _getBuz_GO *****************
  8369 ;; Defined at:
  8370 ;;		line 82 in file "../src/Buzzer_B1.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;  i               2    6[COMMON] int 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    2[COMMON] int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;Total ram usage:        6 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    3
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_setRF_Main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _getBuz_GO
  8400  1CC7                     _getBuz_GO:	
  8401                           
  8402                           ;Buzzer_B1.c: 83: int i = Buz1.GO;
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _getBuz_GO: [wreg+status,2+status,0]
  8406  1CC7  0021               	movlb	1	; select bank1
  8407  1CC8  0C4C               	rrf	_Buz1^(0+128),w
  8408  1CC9  3901               	andlw	1
  8409  1CCA  00F4               	movwf	??_getBuz_GO
  8410  1CCB  01F5               	clrf	??_getBuz_GO+1
  8411  1CCC  0874               	movf	??_getBuz_GO,w
  8412  1CCD  00F6               	movwf	getBuz_GO@i
  8413  1CCE  0875               	movf	??_getBuz_GO+1,w
  8414  1CCF  00F7               	movwf	getBuz_GO@i+1
  8415                           
  8416                           ;Buzzer_B1.c: 84: return i;
  8417  1CD0  0877               	movf	getBuz_GO@i+1,w
  8418  1CD1  01F3               	clrf	?_getBuz_GO+1
  8419  1CD2  07F3               	addwf	?_getBuz_GO+1,f
  8420  1CD3  0876               	movf	getBuz_GO@i,w
  8421  1CD4  01F2               	clrf	?_getBuz_GO
  8422  1CD5  07F2               	addwf	?_getBuz_GO,f
  8423  1CD6  0008               	return
  8424  1CD7                     __end_of_getBuz_GO:	
  8425                           
  8426                           	psect	text36
  8427  11A0                     __ptext36:	
  8428 ;; *************** function ___lwdiv *****************
  8429 ;; Defined at:
  8430 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  divisor         2    2[COMMON] unsigned int 
  8433 ;;  dividend        2    4[COMMON] unsigned int 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  quotient        2    7[COMMON] unsigned int 
  8436 ;;  counter         1    9[COMMON] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  2    2[COMMON] unsigned int 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;Total ram usage:        8 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    3
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_setTemp_Main
  8457 ;;		_setRF_Main
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           
  8462                           ;psect for function ___lwdiv
  8463  11A0                     ___lwdiv:	
  8464                           
  8465                           ;incstack = 0
  8466                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8467  11A0  01F7               	clrf	___lwdiv@quotient
  8468  11A1  01F8               	clrf	___lwdiv@quotient+1
  8469  11A2  0873               	movf	___lwdiv@divisor+1,w
  8470  11A3  0472               	iorwf	___lwdiv@divisor,w
  8471  11A4  1903               	skipnz
  8472  11A5  29CF               	goto	l8030
  8473  11A6  01F9               	clrf	___lwdiv@counter
  8474  11A7  0AF9               	incf	___lwdiv@counter,f
  8475  11A8                     l8018:	
  8476  11A8  1BF3               	btfsc	___lwdiv@divisor+1,7
  8477  11A9  29B4               	goto	l8020
  8478  11AA  3001               	movlw	1
  8479  11AB                     u7675:	
  8480  11AB  35F2               	lslf	___lwdiv@divisor,f
  8481  11AC  0DF3               	rlf	___lwdiv@divisor+1,f
  8482  11AD  0B89               	decfsz	9,f
  8483  11AE  29AB               	goto	u7675
  8484  11AF  3001               	movlw	1
  8485  11B0  00F6               	movwf	??___lwdiv
  8486  11B1  0876               	movf	??___lwdiv,w
  8487  11B2  07F9               	addwf	___lwdiv@counter,f
  8488  11B3  29A8               	goto	l8018
  8489  11B4                     l8020:	
  8490  11B4  3001               	movlw	1
  8491  11B5                     u7695:	
  8492  11B5  35F7               	lslf	___lwdiv@quotient,f
  8493  11B6  0DF8               	rlf	___lwdiv@quotient+1,f
  8494  11B7  0B89               	decfsz	9,f
  8495  11B8  29B5               	goto	u7695
  8496  11B9  0873               	movf	___lwdiv@divisor+1,w
  8497  11BA  0275               	subwf	___lwdiv@dividend+1,w
  8498  11BB  1D03               	skipz
  8499  11BC  29BF               	goto	u7705
  8500  11BD  0872               	movf	___lwdiv@divisor,w
  8501  11BE  0274               	subwf	___lwdiv@dividend,w
  8502  11BF                     u7705:	
  8503  11BF  1C03               	skipc
  8504  11C0  29C6               	goto	l8026
  8505  11C1  0872               	movf	___lwdiv@divisor,w
  8506  11C2  02F4               	subwf	___lwdiv@dividend,f
  8507  11C3  0873               	movf	___lwdiv@divisor+1,w
  8508  11C4  3BF5               	subwfb	___lwdiv@dividend+1,f
  8509  11C5  1477               	bsf	___lwdiv@quotient,0
  8510  11C6                     l8026:	
  8511  11C6  3001               	movlw	1
  8512  11C7                     u7715:	
  8513  11C7  36F3               	lsrf	___lwdiv@divisor+1,f
  8514  11C8  0CF2               	rrf	___lwdiv@divisor,f
  8515  11C9  0B89               	decfsz	9,f
  8516  11CA  29C7               	goto	u7715
  8517  11CB  3001               	movlw	1
  8518  11CC  02F9               	subwf	___lwdiv@counter,f
  8519  11CD  1D03               	btfss	3,2
  8520  11CE  29B4               	goto	l8020
  8521  11CF                     l8030:	
  8522  11CF  0878               	movf	___lwdiv@quotient+1,w
  8523  11D0  01F3               	clrf	?___lwdiv+1
  8524  11D1  07F3               	addwf	?___lwdiv+1,f
  8525  11D2  0877               	movf	___lwdiv@quotient,w
  8526  11D3  01F2               	clrf	?___lwdiv
  8527  11D4  07F2               	addwf	?___lwdiv,f
  8528  11D5  0008               	return
  8529  11D6                     __end_of___lwdiv:	
  8530                           
  8531                           	psect	text37
  8532  1B45                     __ptext37:	
  8533 ;; *************** function _RF_RxDisable *****************
  8534 ;; Defined at:
  8535 ;;		line 155 in file "../src/RF_Control_B1.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;		None               void
  8542 ;; Registers used:
  8543 ;;		None
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    3
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_setRF_Main
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _RF_RxDisable
  8565  1B45                     _RF_RxDisable:	
  8566                           
  8567                           ;RF_Control_B1.c: 156: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  8568                           
  8569                           ;incstack = 0
  8570                           ; Regs used in _RF_RxDisable: []
  8571  1B45  0021               	movlb	1	; select bank1
  8572  1B46  18B0               	btfsc	_RF1^(0+128),1
  8573  1B47  2B4A               	goto	l2525
  8574  1B48  1DB0               	btfss	_RF1^(0+128),3
  8575  1B49  0008               	return
  8576  1B4A                     l2525:	
  8577                           
  8578                           ;RF_Control_B1.c: 157: RF1.RxStatus = 0;
  8579  1B4A  11B0               	bcf	_RF1^(0+128),3
  8580                           
  8581                           ;RF_Control_B1.c: 158: RF1.ReceiveGO = 0;
  8582  1B4B  10B0               	bcf	_RF1^(0+128),1
  8583  1B4C  0008               	return
  8584  1B4D                     __end_of_RF_RxDisable:	
  8585                           
  8586                           	psect	text38
  8587  0A2D                     __ptext38:	
  8588 ;; *************** function _CC2500_TxData *****************
  8589 ;; Defined at:
  8590 ;;		line 32 in file "../src/CC2500_B1.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  loop_e          1    7[COMMON] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;Total ram usage:        2 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    5
  8611 ;; This function calls:
  8612 ;;		_CC2500_WriteByte
  8613 ;;		_CC2500_WriteCommand
  8614 ;;		_RF_Timeout_Counter
  8615 ;;		_setRF_TimeoutCleared
  8616 ;; This function is called by:
  8617 ;;		_setRF_Main
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           
  8622                           ;psect for function _CC2500_TxData
  8623  0A2D                     _CC2500_TxData:	
  8624                           
  8625                           ;CC2500_B1.c: 33: unsigned char loop_e;
  8626                           ;CC2500_B1.c: 35: CC2500_WriteCommand(0x36);
  8627                           
  8628                           ;incstack = 0
  8629                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8630  0A2D  3036               	movlw	54
  8631  0A2E  319E  261C  318A   	fcall	_CC2500_WriteCommand
  8632                           
  8633                           ;CC2500_B1.c: 36: CC2500_WriteCommand(0x3B);
  8634  0A31  303B               	movlw	59
  8635  0A32  319E  261C  318A   	fcall	_CC2500_WriteCommand
  8636                           
  8637                           ;CC2500_B1.c: 38: RC4 = 0;
  8638  0A35  0020               	movlb	0	; select bank0
  8639  0A36  120E               	bcf	14,4	;volatile
  8640                           
  8641                           ;CC2500_B1.c: 39: SPI0Buffer = 0x3F + 0x40;
  8642  0A37  307F               	movlw	127
  8643  0A38  00F6               	movwf	??_CC2500_TxData
  8644  0A39  0876               	movf	??_CC2500_TxData,w
  8645  0A3A  00EA               	movwf	_SPI0Buffer
  8646                           
  8647                           ;CC2500_B1.c: 40: while (RC2 == 1 && RF1.Timeout == 0) {
  8648  0A3B  2A3F               	goto	l9750
  8649  0A3C                     l9748:	
  8650                           
  8651                           ;CC2500_B1.c: 41: RF_Timeout_Counter();
  8652  0A3C  319D  256A  318A   	fcall	_RF_Timeout_Counter
  8653  0A3F                     l9750:	
  8654  0A3F  0020               	movlb	0	; select bank0
  8655  0A40  1D0E               	btfss	14,2	;volatile
  8656  0A41  2A45               	goto	l9754
  8657  0A42  0021               	movlb	1	; select bank1
  8658  0A43  1F31               	btfss	(_RF1^(0+128)+1),6
  8659  0A44  2A3C               	goto	l9748
  8660  0A45                     l9754:	
  8661                           
  8662                           ;CC2500_B1.c: 42: };
  8663                           ;CC2500_B1.c: 43: setRF_TimeoutCleared();
  8664  0A45  319B  230A  318A   	fcall	_setRF_TimeoutCleared
  8665                           
  8666                           ;CC2500_B1.c: 45: CC2500_WriteByte();
  8667  0A48  319D  2541  318A   	fcall	_CC2500_WriteByte
  8668                           
  8669                           ;CC2500_B1.c: 46: SPI0Buffer = Tx_Length;
  8670  0A4B  0020               	movlb	0	; select bank0
  8671  0A4C  086C               	movf	_Tx_Length,w
  8672  0A4D  00F6               	movwf	??_CC2500_TxData
  8673  0A4E  0876               	movf	??_CC2500_TxData,w
  8674  0A4F  00EA               	movwf	_SPI0Buffer
  8675                           
  8676                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  8677  0A50  319D  2541  318A   	fcall	_CC2500_WriteByte
  8678                           
  8679                           ;CC2500_B1.c: 48: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  8680  0A53  01F7               	clrf	CC2500_TxData@loop_e
  8681  0A54                     l9768:	
  8682  0A54  0020               	movlb	0	; select bank0
  8683  0A55  086C               	movf	_Tx_Length,w
  8684  0A56  0277               	subwf	CC2500_TxData@loop_e,w
  8685  0A57  1803               	btfsc	3,0
  8686  0A58  2A6B               	goto	l279
  8687                           
  8688                           ;CC2500_B1.c: 49: SPI0Buffer = RF_Data[loop_e];
  8689  0A59  0877               	movf	CC2500_TxData@loop_e,w
  8690  0A5A  3E20               	addlw	_RF_Data& (0+255)
  8691  0A5B  0086               	movwf	6
  8692  0A5C  3001               	movlw	1	; select bank2/3
  8693  0A5D  0087               	movwf	7
  8694  0A5E  0801               	movf	1,w
  8695  0A5F  00F6               	movwf	??_CC2500_TxData
  8696  0A60  0876               	movf	??_CC2500_TxData,w
  8697  0A61  0020               	movlb	0	; select bank0
  8698  0A62  00EA               	movwf	_SPI0Buffer
  8699                           
  8700                           ;CC2500_B1.c: 50: CC2500_WriteByte();
  8701  0A63  319D  2541  318A   	fcall	_CC2500_WriteByte
  8702  0A66  3001               	movlw	1
  8703  0A67  00F6               	movwf	??_CC2500_TxData
  8704  0A68  0876               	movf	??_CC2500_TxData,w
  8705  0A69  07F7               	addwf	CC2500_TxData@loop_e,f
  8706  0A6A  2A54               	goto	l9768
  8707  0A6B                     l279:	
  8708                           
  8709                           ;CC2500_B1.c: 51: }
  8710                           ;CC2500_B1.c: 52: RC4 = 1;
  8711  0A6B  160E               	bsf	14,4	;volatile
  8712                           
  8713                           ;CC2500_B1.c: 53: CC2500_WriteCommand(0x35);
  8714  0A6C  3035               	movlw	53
  8715  0A6D  319E  261C  318A   	fcall	_CC2500_WriteCommand
  8716                           
  8717                           ;CC2500_B1.c: 54: while (RB0 == 0 && RF1.Timeout == 0) {
  8718  0A70  2A74               	goto	l9774
  8719  0A71                     l9772:	
  8720                           
  8721                           ;CC2500_B1.c: 55: RF_Timeout_Counter();
  8722  0A71  319D  256A  318A   	fcall	_RF_Timeout_Counter
  8723  0A74                     l9774:	
  8724  0A74  0020               	movlb	0	; select bank0
  8725  0A75  180D               	btfsc	13,0	;volatile
  8726  0A76  2A7A               	goto	l9778
  8727  0A77  0021               	movlb	1	; select bank1
  8728  0A78  1F31               	btfss	(_RF1^(0+128)+1),6
  8729  0A79  2A71               	goto	l9772
  8730  0A7A                     l9778:	
  8731                           
  8732                           ;CC2500_B1.c: 56: };
  8733                           ;CC2500_B1.c: 57: setRF_TimeoutCleared();
  8734  0A7A  319B  230A  318A   	fcall	_setRF_TimeoutCleared
  8735                           
  8736                           ;CC2500_B1.c: 59: while (RB0 == 1 && RF1.Timeout == 0) {
  8737  0A7D  2A81               	goto	l9782
  8738  0A7E                     l9780:	
  8739                           
  8740                           ;CC2500_B1.c: 60: RF_Timeout_Counter();
  8741  0A7E  319D  256A  318A   	fcall	_RF_Timeout_Counter
  8742  0A81                     l9782:	
  8743  0A81  0020               	movlb	0	; select bank0
  8744  0A82  1C0D               	btfss	13,0	;volatile
  8745  0A83  2A87               	goto	l9786
  8746  0A84  0021               	movlb	1	; select bank1
  8747  0A85  1F31               	btfss	(_RF1^(0+128)+1),6
  8748  0A86  2A7E               	goto	l9780
  8749  0A87                     l9786:	
  8750                           
  8751                           ;CC2500_B1.c: 61: };
  8752                           ;CC2500_B1.c: 62: setRF_TimeoutCleared();
  8753  0A87  319B  230A  318A   	fcall	_setRF_TimeoutCleared
  8754                           
  8755                           ;CC2500_B1.c: 64: CC2500_WriteCommand(0x36);
  8756  0A8A  3036               	movlw	54
  8757  0A8B  319E  261C  318A   	fcall	_CC2500_WriteCommand
  8758                           
  8759                           ;CC2500_B1.c: 65: CC2500_WriteCommand(0x3B);
  8760  0A8E  303B               	movlw	59
  8761  0A8F  319E  261C         	fcall	_CC2500_WriteCommand
  8762                           
  8763                           ;CC2500_B1.c: 67: Transceive_OK = 1;
  8764  0A91  14FA               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  8765  0A92  0008               	return
  8766  0A93                     __end_of_CC2500_TxData:	
  8767                           
  8768                           	psect	text39
  8769  0835                     __ptext39:	
  8770 ;; *************** function _CC2500_RxData *****************
  8771 ;; Defined at:
  8772 ;;		line 73 in file "../src/CC2500_B1.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;		None
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  loop_f          1    7[COMMON] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;		None               void
  8779 ;; Registers used:
  8780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;Total ram usage:        2 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    5
  8793 ;; This function calls:
  8794 ;;		_CC2500_ReadByte
  8795 ;;		_CC2500_ReadStatus
  8796 ;;		_CC2500_WriteByte
  8797 ;;		_CC2500_WriteCommand
  8798 ;;		_RF_Timeout_Counter
  8799 ;;		_setRF_TimeoutCleared
  8800 ;; This function is called by:
  8801 ;;		_setRF_Main
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function _CC2500_RxData
  8807  0835                     _CC2500_RxData:	
  8808                           
  8809                           ;CC2500_B1.c: 74: unsigned char loop_f;
  8810                           ;CC2500_B1.c: 78: if (RB0 == 0) {
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8814  0835  0020               	movlb	0	; select bank0
  8815  0836  180D               	btfsc	13,0	;volatile
  8816  0837  0008               	return
  8817                           
  8818                           ;CC2500_B1.c: 87: CC2500_ReadStatus(0x3B);
  8819  0838  303B               	movlw	59
  8820  0839  3190  20DE  3188   	fcall	_CC2500_ReadStatus
  8821                           
  8822                           ;CC2500_B1.c: 89: if (s_data != 0) {
  8823  083C  0021               	movlb	1	; select bank1
  8824  083D  0860               	movf	_s_data^(0+128),w
  8825  083E  1903               	btfsc	3,2
  8826  083F  0008               	return
  8827                           
  8828                           ;CC2500_B1.c: 90: RC4 = 0;
  8829  0840  0020               	movlb	0	; select bank0
  8830  0841  120E               	bcf	14,4	;volatile
  8831                           
  8832                           ;CC2500_B1.c: 91: SPI0Buffer = 0x3F + 0xC0;
  8833  0842  30FF               	movlw	255
  8834  0843  00F6               	movwf	??_CC2500_RxData
  8835  0844  0876               	movf	??_CC2500_RxData,w
  8836  0845  00EA               	movwf	_SPI0Buffer
  8837                           
  8838                           ;CC2500_B1.c: 93: while (RC2 == 1 && RF1.Timeout == 0) {
  8839  0846  284A               	goto	l9806
  8840  0847                     l9804:	
  8841                           
  8842                           ;CC2500_B1.c: 94: RF_Timeout_Counter();
  8843  0847  319D  256A  3188   	fcall	_RF_Timeout_Counter
  8844  084A                     l9806:	
  8845  084A  0020               	movlb	0	; select bank0
  8846  084B  1D0E               	btfss	14,2	;volatile
  8847  084C  2850               	goto	l9810
  8848  084D  0021               	movlb	1	; select bank1
  8849  084E  1F31               	btfss	(_RF1^(0+128)+1),6
  8850  084F  2847               	goto	l9804
  8851  0850                     l9810:	
  8852                           
  8853                           ;CC2500_B1.c: 95: };
  8854                           ;CC2500_B1.c: 96: setRF_TimeoutCleared();
  8855  0850  319B  230A  3188   	fcall	_setRF_TimeoutCleared
  8856                           
  8857                           ;CC2500_B1.c: 98: CC2500_WriteByte();
  8858  0853  319D  2541  3188   	fcall	_CC2500_WriteByte
  8859                           
  8860                           ;CC2500_B1.c: 99: CC2500_ReadByte();
  8861  0856  319D  25D4  3188   	fcall	_CC2500_ReadByte
  8862                           
  8863                           ;CC2500_B1.c: 100: Rx_Length = SPI0Buffer;
  8864  0859  0020               	movlb	0	; select bank0
  8865  085A  086A               	movf	_SPI0Buffer,w
  8866  085B  00F6               	movwf	??_CC2500_RxData
  8867  085C  0876               	movf	??_CC2500_RxData,w
  8868  085D  0021               	movlb	1	; select bank1
  8869  085E  00DC               	movwf	_Rx_Length^(0+128)
  8870                           
  8871                           ;CC2500_B1.c: 101: for (loop_f = 0; loop_f < Rx_Length; loop_f++) {
  8872  085F  01F7               	clrf	CC2500_RxData@loop_f
  8873  0860                     l9826:	
  8874  0860  0021               	movlb	1	; select bank1
  8875  0861  085C               	movf	_Rx_Length^(0+128),w
  8876  0862  0277               	subwf	CC2500_RxData@loop_f,w
  8877  0863  1803               	btfsc	3,0
  8878  0864  2877               	goto	l9828
  8879                           
  8880                           ;CC2500_B1.c: 102: CC2500_ReadByte();
  8881  0865  319D  25D4  3188   	fcall	_CC2500_ReadByte
  8882                           
  8883                           ;CC2500_B1.c: 103: RF_Data[loop_f] = SPI0Buffer;
  8884  0868  0020               	movlb	0	; select bank0
  8885  0869  086A               	movf	_SPI0Buffer,w
  8886  086A  00F6               	movwf	??_CC2500_RxData
  8887  086B  0877               	movf	CC2500_RxData@loop_f,w
  8888  086C  3E20               	addlw	_RF_Data& (0+255)
  8889  086D  0086               	movwf	6
  8890  086E  3001               	movlw	1	; select bank2/3
  8891  086F  0087               	movwf	7
  8892  0870  0876               	movf	??_CC2500_RxData,w
  8893  0871  0081               	movwf	1
  8894  0872  3001               	movlw	1
  8895  0873  00F6               	movwf	??_CC2500_RxData
  8896  0874  0876               	movf	??_CC2500_RxData,w
  8897  0875  07F7               	addwf	CC2500_RxData@loop_f,f
  8898  0876  2860               	goto	l9826
  8899  0877                     l9828:	
  8900                           
  8901                           ;CC2500_B1.c: 104: }
  8902                           ;CC2500_B1.c: 105: CC2500_ReadByte();
  8903  0877  319D  25D4  3188   	fcall	_CC2500_ReadByte
  8904                           
  8905                           ;CC2500_B1.c: 106: RSSI = SPI0Buffer;
  8906  087A  0020               	movlb	0	; select bank0
  8907  087B  086A               	movf	_SPI0Buffer,w
  8908  087C  00F6               	movwf	??_CC2500_RxData
  8909  087D  0876               	movf	??_CC2500_RxData,w
  8910  087E  0021               	movlb	1	; select bank1
  8911  087F  00DB               	movwf	_RSSI^(0+128)
  8912                           
  8913                           ;CC2500_B1.c: 107: CC2500_ReadByte();
  8914  0880  319D  25D4  3188   	fcall	_CC2500_ReadByte
  8915                           
  8916                           ;CC2500_B1.c: 108: CRC = SPI0Buffer;
  8917  0883  0020               	movlb	0	; select bank0
  8918  0884  086A               	movf	_SPI0Buffer,w
  8919  0885  00F6               	movwf	??_CC2500_RxData
  8920  0886  0876               	movf	??_CC2500_RxData,w
  8921  0887  0021               	movlb	1	; select bank1
  8922  0888  00D8               	movwf	_CRC^(0+128)
  8923                           
  8924                           ;CC2500_B1.c: 109: RC4 = 1;
  8925  0889  0020               	movlb	0	; select bank0
  8926  088A  160E               	bsf	14,4	;volatile
  8927                           
  8928                           ;CC2500_B1.c: 110: if (CRC & 0x80)
  8929  088B  0021               	movlb	1	; select bank1
  8930  088C  1BD8               	btfsc	_CRC^(0+128),7
  8931                           
  8932                           ;CC2500_B1.c: 111: Receive_OK = 1;
  8933  088D  147A               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  8934                           
  8935                           ;CC2500_B1.c: 113: RF1.RxStatus = 0;
  8936  088E  11B0               	bcf	_RF1^(0+128),3
  8937                           
  8938                           ;CC2500_B1.c: 114: RF1.ReceiveGO = 1;
  8939  088F  14B0               	bsf	_RF1^(0+128),1
  8940                           
  8941                           ;CC2500_B1.c: 115: CC2500_WriteCommand(0x36);
  8942  0890  3036               	movlw	54
  8943  0891  319E  261C  3188   	fcall	_CC2500_WriteCommand
  8944                           
  8945                           ;CC2500_B1.c: 116: CC2500_WriteCommand(0x3A);
  8946  0894  303A               	movlw	58
  8947  0895  319E  261C         	fcall	_CC2500_WriteCommand
  8948  0897  0021               	movlb	1	; select bank1
  8949  0898  0008               	return
  8950  0899                     __end_of_CC2500_RxData:	
  8951                           
  8952                           	psect	text40
  8953  10DE                     __ptext40:	
  8954 ;; *************** function _CC2500_ReadStatus *****************
  8955 ;; Defined at:
  8956 ;;		line 308 in file "../src/CC2500_B1.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  status_addr     1    wreg     unsigned char 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  status_addr     1    5[COMMON] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;		None               void
  8963 ;; Registers used:
  8964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:        2 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    4
  8977 ;; This function calls:
  8978 ;;		_CC2500_ReadByte
  8979 ;;		_CC2500_WriteByte
  8980 ;;		_RF_Timeout_Counter
  8981 ;;		_setRF_TimeoutCleared
  8982 ;; This function is called by:
  8983 ;;		_CC2500_RxData
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _CC2500_ReadStatus
  8989  10DE                     _CC2500_ReadStatus:	
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in _CC2500_ReadStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8993                           ;CC2500_ReadStatus@status_addr stored from wreg
  8994  10DE  00F5               	movwf	CC2500_ReadStatus@status_addr
  8995                           
  8996                           ;CC2500_B1.c: 309: RC4 = 0;
  8997  10DF  0020               	movlb	0	; select bank0
  8998  10E0  120E               	bcf	14,4	;volatile
  8999                           
  9000                           ;CC2500_B1.c: 310: SPI0Buffer = status_addr + 0xC0;
  9001  10E1  0875               	movf	CC2500_ReadStatus@status_addr,w
  9002  10E2  3EC0               	addlw	192
  9003  10E3  00F4               	movwf	??_CC2500_ReadStatus
  9004  10E4  0874               	movf	??_CC2500_ReadStatus,w
  9005  10E5  00EA               	movwf	_SPI0Buffer
  9006                           
  9007                           ;CC2500_B1.c: 312: while (RC2 == 1 && RF1.Timeout == 0) {
  9008  10E6  28EA               	goto	l9564
  9009  10E7                     l9562:	
  9010                           
  9011                           ;CC2500_B1.c: 313: RF_Timeout_Counter();
  9012  10E7  319D  256A  3190   	fcall	_RF_Timeout_Counter
  9013  10EA                     l9564:	
  9014  10EA  0020               	movlb	0	; select bank0
  9015  10EB  1D0E               	btfss	14,2	;volatile
  9016  10EC  28F0               	goto	l9568
  9017  10ED  0021               	movlb	1	; select bank1
  9018  10EE  1F31               	btfss	(_RF1^(0+128)+1),6
  9019  10EF  28E7               	goto	l9562
  9020  10F0                     l9568:	
  9021                           
  9022                           ;CC2500_B1.c: 314: };
  9023                           ;CC2500_B1.c: 315: setRF_TimeoutCleared();
  9024  10F0  319B  230A  3190   	fcall	_setRF_TimeoutCleared
  9025                           
  9026                           ;CC2500_B1.c: 317: CC2500_WriteByte();
  9027  10F3  319D  2541  3190   	fcall	_CC2500_WriteByte
  9028                           
  9029                           ;CC2500_B1.c: 318: CC2500_ReadByte();
  9030  10F6  319D  25D4         	fcall	_CC2500_ReadByte
  9031                           
  9032                           ;CC2500_B1.c: 319: RC4 = 1;
  9033  10F8  0020               	movlb	0	; select bank0
  9034  10F9  160E               	bsf	14,4	;volatile
  9035                           
  9036                           ;CC2500_B1.c: 321: s_data = SPI0Buffer;
  9037  10FA  086A               	movf	_SPI0Buffer,w
  9038  10FB  00F4               	movwf	??_CC2500_ReadStatus
  9039  10FC  0874               	movf	??_CC2500_ReadStatus,w
  9040  10FD  0021               	movlb	1	; select bank1
  9041  10FE  00E0               	movwf	_s_data^(0+128)
  9042  10FF  0008               	return
  9043  1100                     __end_of_CC2500_ReadStatus:	
  9044                           
  9045                           	psect	text41
  9046  1DD4                     __ptext41:	
  9047 ;; *************** function _CC2500_ReadByte *****************
  9048 ;; Defined at:
  9049 ;;		line 242 in file "../src/CC2500_B1.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;  loop_b          1    3[COMMON] unsigned char 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;		None               void
  9056 ;; Registers used:
  9057 ;;		wreg, status,2, status,0
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    3
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_CC2500_RxData
  9074 ;;		_CC2500_ReadStatus
  9075 ;;		_CC2500_ReadREG
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           
  9080                           ;psect for function _CC2500_ReadByte
  9081  1DD4                     _CC2500_ReadByte:	
  9082                           
  9083                           ;CC2500_B1.c: 243: unsigned char loop_b;
  9084                           ;CC2500_B1.c: 244: for (loop_b = 0; loop_b < 8; loop_b++) {
  9085                           
  9086                           ;incstack = 0
  9087                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  9088  1DD4  01F3               	clrf	CC2500_ReadByte@loop_b
  9089  1DD5                     L2:	
  9090  1DD5  3008               	movlw	8
  9091  1DD6  0273               	subwf	CC2500_ReadByte@loop_b,w
  9092  1DD7  1803               	btfsc	3,0
  9093  1DD8  0008               	return
  9094                           
  9095                           ;CC2500_B1.c: 245: RC1 = 1;
  9096  1DD9  0020               	movlb	0	; select bank0
  9097  1DDA  148E               	bsf	14,1	;volatile
  9098                           
  9099                           ;CC2500_B1.c: 246: SPI0Buffer <<= 1;
  9100  1DDB  1003               	clrc
  9101  1DDC  0DEA               	rlf	_SPI0Buffer,f
  9102                           
  9103                           ;CC2500_B1.c: 247: if (RC2 == 1)
  9104  1DDD  1D0E               	btfss	14,2	;volatile
  9105  1DDE  2DE1               	goto	l7070
  9106                           
  9107                           ;CC2500_B1.c: 248: SPI0Buffer |= 0x01;
  9108  1DDF  146A               	bsf	_SPI0Buffer,0
  9109  1DE0  2DE5               	goto	l7072
  9110  1DE1                     l7070:	
  9111                           
  9112                           ;CC2500_B1.c: 249: else
  9113                           ;CC2500_B1.c: 250: SPI0Buffer &= 0xFE;
  9114  1DE1  30FE               	movlw	254
  9115  1DE2  00F2               	movwf	??_CC2500_ReadByte
  9116  1DE3  0872               	movf	??_CC2500_ReadByte,w
  9117  1DE4  05EA               	andwf	_SPI0Buffer,f
  9118  1DE5                     l7072:	
  9119                           
  9120                           ;CC2500_B1.c: 251: RC1 = 0;
  9121  1DE5  108E               	bcf	14,1	;volatile
  9122  1DE6  3001               	movlw	1
  9123  1DE7  00F2               	movwf	??_CC2500_ReadByte
  9124  1DE8  0872               	movf	??_CC2500_ReadByte,w
  9125  1DE9  07F3               	addwf	CC2500_ReadByte@loop_b,f
  9126  1DEA  2DD5               	goto	L2
  9127  1DEB                     __end_of_CC2500_ReadByte:	
  9128                           
  9129                           	psect	text42
  9130  1D7F                     __ptext42:	
  9131 ;; *************** function _CC2500_PowerOnInitial *****************
  9132 ;; Defined at:
  9133 ;;		line 126 in file "../src/CC2500_B1.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;		None               void
  9140 ;; Registers used:
  9141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    6
  9154 ;; This function calls:
  9155 ;;		_CC2500_ClearRXFIFO
  9156 ;;		_CC2500_ClearTXFIFO
  9157 ;;		_CC2500_FrequencyCabr
  9158 ;;		_CC2500_InitPATable
  9159 ;;		_CC2500_InitSetREG
  9160 ;;		_CC2500_PowerRST
  9161 ;;		_CC2500_SIDLEMode
  9162 ;; This function is called by:
  9163 ;;		_main
  9164 ;;		_setRF_Main
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           
  9169                           ;psect for function _CC2500_PowerOnInitial
  9170  1D7F                     _CC2500_PowerOnInitial:	
  9171                           
  9172                           ;CC2500_B1.c: 127: CC2500_PowerRST();
  9173                           
  9174                           ;incstack = 0
  9175                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9176  1D7F  3193  23F0  319D   	fcall	_CC2500_PowerRST
  9177                           
  9178                           ;CC2500_B1.c: 128: CC2500_InitSetREG();
  9179  1D82  3191  2176  319D   	fcall	_CC2500_InitSetREG
  9180                           
  9181                           ;CC2500_B1.c: 129: CC2500_InitPATable();
  9182  1D85  319E  269E  319D   	fcall	_CC2500_InitPATable
  9183                           
  9184                           ;CC2500_B1.c: 130: CC2500_ClearTXFIFO();
  9185  1D88  319B  2312  319D   	fcall	_CC2500_ClearTXFIFO
  9186                           
  9187                           ;CC2500_B1.c: 131: CC2500_ClearRXFIFO();
  9188  1D8B  319B  230E  319D   	fcall	_CC2500_ClearRXFIFO
  9189                           
  9190                           ;CC2500_B1.c: 132: CC2500_FrequencyCabr();
  9191  1D8E  319B  238B  319D   	fcall	_CC2500_FrequencyCabr
  9192                           
  9193                           ;CC2500_B1.c: 133: CC2500_SIDLEMode();
  9194  1D91  319B  2316         	fcall	_CC2500_SIDLEMode
  9195  1D93  0008               	return
  9196  1D94                     __end_of_CC2500_PowerOnInitial:	
  9197                           
  9198                           	psect	text43
  9199  1B16                     __ptext43:	
  9200 ;; *************** function _CC2500_SIDLEMode *****************
  9201 ;; Defined at:
  9202 ;;		line 216 in file "../src/CC2500_B1.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;		None               void
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    5
  9223 ;; This function calls:
  9224 ;;		_CC2500_WriteCommand
  9225 ;; This function is called by:
  9226 ;;		_CC2500_PowerOnInitial
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           
  9231                           ;psect for function _CC2500_SIDLEMode
  9232  1B16                     _CC2500_SIDLEMode:	
  9233                           
  9234                           ;CC2500_B1.c: 217: CC2500_WriteCommand(0x36);
  9235                           
  9236                           ;incstack = 0
  9237                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9238  1B16  3036               	movlw	54
  9239  1B17  319E  261C         	fcall	_CC2500_WriteCommand
  9240  1B19  0008               	return
  9241  1B1A                     __end_of_CC2500_SIDLEMode:	
  9242                           
  9243                           	psect	text44
  9244  13F0                     __ptext44:	
  9245 ;; *************** function _CC2500_PowerRST *****************
  9246 ;; Defined at:
  9247 ;;		line 139 in file "../src/CC2500_B1.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;		None               void
  9254 ;; Registers used:
  9255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;Total ram usage:        1 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    4
  9268 ;; This function calls:
  9269 ;;		_CC2500_WriteByte
  9270 ;;		_DelayTime_1us
  9271 ;;		_RF_Timeout_Counter
  9272 ;;		_setRF_TimeoutCleared
  9273 ;; This function is called by:
  9274 ;;		_CC2500_PowerOnInitial
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _CC2500_PowerRST
  9280  13F0                     _CC2500_PowerRST:	
  9281                           
  9282                           ;CC2500_B1.c: 140: RC1 = 0;
  9283                           
  9284                           ;incstack = 0
  9285                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9286  13F0  0020               	movlb	0	; select bank0
  9287  13F1  108E               	bcf	14,1	;volatile
  9288                           
  9289                           ;CC2500_B1.c: 141: RC0 = 0;
  9290  13F2  100E               	bcf	14,0	;volatile
  9291                           
  9292                           ;CC2500_B1.c: 142: RC4 = 1;
  9293  13F3  160E               	bsf	14,4	;volatile
  9294                           
  9295                           ;CC2500_B1.c: 143: DelayTime_1us(10);
  9296  13F4  300A               	movlw	10
  9297  13F5  00F2               	movwf	DelayTime_1us@count
  9298  13F6  3000               	movlw	0
  9299  13F7  00F3               	movwf	DelayTime_1us@count+1
  9300  13F8  3191  2100  3193   	fcall	_DelayTime_1us
  9301                           
  9302                           ;CC2500_B1.c: 144: RC4 = 0;
  9303  13FB  0020               	movlb	0	; select bank0
  9304  13FC  120E               	bcf	14,4	;volatile
  9305                           
  9306                           ;CC2500_B1.c: 145: DelayTime_1us(10);
  9307  13FD  300A               	movlw	10
  9308  13FE  00F2               	movwf	DelayTime_1us@count
  9309  13FF  3000               	movlw	0
  9310  1400  00F3               	movwf	DelayTime_1us@count+1
  9311  1401  3191  2100  3193   	fcall	_DelayTime_1us
  9312                           
  9313                           ;CC2500_B1.c: 146: RC4 = 1;
  9314  1404  0020               	movlb	0	; select bank0
  9315  1405  160E               	bsf	14,4	;volatile
  9316                           
  9317                           ;CC2500_B1.c: 147: DelayTime_1us(40);
  9318  1406  3028               	movlw	40
  9319  1407  00F2               	movwf	DelayTime_1us@count
  9320  1408  3000               	movlw	0
  9321  1409  00F3               	movwf	DelayTime_1us@count+1
  9322  140A  3191  2100  3193   	fcall	_DelayTime_1us
  9323                           
  9324                           ;CC2500_B1.c: 148: RC4 = 0;
  9325  140D  0020               	movlb	0	; select bank0
  9326  140E  120E               	bcf	14,4	;volatile
  9327                           
  9328                           ;CC2500_B1.c: 149: SPI0Buffer = 0x30;
  9329  140F  3030               	movlw	48
  9330  1410  00F8               	movwf	??_CC2500_PowerRST
  9331  1411  0878               	movf	??_CC2500_PowerRST,w
  9332  1412  00EA               	movwf	_SPI0Buffer
  9333                           
  9334                           ;CC2500_B1.c: 150: while (RC2 == 1 && RF1.Timeout == 0) {
  9335  1413  2C17               	goto	l9592
  9336  1414                     l9590:	
  9337                           
  9338                           ;CC2500_B1.c: 151: RF_Timeout_Counter();
  9339  1414  319D  256A  3193   	fcall	_RF_Timeout_Counter
  9340  1417                     l9592:	
  9341  1417  0020               	movlb	0	; select bank0
  9342  1418  1D0E               	btfss	14,2	;volatile
  9343  1419  2C1D               	goto	l9596
  9344  141A  0021               	movlb	1	; select bank1
  9345  141B  1F31               	btfss	(_RF1^(0+128)+1),6
  9346  141C  2C14               	goto	l9590
  9347  141D                     l9596:	
  9348                           
  9349                           ;CC2500_B1.c: 152: };
  9350                           ;CC2500_B1.c: 153: setRF_TimeoutCleared();
  9351  141D  319B  230A  3193   	fcall	_setRF_TimeoutCleared
  9352                           
  9353                           ;CC2500_B1.c: 154: CC2500_WriteByte();
  9354  1420  319D  2541  3193   	fcall	_CC2500_WriteByte
  9355                           
  9356                           ;CC2500_B1.c: 155: while (RC2 == 1 && RF1.Timeout == 0) {
  9357  1423  2C27               	goto	l9602
  9358  1424                     l9600:	
  9359                           
  9360                           ;CC2500_B1.c: 156: RF_Timeout_Counter();
  9361  1424  319D  256A  3193   	fcall	_RF_Timeout_Counter
  9362  1427                     l9602:	
  9363  1427  0020               	movlb	0	; select bank0
  9364  1428  1D0E               	btfss	14,2	;volatile
  9365  1429  2C2D               	goto	l9606
  9366  142A  0021               	movlb	1	; select bank1
  9367  142B  1F31               	btfss	(_RF1^(0+128)+1),6
  9368  142C  2C24               	goto	l9600
  9369  142D                     l9606:	
  9370                           
  9371                           ;CC2500_B1.c: 157: };
  9372                           ;CC2500_B1.c: 158: setRF_TimeoutCleared();
  9373  142D  319B  230A         	fcall	_setRF_TimeoutCleared
  9374                           
  9375                           ;CC2500_B1.c: 159: RC0 = 0;
  9376  142F  0020               	movlb	0	; select bank0
  9377  1430  100E               	bcf	14,0	;volatile
  9378                           
  9379                           ;CC2500_B1.c: 160: RC4 = 1;
  9380  1431  160E               	bsf	14,4	;volatile
  9381  1432  0008               	return
  9382  1433                     __end_of_CC2500_PowerRST:	
  9383                           
  9384                           	psect	text45
  9385  1176                     __ptext45:	
  9386 ;; *************** function _CC2500_InitSetREG *****************
  9387 ;; Defined at:
  9388 ;;		line 166 in file "../src/CC2500_B1.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;		None
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;  loop_c          1    2[BANK0 ] unsigned char 
  9393 ;;  temp2           1    1[BANK0 ] unsigned char 
  9394 ;;  temp1           1    0[BANK0 ] unsigned char 
  9395 ;; Return value:  Size  Location     Type
  9396 ;;		None               void
  9397 ;; Registers used:
  9398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;Total ram usage:        4 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    5
  9411 ;; This function calls:
  9412 ;;		_CC2500_WriteREG
  9413 ;; This function is called by:
  9414 ;;		_CC2500_PowerOnInitial
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           
  9419                           ;psect for function _CC2500_InitSetREG
  9420  1176                     _CC2500_InitSetREG:	
  9421                           
  9422                           ;CC2500_B1.c: 167: unsigned char loop_c;
  9423                           ;CC2500_B1.c: 168: unsigned char temp1, temp2;
  9424                           ;CC2500_B1.c: 170: for (loop_c = 0; loop_c < 47; loop_c++) {
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9428  1176  0020               	movlb	0	; select bank0
  9429  1177  01A2               	clrf	CC2500_InitSetREG@loop_c
  9430  1178                     L3:	
  9431  1178  302F               	movlw	47
  9432  1179  0222               	subwf	CC2500_InitSetREG@loop_c,w
  9433  117A  1803               	btfsc	3,0
  9434  117B  0008               	return
  9435                           
  9436                           ;CC2500_B1.c: 171: temp1 = CC2500_registers_address[loop_c];
  9437  117C  0822               	movf	CC2500_InitSetREG@loop_c,w
  9438  117D  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  9439  117E  0084               	movwf	4
  9440  117F  3090               	movlw	high (_CC2500_registers_address| (0+32768))
  9441  1180  1803               	skipnc
  9442  1181  3E01               	addlw	1
  9443  1182  0085               	movwf	5
  9444  1183  0800               	movf	0,w	;code access
  9445  1184  00F7               	movwf	??_CC2500_InitSetREG
  9446  1185  0877               	movf	??_CC2500_InitSetREG,w
  9447  1186  00A0               	movwf	CC2500_InitSetREG@temp1
  9448                           
  9449                           ;CC2500_B1.c: 172: temp2 = CC2500_rfSettings[loop_c];
  9450  1187  0822               	movf	CC2500_InitSetREG@loop_c,w
  9451  1188  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  9452  1189  0084               	movwf	4
  9453  118A  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
  9454  118B  1803               	skipnc
  9455  118C  3E01               	addlw	1
  9456  118D  0085               	movwf	5
  9457  118E  0800               	movf	0,w	;code access
  9458  118F  00F7               	movwf	??_CC2500_InitSetREG
  9459  1190  0877               	movf	??_CC2500_InitSetREG,w
  9460  1191  00A1               	movwf	CC2500_InitSetREG@temp2
  9461                           
  9462                           ;CC2500_B1.c: 174: CC2500_WriteREG(temp1, temp2);
  9463  1192  0821               	movf	CC2500_InitSetREG@temp2,w
  9464  1193  00F7               	movwf	??_CC2500_InitSetREG
  9465  1194  0877               	movf	??_CC2500_InitSetREG,w
  9466  1195  00F4               	movwf	CC2500_WriteREG@value
  9467  1196  0820               	movf	CC2500_InitSetREG@temp1,w
  9468  1197  319F  277A  3191   	fcall	_CC2500_WriteREG
  9469  119A  3001               	movlw	1
  9470  119B  00F7               	movwf	??_CC2500_InitSetREG
  9471  119C  0877               	movf	??_CC2500_InitSetREG,w
  9472  119D  0020               	movlb	0	; select bank0
  9473  119E  07A2               	addwf	CC2500_InitSetREG@loop_c,f
  9474  119F  2978               	goto	L3
  9475  11A0                     __end_of_CC2500_InitSetREG:	
  9476                           
  9477                           	psect	text46
  9478  1E9E                     __ptext46:	
  9479 ;; *************** function _CC2500_InitPATable *****************
  9480 ;; Defined at:
  9481 ;;		line 181 in file "../src/CC2500_B1.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  loop_d          1    9[COMMON] unsigned char 
  9486 ;;  temp            1    8[COMMON] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;		None               void
  9489 ;; Registers used:
  9490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;Total ram usage:        3 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    5
  9503 ;; This function calls:
  9504 ;;		_CC2500_WriteREG
  9505 ;; This function is called by:
  9506 ;;		_CC2500_PowerOnInitial
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           
  9511                           ;psect for function _CC2500_InitPATable
  9512  1E9E                     _CC2500_InitPATable:	
  9513                           
  9514                           ;CC2500_B1.c: 182: unsigned char loop_d;
  9515                           ;CC2500_B1.c: 183: unsigned char temp;
  9516                           ;CC2500_B1.c: 185: for (loop_d = 0; loop_d < 8; loop_d++) {
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9520  1E9E  01F9               	clrf	CC2500_InitPATable@loop_d
  9521  1E9F                     L4:	
  9522  1E9F  3008               	movlw	8
  9523  1EA0  0279               	subwf	CC2500_InitPATable@loop_d,w
  9524  1EA1  1803               	btfsc	3,0
  9525  1EA2  0008               	return
  9526                           
  9527                           ;CC2500_B1.c: 186: temp = CC2500_patable_vaule[loop_d];
  9528  1EA3  0879               	movf	CC2500_InitPATable@loop_d,w
  9529  1EA4  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  9530  1EA5  0084               	movwf	4
  9531  1EA6  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
  9532  1EA7  1803               	skipnc
  9533  1EA8  3E01               	addlw	1
  9534  1EA9  0085               	movwf	5
  9535  1EAA  0800               	movf	0,w	;code access
  9536  1EAB  00F7               	movwf	??_CC2500_InitPATable
  9537  1EAC  0877               	movf	??_CC2500_InitPATable,w
  9538  1EAD  00F8               	movwf	CC2500_InitPATable@temp
  9539                           
  9540                           ;CC2500_B1.c: 187: CC2500_WriteREG(0x3E, temp);
  9541  1EAE  0878               	movf	CC2500_InitPATable@temp,w
  9542  1EAF  00F7               	movwf	??_CC2500_InitPATable
  9543  1EB0  0877               	movf	??_CC2500_InitPATable,w
  9544  1EB1  00F4               	movwf	CC2500_WriteREG@value
  9545  1EB2  303E               	movlw	62
  9546  1EB3  319F  277A  319E   	fcall	_CC2500_WriteREG
  9547  1EB6  3001               	movlw	1
  9548  1EB7  00F7               	movwf	??_CC2500_InitPATable
  9549  1EB8  0877               	movf	??_CC2500_InitPATable,w
  9550  1EB9  07F9               	addwf	CC2500_InitPATable@loop_d,f
  9551  1EBA  2E9F               	goto	L4
  9552  1EBB                     __end_of_CC2500_InitPATable:	
  9553                           
  9554                           	psect	text47
  9555  1F7A                     __ptext47:	
  9556 ;; *************** function _CC2500_WriteREG *****************
  9557 ;; Defined at:
  9558 ;;		line 258 in file "../src/CC2500_B1.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  w_addr          1    wreg     unsigned char 
  9561 ;;  value           1    4[COMMON] unsigned char 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  w_addr          1    6[COMMON] unsigned char 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;		None               void
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9573 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;Total ram usage:        3 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    4
  9580 ;; This function calls:
  9581 ;;		_CC2500_WriteByte
  9582 ;;		_RF_Timeout_Counter
  9583 ;;		_setRF_TimeoutCleared
  9584 ;; This function is called by:
  9585 ;;		_CC2500_InitSetREG
  9586 ;;		_CC2500_InitPATable
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           
  9591                           ;psect for function _CC2500_WriteREG
  9592  1F7A                     _CC2500_WriteREG:	
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9596                           ;CC2500_WriteREG@w_addr stored from wreg
  9597  1F7A  00F6               	movwf	CC2500_WriteREG@w_addr
  9598                           
  9599                           ;CC2500_B1.c: 259: RC4 = 0;
  9600  1F7B  0020               	movlb	0	; select bank0
  9601  1F7C  120E               	bcf	14,4	;volatile
  9602                           
  9603                           ;CC2500_B1.c: 260: SPI0Buffer = w_addr;
  9604  1F7D  0876               	movf	CC2500_WriteREG@w_addr,w
  9605  1F7E  00F5               	movwf	??_CC2500_WriteREG
  9606  1F7F  0875               	movf	??_CC2500_WriteREG,w
  9607  1F80  00EA               	movwf	_SPI0Buffer
  9608                           
  9609                           ;CC2500_B1.c: 261: while (RC2 == 1 && RF1.Timeout == 0) {
  9610  1F81  2F85               	goto	l9480
  9611  1F82                     l9478:	
  9612                           
  9613                           ;CC2500_B1.c: 262: RF_Timeout_Counter();
  9614  1F82  319D  256A  319F   	fcall	_RF_Timeout_Counter
  9615  1F85                     l9480:	
  9616  1F85  0020               	movlb	0	; select bank0
  9617  1F86  1D0E               	btfss	14,2	;volatile
  9618  1F87  2F8B               	goto	l9484
  9619  1F88  0021               	movlb	1	; select bank1
  9620  1F89  1F31               	btfss	(_RF1^(0+128)+1),6
  9621  1F8A  2F82               	goto	l9478
  9622  1F8B                     l9484:	
  9623                           
  9624                           ;CC2500_B1.c: 263: };
  9625                           ;CC2500_B1.c: 264: setRF_TimeoutCleared();
  9626  1F8B  319B  230A  319F   	fcall	_setRF_TimeoutCleared
  9627                           
  9628                           ;CC2500_B1.c: 266: CC2500_WriteByte();
  9629  1F8E  319D  2541  319F   	fcall	_CC2500_WriteByte
  9630                           
  9631                           ;CC2500_B1.c: 267: SPI0Buffer = value;
  9632  1F91  0874               	movf	CC2500_WriteREG@value,w
  9633  1F92  00F5               	movwf	??_CC2500_WriteREG
  9634  1F93  0875               	movf	??_CC2500_WriteREG,w
  9635  1F94  0020               	movlb	0	; select bank0
  9636  1F95  00EA               	movwf	_SPI0Buffer
  9637                           
  9638                           ;CC2500_B1.c: 268: CC2500_WriteByte();
  9639  1F96  319D  2541         	fcall	_CC2500_WriteByte
  9640                           
  9641                           ;CC2500_B1.c: 269: RC4 = 1;
  9642  1F98  0020               	movlb	0	; select bank0
  9643  1F99  160E               	bsf	14,4	;volatile
  9644  1F9A  0008               	return
  9645  1F9B                     __end_of_CC2500_WriteREG:	
  9646                           
  9647                           	psect	text48
  9648  1B8B                     __ptext48:	
  9649 ;; *************** function _CC2500_FrequencyCabr *****************
  9650 ;; Defined at:
  9651 ;;		line 208 in file "../src/CC2500_B1.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;		None
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;		None               void
  9658 ;; Registers used:
  9659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    5
  9672 ;; This function calls:
  9673 ;;		_CC2500_WriteCommand
  9674 ;;		_DelayTime_1us
  9675 ;; This function is called by:
  9676 ;;		_CC2500_PowerOnInitial
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function _CC2500_FrequencyCabr
  9682  1B8B                     _CC2500_FrequencyCabr:	
  9683                           
  9684                           ;CC2500_B1.c: 209: CC2500_WriteCommand(0x33);
  9685                           
  9686                           ;incstack = 0
  9687                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9688  1B8B  3033               	movlw	51
  9689  1B8C  319E  261C  319B   	fcall	_CC2500_WriteCommand
  9690                           
  9691                           ;CC2500_B1.c: 210: DelayTime_1us(1000);
  9692  1B8F  30E8               	movlw	232
  9693  1B90  00F2               	movwf	DelayTime_1us@count
  9694  1B91  3003               	movlw	3
  9695  1B92  00F3               	movwf	DelayTime_1us@count+1
  9696  1B93  3191  2100         	fcall	_DelayTime_1us
  9697  1B95  0008               	return
  9698  1B96                     __end_of_CC2500_FrequencyCabr:	
  9699                           
  9700                           	psect	text49
  9701  1100                     __ptext49:	
  9702 ;; *************** function _DelayTime_1us *****************
  9703 ;; Defined at:
  9704 ;;		line 327 in file "../src/CC2500_B1.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  count           2    2[COMMON] int 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  j               2    6[COMMON] unsigned int 
  9709 ;;  i               2    4[COMMON] unsigned int 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;		None               void
  9712 ;; Registers used:
  9713 ;;		wreg, status,2
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;Total ram usage:        6 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    3
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_CC2500_PowerRST
  9730 ;;		_CC2500_FrequencyCabr
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           
  9735                           ;psect for function _DelayTime_1us
  9736  1100                     _DelayTime_1us:	
  9737                           
  9738                           ;CC2500_B1.c: 328: unsigned int i, j;
  9739                           ;CC2500_B1.c: 329: for (i = 1; i < count; i++)
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  9743  1100  3001               	movlw	1
  9744  1101  00F4               	movwf	DelayTime_1us@i
  9745  1102  3000               	movlw	0
  9746  1103  00F5               	movwf	DelayTime_1us@i+1
  9747  1104                     l391:	
  9748  1104  0873               	movf	DelayTime_1us@count+1,w
  9749  1105  0275               	subwf	DelayTime_1us@i+1,w
  9750  1106  1D03               	skipz
  9751  1107  290A               	goto	u6305
  9752  1108  0872               	movf	DelayTime_1us@count,w
  9753  1109  0274               	subwf	DelayTime_1us@i,w
  9754  110A                     u6305:	
  9755  110A  1803               	btfsc	3,0
  9756  110B  0008               	return
  9757                           
  9758                           ;CC2500_B1.c: 330: for (j = 0; j <= 1; j++);
  9759  110C  01F6               	clrf	DelayTime_1us@j
  9760  110D  01F7               	clrf	DelayTime_1us@j+1
  9761  110E  3000               	movlw	0
  9762  110F  0277               	subwf	DelayTime_1us@j+1,w
  9763  1110  3002               	movlw	2
  9764  1111  1903               	skipnz
  9765  1112  0276               	subwf	DelayTime_1us@j,w
  9766  1113  1803               	btfsc	3,0
  9767  1114  2920               	goto	l7086
  9768  1115                     l7084:	
  9769  1115  3001               	movlw	1
  9770  1116  07F6               	addwf	DelayTime_1us@j,f
  9771  1117  3000               	movlw	0
  9772  1118  3DF7               	addwfc	DelayTime_1us@j+1,f
  9773  1119  3000               	movlw	0
  9774  111A  0277               	subwf	DelayTime_1us@j+1,w
  9775  111B  3002               	movlw	2
  9776  111C  1903               	skipnz
  9777  111D  0276               	subwf	DelayTime_1us@j,w
  9778  111E  1C03               	skipc
  9779  111F  2915               	goto	l7084
  9780  1120                     l7086:	
  9781  1120  3001               	movlw	1
  9782  1121  07F4               	addwf	DelayTime_1us@i,f
  9783  1122  3000               	movlw	0
  9784  1123  3DF5               	addwfc	DelayTime_1us@i+1,f
  9785  1124  2904               	goto	l391
  9786  1125                     __end_of_DelayTime_1us:	
  9787                           
  9788                           	psect	text50
  9789  1B12                     __ptext50:	
  9790 ;; *************** function _CC2500_ClearTXFIFO *****************
  9791 ;; Defined at:
  9792 ;;		line 194 in file "../src/CC2500_B1.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;		None               void
  9799 ;; Registers used:
  9800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        0 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    5
  9813 ;; This function calls:
  9814 ;;		_CC2500_WriteCommand
  9815 ;; This function is called by:
  9816 ;;		_CC2500_PowerOnInitial
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _CC2500_ClearTXFIFO
  9822  1B12                     _CC2500_ClearTXFIFO:	
  9823                           
  9824                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3B);
  9825                           
  9826                           ;incstack = 0
  9827                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9828  1B12  303B               	movlw	59
  9829  1B13  319E  261C         	fcall	_CC2500_WriteCommand
  9830  1B15  0008               	return
  9831  1B16                     __end_of_CC2500_ClearTXFIFO:	
  9832                           
  9833                           	psect	text51
  9834  1B0E                     __ptext51:	
  9835 ;; *************** function _CC2500_ClearRXFIFO *****************
  9836 ;; Defined at:
  9837 ;;		line 201 in file "../src/CC2500_B1.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;		None               void
  9844 ;; Registers used:
  9845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    5
  9858 ;; This function calls:
  9859 ;;		_CC2500_WriteCommand
  9860 ;; This function is called by:
  9861 ;;		_CC2500_PowerOnInitial
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           
  9866                           ;psect for function _CC2500_ClearRXFIFO
  9867  1B0E                     _CC2500_ClearRXFIFO:	
  9868                           
  9869                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x3A);
  9870                           
  9871                           ;incstack = 0
  9872                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9873  1B0E  303A               	movlw	58
  9874  1B0F  319E  261C         	fcall	_CC2500_WriteCommand
  9875  1B11  0008               	return
  9876  1B12                     __end_of_CC2500_ClearRXFIFO:	
  9877                           
  9878                           	psect	text52
  9879  1E1C                     __ptext52:	
  9880 ;; *************** function _CC2500_WriteCommand *****************
  9881 ;; Defined at:
  9882 ;;		line 292 in file "../src/CC2500_B1.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  command         1    wreg     unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  command         1    5[COMMON] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;		None               void
  9889 ;; Registers used:
  9890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;Total ram usage:        2 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    4
  9903 ;; This function calls:
  9904 ;;		_CC2500_WriteByte
  9905 ;;		_RF_Timeout_Counter
  9906 ;;		_setRF_TimeoutCleared
  9907 ;; This function is called by:
  9908 ;;		_CC2500_TxData
  9909 ;;		_CC2500_RxData
  9910 ;;		_CC2500_ClearTXFIFO
  9911 ;;		_CC2500_ClearRXFIFO
  9912 ;;		_CC2500_FrequencyCabr
  9913 ;;		_CC2500_SIDLEMode
  9914 ;;		_setRF_Main
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _CC2500_WriteCommand
  9920  1E1C                     _CC2500_WriteCommand:	
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9924                           ;CC2500_WriteCommand@command stored from wreg
  9925  1E1C  00F5               	movwf	CC2500_WriteCommand@command
  9926                           
  9927                           ;CC2500_B1.c: 293: RC4 = 0;
  9928  1E1D  0020               	movlb	0	; select bank0
  9929  1E1E  120E               	bcf	14,4	;volatile
  9930                           
  9931                           ;CC2500_B1.c: 294: SPI0Buffer = command;
  9932  1E1F  0875               	movf	CC2500_WriteCommand@command,w
  9933  1E20  00F4               	movwf	??_CC2500_WriteCommand
  9934  1E21  0874               	movf	??_CC2500_WriteCommand,w
  9935  1E22  00EA               	movwf	_SPI0Buffer
  9936                           
  9937                           ;CC2500_B1.c: 296: while (RC2 == 1 && RF1.Timeout == 0) {
  9938  1E23  2E27               	goto	l9464
  9939  1E24                     l9462:	
  9940                           
  9941                           ;CC2500_B1.c: 297: RF_Timeout_Counter();
  9942  1E24  319D  256A  319E   	fcall	_RF_Timeout_Counter
  9943  1E27                     l9464:	
  9944  1E27  0020               	movlb	0	; select bank0
  9945  1E28  1D0E               	btfss	14,2	;volatile
  9946  1E29  2E2D               	goto	l9468
  9947  1E2A  0021               	movlb	1	; select bank1
  9948  1E2B  1F31               	btfss	(_RF1^(0+128)+1),6
  9949  1E2C  2E24               	goto	l9462
  9950  1E2D                     l9468:	
  9951                           
  9952                           ;CC2500_B1.c: 298: };
  9953                           ;CC2500_B1.c: 299: setRF_TimeoutCleared();
  9954  1E2D  319B  230A  319E   	fcall	_setRF_TimeoutCleared
  9955                           
  9956                           ;CC2500_B1.c: 301: CC2500_WriteByte();
  9957  1E30  319D  2541         	fcall	_CC2500_WriteByte
  9958                           
  9959                           ;CC2500_B1.c: 302: RC4 = 1;
  9960  1E32  0020               	movlb	0	; select bank0
  9961  1E33  160E               	bsf	14,4	;volatile
  9962  1E34  0008               	return
  9963  1E35                     __end_of_CC2500_WriteCommand:	
  9964                           
  9965                           	psect	text53
  9966  1B0A                     __ptext53:	
  9967 ;; *************** function _setRF_TimeoutCleared *****************
  9968 ;; Defined at:
  9969 ;;		line 150 in file "../src/RF_Control_B1.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;		None               void
  9976 ;; Registers used:
  9977 ;;		status,2
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;Total ram usage:        0 bytes
  9988 ;; Hardware stack levels used:    1
  9989 ;; Hardware stack levels required when called:    3
  9990 ;; This function calls:
  9991 ;;		Nothing
  9992 ;; This function is called by:
  9993 ;;		_CC2500_TxData
  9994 ;;		_CC2500_RxData
  9995 ;;		_CC2500_PowerRST
  9996 ;;		_CC2500_WriteREG
  9997 ;;		_CC2500_WriteCommand
  9998 ;;		_CC2500_ReadStatus
  9999 ;;		_CC2500_ReadREG
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           
 10004                           ;psect for function _setRF_TimeoutCleared
 10005  1B0A                     _setRF_TimeoutCleared:	
 10006                           
 10007                           ;RF_Control_B1.c: 151: RF1.TimeoutCount = 0;
 10008                           
 10009                           ;incstack = 0
 10010                           ; Regs used in _setRF_TimeoutCleared: [status,2]
 10011  1B0A  0021               	movlb	1	; select bank1
 10012  1B0B  01BD               	clrf	(_RF1^(0+128)+13)
 10013  1B0C  01BE               	clrf	((_RF1+1)^(0+128)+13)
 10014  1B0D  0008               	return
 10015  1B0E                     __end_of_setRF_TimeoutCleared:	
 10016                           
 10017                           	psect	text54
 10018  1D6A                     __ptext54:	
 10019 ;; *************** function _RF_Timeout_Counter *****************
 10020 ;; Defined at:
 10021 ;;		line 142 in file "../src/RF_Control_B1.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;		None
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;		None               void
 10028 ;; Registers used:
 10029 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;Total ram usage:        0 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    3
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_CC2500_TxData
 10046 ;;		_CC2500_RxData
 10047 ;;		_CC2500_PowerRST
 10048 ;;		_CC2500_WriteREG
 10049 ;;		_CC2500_WriteCommand
 10050 ;;		_CC2500_ReadStatus
 10051 ;;		_CC2500_ReadREG
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           
 10056                           ;psect for function _RF_Timeout_Counter
 10057  1D6A                     _RF_Timeout_Counter:	
 10058                           
 10059                           ;RF_Control_B1.c: 143: RF1.TimeoutCount++;
 10060                           
 10061                           ;incstack = 0
 10062                           ; Regs used in _RF_Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
 10063  1D6A  3001               	movlw	1
 10064  1D6B  0021               	movlb	1	; select bank1
 10065  1D6C  07BD               	addwf	(_RF1^(0+128)+13),f
 10066  1D6D  3000               	movlw	0
 10067  1D6E  3DBE               	addwfc	((_RF1+1)^(0+128)+13),f
 10068                           
 10069                           ;RF_Control_B1.c: 144: if (RF1.TimeoutCount == 25000) {
 10070  1D6F  300D               	movlw	13
 10071  1D70  3EB0               	addlw	_RF1& (0+255)
 10072  1D71  0086               	movwf	6
 10073  1D72  0187               	clrf	7
 10074  1D73  3F40               	moviw [0]fsr1
 10075  1D74  3AA8               	xorlw	168
 10076  1D75  1D03               	skipz
 10077  1D76  2D79               	goto	u9925
 10078  1D77  3F41               	moviw [1]fsr1
 10079  1D78  3A61               	xorlw	97
 10080  1D79                     u9925:	
 10081  1D79  1D03               	skipz
 10082  1D7A  0008               	return
 10083                           
 10084                           ;RF_Control_B1.c: 145: RF1.TimeoutCount = 0;
 10085  1D7B  01BD               	clrf	(_RF1^(0+128)+13)
 10086  1D7C  01BE               	clrf	((_RF1+1)^(0+128)+13)
 10087                           
 10088                           ;RF_Control_B1.c: 146: RF1.Timeout = 1;
 10089  1D7D  1731               	bsf	(_RF1^(0+128)+1),6
 10090  1D7E  0008               	return
 10091  1D7F                     __end_of_RF_Timeout_Counter:	
 10092                           
 10093                           	psect	text55
 10094  1D41                     __ptext55:	
 10095 ;; *************** function _CC2500_WriteByte *****************
 10096 ;; Defined at:
 10097 ;;		line 226 in file "../src/CC2500_B1.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  loop_a          1    3[COMMON] unsigned char 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;		None               void
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;Total ram usage:        2 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    3
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_CC2500_TxData
 10122 ;;		_CC2500_RxData
 10123 ;;		_CC2500_PowerRST
 10124 ;;		_CC2500_WriteREG
 10125 ;;		_CC2500_WriteCommand
 10126 ;;		_CC2500_ReadStatus
 10127 ;;		_CC2500_ReadREG
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           
 10132                           ;psect for function _CC2500_WriteByte
 10133  1D41                     _CC2500_WriteByte:	
 10134                           
 10135                           ;CC2500_B1.c: 227: unsigned char loop_a;
 10136                           ;CC2500_B1.c: 228: for (loop_a = 0; loop_a < 8; loop_a++) {
 10137                           
 10138                           ;incstack = 0
 10139                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 10140  1D41  01F3               	clrf	CC2500_WriteByte@loop_a
 10141  1D42                     L5:	
 10142  1D42  3008               	movlw	8
 10143  1D43  0273               	subwf	CC2500_WriteByte@loop_a,w
 10144  1D44  1803               	btfsc	3,0
 10145  1D45  0008               	return
 10146                           
 10147                           ;CC2500_B1.c: 229: if (SPI0Buffer & 0x80)
 10148  1D46  0020               	movlb	0	; select bank0
 10149  1D47  1FEA               	btfss	_SPI0Buffer,7
 10150  1D48  2D4B               	goto	l347
 10151                           
 10152                           ;CC2500_B1.c: 230: RC0 = 1;
 10153  1D49  140E               	bsf	14,0	;volatile
 10154  1D4A  2D4C               	goto	l348
 10155  1D4B                     l347:	
 10156                           
 10157                           ;CC2500_B1.c: 231: else
 10158                           ;CC2500_B1.c: 232: RC0 = 0;
 10159  1D4B  100E               	bcf	14,0	;volatile
 10160  1D4C                     l348:	
 10161                           
 10162                           ;CC2500_B1.c: 233: RC1 = 1;
 10163  1D4C  148E               	bsf	14,1	;volatile
 10164                           
 10165                           ;CC2500_B1.c: 234: SPI0Buffer <<= 1;
 10166  1D4D  1003               	clrc
 10167  1D4E  0DEA               	rlf	_SPI0Buffer,f
 10168                           
 10169                           ;CC2500_B1.c: 235: RC1 = 0;
 10170  1D4F  108E               	bcf	14,1	;volatile
 10171  1D50  3001               	movlw	1
 10172  1D51  00F2               	movwf	??_CC2500_WriteByte
 10173  1D52  0872               	movf	??_CC2500_WriteByte,w
 10174  1D53  07F3               	addwf	CC2500_WriteByte@loop_a,f
 10175  1D54  2D42               	goto	L5
 10176  1D55                     __end_of_CC2500_WriteByte:	
 10177                           
 10178                           	psect	text56
 10179  1AFA                     __ptext56:	
 10180 ;; *************** function _RF_Initialization *****************
 10181 ;; Defined at:
 10182 ;;		line 9 in file "../src/RF_Control_B1.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;		None
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;		None
 10187 ;; Return value:  Size  Location     Type
 10188 ;;		None               void
 10189 ;; Registers used:
 10190 ;;		wreg, status,2, status,0, pclath, cstack
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;Total ram usage:        0 bytes
 10201 ;; Hardware stack levels used:    1
 10202 ;; Hardware stack levels required when called:    4
 10203 ;; This function calls:
 10204 ;;		_setRF_Initialization
 10205 ;; This function is called by:
 10206 ;;		_main
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _RF_Initialization
 10212  1AFA                     _RF_Initialization:	
 10213                           
 10214                           ;RF_Control_B1.c: 11: setRF_Initialization();
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10218  1AFA  319B  2380         	fcall	_setRF_Initialization
 10219  1AFC  0008               	return
 10220  1AFD                     __end_of_RF_Initialization:	
 10221                           
 10222                           	psect	text57
 10223  1B80                     __ptext57:	
 10224 ;; *************** function _setRF_Initialization *****************
 10225 ;; Defined at:
 10226 ;;		line 17 in file "../src/RF_Control_B1.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;		None               void
 10233 ;; Registers used:
 10234 ;;		wreg
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;Total ram usage:        1 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    3
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_RF_Initialization
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function _setRF_Initialization
 10256  1B80                     _setRF_Initialization:	
 10257                           
 10258                           ;RF_Control_B1.c: 19: Tx_Length = 21;
 10259                           
 10260                           ;incstack = 0
 10261                           ; Regs used in _setRF_Initialization: [wreg]
 10262  1B80  3015               	movlw	21
 10263  1B81  00F2               	movwf	??_setRF_Initialization
 10264  1B82  0872               	movf	??_setRF_Initialization,w
 10265  1B83  0020               	movlb	0	; select bank0
 10266  1B84  00EC               	movwf	_Tx_Length
 10267                           
 10268                           ;RF_Control_B1.c: 20: RF1.RunTime = 200;
 10269  1B85  30C8               	movlw	200
 10270  1B86  0021               	movlb	1	; select bank1
 10271  1B87  00B8               	movwf	(_RF1^(0+128)+8)
 10272  1B88  3000               	movlw	0
 10273  1B89  00B9               	movwf	(_RF1^(0+128)+9)
 10274  1B8A  0008               	return
 10275  1B8B                     __end_of_setRF_Initialization:	
 10276                           
 10277                           	psect	text58
 10278  1066                     __ptext58:	
 10279 ;; *************** function _Mcu_Initialization *****************
 10280 ;; Defined at:
 10281 ;;		line 30 in file "../src/MCU_B1.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;		None
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;		None               void
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0, pclath, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;Total ram usage:        0 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    4
 10302 ;; This function calls:
 10303 ;;		_ADC_Set
 10304 ;;		_Fosc_Set
 10305 ;;		_IOC_Set
 10306 ;;		_IO_Set
 10307 ;;		_TMR1_Set
 10308 ;;		_WDT_Set
 10309 ;; This function is called by:
 10310 ;;		_main
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _Mcu_Initialization
 10316  1066                     _Mcu_Initialization:	
 10317                           
 10318                           ;MCU_B1.c: 32: Fosc_Set();
 10319                           
 10320                           ;incstack = 0
 10321                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
 10322  1066  319B  2306  3190   	fcall	_Fosc_Set
 10323                           
 10324                           ;MCU_B1.c: 34: IO_Set();
 10325  1069  319E  2683  3190   	fcall	_IO_Set
 10326                           
 10327                           ;MCU_B1.c: 36: ;;
 10328                           ;MCU_B1.c: 38: TMR1_Set();
 10329  106C  319B  23C6  3190   	fcall	_TMR1_Set
 10330                           
 10331                           ;MCU_B1.c: 40: ADC_Set();
 10332  106F  319B  2337  3190   	fcall	_ADC_Set
 10333                           
 10334                           ;MCU_B1.c: 42: ;;
 10335                           ;MCU_B1.c: 44: ;;
 10336                           ;MCU_B1.c: 46: IOC_Set();
 10337  1072  319B  2375  3190   	fcall	_IOC_Set
 10338                           
 10339                           ;MCU_B1.c: 48: ;;
 10340                           ;MCU_B1.c: 50: ;;
 10341                           ;MCU_B1.c: 52: WDT_Set();
 10342  1075  319B  2360         	fcall	_WDT_Set
 10343  1077  0008               	return
 10344  1078                     __end_of_Mcu_Initialization:	
 10345                           
 10346                           	psect	text59
 10347  1B60                     __ptext59:	
 10348 ;; *************** function _WDT_Set *****************
 10349 ;; Defined at:
 10350 ;;		line 1106 in file "../src/MCU_B1.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;		None               void
 10357 ;; Registers used:
 10358 ;;		wreg
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    3
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_Mcu_Initialization
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           
 10379                           ;psect for function _WDT_Set
 10380  1B60                     _WDT_Set:	
 10381                           
 10382                           ;MCU_B1.c: 1113: WDTCON = 0b00010111;;
 10383                           
 10384                           ;incstack = 0
 10385                           ; Regs used in _WDT_Set: [wreg]
 10386  1B60  3017               	movlw	23
 10387  1B61  0021               	movlb	1	; select bank1
 10388  1B62  0097               	movwf	23	;volatile
 10389                           
 10390                           ;MCU_B1.c: 1115: WDT.Enable = 1;
 10391  1B63  0022               	movlb	2	; select bank2
 10392  1B64  1453               	bsf	_WDT^(0+256),0
 10393                           
 10394                           ;MCU_B1.c: 1116: WDT.Timer = 10;
 10395  1B65  300A               	movlw	10
 10396  1B66  00F2               	movwf	??_WDT_Set
 10397  1B67  0872               	movf	??_WDT_Set,w
 10398  1B68  00D4               	movwf	(_WDT^(0+256)+1)
 10399  1B69  0008               	return
 10400  1B6A                     __end_of_WDT_Set:	
 10401                           
 10402                           	psect	text60
 10403  1BC6                     __ptext60:	
 10404 ;; *************** function _TMR1_Set *****************
 10405 ;; Defined at:
 10406 ;;		line 226 in file "../src/MCU_B1.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;		None               void
 10413 ;; Registers used:
 10414 ;;		wreg
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    3
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_Mcu_Initialization
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _TMR1_Set
 10436  1BC6                     _TMR1_Set:	
 10437                           
 10438                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in _TMR1_Set: [wreg]
 10442  1BC6  3041               	movlw	65
 10443  1BC7  0020               	movlb	0	; select bank0
 10444  1BC8  0098               	movwf	24	;volatile
 10445                           
 10446                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
 10447  1BC9  30FA               	movlw	250
 10448  1BCA  0097               	movwf	23	;volatile
 10449                           
 10450                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
 10451  1BCB  3038               	movlw	56
 10452  1BCC  0096               	movwf	22	;volatile
 10453                           
 10454                           ;MCU_B1.c: 230: TMR1IE = 1;
 10455  1BCD  0021               	movlb	1	; select bank1
 10456  1BCE  1411               	bsf	17,0	;volatile
 10457                           
 10458                           ;MCU_B1.c: 231: PEIE = 1;
 10459  1BCF  170B               	bsf	11,6	;volatile
 10460                           
 10461                           ;MCU_B1.c: 232: GIE = 1;
 10462  1BD0  178B               	bsf	11,7	;volatile
 10463  1BD1  0008               	return
 10464  1BD2                     __end_of_TMR1_Set:	
 10465                           
 10466                           	psect	text61
 10467  1E83                     __ptext61:	
 10468 ;; *************** function _IO_Set *****************
 10469 ;; Defined at:
 10470 ;;		line 60 in file "../src/MCU_B1.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;		None
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;		None
 10475 ;; Return value:  Size  Location     Type
 10476 ;;		None               void
 10477 ;; Registers used:
 10478 ;;		wreg, status,2
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;Total ram usage:        0 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    3
 10491 ;; This function calls:
 10492 ;;		Nothing
 10493 ;; This function is called by:
 10494 ;;		_Mcu_Initialization
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           
 10499                           ;psect for function _IO_Set
 10500  1E83                     _IO_Set:	
 10501                           
 10502                           ;MCU_B1.c: 92: TRISA = 0b01010111;;
 10503                           
 10504                           ;incstack = 0
 10505                           ; Regs used in _IO_Set: [wreg+status,2]
 10506  1E83  3057               	movlw	87
 10507  1E84  0021               	movlb	1	; select bank1
 10508  1E85  008C               	movwf	12	;volatile
 10509                           
 10510                           ;MCU_B1.c: 93: TRISB = 0b00000101;;
 10511  1E86  3005               	movlw	5
 10512  1E87  008D               	movwf	13	;volatile
 10513                           
 10514                           ;MCU_B1.c: 94: TRISC = 0b00001100;;
 10515  1E88  300C               	movlw	12
 10516  1E89  008E               	movwf	14	;volatile
 10517                           
 10518                           ;MCU_B1.c: 96: LATA = 0b00000000;;
 10519  1E8A  0022               	movlb	2	; select bank2
 10520  1E8B  018C               	clrf	12	;volatile
 10521                           
 10522                           ;MCU_B1.c: 97: LATB = 0b00000010;;
 10523  1E8C  3002               	movlw	2
 10524  1E8D  008D               	movwf	13	;volatile
 10525                           
 10526                           ;MCU_B1.c: 98: LATC = 0b00000000;;
 10527  1E8E  018E               	clrf	14	;volatile
 10528                           
 10529                           ;MCU_B1.c: 100: ANSELA = 0b00100010;;
 10530  1E8F  3022               	movlw	34
 10531  1E90  0023               	movlb	3	; select bank3
 10532  1E91  008C               	movwf	12	;volatile
 10533                           
 10534                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
 10535  1E92  018D               	clrf	13	;volatile
 10536                           
 10537                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
 10538  1E93  018E               	clrf	14	;volatile
 10539                           
 10540                           ;MCU_B1.c: 104: PORTA = 0b01010111;;
 10541  1E94  3057               	movlw	87
 10542  1E95  0020               	movlb	0	; select bank0
 10543  1E96  008C               	movwf	12	;volatile
 10544                           
 10545                           ;MCU_B1.c: 105: PORTB = 0b00000101;;
 10546  1E97  3005               	movlw	5
 10547  1E98  008D               	movwf	13	;volatile
 10548                           
 10549                           ;MCU_B1.c: 106: PORTC = 0b00001100;;
 10550  1E99  300C               	movlw	12
 10551  1E9A  008E               	movwf	14	;volatile
 10552                           
 10553                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
 10554  1E9B  0024               	movlb	4	; select bank4
 10555  1E9C  018D               	clrf	13	;volatile
 10556  1E9D  0008               	return
 10557  1E9E                     __end_of_IO_Set:	
 10558                           
 10559                           	psect	text62
 10560  1B75                     __ptext62:	
 10561 ;; *************** function _IOC_Set *****************
 10562 ;; Defined at:
 10563 ;;		line 380 in file "../src/MCU_B1.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;		None
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;		None
 10568 ;; Return value:  Size  Location     Type
 10569 ;;		None               void
 10570 ;; Registers used:
 10571 ;;		wreg, status,2
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;Total ram usage:        0 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    3
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_Mcu_Initialization
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           
 10592                           ;psect for function _IOC_Set
 10593  1B75                     _IOC_Set:	
 10594                           
 10595                           ;MCU_B1.c: 382: IOCBP = 0b00000100;;
 10596                           
 10597                           ;incstack = 0
 10598                           ; Regs used in _IOC_Set: [wreg+status,2]
 10599  1B75  3004               	movlw	4
 10600  1B76  0027               	movlb	7	; select bank7
 10601  1B77  0094               	movwf	20	;volatile
 10602                           
 10603                           ;MCU_B1.c: 383: IOCBN = 0b00000100;;
 10604  1B78  3004               	movlw	4
 10605  1B79  0095               	movwf	21	;volatile
 10606                           
 10607                           ;MCU_B1.c: 385: IOCBF = 0b00000000;
 10608  1B7A  0196               	clrf	22	;volatile
 10609                           
 10610                           ;MCU_B1.c: 387: IOCIE = 1;
 10611  1B7B  158B               	bsf	11,3	;volatile
 10612                           
 10613                           ;MCU_B1.c: 388: IOCIF = 0;
 10614  1B7C  100B               	bcf	11,0	;volatile
 10615                           
 10616                           ;MCU_B1.c: 389: PEIE = 1;
 10617  1B7D  170B               	bsf	11,6	;volatile
 10618                           
 10619                           ;MCU_B1.c: 390: GIE = 1;
 10620  1B7E  178B               	bsf	11,7	;volatile
 10621  1B7F  0008               	return
 10622  1B80                     __end_of_IOC_Set:	
 10623                           
 10624                           	psect	text63
 10625  1B06                     __ptext63:	
 10626 ;; *************** function _Fosc_Set *****************
 10627 ;; Defined at:
 10628 ;;		line 56 in file "../src/MCU_B1.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;		None               void
 10635 ;; Registers used:
 10636 ;;		wreg
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;Total ram usage:        0 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:    3
 10649 ;; This function calls:
 10650 ;;		Nothing
 10651 ;; This function is called by:
 10652 ;;		_Mcu_Initialization
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           
 10657                           ;psect for function _Fosc_Set
 10658  1B06                     _Fosc_Set:	
 10659                           
 10660                           ;MCU_B1.c: 57: OSCCON = 0x78;
 10661                           
 10662                           ;incstack = 0
 10663                           ; Regs used in _Fosc_Set: [wreg]
 10664  1B06  3078               	movlw	120
 10665  1B07  0021               	movlb	1	; select bank1
 10666  1B08  0099               	movwf	25	;volatile
 10667  1B09  0008               	return
 10668  1B0A                     __end_of_Fosc_Set:	
 10669                           
 10670                           	psect	text64
 10671  1B37                     __ptext64:	
 10672 ;; *************** function _ADC_Set *****************
 10673 ;; Defined at:
 10674 ;;		line 428 in file "../src/MCU_B1.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;		None
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;		None               void
 10681 ;; Registers used:
 10682 ;;		wreg
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;Total ram usage:        0 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    3
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_Mcu_Initialization
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           
 10703                           ;psect for function _ADC_Set
 10704  1B37                     _ADC_Set:	
 10705                           
 10706                           ;MCU_B1.c: 429: ADCON1 = 0xf3;
 10707                           
 10708                           ;incstack = 0
 10709                           ; Regs used in _ADC_Set: [wreg]
 10710  1B37  30F3               	movlw	243
 10711  1B38  0021               	movlb	1	; select bank1
 10712  1B39  009E               	movwf	30	;volatile
 10713                           
 10714                           ;MCU_B1.c: 430: FVRCON = 0xc1;
 10715  1B3A  30C1               	movlw	193
 10716  1B3B  0022               	movlb	2	; select bank2
 10717  1B3C  0097               	movwf	23	;volatile
 10718  1B3D  0008               	return
 10719  1B3E                     __end_of_ADC_Set:	
 10720                           
 10721                           	psect	text65
 10722  1CB7                     __ptext65:	
 10723 ;; *************** function _LED_Main *****************
 10724 ;; Defined at:
 10725 ;;		line 47 in file "../src/LED_B1.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;		None
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;		None               void
 10732 ;; Registers used:
 10733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:    5
 10746 ;; This function calls:
 10747 ;;		_setLED_Main
 10748 ;; This function is called by:
 10749 ;;		_main
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           
 10754                           ;psect for function _LED_Main
 10755  1CB7                     _LED_Main:	
 10756                           
 10757                           ;LED_B1.c: 58: setLED_Main(1);
 10758                           
 10759                           ;incstack = 0
 10760                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10761  1CB7  3001               	movlw	1
 10762  1CB8  3194  24BF  319C   	fcall	_setLED_Main
 10763                           
 10764                           ;LED_B1.c: 61: setLED_Main(2);
 10765  1CBB  3002               	movlw	2
 10766  1CBC  3194  24BF  319C   	fcall	_setLED_Main
 10767                           
 10768                           ;LED_B1.c: 64: setLED_Main(3);
 10769  1CBF  3003               	movlw	3
 10770  1CC0  3194  24BF  319C   	fcall	_setLED_Main
 10771                           
 10772                           ;LED_B1.c: 67: setLED_Main(99);
 10773  1CC3  3063               	movlw	99
 10774  1CC4  3194  24BF         	fcall	_setLED_Main
 10775  1CC6  0008               	return
 10776  1CC7                     __end_of_LED_Main:	
 10777                           
 10778                           	psect	text66
 10779  14BF                     __ptext66:	
 10780 ;; *************** function _setLED_Main *****************
 10781 ;; Defined at:
 10782 ;;		line 229 in file "../src/LED_B1.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  led             1    wreg     unsigned char 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  led             1    6[COMMON] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;		None               void
 10789 ;; Registers used:
 10790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        3 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    4
 10803 ;; This function calls:
 10804 ;;		_LedPointSelect
 10805 ;; This function is called by:
 10806 ;;		_LED_Main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           
 10811                           ;psect for function _setLED_Main
 10812  14BF                     _setLED_Main:	
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10816                           ;setLED_Main@led stored from wreg
 10817  14BF  00F6               	movwf	setLED_Main@led
 10818                           
 10819                           ;LED_B1.c: 230: LedPointSelect(led);
 10820  14C0  0876               	movf	setLED_Main@led,w
 10821  14C1  3190  20BC  3194   	fcall	_LedPointSelect
 10822                           
 10823                           ;LED_B1.c: 231: if (LED->GO == 1) {
 10824  14C4  087B               	movf	_LED,w
 10825  14C5  0086               	movwf	6
 10826  14C6  3001               	movlw	1	; select bank2/3
 10827  14C7  0087               	movwf	7
 10828  14C8  1C81               	btfss	1,1
 10829  14C9  0008               	return
 10830                           
 10831                           ;LED_B1.c: 232: LED->Time++;
 10832  14CA  0A7B               	incf	_LED,w
 10833  14CB  0086               	movwf	6
 10834  14CC  3001               	movlw	1	; select bank2/3
 10835  14CD  0087               	movwf	7
 10836  14CE  3001               	movlw	1
 10837  14CF  0781               	addwf	1,f
 10838  14D0  3141               	addfsr 1,1
 10839  14D1  1803               	skipnc
 10840  14D2  0A81               	incf	1,f
 10841                           
 10842                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
 10843  14D3  0A7B               	incf	_LED,w
 10844  14D4  0086               	movwf	6
 10845  14D5  3001               	movlw	1	; select bank2/3
 10846  14D6  0087               	movwf	7
 10847  14D7  3F40               	moviw [0]fsr1
 10848  14D8  00F4               	movwf	??_setLED_Main
 10849  14D9  3F41               	moviw [1]fsr1
 10850  14DA  00F5               	movwf	??_setLED_Main+1
 10851  14DB  3000               	movlw	0
 10852  14DC  0275               	subwf	??_setLED_Main+1,w
 10853  14DD  3019               	movlw	25
 10854  14DE  1903               	skipnz
 10855  14DF  0274               	subwf	??_setLED_Main,w
 10856  14E0  1C03               	skipc
 10857  14E1  0008               	return
 10858                           
 10859                           ;LED_B1.c: 234: LED->Time = 0;
 10860  14E2  0A7B               	incf	_LED,w
 10861  14E3  0086               	movwf	6
 10862  14E4  3001               	movlw	1	; select bank2/3
 10863  14E5  0087               	movwf	7
 10864  14E6  3000               	movlw	0
 10865  14E7  3FC0               	movwi [0]fsr1
 10866  14E8  3FC1               	movwi [1]fsr1
 10867                           
 10868                           ;LED_B1.c: 237: if (led == 1) {
 10869  14E9  0876               	movf	setLED_Main@led,w
 10870  14EA  3A01               	xorlw	1
 10871  14EB  1D03               	skipz
 10872  14EC  2CF0               	goto	l1291
 10873                           
 10874                           ;LED_B1.c: 238: RA3 = RA3 == 1 ? 0 : 1;
 10875  14ED  3008               	movlw	8
 10876  14EE  0020               	movlb	0	; select bank0
 10877  14EF  068C               	xorwf	12,f
 10878  14F0                     l1291:	
 10879                           
 10880                           ;LED_B1.c: 239: }
 10881                           ;LED_B1.c: 242: if (led == 2) {
 10882  14F0  0876               	movf	setLED_Main@led,w
 10883  14F1  3A02               	xorlw	2
 10884  14F2  1D03               	skipz
 10885  14F3  2CF7               	goto	l1292
 10886                           
 10887                           ;LED_B1.c: 243: RC6 = RC6 == 1 ? 0 : 1;
 10888  14F4  3040               	movlw	64
 10889  14F5  0020               	movlb	0	; select bank0
 10890  14F6  068E               	xorwf	14,f
 10891  14F7                     l1292:	
 10892                           
 10893                           ;LED_B1.c: 244: }
 10894                           ;LED_B1.c: 247: if (led == 3) {
 10895  14F7  0876               	movf	setLED_Main@led,w
 10896  14F8  3A03               	xorlw	3
 10897  14F9  1D03               	skipz
 10898  14FA  2CFE               	goto	l1293
 10899                           
 10900                           ;LED_B1.c: 248: RC7 = RC7 == 1 ? 0 : 1;
 10901  14FB  3080               	movlw	128
 10902  14FC  0020               	movlb	0	; select bank0
 10903  14FD  068E               	xorwf	14,f
 10904  14FE                     l1293:	
 10905                           
 10906                           ;LED_B1.c: 249: }
 10907                           ;LED_B1.c: 252: if (led == 99) {
 10908  14FE  0876               	movf	setLED_Main@led,w
 10909  14FF  3A63               	xorlw	99
 10910  1500  1D03               	skipz
 10911  1501  0008               	return
 10912                           
 10913                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
 10914  1502  3020               	movlw	32
 10915  1503  0020               	movlb	0	; select bank0
 10916  1504  068D               	xorwf	13,f
 10917  1505  0008               	return
 10918  1506                     __end_of_setLED_Main:	
 10919                           
 10920                           	psect	text67
 10921  1CA7                     __ptext67:	
 10922 ;; *************** function _LED_Initialization *****************
 10923 ;; Defined at:
 10924 ;;		line 31 in file "../src/LED_B1.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;		None               void
 10931 ;; Registers used:
 10932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:        0 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:    6
 10945 ;; This function calls:
 10946 ;;		_setLED_Initialization
 10947 ;; This function is called by:
 10948 ;;		_main
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           
 10953                           ;psect for function _LED_Initialization
 10954  1CA7                     _LED_Initialization:	
 10955                           
 10956                           ;LED_B1.c: 33: setLED_Initialization(1);
 10957                           
 10958                           ;incstack = 0
 10959                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10960  1CA7  3001               	movlw	1
 10961  1CA8  319C  243B  319C   	fcall	_setLED_Initialization
 10962                           
 10963                           ;LED_B1.c: 36: setLED_Initialization(2);
 10964  1CAB  3002               	movlw	2
 10965  1CAC  319C  243B  319C   	fcall	_setLED_Initialization
 10966                           
 10967                           ;LED_B1.c: 39: setLED_Initialization(3);
 10968  1CAF  3003               	movlw	3
 10969  1CB0  319C  243B  319C   	fcall	_setLED_Initialization
 10970                           
 10971                           ;LED_B1.c: 42: setLED_Initialization(99);
 10972  1CB3  3063               	movlw	99
 10973  1CB4  319C  243B         	fcall	_setLED_Initialization
 10974  1CB6  0008               	return
 10975  1CB7                     __end_of_LED_Initialization:	
 10976                           
 10977                           	psect	text68
 10978  1C3B                     __ptext68:	
 10979 ;; *************** function _setLED_Initialization *****************
 10980 ;; Defined at:
 10981 ;;		line 74 in file "../src/LED_B1.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;  led             1    wreg     unsigned char 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;  led             1    6[COMMON] unsigned char 
 10986 ;; Return value:  Size  Location     Type
 10987 ;;		None               void
 10988 ;; Registers used:
 10989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;Total ram usage:        1 bytes
 11000 ;; Hardware stack levels used:    1
 11001 ;; Hardware stack levels required when called:    5
 11002 ;; This function calls:
 11003 ;;		_LedPointSelect
 11004 ;;		_setLED
 11005 ;; This function is called by:
 11006 ;;		_LED_Initialization
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _setLED_Initialization
 11012  1C3B                     _setLED_Initialization:	
 11013                           
 11014                           ;incstack = 0
 11015                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11016                           ;setLED_Initialization@led stored from wreg
 11017  1C3B  00F6               	movwf	setLED_Initialization@led
 11018                           
 11019                           ;LED_B1.c: 75: LedPointSelect(led);
 11020  1C3C  0876               	movf	setLED_Initialization@led,w
 11021  1C3D  3190  20BC  319C   	fcall	_LedPointSelect
 11022                           
 11023                           ;LED_B1.c: 76: LED->Enable = 1;
 11024  1C40  087B               	movf	_LED,w
 11025  1C41  0086               	movwf	6
 11026  1C42  3001               	movlw	1	; select bank2/3
 11027  1C43  0087               	movwf	7
 11028  1C44  1401               	bsf	1,0
 11029                           
 11030                           ;LED_B1.c: 77: setLED(led, 0);
 11031  1C45  01F4               	clrf	setLED@command
 11032  1C46  0876               	movf	setLED_Initialization@led,w
 11033  1C47  318A  22FB         	fcall	_setLED
 11034  1C49  0008               	return
 11035  1C4A                     __end_of_setLED_Initialization:	
 11036                           
 11037                           	psect	text69
 11038  136D                     __ptext69:	
 11039 ;; *************** function _Flash_Memory_Main *****************
 11040 ;; Defined at:
 11041 ;;		line 979 in file "../src/MCU_B1.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  key_Status      1    0[BANK0 ] unsigned char 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;		None               void
 11048 ;; Registers used:
 11049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        3 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    6
 11062 ;; This function calls:
 11063 ;;		_Flash_Memory_Modify
 11064 ;;		_getAll_Sw_KeyStatus
 11065 ;;		_getMain_All_LightsStatus
 11066 ;; This function is called by:
 11067 ;;		_main
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function _Flash_Memory_Main
 11073  136D                     _Flash_Memory_Main:	
 11074                           
 11075                           ;MCU_B1.c: 980: char key_Status = 0;
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11079  136D  0020               	movlb	0	; select bank0
 11080  136E  01A0               	clrf	Flash_Memory_Main@key_Status
 11081                           
 11082                           ;MCU_B1.c: 982: key_Status = getAll_Sw_KeyStatus();
 11083  136F  319C  242C  3193   	fcall	_getAll_Sw_KeyStatus
 11084  1372  00F8               	movwf	??_Flash_Memory_Main
 11085  1373  0878               	movf	??_Flash_Memory_Main,w
 11086  1374  0020               	movlb	0	; select bank0
 11087  1375  00A0               	movwf	Flash_Memory_Main@key_Status
 11088                           
 11089                           ;MCU_B1.c: 984: if (Memory.Modify == 1) {
 11090  1376  0024               	movlb	4	; select bank4
 11091  1377  1C54               	btfss	(_Memory^(0+512)+36),0
 11092  1378  0008               	return
 11093                           
 11094                           ;MCU_B1.c: 985: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
 11095  1379  0020               	movlb	0	; select bank0
 11096  137A  01A1               	clrf	_Flash_Memory_Main$3656
 11097  137B  319D  25BE  3193   	fcall	_getMain_All_LightsStatus
 11098  137E  3800               	iorlw	0
 11099  137F  1D03               	skipz
 11100  1380  2B87               	goto	l10548
 11101  1381  0020               	movlb	0	; select bank0
 11102  1382  08A0               	movf	Flash_Memory_Main@key_Status,f
 11103  1383  1D03               	skipz
 11104  1384  2B87               	goto	l10548
 11105  1385  01A1               	clrf	_Flash_Memory_Main$3656
 11106  1386  0AA1               	incf	_Flash_Memory_Main$3656,f
 11107  1387                     l10548:	
 11108  1387  0020               	movlb	0	; select bank0
 11109  1388  0821               	movf	_Flash_Memory_Main$3656,w
 11110  1389  0024               	movlb	4	; select bank4
 11111  138A  10D4               	bcf	(_Memory^(0+512)+36),1
 11112  138B  1D03               	skipz
 11113  138C  14D4               	bsf	(_Memory^(0+512)+36),1
 11114                           
 11115                           ;MCU_B1.c: 986: if (Memory.GO == 1) {
 11116  138D  1CD4               	btfss	(_Memory^(0+512)+36),1
 11117  138E  2BA8               	goto	l1578
 11118                           
 11119                           ;MCU_B1.c: 987: Memory.Runtime = 1;
 11120  138F  15D4               	bsf	(_Memory^(0+512)+36),3
 11121                           
 11122                           ;MCU_B1.c: 988: Memory.Time++;
 11123  1390  3001               	movlw	1
 11124  1391  07D2               	addwf	(_Memory^(0+512)+34),f
 11125  1392  3000               	movlw	0
 11126  1393  3DD3               	addwfc	((_Memory+1)^(0+512)+34),f
 11127                           
 11128                           ;MCU_B1.c: 989: if (Memory.Time == (200 / 20)) {
 11129  1394  3022               	movlw	34
 11130  1395  3E30               	addlw	_Memory& (0+255)
 11131  1396  0086               	movwf	6
 11132  1397  3002               	movlw	2	; select bank4/5
 11133  1398  0087               	movwf	7
 11134  1399  3F40               	moviw [0]fsr1
 11135  139A  3A0A               	xorlw	10
 11136  139B  1D03               	skipz
 11137  139C  2B9F               	goto	u11795
 11138  139D  3F41               	moviw [1]fsr1
 11139  139E  3A00               	xorlw	0
 11140  139F                     u11795:	
 11141  139F  1D03               	skipz
 11142  13A0  0008               	return
 11143                           
 11144                           ;MCU_B1.c: 990: Memory.Time = 0;
 11145  13A1  01D2               	clrf	(_Memory^(0+512)+34)
 11146  13A2  01D3               	clrf	((_Memory+1)^(0+512)+34)
 11147                           
 11148                           ;MCU_B1.c: 991: Memory.Modify = 0;
 11149  13A3  1054               	bcf	(_Memory^(0+512)+36),0
 11150                           
 11151                           ;MCU_B1.c: 992: Memory.GO = 0;
 11152  13A4  10D4               	bcf	(_Memory^(0+512)+36),1
 11153                           
 11154                           ;MCU_B1.c: 993: Flash_Memory_Modify();
 11155  13A5  318D  2574         	fcall	_Flash_Memory_Modify
 11156                           
 11157                           ;MCU_B1.c: 994: }
 11158                           ;MCU_B1.c: 995: } else {
 11159  13A7  0008               	return
 11160  13A8                     l1578:	
 11161                           
 11162                           ;MCU_B1.c: 996: if (Memory.Runtime == 1) {
 11163  13A8  1DD4               	btfss	(_Memory^(0+512)+36),3
 11164  13A9  0008               	return
 11165                           
 11166                           ;MCU_B1.c: 997: Memory.Runtime = 0;
 11167  13AA  11D4               	bcf	(_Memory^(0+512)+36),3
 11168                           
 11169                           ;MCU_B1.c: 998: Memory.Time = 0;
 11170  13AB  01D2               	clrf	(_Memory^(0+512)+34)
 11171  13AC  01D3               	clrf	((_Memory+1)^(0+512)+34)
 11172  13AD  0008               	return
 11173  13AE                     __end_of_Flash_Memory_Main:	
 11174                           
 11175                           	psect	text70
 11176  1C2C                     __ptext70:	
 11177 ;; *************** function _getAll_Sw_KeyStatus *****************
 11178 ;; Defined at:
 11179 ;;		line 286 in file "../src/Switch_B1.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;  status          1    3[COMMON] unsigned char 
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      unsigned char 
 11186 ;; Registers used:
 11187 ;;		wreg, status,2
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:        3 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; Hardware stack levels required when called:    3
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_Flash_Memory_Main
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           
 11208                           ;psect for function _getAll_Sw_KeyStatus
 11209  1C2C                     _getAll_Sw_KeyStatus:	
 11210                           
 11211                           ;Switch_B1.c: 287: char status = 0;
 11212                           
 11213                           ;incstack = 0
 11214                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
 11215  1C2C  01F3               	clrf	getAll_Sw_KeyStatus@status
 11216                           
 11217                           ;Switch_B1.c: 289: status = RA6 == 1 || RA4 == 1 || RA0 == 1 ? 1 : 0;
 11218  1C2D  01F4               	clrf	_getAll_Sw_KeyStatus$7153
 11219  1C2E  0AF4               	incf	_getAll_Sw_KeyStatus$7153,f
 11220  1C2F  0020               	movlb	0	; select bank0
 11221  1C30  1F0C               	btfss	12,6	;volatile
 11222  1C31  1A0C               	btfsc	12,4	;volatile
 11223  1C32  2C35               	goto	l10218
 11224  1C33  1C0C               	btfss	12,0	;volatile
 11225  1C34  01F4               	clrf	_getAll_Sw_KeyStatus$7153
 11226  1C35                     l10218:	
 11227  1C35  0874               	movf	_getAll_Sw_KeyStatus$7153,w
 11228  1C36  00F2               	movwf	??_getAll_Sw_KeyStatus
 11229  1C37  0872               	movf	??_getAll_Sw_KeyStatus,w
 11230  1C38  00F3               	movwf	getAll_Sw_KeyStatus@status
 11231                           
 11232                           ;Switch_B1.c: 315: return status;
 11233  1C39  0873               	movf	getAll_Sw_KeyStatus@status,w
 11234  1C3A  0008               	return
 11235  1C3B                     __end_of_getAll_Sw_KeyStatus:	
 11236                           
 11237                           	psect	text71
 11238  0D74                     __ptext71:	
 11239 ;; *************** function _Flash_Memory_Modify *****************
 11240 ;; Defined at:
 11241 ;;		line 1056 in file "../src/MCU_B1.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  i               1    7[COMMON] unsigned char 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;		None               void
 11248 ;; Registers used:
 11249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;Total ram usage:        2 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    5
 11262 ;; This function calls:
 11263 ;;		_Flash_Memory_Erasing
 11264 ;;		_Flash_Memory_Read
 11265 ;;		_Flash_Memory_Write
 11266 ;;		_setMemory_Data
 11267 ;; This function is called by:
 11268 ;;		_Flash_Memory_Main
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           
 11273                           ;psect for function _Flash_Memory_Modify
 11274  0D74                     _Flash_Memory_Modify:	
 11275                           
 11276                           ;MCU_B1.c: 1057: char i = 0;
 11277                           
 11278                           ;incstack = 0
 11279                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11280  0D74  01F7               	clrf	Flash_Memory_Modify@i
 11281                           
 11282                           ;MCU_B1.c: 1058: for (i = 0; i < 32; i++) {
 11283  0D75  01F7               	clrf	Flash_Memory_Modify@i
 11284  0D76  3020               	movlw	32
 11285  0D77  0277               	subwf	Flash_Memory_Modify@i,w
 11286  0D78  1803               	btfsc	3,0
 11287  0D79  2D8E               	goto	l10236
 11288  0D7A                     l10230:	
 11289                           
 11290                           ;MCU_B1.c: 1059: Memory.Data[i] = Flash_Memory_Read(i);
 11291  0D7A  0877               	movf	Flash_Memory_Modify@i,w
 11292  0D7B  319D  252D  318D   	fcall	_Flash_Memory_Read
 11293  0D7E  00F6               	movwf	??_Flash_Memory_Modify
 11294  0D7F  0877               	movf	Flash_Memory_Modify@i,w
 11295  0D80  3E30               	addlw	_Memory& (0+255)
 11296  0D81  0086               	movwf	6
 11297  0D82  3002               	movlw	2	; select bank4/5
 11298  0D83  0087               	movwf	7
 11299  0D84  0876               	movf	??_Flash_Memory_Modify,w
 11300  0D85  0081               	movwf	1
 11301  0D86  3001               	movlw	1
 11302  0D87  00F6               	movwf	??_Flash_Memory_Modify
 11303  0D88  0876               	movf	??_Flash_Memory_Modify,w
 11304  0D89  07F7               	addwf	Flash_Memory_Modify@i,f
 11305  0D8A  3020               	movlw	32
 11306  0D8B  0277               	subwf	Flash_Memory_Modify@i,w
 11307  0D8C  1C03               	skipc
 11308  0D8D  2D7A               	goto	l10230
 11309  0D8E                     l10236:	
 11310                           
 11311                           ;MCU_B1.c: 1060: }
 11312                           ;MCU_B1.c: 1061: setMemory_Data(6, product->Data[11]);
 11313  0D8E  0020               	movlb	0	; select bank0
 11314  0D8F  086D               	movf	_product,w
 11315  0D90  0086               	movwf	6
 11316  0D91  3002               	movlw	2	; select bank4/5
 11317  0D92  0087               	movwf	7
 11318  0D93  3002               	movlw	2	; select bank4/5
 11319  0D94  3F4B               	moviw [11]fsr1
 11320  0D95  00F2               	movwf	setMemory_Data@data
 11321  0D96  3006               	movlw	6
 11322  0D97  319B  236A  318D   	fcall	_setMemory_Data
 11323                           
 11324                           ;MCU_B1.c: 1062: setMemory_Data(0, product->Data[12]);
 11325  0D9A  0020               	movlb	0	; select bank0
 11326  0D9B  086D               	movf	_product,w
 11327  0D9C  0086               	movwf	6
 11328  0D9D  3002               	movlw	2	; select bank4/5
 11329  0D9E  0087               	movwf	7
 11330  0D9F  3002               	movlw	2	; select bank4/5
 11331  0DA0  3F4C               	moviw [12]fsr1
 11332  0DA1  00F2               	movwf	setMemory_Data@data
 11333  0DA2  3000               	movlw	0
 11334  0DA3  319B  236A  318D   	fcall	_setMemory_Data
 11335                           
 11336                           ;MCU_B1.c: 1063: setMemory_Data(1, product->Data[13]);
 11337  0DA6  0020               	movlb	0	; select bank0
 11338  0DA7  086D               	movf	_product,w
 11339  0DA8  0086               	movwf	6
 11340  0DA9  3002               	movlw	2	; select bank4/5
 11341  0DAA  0087               	movwf	7
 11342  0DAB  3002               	movlw	2	; select bank4/5
 11343  0DAC  3F4D               	moviw [13]fsr1
 11344  0DAD  00F2               	movwf	setMemory_Data@data
 11345  0DAE  3001               	movlw	1
 11346  0DAF  319B  236A  318D   	fcall	_setMemory_Data
 11347                           
 11348                           ;MCU_B1.c: 1064: setMemory_Data(2, product->Data[14]);
 11349  0DB2  0020               	movlb	0	; select bank0
 11350  0DB3  086D               	movf	_product,w
 11351  0DB4  0086               	movwf	6
 11352  0DB5  3002               	movlw	2	; select bank4/5
 11353  0DB6  0087               	movwf	7
 11354  0DB7  3002               	movlw	2	; select bank4/5
 11355  0DB8  3F4E               	moviw [14]fsr1
 11356  0DB9  00F2               	movwf	setMemory_Data@data
 11357  0DBA  3002               	movlw	2
 11358  0DBB  319B  236A  318D   	fcall	_setMemory_Data
 11359                           
 11360                           ;MCU_B1.c: 1066: setMemory_Data(3, product->Data[21]);
 11361  0DBE  0020               	movlb	0	; select bank0
 11362  0DBF  086D               	movf	_product,w
 11363  0DC0  0086               	movwf	6
 11364  0DC1  3002               	movlw	2	; select bank4/5
 11365  0DC2  0087               	movwf	7
 11366  0DC3  3002               	movlw	2	; select bank4/5
 11367  0DC4  3F55               	moviw [21]fsr1
 11368  0DC5  00F2               	movwf	setMemory_Data@data
 11369  0DC6  3003               	movlw	3
 11370  0DC7  319B  236A  318D   	fcall	_setMemory_Data
 11371                           
 11372                           ;MCU_B1.c: 1067: setMemory_Data(4, product->Data[22]);
 11373  0DCA  0020               	movlb	0	; select bank0
 11374  0DCB  086D               	movf	_product,w
 11375  0DCC  0086               	movwf	6
 11376  0DCD  3002               	movlw	2	; select bank4/5
 11377  0DCE  0087               	movwf	7
 11378  0DCF  3002               	movlw	2	; select bank4/5
 11379  0DD0  3F56               	moviw [22]fsr1
 11380  0DD1  00F2               	movwf	setMemory_Data@data
 11381  0DD2  3004               	movlw	4
 11382  0DD3  319B  236A  318D   	fcall	_setMemory_Data
 11383                           
 11384                           ;MCU_B1.c: 1068: setMemory_Data(5, product->Data[23]);
 11385  0DD6  0020               	movlb	0	; select bank0
 11386  0DD7  086D               	movf	_product,w
 11387  0DD8  0086               	movwf	6
 11388  0DD9  3002               	movlw	2	; select bank4/5
 11389  0DDA  0087               	movwf	7
 11390  0DDB  3002               	movlw	2	; select bank4/5
 11391  0DDC  3F57               	moviw [23]fsr1
 11392  0DDD  00F2               	movwf	setMemory_Data@data
 11393  0DDE  3005               	movlw	5
 11394  0DDF  319B  236A  318D   	fcall	_setMemory_Data
 11395                           
 11396                           ;MCU_B1.c: 1069: if (myMain.SaveDimmer == 1) {
 11397  0DE2  0021               	movlb	1	; select bank1
 11398  0DE3  1EC9               	btfss	(_myMain^(0+128)+10),5
 11399  0DE4  2DEE               	goto	l10244
 11400                           
 11401                           ;MCU_B1.c: 1070: myMain.SaveDimmer = 0;
 11402  0DE5  12C9               	bcf	(_myMain^(0+128)+10),5
 11403                           
 11404                           ;MCU_B1.c: 1071: setMemory_Data(30, 0xaa);
 11405  0DE6  30AA               	movlw	170
 11406  0DE7  00F6               	movwf	??_Flash_Memory_Modify
 11407  0DE8  0876               	movf	??_Flash_Memory_Modify,w
 11408  0DE9  00F2               	movwf	setMemory_Data@data
 11409  0DEA  301E               	movlw	30
 11410  0DEB  319B  236A  318D   	fcall	_setMemory_Data
 11411  0DEE                     l10244:	
 11412                           
 11413                           ;MCU_B1.c: 1072: }
 11414                           ;MCU_B1.c: 1074: if (Memory.LoopSave == 1) {
 11415  0DEE  0024               	movlb	4	; select bank4
 11416  0DEF  1D54               	btfss	(_Memory^(0+512)+36),2
 11417  0DF0  2DF5               	goto	l1602
 11418                           
 11419                           ;MCU_B1.c: 1075: Memory.LoopSave = 0;
 11420  0DF1  1154               	bcf	(_Memory^(0+512)+36),2
 11421                           
 11422                           ;MCU_B1.c: 1076: myMain.FirstOpen = 0;
 11423  0DF2  0021               	movlb	1	; select bank1
 11424  0DF3  11BF               	bcf	_myMain^(0+128),3
 11425                           
 11426                           ;MCU_B1.c: 1077: myMain.First = 0;
 11427  0DF4  12BF               	bcf	_myMain^(0+128),5
 11428  0DF5                     l1602:	
 11429                           
 11430                           ;MCU_B1.c: 1079: }
 11431                           ;MCU_B1.c: 1080: GIE = 0;
 11432  0DF5  138B               	bcf	11,7	;volatile
 11433                           
 11434                           ;MCU_B1.c: 1081: Flash_Memory_Erasing();
 11435  0DF6  319B  23BA  318D   	fcall	_Flash_Memory_Erasing
 11436                           
 11437                           ;MCU_B1.c: 1082: Flash_Memory_Write();
 11438  0DF9  3191  214C         	fcall	_Flash_Memory_Write
 11439                           
 11440                           ;MCU_B1.c: 1083: GIE = 1;
 11441  0DFB  178B               	bsf	11,7	;volatile
 11442  0DFC  0008               	return
 11443  0DFD                     __end_of_Flash_Memory_Modify:	
 11444                           
 11445                           	psect	text72
 11446  1BBA                     __ptext72:	
 11447 ;; *************** function _Flash_Memory_Erasing *****************
 11448 ;; Defined at:
 11449 ;;		line 1045 in file "../src/MCU_B1.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;		None               void
 11456 ;; Registers used:
 11457 ;;		wreg, status,2, status,0, pclath, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:    4
 11470 ;; This function calls:
 11471 ;;		_Flash_Memory_Unlock
 11472 ;; This function is called by:
 11473 ;;		_Flash_Memory_Modify
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           
 11478                           ;psect for function _Flash_Memory_Erasing
 11479  1BBA                     _Flash_Memory_Erasing:	
 11480                           
 11481                           ;MCU_B1.c: 1046: CFGS = 0;
 11482                           
 11483                           ;incstack = 0
 11484                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 11485  1BBA  0023               	movlb	3	; select bank3
 11486  1BBB  1315               	bcf	21,6	;volatile
 11487                           
 11488                           ;MCU_B1.c: 1047: PMADRH = 0x30;
 11489  1BBC  3030               	movlw	48
 11490  1BBD  0092               	movwf	18	;volatile
 11491                           
 11492                           ;MCU_B1.c: 1048: PMADRL = 0x00;
 11493  1BBE  0191               	clrf	17	;volatile
 11494                           
 11495                           ;MCU_B1.c: 1049: FREE = 1;
 11496  1BBF  1615               	bsf	21,4	;volatile
 11497                           
 11498                           ;MCU_B1.c: 1050: WREN = 1;
 11499  1BC0  1515               	bsf	21,2	;volatile
 11500                           
 11501                           ;MCU_B1.c: 1051: Flash_Memory_Unlock();
 11502  1BC1  319B  234D         	fcall	_Flash_Memory_Unlock
 11503                           
 11504                           ;MCU_B1.c: 1052: WREN = 0;
 11505  1BC3  0023               	movlb	3	; select bank3
 11506  1BC4  1115               	bcf	21,2	;volatile
 11507  1BC5  0008               	return
 11508  1BC6                     __end_of_Flash_Memory_Erasing:	
 11509                           
 11510                           	psect	text73
 11511  046F                     __ptext73:	
 11512 ;; *************** function _Flash_Memory_Initialization *****************
 11513 ;; Defined at:
 11514 ;;		line 933 in file "../src/MCU_B1.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;  value           1    7[COMMON] unsigned char 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;		None               void
 11521 ;; Registers used:
 11522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;Total ram usage:        2 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    5
 11535 ;; This function calls:
 11536 ;;		_Flash_Memory_Read
 11537 ;;		_Flash_Memory_Write
 11538 ;;		_setMemory_Data
 11539 ;; This function is called by:
 11540 ;;		_main
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           
 11545                           ;psect for function _Flash_Memory_Initialization
 11546  046F                     _Flash_Memory_Initialization:	
 11547                           
 11548                           ;MCU_B1.c: 934: char value = 0;
 11549                           
 11550                           ;incstack = 0
 11551                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11552  046F  01F7               	clrf	Flash_Memory_Initialization@value
 11553                           
 11554                           ;MCU_B1.c: 935: if (Flash_Memory_Read(31) == 0xaa) {
 11555  0470  301F               	movlw	31
 11556  0471  319D  252D  3184   	fcall	_Flash_Memory_Read
 11557  0474  3AAA               	xorlw	170
 11558  0475  1D03               	skipz
 11559  0476  2CF1               	goto	l10522
 11560                           
 11561                           ;MCU_B1.c: 936: product->Data[11] = Flash_Memory_Read(6);
 11562  0477  3006               	movlw	6
 11563  0478  319D  252D  3184   	fcall	_Flash_Memory_Read
 11564  047B  00F6               	movwf	??_Flash_Memory_Initialization
 11565  047C  0020               	movlb	0	; select bank0
 11566  047D  086D               	movf	_product,w
 11567  047E  3E0B               	addlw	11
 11568  047F  0086               	movwf	6
 11569  0480  3002               	movlw	2	; select bank4/5
 11570  0481  0087               	movwf	7
 11571  0482  0876               	movf	??_Flash_Memory_Initialization,w
 11572  0483  0081               	movwf	1
 11573                           
 11574                           ;MCU_B1.c: 937: product->Data[12] = Flash_Memory_Read(0);
 11575  0484  3000               	movlw	0
 11576  0485  319D  252D  3184   	fcall	_Flash_Memory_Read
 11577  0488  00F6               	movwf	??_Flash_Memory_Initialization
 11578  0489  0020               	movlb	0	; select bank0
 11579  048A  086D               	movf	_product,w
 11580  048B  3E0C               	addlw	12
 11581  048C  0086               	movwf	6
 11582  048D  3002               	movlw	2	; select bank4/5
 11583  048E  0087               	movwf	7
 11584  048F  0876               	movf	??_Flash_Memory_Initialization,w
 11585  0490  0081               	movwf	1
 11586                           
 11587                           ;MCU_B1.c: 938: product->Data[13] = Flash_Memory_Read(1);
 11588  0491  3001               	movlw	1
 11589  0492  319D  252D  3184   	fcall	_Flash_Memory_Read
 11590  0495  00F6               	movwf	??_Flash_Memory_Initialization
 11591  0496  0020               	movlb	0	; select bank0
 11592  0497  086D               	movf	_product,w
 11593  0498  3E0D               	addlw	13
 11594  0499  0086               	movwf	6
 11595  049A  3002               	movlw	2	; select bank4/5
 11596  049B  0087               	movwf	7
 11597  049C  0876               	movf	??_Flash_Memory_Initialization,w
 11598  049D  0081               	movwf	1
 11599                           
 11600                           ;MCU_B1.c: 939: product->Data[14] = Flash_Memory_Read(2);
 11601  049E  3002               	movlw	2
 11602  049F  319D  252D  3184   	fcall	_Flash_Memory_Read
 11603  04A2  00F6               	movwf	??_Flash_Memory_Initialization
 11604  04A3  0020               	movlb	0	; select bank0
 11605  04A4  086D               	movf	_product,w
 11606  04A5  3E0E               	addlw	14
 11607  04A6  0086               	movwf	6
 11608  04A7  3002               	movlw	2	; select bank4/5
 11609  04A8  0087               	movwf	7
 11610  04A9  0876               	movf	??_Flash_Memory_Initialization,w
 11611  04AA  0081               	movwf	1
 11612                           
 11613                           ;MCU_B1.c: 942: product->Data[21] = Flash_Memory_Read(3);
 11614  04AB  3003               	movlw	3
 11615  04AC  319D  252D  3184   	fcall	_Flash_Memory_Read
 11616  04AF  00F6               	movwf	??_Flash_Memory_Initialization
 11617  04B0  0020               	movlb	0	; select bank0
 11618  04B1  086D               	movf	_product,w
 11619  04B2  3E15               	addlw	21
 11620  04B3  0086               	movwf	6
 11621  04B4  3002               	movlw	2	; select bank4/5
 11622  04B5  0087               	movwf	7
 11623  04B6  0876               	movf	??_Flash_Memory_Initialization,w
 11624  04B7  0081               	movwf	1
 11625                           
 11626                           ;MCU_B1.c: 943: product->Data[22] = Flash_Memory_Read(4);
 11627  04B8  3004               	movlw	4
 11628  04B9  319D  252D  3184   	fcall	_Flash_Memory_Read
 11629  04BC  00F6               	movwf	??_Flash_Memory_Initialization
 11630  04BD  0020               	movlb	0	; select bank0
 11631  04BE  086D               	movf	_product,w
 11632  04BF  3E16               	addlw	22
 11633  04C0  0086               	movwf	6
 11634  04C1  3002               	movlw	2	; select bank4/5
 11635  04C2  0087               	movwf	7
 11636  04C3  0876               	movf	??_Flash_Memory_Initialization,w
 11637  04C4  0081               	movwf	1
 11638                           
 11639                           ;MCU_B1.c: 944: product->Data[23] = Flash_Memory_Read(5);
 11640  04C5  3005               	movlw	5
 11641  04C6  319D  252D  3184   	fcall	_Flash_Memory_Read
 11642  04C9  00F6               	movwf	??_Flash_Memory_Initialization
 11643  04CA  0020               	movlb	0	; select bank0
 11644  04CB  086D               	movf	_product,w
 11645  04CC  3E17               	addlw	23
 11646  04CD  0086               	movwf	6
 11647  04CE  3002               	movlw	2	; select bank4/5
 11648  04CF  0087               	movwf	7
 11649  04D0  0876               	movf	??_Flash_Memory_Initialization,w
 11650  04D1  0081               	movwf	1
 11651                           
 11652                           ;MCU_B1.c: 951: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
 11653  04D2  086D               	movf	_product,w
 11654  04D3  3E0C               	addlw	12
 11655  04D4  0086               	movwf	6
 11656  04D5  3002               	movlw	2	; select bank4/5
 11657  04D6  0087               	movwf	7
 11658  04D7  0801               	movf	1,w
 11659  04D8  3AFF               	xorlw	255
 11660  04D9  1D03               	skipz
 11661  04DA  0008               	return
 11662  04DB  086D               	movf	_product,w
 11663  04DC  3E0D               	addlw	13
 11664  04DD  0086               	movwf	6
 11665  04DE  3002               	movlw	2	; select bank4/5
 11666  04DF  0087               	movwf	7
 11667  04E0  0801               	movf	1,w
 11668  04E1  3AFF               	xorlw	255
 11669  04E2  1D03               	skipz
 11670  04E3  0008               	return
 11671  04E4  086D               	movf	_product,w
 11672  04E5  3E0E               	addlw	14
 11673  04E6  0086               	movwf	6
 11674  04E7  3002               	movlw	2	; select bank4/5
 11675  04E8  0087               	movwf	7
 11676  04E9  0801               	movf	1,w
 11677  04EA  3AFF               	xorlw	255
 11678  04EB  1D03               	skipz
 11679  04EC  0008               	return
 11680                           
 11681                           ;MCU_B1.c: 952: myMain.FirstOpen = 1;
 11682  04ED  0021               	movlb	1	; select bank1
 11683  04EE  15BF               	bsf	_myMain^(0+128),3
 11684                           
 11685                           ;MCU_B1.c: 953: myMain.First = 1;
 11686  04EF  16BF               	bsf	_myMain^(0+128),5
 11687                           
 11688                           ;MCU_B1.c: 954: }
 11689                           ;MCU_B1.c: 955: } else {
 11690  04F0  0008               	return
 11691  04F1                     l10522:	
 11692                           
 11693                           ;MCU_B1.c: 957: setMemory_Data(0, 0xff);
 11694  04F1  30FF               	movlw	255
 11695  04F2  00F6               	movwf	??_Flash_Memory_Initialization
 11696  04F3  0876               	movf	??_Flash_Memory_Initialization,w
 11697  04F4  00F2               	movwf	setMemory_Data@data
 11698  04F5  3000               	movlw	0
 11699  04F6  319B  236A  3184   	fcall	_setMemory_Data
 11700                           
 11701                           ;MCU_B1.c: 958: setMemory_Data(1, 0xff);
 11702  04F9  30FF               	movlw	255
 11703  04FA  00F6               	movwf	??_Flash_Memory_Initialization
 11704  04FB  0876               	movf	??_Flash_Memory_Initialization,w
 11705  04FC  00F2               	movwf	setMemory_Data@data
 11706  04FD  3001               	movlw	1
 11707  04FE  319B  236A  3184   	fcall	_setMemory_Data
 11708                           
 11709                           ;MCU_B1.c: 959: setMemory_Data(2, 0xff);
 11710  0501  30FF               	movlw	255
 11711  0502  00F6               	movwf	??_Flash_Memory_Initialization
 11712  0503  0876               	movf	??_Flash_Memory_Initialization,w
 11713  0504  00F2               	movwf	setMemory_Data@data
 11714  0505  3002               	movlw	2
 11715  0506  319B  236A  3184   	fcall	_setMemory_Data
 11716                           
 11717                           ;MCU_B1.c: 960: setMemory_Data(3, 0xff);
 11718  0509  30FF               	movlw	255
 11719  050A  00F6               	movwf	??_Flash_Memory_Initialization
 11720  050B  0876               	movf	??_Flash_Memory_Initialization,w
 11721  050C  00F2               	movwf	setMemory_Data@data
 11722  050D  3003               	movlw	3
 11723  050E  319B  236A  3184   	fcall	_setMemory_Data
 11724                           
 11725                           ;MCU_B1.c: 961: setMemory_Data(4, 0xff);
 11726  0511  30FF               	movlw	255
 11727  0512  00F6               	movwf	??_Flash_Memory_Initialization
 11728  0513  0876               	movf	??_Flash_Memory_Initialization,w
 11729  0514  00F2               	movwf	setMemory_Data@data
 11730  0515  3004               	movlw	4
 11731  0516  319B  236A  3184   	fcall	_setMemory_Data
 11732                           
 11733                           ;MCU_B1.c: 962: setMemory_Data(5, 0xff);
 11734  0519  30FF               	movlw	255
 11735  051A  00F6               	movwf	??_Flash_Memory_Initialization
 11736  051B  0876               	movf	??_Flash_Memory_Initialization,w
 11737  051C  00F2               	movwf	setMemory_Data@data
 11738  051D  3005               	movlw	5
 11739  051E  319B  236A  3184   	fcall	_setMemory_Data
 11740                           
 11741                           ;MCU_B1.c: 963: setMemory_Data(6, 0xff);
 11742  0521  30FF               	movlw	255
 11743  0522  00F6               	movwf	??_Flash_Memory_Initialization
 11744  0523  0876               	movf	??_Flash_Memory_Initialization,w
 11745  0524  00F2               	movwf	setMemory_Data@data
 11746  0525  3006               	movlw	6
 11747  0526  319B  236A  3184   	fcall	_setMemory_Data
 11748                           
 11749                           ;MCU_B1.c: 964: setMemory_Data(31, 0xaa);
 11750  0529  30AA               	movlw	170
 11751  052A  00F6               	movwf	??_Flash_Memory_Initialization
 11752  052B  0876               	movf	??_Flash_Memory_Initialization,w
 11753  052C  00F2               	movwf	setMemory_Data@data
 11754  052D  301F               	movlw	31
 11755  052E  319B  236A  3184   	fcall	_setMemory_Data
 11756                           
 11757                           ;MCU_B1.c: 969: GIE = 0;
 11758  0531  138B               	bcf	11,7	;volatile
 11759                           
 11760                           ;MCU_B1.c: 970: Flash_Memory_Write();
 11761  0532  3191  214C         	fcall	_Flash_Memory_Write
 11762                           
 11763                           ;MCU_B1.c: 971: GIE = 1;
 11764  0534  178B               	bsf	11,7	;volatile
 11765                           
 11766                           ;MCU_B1.c: 972: myMain.FirstOpen = 1;
 11767  0535  0021               	movlb	1	; select bank1
 11768  0536  15BF               	bsf	_myMain^(0+128),3
 11769                           
 11770                           ;MCU_B1.c: 973: myMain.First = 1;
 11771  0537  16BF               	bsf	_myMain^(0+128),5
 11772                           
 11773                           ;MCU_B1.c: 974: myMain.InitDimmer = 1;
 11774  0538  1649               	bsf	(_myMain^(0+128)+10),4
 11775  0539  0008               	return
 11776  053A                     __end_of_Flash_Memory_Initialization:	
 11777                           
 11778                           	psect	text74
 11779  1B6A                     __ptext74:	
 11780 ;; *************** function _setMemory_Data *****************
 11781 ;; Defined at:
 11782 ;;		line 1098 in file "../src/MCU_B1.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  address         1    wreg     unsigned char 
 11785 ;;  data            1    2[COMMON] unsigned char 
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;  address         1    4[COMMON] unsigned char 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;		None               void
 11790 ;; Registers used:
 11791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11797 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;Total ram usage:        3 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    3
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_Flash_Memory_Initialization
 11808 ;;		_Flash_Memory_Modify
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           
 11813                           ;psect for function _setMemory_Data
 11814  1B6A                     _setMemory_Data:	
 11815                           
 11816                           ;incstack = 0
 11817                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
 11818                           ;setMemory_Data@address stored from wreg
 11819  1B6A  00F4               	movwf	setMemory_Data@address
 11820                           
 11821                           ;MCU_B1.c: 1099: Memory.Data[address] = data;
 11822  1B6B  0872               	movf	setMemory_Data@data,w
 11823  1B6C  00F3               	movwf	??_setMemory_Data
 11824  1B6D  0874               	movf	setMemory_Data@address,w
 11825  1B6E  3E30               	addlw	_Memory& (0+255)
 11826  1B6F  0086               	movwf	6
 11827  1B70  3002               	movlw	2	; select bank4/5
 11828  1B71  0087               	movwf	7
 11829  1B72  0873               	movf	??_setMemory_Data,w
 11830  1B73  0081               	movwf	1
 11831  1B74  0008               	return
 11832  1B75                     __end_of_setMemory_Data:	
 11833                           
 11834                           	psect	text75
 11835  114C                     __ptext75:	
 11836 ;; *************** function _Flash_Memory_Write *****************
 11837 ;; Defined at:
 11838 ;;		line 1026 in file "../src/MCU_B1.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  i               1    3[COMMON] unsigned char 
 11843 ;; Return value:  Size  Location     Type
 11844 ;;		None               void
 11845 ;; Registers used:
 11846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;Total ram usage:        2 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:    4
 11859 ;; This function calls:
 11860 ;;		_Flash_Memory_Unlock
 11861 ;; This function is called by:
 11862 ;;		_Flash_Memory_Initialization
 11863 ;;		_Flash_Memory_Modify
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           
 11868                           ;psect for function _Flash_Memory_Write
 11869  114C                     _Flash_Memory_Write:	
 11870                           
 11871                           ;MCU_B1.c: 1027: char i = 0;
 11872                           
 11873                           ;incstack = 0
 11874                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11875  114C  01F3               	clrf	Flash_Memory_Write@i
 11876                           
 11877                           ;MCU_B1.c: 1028: CFGS = 0;
 11878  114D  0023               	movlb	3	; select bank3
 11879  114E  1315               	bcf	21,6	;volatile
 11880                           
 11881                           ;MCU_B1.c: 1029: PMADRH = 0x30;
 11882  114F  3030               	movlw	48
 11883  1150  0092               	movwf	18	;volatile
 11884                           
 11885                           ;MCU_B1.c: 1030: PMDATH = 0;
 11886  1151  0194               	clrf	20	;volatile
 11887                           
 11888                           ;MCU_B1.c: 1031: FREE = 0;
 11889  1152  1215               	bcf	21,4	;volatile
 11890                           
 11891                           ;MCU_B1.c: 1032: LWLO = 1;
 11892  1153  1695               	bsf	21,5	;volatile
 11893                           
 11894                           ;MCU_B1.c: 1033: WREN = 1;
 11895  1154  1515               	bsf	21,2	;volatile
 11896                           
 11897                           ;MCU_B1.c: 1034: for (i = 0; i < 32; i++) {
 11898  1155  01F3               	clrf	Flash_Memory_Write@i
 11899  1156  3020               	movlw	32
 11900  1157  0273               	subwf	Flash_Memory_Write@i,w
 11901  1158  1803               	btfsc	3,0
 11902  1159  296F               	goto	l1592
 11903  115A                     l9956:	
 11904                           
 11905                           ;MCU_B1.c: 1035: PMADRL = i;
 11906  115A  0873               	movf	Flash_Memory_Write@i,w
 11907  115B  0023               	movlb	3	; select bank3
 11908  115C  0091               	movwf	17	;volatile
 11909                           
 11910                           ;MCU_B1.c: 1036: PMDATL = Memory.Data[i];
 11911  115D  0873               	movf	Flash_Memory_Write@i,w
 11912  115E  3E30               	addlw	_Memory& (0+255)
 11913  115F  0086               	movwf	6
 11914  1160  3002               	movlw	2	; select bank4/5
 11915  1161  0087               	movwf	7
 11916  1162  0801               	movf	1,w
 11917  1163  0093               	movwf	19	;volatile
 11918                           
 11919                           ;MCU_B1.c: 1037: Flash_Memory_Unlock();
 11920  1164  319B  234D  3191   	fcall	_Flash_Memory_Unlock
 11921  1167  3001               	movlw	1
 11922  1168  00F2               	movwf	??_Flash_Memory_Write
 11923  1169  0872               	movf	??_Flash_Memory_Write,w
 11924  116A  07F3               	addwf	Flash_Memory_Write@i,f
 11925  116B  3020               	movlw	32
 11926  116C  0273               	subwf	Flash_Memory_Write@i,w
 11927  116D  1C03               	skipc
 11928  116E  295A               	goto	l9956
 11929  116F                     l1592:	
 11930                           
 11931                           ;MCU_B1.c: 1038: }
 11932                           ;MCU_B1.c: 1039: LWLO = 0;
 11933  116F  0023               	movlb	3	; select bank3
 11934  1170  1295               	bcf	21,5	;volatile
 11935                           
 11936                           ;MCU_B1.c: 1040: Flash_Memory_Unlock();
 11937  1171  319B  234D         	fcall	_Flash_Memory_Unlock
 11938                           
 11939                           ;MCU_B1.c: 1041: WREN = 0;
 11940  1173  0023               	movlb	3	; select bank3
 11941  1174  1115               	bcf	21,2	;volatile
 11942  1175  0008               	return
 11943  1176                     __end_of_Flash_Memory_Write:	
 11944                           
 11945                           	psect	text76
 11946  1B4D                     __ptext76:	
 11947 ;; *************** function _Flash_Memory_Unlock *****************
 11948 ;; Defined at:
 11949 ;;		line 1005 in file "../src/MCU_B1.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;		None
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;		None
 11954 ;; Return value:  Size  Location     Type
 11955 ;;		None               void
 11956 ;; Registers used:
 11957 ;;		wreg
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11967 ;;Total ram usage:        0 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    3
 11970 ;; This function calls:
 11971 ;;		Nothing
 11972 ;; This function is called by:
 11973 ;;		_Flash_Memory_Write
 11974 ;;		_Flash_Memory_Erasing
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function _Flash_Memory_Unlock
 11980  1B4D                     _Flash_Memory_Unlock:	
 11981                           
 11982                           ;MCU_B1.c: 1006: PMCON2 = 0x55;
 11983                           
 11984                           ;incstack = 0
 11985                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 11986  1B4D  3055               	movlw	85
 11987  1B4E  0023               	movlb	3	; select bank3
 11988  1B4F  0096               	movwf	22	;volatile
 11989                           
 11990                           ;MCU_B1.c: 1007: PMCON2 = 0xaa;
 11991  1B50  30AA               	movlw	170
 11992  1B51  0096               	movwf	22	;volatile
 11993                           
 11994                           ;MCU_B1.c: 1008: WR = 1;
 11995  1B52  1495               	bsf	21,1	;volatile
 11996                           
 11997                           ;MCU_B1.c: 1009: __nop();
 11998  1B53  0000               	nop
 11999                           
 12000                           ;MCU_B1.c: 1010: __nop();
 12001  1B54  0000               	nop
 12002  1B55  0008               	return
 12003  1B56                     __end_of_Flash_Memory_Unlock:	
 12004                           
 12005                           	psect	text77
 12006  1D2D                     __ptext77:	
 12007 ;; *************** function _Flash_Memory_Read *****************
 12008 ;; Defined at:
 12009 ;;		line 1014 in file "../src/MCU_B1.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  address         1    wreg     unsigned char 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;  address         1    4[COMMON] unsigned char 
 12014 ;;  ret             1    5[COMMON] unsigned char 
 12015 ;;  i               1    3[COMMON] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      unsigned char 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;Total ram usage:        4 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:    3
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_Flash_Memory_Initialization
 12036 ;;		_Flash_Memory_Modify
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040                           
 12041                           ;psect for function _Flash_Memory_Read
 12042  1D2D                     _Flash_Memory_Read:	
 12043                           
 12044                           ;incstack = 0
 12045                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 12046                           ;Flash_Memory_Read@address stored from wreg
 12047  1D2D  00F4               	movwf	Flash_Memory_Read@address
 12048                           
 12049                           ;MCU_B1.c: 1015: char i = 0, ret = 0;
 12050  1D2E  01F3               	clrf	Flash_Memory_Read@i
 12051  1D2F  01F5               	clrf	Flash_Memory_Read@ret
 12052                           
 12053                           ;MCU_B1.c: 1016: PMADRH = 0x30;
 12054  1D30  3030               	movlw	48
 12055  1D31  0023               	movlb	3	; select bank3
 12056  1D32  0092               	movwf	18	;volatile
 12057                           
 12058                           ;MCU_B1.c: 1017: PMADRL = address;
 12059  1D33  0874               	movf	Flash_Memory_Read@address,w
 12060  1D34  0091               	movwf	17	;volatile
 12061                           
 12062                           ;MCU_B1.c: 1018: CFGS = 0;
 12063  1D35  1315               	bcf	21,6	;volatile
 12064                           
 12065                           ;MCU_B1.c: 1019: RD = 1;
 12066  1D36  1415               	bsf	21,0	;volatile
 12067                           
 12068                           ;MCU_B1.c: 1020: i = PMDATH;
 12069  1D37  0814               	movf	20,w	;volatile
 12070  1D38  00F2               	movwf	??_Flash_Memory_Read
 12071  1D39  0872               	movf	??_Flash_Memory_Read,w
 12072  1D3A  00F3               	movwf	Flash_Memory_Read@i
 12073                           
 12074                           ;MCU_B1.c: 1021: ret = PMDATL;
 12075  1D3B  0813               	movf	19,w	;volatile
 12076  1D3C  00F2               	movwf	??_Flash_Memory_Read
 12077  1D3D  0872               	movf	??_Flash_Memory_Read,w
 12078  1D3E  00F5               	movwf	Flash_Memory_Read@ret
 12079                           
 12080                           ;MCU_B1.c: 1022: return ret;
 12081  1D3F  0875               	movf	Flash_Memory_Read@ret,w
 12082  1D40  0008               	return
 12083  1D41                     __end_of_Flash_Memory_Read:	
 12084                           
 12085                           	psect	text78
 12086  0B6B                     __ptext78:	
 12087 ;; *************** function _Exception_Main *****************
 12088 ;; Defined at:
 12089 ;;		line 505 in file "../src/Main_B1.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;		None
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;  i               2   10[BANK0 ] int 
 12094 ;;  error           1    9[BANK0 ] unsigned char 
 12095 ;;  count           1    8[BANK0 ] unsigned char 
 12096 ;;  status          1    7[BANK0 ] unsigned char 
 12097 ;;  lights          1    6[BANK0 ] unsigned char 
 12098 ;; Return value:  Size  Location     Type
 12099 ;;		None               void
 12100 ;; Registers used:
 12101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;Total ram usage:        7 bytes
 12112 ;; Hardware stack levels used:    1
 12113 ;; Hardware stack levels required when called:    5
 12114 ;; This function calls:
 12115 ;;		_getDimmerLights_Status
 12116 ;;		_getMain_All_Error_Status
 12117 ;;		_getMain_All_LightsStatus
 12118 ;;		_setBuz
 12119 ;;		_setDimmerLights_SwOff
 12120 ;;		_setLED
 12121 ;; This function is called by:
 12122 ;;		_main
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _Exception_Main
 12128  0B6B                     _Exception_Main:	
 12129                           
 12130                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
 12131                           
 12132                           ;incstack = 0
 12133                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12134  0B6B  3000               	movlw	0
 12135  0B6C  319E  2603  318B   	fcall	_getMain_All_Error_Status
 12136  0B6F  00F9               	movwf	??_Exception_Main
 12137  0B70  0879               	movf	??_Exception_Main,w
 12138  0B71  0020               	movlb	0	; select bank0
 12139  0B72  00A9               	movwf	Exception_Main@error
 12140                           
 12141                           ;Main_B1.c: 507: char lights = 0, count = 3;
 12142  0B73  01A6               	clrf	Exception_Main@lights
 12143  0B74  3003               	movlw	3
 12144  0B75  00F9               	movwf	??_Exception_Main
 12145  0B76  0879               	movf	??_Exception_Main,w
 12146  0B77  00A8               	movwf	Exception_Main@count
 12147                           
 12148                           ;Main_B1.c: 508: char status = 0;
 12149  0B78  01A7               	clrf	Exception_Main@status
 12150                           
 12151                           ;Main_B1.c: 510: if (myMain.Error_Run == 1) {
 12152  0B79  0021               	movlb	1	; select bank1
 12153  0B7A  1DC9               	btfss	(_myMain^(0+128)+10),3
 12154  0B7B  2B8A               	goto	l10622
 12155                           
 12156                           ;Main_B1.c: 511: if (error == 0) {
 12157  0B7C  0020               	movlb	0	; select bank0
 12158  0B7D  08A9               	movf	Exception_Main@error,f
 12159  0B7E  1D03               	skipz
 12160  0B7F  0008               	return
 12161                           
 12162                           ;Main_B1.c: 512: myMain.Error_Run = 0;
 12163  0B80  0021               	movlb	1	; select bank1
 12164  0B81  11C9               	bcf	(_myMain^(0+128)+10),3
 12165                           
 12166                           ;Main_B1.c: 515: setLED(99, 10);
 12167  0B82  300A               	movlw	10
 12168  0B83  00F9               	movwf	??_Exception_Main
 12169  0B84  0879               	movf	??_Exception_Main,w
 12170  0B85  00F4               	movwf	setLED@command
 12171  0B86  3063               	movlw	99
 12172  0B87  318A  22FB         	fcall	_setLED
 12173                           
 12174                           ;Main_B1.c: 528: }
 12175                           ;Main_B1.c: 529: } else {
 12176  0B89  0008               	return
 12177  0B8A                     l10622:	
 12178                           
 12179                           ;Main_B1.c: 530: if (error != 0) {
 12180  0B8A  0020               	movlb	0	; select bank0
 12181  0B8B  0829               	movf	Exception_Main@error,w
 12182  0B8C  1903               	btfsc	3,2
 12183  0B8D  0008               	return
 12184                           
 12185                           ;Main_B1.c: 531: myMain.Error_Run = 1;
 12186  0B8E  0021               	movlb	1	; select bank1
 12187  0B8F  15C9               	bsf	(_myMain^(0+128)+10),3
 12188                           
 12189                           ;Main_B1.c: 533: setLED(99, 11);
 12190  0B90  300B               	movlw	11
 12191  0B91  00F9               	movwf	??_Exception_Main
 12192  0B92  0879               	movf	??_Exception_Main,w
 12193  0B93  00F4               	movwf	setLED@command
 12194  0B94  3063               	movlw	99
 12195  0B95  318A  22FB  318B   	fcall	_setLED
 12196                           
 12197                           ;Main_B1.c: 544: switch (error) {
 12198  0B98  2BD7               	goto	l10646
 12199  0B99                     l10628:	
 12200                           ;Main_B1.c: 545: case 2:
 12201                           
 12202                           
 12203                           ;Main_B1.c: 552: if (getMain_All_LightsStatus() == 1) {
 12204  0B99  319D  25BE  318B   	fcall	_getMain_All_LightsStatus
 12205  0B9C  3A01               	xorlw	1
 12206  0B9D  1D03               	skipz
 12207  0B9E  2BA8               	goto	l10632
 12208                           
 12209                           ;Main_B1.c: 553: setBuz(10, 300);
 12210  0B9F  302C               	movlw	44
 12211  0BA0  0020               	movlb	0	; select bank0
 12212  0BA1  00A4               	movwf	setBuz@time
 12213  0BA2  3001               	movlw	1
 12214  0BA3  00A5               	movwf	setBuz@time+1
 12215  0BA4  300A               	movlw	10
 12216  0BA5  3195  25F3  318B   	fcall	_setBuz
 12217  0BA8                     l10632:	
 12218                           
 12219                           ;Main_B1.c: 554: }
 12220                           ;Main_B1.c: 556: for (int i = 0; i < count; i++) {
 12221  0BA8  0020               	movlb	0	; select bank0
 12222  0BA9  01AA               	clrf	Exception_Main@i
 12223  0BAA  01AB               	clrf	Exception_Main@i+1
 12224  0BAB                     l10642:	
 12225  0BAB  082B               	movf	Exception_Main@i+1,w
 12226  0BAC  3A80               	xorlw	128
 12227  0BAD  00F9               	movwf	??_Exception_Main
 12228  0BAE  3080               	movlw	128
 12229  0BAF  0279               	subwf	??_Exception_Main,w
 12230  0BB0  1D03               	skipz
 12231  0BB1  2BB4               	goto	u11915
 12232  0BB2  0828               	movf	Exception_Main@count,w
 12233  0BB3  022A               	subwf	Exception_Main@i,w
 12234  0BB4                     u11915:	
 12235  0BB4  1803               	btfsc	3,0
 12236  0BB5  2BD5               	goto	u11910
 12237                           
 12238                           ;Main_B1.c: 558: if (getDimmerLights_Status(i + 1) == 1) {
 12239  0BB6  0020               	movlb	0	; select bank0
 12240  0BB7  082A               	movf	Exception_Main@i,w
 12241  0BB8  3E01               	addlw	1
 12242  0BB9  319B  23E1  318B   	fcall	_getDimmerLights_Status
 12243  0BBC  3A01               	xorlw	1
 12244  0BBD  1D03               	skipz
 12245  0BBE  2BCF               	goto	l10640
 12246                           
 12247                           ;Main_B1.c: 559: DimmerLights->SwFlag = 1;
 12248  0BBF  0020               	movlb	0	; select bank0
 12249  0BC0  0869               	movf	_DimmerLights,w
 12250  0BC1  0086               	movwf	6
 12251  0BC2  3001               	movlw	1	; select bank2/3
 12252  0BC3  0087               	movwf	7
 12253  0BC4  1401               	bsf	1,0
 12254                           
 12255                           ;Main_B1.c: 560: DimmerLights->Status = 0;
 12256  0BC5  0A69               	incf	_DimmerLights,w
 12257  0BC6  0086               	movwf	6
 12258  0BC7  3001               	movlw	1	; select bank2/3
 12259  0BC8  0087               	movwf	7
 12260  0BC9  1001               	bcf	1,0
 12261                           
 12262                           ;Main_B1.c: 561: setDimmerLights_SwOff(i + 1);
 12263  0BCA  082A               	movf	Exception_Main@i,w
 12264  0BCB  3E01               	addlw	1
 12265  0BCC  3192  2243  318B   	fcall	_setDimmerLights_SwOff
 12266  0BCF                     l10640:	
 12267  0BCF  3001               	movlw	1
 12268  0BD0  0020               	movlb	0	; select bank0
 12269  0BD1  07AA               	addwf	Exception_Main@i,f
 12270  0BD2  3000               	movlw	0
 12271  0BD3  3DAB               	addwfc	Exception_Main@i+1,f
 12272  0BD4  2BAB               	goto	l10642
 12273  0BD5                     u11910:	
 12274  0BD5  0020               	movlb	0	; select bank0
 12275  0BD6  0008               	return
 12276  0BD7                     l10646:	
 12277                           ;Main_B1.c: 592: }
 12278                           
 12279                           ;Main_B1.c: 591: break;
 12280                           
 12281                           ;Main_B1.c: 567: case 3:
 12282                           
 12283                           ;Main_B1.c: 562: }
 12284                           ;Main_B1.c: 563: }
 12285                           ;Main_B1.c: 566: break;
 12286                           
 12287  0BD7  0020               	movlb	0	; select bank0
 12288  0BD8  0829               	movf	Exception_Main@error,w
 12289                           
 12290                           ; Switch size 1, requested type "space"
 12291                           ; Number of cases is 2, Range of values is 2 to 3
 12292                           ; switch strategies available:
 12293                           ; Name         Instructions Cycles
 12294                           ; simple_byte            7     4 (average)
 12295                           ; direct_byte           13     9 (fixed)
 12296                           ; jumptable            263     9 (fixed)
 12297                           ;	Chosen strategy is simple_byte
 12298  0BD9  3A02               	xorlw	2	; case 2
 12299  0BDA  1903               	skipnz
 12300  0BDB  2B99               	goto	l10628
 12301  0BDC  3A01               	xorlw	1	; case 3
 12302  0BDD  1903               	skipnz
 12303  0BDE  2BE1               	goto	l1837
 12304  0BDF  2BE1               	goto	l1837
 12305  0BE0  0008               	return
 12306  0BE1                     l1837:	
 12307  0BE1  0008               	return
 12308  0BE2                     __end_of_Exception_Main:	
 12309                           
 12310                           	psect	text79
 12311  1E03                     __ptext79:	
 12312 ;; *************** function _getMain_All_Error_Status *****************
 12313 ;; Defined at:
 12314 ;;		line 430 in file "../src/Main_B1.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  command         1    wreg     unsigned char 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;  command         1    3[COMMON] unsigned char 
 12319 ;;  status          1    6[COMMON] unsigned char 
 12320 ;; Return value:  Size  Location     Type
 12321 ;;                  1    wreg      unsigned char 
 12322 ;; Registers used:
 12323 ;;		wreg, status,2, status,0
 12324 ;; Tracked objects:
 12325 ;;		On entry : 0/0
 12326 ;;		On exit  : 0/0
 12327 ;;		Unchanged: 0/0
 12328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;Total ram usage:        5 bytes
 12334 ;; Hardware stack levels used:    1
 12335 ;; Hardware stack levels required when called:    3
 12336 ;; This function calls:
 12337 ;;		Nothing
 12338 ;; This function is called by:
 12339 ;;		_Exception_Main
 12340 ;;		_setTemp_Main
 12341 ;;		_getRxData
 12342 ;;		_setSw_Main
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346                           
 12347                           ;psect for function _getMain_All_Error_Status
 12348  1E03                     _getMain_All_Error_Status:	
 12349                           
 12350                           ;incstack = 0
 12351                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
 12352                           ;getMain_All_Error_Status@command stored from wreg
 12353  1E03  00F3               	movwf	getMain_All_Error_Status@command
 12354                           
 12355                           ;Main_B1.c: 431: char status = 0;
 12356  1E04  01F6               	clrf	getMain_All_Error_Status@status
 12357                           
 12358                           ;Main_B1.c: 442: if (status == 0 && command != 2) {
 12359  1E05  08F6               	movf	getMain_All_Error_Status@status,f
 12360  1E06  1D03               	skipz
 12361  1E07  2E1A               	goto	l1813
 12362  1E08  0873               	movf	getMain_All_Error_Status@command,w
 12363  1E09  3A02               	xorlw	2
 12364  1E0A  1903               	skipnz
 12365  1E0B  2E1A               	goto	l1813
 12366                           
 12367                           ;Main_B1.c: 443: status = Temp.ERROR == 1 ? 2 : 0;
 12368  1E0C  0021               	movlb	1	; select bank1
 12369  1E0D  18E1               	btfsc	_Temp^(0+128),1
 12370  1E0E  2E12               	goto	l7496
 12371  1E0F  01F4               	clrf	_getMain_All_Error_Status$4125
 12372  1E10  01F5               	clrf	_getMain_All_Error_Status$4125+1
 12373  1E11  2E16               	goto	l1817
 12374  1E12                     l7496:	
 12375  1E12  3002               	movlw	2
 12376  1E13  00F4               	movwf	_getMain_All_Error_Status$4125
 12377  1E14  3000               	movlw	0
 12378  1E15  00F5               	movwf	_getMain_All_Error_Status$4125+1
 12379  1E16                     l1817:	
 12380  1E16  0874               	movf	_getMain_All_Error_Status$4125,w
 12381  1E17  00F2               	movwf	??_getMain_All_Error_Status
 12382  1E18  0872               	movf	??_getMain_All_Error_Status,w
 12383  1E19  00F6               	movwf	getMain_All_Error_Status@status
 12384  1E1A                     l1813:	
 12385                           
 12386                           ;Main_B1.c: 444: }
 12387                           ;Main_B1.c: 461: return status;
 12388  1E1A  0876               	movf	getMain_All_Error_Status@status,w
 12389  1E1B  0008               	return
 12390  1E1C                     __end_of_getMain_All_Error_Status:	
 12391                           
 12392                           	psect	text80
 12393  1D19                     __ptext80:	
 12394 ;; *************** function _DimmerLights_Main *****************
 12395 ;; Defined at:
 12396 ;;		line 839 in file "../src/Dimmer_B1.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;		None
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;		None
 12401 ;; Return value:  Size  Location     Type
 12402 ;;		None               void
 12403 ;; Registers used:
 12404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:    8
 12417 ;; This function calls:
 12418 ;;		_DimmerLights_DimmingFunction
 12419 ;;		_setDimmerLights_Main
 12420 ;; This function is called by:
 12421 ;;		_main
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           
 12426                           ;psect for function _DimmerLights_Main
 12427  1D19                     _DimmerLights_Main:	
 12428                           
 12429                           ;Dimmer_B1.c: 851: setDimmerLights_Main(1);
 12430                           
 12431                           ;incstack = 0
 12432                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12433  1D19  3001               	movlw	1
 12434  1D1A  3188  20FD  319D   	fcall	_setDimmerLights_Main
 12435                           
 12436                           ;Dimmer_B1.c: 854: DimmerLights_DimmingFunction(1);
 12437  1D1D  3001               	movlw	1
 12438  1D1E  318D  25FD  319D   	fcall	_DimmerLights_DimmingFunction
 12439                           
 12440                           ;Dimmer_B1.c: 864: setDimmerLights_Main(2);
 12441  1D21  3002               	movlw	2
 12442  1D22  3188  20FD  319D   	fcall	_setDimmerLights_Main
 12443                           
 12444                           ;Dimmer_B1.c: 866: DimmerLights_DimmingFunction(2);
 12445  1D25  3002               	movlw	2
 12446  1D26  318D  25FD  319D   	fcall	_DimmerLights_DimmingFunction
 12447                           
 12448                           ;Dimmer_B1.c: 876: setDimmerLights_Main(3);
 12449  1D29  3003               	movlw	3
 12450  1D2A  3188  20FD         	fcall	_setDimmerLights_Main
 12451  1D2C  0008               	return
 12452  1D2D                     __end_of_DimmerLights_Main:	
 12453                           
 12454                           	psect	text81
 12455  08FD                     __ptext81:	
 12456 ;; *************** function _setDimmerLights_Main *****************
 12457 ;; Defined at:
 12458 ;;		line 886 in file "../src/Dimmer_B1.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  lights          1    wreg     unsigned char 
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;  lights          1   68[BANK0 ] unsigned char 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;		None               void
 12465 ;; Registers used:
 12466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;Total ram usage:        1 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    7
 12479 ;; This function calls:
 12480 ;;		_DimmerLights_SelectPointer
 12481 ;;		_getDimmerLights_Allow_Condition
 12482 ;;		_getMain_All_LightsStatus
 12483 ;;		_setDimmerLights_Dimming
 12484 ;;		_setDimmerLights_OnOff
 12485 ;; This function is called by:
 12486 ;;		_DimmerLights_Main
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           
 12491                           ;psect for function _setDimmerLights_Main
 12492  08FD                     _setDimmerLights_Main:	
 12493                           
 12494                           ;incstack = 0
 12495                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12496                           ;setDimmerLights_Main@lights stored from wreg
 12497  08FD  0020               	movlb	0	; select bank0
 12498  08FE  00E4               	movwf	setDimmerLights_Main@lights
 12499                           
 12500                           ;Dimmer_B1.c: 888: DimmerLights_SelectPointer(lights);
 12501  08FF  0864               	movf	setDimmerLights_Main@lights,w
 12502  0900  319F  2738  3188   	fcall	_DimmerLights_SelectPointer
 12503                           
 12504                           ;Dimmer_B1.c: 889: if (DimmerLights->Trigger == 1) {
 12505  0903  0020               	movlb	0	; select bank0
 12506  0904  0869               	movf	_DimmerLights,w
 12507  0905  0086               	movwf	6
 12508  0906  3001               	movlw	1	; select bank2/3
 12509  0907  0087               	movwf	7
 12510  0908  1C81               	btfss	1,1
 12511  0909  2929               	goto	l10106
 12512                           
 12513                           ;Dimmer_B1.c: 890: if (getDimmerLights_Allow_Condition(lights) == 0) {
 12514  090A  0864               	movf	setDimmerLights_Main@lights,w
 12515  090B  3193  23AE  3188   	fcall	_getDimmerLights_Allow_Condition
 12516  090E  3800               	iorlw	0
 12517  090F  1D03               	skipz
 12518  0910  0008               	return
 12519                           
 12520                           ;Dimmer_B1.c: 891: DimmerLights->Trigger = 0;
 12521  0911  0020               	movlb	0	; select bank0
 12522  0912  0869               	movf	_DimmerLights,w
 12523  0913  0086               	movwf	6
 12524  0914  3001               	movlw	1	; select bank2/3
 12525  0915  0087               	movwf	7
 12526  0916  1081               	bcf	1,1
 12527                           
 12528                           ;Dimmer_B1.c: 892: if (DimmerLights->Switch == 1) {
 12529  0917  0869               	movf	_DimmerLights,w
 12530  0918  0086               	movwf	6
 12531  0919  3001               	movlw	1	; select bank2/3
 12532  091A  0087               	movwf	7
 12533  091B  1D01               	btfss	1,2
 12534  091C  2923               	goto	l10104
 12535                           
 12536                           ;Dimmer_B1.c: 893: setDimmerLights_OnOff(lights, 1);
 12537  091D  01E0               	clrf	setDimmerLights_OnOff@command
 12538  091E  0AE0               	incf	setDimmerLights_OnOff@command,f
 12539  091F  0864               	movf	setDimmerLights_Main@lights,w
 12540  0920  318F  274E         	fcall	_setDimmerLights_OnOff
 12541                           
 12542                           ;Dimmer_B1.c: 894: } else {
 12543  0922  0008               	return
 12544  0923                     l10104:	
 12545                           
 12546                           ;Dimmer_B1.c: 895: setDimmerLights_OnOff(lights, 0);
 12547  0923  0020               	movlb	0	; select bank0
 12548  0924  01E0               	clrf	setDimmerLights_OnOff@command
 12549  0925  0864               	movf	setDimmerLights_Main@lights,w
 12550  0926  318F  274E         	fcall	_setDimmerLights_OnOff
 12551                           
 12552                           ;Dimmer_B1.c: 896: }
 12553                           ;Dimmer_B1.c: 897: }
 12554                           ;Dimmer_B1.c: 898: } else {
 12555  0928  0008               	return
 12556  0929                     l10106:	
 12557                           
 12558                           ;Dimmer_B1.c: 899: if (getMain_All_LightsStatus() == 1) {
 12559  0929  319D  25BE  3188   	fcall	_getMain_All_LightsStatus
 12560  092C  3A01               	xorlw	1
 12561  092D  1D03               	skipz
 12562  092E  2955               	goto	l10118
 12563                           
 12564                           ;Dimmer_B1.c: 900: if (DimmerLights->DimmingTrigger == 1) {
 12565  092F  0020               	movlb	0	; select bank0
 12566  0930  0869               	movf	_DimmerLights,w
 12567  0931  0086               	movwf	6
 12568  0932  3001               	movlw	1	; select bank2/3
 12569  0933  0087               	movwf	7
 12570  0934  1E01               	btfss	1,4
 12571  0935  0008               	return
 12572                           
 12573                           ;Dimmer_B1.c: 901: if (getDimmerLights_Allow_Condition(lights) == 0) {
 12574  0936  0864               	movf	setDimmerLights_Main@lights,w
 12575  0937  3193  23AE  3188   	fcall	_getDimmerLights_Allow_Condition
 12576  093A  3800               	iorlw	0
 12577  093B  1D03               	skipz
 12578  093C  0008               	return
 12579                           
 12580                           ;Dimmer_B1.c: 902: DimmerLights->DimmingTrigger = 0;
 12581  093D  0020               	movlb	0	; select bank0
 12582  093E  0869               	movf	_DimmerLights,w
 12583  093F  0086               	movwf	6
 12584  0940  3001               	movlw	1	; select bank2/3
 12585  0941  0087               	movwf	7
 12586  0942  1201               	bcf	1,4
 12587                           
 12588                           ;Dimmer_B1.c: 903: if (DimmerLights->DimmingSwitch == 1) {
 12589  0943  0869               	movf	_DimmerLights,w
 12590  0944  0086               	movwf	6
 12591  0945  3001               	movlw	1	; select bank2/3
 12592  0946  0087               	movwf	7
 12593  0947  1E81               	btfss	1,5
 12594  0948  294F               	goto	l10116
 12595                           
 12596                           ;Dimmer_B1.c: 904: setDimmerLights_Dimming(lights, 1);
 12597  0949  01DD               	clrf	setDimmerLights_Dimming@status
 12598  094A  0ADD               	incf	setDimmerLights_Dimming@status,f
 12599  094B  0864               	movf	setDimmerLights_Main@lights,w
 12600  094C  3195  2506         	fcall	_setDimmerLights_Dimming
 12601                           
 12602                           ;Dimmer_B1.c: 905: } else {
 12603  094E  0008               	return
 12604  094F                     l10116:	
 12605                           
 12606                           ;Dimmer_B1.c: 906: setDimmerLights_Dimming(lights, 0);
 12607  094F  0020               	movlb	0	; select bank0
 12608  0950  01DD               	clrf	setDimmerLights_Dimming@status
 12609  0951  0864               	movf	setDimmerLights_Main@lights,w
 12610  0952  3195  2506         	fcall	_setDimmerLights_Dimming
 12611                           
 12612                           ;Dimmer_B1.c: 907: }
 12613                           ;Dimmer_B1.c: 908: }
 12614                           ;Dimmer_B1.c: 909: }
 12615                           ;Dimmer_B1.c: 910: } else {
 12616  0954  0008               	return
 12617  0955                     l10118:	
 12618                           
 12619                           ;Dimmer_B1.c: 911: if (DimmerLights->DimmingTrigger == 1) {
 12620  0955  0020               	movlb	0	; select bank0
 12621  0956  0869               	movf	_DimmerLights,w
 12622  0957  0086               	movwf	6
 12623  0958  3001               	movlw	1	; select bank2/3
 12624  0959  0087               	movwf	7
 12625  095A  1E01               	btfss	1,4
 12626  095B  0008               	return
 12627                           
 12628                           ;Dimmer_B1.c: 912: DimmerLights->DimmingTrigger = 0;
 12629  095C  0869               	movf	_DimmerLights,w
 12630  095D  0086               	movwf	6
 12631  095E  3001               	movlw	1	; select bank2/3
 12632  095F  0087               	movwf	7
 12633  0960  1201               	bcf	1,4
 12634  0961  0008               	return
 12635  0962                     __end_of_setDimmerLights_Main:	
 12636                           
 12637                           	psect	text82
 12638  0F4E                     __ptext82:	
 12639 ;; *************** function _setDimmerLights_OnOff *****************
 12640 ;; Defined at:
 12641 ;;		line 963 in file "../src/Dimmer_B1.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  lights          1    wreg     unsigned char 
 12644 ;;  command         1   64[BANK0 ] unsigned char 
 12645 ;; Auto vars:     Size  Location     Type
 12646 ;;  lights          1   67[BANK0 ] unsigned char 
 12647 ;; Return value:  Size  Location     Type
 12648 ;;		None               void
 12649 ;; Registers used:
 12650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12651 ;; Tracked objects:
 12652 ;;		On entry : 0/0
 12653 ;;		On exit  : 0/0
 12654 ;;		Unchanged: 0/0
 12655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12656 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;Total ram usage:        4 bytes
 12661 ;; Hardware stack levels used:    1
 12662 ;; Hardware stack levels required when called:    6
 12663 ;; This function calls:
 12664 ;;		_DimmerIntr_ValueCalculate
 12665 ;;		_getCmd_Status
 12666 ;;		_getDelayOff_GO
 12667 ;;		_getDimmerLights_PercentToValue
 12668 ;;		_getMain_All_LightsStatus
 12669 ;;		_setCmd_Status
 12670 ;;		_setDelayOff_GO
 12671 ;;		_setDimmerIntr_ControlStatus
 12672 ;;		_setDimmerIntr_DimmingValue
 12673 ;;		_setDimmerIntr_Dimming_RF
 12674 ;;		_setDimmerIntr_MaxmumValue
 12675 ;;		_setDimmerLights_DimmingClose
 12676 ;;		_setLED
 12677 ;;		_setProductData
 12678 ;;		_setRF_DimmerLights
 12679 ;;		_setTxData
 12680 ;; This function is called by:
 12681 ;;		_setDimmerLights_Main
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           
 12686                           ;psect for function _setDimmerLights_OnOff
 12687  0F4E                     _setDimmerLights_OnOff:	
 12688                           
 12689                           ;incstack = 0
 12690                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12691                           ;setDimmerLights_OnOff@lights stored from wreg
 12692  0F4E  0020               	movlb	0	; select bank0
 12693  0F4F  00E3               	movwf	setDimmerLights_OnOff@lights
 12694                           
 12695                           ;Dimmer_B1.c: 965: if (command == 1) {
 12696  0F50  0860               	movf	setDimmerLights_OnOff@command,w
 12697  0F51  3A01               	xorlw	1
 12698  0F52  1D03               	skipz
 12699  0F53  2FB1               	goto	l9872
 12700                           
 12701                           ;Dimmer_B1.c: 967: setDimmerIntr_ControlStatus(lights, 1);
 12702  0F54  01F2               	clrf	setDimmerIntr_ControlStatus@command
 12703  0F55  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
 12704  0F56  0863               	movf	setDimmerLights_OnOff@lights,w
 12705  0F57  3192  22B3  318F   	fcall	_setDimmerIntr_ControlStatus
 12706                           
 12707                           ;Dimmer_B1.c: 977: setLED(lights, 0);
 12708  0F5A  01F4               	clrf	setLED@command
 12709  0F5B  0020               	movlb	0	; select bank0
 12710  0F5C  0863               	movf	setDimmerLights_OnOff@lights,w
 12711  0F5D  318A  22FB  318F   	fcall	_setLED
 12712                           
 12713                           ;Dimmer_B1.c: 998: if (DimmerLights->DimmingRun == 1) {
 12714  0F60  0020               	movlb	0	; select bank0
 12715  0F61  0A69               	incf	_DimmerLights,w
 12716  0F62  0086               	movwf	6
 12717  0F63  3001               	movlw	1	; select bank2/3
 12718  0F64  0087               	movwf	7
 12719  0F65  1F01               	btfss	1,6
 12720  0F66  2F88               	goto	l9862
 12721                           
 12722                           ;Dimmer_B1.c: 999: DimmerLights->DimmingRun = 0;
 12723  0F67  0A69               	incf	_DimmerLights,w
 12724  0F68  0086               	movwf	6
 12725  0F69  3001               	movlw	1	; select bank2/3
 12726  0F6A  0087               	movwf	7
 12727  0F6B  1301               	bcf	1,6
 12728                           
 12729                           ;Dimmer_B1.c: 1000: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 12730  0F6C  0863               	movf	setDimmerLights_OnOff@lights,w
 12731  0F6D  3E14               	addlw	20
 12732  0F6E  076D               	addwf	_product,w
 12733  0F6F  00E1               	movwf	??_setDimmerLights_OnOff
 12734  0F70  0861               	movf	??_setDimmerLights_OnOff,w
 12735  0F71  0086               	movwf	6
 12736  0F72  3002               	movlw	2	; select bank4/5
 12737  0F73  0087               	movwf	7
 12738  0F74  0801               	movf	1,w
 12739  0F75  3197  2745  318F   	fcall	_getDimmerLights_PercentToValue
 12740  0F78  0020               	movlb	0	; select bank0
 12741  0F79  00E2               	movwf	??_setDimmerLights_OnOff+1
 12742  0F7A  0862               	movf	??_setDimmerLights_OnOff+1,w
 12743  0F7B  00D7               	movwf	setDimmerIntr_MaxmumValue@value
 12744  0F7C  0863               	movf	setDimmerLights_OnOff@lights,w
 12745  0F7D  3190  2078  318F   	fcall	_setDimmerIntr_MaxmumValue
 12746                           
 12747                           ;Dimmer_B1.c: 1001: setDimmerIntr_Dimming_RF(lights, 1);
 12748  0F80  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 12749  0F81  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 12750  0F82  0020               	movlb	0	; select bank0
 12751  0F83  0863               	movf	setDimmerLights_OnOff@lights,w
 12752  0F84  3192  22F0  318F   	fcall	_setDimmerIntr_Dimming_RF
 12753                           
 12754                           ;Dimmer_B1.c: 1002: } else {
 12755  0F87  2F9D               	goto	l9864
 12756  0F88                     l9862:	
 12757                           
 12758                           ;Dimmer_B1.c: 1005: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pr
      +                          oduct->Data[20 + lights]));
 12759  0F88  0020               	movlb	0	; select bank0
 12760  0F89  0863               	movf	setDimmerLights_OnOff@lights,w
 12761  0F8A  3E14               	addlw	20
 12762  0F8B  076D               	addwf	_product,w
 12763  0F8C  00E1               	movwf	??_setDimmerLights_OnOff
 12764  0F8D  0861               	movf	??_setDimmerLights_OnOff,w
 12765  0F8E  0086               	movwf	6
 12766  0F8F  3002               	movlw	2	; select bank4/5
 12767  0F90  0087               	movwf	7
 12768  0F91  0801               	movf	1,w
 12769  0F92  3197  2745  318F   	fcall	_getDimmerLights_PercentToValue
 12770  0F95  0020               	movlb	0	; select bank0
 12771  0F96  00E2               	movwf	??_setDimmerLights_OnOff+1
 12772  0F97  0862               	movf	??_setDimmerLights_OnOff+1,w
 12773  0F98  00D7               	movwf	setDimmerIntr_DimmingValue@value
 12774  0F99  0863               	movf	setDimmerLights_OnOff@lights,w
 12775  0F9A  3190  209A  318F   	fcall	_setDimmerIntr_DimmingValue
 12776  0F9D                     l9864:	
 12777                           
 12778                           ;Dimmer_B1.c: 1011: }
 12779                           ;Dimmer_B1.c: 1013: if (lights == 1) {
 12780  0F9D  0020               	movlb	0	; select bank0
 12781  0F9E  0863               	movf	setDimmerLights_OnOff@lights,w
 12782  0F9F  3A01               	xorlw	1
 12783  0FA0  1D03               	skipz
 12784  0FA1  2FA7               	goto	l9868
 12785                           
 12786                           ;Dimmer_B1.c: 1016: DimmerIntr_ValueCalculate(1);
 12787  0FA2  3001               	movlw	1
 12788  0FA3  3196  26EE  318F   	fcall	_DimmerIntr_ValueCalculate
 12789                           
 12790                           ;Dimmer_B1.c: 1018: } else if (lights == 2) {
 12791  0FA6  2FD0               	goto	l9880
 12792  0FA7                     l9868:	
 12793  0FA7  0020               	movlb	0	; select bank0
 12794  0FA8  0863               	movf	setDimmerLights_OnOff@lights,w
 12795  0FA9  3A02               	xorlw	2
 12796  0FAA  1D03               	skipz
 12797  0FAB  2FD0               	goto	l9880
 12798                           
 12799                           ;Dimmer_B1.c: 1021: DimmerIntr_ValueCalculate(2);
 12800  0FAC  3002               	movlw	2
 12801  0FAD  3196  26EE  318F   	fcall	_DimmerIntr_ValueCalculate
 12802                           
 12803                           ;Dimmer_B1.c: 1023: }
 12804                           ;Dimmer_B1.c: 1029: } else if (command == 0) {
 12805  0FB0  2FD0               	goto	l9880
 12806  0FB1                     l9872:	
 12807  0FB1  0020               	movlb	0	; select bank0
 12808  0FB2  08E0               	movf	setDimmerLights_OnOff@command,f
 12809  0FB3  1D03               	skipz
 12810  0FB4  2FD0               	goto	l9880
 12811                           
 12812                           ;Dimmer_B1.c: 1031: setDimmerIntr_ControlStatus(lights, 0);
 12813  0FB5  01F2               	clrf	setDimmerIntr_ControlStatus@command
 12814  0FB6  0863               	movf	setDimmerLights_OnOff@lights,w
 12815  0FB7  3192  22B3  318F   	fcall	_setDimmerIntr_ControlStatus
 12816                           
 12817                           ;Dimmer_B1.c: 1038: if (getDelayOff_GO(lights) == 1) {
 12818  0FBA  0020               	movlb	0	; select bank0
 12819  0FBB  0863               	movf	setDimmerLights_OnOff@lights,w
 12820  0FBC  319C  240E  318F   	fcall	_getDelayOff_GO
 12821  0FBF  3A01               	xorlw	1
 12822  0FC0  1D03               	skipz
 12823  0FC1  2FC9               	goto	l983
 12824                           
 12825                           ;Dimmer_B1.c: 1039: setDelayOff_GO(lights, 0, 0);
 12826  0FC2  0020               	movlb	0	; select bank0
 12827  0FC3  01D8               	clrf	setDelayOff_GO@command
 12828  0FC4  01D9               	clrf	setDelayOff_GO@value
 12829  0FC5  0863               	movf	setDimmerLights_OnOff@lights,w
 12830  0FC6  318B  23E2  318F   	fcall	_setDelayOff_GO
 12831  0FC9                     l983:	
 12832                           
 12833                           ;Dimmer_B1.c: 1040: }
 12834                           ;Dimmer_B1.c: 1045: setLED(lights, 1);
 12835  0FC9  01F4               	clrf	setLED@command
 12836  0FCA  0AF4               	incf	setLED@command,f
 12837  0FCB  0020               	movlb	0	; select bank0
 12838  0FCC  0863               	movf	setDimmerLights_OnOff@lights,w
 12839  0FCD  318A  22FB  318F   	fcall	_setLED
 12840  0FD0                     l9880:	
 12841                           
 12842                           ;Dimmer_B1.c: 1064: }
 12843                           ;Dimmer_B1.c: 1066: setDimmerLights_DimmingClose();
 12844  0FD0  319C  241D  318F   	fcall	_setDimmerLights_DimmingClose
 12845                           
 12846                           ;Dimmer_B1.c: 1068: setRF_DimmerLights(lights, command);
 12847  0FD3  0020               	movlb	0	; select bank0
 12848  0FD4  0860               	movf	setDimmerLights_OnOff@command,w
 12849  0FD5  00E1               	movwf	??_setDimmerLights_OnOff
 12850  0FD6  0861               	movf	??_setDimmerLights_OnOff,w
 12851  0FD7  00D8               	movwf	setRF_DimmerLights@on
 12852  0FD8  0863               	movf	setDimmerLights_OnOff@lights,w
 12853  0FD9  3189  21C7  318F   	fcall	_setRF_DimmerLights
 12854                           
 12855                           ;Dimmer_B1.c: 1070: if (getCmd_Status(1) == 1) {
 12856  0FDC  3001               	movlw	1
 12857  0FDD  319C  2497  318F   	fcall	_getCmd_Status
 12858  0FE0  3A01               	xorlw	1
 12859  0FE1  1D03               	skipz
 12860  0FE2  2FFD               	goto	l9894
 12861                           
 12862                           ;Dimmer_B1.c: 1071: if (getMain_All_LightsStatus() == 0) {
 12863  0FE3  319D  25BE  318F   	fcall	_getMain_All_LightsStatus
 12864  0FE6  3800               	iorlw	0
 12865  0FE7  1D03               	skipz
 12866  0FE8  0008               	return
 12867                           
 12868                           ;Dimmer_B1.c: 1072: setCmd_Status(1, 0);
 12869  0FE9  01F2               	clrf	setCmd_Status@cmd
 12870  0FEA  3001               	movlw	1
 12871  0FEB  319D  2555  318F   	fcall	_setCmd_Status
 12872                           
 12873                           ;Dimmer_B1.c: 1073: setProductData(11, 0);
 12874  0FEE  0020               	movlb	0	; select bank0
 12875  0FEF  01D5               	clrf	setProductData@value
 12876  0FF0  300B               	movlw	11
 12877  0FF1  319B  23A2  318F   	fcall	_setProductData
 12878                           
 12879                           ;Dimmer_B1.c: 1074: setProductData(17, 0);
 12880  0FF4  0020               	movlb	0	; select bank0
 12881  0FF5  01D5               	clrf	setProductData@value
 12882  0FF6  3011               	movlw	17
 12883  0FF7  319B  23A2  318F   	fcall	_setProductData
 12884                           
 12885                           ;Dimmer_B1.c: 1075: setTxData();
 12886  0FFA  319B  2330         	fcall	_setTxData
 12887                           
 12888                           ;Dimmer_B1.c: 1076: }
 12889                           ;Dimmer_B1.c: 1077: } else {
 12890  0FFC  0008               	return
 12891  0FFD                     l9894:	
 12892                           
 12893                           ;Dimmer_B1.c: 1078: setTxData();
 12894  0FFD  319B  2330         	fcall	_setTxData
 12895  0FFF  0008               	return
 12896  1000                     __end_of_setDimmerLights_OnOff:	
 12897                           
 12898                           	psect	text83
 12899  0AFB                     __ptext83:	
 12900 ;; *************** function _setLED *****************
 12901 ;; Defined at:
 12902 ;;		line 81 in file "../src/LED_B1.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  led             1    wreg     unsigned char 
 12905 ;;  command         1    4[COMMON] unsigned char 
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;  led             1    5[COMMON] unsigned char 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;		None               void
 12910 ;; Registers used:
 12911 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;Total ram usage:        2 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:    4
 12924 ;; This function calls:
 12925 ;;		_LedPointSelect
 12926 ;; This function is called by:
 12927 ;;		_setDimmerLights_OnOff
 12928 ;;		_setLED_Initialization
 12929 ;;		_Exception_Main
 12930 ;;		_setSw_Initialization
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           
 12935                           ;psect for function _setLED
 12936  0AFB                     _setLED:	
 12937                           
 12938                           ;incstack = 0
 12939                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12940                           ;setLED@led stored from wreg
 12941  0AFB  00F5               	movwf	setLED@led
 12942                           
 12943                           ;LED_B1.c: 82: LedPointSelect(led);
 12944  0AFC  0875               	movf	setLED@led,w
 12945  0AFD  3190  20BC  318A   	fcall	_LedPointSelect
 12946                           
 12947                           ;LED_B1.c: 83: if (command == 0) {
 12948  0B00  08F4               	movf	setLED@command,f
 12949  0B01  1D03               	skipz
 12950  0B02  2B1B               	goto	l7396
 12951                           
 12952                           ;LED_B1.c: 85: if (led == 1) {
 12953  0B03  0875               	movf	setLED@led,w
 12954  0B04  3A01               	xorlw	1
 12955  0B05  1D03               	skipz
 12956  0B06  2B09               	goto	l7384
 12957                           
 12958                           ;LED_B1.c: 89: RA3 = 1;
 12959  0B07  0020               	movlb	0	; select bank0
 12960  0B08  158C               	bsf	12,3	;volatile
 12961  0B09                     l7384:	
 12962                           
 12963                           ;LED_B1.c: 91: }
 12964                           ;LED_B1.c: 94: if (led == 2) {
 12965  0B09  0875               	movf	setLED@led,w
 12966  0B0A  3A02               	xorlw	2
 12967  0B0B  1D03               	skipz
 12968  0B0C  2B0F               	goto	l7388
 12969                           
 12970                           ;LED_B1.c: 98: RC6 = 1;
 12971  0B0D  0020               	movlb	0	; select bank0
 12972  0B0E  170E               	bsf	14,6	;volatile
 12973  0B0F                     l7388:	
 12974                           
 12975                           ;LED_B1.c: 100: }
 12976                           ;LED_B1.c: 103: if (led == 3) {
 12977  0B0F  0875               	movf	setLED@led,w
 12978  0B10  3A03               	xorlw	3
 12979  0B11  1D03               	skipz
 12980  0B12  2B15               	goto	l7392
 12981                           
 12982                           ;LED_B1.c: 107: RC7 = 1;
 12983  0B13  0020               	movlb	0	; select bank0
 12984  0B14  178E               	bsf	14,7	;volatile
 12985  0B15                     l7392:	
 12986                           
 12987                           ;LED_B1.c: 109: }
 12988                           ;LED_B1.c: 112: if (led == 99) {
 12989  0B15  0875               	movf	setLED@led,w
 12990  0B16  3A63               	xorlw	99
 12991  0B17  1D03               	skipz
 12992  0B18  2B1B               	goto	l7396
 12993                           
 12994                           ;LED_B1.c: 116: RB5 = 1;
 12995  0B19  0020               	movlb	0	; select bank0
 12996  0B1A  168D               	bsf	13,5	;volatile
 12997  0B1B                     l7396:	
 12998                           
 12999                           ;LED_B1.c: 118: }
 13000                           ;LED_B1.c: 120: }
 13001                           ;LED_B1.c: 121: if (command == 1) {
 13002  0B1B  0874               	movf	setLED@command,w
 13003  0B1C  3A01               	xorlw	1
 13004  0B1D  1D03               	skipz
 13005  0B1E  2B37               	goto	l7414
 13006                           
 13007                           ;LED_B1.c: 123: if (led == 1) {
 13008  0B1F  0875               	movf	setLED@led,w
 13009  0B20  3A01               	xorlw	1
 13010  0B21  1D03               	skipz
 13011  0B22  2B25               	goto	l7402
 13012                           
 13013                           ;LED_B1.c: 127: RA3 = 0;
 13014  0B23  0020               	movlb	0	; select bank0
 13015  0B24  118C               	bcf	12,3	;volatile
 13016  0B25                     l7402:	
 13017                           
 13018                           ;LED_B1.c: 129: }
 13019                           ;LED_B1.c: 132: if (led == 2) {
 13020  0B25  0875               	movf	setLED@led,w
 13021  0B26  3A02               	xorlw	2
 13022  0B27  1D03               	skipz
 13023  0B28  2B2B               	goto	l7406
 13024                           
 13025                           ;LED_B1.c: 136: RC6 = 0;
 13026  0B29  0020               	movlb	0	; select bank0
 13027  0B2A  130E               	bcf	14,6	;volatile
 13028  0B2B                     l7406:	
 13029                           
 13030                           ;LED_B1.c: 138: }
 13031                           ;LED_B1.c: 141: if (led == 3) {
 13032  0B2B  0875               	movf	setLED@led,w
 13033  0B2C  3A03               	xorlw	3
 13034  0B2D  1D03               	skipz
 13035  0B2E  2B31               	goto	l7410
 13036                           
 13037                           ;LED_B1.c: 145: RC7 = 0;
 13038  0B2F  0020               	movlb	0	; select bank0
 13039  0B30  138E               	bcf	14,7	;volatile
 13040  0B31                     l7410:	
 13041                           
 13042                           ;LED_B1.c: 147: }
 13043                           ;LED_B1.c: 150: if (led == 99) {
 13044  0B31  0875               	movf	setLED@led,w
 13045  0B32  3A63               	xorlw	99
 13046  0B33  1D03               	skipz
 13047  0B34  2B37               	goto	l7414
 13048                           
 13049                           ;LED_B1.c: 154: RB5 = 0;
 13050  0B35  0020               	movlb	0	; select bank0
 13051  0B36  128D               	bcf	13,5	;volatile
 13052  0B37                     l7414:	
 13053                           
 13054                           ;LED_B1.c: 156: }
 13055                           ;LED_B1.c: 158: }
 13056                           ;LED_B1.c: 159: if (command == 10) {
 13057  0B37  0874               	movf	setLED@command,w
 13058  0B38  3A0A               	xorlw	10
 13059  0B39  1D03               	skipz
 13060  0B3A  2B61               	goto	l7434
 13061                           
 13062                           ;LED_B1.c: 160: LED->GO = 0;
 13063  0B3B  087B               	movf	_LED,w
 13064  0B3C  0086               	movwf	6
 13065  0B3D  3001               	movlw	1	; select bank2/3
 13066  0B3E  0087               	movwf	7
 13067  0B3F  1081               	bcf	1,1
 13068                           
 13069                           ;LED_B1.c: 161: LED->Time = 0;
 13070  0B40  0A7B               	incf	_LED,w
 13071  0B41  0086               	movwf	6
 13072  0B42  3001               	movlw	1	; select bank2/3
 13073  0B43  0087               	movwf	7
 13074  0B44  3000               	movlw	0
 13075  0B45  3FC0               	movwi [0]fsr1
 13076  0B46  3FC1               	movwi [1]fsr1
 13077                           
 13078                           ;LED_B1.c: 163: if (led == 1) {
 13079  0B47  0875               	movf	setLED@led,w
 13080  0B48  3A01               	xorlw	1
 13081  0B49  1D03               	skipz
 13082  0B4A  2B4E               	goto	l7422
 13083                           
 13084                           ;LED_B1.c: 167: RA3 = 1;
 13085  0B4B  0020               	movlb	0	; select bank0
 13086  0B4C  158C               	bsf	12,3	;volatile
 13087                           
 13088                           ;LED_B1.c: 169: }
 13089  0B4D  2B5B               	goto	l7430
 13090  0B4E                     l7422:	
 13091                           
 13092                           ;LED_B1.c: 172: else if (led == 2) {
 13093  0B4E  0875               	movf	setLED@led,w
 13094  0B4F  3A02               	xorlw	2
 13095  0B50  1D03               	skipz
 13096  0B51  2B55               	goto	l7426
 13097                           
 13098                           ;LED_B1.c: 176: RC6 = 1;
 13099  0B52  0020               	movlb	0	; select bank0
 13100  0B53  170E               	bsf	14,6	;volatile
 13101                           
 13102                           ;LED_B1.c: 178: }
 13103  0B54  2B5B               	goto	l7430
 13104  0B55                     l7426:	
 13105                           
 13106                           ;LED_B1.c: 181: else if (led == 3) {
 13107  0B55  0875               	movf	setLED@led,w
 13108  0B56  3A03               	xorlw	3
 13109  0B57  1D03               	skipz
 13110  0B58  2B5B               	goto	l7430
 13111                           
 13112                           ;LED_B1.c: 185: RC7 = 1;
 13113  0B59  0020               	movlb	0	; select bank0
 13114  0B5A  178E               	bsf	14,7	;volatile
 13115  0B5B                     l7430:	
 13116                           
 13117                           ;LED_B1.c: 187: }
 13118                           ;LED_B1.c: 190: if (led == 99) {
 13119  0B5B  0875               	movf	setLED@led,w
 13120  0B5C  3A63               	xorlw	99
 13121  0B5D  1D03               	skipz
 13122  0B5E  2B61               	goto	l7434
 13123                           
 13124                           ;LED_B1.c: 194: RB5 = 1;
 13125  0B5F  0020               	movlb	0	; select bank0
 13126  0B60  168D               	bsf	13,5	;volatile
 13127  0B61                     l7434:	
 13128                           
 13129                           ;LED_B1.c: 196: }
 13130                           ;LED_B1.c: 198: }
 13131                           ;LED_B1.c: 199: if (command == 11) {
 13132  0B61  0874               	movf	setLED@command,w
 13133  0B62  3A0B               	xorlw	11
 13134  0B63  1D03               	skipz
 13135  0B64  0008               	return
 13136                           
 13137                           ;LED_B1.c: 200: LED->GO = 1;
 13138  0B65  087B               	movf	_LED,w
 13139  0B66  0086               	movwf	6
 13140  0B67  3001               	movlw	1	; select bank2/3
 13141  0B68  0087               	movwf	7
 13142  0B69  1481               	bsf	1,1
 13143  0B6A  0008               	return
 13144  0B6B                     __end_of_setLED:	
 13145                           
 13146                           	psect	text84
 13147  10BC                     __ptext84:	
 13148 ;; *************** function _LedPointSelect *****************
 13149 ;; Defined at:
 13150 ;;		line 7 in file "../src/LED_B1.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  led             1    wreg     unsigned char 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  led             1    3[COMMON] unsigned char 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;		None               void
 13157 ;; Registers used:
 13158 ;;		wreg
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;Total ram usage:        2 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    3
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_setLED_Initialization
 13175 ;;		_setLED
 13176 ;;		_setLED_Main
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           
 13181                           ;psect for function _LedPointSelect
 13182  10BC                     _LedPointSelect:	
 13183                           
 13184                           ;incstack = 0
 13185                           ; Regs used in _LedPointSelect: [wreg]
 13186                           ;LedPointSelect@led stored from wreg
 13187  10BC  00F3               	movwf	LedPointSelect@led
 13188                           
 13189                           ;LED_B1.c: 9: if (led == 1) {
 13190  10BD  0873               	movf	LedPointSelect@led,w
 13191  10BE  3A01               	xorlw	1
 13192  10BF  1D03               	skipz
 13193  10C0  28C5               	goto	l1252
 13194                           
 13195                           ;LED_B1.c: 10: LED = &VarLED1;
 13196  10C1  30E3               	movlw	_VarLED1& (0+255)
 13197  10C2  00F2               	movwf	??_LedPointSelect
 13198  10C3  0872               	movf	??_LedPointSelect,w
 13199  10C4  00FB               	movwf	_LED
 13200  10C5                     l1252:	
 13201                           
 13202                           ;LED_B1.c: 11: }
 13203                           ;LED_B1.c: 14: if (led == 2) {
 13204  10C5  0873               	movf	LedPointSelect@led,w
 13205  10C6  3A02               	xorlw	2
 13206  10C7  1D03               	skipz
 13207  10C8  28CD               	goto	l1253
 13208                           
 13209                           ;LED_B1.c: 15: LED = &VarLED2;
 13210  10C9  30E7               	movlw	_VarLED2& (0+255)
 13211  10CA  00F2               	movwf	??_LedPointSelect
 13212  10CB  0872               	movf	??_LedPointSelect,w
 13213  10CC  00FB               	movwf	_LED
 13214  10CD                     l1253:	
 13215                           
 13216                           ;LED_B1.c: 16: }
 13217                           ;LED_B1.c: 19: if (led == 3) {
 13218  10CD  0873               	movf	LedPointSelect@led,w
 13219  10CE  3A03               	xorlw	3
 13220  10CF  1D03               	skipz
 13221  10D0  28D5               	goto	l1254
 13222                           
 13223                           ;LED_B1.c: 20: LED = &VarLED3;
 13224  10D1  30EB               	movlw	_VarLED3& (0+255)
 13225  10D2  00F2               	movwf	??_LedPointSelect
 13226  10D3  0872               	movf	??_LedPointSelect,w
 13227  10D4  00FB               	movwf	_LED
 13228  10D5                     l1254:	
 13229                           
 13230                           ;LED_B1.c: 21: }
 13231                           ;LED_B1.c: 24: if (led == 99) {
 13232  10D5  0873               	movf	LedPointSelect@led,w
 13233  10D6  3A63               	xorlw	99
 13234  10D7  1D03               	skipz
 13235  10D8  0008               	return
 13236                           
 13237                           ;LED_B1.c: 25: LED = &VarErrLED;
 13238  10D9  30DF               	movlw	_VarErrLED& (0+255)
 13239  10DA  00F2               	movwf	??_LedPointSelect
 13240  10DB  0872               	movf	??_LedPointSelect,w
 13241  10DC  00FB               	movwf	_LED
 13242  10DD  0008               	return
 13243  10DE                     __end_of_LedPointSelect:	
 13244                           
 13245                           	psect	text85
 13246  1C1D                     __ptext85:	
 13247 ;; *************** function _setDimmerLights_DimmingClose *****************
 13248 ;; Defined at:
 13249 ;;		line 1833 in file "../src/Dimmer_B1.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;		None
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;		None               void
 13256 ;; Registers used:
 13257 ;;		wreg, status,2, status,0, pclath, cstack
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    4
 13270 ;; This function calls:
 13271 ;;		_setDimmerIntr_Dimming_Sw
 13272 ;; This function is called by:
 13273 ;;		_setDimmerLights_OnOff
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           
 13278                           ;psect for function _setDimmerLights_DimmingClose
 13279  1C1D                     _setDimmerLights_DimmingClose:	
 13280                           
 13281                           ;Dimmer_B1.c: 1835: setDimmerIntr_Dimming_Sw(1, 0);
 13282                           
 13283                           ;incstack = 0
 13284                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 13285  1C1D  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 13286  1C1E  3001               	movlw	1
 13287  1C1F  3192  220C  319C   	fcall	_setDimmerIntr_Dimming_Sw
 13288                           
 13289                           ;Dimmer_B1.c: 1839: setDimmerIntr_Dimming_Sw(2, 0);
 13290  1C22  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 13291  1C23  3002               	movlw	2
 13292  1C24  3192  220C  319C   	fcall	_setDimmerIntr_Dimming_Sw
 13293                           
 13294                           ;Dimmer_B1.c: 1843: setDimmerIntr_Dimming_Sw(3, 0);
 13295  1C27  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 13296  1C28  3003               	movlw	3
 13297  1C29  3192  220C         	fcall	_setDimmerIntr_Dimming_Sw
 13298  1C2B  0008               	return
 13299  1C2C                     __end_of_setDimmerLights_DimmingClose:	
 13300                           
 13301                           	psect	text86
 13302  12F0                     __ptext86:	
 13303 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 13304 ;; Defined at:
 13305 ;;		line 262 in file "../src/Dimmer_B1.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  lights          1    wreg     unsigned char 
 13308 ;;  command         1    2[COMMON] unsigned char 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  lights          1    4[COMMON] unsigned char 
 13311 ;; Return value:  Size  Location     Type
 13312 ;;		None               void
 13313 ;; Registers used:
 13314 ;;		wreg, status,2, status,0
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;Total ram usage:        3 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    3
 13327 ;; This function calls:
 13328 ;;		Nothing
 13329 ;; This function is called by:
 13330 ;;		_setDimmerLights_OnOff
 13331 ;;		_setRFSW_AdjControl
 13332 ;;		_DimmerLights_AssignationDimming
 13333 ;; This function uses a non-reentrant model
 13334 ;;
 13335                           
 13336                           
 13337                           ;psect for function _setDimmerIntr_Dimming_RF
 13338  12F0                     _setDimmerIntr_Dimming_RF:	
 13339                           
 13340                           ;incstack = 0
 13341                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 13342                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 13343  12F0  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 13344                           
 13345                           ;Dimmer_B1.c: 264: if (lights == 1) {
 13346  12F1  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 13347  12F2  3A01               	xorlw	1
 13348  12F3  1D03               	skipz
 13349  12F4  2B05               	goto	l6980
 13350                           
 13351                           ;Dimmer_B1.c: 265: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 13352  12F5  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 13353  12F6  3A01               	xorlw	1
 13354  12F7  3000               	movlw	0
 13355  12F8  1903               	skipnz
 13356  12F9  3001               	movlw	1
 13357  12FA  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 13358  12FB  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 13359  12FC  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13360  12FD  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13361  12FE  0021               	movlb	1	; select bank1
 13362  12FF  0820               	movf	_DimmerIntr1^(0+128),w
 13363  1300  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13364  1301  39BF               	andlw	-65
 13365  1302  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13366  1303  00A0               	movwf	_DimmerIntr1^(0+128)
 13367                           
 13368                           ;Dimmer_B1.c: 266: }
 13369  1304  0008               	return
 13370  1305                     l6980:	
 13371                           
 13372                           ;Dimmer_B1.c: 269: else if (lights == 2) {
 13373  1305  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 13374  1306  3A02               	xorlw	2
 13375  1307  1D03               	skipz
 13376  1308  2B19               	goto	l6984
 13377                           
 13378                           ;Dimmer_B1.c: 270: DimmerIntr2.Dimming_RF = command == 1 ? 1 : 0;
 13379  1309  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 13380  130A  3A01               	xorlw	1
 13381  130B  3000               	movlw	0
 13382  130C  1903               	skipnz
 13383  130D  3001               	movlw	1
 13384  130E  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 13385  130F  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 13386  1310  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13387  1311  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13388  1312  0022               	movlb	2	; select bank2
 13389  1313  083E               	movf	_DimmerIntr2^(0+256),w
 13390  1314  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13391  1315  39BF               	andlw	-65
 13392  1316  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13393  1317  00BE               	movwf	_DimmerIntr2^(0+256)
 13394                           
 13395                           ;Dimmer_B1.c: 271: }
 13396  1318  0008               	return
 13397  1319                     l6984:	
 13398                           
 13399                           ;Dimmer_B1.c: 274: else if (lights == 3) {
 13400  1319  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 13401  131A  3A03               	xorlw	3
 13402  131B  1D03               	skipz
 13403  131C  0008               	return
 13404                           
 13405                           ;Dimmer_B1.c: 275: DimmerIntr3.Dimming_RF = command == 1 ? 1 : 0;
 13406  131D  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 13407  131E  3A01               	xorlw	1
 13408  131F  3000               	movlw	0
 13409  1320  1903               	skipnz
 13410  1321  3001               	movlw	1
 13411  1322  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 13412  1323  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 13413  1324  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13414  1325  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 13415  1326  0023               	movlb	3	; select bank3
 13416  1327  0820               	movf	_DimmerIntr3^(0+384),w
 13417  1328  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13418  1329  39BF               	andlw	-65
 13419  132A  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 13420  132B  00A0               	movwf	_DimmerIntr3^(0+384)
 13421  132C  0008               	return
 13422  132D                     __end_of_setDimmerIntr_Dimming_RF:	
 13423                           
 13424                           	psect	text87
 13425  109A                     __ptext87:	
 13426 ;; *************** function _setDimmerIntr_DimmingValue *****************
 13427 ;; Defined at:
 13428 ;;		line 109 in file "../src/Dimmer_B1.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;  lights          1    wreg     unsigned char 
 13431 ;;  value           1   55[BANK0 ] unsigned char 
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;  lights          1   57[BANK0 ] unsigned char 
 13434 ;; Return value:  Size  Location     Type
 13435 ;;		None               void
 13436 ;; Registers used:
 13437 ;;		wreg
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/0
 13440 ;;		On exit  : 0/0
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13443 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;Total ram usage:        3 bytes
 13448 ;; Hardware stack levels used:    1
 13449 ;; Hardware stack levels required when called:    3
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_setDimmerLights_OnOff
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           
 13458                           ;psect for function _setDimmerIntr_DimmingValue
 13459  109A                     _setDimmerIntr_DimmingValue:	
 13460                           
 13461                           ;incstack = 0
 13462                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 13463                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 13464  109A  0020               	movlb	0	; select bank0
 13465  109B  00D9               	movwf	setDimmerIntr_DimmingValue@lights
 13466                           
 13467                           ;Dimmer_B1.c: 111: if (lights == 1) {
 13468  109C  0859               	movf	setDimmerIntr_DimmingValue@lights,w
 13469  109D  3A01               	xorlw	1
 13470  109E  1D03               	skipz
 13471  109F  28A6               	goto	l7352
 13472                           
 13473                           ;Dimmer_B1.c: 112: DimmerIntr1.DimmingValue = value;
 13474  10A0  0857               	movf	setDimmerIntr_DimmingValue@value,w
 13475  10A1  00D8               	movwf	??_setDimmerIntr_DimmingValue
 13476  10A2  0858               	movf	??_setDimmerIntr_DimmingValue,w
 13477  10A3  0021               	movlb	1	; select bank1
 13478  10A4  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 13479                           
 13480                           ;Dimmer_B1.c: 113: }
 13481  10A5  0008               	return
 13482  10A6                     l7352:	
 13483                           
 13484                           ;Dimmer_B1.c: 116: else if (lights == 2) {
 13485  10A6  0020               	movlb	0	; select bank0
 13486  10A7  0859               	movf	setDimmerIntr_DimmingValue@lights,w
 13487  10A8  3A02               	xorlw	2
 13488  10A9  1D03               	skipz
 13489  10AA  28B1               	goto	l7356
 13490                           
 13491                           ;Dimmer_B1.c: 117: DimmerIntr2.DimmingValue = value;
 13492  10AB  0857               	movf	setDimmerIntr_DimmingValue@value,w
 13493  10AC  00D8               	movwf	??_setDimmerIntr_DimmingValue
 13494  10AD  0858               	movf	??_setDimmerIntr_DimmingValue,w
 13495  10AE  0022               	movlb	2	; select bank2
 13496  10AF  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 13497                           
 13498                           ;Dimmer_B1.c: 118: }
 13499  10B0  0008               	return
 13500  10B1                     l7356:	
 13501                           
 13502                           ;Dimmer_B1.c: 121: else if (lights == 3) {
 13503  10B1  0020               	movlb	0	; select bank0
 13504  10B2  0859               	movf	setDimmerIntr_DimmingValue@lights,w
 13505  10B3  3A03               	xorlw	3
 13506  10B4  1D03               	skipz
 13507  10B5  0008               	return
 13508                           
 13509                           ;Dimmer_B1.c: 122: DimmerIntr3.DimmingValue = value;
 13510  10B6  0857               	movf	setDimmerIntr_DimmingValue@value,w
 13511  10B7  00D8               	movwf	??_setDimmerIntr_DimmingValue
 13512  10B8  0858               	movf	??_setDimmerIntr_DimmingValue,w
 13513  10B9  0023               	movlb	3	; select bank3
 13514  10BA  00A5               	movwf	(_DimmerIntr3^(0+384)+5)
 13515  10BB  0008               	return
 13516  10BC                     __end_of_setDimmerIntr_DimmingValue:	
 13517                           
 13518                           	psect	text88
 13519  12B3                     __ptext88:	
 13520 ;; *************** function _setDimmerIntr_ControlStatus *****************
 13521 ;; Defined at:
 13522 ;;		line 91 in file "../src/Dimmer_B1.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  lights          1    wreg     unsigned char 
 13525 ;;  command         1    2[COMMON] unsigned char 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  lights          1    4[COMMON] unsigned char 
 13528 ;; Return value:  Size  Location     Type
 13529 ;;		None               void
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;Total ram usage:        3 bytes
 13542 ;; Hardware stack levels used:    1
 13543 ;; Hardware stack levels required when called:    3
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_setDimmerLights_OnOff
 13548 ;; This function uses a non-reentrant model
 13549 ;;
 13550                           
 13551                           
 13552                           ;psect for function _setDimmerIntr_ControlStatus
 13553  12B3                     _setDimmerIntr_ControlStatus:	
 13554                           
 13555                           ;incstack = 0
 13556                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 13557                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 13558  12B3  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 13559                           
 13560                           ;Dimmer_B1.c: 93: if (lights == 1) {
 13561  12B4  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 13562  12B5  3A01               	xorlw	1
 13563  12B6  1D03               	skipz
 13564  12B7  2AC8               	goto	l7340
 13565                           
 13566                           ;Dimmer_B1.c: 94: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 13567  12B8  0872               	movf	setDimmerIntr_ControlStatus@command,w
 13568  12B9  3A01               	xorlw	1
 13569  12BA  3000               	movlw	0
 13570  12BB  1903               	skipnz
 13571  12BC  3001               	movlw	1
 13572  12BD  00F3               	movwf	??_setDimmerIntr_ControlStatus
 13573  12BE  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13574  12BF  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13575  12C0  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13576  12C1  0021               	movlb	1	; select bank1
 13577  12C2  0820               	movf	_DimmerIntr1^(0+128),w
 13578  12C3  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13579  12C4  39F7               	andlw	-9
 13580  12C5  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13581  12C6  00A0               	movwf	_DimmerIntr1^(0+128)
 13582                           
 13583                           ;Dimmer_B1.c: 95: }
 13584  12C7  0008               	return
 13585  12C8                     l7340:	
 13586                           
 13587                           ;Dimmer_B1.c: 98: else if (lights == 2) {
 13588  12C8  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 13589  12C9  3A02               	xorlw	2
 13590  12CA  1D03               	skipz
 13591  12CB  2ADC               	goto	l7344
 13592                           
 13593                           ;Dimmer_B1.c: 99: DimmerIntr2.ControlStatus = command == 1 ? 1 : 0;
 13594  12CC  0872               	movf	setDimmerIntr_ControlStatus@command,w
 13595  12CD  3A01               	xorlw	1
 13596  12CE  3000               	movlw	0
 13597  12CF  1903               	skipnz
 13598  12D0  3001               	movlw	1
 13599  12D1  00F3               	movwf	??_setDimmerIntr_ControlStatus
 13600  12D2  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13601  12D3  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13602  12D4  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13603  12D5  0022               	movlb	2	; select bank2
 13604  12D6  083E               	movf	_DimmerIntr2^(0+256),w
 13605  12D7  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13606  12D8  39F7               	andlw	-9
 13607  12D9  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13608  12DA  00BE               	movwf	_DimmerIntr2^(0+256)
 13609                           
 13610                           ;Dimmer_B1.c: 100: }
 13611  12DB  0008               	return
 13612  12DC                     l7344:	
 13613                           
 13614                           ;Dimmer_B1.c: 103: else if (lights == 3) {
 13615  12DC  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 13616  12DD  3A03               	xorlw	3
 13617  12DE  1D03               	skipz
 13618  12DF  0008               	return
 13619                           
 13620                           ;Dimmer_B1.c: 104: DimmerIntr3.ControlStatus = command == 1 ? 1 : 0;
 13621  12E0  0872               	movf	setDimmerIntr_ControlStatus@command,w
 13622  12E1  3A01               	xorlw	1
 13623  12E2  3000               	movlw	0
 13624  12E3  1903               	skipnz
 13625  12E4  3001               	movlw	1
 13626  12E5  00F3               	movwf	??_setDimmerIntr_ControlStatus
 13627  12E6  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13628  12E7  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13629  12E8  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 13630  12E9  0023               	movlb	3	; select bank3
 13631  12EA  0820               	movf	_DimmerIntr3^(0+384),w
 13632  12EB  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13633  12EC  39F7               	andlw	-9
 13634  12ED  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 13635  12EE  00A0               	movwf	_DimmerIntr3^(0+384)
 13636  12EF  0008               	return
 13637  12F0                     __end_of_setDimmerIntr_ControlStatus:	
 13638                           
 13639                           	psect	text89
 13640  0BE2                     __ptext89:	
 13641 ;; *************** function _setDelayOff_GO *****************
 13642 ;; Defined at:
 13643 ;;		line 87 in file "../src/DelayOff_B1.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;  sw              1    wreg     unsigned char 
 13646 ;;  command         1   56[BANK0 ] unsigned char 
 13647 ;;  value           1   57[BANK0 ] unsigned char 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;  sw              1   63[BANK0 ] unsigned char 
 13650 ;;  k               1   62[BANK0 ] unsigned char 
 13651 ;;  j               1   61[BANK0 ] unsigned char 
 13652 ;;  i               1   60[BANK0 ] unsigned char 
 13653 ;; Return value:  Size  Location     Type
 13654 ;;		None               void
 13655 ;; Registers used:
 13656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;Total ram usage:        8 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:    4
 13669 ;; This function calls:
 13670 ;;		_DelayOffPointSelect
 13671 ;;		___bmul
 13672 ;;		_setProductData
 13673 ;; This function is called by:
 13674 ;;		_setDimmerLights_OnOff
 13675 ;;		_setRFSW_Control
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           
 13680                           ;psect for function _setDelayOff_GO
 13681  0BE2                     _setDelayOff_GO:	
 13682                           
 13683                           ;incstack = 0
 13684                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13685                           ;setDelayOff_GO@sw stored from wreg
 13686  0BE2  0020               	movlb	0	; select bank0
 13687  0BE3  00DF               	movwf	setDelayOff_GO@sw
 13688                           
 13689                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 13690  0BE4  085F               	movf	setDelayOff_GO@sw,w
 13691  0BE5  319E  26BB  318B   	fcall	_DelayOffPointSelect
 13692                           
 13693                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 13694  0BE8  0020               	movlb	0	; select bank0
 13695  0BE9  0858               	movf	setDelayOff_GO@command,w
 13696  0BEA  3A01               	xorlw	1
 13697  0BEB  3000               	movlw	0
 13698  0BEC  1903               	skipnz
 13699  0BED  3001               	movlw	1
 13700  0BEE  00DA               	movwf	??_setDelayOff_GO
 13701  0BEF  0868               	movf	_DelayOff,w
 13702  0BF0  0086               	movwf	6
 13703  0BF1  3001               	movlw	1	; select bank2/3
 13704  0BF2  0087               	movwf	7
 13705  0BF3  0DDA               	rlf	??_setDelayOff_GO,f
 13706  0BF4  0801               	movf	1,w
 13707  0BF5  065A               	xorwf	??_setDelayOff_GO,w
 13708  0BF6  39FD               	andlw	-3
 13709  0BF7  065A               	xorwf	??_setDelayOff_GO,w
 13710  0BF8  0081               	movwf	1
 13711                           
 13712                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 13713  0BF9  0868               	movf	_DelayOff,w
 13714  0BFA  3E02               	addlw	2
 13715  0BFB  0086               	movwf	6
 13716  0BFC  3001               	movlw	1	; select bank2/3
 13717  0BFD  0087               	movwf	7
 13718  0BFE  3000               	movlw	0
 13719  0BFF  3FC0               	movwi [0]fsr1
 13720  0C00  3FC1               	movwi [1]fsr1
 13721                           
 13722                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 13723  0C01  0868               	movf	_DelayOff,w
 13724  0C02  3E04               	addlw	4
 13725  0C03  0086               	movwf	6
 13726  0C04  3001               	movlw	1	; select bank2/3
 13727  0C05  0087               	movwf	7
 13728  0C06  0181               	clrf	1
 13729                           
 13730                           ;DelayOff_B1.c: 94: if (command == 1) {
 13731  0C07  0858               	movf	setDelayOff_GO@command,w
 13732  0C08  3A01               	xorlw	1
 13733  0C09  1D03               	skipz
 13734  0C0A  2C5C               	goto	l6948
 13735                           
 13736                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 13737  0C0B  3005               	movlw	5
 13738  0C0C  00DA               	movwf	??_setDelayOff_GO
 13739  0C0D  085A               	movf	??_setDelayOff_GO,w
 13740  0C0E  00DC               	movwf	setDelayOff_GO@i
 13741  0C0F  01DD               	clrf	setDelayOff_GO@j
 13742  0C10  01DE               	clrf	setDelayOff_GO@k
 13743                           
 13744                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 13745  0C11  300F               	movlw	15
 13746  0C12  0559               	andwf	setDelayOff_GO@value,w
 13747  0C13  00DA               	movwf	??_setDelayOff_GO
 13748  0C14  085A               	movf	??_setDelayOff_GO,w
 13749  0C15  3A05               	xorlw	5
 13750  0C16  1903               	skipnz
 13751  0C17  2C1C               	goto	l6934
 13752  0C18  0859               	movf	setDelayOff_GO@value,w
 13753  0C19  390F               	andlw	15
 13754  0C1A  1D03               	btfss	3,2
 13755  0C1B  2C4A               	goto	l6944
 13756  0C1C                     l6934:	
 13757  0C1C  3031               	movlw	49
 13758  0C1D  0259               	subwf	setDelayOff_GO@value,w
 13759  0C1E  1803               	skipnc
 13760  0C1F  2C4A               	goto	l6944
 13761                           
 13762                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 13763  0C20  0859               	movf	setDelayOff_GO@value,w
 13764  0C21  390F               	andlw	15
 13765  0C22  00DA               	movwf	??_setDelayOff_GO
 13766  0C23  085A               	movf	??_setDelayOff_GO,w
 13767  0C24  00DD               	movwf	setDelayOff_GO@j
 13768                           
 13769                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 13770  0C25  0859               	movf	setDelayOff_GO@value,w
 13771  0C26  00DA               	movwf	??_setDelayOff_GO
 13772  0C27  3004               	movlw	4
 13773  0C28                     u6095:	
 13774  0C28  36DA               	lsrf	??_setDelayOff_GO,f
 13775  0C29  0B89               	decfsz	9,f
 13776  0C2A  2C28               	goto	u6095
 13777  0C2B  085A               	movf	??_setDelayOff_GO,w
 13778  0C2C  390F               	andlw	15
 13779  0C2D  00DB               	movwf	??_setDelayOff_GO+1
 13780  0C2E  085B               	movf	??_setDelayOff_GO+1,w
 13781  0C2F  00DE               	movwf	setDelayOff_GO@k
 13782                           
 13783                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 13784  0C30  300A               	movlw	10
 13785  0C31  00DA               	movwf	??_setDelayOff_GO
 13786  0C32  085A               	movf	??_setDelayOff_GO,w
 13787  0C33  00F2               	movwf	___bmul@multiplicand
 13788  0C34  085E               	movf	setDelayOff_GO@k,w
 13789  0C35  319C  24F7  318B   	fcall	___bmul
 13790  0C38  0020               	movlb	0	; select bank0
 13791  0C39  075D               	addwf	setDelayOff_GO@j,w
 13792  0C3A  00DB               	movwf	??_setDelayOff_GO+1
 13793  0C3B  0A68               	incf	_DelayOff,w
 13794  0C3C  0086               	movwf	6
 13795  0C3D  3001               	movlw	1	; select bank2/3
 13796  0C3E  0087               	movwf	7
 13797  0C3F  085B               	movf	??_setDelayOff_GO+1,w
 13798  0C40  0081               	movwf	1
 13799                           
 13800                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 13801  0C41  0859               	movf	setDelayOff_GO@value,w
 13802  0C42  00DA               	movwf	??_setDelayOff_GO
 13803  0C43  085A               	movf	??_setDelayOff_GO,w
 13804  0C44  00D5               	movwf	setProductData@value
 13805  0C45  085F               	movf	setDelayOff_GO@sw,w
 13806  0C46  3E1A               	addlw	26
 13807  0C47  319B  23A2         	fcall	_setProductData
 13808                           
 13809                           ;DelayOff_B1.c: 103: } else {
 13810  0C49  0008               	return
 13811  0C4A                     l6944:	
 13812                           
 13813                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 13814  0C4A  3005               	movlw	5
 13815  0C4B  0020               	movlb	0	; select bank0
 13816  0C4C  00DA               	movwf	??_setDelayOff_GO
 13817  0C4D  0A68               	incf	_DelayOff,w
 13818  0C4E  0086               	movwf	6
 13819  0C4F  3001               	movlw	1	; select bank2/3
 13820  0C50  0087               	movwf	7
 13821  0C51  085A               	movf	??_setDelayOff_GO,w
 13822  0C52  0081               	movwf	1
 13823                           
 13824                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 13825  0C53  3005               	movlw	5
 13826  0C54  00DA               	movwf	??_setDelayOff_GO
 13827  0C55  085A               	movf	??_setDelayOff_GO,w
 13828  0C56  00D5               	movwf	setProductData@value
 13829  0C57  085F               	movf	setDelayOff_GO@sw,w
 13830  0C58  3E1A               	addlw	26
 13831  0C59  319B  23A2         	fcall	_setProductData
 13832                           
 13833                           ;DelayOff_B1.c: 106: }
 13834                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 13835  0C5B  0008               	return
 13836  0C5C                     l6948:	
 13837  0C5C  0020               	movlb	0	; select bank0
 13838  0C5D  08D8               	movf	setDelayOff_GO@command,f
 13839  0C5E  1D03               	skipz
 13840  0C5F  0008               	return
 13841                           
 13842                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 13843  0C60  01D5               	clrf	setProductData@value
 13844  0C61  085F               	movf	setDelayOff_GO@sw,w
 13845  0C62  3E1A               	addlw	26
 13846  0C63  319B  23A2         	fcall	_setProductData
 13847  0C65  0008               	return
 13848  0C66                     __end_of_setDelayOff_GO:	
 13849                           
 13850                           	psect	text90
 13851  1CF7                     __ptext90:	
 13852 ;; *************** function ___bmul *****************
 13853 ;; Defined at:
 13854 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;  multiplier      1    wreg     unsigned char 
 13857 ;;  multiplicand    1    2[COMMON] unsigned char 
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;  multiplier      1    5[COMMON] unsigned char 
 13860 ;;  product         1    4[COMMON] unsigned char 
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      unsigned char 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13870 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;Total ram usage:        4 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:    3
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_setDelayOff_GO
 13881 ;;		_DelayTimejudge
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           
 13886                           ;psect for function ___bmul
 13887  1CF7                     ___bmul:	
 13888                           
 13889                           ;incstack = 0
 13890                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 13891                           ;___bmul@multiplier stored from wreg
 13892  1CF7  00F5               	movwf	___bmul@multiplier
 13893  1CF8  01F4               	clrf	___bmul@product
 13894  1CF9                     l6570:	
 13895  1CF9  1C75               	btfss	___bmul@multiplier,0
 13896  1CFA  2CFF               	goto	l6574
 13897  1CFB  0872               	movf	___bmul@multiplicand,w
 13898  1CFC  00F3               	movwf	??___bmul
 13899  1CFD  0873               	movf	??___bmul,w
 13900  1CFE  07F4               	addwf	___bmul@product,f
 13901  1CFF                     l6574:	
 13902  1CFF  1003               	clrc
 13903  1D00  0DF2               	rlf	___bmul@multiplicand,f
 13904  1D01  1003               	clrc
 13905  1D02  0CF5               	rrf	___bmul@multiplier,f
 13906  1D03  08F5               	movf	___bmul@multiplier,f
 13907  1D04  1D03               	skipz
 13908  1D05  2CF9               	goto	l6570
 13909  1D06  0874               	movf	___bmul@product,w
 13910  1D07  0008               	return
 13911  1D08                     __end_of___bmul:	
 13912                           
 13913                           	psect	text91
 13914  1D55                     __ptext91:	
 13915 ;; *************** function _setCmd_Status *****************
 13916 ;; Defined at:
 13917 ;;		line 657 in file "../src/Main_B1.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  number          1    wreg     unsigned char 
 13920 ;;  cmd             1    2[COMMON] unsigned char 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  number          1    4[COMMON] unsigned char 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;		None               void
 13925 ;; Registers used:
 13926 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13927 ;; Tracked objects:
 13928 ;;		On entry : 0/0
 13929 ;;		On exit  : 0/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;Total ram usage:        3 bytes
 13937 ;; Hardware stack levels used:    1
 13938 ;; Hardware stack levels required when called:    3
 13939 ;; This function calls:
 13940 ;;		Nothing
 13941 ;; This function is called by:
 13942 ;;		_setDimmerLights_OnOff
 13943 ;;		_setControl_Lights_Table
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function _setCmd_Status
 13949  1D55                     _setCmd_Status:	
 13950                           
 13951                           ;incstack = 0
 13952                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 13953                           ;setCmd_Status@number stored from wreg
 13954  1D55  00F4               	movwf	setCmd_Status@number
 13955                           
 13956                           ;Main_B1.c: 658: switch (number) {
 13957  1D56  2D64               	goto	l7144
 13958  1D57                     l7140:	
 13959                           ;Main_B1.c: 659: case 1:
 13960                           
 13961                           
 13962                           ;Main_B1.c: 660: Cmd.all_off = cmd == 1 ? 1 : 0;
 13963  1D57  0872               	movf	setCmd_Status@cmd,w
 13964  1D58  3A01               	xorlw	1
 13965  1D59  3000               	movlw	0
 13966  1D5A  1903               	skipnz
 13967  1D5B  3001               	movlw	1
 13968  1D5C  00F3               	movwf	??_setCmd_Status
 13969  1D5D  0020               	movlb	0	; select bank0
 13970  1D5E  0867               	movf	_Cmd,w
 13971  1D5F  0673               	xorwf	??_setCmd_Status,w
 13972  1D60  39FE               	andlw	-2
 13973  1D61  0673               	xorwf	??_setCmd_Status,w
 13974  1D62  00E7               	movwf	_Cmd
 13975                           
 13976                           ;Main_B1.c: 662: }
 13977                           
 13978                           ;Main_B1.c: 661: break;
 13979  1D63  0008               	return
 13980  1D64                     l7144:	
 13981  1D64  0874               	movf	setCmd_Status@number,w
 13982                           
 13983                           ; Switch size 1, requested type "space"
 13984                           ; Number of cases is 1, Range of values is 1 to 1
 13985                           ; switch strategies available:
 13986                           ; Name         Instructions Cycles
 13987                           ; simple_byte            4     3 (average)
 13988                           ; direct_byte           11     9 (fixed)
 13989                           ; jumptable            263     9 (fixed)
 13990                           ;	Chosen strategy is simple_byte
 13991  1D65  3A01               	xorlw	1	; case 1
 13992  1D66  1903               	skipnz
 13993  1D67  2D57               	goto	l7140
 13994  1D68  2D69               	goto	l1846
 13995  1D69                     l1846:	
 13996  1D69  0008               	return
 13997  1D6A                     __end_of_setCmd_Status:	
 13998                           
 13999                           	psect	text92
 14000  1DBE                     __ptext92:	
 14001 ;; *************** function _getMain_All_LightsStatus *****************
 14002 ;; Defined at:
 14003 ;;		line 379 in file "../src/Main_B1.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  status          1    2[COMMON] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      unsigned char 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14021 ;;Total ram usage:        1 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:    3
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_setDimmerLights_Main
 14028 ;;		_setDimmerLights_OnOff
 14029 ;;		_Flash_Memory_Main
 14030 ;;		_Exception_Main
 14031 ;;		_setTemp_Main
 14032 ;;		_setControl_Lights_Table
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           
 14037                           ;psect for function _getMain_All_LightsStatus
 14038  1DBE                     _getMain_All_LightsStatus:	
 14039                           
 14040                           ;Main_B1.c: 380: char status = 0;
 14041                           
 14042                           ;incstack = 0
 14043                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
 14044  1DBE  01F2               	clrf	getMain_All_LightsStatus@status
 14045                           
 14046                           ;Main_B1.c: 417: status = DimmerLights1.Status == 1 ? 1 : 0;
 14047  1DBF  3000               	movlw	0
 14048  1DC0  0022               	movlb	2	; select bank2
 14049  1DC1  1856               	btfsc	(_DimmerLights1^(0+256)+1),0
 14050  1DC2  3001               	movlw	1
 14051  1DC3  00F2               	movwf	getMain_All_LightsStatus@status
 14052                           
 14053                           ;Main_B1.c: 418: if (status) {
 14054  1DC4  0872               	movf	getMain_All_LightsStatus@status,w
 14055  1DC5  1903               	btfsc	3,2
 14056  1DC6  2DCB               	goto	l9504
 14057                           
 14058                           ;Main_B1.c: 419: status = DimmerLights2.Status == 1 ? 1 : 0;
 14059  1DC7  3000               	movlw	0
 14060  1DC8  185F               	btfsc	(_DimmerLights2^(0+256)+1),0
 14061  1DC9  3001               	movlw	1
 14062  1DCA  00F2               	movwf	getMain_All_LightsStatus@status
 14063  1DCB                     l9504:	
 14064                           
 14065                           ;Main_B1.c: 420: }
 14066                           ;Main_B1.c: 421: if (status) {
 14067  1DCB  0872               	movf	getMain_All_LightsStatus@status,w
 14068  1DCC  1903               	btfsc	3,2
 14069  1DCD  2DD2               	goto	l9508
 14070                           
 14071                           ;Main_B1.c: 422: status = DimmerLights3.Status == 1 ? 1 : 0;
 14072  1DCE  3000               	movlw	0
 14073  1DCF  1868               	btfsc	(_DimmerLights3^(0+256)+1),0
 14074  1DD0  3001               	movlw	1
 14075  1DD1  00F2               	movwf	getMain_All_LightsStatus@status
 14076  1DD2                     l9508:	
 14077                           
 14078                           ;Main_B1.c: 423: }
 14079                           ;Main_B1.c: 426: return status;
 14080  1DD2  0872               	movf	getMain_All_LightsStatus@status,w
 14081  1DD3  0008               	return
 14082  1DD4                     __end_of_getMain_All_LightsStatus:	
 14083                           
 14084                           	psect	text93
 14085  1C0E                     __ptext93:	
 14086 ;; *************** function _getDelayOff_GO *****************
 14087 ;; Defined at:
 14088 ;;		line 114 in file "../src/DelayOff_B1.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  sw              1    wreg     unsigned char 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;  sw              1    4[COMMON] unsigned char 
 14093 ;;  go              1    5[COMMON] unsigned char 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      unsigned char 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;Total ram usage:        2 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    4
 14110 ;; This function calls:
 14111 ;;		_DelayOffPointSelect
 14112 ;; This function is called by:
 14113 ;;		_setDimmerLights_OnOff
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           
 14118                           ;psect for function _getDelayOff_GO
 14119  1C0E                     _getDelayOff_GO:	
 14120                           
 14121                           ;incstack = 0
 14122                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14123                           ;getDelayOff_GO@sw stored from wreg
 14124  1C0E  00F4               	movwf	getDelayOff_GO@sw
 14125                           
 14126                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 14127  1C0F  0874               	movf	getDelayOff_GO@sw,w
 14128  1C10  319E  26BB         	fcall	_DelayOffPointSelect
 14129                           
 14130                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 14131  1C12  0020               	movlb	0	; select bank0
 14132  1C13  0868               	movf	_DelayOff,w
 14133  1C14  0086               	movwf	6
 14134  1C15  3001               	movlw	1	; select bank2/3
 14135  1C16  0087               	movwf	7
 14136  1C17  3000               	movlw	0
 14137  1C18  1881               	btfsc	1,1
 14138  1C19  3001               	movlw	1
 14139  1C1A  00F5               	movwf	getDelayOff_GO@go
 14140                           
 14141                           ;DelayOff_B1.c: 117: return go;
 14142  1C1B  0875               	movf	getDelayOff_GO@go,w
 14143  1C1C  0008               	return
 14144  1C1D                     __end_of_getDelayOff_GO:	
 14145                           
 14146                           	psect	text94
 14147  1C97                     __ptext94:	
 14148 ;; *************** function _getCmd_Status *****************
 14149 ;; Defined at:
 14150 ;;		line 665 in file "../src/Main_B1.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;  number          1    wreg     unsigned char 
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;  number          1    2[COMMON] unsigned char 
 14155 ;;  cmd             1    3[COMMON] unsigned char 
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      unsigned char 
 14158 ;; Registers used:
 14159 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14160 ;; Tracked objects:
 14161 ;;		On entry : 0/0
 14162 ;;		On exit  : 0/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;Total ram usage:        2 bytes
 14170 ;; Hardware stack levels used:    1
 14171 ;; Hardware stack levels required when called:    3
 14172 ;; This function calls:
 14173 ;;		Nothing
 14174 ;; This function is called by:
 14175 ;;		_setDimmerLights_OnOff
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           
 14180                           ;psect for function _getCmd_Status
 14181  1C97                     _getCmd_Status:	
 14182                           
 14183                           ;incstack = 0
 14184                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 14185                           ;getCmd_Status@number stored from wreg
 14186  1C97  00F2               	movwf	getCmd_Status@number
 14187                           
 14188                           ;Main_B1.c: 666: char cmd = 0;
 14189  1C98  01F3               	clrf	getCmd_Status@cmd
 14190                           
 14191                           ;Main_B1.c: 667: switch (number) {
 14192  1C99  2CA0               	goto	l7470
 14193  1C9A                     l7466:	
 14194                           ;Main_B1.c: 668: case 1:
 14195                           
 14196                           
 14197                           ;Main_B1.c: 669: cmd = Cmd.all_off == 1 ? 1 : 0;
 14198  1C9A  3000               	movlw	0
 14199  1C9B  0020               	movlb	0	; select bank0
 14200  1C9C  1867               	btfsc	_Cmd,0
 14201  1C9D  3001               	movlw	1
 14202  1C9E  00F3               	movwf	getCmd_Status@cmd
 14203                           
 14204                           ;Main_B1.c: 671: }
 14205                           
 14206                           ;Main_B1.c: 670: break;
 14207  1C9F  2CA5               	goto	l7472
 14208  1CA0                     l7470:	
 14209  1CA0  0872               	movf	getCmd_Status@number,w
 14210                           
 14211                           ; Switch size 1, requested type "space"
 14212                           ; Number of cases is 1, Range of values is 1 to 1
 14213                           ; switch strategies available:
 14214                           ; Name         Instructions Cycles
 14215                           ; simple_byte            4     3 (average)
 14216                           ; direct_byte           11     9 (fixed)
 14217                           ; jumptable            263     9 (fixed)
 14218                           ;	Chosen strategy is simple_byte
 14219  1CA1  3A01               	xorlw	1	; case 1
 14220  1CA2  1903               	skipnz
 14221  1CA3  2C9A               	goto	l7466
 14222  1CA4  2CA5               	goto	l7472
 14223  1CA5                     l7472:	
 14224                           
 14225                           ;Main_B1.c: 672: return cmd;
 14226  1CA5  0873               	movf	getCmd_Status@cmd,w
 14227  1CA6  0008               	return
 14228  1CA7                     __end_of_getCmd_Status:	
 14229                           
 14230                           	psect	text95
 14231  1506                     __ptext95:	
 14232 ;; *************** function _setDimmerLights_Dimming *****************
 14233 ;; Defined at:
 14234 ;;		line 1084 in file "../src/Dimmer_B1.c"
 14235 ;; Parameters:    Size  Location     Type
 14236 ;;  lights          1    wreg     unsigned char 
 14237 ;;  status          1   61[BANK0 ] unsigned char 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  lights          1   64[BANK0 ] unsigned char 
 14240 ;;  value           1   63[BANK0 ] unsigned char 
 14241 ;; Return value:  Size  Location     Type
 14242 ;;		None               void
 14243 ;; Registers used:
 14244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14245 ;; Tracked objects:
 14246 ;;		On entry : 0/0
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14250 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;Total ram usage:        4 bytes
 14255 ;; Hardware stack levels used:    1
 14256 ;; Hardware stack levels required when called:    6
 14257 ;; This function calls:
 14258 ;;		_getDimmerIntr_DimmingValue
 14259 ;;		_getDimmerLights_ValueToPercent
 14260 ;;		_setBuz
 14261 ;;		_setDimmerIntr_Dimming_Sw
 14262 ;;		_setDimmerIntr_MaxmumValue
 14263 ;;		_setMemory_Modify
 14264 ;;		_setProductData
 14265 ;;		_setRF_DimmerLights
 14266 ;;		_setRF_TransceiveGO
 14267 ;;		_setTxData
 14268 ;; This function is called by:
 14269 ;;		_setDimmerLights_Main
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           
 14274                           ;psect for function _setDimmerLights_Dimming
 14275  1506                     _setDimmerLights_Dimming:	
 14276                           
 14277                           ;incstack = 0
 14278                           ; Regs used in _setDimmerLights_Dimming: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14279                           ;setDimmerLights_Dimming@lights stored from wreg
 14280  1506  0020               	movlb	0	; select bank0
 14281  1507  00E0               	movwf	setDimmerLights_Dimming@lights
 14282                           
 14283                           ;Dimmer_B1.c: 1085: setDimmerIntr_Dimming_Sw(lights, status);
 14284  1508  085D               	movf	setDimmerLights_Dimming@status,w
 14285  1509  00DE               	movwf	??_setDimmerLights_Dimming
 14286  150A  085E               	movf	??_setDimmerLights_Dimming,w
 14287  150B  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 14288  150C  0860               	movf	setDimmerLights_Dimming@lights,w
 14289  150D  3192  220C  3195   	fcall	_setDimmerIntr_Dimming_Sw
 14290                           
 14291                           ;Dimmer_B1.c: 1086: if (status == 1) {
 14292  1510  0020               	movlb	0	; select bank0
 14293  1511  085D               	movf	setDimmerLights_Dimming@status,w
 14294  1512  3A01               	xorlw	1
 14295  1513  1D03               	skipz
 14296  1514  2D22               	goto	l9902
 14297                           
 14298                           ;Dimmer_B1.c: 1088: setRF_TransceiveGO(0);
 14299  1515  3000               	movlw	0
 14300  1516  319C  2487  3195   	fcall	_setRF_TransceiveGO
 14301                           
 14302                           ;Dimmer_B1.c: 1090: setBuz(1, 100);
 14303  1519  3064               	movlw	100
 14304  151A  0020               	movlb	0	; select bank0
 14305  151B  00A4               	movwf	setBuz@time
 14306  151C  3000               	movlw	0
 14307  151D  00A5               	movwf	setBuz@time+1
 14308  151E  3001               	movlw	1
 14309  151F  3195  25F3         	fcall	_setBuz
 14310                           
 14311                           ;Dimmer_B1.c: 1091: } else if (status == 0) {
 14312  1521  0008               	return
 14313  1522                     l9902:	
 14314  1522  0020               	movlb	0	; select bank0
 14315  1523  08DD               	movf	setDimmerLights_Dimming@status,f
 14316  1524  1D03               	skipz
 14317  1525  0008               	return
 14318                           
 14319                           ;Dimmer_B1.c: 1097: char value = getDimmerIntr_DimmingValue(lights);
 14320  1526  0860               	movf	setDimmerLights_Dimming@lights,w
 14321  1527  319E  2668  3195   	fcall	_getDimmerIntr_DimmingValue
 14322  152A  0020               	movlb	0	; select bank0
 14323  152B  00DE               	movwf	??_setDimmerLights_Dimming
 14324  152C  085E               	movf	??_setDimmerLights_Dimming,w
 14325  152D  00DF               	movwf	setDimmerLights_Dimming@value
 14326                           
 14327                           ;Dimmer_B1.c: 1098: setDimmerIntr_MaxmumValue(lights, value);
 14328  152E  085F               	movf	setDimmerLights_Dimming@value,w
 14329  152F  00DE               	movwf	??_setDimmerLights_Dimming
 14330  1530  085E               	movf	??_setDimmerLights_Dimming,w
 14331  1531  00D7               	movwf	setDimmerIntr_MaxmumValue@value
 14332  1532  0860               	movf	setDimmerLights_Dimming@lights,w
 14333  1533  3190  2078  3195   	fcall	_setDimmerIntr_MaxmumValue
 14334                           
 14335                           ;Dimmer_B1.c: 1099: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 14336  1536  0020               	movlb	0	; select bank0
 14337  1537  085F               	movf	setDimmerLights_Dimming@value,w
 14338  1538  3194  2479  3195   	fcall	_getDimmerLights_ValueToPercent
 14339  153B  0020               	movlb	0	; select bank0
 14340  153C  00DE               	movwf	??_setDimmerLights_Dimming
 14341  153D  085E               	movf	??_setDimmerLights_Dimming,w
 14342  153E  00D5               	movwf	setProductData@value
 14343  153F  0860               	movf	setDimmerLights_Dimming@lights,w
 14344  1540  3E14               	addlw	20
 14345  1541  319B  23A2  3195   	fcall	_setProductData
 14346                           
 14347                           ;Dimmer_B1.c: 1106: setMemory_Modify(1);
 14348  1544  3001               	movlw	1
 14349  1545  319C  2477  3195   	fcall	_setMemory_Modify
 14350                           
 14351                           ;Dimmer_B1.c: 1110: setRF_DimmerLights(lights, 1);
 14352  1548  0020               	movlb	0	; select bank0
 14353  1549  01D8               	clrf	setRF_DimmerLights@on
 14354  154A  0AD8               	incf	setRF_DimmerLights@on,f
 14355  154B  0860               	movf	setDimmerLights_Dimming@lights,w
 14356  154C  3189  21C7  3195   	fcall	_setRF_DimmerLights
 14357                           
 14358                           ;Dimmer_B1.c: 1111: setTxData();
 14359  154F  319B  2330         	fcall	_setTxData
 14360  1551  0008               	return
 14361  1552                     __end_of_setDimmerLights_Dimming:	
 14362                           
 14363                           	psect	text96
 14364  1B30                     __ptext96:	
 14365 ;; *************** function _setTxData *****************
 14366 ;; Defined at:
 14367 ;;		line 237 in file "../src/RF_Control_B1.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;		None
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;  i               1    0        unsigned char 
 14372 ;; Return value:  Size  Location     Type
 14373 ;;		None               void
 14374 ;; Registers used:
 14375 ;;		status,2
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;Total ram usage:        0 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; Hardware stack levels required when called:    3
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_setDimmerLights_OnOff
 14392 ;;		_setDimmerLights_Dimming
 14393 ;;		_getRxData
 14394 ;;		_setControl_Lights_Table
 14395 ;;		_setRFSW_Control
 14396 ;;		_setRFSW_AdjControl
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           
 14401                           ;psect for function _setTxData
 14402  1B30                     _setTxData:	
 14403                           
 14404                           ;RF_Control_B1.c: 238: char i;
 14405                           ;RF_Control_B1.c: 239: if (RF1.Enable == 1) {
 14406                           
 14407                           ;incstack = 0
 14408                           ; Regs used in _setTxData: [status,2]
 14409  1B30  0021               	movlb	1	; select bank1
 14410  1B31  1C30               	btfss	_RF1^(0+128),0
 14411  1B32  0008               	return
 14412                           
 14413                           ;RF_Control_B1.c: 241: RF1.TransceiveGO = 1;
 14414  1B33  1530               	bsf	_RF1^(0+128),2
 14415                           
 14416                           ;RF_Control_B1.c: 242: RF1.Count = 0;
 14417  1B34  01B3               	clrf	(_RF1^(0+128)+3)
 14418  1B35  01B4               	clrf	((_RF1+1)^(0+128)+3)
 14419  1B36  0008               	return
 14420  1B37                     __end_of_setTxData:	
 14421                           
 14422                           	psect	text97
 14423  1C87                     __ptext97:	
 14424 ;; *************** function _setRF_TransceiveGO *****************
 14425 ;; Defined at:
 14426 ;;		line 575 in file "../src/RF_Control_B1.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  command         1    wreg     unsigned char 
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;  command         1    3[COMMON] unsigned char 
 14431 ;; Return value:  Size  Location     Type
 14432 ;;		None               void
 14433 ;; Registers used:
 14434 ;;		wreg, status,2, status,0
 14435 ;; Tracked objects:
 14436 ;;		On entry : 0/0
 14437 ;;		On exit  : 0/0
 14438 ;;		Unchanged: 0/0
 14439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;Total ram usage:        2 bytes
 14445 ;; Hardware stack levels used:    1
 14446 ;; Hardware stack levels required when called:    3
 14447 ;; This function calls:
 14448 ;;		Nothing
 14449 ;; This function is called by:
 14450 ;;		_setDimmerLights_Dimming
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           
 14455                           ;psect for function _setRF_TransceiveGO
 14456  1C87                     _setRF_TransceiveGO:	
 14457                           
 14458                           ;incstack = 0
 14459                           ; Regs used in _setRF_TransceiveGO: [wreg+status,2+status,0]
 14460                           ;setRF_TransceiveGO@command stored from wreg
 14461  1C87  00F3               	movwf	setRF_TransceiveGO@command
 14462                           
 14463                           ;RF_Control_B1.c: 576: RF1.TransceiveGO = command == 1 ? 1 : 0;
 14464  1C88  0873               	movf	setRF_TransceiveGO@command,w
 14465  1C89  3A01               	xorlw	1
 14466  1C8A  3000               	movlw	0
 14467  1C8B  1903               	skipnz
 14468  1C8C  3001               	movlw	1
 14469  1C8D  00F2               	movwf	??_setRF_TransceiveGO
 14470  1C8E  0DF2               	rlf	??_setRF_TransceiveGO,f
 14471  1C8F  0DF2               	rlf	??_setRF_TransceiveGO,f
 14472  1C90  0021               	movlb	1	; select bank1
 14473  1C91  0830               	movf	_RF1^(0+128),w
 14474  1C92  0672               	xorwf	??_setRF_TransceiveGO,w
 14475  1C93  39FB               	andlw	-5
 14476  1C94  0672               	xorwf	??_setRF_TransceiveGO,w
 14477  1C95  00B0               	movwf	_RF1^(0+128)
 14478  1C96  0008               	return
 14479  1C97                     __end_of_setRF_TransceiveGO:	
 14480                           
 14481                           	psect	text98
 14482  09C7                     __ptext98:	
 14483 ;; *************** function _setRF_DimmerLights *****************
 14484 ;; Defined at:
 14485 ;;		line 550 in file "../src/RF_Control_B1.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;  lights          1    wreg     unsigned char 
 14488 ;;  on              1   56[BANK0 ] unsigned char 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  lights          1   60[BANK0 ] unsigned char 
 14491 ;;  status          1   59[BANK0 ] unsigned char 
 14492 ;; Return value:  Size  Location     Type
 14493 ;;		None               void
 14494 ;; Registers used:
 14495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14501 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;Total ram usage:        5 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; Hardware stack levels required when called:    4
 14508 ;; This function calls:
 14509 ;;		_setProductData
 14510 ;; This function is called by:
 14511 ;;		_setDimmerLights_OnOff
 14512 ;;		_setDimmerLights_Dimming
 14513 ;;		_setRFSW_Control
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           
 14518                           ;psect for function _setRF_DimmerLights
 14519  09C7                     _setRF_DimmerLights:	
 14520                           
 14521                           ;incstack = 0
 14522                           ; Regs used in _setRF_DimmerLights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14523                           ;setRF_DimmerLights@lights stored from wreg
 14524  09C7  0020               	movlb	0	; select bank0
 14525  09C8  00DC               	movwf	setRF_DimmerLights@lights
 14526                           
 14527                           ;RF_Control_B1.c: 551: char status = 1;
 14528  09C9  01DB               	clrf	setRF_DimmerLights@status
 14529  09CA  0ADB               	incf	setRF_DimmerLights@status,f
 14530                           
 14531                           ;RF_Control_B1.c: 552: switch (lights) {
 14532  09CB  29D2               	goto	l6996
 14533  09CC                     l6990:	
 14534                           ;RF_Control_B1.c: 553: case 2:
 14535                           
 14536  09CC  29CF               	goto	L6
 14537  09CD                     l6992:	
 14538                           ;RF_Control_B1.c: 556: case 3:
 14539                           
 14540                           ;RF_Control_B1.c: 555: break;
 14541                           
 14542                           ;RF_Control_B1.c: 554: status <<= 1;
 14543                           
 14544                           
 14545                           ;RF_Control_B1.c: 557: status <<= 2;
 14546  09CD  1003               	clrc
 14547  09CE  0DDB               	rlf	setRF_DimmerLights@status,f
 14548  09CF                     L6:	
 14549  09CF  1003               	clrc
 14550  09D0  0DDB               	rlf	setRF_DimmerLights@status,f
 14551                           
 14552                           ;RF_Control_B1.c: 559: }
 14553                           
 14554                           ;RF_Control_B1.c: 558: break;
 14555  09D1  29DA               	goto	l2609
 14556  09D2                     l6996:	
 14557  09D2  085C               	movf	setRF_DimmerLights@lights,w
 14558                           
 14559                           ; Switch size 1, requested type "space"
 14560                           ; Number of cases is 2, Range of values is 2 to 3
 14561                           ; switch strategies available:
 14562                           ; Name         Instructions Cycles
 14563                           ; simple_byte            7     4 (average)
 14564                           ; direct_byte           13     9 (fixed)
 14565                           ; jumptable            263     9 (fixed)
 14566                           ;	Chosen strategy is simple_byte
 14567  09D3  3A02               	xorlw	2	; case 2
 14568  09D4  1903               	skipnz
 14569  09D5  29CC               	goto	l6990
 14570  09D6  3A01               	xorlw	1	; case 3
 14571  09D7  1903               	skipnz
 14572  09D8  29CD               	goto	l6992
 14573  09D9  29DA               	goto	l2609
 14574  09DA                     l2609:	
 14575                           
 14576                           ;RF_Control_B1.c: 560: status = ~status;
 14577  09DA  09DB               	comf	setRF_DimmerLights@status,f
 14578                           
 14579                           ;RF_Control_B1.c: 562: setProductData(11, lights);
 14580  09DB  085C               	movf	setRF_DimmerLights@lights,w
 14581  09DC  00D9               	movwf	??_setRF_DimmerLights
 14582  09DD  0859               	movf	??_setRF_DimmerLights,w
 14583  09DE  00D5               	movwf	setProductData@value
 14584  09DF  300B               	movlw	11
 14585  09E0  319B  23A2  3189   	fcall	_setProductData
 14586                           
 14587                           ;RF_Control_B1.c: 563: setProductData(17, product->Data[26 + lights]);
 14588  09E3  0020               	movlb	0	; select bank0
 14589  09E4  085C               	movf	setRF_DimmerLights@lights,w
 14590  09E5  3E1A               	addlw	26
 14591  09E6  076D               	addwf	_product,w
 14592  09E7  00D9               	movwf	??_setRF_DimmerLights
 14593  09E8  0859               	movf	??_setRF_DimmerLights,w
 14594  09E9  0086               	movwf	6
 14595  09EA  3002               	movlw	2	; select bank4/5
 14596  09EB  0087               	movwf	7
 14597  09EC  0801               	movf	1,w
 14598  09ED  00DA               	movwf	??_setRF_DimmerLights+1
 14599  09EE  085A               	movf	??_setRF_DimmerLights+1,w
 14600  09EF  00D5               	movwf	setProductData@value
 14601  09F0  3011               	movlw	17
 14602  09F1  319B  23A2  3189   	fcall	_setProductData
 14603                           
 14604                           ;RF_Control_B1.c: 564: if (on == 1) {
 14605  09F4  0020               	movlb	0	; select bank0
 14606  09F5  0858               	movf	setRF_DimmerLights@on,w
 14607  09F6  3A01               	xorlw	1
 14608  09F7  1D03               	skipz
 14609  09F8  2A18               	goto	l7004
 14610                           
 14611                           ;RF_Control_B1.c: 565: setProductData(9, product->Data[20 + lights]);
 14612  09F9  085C               	movf	setRF_DimmerLights@lights,w
 14613  09FA  3E14               	addlw	20
 14614  09FB  076D               	addwf	_product,w
 14615  09FC  00D9               	movwf	??_setRF_DimmerLights
 14616  09FD  0859               	movf	??_setRF_DimmerLights,w
 14617  09FE  0086               	movwf	6
 14618  09FF  3002               	movlw	2	; select bank4/5
 14619  0A00  0087               	movwf	7
 14620  0A01  0801               	movf	1,w
 14621  0A02  00DA               	movwf	??_setRF_DimmerLights+1
 14622  0A03  085A               	movf	??_setRF_DimmerLights+1,w
 14623  0A04  00D5               	movwf	setProductData@value
 14624  0A05  3009               	movlw	9
 14625  0A06  319B  23A2  3189   	fcall	_setProductData
 14626                           
 14627                           ;RF_Control_B1.c: 566: setProductData(15, (product->Data[15] | lights));
 14628  0A09  0020               	movlb	0	; select bank0
 14629  0A0A  086D               	movf	_product,w
 14630  0A0B  3E0F               	addlw	15
 14631  0A0C  0086               	movwf	6
 14632  0A0D  3002               	movlw	2	; select bank4/5
 14633  0A0E  0087               	movwf	7
 14634  0A0F  0801               	movf	1,w
 14635  0A10  045C               	iorwf	setRF_DimmerLights@lights,w
 14636  0A11  00D9               	movwf	??_setRF_DimmerLights
 14637  0A12  0859               	movf	??_setRF_DimmerLights,w
 14638  0A13  00D5               	movwf	setProductData@value
 14639  0A14  300F               	movlw	15
 14640  0A15  319B  23A2         	fcall	_setProductData
 14641                           
 14642                           ;RF_Control_B1.c: 567: } else {
 14643  0A17  0008               	return
 14644  0A18                     l7004:	
 14645                           
 14646                           ;RF_Control_B1.c: 568: setProductData(9, 0x00);
 14647  0A18  0020               	movlb	0	; select bank0
 14648  0A19  01D5               	clrf	setProductData@value
 14649  0A1A  3009               	movlw	9
 14650  0A1B  319B  23A2  3189   	fcall	_setProductData
 14651                           
 14652                           ;RF_Control_B1.c: 569: setProductData(15, (product->Data[15] & status));
 14653  0A1E  0020               	movlb	0	; select bank0
 14654  0A1F  086D               	movf	_product,w
 14655  0A20  3E0F               	addlw	15
 14656  0A21  0086               	movwf	6
 14657  0A22  3002               	movlw	2	; select bank4/5
 14658  0A23  0087               	movwf	7
 14659  0A24  0801               	movf	1,w
 14660  0A25  055B               	andwf	setRF_DimmerLights@status,w
 14661  0A26  00D9               	movwf	??_setRF_DimmerLights
 14662  0A27  0859               	movf	??_setRF_DimmerLights,w
 14663  0A28  00D5               	movwf	setProductData@value
 14664  0A29  300F               	movlw	15
 14665  0A2A  319B  23A2         	fcall	_setProductData
 14666  0A2C  0008               	return
 14667  0A2D                     __end_of_setRF_DimmerLights:	
 14668                           
 14669                           	psect	text99
 14670  1078                     __ptext99:	
 14671 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 14672 ;; Defined at:
 14673 ;;		line 147 in file "../src/Dimmer_B1.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;  lights          1    wreg     unsigned char 
 14676 ;;  value           1   55[BANK0 ] unsigned char 
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;  lights          1   57[BANK0 ] unsigned char 
 14679 ;; Return value:  Size  Location     Type
 14680 ;;		None               void
 14681 ;; Registers used:
 14682 ;;		wreg
 14683 ;; Tracked objects:
 14684 ;;		On entry : 0/0
 14685 ;;		On exit  : 0/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14688 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14691 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14692 ;;Total ram usage:        3 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:    3
 14695 ;; This function calls:
 14696 ;;		Nothing
 14697 ;; This function is called by:
 14698 ;;		_setDimmerLights_OnOff
 14699 ;;		_setDimmerLights_Dimming
 14700 ;;		_setRFSW_AdjControl
 14701 ;;		_DimmerLights_AssignationDimming
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           
 14706                           ;psect for function _setDimmerIntr_MaxmumValue
 14707  1078                     _setDimmerIntr_MaxmumValue:	
 14708                           
 14709                           ;incstack = 0
 14710                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 14711                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 14712  1078  0020               	movlb	0	; select bank0
 14713  1079  00D9               	movwf	setDimmerIntr_MaxmumValue@lights
 14714                           
 14715                           ;Dimmer_B1.c: 149: if (lights == 1) {
 14716  107A  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
 14717  107B  3A01               	xorlw	1
 14718  107C  1D03               	skipz
 14719  107D  2884               	goto	l6968
 14720                           
 14721                           ;Dimmer_B1.c: 150: DimmerIntr1.MaxmumValue = value;
 14722  107E  0857               	movf	setDimmerIntr_MaxmumValue@value,w
 14723  107F  00D8               	movwf	??_setDimmerIntr_MaxmumValue
 14724  1080  0858               	movf	??_setDimmerIntr_MaxmumValue,w
 14725  1081  0021               	movlb	1	; select bank1
 14726  1082  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 14727                           
 14728                           ;Dimmer_B1.c: 151: }
 14729  1083  0008               	return
 14730  1084                     l6968:	
 14731                           
 14732                           ;Dimmer_B1.c: 154: else if (lights == 2) {
 14733  1084  0020               	movlb	0	; select bank0
 14734  1085  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
 14735  1086  3A02               	xorlw	2
 14736  1087  1D03               	skipz
 14737  1088  288F               	goto	l6972
 14738                           
 14739                           ;Dimmer_B1.c: 155: DimmerIntr2.MaxmumValue = value;
 14740  1089  0857               	movf	setDimmerIntr_MaxmumValue@value,w
 14741  108A  00D8               	movwf	??_setDimmerIntr_MaxmumValue
 14742  108B  0858               	movf	??_setDimmerIntr_MaxmumValue,w
 14743  108C  0022               	movlb	2	; select bank2
 14744  108D  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 14745                           
 14746                           ;Dimmer_B1.c: 156: }
 14747  108E  0008               	return
 14748  108F                     l6972:	
 14749                           
 14750                           ;Dimmer_B1.c: 159: else if (lights == 3) {
 14751  108F  0020               	movlb	0	; select bank0
 14752  1090  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
 14753  1091  3A03               	xorlw	3
 14754  1092  1D03               	skipz
 14755  1093  0008               	return
 14756                           
 14757                           ;Dimmer_B1.c: 160: DimmerIntr3.MaxmumValue = value;
 14758  1094  0857               	movf	setDimmerIntr_MaxmumValue@value,w
 14759  1095  00D8               	movwf	??_setDimmerIntr_MaxmumValue
 14760  1096  0858               	movf	??_setDimmerIntr_MaxmumValue,w
 14761  1097  0023               	movlb	3	; select bank3
 14762  1098  00A6               	movwf	(_DimmerIntr3^(0+384)+6)
 14763  1099  0008               	return
 14764  109A                     __end_of_setDimmerIntr_MaxmumValue:	
 14765                           
 14766                           	psect	text100
 14767  120C                     __ptext100:	
 14768 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 14769 ;; Defined at:
 14770 ;;		line 223 in file "../src/Dimmer_B1.c"
 14771 ;; Parameters:    Size  Location     Type
 14772 ;;  lights          1    wreg     unsigned char 
 14773 ;;  command         1    2[COMMON] unsigned char 
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;  lights          1    4[COMMON] unsigned char 
 14776 ;; Return value:  Size  Location     Type
 14777 ;;		None               void
 14778 ;; Registers used:
 14779 ;;		wreg, status,2, status,0
 14780 ;; Tracked objects:
 14781 ;;		On entry : 0/0
 14782 ;;		On exit  : 0/0
 14783 ;;		Unchanged: 0/0
 14784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;Total ram usage:        3 bytes
 14790 ;; Hardware stack levels used:    1
 14791 ;; Hardware stack levels required when called:    3
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_setDimmerLights_Dimming
 14796 ;;		_setDimmerLights_DimmingClose
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           
 14801                           ;psect for function _setDimmerIntr_Dimming_Sw
 14802  120C                     _setDimmerIntr_Dimming_Sw:	
 14803                           
 14804                           ;incstack = 0
 14805                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 14806                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 14807  120C  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 14808                           
 14809                           ;Dimmer_B1.c: 225: if (lights == 1) {
 14810  120D  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 14811  120E  3A01               	xorlw	1
 14812  120F  1D03               	skipz
 14813  1210  2A1F               	goto	l7116
 14814                           
 14815                           ;Dimmer_B1.c: 226: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 14816  1211  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 14817  1212  3A01               	xorlw	1
 14818  1213  3000               	movlw	0
 14819  1214  1903               	skipnz
 14820  1215  3001               	movlw	1
 14821  1216  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 14822  1217  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 14823  1218  0021               	movlb	1	; select bank1
 14824  1219  0820               	movf	_DimmerIntr1^(0+128),w
 14825  121A  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14826  121B  39EF               	andlw	-17
 14827  121C  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14828  121D  00A0               	movwf	_DimmerIntr1^(0+128)
 14829                           
 14830                           ;Dimmer_B1.c: 227: }
 14831  121E  0008               	return
 14832  121F                     l7116:	
 14833                           
 14834                           ;Dimmer_B1.c: 230: else if (lights == 2) {
 14835  121F  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 14836  1220  3A02               	xorlw	2
 14837  1221  1D03               	skipz
 14838  1222  2A31               	goto	l7120
 14839                           
 14840                           ;Dimmer_B1.c: 231: DimmerIntr2.Dimming_Sw = command == 1 ? 1 : 0;
 14841  1223  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 14842  1224  3A01               	xorlw	1
 14843  1225  3000               	movlw	0
 14844  1226  1903               	skipnz
 14845  1227  3001               	movlw	1
 14846  1228  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 14847  1229  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 14848  122A  0022               	movlb	2	; select bank2
 14849  122B  083E               	movf	_DimmerIntr2^(0+256),w
 14850  122C  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14851  122D  39EF               	andlw	-17
 14852  122E  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14853  122F  00BE               	movwf	_DimmerIntr2^(0+256)
 14854                           
 14855                           ;Dimmer_B1.c: 232: }
 14856  1230  0008               	return
 14857  1231                     l7120:	
 14858                           
 14859                           ;Dimmer_B1.c: 235: else if (lights == 3) {
 14860  1231  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 14861  1232  3A03               	xorlw	3
 14862  1233  1D03               	skipz
 14863  1234  0008               	return
 14864                           
 14865                           ;Dimmer_B1.c: 236: DimmerIntr3.Dimming_Sw = command == 1 ? 1 : 0;
 14866  1235  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 14867  1236  3A01               	xorlw	1
 14868  1237  3000               	movlw	0
 14869  1238  1903               	skipnz
 14870  1239  3001               	movlw	1
 14871  123A  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 14872  123B  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 14873  123C  0023               	movlb	3	; select bank3
 14874  123D  0820               	movf	_DimmerIntr3^(0+384),w
 14875  123E  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14876  123F  39EF               	andlw	-17
 14877  1240  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 14878  1241  00A0               	movwf	_DimmerIntr3^(0+384)
 14879  1242  0008               	return
 14880  1243                     __end_of_setDimmerIntr_Dimming_Sw:	
 14881                           
 14882                           	psect	text101
 14883  1E68                     __ptext101:	
 14884 ;; *************** function _getDimmerIntr_DimmingValue *****************
 14885 ;; Defined at:
 14886 ;;		line 127 in file "../src/Dimmer_B1.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;  lights          1    wreg     unsigned char 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;  lights          1    4[COMMON] unsigned char 
 14891 ;;  value           1    3[COMMON] unsigned char 
 14892 ;; Return value:  Size  Location     Type
 14893 ;;                  1    wreg      unsigned char 
 14894 ;; Registers used:
 14895 ;;		wreg, status,2
 14896 ;; Tracked objects:
 14897 ;;		On entry : 0/0
 14898 ;;		On exit  : 0/0
 14899 ;;		Unchanged: 0/0
 14900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14905 ;;Total ram usage:        3 bytes
 14906 ;; Hardware stack levels used:    1
 14907 ;; Hardware stack levels required when called:    3
 14908 ;; This function calls:
 14909 ;;		Nothing
 14910 ;; This function is called by:
 14911 ;;		_setDimmerLights_Dimming
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           
 14916                           ;psect for function _getDimmerIntr_DimmingValue
 14917  1E68                     _getDimmerIntr_DimmingValue:	
 14918                           
 14919                           ;incstack = 0
 14920                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 14921                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 14922  1E68  00F4               	movwf	getDimmerIntr_DimmingValue@lights
 14923                           
 14924                           ;Dimmer_B1.c: 128: char value = 0;
 14925  1E69  01F3               	clrf	getDimmerIntr_DimmingValue@value
 14926                           
 14927                           ;Dimmer_B1.c: 130: if (lights == 1) {
 14928  1E6A  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 14929  1E6B  3A01               	xorlw	1
 14930  1E6C  1D03               	skipz
 14931  1E6D  2E71               	goto	l7366
 14932                           
 14933                           ;Dimmer_B1.c: 131: value = DimmerIntr1.DimmingValue;
 14934  1E6E  0021               	movlb	1	; select bank1
 14935  1E6F  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14936  1E70  2E7E               	goto	L8
 14937  1E71                     l7366:	
 14938                           ;Dimmer_B1.c: 132: }
 14939                           
 14940                           
 14941                           ;Dimmer_B1.c: 135: else if (lights == 2) {
 14942  1E71  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 14943  1E72  3A02               	xorlw	2
 14944  1E73  1D03               	skipz
 14945  1E74  2E78               	goto	l7370
 14946                           
 14947                           ;Dimmer_B1.c: 136: value = DimmerIntr2.DimmingValue;
 14948  1E75  0022               	movlb	2	; select bank2
 14949  1E76  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14950  1E77  2E7E               	goto	L8
 14951  1E78                     l7370:	
 14952                           ;Dimmer_B1.c: 137: }
 14953                           
 14954                           
 14955                           ;Dimmer_B1.c: 140: else if (lights == 3) {
 14956  1E78  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 14957  1E79  3A03               	xorlw	3
 14958  1E7A  1D03               	skipz
 14959  1E7B  2E81               	goto	l819
 14960                           
 14961                           ;Dimmer_B1.c: 141: value = DimmerIntr3.DimmingValue;
 14962  1E7C  0023               	movlb	3	; select bank3
 14963  1E7D  0825               	movf	(_DimmerIntr3^(0+384)+5),w
 14964  1E7E                     L8:	
 14965  1E7E  00F2               	movwf	??_getDimmerIntr_DimmingValue
 14966  1E7F  0872               	movf	??_getDimmerIntr_DimmingValue,w
 14967  1E80  00F3               	movwf	getDimmerIntr_DimmingValue@value
 14968  1E81                     l819:	
 14969                           
 14970                           ;Dimmer_B1.c: 142: }
 14971                           ;Dimmer_B1.c: 144: return value;
 14972  1E81  0873               	movf	getDimmerIntr_DimmingValue@value,w
 14973  1E82  0008               	return
 14974  1E83                     __end_of_getDimmerIntr_DimmingValue:	
 14975                           
 14976                           	psect	text102
 14977  13AE                     __ptext102:	
 14978 ;; *************** function _getDimmerLights_Allow_Condition *****************
 14979 ;; Defined at:
 14980 ;;		line 1117 in file "../src/Dimmer_B1.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;  lights          1    wreg     unsigned char 
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;  lights          1    6[COMMON] unsigned char 
 14985 ;;  allow           1    7[COMMON] unsigned char 
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      unsigned char 
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, status,0
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14996 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;Total ram usage:        6 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    3
 15002 ;; This function calls:
 15003 ;;		Nothing
 15004 ;; This function is called by:
 15005 ;;		_setDimmerLights_Main
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           
 15010                           ;psect for function _getDimmerLights_Allow_Condition
 15011  13AE                     _getDimmerLights_Allow_Condition:	
 15012                           
 15013                           ;incstack = 0
 15014                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+status,0]
 15015                           ;getDimmerLights_Allow_Condition@lights stored from wreg
 15016  13AE  00F6               	movwf	getDimmerLights_Allow_Condition@lights
 15017                           
 15018                           ;Dimmer_B1.c: 1118: char allow = 0;
 15019  13AF  01F7               	clrf	getDimmerLights_Allow_Condition@allow
 15020                           
 15021                           ;Dimmer_B1.c: 1138: if (allow == 0) {
 15022  13B0  08F7               	movf	getDimmerLights_Allow_Condition@allow,f
 15023  13B1  1D03               	skipz
 15024  13B2  2BEE               	goto	l7716
 15025                           
 15026                           ;Dimmer_B1.c: 1139: if (lights == 1) {
 15027  13B3  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 15028  13B4  3A01               	xorlw	1
 15029  13B5  1D03               	skipz
 15030  13B6  2BC5               	goto	l7688
 15031                           
 15032                           ;Dimmer_B1.c: 1140: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 15033                           ;Dimmer_B1.c: 1141: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 15034  13B7  01F3               	clrf	_getDimmerLights_Allow_Condition$2696
 15035  13B8  0AF3               	incf	_getDimmerLights_Allow_Condition$2696,f
 15036  13B9  0022               	movlb	2	; select bank2
 15037  13BA  1E5E               	btfss	_DimmerLights2^(0+256),4
 15038  13BB  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 15039  13BC  2BC3               	goto	l7686
 15040  13BD  1A67               	btfsc	_DimmerLights3^(0+256),4
 15041  13BE  2BC3               	goto	l7686
 15042  13BF  0023               	movlb	3	; select bank3
 15043  13C0  1A20               	btfsc	_DimmerIntr3^(0+384),4
 15044  13C1  2BC3               	goto	l7686
 15045  13C2  01F3               	clrf	_getDimmerLights_Allow_Condition$2696
 15046  13C3                     l7686:	
 15047  13C3  0873               	movf	_getDimmerLights_Allow_Condition$2696,w
 15048  13C4  2BEB               	goto	L10
 15049  13C5                     l7688:	
 15050                           ;Dimmer_B1.c: 1142: } else if (lights == 2) {
 15051                           
 15052  13C5  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 15053  13C6  3A02               	xorlw	2
 15054  13C7  1D03               	skipz
 15055  13C8  2BDA               	goto	l7702
 15056                           
 15057                           ;Dimmer_B1.c: 1143: allow = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw 
      +                          == 1
 15058                           ;Dimmer_B1.c: 1144: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 15059  13C9  01F4               	clrf	_getDimmerLights_Allow_Condition$2697
 15060  13CA  0AF4               	incf	_getDimmerLights_Allow_Condition$2697,f
 15061  13CB  0022               	movlb	2	; select bank2
 15062  13CC  1A55               	btfsc	_DimmerLights1^(0+256),4
 15063  13CD  2BD8               	goto	l7700
 15064  13CE  0021               	movlb	1	; select bank1
 15065  13CF  1A20               	btfsc	_DimmerIntr1^(0+128),4
 15066  13D0  2BD8               	goto	l7700
 15067  13D1  0022               	movlb	2	; select bank2
 15068  13D2  1A67               	btfsc	_DimmerLights3^(0+256),4
 15069  13D3  2BD8               	goto	l7700
 15070  13D4  0023               	movlb	3	; select bank3
 15071  13D5  1A20               	btfsc	_DimmerIntr3^(0+384),4
 15072  13D6  2BD8               	goto	l7700
 15073  13D7  01F4               	clrf	_getDimmerLights_Allow_Condition$2697
 15074  13D8                     l7700:	
 15075  13D8  0874               	movf	_getDimmerLights_Allow_Condition$2697,w
 15076  13D9  2BEB               	goto	L10
 15077  13DA                     l7702:	
 15078                           ;Dimmer_B1.c: 1145: } else if (lights == 3) {
 15079                           
 15080  13DA  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 15081  13DB  3A03               	xorlw	3
 15082  13DC  1D03               	skipz
 15083  13DD  2BEE               	goto	l7716
 15084                           
 15085                           ;Dimmer_B1.c: 1146: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 15086                           ;Dimmer_B1.c: 1147: || DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw == 1 
      +                          ? 1 : 0;
 15087  13DE  01F5               	clrf	_getDimmerLights_Allow_Condition$2698
 15088  13DF  0AF5               	incf	_getDimmerLights_Allow_Condition$2698,f
 15089  13E0  0022               	movlb	2	; select bank2
 15090  13E1  1E5E               	btfss	_DimmerLights2^(0+256),4
 15091  13E2  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 15092  13E3  2BEA               	goto	l7714
 15093  13E4  1A55               	btfsc	_DimmerLights1^(0+256),4
 15094  13E5  2BEA               	goto	l7714
 15095  13E6  0021               	movlb	1	; select bank1
 15096  13E7  1A20               	btfsc	_DimmerIntr1^(0+128),4
 15097  13E8  2BEA               	goto	l7714
 15098  13E9  01F5               	clrf	_getDimmerLights_Allow_Condition$2698
 15099  13EA                     l7714:	
 15100  13EA  0875               	movf	_getDimmerLights_Allow_Condition$2698,w
 15101  13EB                     L10:	
 15102  13EB  00F2               	movwf	??_getDimmerLights_Allow_Condition
 15103  13EC  0872               	movf	??_getDimmerLights_Allow_Condition,w
 15104  13ED  00F7               	movwf	getDimmerLights_Allow_Condition@allow
 15105  13EE                     l7716:	
 15106                           
 15107                           ;Dimmer_B1.c: 1148: }
 15108                           ;Dimmer_B1.c: 1149: }
 15109                           ;Dimmer_B1.c: 1152: return allow;
 15110  13EE  0877               	movf	getDimmerLights_Allow_Condition@allow,w
 15111  13EF  0008               	return
 15112  13F0                     __end_of_getDimmerLights_Allow_Condition:	
 15113                           
 15114                           	psect	text103
 15115  0DFD                     __ptext103:	
 15116 ;; *************** function _DimmerLights_DimmingFunction *****************
 15117 ;; Defined at:
 15118 ;;		line 1880 in file "../src/Dimmer_B1.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;  lights          1    wreg     unsigned char 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;  lights          1    6[BANK0 ] unsigned char 
 15123 ;; Return value:  Size  Location     Type
 15124 ;;		None               void
 15125 ;; Registers used:
 15126 ;;		wreg, status,2, status,0, pclath, cstack
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;Total ram usage:        2 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; Hardware stack levels required when called:    6
 15139 ;; This function calls:
 15140 ;;		_DimmerIntr_ValueCalculate
 15141 ;; This function is called by:
 15142 ;;		_DimmerLights_Main
 15143 ;; This function uses a non-reentrant model
 15144 ;;
 15145                           
 15146                           
 15147                           ;psect for function _DimmerLights_DimmingFunction
 15148  0DFD                     _DimmerLights_DimmingFunction:	
 15149                           
 15150                           ;incstack = 0
 15151                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 15152                           ;DimmerLights_DimmingFunction@lights stored from wreg
 15153  0DFD  0020               	movlb	0	; select bank0
 15154  0DFE  00A6               	movwf	DimmerLights_DimmingFunction@lights
 15155                           
 15156                           ;Dimmer_B1.c: 1882: if (lights == 1) {
 15157  0DFF  0826               	movf	DimmerLights_DimmingFunction@lights,w
 15158  0E00  3A01               	xorlw	1
 15159  0E01  1D03               	skipz
 15160  0E02  2E53               	goto	l10164
 15161                           
 15162                           ;Dimmer_B1.c: 1883: if (DimmerIntr1.Tune == 1) {
 15163  0E03  0021               	movlb	1	; select bank1
 15164  0E04  1CA0               	btfss	_DimmerIntr1^(0+128),1
 15165  0E05  2E53               	goto	l10164
 15166                           
 15167                           ;Dimmer_B1.c: 1884: DimmerIntr1.Tune = 0;
 15168  0E06  10A0               	bcf	_DimmerIntr1^(0+128),1
 15169                           
 15170                           ;Dimmer_B1.c: 1885: DimmerIntr1.TuneTime++;
 15171  0E07  3001               	movlw	1
 15172  0E08  0020               	movlb	0	; select bank0
 15173  0E09  00A5               	movwf	??_DimmerLights_DimmingFunction
 15174  0E0A  0825               	movf	??_DimmerLights_DimmingFunction,w
 15175  0E0B  0021               	movlb	1	; select bank1
 15176  0E0C  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 15177                           
 15178                           ;Dimmer_B1.c: 1886: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 15179  0E0D  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 15180  0E0E  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 15181  0E0F  1C03               	skipc
 15182  0E10  2E53               	goto	l10164
 15183                           
 15184                           ;Dimmer_B1.c: 1887: DimmerIntr1.TuneTime = 0;
 15185  0E11  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 15186                           
 15187                           ;Dimmer_B1.c: 1888: DimmerIntr1.TuneGO = 1;
 15188  0E12  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 15189                           
 15190                           ;Dimmer_B1.c: 1889: if (DimmerIntr1.Dimming_Sw == 1) {
 15191  0E13  1E20               	btfss	_DimmerIntr1^(0+128),4
 15192  0E14  2E35               	goto	l1107
 15193                           
 15194                           ;Dimmer_B1.c: 1890: if (DimmerIntr1.Dimming_Status == 0) {
 15195  0E15  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 15196  0E16  2E28               	goto	l10146
 15197                           
 15198                           ;Dimmer_B1.c: 1891: if (DimmerIntr1.DimmingValue < ((char)((100-77)*0.55))) {
 15199  0E17  300C               	movlw	12
 15200  0E18  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 15201  0E19  1803               	skipnc
 15202  0E1A  2E26               	goto	l1109
 15203                           
 15204                           ;Dimmer_B1.c: 1892: DimmerIntr1.DimmingValue++;
 15205  0E1B  3001               	movlw	1
 15206  0E1C  0020               	movlb	0	; select bank0
 15207  0E1D  00A5               	movwf	??_DimmerLights_DimmingFunction
 15208  0E1E  0825               	movf	??_DimmerLights_DimmingFunction,w
 15209  0E1F  0021               	movlb	1	; select bank1
 15210  0E20  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 15211                           
 15212                           ;Dimmer_B1.c: 1893: DimmerIntr_ValueCalculate(1);
 15213  0E21  3001               	movlw	1
 15214  0E22  3196  26EE  318D   	fcall	_DimmerIntr_ValueCalculate
 15215                           
 15216                           ;Dimmer_B1.c: 1894: } else {
 15217  0E25  2E53               	goto	l10164
 15218  0E26                     l1109:	
 15219                           
 15220                           ;Dimmer_B1.c: 1895: DimmerIntr1.Dimming_Status = 1;
 15221  0E26  16A0               	bsf	_DimmerIntr1^(0+128),5
 15222                           
 15223                           ;Dimmer_B1.c: 1896: }
 15224                           ;Dimmer_B1.c: 1897: } else {
 15225  0E27  2E53               	goto	l10164
 15226  0E28                     l10146:	
 15227                           
 15228                           ;Dimmer_B1.c: 1898: if (DimmerIntr1.DimmingValue > ((char)((100-5)*0.55))) {
 15229  0E28  3035               	movlw	53
 15230  0E29  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 15231  0E2A  1C03               	skipc
 15232  0E2B  2E33               	goto	l1112
 15233                           
 15234                           ;Dimmer_B1.c: 1899: DimmerIntr1.DimmingValue--;
 15235  0E2C  3001               	movlw	1
 15236  0E2D  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 15237                           
 15238                           ;Dimmer_B1.c: 1900: DimmerIntr_ValueCalculate(1);
 15239  0E2E  3001               	movlw	1
 15240  0E2F  3196  26EE  318D   	fcall	_DimmerIntr_ValueCalculate
 15241                           
 15242                           ;Dimmer_B1.c: 1901: } else {
 15243  0E32  2E53               	goto	l10164
 15244  0E33                     l1112:	
 15245                           
 15246                           ;Dimmer_B1.c: 1902: DimmerIntr1.Dimming_Status = 0;
 15247  0E33  12A0               	bcf	_DimmerIntr1^(0+128),5
 15248                           
 15249                           ;Dimmer_B1.c: 1903: }
 15250                           ;Dimmer_B1.c: 1904: }
 15251                           ;Dimmer_B1.c: 1905: } else if (DimmerIntr1.Dimming_RF == 1) {
 15252  0E34  2E53               	goto	l10164
 15253  0E35                     l1107:	
 15254  0E35  1F20               	btfss	_DimmerIntr1^(0+128),6
 15255  0E36  2E53               	goto	l10164
 15256                           
 15257                           ;Dimmer_B1.c: 1906: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 15258  0E37  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 15259  0E38  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 15260  0E39  1803               	skipnc
 15261  0E3A  2E46               	goto	l10158
 15262                           
 15263                           ;Dimmer_B1.c: 1907: DimmerIntr1.DimmingValue++;
 15264  0E3B  3001               	movlw	1
 15265  0E3C  0020               	movlb	0	; select bank0
 15266  0E3D  00A5               	movwf	??_DimmerLights_DimmingFunction
 15267  0E3E  0825               	movf	??_DimmerLights_DimmingFunction,w
 15268  0E3F  0021               	movlb	1	; select bank1
 15269  0E40  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 15270                           
 15271                           ;Dimmer_B1.c: 1908: DimmerIntr_ValueCalculate(1);
 15272  0E41  3001               	movlw	1
 15273  0E42  3196  26EE  318D   	fcall	_DimmerIntr_ValueCalculate
 15274                           
 15275                           ;Dimmer_B1.c: 1909: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 15276  0E45  2E53               	goto	l10164
 15277  0E46                     l10158:	
 15278  0E46  0021               	movlb	1	; select bank1
 15279  0E47  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 15280  0E48  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 15281  0E49  1803               	skipnc
 15282  0E4A  2E52               	goto	l1118
 15283                           
 15284                           ;Dimmer_B1.c: 1910: DimmerIntr1.DimmingValue--;
 15285  0E4B  3001               	movlw	1
 15286  0E4C  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 15287                           
 15288                           ;Dimmer_B1.c: 1911: DimmerIntr_ValueCalculate(1);
 15289  0E4D  3001               	movlw	1
 15290  0E4E  3196  26EE  318D   	fcall	_DimmerIntr_ValueCalculate
 15291                           
 15292                           ;Dimmer_B1.c: 1912: } else {
 15293  0E51  2E53               	goto	l10164
 15294  0E52                     l1118:	
 15295                           
 15296                           ;Dimmer_B1.c: 1913: DimmerIntr1.Dimming_RF = 0;
 15297  0E52  1320               	bcf	_DimmerIntr1^(0+128),6
 15298  0E53                     l10164:	
 15299                           
 15300                           ;Dimmer_B1.c: 1914: }
 15301                           ;Dimmer_B1.c: 1915: }
 15302                           ;Dimmer_B1.c: 1916: }
 15303                           ;Dimmer_B1.c: 1917: }
 15304                           ;Dimmer_B1.c: 1918: }
 15305                           ;Dimmer_B1.c: 1922: if (lights == 2) {
 15306  0E53  0020               	movlb	0	; select bank0
 15307  0E54  0826               	movf	DimmerLights_DimmingFunction@lights,w
 15308  0E55  3A02               	xorlw	2
 15309  0E56  1D03               	skipz
 15310  0E57  0008               	return
 15311                           
 15312                           ;Dimmer_B1.c: 1923: if (DimmerIntr2.Tune == 1) {
 15313  0E58  0022               	movlb	2	; select bank2
 15314  0E59  1CBE               	btfss	_DimmerIntr2^(0+256),1
 15315  0E5A  0008               	return
 15316                           
 15317                           ;Dimmer_B1.c: 1924: DimmerIntr2.Tune = 0;
 15318  0E5B  10BE               	bcf	_DimmerIntr2^(0+256),1
 15319                           
 15320                           ;Dimmer_B1.c: 1925: DimmerIntr2.TuneTime++;
 15321  0E5C  3001               	movlw	1
 15322  0E5D  0020               	movlb	0	; select bank0
 15323  0E5E  00A5               	movwf	??_DimmerLights_DimmingFunction
 15324  0E5F  0825               	movf	??_DimmerLights_DimmingFunction,w
 15325  0E60  0022               	movlb	2	; select bank2
 15326  0E61  07C1               	addwf	(_DimmerIntr2^(0+256)+3),f
 15327                           
 15328                           ;Dimmer_B1.c: 1926: if (DimmerIntr2.TuneTime >= DimmerIntr2.TuneTimeValue) {
 15329  0E62  0842               	movf	(_DimmerIntr2^(0+256)+4),w
 15330  0E63  0241               	subwf	(_DimmerIntr2^(0+256)+3),w
 15331  0E64  1C03               	skipc
 15332  0E65  0008               	return
 15333                           
 15334                           ;Dimmer_B1.c: 1927: DimmerIntr2.TuneTime = 0;
 15335  0E66  01C1               	clrf	(_DimmerIntr2^(0+256)+3)
 15336                           
 15337                           ;Dimmer_B1.c: 1928: DimmerIntr2.TuneGO = 1;
 15338  0E67  173F               	bsf	(_DimmerIntr2^(0+256)+1),6
 15339                           
 15340                           ;Dimmer_B1.c: 1929: if (DimmerIntr2.Dimming_Sw == 1) {
 15341  0E68  1E3E               	btfss	_DimmerIntr2^(0+256),4
 15342  0E69  2E88               	goto	l1123
 15343                           
 15344                           ;Dimmer_B1.c: 1930: if (DimmerIntr2.Dimming_Status == 0) {
 15345  0E6A  1ABE               	btfsc	_DimmerIntr2^(0+256),5
 15346  0E6B  2E7C               	goto	l10188
 15347                           
 15348                           ;Dimmer_B1.c: 1931: if (DimmerIntr2.DimmingValue < ((char)((100-77)*0.55))) {
 15349  0E6C  300C               	movlw	12
 15350  0E6D  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 15351  0E6E  1803               	skipnc
 15352  0E6F  2E7A               	goto	l1125
 15353                           
 15354                           ;Dimmer_B1.c: 1932: DimmerIntr2.DimmingValue++;
 15355  0E70  3001               	movlw	1
 15356  0E71  0020               	movlb	0	; select bank0
 15357  0E72  00A5               	movwf	??_DimmerLights_DimmingFunction
 15358  0E73  0825               	movf	??_DimmerLights_DimmingFunction,w
 15359  0E74  0022               	movlb	2	; select bank2
 15360  0E75  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 15361                           
 15362                           ;Dimmer_B1.c: 1933: DimmerIntr_ValueCalculate(2);
 15363  0E76  3002               	movlw	2
 15364  0E77  3196  26EE         	fcall	_DimmerIntr_ValueCalculate
 15365                           
 15366                           ;Dimmer_B1.c: 1934: } else {
 15367  0E79  0008               	return
 15368  0E7A                     l1125:	
 15369                           
 15370                           ;Dimmer_B1.c: 1935: DimmerIntr2.Dimming_Status = 1;
 15371  0E7A  16BE               	bsf	_DimmerIntr2^(0+256),5
 15372                           
 15373                           ;Dimmer_B1.c: 1936: }
 15374                           ;Dimmer_B1.c: 1937: } else {
 15375  0E7B  0008               	return
 15376  0E7C                     l10188:	
 15377                           
 15378                           ;Dimmer_B1.c: 1938: if (DimmerIntr2.DimmingValue > ((char)((100-5)*0.55))) {
 15379  0E7C  3035               	movlw	53
 15380  0E7D  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 15381  0E7E  1C03               	skipc
 15382  0E7F  2E86               	goto	l1128
 15383                           
 15384                           ;Dimmer_B1.c: 1939: DimmerIntr2.DimmingValue--;
 15385  0E80  3001               	movlw	1
 15386  0E81  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 15387                           
 15388                           ;Dimmer_B1.c: 1940: DimmerIntr_ValueCalculate(2);
 15389  0E82  3002               	movlw	2
 15390  0E83  3196  26EE         	fcall	_DimmerIntr_ValueCalculate
 15391                           
 15392                           ;Dimmer_B1.c: 1941: } else {
 15393  0E85  0008               	return
 15394  0E86                     l1128:	
 15395                           
 15396                           ;Dimmer_B1.c: 1942: DimmerIntr2.Dimming_Status = 0;
 15397  0E86  12BE               	bcf	_DimmerIntr2^(0+256),5
 15398                           
 15399                           ;Dimmer_B1.c: 1943: }
 15400                           ;Dimmer_B1.c: 1944: }
 15401                           ;Dimmer_B1.c: 1945: } else if (DimmerIntr2.Dimming_RF == 1) {
 15402  0E87  0008               	return
 15403  0E88                     l1123:	
 15404  0E88  1F3E               	btfss	_DimmerIntr2^(0+256),6
 15405  0E89  0008               	return
 15406                           
 15407                           ;Dimmer_B1.c: 1946: if (DimmerIntr2.DimmingValue < DimmerIntr2.MaxmumValue) {
 15408  0E8A  0844               	movf	(_DimmerIntr2^(0+256)+6),w
 15409  0E8B  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 15410  0E8C  1803               	skipnc
 15411  0E8D  2E98               	goto	l10200
 15412                           
 15413                           ;Dimmer_B1.c: 1947: DimmerIntr2.DimmingValue++;
 15414  0E8E  3001               	movlw	1
 15415  0E8F  0020               	movlb	0	; select bank0
 15416  0E90  00A5               	movwf	??_DimmerLights_DimmingFunction
 15417  0E91  0825               	movf	??_DimmerLights_DimmingFunction,w
 15418  0E92  0022               	movlb	2	; select bank2
 15419  0E93  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 15420                           
 15421                           ;Dimmer_B1.c: 1948: DimmerIntr_ValueCalculate(2);
 15422  0E94  3002               	movlw	2
 15423  0E95  3196  26EE         	fcall	_DimmerIntr_ValueCalculate
 15424                           
 15425                           ;Dimmer_B1.c: 1949: } else if (DimmerIntr2.DimmingValue > DimmerIntr2.MaxmumValue) {
 15426  0E97  0008               	return
 15427  0E98                     l10200:	
 15428  0E98  0022               	movlb	2	; select bank2
 15429  0E99  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 15430  0E9A  0244               	subwf	(_DimmerIntr2^(0+256)+6),w
 15431  0E9B  1803               	skipnc
 15432  0E9C  2EA3               	goto	l1134
 15433                           
 15434                           ;Dimmer_B1.c: 1950: DimmerIntr2.DimmingValue--;
 15435  0E9D  3001               	movlw	1
 15436  0E9E  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 15437                           
 15438                           ;Dimmer_B1.c: 1951: DimmerIntr_ValueCalculate(2);
 15439  0E9F  3002               	movlw	2
 15440  0EA0  3196  26EE         	fcall	_DimmerIntr_ValueCalculate
 15441                           
 15442                           ;Dimmer_B1.c: 1952: } else {
 15443  0EA2  0008               	return
 15444  0EA3                     l1134:	
 15445                           
 15446                           ;Dimmer_B1.c: 1953: DimmerIntr2.Dimming_RF = 0;
 15447  0EA3  133E               	bcf	_DimmerIntr2^(0+256),6
 15448  0EA4  0008               	return
 15449  0EA5                     __end_of_DimmerLights_DimmingFunction:	
 15450                           
 15451                           	psect	text104
 15452  16EE                     __ptext104:	
 15453 ;; *************** function _DimmerIntr_ValueCalculate *****************
 15454 ;; Defined at:
 15455 ;;		line 1848 in file "../src/Dimmer_B1.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;  lights          1    wreg     unsigned char 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  lights          1    4[BANK0 ] unsigned char 
 15460 ;; Return value:  Size  Location     Type
 15461 ;;		None               void
 15462 ;; Registers used:
 15463 ;;		wreg, status,2, status,0, pclath, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;Total ram usage:        3 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    5
 15476 ;; This function calls:
 15477 ;;		_Division
 15478 ;; This function is called by:
 15479 ;;		_setDimmerLights_OnOff
 15480 ;;		_DimmerLights_DimmingFunction
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484                           
 15485                           ;psect for function _DimmerIntr_ValueCalculate
 15486  16EE                     _DimmerIntr_ValueCalculate:	
 15487                           
 15488                           ;incstack = 0
 15489                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg+status,2+status,0+pclath+cstack]
 15490                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 15491  16EE  0020               	movlb	0	; select bank0
 15492  16EF  00A4               	movwf	DimmerIntr_ValueCalculate@lights
 15493                           
 15494                           ;Dimmer_B1.c: 1850: if (lights == 1) {
 15495  16F0  0824               	movf	DimmerIntr_ValueCalculate@lights,w
 15496  16F1  3A01               	xorlw	1
 15497  16F2  1D03               	skipz
 15498  16F3  2F1A               	goto	l9670
 15499                           
 15500                           ;Dimmer_B1.c: 1855: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
 15501  16F4  3002               	movlw	2
 15502  16F5  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15503  16F6  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15504  16F7  00F7               	movwf	Division@num
 15505  16F8  0021               	movlb	1	; select bank1
 15506  16F9  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 15507  16FA  319B  23F0  3196   	fcall	_Division
 15508  16FD  0020               	movlb	0	; select bank0
 15509  16FE  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
 15510  16FF  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
 15511  1700  0021               	movlb	1	; select bank1
 15512  1701  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 15513                           
 15514                           ;Dimmer_B1.c: 1856: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - DimmerIntr1.
      +                          DimmingValue);
 15515  1702  0325               	decf	(_DimmerIntr1^(0+128)+5),w
 15516  1703  3AFF               	xorlw	255
 15517  1704  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 15518  1705  3E37               	addlw	55
 15519  1706  0020               	movlb	0	; select bank0
 15520  1707  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15521  1708  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15522  1709  0021               	movlb	1	; select bank1
 15523  170A  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 15524                           
 15525                           ;Dimmer_B1.c: 1857: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
 15526  170B  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 15527  170C  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 15528  170D  0020               	movlb	0	; select bank0
 15529  170E  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15530  170F  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15531  1710  0021               	movlb	1	; select bank1
 15532  1711  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 15533                           
 15534                           ;Dimmer_B1.c: 1858: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
 15535  1712  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 15536  1713  3E05               	addlw	5
 15537  1714  0020               	movlb	0	; select bank0
 15538  1715  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15539  1716  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15540  1717  0021               	movlb	1	; select bank1
 15541  1718  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 15542                           
 15543                           ;Dimmer_B1.c: 1860: DimmerIntr1.Calculate = 1;
 15544  1719  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 15545  171A                     l9670:	
 15546                           
 15547                           ;Dimmer_B1.c: 1861: }
 15548                           ;Dimmer_B1.c: 1865: if (lights == 2) {
 15549  171A  0020               	movlb	0	; select bank0
 15550  171B  0824               	movf	DimmerIntr_ValueCalculate@lights,w
 15551  171C  3A02               	xorlw	2
 15552  171D  1D03               	skipz
 15553  171E  0008               	return
 15554                           
 15555                           ;Dimmer_B1.c: 1870: DimmerIntr2.TuneValue2 = Division(DimmerIntr2.DimmingValue, 2);
 15556  171F  3002               	movlw	2
 15557  1720  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15558  1721  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15559  1722  00F7               	movwf	Division@num
 15560  1723  0022               	movlb	2	; select bank2
 15561  1724  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 15562  1725  319B  23F0         	fcall	_Division
 15563  1727  0020               	movlb	0	; select bank0
 15564  1728  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
 15565  1729  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
 15566  172A  0022               	movlb	2	; select bank2
 15567  172B  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 15568                           
 15569                           ;Dimmer_B1.c: 1871: DimmerIntr2.TuneValue3 = DimmerIntr2.TuneValue2 + (55 - DimmerIntr2.
      +                          DimmingValue);
 15570  172C  0343               	decf	(_DimmerIntr2^(0+256)+5),w
 15571  172D  3AFF               	xorlw	255
 15572  172E  0746               	addwf	(_DimmerIntr2^(0+256)+8),w
 15573  172F  3E37               	addlw	55
 15574  1730  0020               	movlb	0	; select bank0
 15575  1731  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15576  1732  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15577  1733  0022               	movlb	2	; select bank2
 15578  1734  00C7               	movwf	(_DimmerIntr2^(0+256)+9)
 15579                           
 15580                           ;Dimmer_B1.c: 1872: DimmerIntr2.TuneValue4 = DimmerIntr2.TuneValue3 + DimmerIntr2.TuneVa
      +                          lue2;
 15581  1735  0847               	movf	(_DimmerIntr2^(0+256)+9),w
 15582  1736  0746               	addwf	(_DimmerIntr2^(0+256)+8),w
 15583  1737  0020               	movlb	0	; select bank0
 15584  1738  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15585  1739  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15586  173A  0022               	movlb	2	; select bank2
 15587  173B  00C8               	movwf	(_DimmerIntr2^(0+256)+10)
 15588                           
 15589                           ;Dimmer_B1.c: 1873: DimmerIntr2.TuneEnd = DimmerIntr2.TuneValue4 + 5;
 15590  173C  0848               	movf	(_DimmerIntr2^(0+256)+10),w
 15591  173D  3E05               	addlw	5
 15592  173E  0020               	movlb	0	; select bank0
 15593  173F  00A2               	movwf	??_DimmerIntr_ValueCalculate
 15594  1740  0822               	movf	??_DimmerIntr_ValueCalculate,w
 15595  1741  0022               	movlb	2	; select bank2
 15596  1742  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 15597                           
 15598                           ;Dimmer_B1.c: 1875: DimmerIntr2.Calculate = 1;
 15599  1743  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 15600  1744  0008               	return
 15601  1745                     __end_of_DimmerIntr_ValueCalculate:	
 15602                           
 15603                           	psect	text105
 15604  1BFF                     __ptext105:	
 15605 ;; *************** function _DimmerLights_Initialization *****************
 15606 ;; Defined at:
 15607 ;;		line 675 in file "../src/Dimmer_B1.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;		None
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;		None               void
 15614 ;; Registers used:
 15615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15625 ;;Total ram usage:        0 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; Hardware stack levels required when called:    7
 15628 ;; This function calls:
 15629 ;;		_DimmerIntr_Initialization
 15630 ;;		_setDimmerLights_Initialization
 15631 ;; This function is called by:
 15632 ;;		_main
 15633 ;; This function uses a non-reentrant model
 15634 ;;
 15635                           
 15636                           
 15637                           ;psect for function _DimmerLights_Initialization
 15638  1BFF                     _DimmerLights_Initialization:	
 15639                           
 15640                           ;Dimmer_B1.c: 677: setDimmerLights_Initialization(1);
 15641                           
 15642                           ;incstack = 0
 15643                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15644  1BFF  3001               	movlw	1
 15645  1C00  3180  2002  319B   	fcall	_setDimmerLights_Initialization
 15646                           
 15647                           ;Dimmer_B1.c: 681: setDimmerLights_Initialization(2);
 15648  1C03  3002               	movlw	2
 15649  1C04  3180  2002  319B   	fcall	_setDimmerLights_Initialization
 15650                           
 15651                           ;Dimmer_B1.c: 685: setDimmerLights_Initialization(3);
 15652  1C07  3003               	movlw	3
 15653  1C08  3180  2002  319B   	fcall	_setDimmerLights_Initialization
 15654                           
 15655                           ;Dimmer_B1.c: 687: DimmerIntr_Initialization();
 15656  1C0B  3182  22BF         	fcall	_DimmerIntr_Initialization
 15657  1C0D  0008               	return
 15658  1C0E                     __end_of_DimmerLights_Initialization:	
 15659                           
 15660                           	psect	text106
 15661  0002                     __ptext106:	
 15662 ;; *************** function _setDimmerLights_Initialization *****************
 15663 ;; Defined at:
 15664 ;;		line 691 in file "../src/Dimmer_B1.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  lights          1    wreg     unsigned char 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;  lights          1    0[COMMON] unsigned char 
 15669 ;; Return value:  Size  Location     Type
 15670 ;;		None               void
 15671 ;; Registers used:
 15672 ;;		wreg
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        0 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    3
 15685 ;; This function calls:
 15686 ;;		Nothing
 15687 ;; This function is called by:
 15688 ;;		_DimmerLights_Initialization
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           
 15693                           ;psect for function _setDimmerLights_Initialization
 15694  0002                     _setDimmerLights_Initialization:	
 15695                           
 15696                           ;incstack = 0
 15697                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 15698  0002  0008               	return
 15699  0003                     __end_of_setDimmerLights_Initialization:	
 15700                           
 15701                           	psect	text107
 15702  02BF                     __ptext107:	
 15703 ;; *************** function _DimmerIntr_Initialization *****************
 15704 ;; Defined at:
 15705 ;;		line 7 in file "../src/Dimmer_B1.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;		None
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;		None
 15710 ;; Return value:  Size  Location     Type
 15711 ;;		None               void
 15712 ;; Registers used:
 15713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;Total ram usage:        2 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; Hardware stack levels required when called:    6
 15726 ;; This function calls:
 15727 ;;		_Division
 15728 ;;		_getDimmerLights_PercentToValue
 15729 ;;		_getDimmerLights_ValueToPercent
 15730 ;;		_setMemory_Modify
 15731 ;; This function is called by:
 15732 ;;		_DimmerLights_Initialization
 15733 ;; This function uses a non-reentrant model
 15734 ;;
 15735                           
 15736                           
 15737                           ;psect for function _DimmerIntr_Initialization
 15738  02BF                     _DimmerIntr_Initialization:	
 15739                           
 15740                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 15741                           
 15742                           ;incstack = 0
 15743                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 15744  02BF  3003               	movlw	3
 15745  02C0  0020               	movlb	0	; select bank0
 15746  02C1  00D7               	movwf	??_DimmerIntr_Initialization
 15747  02C2  0857               	movf	??_DimmerIntr_Initialization,w
 15748  02C3  0021               	movlb	1	; select bank1
 15749  02C4  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 15750                           
 15751                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-77)*0.55));
 15752  02C5  300C               	movlw	12
 15753  02C6  0020               	movlb	0	; select bank0
 15754  02C7  00D7               	movwf	??_DimmerIntr_Initialization
 15755  02C8  0857               	movf	??_DimmerIntr_Initialization,w
 15756  02C9  0021               	movlb	1	; select bank1
 15757  02CA  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 15758                           
 15759                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-5)*0.55));
 15760  02CB  3034               	movlw	52
 15761  02CC  0020               	movlb	0	; select bank0
 15762  02CD  00D7               	movwf	??_DimmerIntr_Initialization
 15763  02CE  0857               	movf	??_DimmerIntr_Initialization,w
 15764  02CF  0021               	movlb	1	; select bank1
 15765  02D0  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 15766                           
 15767                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 15768  02D1  10A0               	bcf	_DimmerIntr1^(0+128),1
 15769                           
 15770                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 15771  02D2  300C               	movlw	12
 15772  02D3  3194  2479  3182   	fcall	_getDimmerLights_ValueToPercent
 15773  02D6  0020               	movlb	0	; select bank0
 15774  02D7  00D7               	movwf	??_DimmerIntr_Initialization
 15775  02D8  086D               	movf	_product,w
 15776  02D9  3E15               	addlw	21
 15777  02DA  0086               	movwf	6
 15778  02DB  3002               	movlw	2	; select bank4/5
 15779  02DC  0087               	movwf	7
 15780  02DD  0857               	movf	??_DimmerIntr_Initialization,w
 15781  02DE  0081               	movwf	1
 15782                           
 15783                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 15784  02DF  086D               	movf	_product,w
 15785  02E0  3E15               	addlw	21
 15786  02E1  0086               	movwf	6
 15787  02E2  3002               	movlw	2	; select bank4/5
 15788  02E3  0087               	movwf	7
 15789  02E4  0801               	movf	1,w
 15790  02E5  3197  2745  3182   	fcall	_getDimmerLights_PercentToValue
 15791  02E8  0020               	movlb	0	; select bank0
 15792  02E9  00D7               	movwf	??_DimmerIntr_Initialization
 15793  02EA  0857               	movf	??_DimmerIntr_Initialization,w
 15794  02EB  0021               	movlb	1	; select bank1
 15795  02EC  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 15796                           
 15797                           ;Dimmer_B1.c: 29: DimmerIntr1.TuneValue2 = Division(((char)((100-77)*0.55)), 2);
 15798  02ED  3002               	movlw	2
 15799  02EE  0020               	movlb	0	; select bank0
 15800  02EF  00D7               	movwf	??_DimmerIntr_Initialization
 15801  02F0  0857               	movf	??_DimmerIntr_Initialization,w
 15802  02F1  00F7               	movwf	Division@num
 15803  02F2  300C               	movlw	12
 15804  02F3  319B  23F0  3182   	fcall	_Division
 15805  02F6  0020               	movlb	0	; select bank0
 15806  02F7  00D8               	movwf	??_DimmerIntr_Initialization+1
 15807  02F8  0858               	movf	??_DimmerIntr_Initialization+1,w
 15808  02F9  0021               	movlb	1	; select bank1
 15809  02FA  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 15810                           
 15811                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - ((char)((100-7
      +                          7)*0.55)));
 15812  02FB  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 15813  02FC  3E2B               	addlw	43
 15814  02FD  0020               	movlb	0	; select bank0
 15815  02FE  00D7               	movwf	??_DimmerIntr_Initialization
 15816  02FF  0857               	movf	??_DimmerIntr_Initialization,w
 15817  0300  0021               	movlb	1	; select bank1
 15818  0301  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 15819                           
 15820                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
 15821  0302  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 15822  0303  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 15823  0304  0020               	movlb	0	; select bank0
 15824  0305  00D7               	movwf	??_DimmerIntr_Initialization
 15825  0306  0857               	movf	??_DimmerIntr_Initialization,w
 15826  0307  0021               	movlb	1	; select bank1
 15827  0308  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 15828                           
 15829                           ;Dimmer_B1.c: 32: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
 15830  0309  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 15831  030A  3E01               	addlw	1
 15832  030B  0020               	movlb	0	; select bank0
 15833  030C  00D7               	movwf	??_DimmerIntr_Initialization
 15834  030D  0857               	movf	??_DimmerIntr_Initialization,w
 15835  030E  0021               	movlb	1	; select bank1
 15836  030F  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 15837                           
 15838                           ;Dimmer_B1.c: 33: DimmerIntr1.Calculate = 1;
 15839  0310  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 15840                           
 15841                           ;Dimmer_B1.c: 39: DimmerIntr2.TuneTimeValue = 3;
 15842  0311  3003               	movlw	3
 15843  0312  0020               	movlb	0	; select bank0
 15844  0313  00D7               	movwf	??_DimmerIntr_Initialization
 15845  0314  0857               	movf	??_DimmerIntr_Initialization,w
 15846  0315  0022               	movlb	2	; select bank2
 15847  0316  00C2               	movwf	(_DimmerIntr2^(0+256)+4)
 15848                           
 15849                           ;Dimmer_B1.c: 40: DimmerIntr2.MaxmumValue = ((char)((100-77)*0.55));
 15850  0317  300C               	movlw	12
 15851  0318  0020               	movlb	0	; select bank0
 15852  0319  00D7               	movwf	??_DimmerIntr_Initialization
 15853  031A  0857               	movf	??_DimmerIntr_Initialization,w
 15854  031B  0022               	movlb	2	; select bank2
 15855  031C  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 15856                           
 15857                           ;Dimmer_B1.c: 41: DimmerIntr2.MinimumValue = ((char)((100-5)*0.55));
 15858  031D  3034               	movlw	52
 15859  031E  0020               	movlb	0	; select bank0
 15860  031F  00D7               	movwf	??_DimmerIntr_Initialization
 15861  0320  0857               	movf	??_DimmerIntr_Initialization,w
 15862  0321  0022               	movlb	2	; select bank2
 15863  0322  00C5               	movwf	(_DimmerIntr2^(0+256)+7)
 15864                           
 15865                           ;Dimmer_B1.c: 42: DimmerIntr2.Tune = 0;
 15866  0323  10BE               	bcf	_DimmerIntr2^(0+256),1
 15867                           
 15868                           ;Dimmer_B1.c: 47: product->Data[22] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 15869  0324  300C               	movlw	12
 15870  0325  3194  2479  3182   	fcall	_getDimmerLights_ValueToPercent
 15871  0328  0020               	movlb	0	; select bank0
 15872  0329  00D7               	movwf	??_DimmerIntr_Initialization
 15873  032A  086D               	movf	_product,w
 15874  032B  3E16               	addlw	22
 15875  032C  0086               	movwf	6
 15876  032D  3002               	movlw	2	; select bank4/5
 15877  032E  0087               	movwf	7
 15878  032F  0857               	movf	??_DimmerIntr_Initialization,w
 15879  0330  0081               	movwf	1
 15880                           
 15881                           ;Dimmer_B1.c: 50: DimmerIntr2.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[22]);
 15882  0331  086D               	movf	_product,w
 15883  0332  3E16               	addlw	22
 15884  0333  0086               	movwf	6
 15885  0334  3002               	movlw	2	; select bank4/5
 15886  0335  0087               	movwf	7
 15887  0336  0801               	movf	1,w
 15888  0337  3197  2745  3182   	fcall	_getDimmerLights_PercentToValue
 15889  033A  0020               	movlb	0	; select bank0
 15890  033B  00D7               	movwf	??_DimmerIntr_Initialization
 15891  033C  0857               	movf	??_DimmerIntr_Initialization,w
 15892  033D  0022               	movlb	2	; select bank2
 15893  033E  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 15894                           
 15895                           ;Dimmer_B1.c: 57: DimmerIntr2.TuneValue2 = Division(((char)((100-77)*0.55)), 2);
 15896  033F  3002               	movlw	2
 15897  0340  0020               	movlb	0	; select bank0
 15898  0341  00D7               	movwf	??_DimmerIntr_Initialization
 15899  0342  0857               	movf	??_DimmerIntr_Initialization,w
 15900  0343  00F7               	movwf	Division@num
 15901  0344  300C               	movlw	12
 15902  0345  319B  23F0  3182   	fcall	_Division
 15903  0348  0020               	movlb	0	; select bank0
 15904  0349  00D8               	movwf	??_DimmerIntr_Initialization+1
 15905  034A  0858               	movf	??_DimmerIntr_Initialization+1,w
 15906  034B  0022               	movlb	2	; select bank2
 15907  034C  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 15908                           
 15909                           ;Dimmer_B1.c: 58: DimmerIntr2.TuneValue3 = DimmerIntr2.TuneValue2 + (55 - ((char)((100-7
      +                          7)*0.55)));
 15910  034D  0846               	movf	(_DimmerIntr2^(0+256)+8),w
 15911  034E  3E2B               	addlw	43
 15912  034F  0020               	movlb	0	; select bank0
 15913  0350  00D7               	movwf	??_DimmerIntr_Initialization
 15914  0351  0857               	movf	??_DimmerIntr_Initialization,w
 15915  0352  0022               	movlb	2	; select bank2
 15916  0353  00C7               	movwf	(_DimmerIntr2^(0+256)+9)
 15917                           
 15918                           ;Dimmer_B1.c: 59: DimmerIntr2.TuneValue4 = DimmerIntr2.TuneValue3 + DimmerIntr2.TuneValu
      +                          e2;
 15919  0354  0847               	movf	(_DimmerIntr2^(0+256)+9),w
 15920  0355  0746               	addwf	(_DimmerIntr2^(0+256)+8),w
 15921  0356  0020               	movlb	0	; select bank0
 15922  0357  00D7               	movwf	??_DimmerIntr_Initialization
 15923  0358  0857               	movf	??_DimmerIntr_Initialization,w
 15924  0359  0022               	movlb	2	; select bank2
 15925  035A  00C8               	movwf	(_DimmerIntr2^(0+256)+10)
 15926                           
 15927                           ;Dimmer_B1.c: 60: DimmerIntr2.TuneEnd = DimmerIntr2.TuneValue4 + 1;
 15928  035B  0848               	movf	(_DimmerIntr2^(0+256)+10),w
 15929  035C  3E01               	addlw	1
 15930  035D  0020               	movlb	0	; select bank0
 15931  035E  00D7               	movwf	??_DimmerIntr_Initialization
 15932  035F  0857               	movf	??_DimmerIntr_Initialization,w
 15933  0360  0022               	movlb	2	; select bank2
 15934  0361  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 15935                           
 15936                           ;Dimmer_B1.c: 61: DimmerIntr2.Calculate = 1;
 15937  0362  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 15938                           
 15939                           ;Dimmer_B1.c: 68: DimmerIntr3.TuneTimeValue = 7;
 15940  0363  3007               	movlw	7
 15941  0364  0020               	movlb	0	; select bank0
 15942  0365  00D7               	movwf	??_DimmerIntr_Initialization
 15943  0366  0857               	movf	??_DimmerIntr_Initialization,w
 15944  0367  0023               	movlb	3	; select bank3
 15945  0368  00A4               	movwf	(_DimmerIntr3^(0+384)+4)
 15946                           
 15947                           ;Dimmer_B1.c: 69: DimmerIntr3.MaxmumValue = ((char)((100-77)*0.55));
 15948  0369  300C               	movlw	12
 15949  036A  0020               	movlb	0	; select bank0
 15950  036B  00D7               	movwf	??_DimmerIntr_Initialization
 15951  036C  0857               	movf	??_DimmerIntr_Initialization,w
 15952  036D  0023               	movlb	3	; select bank3
 15953  036E  00A6               	movwf	(_DimmerIntr3^(0+384)+6)
 15954                           
 15955                           ;Dimmer_B1.c: 70: DimmerIntr3.MinimumValue = ((char)((100-5)*0.55));
 15956  036F  3034               	movlw	52
 15957  0370  0020               	movlb	0	; select bank0
 15958  0371  00D7               	movwf	??_DimmerIntr_Initialization
 15959  0372  0857               	movf	??_DimmerIntr_Initialization,w
 15960  0373  0023               	movlb	3	; select bank3
 15961  0374  00A7               	movwf	(_DimmerIntr3^(0+384)+7)
 15962                           
 15963                           ;Dimmer_B1.c: 72: if (myMain.InitDimmer == 1) {
 15964  0375  0021               	movlb	1	; select bank1
 15965  0376  1E49               	btfss	(_myMain^(0+128)+10),4
 15966  0377  2B86               	goto	l10086
 15967                           
 15968                           ;Dimmer_B1.c: 73: product->Data[23] = getDimmerLights_ValueToPercent(((char)((100-77)*0.
      +                          55)));
 15969  0378  300C               	movlw	12
 15970  0379  3194  2479  3182   	fcall	_getDimmerLights_ValueToPercent
 15971  037C  0020               	movlb	0	; select bank0
 15972  037D  00D7               	movwf	??_DimmerIntr_Initialization
 15973  037E  086D               	movf	_product,w
 15974  037F  3E17               	addlw	23
 15975  0380  0086               	movwf	6
 15976  0381  3002               	movlw	2	; select bank4/5
 15977  0382  0087               	movwf	7
 15978  0383  0857               	movf	??_DimmerIntr_Initialization,w
 15979  0384  0081               	movwf	1
 15980                           
 15981                           ;Dimmer_B1.c: 74: } else {
 15982  0385  2B95               	goto	l10088
 15983  0386                     l10086:	
 15984                           
 15985                           ;Dimmer_B1.c: 75: DimmerIntr3.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[23]);
 15986  0386  0020               	movlb	0	; select bank0
 15987  0387  086D               	movf	_product,w
 15988  0388  3E17               	addlw	23
 15989  0389  0086               	movwf	6
 15990  038A  3002               	movlw	2	; select bank4/5
 15991  038B  0087               	movwf	7
 15992  038C  0801               	movf	1,w
 15993  038D  3197  2745  3182   	fcall	_getDimmerLights_PercentToValue
 15994  0390  0020               	movlb	0	; select bank0
 15995  0391  00D7               	movwf	??_DimmerIntr_Initialization
 15996  0392  0857               	movf	??_DimmerIntr_Initialization,w
 15997  0393  0023               	movlb	3	; select bank3
 15998  0394  00A5               	movwf	(_DimmerIntr3^(0+384)+5)
 15999  0395                     l10088:	
 16000                           
 16001                           ;Dimmer_B1.c: 76: }
 16002                           ;Dimmer_B1.c: 83: if (myMain.InitDimmer == 1) {
 16003  0395  0021               	movlb	1	; select bank1
 16004  0396  1E49               	btfss	(_myMain^(0+128)+10),4
 16005  0397  0008               	return
 16006                           
 16007                           ;Dimmer_B1.c: 84: myMain.InitDimmer = 0;
 16008  0398  1249               	bcf	(_myMain^(0+128)+10),4
 16009                           
 16010                           ;Dimmer_B1.c: 85: myMain.SaveDimmer = 1;
 16011  0399  16C9               	bsf	(_myMain^(0+128)+10),5
 16012                           
 16013                           ;Dimmer_B1.c: 86: setMemory_Modify(1);
 16014  039A  3001               	movlw	1
 16015  039B  319C  2477         	fcall	_setMemory_Modify
 16016  039D  0008               	return
 16017  039E                     __end_of_DimmerIntr_Initialization:	
 16018                           
 16019                           	psect	text108
 16020  1C77                     __ptext108:	
 16021 ;; *************** function _setMemory_Modify *****************
 16022 ;; Defined at:
 16023 ;;		line 1087 in file "../src/MCU_B1.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;  command         1    wreg     unsigned char 
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;  command         1    3[COMMON] unsigned char 
 16028 ;; Return value:  Size  Location     Type
 16029 ;;		None               void
 16030 ;; Registers used:
 16031 ;;		wreg, status,2, status,0
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;Total ram usage:        2 bytes
 16042 ;; Hardware stack levels used:    1
 16043 ;; Hardware stack levels required when called:    3
 16044 ;; This function calls:
 16045 ;;		Nothing
 16046 ;; This function is called by:
 16047 ;;		_DimmerIntr_Initialization
 16048 ;;		_setDimmerLights_Dimming
 16049 ;;		_setLog_Code
 16050 ;;		_setRFSW_AdjControl
 16051 ;;		_DimmerLights_AssignationDimming
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           
 16056                           ;psect for function _setMemory_Modify
 16057  1C77                     _setMemory_Modify:	
 16058                           
 16059                           ;incstack = 0
 16060                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 16061                           ;setMemory_Modify@command stored from wreg
 16062  1C77  00F3               	movwf	setMemory_Modify@command
 16063                           
 16064                           ;MCU_B1.c: 1088: Memory.Modify = command == 1 ? 1 : 0;
 16065  1C78  0873               	movf	setMemory_Modify@command,w
 16066  1C79  3A01               	xorlw	1
 16067  1C7A  3000               	movlw	0
 16068  1C7B  1903               	skipnz
 16069  1C7C  3001               	movlw	1
 16070  1C7D  00F2               	movwf	??_setMemory_Modify
 16071  1C7E  0024               	movlb	4	; select bank4
 16072  1C7F  0854               	movf	(_Memory^(0+512)+36),w
 16073  1C80  0672               	xorwf	??_setMemory_Modify,w
 16074  1C81  39FE               	andlw	-2
 16075  1C82  0672               	xorwf	??_setMemory_Modify,w
 16076  1C83  00D4               	movwf	(_Memory^(0+512)+36)
 16077                           
 16078                           ;MCU_B1.c: 1089: Memory.Time = 0;
 16079  1C84  01D2               	clrf	(_Memory^(0+512)+34)
 16080  1C85  01D3               	clrf	((_Memory+1)^(0+512)+34)
 16081  1C86  0008               	return
 16082  1C87                     __end_of_setMemory_Modify:	
 16083                           
 16084                           	psect	text109
 16085  1479                     __ptext109:	
 16086 ;; *************** function _getDimmerLights_ValueToPercent *****************
 16087 ;; Defined at:
 16088 ;;		line 1257 in file "../src/Dimmer_B1.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  value           1    wreg     unsigned char 
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;  value           1   49[BANK0 ] unsigned char 
 16093 ;;  i               3   50[BANK0 ] float 
 16094 ;; Return value:  Size  Location     Type
 16095 ;;                  1    wreg      unsigned char 
 16096 ;; Registers used:
 16097 ;;		wreg, status,2, status,0, pclath, cstack
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16107 ;;Total ram usage:        4 bytes
 16108 ;; Hardware stack levels used:    1
 16109 ;; Hardware stack levels required when called:    5
 16110 ;; This function calls:
 16111 ;;		___awtoft
 16112 ;;		___ftdiv
 16113 ;;		___fttol
 16114 ;; This function is called by:
 16115 ;;		_DimmerIntr_Initialization
 16116 ;;		_setDimmerLights_Dimming
 16117 ;; This function uses a non-reentrant model
 16118 ;;
 16119                           
 16120                           
 16121                           ;psect for function _getDimmerLights_ValueToPercent
 16122  1479                     _getDimmerLights_ValueToPercent:	
 16123                           
 16124                           ;incstack = 0
 16125                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 16126                           ;getDimmerLights_ValueToPercent@value stored from wreg
 16127  1479  0020               	movlb	0	; select bank0
 16128  147A  00D1               	movwf	getDimmerLights_ValueToPercent@value
 16129                           
 16130                           ;Dimmer_B1.c: 1259: float i = ((char)((100-5)*0.55)) - ((char)((100-77)*0.55));
 16131  147B  3000               	movlw	0
 16132  147C  00D2               	movwf	getDimmerLights_ValueToPercent@i
 16133  147D  3020               	movlw	32
 16134  147E  00D3               	movwf	getDimmerLights_ValueToPercent@i+1
 16135  147F  3042               	movlw	66
 16136  1480  00D4               	movwf	getDimmerLights_ValueToPercent@i+2
 16137                           
 16138                           ;Dimmer_B1.c: 1260: i /= 100;
 16139  1481  3000               	movlw	0
 16140  1482  00A6               	movwf	___ftdiv@f2
 16141  1483  30C8               	movlw	200
 16142  1484  00A7               	movwf	___ftdiv@f2+1
 16143  1485  3042               	movlw	66
 16144  1486  00A8               	movwf	___ftdiv@f2+2
 16145  1487  0852               	movf	getDimmerLights_ValueToPercent@i,w
 16146  1488  00A9               	movwf	___ftdiv@f1
 16147  1489  0853               	movf	getDimmerLights_ValueToPercent@i+1,w
 16148  148A  00AA               	movwf	___ftdiv@f1+1
 16149  148B  0854               	movf	getDimmerLights_ValueToPercent@i+2,w
 16150  148C  00AB               	movwf	___ftdiv@f1+2
 16151  148D  318E  26A5  3194   	fcall	___ftdiv
 16152  1490  0020               	movlb	0	; select bank0
 16153  1491  0826               	movf	?___ftdiv,w
 16154  1492  00D2               	movwf	getDimmerLights_ValueToPercent@i
 16155  1493  0827               	movf	?___ftdiv+1,w
 16156  1494  00D3               	movwf	getDimmerLights_ValueToPercent@i+1
 16157  1495  0828               	movf	?___ftdiv+2,w
 16158  1496  00D4               	movwf	getDimmerLights_ValueToPercent@i+2
 16159                           
 16160                           ;Dimmer_B1.c: 1261: return (100 - (char) ((value - ((char)((100-77)*0.55))) / i));
 16161  1497  0851               	movf	getDimmerLights_ValueToPercent@value,w
 16162  1498  3EF4               	addlw	244
 16163  1499  00A0               	movwf	___awtoft@c
 16164  149A  30FF               	movlw	255
 16165  149B  1803               	skipnc
 16166  149C  3000               	movlw	0
 16167  149D  00A1               	movwf	___awtoft@c+1
 16168  149E  319F  27DE  3194   	fcall	___awtoft
 16169  14A1  0020               	movlb	0	; select bank0
 16170  14A2  0820               	movf	?___awtoft,w
 16171  14A3  00A9               	movwf	___ftdiv@f1
 16172  14A4  0821               	movf	?___awtoft+1,w
 16173  14A5  00AA               	movwf	___ftdiv@f1+1
 16174  14A6  0822               	movf	?___awtoft+2,w
 16175  14A7  00AB               	movwf	___ftdiv@f1+2
 16176  14A8  0852               	movf	getDimmerLights_ValueToPercent@i,w
 16177  14A9  00A6               	movwf	___ftdiv@f2
 16178  14AA  0853               	movf	getDimmerLights_ValueToPercent@i+1,w
 16179  14AB  00A7               	movwf	___ftdiv@f2+1
 16180  14AC  0854               	movf	getDimmerLights_ValueToPercent@i+2,w
 16181  14AD  00A8               	movwf	___ftdiv@f2+2
 16182  14AE  318E  26A5  3194   	fcall	___ftdiv
 16183  14B1  0020               	movlb	0	; select bank0
 16184  14B2  0826               	movf	?___ftdiv,w
 16185  14B3  00C3               	movwf	___fttol@f1
 16186  14B4  0827               	movf	?___ftdiv+1,w
 16187  14B5  00C4               	movwf	___fttol@f1+1
 16188  14B6  0828               	movf	?___ftdiv+2,w
 16189  14B7  00C5               	movwf	___fttol@f1+2
 16190  14B8  318C  2466         	fcall	___fttol
 16191  14BA  0020               	movlb	0	; select bank0
 16192  14BB  0343               	decf	?___fttol,w
 16193  14BC  3AFF               	xorlw	255
 16194  14BD  3E64               	addlw	100
 16195  14BE  0008               	return
 16196  14BF                     __end_of_getDimmerLights_ValueToPercent:	
 16197                           
 16198                           	psect	text110
 16199  1745                     __ptext110:	
 16200 ;; *************** function _getDimmerLights_PercentToValue *****************
 16201 ;; Defined at:
 16202 ;;		line 1241 in file "../src/Dimmer_B1.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;  value           1    wreg     unsigned char 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  value           1   51[BANK0 ] unsigned char 
 16207 ;;  i               3   52[BANK0 ] float 
 16208 ;; Return value:  Size  Location     Type
 16209 ;;                  1    wreg      unsigned char 
 16210 ;; Registers used:
 16211 ;;		wreg, status,2, status,0, pclath, cstack
 16212 ;; Tracked objects:
 16213 ;;		On entry : 0/0
 16214 ;;		On exit  : 0/0
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;Total ram usage:        6 bytes
 16222 ;; Hardware stack levels used:    1
 16223 ;; Hardware stack levels required when called:    5
 16224 ;; This function calls:
 16225 ;;		___awtoft
 16226 ;;		___ftadd
 16227 ;;		___ftdiv
 16228 ;;		___ftmul
 16229 ;;		___fttol
 16230 ;; This function is called by:
 16231 ;;		_DimmerIntr_Initialization
 16232 ;;		_setDimmerLights_OnOff
 16233 ;;		_setRFSW_AdjControl
 16234 ;;		_DimmerLights_AssignationDimming
 16235 ;; This function uses a non-reentrant model
 16236 ;;
 16237                           
 16238                           
 16239                           ;psect for function _getDimmerLights_PercentToValue
 16240  1745                     _getDimmerLights_PercentToValue:	
 16241                           
 16242                           ;incstack = 0
 16243                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 16244                           ;getDimmerLights_PercentToValue@value stored from wreg
 16245  1745  0020               	movlb	0	; select bank0
 16246  1746  00D3               	movwf	getDimmerLights_PercentToValue@value
 16247                           
 16248                           ;Dimmer_B1.c: 1243: float i = ((char)((100-5)*0.55)) - ((char)((100-77)*0.55));
 16249  1747  3000               	movlw	0
 16250  1748  00D4               	movwf	getDimmerLights_PercentToValue@i
 16251  1749  3020               	movlw	32
 16252  174A  00D5               	movwf	getDimmerLights_PercentToValue@i+1
 16253  174B  3042               	movlw	66
 16254  174C  00D6               	movwf	getDimmerLights_PercentToValue@i+2
 16255                           
 16256                           ;Dimmer_B1.c: 1244: i /= 100;
 16257  174D  3000               	movlw	0
 16258  174E  00A6               	movwf	___ftdiv@f2
 16259  174F  30C8               	movlw	200
 16260  1750  00A7               	movwf	___ftdiv@f2+1
 16261  1751  3042               	movlw	66
 16262  1752  00A8               	movwf	___ftdiv@f2+2
 16263  1753  0854               	movf	getDimmerLights_PercentToValue@i,w
 16264  1754  00A9               	movwf	___ftdiv@f1
 16265  1755  0855               	movf	getDimmerLights_PercentToValue@i+1,w
 16266  1756  00AA               	movwf	___ftdiv@f1+1
 16267  1757  0856               	movf	getDimmerLights_PercentToValue@i+2,w
 16268  1758  00AB               	movwf	___ftdiv@f1+2
 16269  1759  318E  26A5  3197   	fcall	___ftdiv
 16270  175C  0020               	movlb	0	; select bank0
 16271  175D  0826               	movf	?___ftdiv,w
 16272  175E  00D4               	movwf	getDimmerLights_PercentToValue@i
 16273  175F  0827               	movf	?___ftdiv+1,w
 16274  1760  00D5               	movwf	getDimmerLights_PercentToValue@i+1
 16275  1761  0828               	movf	?___ftdiv+2,w
 16276  1762  00D6               	movwf	getDimmerLights_PercentToValue@i+2
 16277                           
 16278                           ;Dimmer_B1.c: 1245: return (char) (((100 - value) * i) + ((char)((100-77)*0.55)));
 16279  1763  0853               	movf	getDimmerLights_PercentToValue@value,w
 16280  1764  00D1               	movwf	??_getDimmerLights_PercentToValue
 16281  1765  01D2               	clrf	??_getDimmerLights_PercentToValue+1
 16282  1766  09D1               	comf	??_getDimmerLights_PercentToValue,f
 16283  1767  09D2               	comf	??_getDimmerLights_PercentToValue+1,f
 16284  1768  0AD1               	incf	??_getDimmerLights_PercentToValue,f
 16285  1769  1903               	skipnz
 16286  176A  0AD2               	incf	??_getDimmerLights_PercentToValue+1,f
 16287  176B  0851               	movf	??_getDimmerLights_PercentToValue,w
 16288  176C  3E64               	addlw	100
 16289  176D  00A0               	movwf	___awtoft@c
 16290  176E  3000               	movlw	0
 16291  176F  3D52               	addwfc	??_getDimmerLights_PercentToValue+1,w
 16292  1770  00A1               	movwf	___awtoft@c+1
 16293  1771  319F  27DE  3197   	fcall	___awtoft
 16294  1774  0020               	movlb	0	; select bank0
 16295  1775  0820               	movf	?___awtoft,w
 16296  1776  00A9               	movwf	___ftmul@f2
 16297  1777  0821               	movf	?___awtoft+1,w
 16298  1778  00AA               	movwf	___ftmul@f2+1
 16299  1779  0822               	movf	?___awtoft+2,w
 16300  177A  00AB               	movwf	___ftmul@f2+2
 16301  177B  0854               	movf	getDimmerLights_PercentToValue@i,w
 16302  177C  00A6               	movwf	___ftmul@f1
 16303  177D  0855               	movf	getDimmerLights_PercentToValue@i+1,w
 16304  177E  00A7               	movwf	___ftmul@f1+1
 16305  177F  0856               	movf	getDimmerLights_PercentToValue@i+2,w
 16306  1780  00A8               	movwf	___ftmul@f1+2
 16307  1781  3186  26B1  3197   	fcall	___ftmul
 16308  1784  0020               	movlb	0	; select bank0
 16309  1785  0826               	movf	?___ftmul,w
 16310  1786  00B9               	movwf	___ftadd@f2
 16311  1787  0827               	movf	?___ftmul+1,w
 16312  1788  00BA               	movwf	___ftadd@f2+1
 16313  1789  0828               	movf	?___ftmul+2,w
 16314  178A  00BB               	movwf	___ftadd@f2+2
 16315  178B  3000               	movlw	0
 16316  178C  00B6               	movwf	___ftadd@f1
 16317  178D  3040               	movlw	64
 16318  178E  00B7               	movwf	___ftadd@f1+1
 16319  178F  3041               	movlw	65
 16320  1790  00B8               	movwf	___ftadd@f1+2
 16321  1791  3181  21C9  3197   	fcall	___ftadd
 16322  1794  0020               	movlb	0	; select bank0
 16323  1795  0836               	movf	?___ftadd,w
 16324  1796  00C3               	movwf	___fttol@f1
 16325  1797  0837               	movf	?___ftadd+1,w
 16326  1798  00C4               	movwf	___fttol@f1+1
 16327  1799  0838               	movf	?___ftadd+2,w
 16328  179A  00C5               	movwf	___fttol@f1+2
 16329  179B  318C  2466         	fcall	___fttol
 16330  179D  0020               	movlb	0	; select bank0
 16331  179E  0843               	movf	?___fttol,w
 16332  179F  0008               	return
 16333  17A0                     __end_of_getDimmerLights_PercentToValue:	
 16334                           
 16335                           	psect	text111
 16336  0C66                     __ptext111:	
 16337 ;; *************** function ___fttol *****************
 16338 ;; Defined at:
 16339 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  f1              3   35[BANK0 ] float 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  lval            4   44[BANK0 ] unsigned long 
 16344 ;;  exp1            1   48[BANK0 ] unsigned char 
 16345 ;;  sign1           1   43[BANK0 ] unsigned char 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  4   35[BANK0 ] long 
 16348 ;; Registers used:
 16349 ;;		wreg, status,2, status,0
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16357 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16359 ;;Total ram usage:       14 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:    3
 16362 ;; This function calls:
 16363 ;;		Nothing
 16364 ;; This function is called by:
 16365 ;;		_getDimmerLights_PercentToValue
 16366 ;;		_getDimmerLights_ValueToPercent
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           
 16371                           ;psect for function ___fttol
 16372  0C66                     ___fttol:	
 16373                           
 16374                           ;incstack = 0
 16375                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 16376  0C66  0020               	movlb	0	; select bank0
 16377  0C67  0843               	movf	___fttol@f1,w
 16378  0C68  00C7               	movwf	??___fttol
 16379  0C69  0844               	movf	___fttol@f1+1,w
 16380  0C6A  00C8               	movwf	??___fttol+1
 16381  0C6B  0845               	movf	___fttol@f1+2,w
 16382  0C6C  00C9               	movwf	??___fttol+2
 16383  0C6D  1003               	clrc
 16384  0C6E  0D48               	rlf	??___fttol+1,w
 16385  0C6F  0D49               	rlf	??___fttol+2,w
 16386  0C70  00CA               	movwf	??___fttol+3
 16387  0C71  084A               	movf	??___fttol+3,w
 16388  0C72  00D0               	movwf	___fttol@exp1
 16389  0C73  08D0               	movf	___fttol@exp1,f
 16390  0C74  1D03               	skipz
 16391  0C75  2C7F               	goto	l6766
 16392  0C76  3000               	movlw	0
 16393  0C77  00C6               	movwf	?___fttol+3
 16394  0C78  3000               	movlw	0
 16395  0C79  00C5               	movwf	?___fttol+2
 16396  0C7A  3000               	movlw	0
 16397  0C7B  00C4               	movwf	?___fttol+1
 16398  0C7C  3000               	movlw	0
 16399  0C7D  00C3               	movwf	?___fttol
 16400  0C7E  0008               	return
 16401  0C7F                     l6766:	
 16402  0C7F  0843               	movf	___fttol@f1,w
 16403  0C80  00C7               	movwf	??___fttol
 16404  0C81  0844               	movf	___fttol@f1+1,w
 16405  0C82  00C8               	movwf	??___fttol+1
 16406  0C83  0845               	movf	___fttol@f1+2,w
 16407  0C84  00C9               	movwf	??___fttol+2
 16408  0C85  3017               	movlw	23
 16409  0C86                     u5705:	
 16410  0C86  36C9               	lsrf	??___fttol+2,f
 16411  0C87  0CC8               	rrf	??___fttol+1,f
 16412  0C88  0CC7               	rrf	??___fttol,f
 16413  0C89  0B89               	decfsz	9,f
 16414  0C8A  2C86               	goto	u5705
 16415  0C8B  0847               	movf	??___fttol,w
 16416  0C8C  00CA               	movwf	??___fttol+3
 16417  0C8D  084A               	movf	??___fttol+3,w
 16418  0C8E  00CB               	movwf	___fttol@sign1
 16419  0C8F  17C4               	bsf	___fttol@f1+1,7
 16420  0C90  30FF               	movlw	255
 16421  0C91  05C3               	andwf	___fttol@f1,f
 16422  0C92  30FF               	movlw	255
 16423  0C93  05C4               	andwf	___fttol@f1+1,f
 16424  0C94  3000               	movlw	0
 16425  0C95  05C5               	andwf	___fttol@f1+2,f
 16426  0C96  0843               	movf	___fttol@f1,w
 16427  0C97  00CC               	movwf	___fttol@lval
 16428  0C98  0844               	movf	___fttol@f1+1,w
 16429  0C99  00CD               	movwf	___fttol@lval+1
 16430  0C9A  0845               	movf	___fttol@f1+2,w
 16431  0C9B  00CE               	movwf	___fttol@lval+2
 16432  0C9C  01CF               	clrf	___fttol@lval+3
 16433  0C9D  308E               	movlw	142
 16434  0C9E  02D0               	subwf	___fttol@exp1,f
 16435  0C9F  1FD0               	btfss	___fttol@exp1,7
 16436  0CA0  2CBD               	goto	l6786
 16437  0CA1  0850               	movf	___fttol@exp1,w
 16438  0CA2  3A80               	xorlw	128
 16439  0CA3  3E8F               	addlw	143
 16440  0CA4  1803               	skipnc
 16441  0CA5  2CAF               	goto	l6784
 16442  0CA6  3000               	movlw	0
 16443  0CA7  00C6               	movwf	?___fttol+3
 16444  0CA8  3000               	movlw	0
 16445  0CA9  00C5               	movwf	?___fttol+2
 16446  0CAA  3000               	movlw	0
 16447  0CAB  00C4               	movwf	?___fttol+1
 16448  0CAC  3000               	movlw	0
 16449  0CAD  00C3               	movwf	?___fttol
 16450  0CAE  0008               	return
 16451  0CAF                     l6784:	
 16452  0CAF  3001               	movlw	1
 16453  0CB0                     u5735:	
 16454  0CB0  36CF               	lsrf	___fttol@lval+3,f
 16455  0CB1  0CCE               	rrf	___fttol@lval+2,f
 16456  0CB2  0CCD               	rrf	___fttol@lval+1,f
 16457  0CB3  0CCC               	rrf	___fttol@lval,f
 16458  0CB4  0B89               	decfsz	9,f
 16459  0CB5  2CB0               	goto	u5735
 16460  0CB6  3001               	movlw	1
 16461  0CB7  00C7               	movwf	??___fttol
 16462  0CB8  0847               	movf	??___fttol,w
 16463  0CB9  07D0               	addwf	___fttol@exp1,f
 16464  0CBA  1903               	btfsc	3,2
 16465  0CBB  2CD6               	goto	l6796
 16466  0CBC  2CAF               	goto	l6784
 16467  0CBD                     l6786:	
 16468  0CBD  3018               	movlw	24
 16469  0CBE  0250               	subwf	___fttol@exp1,w
 16470  0CBF  1C03               	skipc
 16471  0CC0  2CD3               	goto	l6794
 16472  0CC1  3000               	movlw	0
 16473  0CC2  00C6               	movwf	?___fttol+3
 16474  0CC3  3000               	movlw	0
 16475  0CC4  00C5               	movwf	?___fttol+2
 16476  0CC5  3000               	movlw	0
 16477  0CC6  00C4               	movwf	?___fttol+1
 16478  0CC7  3000               	movlw	0
 16479  0CC8  00C3               	movwf	?___fttol
 16480  0CC9  0008               	return
 16481  0CCA                     l6792:	
 16482  0CCA  3001               	movlw	1
 16483  0CCB                     u5765:	
 16484  0CCB  35CC               	lslf	___fttol@lval,f
 16485  0CCC  0DCD               	rlf	___fttol@lval+1,f
 16486  0CCD  0DCE               	rlf	___fttol@lval+2,f
 16487  0CCE  0DCF               	rlf	___fttol@lval+3,f
 16488  0CCF  0B89               	decfsz	9,f
 16489  0CD0  2CCB               	goto	u5765
 16490  0CD1  3001               	movlw	1
 16491  0CD2  02D0               	subwf	___fttol@exp1,f
 16492  0CD3                     l6794:	
 16493  0CD3  08D0               	movf	___fttol@exp1,f
 16494  0CD4  1D03               	skipz
 16495  0CD5  2CCA               	goto	l6792
 16496  0CD6                     l6796:	
 16497  0CD6  084B               	movf	___fttol@sign1,w
 16498  0CD7  1903               	btfsc	3,2
 16499  0CD8  2CE4               	goto	l6800
 16500  0CD9  09CC               	comf	___fttol@lval,f
 16501  0CDA  09CD               	comf	___fttol@lval+1,f
 16502  0CDB  09CE               	comf	___fttol@lval+2,f
 16503  0CDC  09CF               	comf	___fttol@lval+3,f
 16504  0CDD  0ACC               	incf	___fttol@lval,f
 16505  0CDE  1903               	skipnz
 16506  0CDF  0ACD               	incf	___fttol@lval+1,f
 16507  0CE0  1903               	skipnz
 16508  0CE1  0ACE               	incf	___fttol@lval+2,f
 16509  0CE2  1903               	skipnz
 16510  0CE3  0ACF               	incf	___fttol@lval+3,f
 16511  0CE4                     l6800:	
 16512  0CE4  084F               	movf	___fttol@lval+3,w
 16513  0CE5  00C6               	movwf	?___fttol+3
 16514  0CE6  084E               	movf	___fttol@lval+2,w
 16515  0CE7  00C5               	movwf	?___fttol+2
 16516  0CE8  084D               	movf	___fttol@lval+1,w
 16517  0CE9  00C4               	movwf	?___fttol+1
 16518  0CEA  084C               	movf	___fttol@lval,w
 16519  0CEB  00C3               	movwf	?___fttol
 16520  0CEC  0008               	return
 16521  0CED                     __end_of___fttol:	
 16522                           
 16523                           	psect	text112
 16524  06B1                     __ptext112:	
 16525 ;; *************** function ___ftmul *****************
 16526 ;; Defined at:
 16527 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 16528 ;; Parameters:    Size  Location     Type
 16529 ;;  f1              3    6[BANK0 ] float 
 16530 ;;  f2              3    9[BANK0 ] float 
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;  f3_as_produc    3   17[BANK0 ] unsigned um
 16533 ;;  sign            1   21[BANK0 ] unsigned char 
 16534 ;;  cntr            1   20[BANK0 ] unsigned char 
 16535 ;;  exp             1   16[BANK0 ] unsigned char 
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  3    6[BANK0 ] float 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0, pclath, cstack
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16545 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16546 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16548 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16549 ;;Total ram usage:       16 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; Hardware stack levels required when called:    4
 16552 ;; This function calls:
 16553 ;;		___ftpack
 16554 ;; This function is called by:
 16555 ;;		_getDimmerLights_PercentToValue
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           
 16560                           ;psect for function ___ftmul
 16561  06B1                     ___ftmul:	
 16562                           
 16563                           ;incstack = 0
 16564                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 16565  06B1  0020               	movlb	0	; select bank0
 16566  06B2  0826               	movf	___ftmul@f1,w
 16567  06B3  00AC               	movwf	??___ftmul
 16568  06B4  0827               	movf	___ftmul@f1+1,w
 16569  06B5  00AD               	movwf	??___ftmul+1
 16570  06B6  0828               	movf	___ftmul@f1+2,w
 16571  06B7  00AE               	movwf	??___ftmul+2
 16572  06B8  1003               	clrc
 16573  06B9  0D2D               	rlf	??___ftmul+1,w
 16574  06BA  0D2E               	rlf	??___ftmul+2,w
 16575  06BB  00AF               	movwf	??___ftmul+3
 16576  06BC  082F               	movf	??___ftmul+3,w
 16577  06BD  00B0               	movwf	___ftmul@exp
 16578  06BE  08B0               	movf	___ftmul@exp,f
 16579  06BF  1D03               	skipz
 16580  06C0  2EC8               	goto	l6716
 16581  06C1  3000               	movlw	0
 16582  06C2  00A6               	movwf	?___ftmul
 16583  06C3  3000               	movlw	0
 16584  06C4  00A7               	movwf	?___ftmul+1
 16585  06C5  3000               	movlw	0
 16586  06C6  00A8               	movwf	?___ftmul+2
 16587  06C7  0008               	return
 16588  06C8                     l6716:	
 16589  06C8  0829               	movf	___ftmul@f2,w
 16590  06C9  00AC               	movwf	??___ftmul
 16591  06CA  082A               	movf	___ftmul@f2+1,w
 16592  06CB  00AD               	movwf	??___ftmul+1
 16593  06CC  082B               	movf	___ftmul@f2+2,w
 16594  06CD  00AE               	movwf	??___ftmul+2
 16595  06CE  1003               	clrc
 16596  06CF  0D2D               	rlf	??___ftmul+1,w
 16597  06D0  0D2E               	rlf	??___ftmul+2,w
 16598  06D1  00AF               	movwf	??___ftmul+3
 16599  06D2  082F               	movf	??___ftmul+3,w
 16600  06D3  00B5               	movwf	___ftmul@sign
 16601  06D4  08B5               	movf	___ftmul@sign,f
 16602  06D5  1D03               	skipz
 16603  06D6  2EDE               	goto	l6722
 16604  06D7  3000               	movlw	0
 16605  06D8  00A6               	movwf	?___ftmul
 16606  06D9  3000               	movlw	0
 16607  06DA  00A7               	movwf	?___ftmul+1
 16608  06DB  3000               	movlw	0
 16609  06DC  00A8               	movwf	?___ftmul+2
 16610  06DD  0008               	return
 16611  06DE                     l6722:	
 16612  06DE  0835               	movf	___ftmul@sign,w
 16613  06DF  3E7B               	addlw	123
 16614  06E0  00AC               	movwf	??___ftmul
 16615  06E1  082C               	movf	??___ftmul,w
 16616  06E2  07B0               	addwf	___ftmul@exp,f
 16617  06E3  0826               	movf	___ftmul@f1,w
 16618  06E4  00AC               	movwf	??___ftmul
 16619  06E5  0827               	movf	___ftmul@f1+1,w
 16620  06E6  00AD               	movwf	??___ftmul+1
 16621  06E7  0828               	movf	___ftmul@f1+2,w
 16622  06E8  00AE               	movwf	??___ftmul+2
 16623  06E9  3010               	movlw	16
 16624  06EA                     u5595:	
 16625  06EA  36AE               	lsrf	??___ftmul+2,f
 16626  06EB  0CAD               	rrf	??___ftmul+1,f
 16627  06EC  0CAC               	rrf	??___ftmul,f
 16628  06ED  0B89               	decfsz	9,f
 16629  06EE  2EEA               	goto	u5595
 16630  06EF  082C               	movf	??___ftmul,w
 16631  06F0  00AF               	movwf	??___ftmul+3
 16632  06F1  082F               	movf	??___ftmul+3,w
 16633  06F2  00B5               	movwf	___ftmul@sign
 16634  06F3  0829               	movf	___ftmul@f2,w
 16635  06F4  00AC               	movwf	??___ftmul
 16636  06F5  082A               	movf	___ftmul@f2+1,w
 16637  06F6  00AD               	movwf	??___ftmul+1
 16638  06F7  082B               	movf	___ftmul@f2+2,w
 16639  06F8  00AE               	movwf	??___ftmul+2
 16640  06F9  3010               	movlw	16
 16641  06FA                     u5605:	
 16642  06FA  36AE               	lsrf	??___ftmul+2,f
 16643  06FB  0CAD               	rrf	??___ftmul+1,f
 16644  06FC  0CAC               	rrf	??___ftmul,f
 16645  06FD  0B89               	decfsz	9,f
 16646  06FE  2EFA               	goto	u5605
 16647  06FF  082C               	movf	??___ftmul,w
 16648  0700  00AF               	movwf	??___ftmul+3
 16649  0701  082F               	movf	??___ftmul+3,w
 16650  0702  06B5               	xorwf	___ftmul@sign,f
 16651  0703  3080               	movlw	128
 16652  0704  00AC               	movwf	??___ftmul
 16653  0705  082C               	movf	??___ftmul,w
 16654  0706  05B5               	andwf	___ftmul@sign,f
 16655  0707  17A7               	bsf	___ftmul@f1+1,7
 16656  0708  17AA               	bsf	___ftmul@f2+1,7
 16657  0709  30FF               	movlw	255
 16658  070A  05A9               	andwf	___ftmul@f2,f
 16659  070B  30FF               	movlw	255
 16660  070C  05AA               	andwf	___ftmul@f2+1,f
 16661  070D  3000               	movlw	0
 16662  070E  05AB               	andwf	___ftmul@f2+2,f
 16663  070F  3000               	movlw	0
 16664  0710  00B1               	movwf	___ftmul@f3_as_product
 16665  0711  3000               	movlw	0
 16666  0712  00B2               	movwf	___ftmul@f3_as_product+1
 16667  0713  3000               	movlw	0
 16668  0714  00B3               	movwf	___ftmul@f3_as_product+2
 16669  0715  3007               	movlw	7
 16670  0716  00AC               	movwf	??___ftmul
 16671  0717  082C               	movf	??___ftmul,w
 16672  0718  00B4               	movwf	___ftmul@cntr
 16673  0719                     l6734:	
 16674  0719  1C26               	btfss	___ftmul@f1,0
 16675  071A  2F21               	goto	l6738
 16676  071B  0829               	movf	___ftmul@f2,w
 16677  071C  07B1               	addwf	___ftmul@f3_as_product,f
 16678  071D  082A               	movf	___ftmul@f2+1,w
 16679  071E  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 16680  071F  082B               	movf	___ftmul@f2+2,w
 16681  0720  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 16682  0721                     l6738:	
 16683  0721  3001               	movlw	1
 16684  0722                     u5625:	
 16685  0722  36A8               	lsrf	___ftmul@f1+2,f
 16686  0723  0CA7               	rrf	___ftmul@f1+1,f
 16687  0724  0CA6               	rrf	___ftmul@f1,f
 16688  0725  0B89               	decfsz	9,f
 16689  0726  2F22               	goto	u5625
 16690  0727  3001               	movlw	1
 16691  0728                     u5635:	
 16692  0728  35A9               	lslf	___ftmul@f2,f
 16693  0729  0DAA               	rlf	___ftmul@f2+1,f
 16694  072A  0DAB               	rlf	___ftmul@f2+2,f
 16695  072B  0B89               	decfsz	9,f
 16696  072C  2F28               	goto	u5635
 16697  072D  3001               	movlw	1
 16698  072E  02B4               	subwf	___ftmul@cntr,f
 16699  072F  1D03               	btfss	3,2
 16700  0730  2F19               	goto	l6734
 16701  0731  3009               	movlw	9
 16702  0732  00AC               	movwf	??___ftmul
 16703  0733  082C               	movf	??___ftmul,w
 16704  0734  00B4               	movwf	___ftmul@cntr
 16705  0735                     l6746:	
 16706  0735  1C26               	btfss	___ftmul@f1,0
 16707  0736  2F3D               	goto	l6750
 16708  0737  0829               	movf	___ftmul@f2,w
 16709  0738  07B1               	addwf	___ftmul@f3_as_product,f
 16710  0739  082A               	movf	___ftmul@f2+1,w
 16711  073A  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 16712  073B  082B               	movf	___ftmul@f2+2,w
 16713  073C  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 16714  073D                     l6750:	
 16715  073D  3001               	movlw	1
 16716  073E                     u5665:	
 16717  073E  36A8               	lsrf	___ftmul@f1+2,f
 16718  073F  0CA7               	rrf	___ftmul@f1+1,f
 16719  0740  0CA6               	rrf	___ftmul@f1,f
 16720  0741  0B89               	decfsz	9,f
 16721  0742  2F3E               	goto	u5665
 16722  0743  3001               	movlw	1
 16723  0744                     u5675:	
 16724  0744  36B3               	lsrf	___ftmul@f3_as_product+2,f
 16725  0745  0CB2               	rrf	___ftmul@f3_as_product+1,f
 16726  0746  0CB1               	rrf	___ftmul@f3_as_product,f
 16727  0747  0B89               	decfsz	9,f
 16728  0748  2F44               	goto	u5675
 16729  0749  3001               	movlw	1
 16730  074A  02B4               	subwf	___ftmul@cntr,f
 16731  074B  1D03               	btfss	3,2
 16732  074C  2F35               	goto	l6746
 16733  074D  0831               	movf	___ftmul@f3_as_product,w
 16734  074E  00F2               	movwf	___ftpack@arg
 16735  074F  0832               	movf	___ftmul@f3_as_product+1,w
 16736  0750  00F3               	movwf	___ftpack@arg+1
 16737  0751  0833               	movf	___ftmul@f3_as_product+2,w
 16738  0752  00F4               	movwf	___ftpack@arg+2
 16739  0753  0830               	movf	___ftmul@exp,w
 16740  0754  00AC               	movwf	??___ftmul
 16741  0755  082C               	movf	??___ftmul,w
 16742  0756  00F5               	movwf	___ftpack@exp
 16743  0757  0835               	movf	___ftmul@sign,w
 16744  0758  00AD               	movwf	??___ftmul+1
 16745  0759  082D               	movf	??___ftmul+1,w
 16746  075A  00F6               	movwf	___ftpack@sign
 16747  075B  3197  27A0         	fcall	___ftpack
 16748  075D  0872               	movf	?___ftpack,w
 16749  075E  0020               	movlb	0	; select bank0
 16750  075F  00A6               	movwf	?___ftmul
 16751  0760  0873               	movf	?___ftpack+1,w
 16752  0761  00A7               	movwf	?___ftmul+1
 16753  0762  0874               	movf	?___ftpack+2,w
 16754  0763  00A8               	movwf	?___ftmul+2
 16755  0764  0008               	return
 16756  0765                     __end_of___ftmul:	
 16757                           
 16758                           	psect	text113
 16759  0EA5                     __ptext113:	
 16760 ;; *************** function ___ftdiv *****************
 16761 ;; Defined at:
 16762 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;  f2              3    6[BANK0 ] float 
 16765 ;;  f1              3    9[BANK0 ] float 
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;  f3              3   17[BANK0 ] float 
 16768 ;;  sign            1   21[BANK0 ] unsigned char 
 16769 ;;  exp             1   20[BANK0 ] unsigned char 
 16770 ;;  cntr            1   16[BANK0 ] unsigned char 
 16771 ;; Return value:  Size  Location     Type
 16772 ;;                  3    6[BANK0 ] float 
 16773 ;; Registers used:
 16774 ;;		wreg, status,2, status,0, pclath, cstack
 16775 ;; Tracked objects:
 16776 ;;		On entry : 0/0
 16777 ;;		On exit  : 0/0
 16778 ;;		Unchanged: 0/0
 16779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16783 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16784 ;;Total ram usage:       16 bytes
 16785 ;; Hardware stack levels used:    1
 16786 ;; Hardware stack levels required when called:    4
 16787 ;; This function calls:
 16788 ;;		___ftpack
 16789 ;; This function is called by:
 16790 ;;		_getDimmerLights_PercentToValue
 16791 ;;		_getDimmerLights_ValueToPercent
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           
 16796                           ;psect for function ___ftdiv
 16797  0EA5                     ___ftdiv:	
 16798                           
 16799                           ;incstack = 0
 16800                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 16801  0EA5  0020               	movlb	0	; select bank0
 16802  0EA6  0829               	movf	___ftdiv@f1,w
 16803  0EA7  00AC               	movwf	??___ftdiv
 16804  0EA8  082A               	movf	___ftdiv@f1+1,w
 16805  0EA9  00AD               	movwf	??___ftdiv+1
 16806  0EAA  082B               	movf	___ftdiv@f1+2,w
 16807  0EAB  00AE               	movwf	??___ftdiv+2
 16808  0EAC  1003               	clrc
 16809  0EAD  0D2D               	rlf	??___ftdiv+1,w
 16810  0EAE  0D2E               	rlf	??___ftdiv+2,w
 16811  0EAF  00AF               	movwf	??___ftdiv+3
 16812  0EB0  082F               	movf	??___ftdiv+3,w
 16813  0EB1  00B4               	movwf	___ftdiv@exp
 16814  0EB2  08B4               	movf	___ftdiv@exp,f
 16815  0EB3  1D03               	skipz
 16816  0EB4  2EBC               	goto	l6674
 16817  0EB5  3000               	movlw	0
 16818  0EB6  00A6               	movwf	?___ftdiv
 16819  0EB7  3000               	movlw	0
 16820  0EB8  00A7               	movwf	?___ftdiv+1
 16821  0EB9  3000               	movlw	0
 16822  0EBA  00A8               	movwf	?___ftdiv+2
 16823  0EBB  0008               	return
 16824  0EBC                     l6674:	
 16825  0EBC  0826               	movf	___ftdiv@f2,w
 16826  0EBD  00AC               	movwf	??___ftdiv
 16827  0EBE  0827               	movf	___ftdiv@f2+1,w
 16828  0EBF  00AD               	movwf	??___ftdiv+1
 16829  0EC0  0828               	movf	___ftdiv@f2+2,w
 16830  0EC1  00AE               	movwf	??___ftdiv+2
 16831  0EC2  1003               	clrc
 16832  0EC3  0D2D               	rlf	??___ftdiv+1,w
 16833  0EC4  0D2E               	rlf	??___ftdiv+2,w
 16834  0EC5  00AF               	movwf	??___ftdiv+3
 16835  0EC6  082F               	movf	??___ftdiv+3,w
 16836  0EC7  00B5               	movwf	___ftdiv@sign
 16837  0EC8  08B5               	movf	___ftdiv@sign,f
 16838  0EC9  1D03               	skipz
 16839  0ECA  2ED2               	goto	l6680
 16840  0ECB  3000               	movlw	0
 16841  0ECC  00A6               	movwf	?___ftdiv
 16842  0ECD  3000               	movlw	0
 16843  0ECE  00A7               	movwf	?___ftdiv+1
 16844  0ECF  3000               	movlw	0
 16845  0ED0  00A8               	movwf	?___ftdiv+2
 16846  0ED1  0008               	return
 16847  0ED2                     l6680:	
 16848  0ED2  3000               	movlw	0
 16849  0ED3  00B1               	movwf	___ftdiv@f3
 16850  0ED4  3000               	movlw	0
 16851  0ED5  00B2               	movwf	___ftdiv@f3+1
 16852  0ED6  3000               	movlw	0
 16853  0ED7  00B3               	movwf	___ftdiv@f3+2
 16854  0ED8  3089               	movlw	137
 16855  0ED9  0735               	addwf	___ftdiv@sign,w
 16856  0EDA  00AC               	movwf	??___ftdiv
 16857  0EDB  082C               	movf	??___ftdiv,w
 16858  0EDC  02B4               	subwf	___ftdiv@exp,f
 16859  0EDD  0829               	movf	___ftdiv@f1,w
 16860  0EDE  00AC               	movwf	??___ftdiv
 16861  0EDF  082A               	movf	___ftdiv@f1+1,w
 16862  0EE0  00AD               	movwf	??___ftdiv+1
 16863  0EE1  082B               	movf	___ftdiv@f1+2,w
 16864  0EE2  00AE               	movwf	??___ftdiv+2
 16865  0EE3  3010               	movlw	16
 16866  0EE4                     u5515:	
 16867  0EE4  36AE               	lsrf	??___ftdiv+2,f
 16868  0EE5  0CAD               	rrf	??___ftdiv+1,f
 16869  0EE6  0CAC               	rrf	??___ftdiv,f
 16870  0EE7  0B89               	decfsz	9,f
 16871  0EE8  2EE4               	goto	u5515
 16872  0EE9  082C               	movf	??___ftdiv,w
 16873  0EEA  00AF               	movwf	??___ftdiv+3
 16874  0EEB  082F               	movf	??___ftdiv+3,w
 16875  0EEC  00B5               	movwf	___ftdiv@sign
 16876  0EED  0826               	movf	___ftdiv@f2,w
 16877  0EEE  00AC               	movwf	??___ftdiv
 16878  0EEF  0827               	movf	___ftdiv@f2+1,w
 16879  0EF0  00AD               	movwf	??___ftdiv+1
 16880  0EF1  0828               	movf	___ftdiv@f2+2,w
 16881  0EF2  00AE               	movwf	??___ftdiv+2
 16882  0EF3  3010               	movlw	16
 16883  0EF4                     u5525:	
 16884  0EF4  36AE               	lsrf	??___ftdiv+2,f
 16885  0EF5  0CAD               	rrf	??___ftdiv+1,f
 16886  0EF6  0CAC               	rrf	??___ftdiv,f
 16887  0EF7  0B89               	decfsz	9,f
 16888  0EF8  2EF4               	goto	u5525
 16889  0EF9  082C               	movf	??___ftdiv,w
 16890  0EFA  00AF               	movwf	??___ftdiv+3
 16891  0EFB  082F               	movf	??___ftdiv+3,w
 16892  0EFC  06B5               	xorwf	___ftdiv@sign,f
 16893  0EFD  3080               	movlw	128
 16894  0EFE  00AC               	movwf	??___ftdiv
 16895  0EFF  082C               	movf	??___ftdiv,w
 16896  0F00  05B5               	andwf	___ftdiv@sign,f
 16897  0F01  17AA               	bsf	___ftdiv@f1+1,7
 16898  0F02  30FF               	movlw	255
 16899  0F03  05A9               	andwf	___ftdiv@f1,f
 16900  0F04  30FF               	movlw	255
 16901  0F05  05AA               	andwf	___ftdiv@f1+1,f
 16902  0F06  3000               	movlw	0
 16903  0F07  05AB               	andwf	___ftdiv@f1+2,f
 16904  0F08  17A7               	bsf	___ftdiv@f2+1,7
 16905  0F09  30FF               	movlw	255
 16906  0F0A  05A6               	andwf	___ftdiv@f2,f
 16907  0F0B  30FF               	movlw	255
 16908  0F0C  05A7               	andwf	___ftdiv@f2+1,f
 16909  0F0D  3000               	movlw	0
 16910  0F0E  05A8               	andwf	___ftdiv@f2+2,f
 16911  0F0F  3018               	movlw	24
 16912  0F10  00AC               	movwf	??___ftdiv
 16913  0F11  082C               	movf	??___ftdiv,w
 16914  0F12  00B0               	movwf	___ftdiv@cntr
 16915  0F13                     l6694:	
 16916  0F13  3001               	movlw	1
 16917  0F14                     u5535:	
 16918  0F14  35B1               	lslf	___ftdiv@f3,f
 16919  0F15  0DB2               	rlf	___ftdiv@f3+1,f
 16920  0F16  0DB3               	rlf	___ftdiv@f3+2,f
 16921  0F17  0B89               	decfsz	9,f
 16922  0F18  2F14               	goto	u5535
 16923  0F19  0828               	movf	___ftdiv@f2+2,w
 16924  0F1A  022B               	subwf	___ftdiv@f1+2,w
 16925  0F1B  1D03               	skipz
 16926  0F1C  2F23               	goto	u5545
 16927  0F1D  0827               	movf	___ftdiv@f2+1,w
 16928  0F1E  022A               	subwf	___ftdiv@f1+1,w
 16929  0F1F  1D03               	skipz
 16930  0F20  2F23               	goto	u5545
 16931  0F21  0826               	movf	___ftdiv@f2,w
 16932  0F22  0229               	subwf	___ftdiv@f1,w
 16933  0F23                     u5545:	
 16934  0F23  1C03               	skipc
 16935  0F24  2F2C               	goto	l6702
 16936  0F25  0826               	movf	___ftdiv@f2,w
 16937  0F26  02A9               	subwf	___ftdiv@f1,f
 16938  0F27  0827               	movf	___ftdiv@f2+1,w
 16939  0F28  3BAA               	subwfb	___ftdiv@f1+1,f
 16940  0F29  0828               	movf	___ftdiv@f2+2,w
 16941  0F2A  3BAB               	subwfb	___ftdiv@f1+2,f
 16942  0F2B  1431               	bsf	___ftdiv@f3,0
 16943  0F2C                     l6702:	
 16944  0F2C  3001               	movlw	1
 16945  0F2D                     u5555:	
 16946  0F2D  35A9               	lslf	___ftdiv@f1,f
 16947  0F2E  0DAA               	rlf	___ftdiv@f1+1,f
 16948  0F2F  0DAB               	rlf	___ftdiv@f1+2,f
 16949  0F30  0B89               	decfsz	9,f
 16950  0F31  2F2D               	goto	u5555
 16951  0F32  3001               	movlw	1
 16952  0F33  02B0               	subwf	___ftdiv@cntr,f
 16953  0F34  1D03               	btfss	3,2
 16954  0F35  2F13               	goto	l6694
 16955  0F36  0831               	movf	___ftdiv@f3,w
 16956  0F37  00F2               	movwf	___ftpack@arg
 16957  0F38  0832               	movf	___ftdiv@f3+1,w
 16958  0F39  00F3               	movwf	___ftpack@arg+1
 16959  0F3A  0833               	movf	___ftdiv@f3+2,w
 16960  0F3B  00F4               	movwf	___ftpack@arg+2
 16961  0F3C  0834               	movf	___ftdiv@exp,w
 16962  0F3D  00AC               	movwf	??___ftdiv
 16963  0F3E  082C               	movf	??___ftdiv,w
 16964  0F3F  00F5               	movwf	___ftpack@exp
 16965  0F40  0835               	movf	___ftdiv@sign,w
 16966  0F41  00AD               	movwf	??___ftdiv+1
 16967  0F42  082D               	movf	??___ftdiv+1,w
 16968  0F43  00F6               	movwf	___ftpack@sign
 16969  0F44  3197  27A0         	fcall	___ftpack
 16970  0F46  0872               	movf	?___ftpack,w
 16971  0F47  0020               	movlb	0	; select bank0
 16972  0F48  00A6               	movwf	?___ftdiv
 16973  0F49  0873               	movf	?___ftpack+1,w
 16974  0F4A  00A7               	movwf	?___ftdiv+1
 16975  0F4B  0874               	movf	?___ftpack+2,w
 16976  0F4C  00A8               	movwf	?___ftdiv+2
 16977  0F4D  0008               	return
 16978  0F4E                     __end_of___ftdiv:	
 16979                           
 16980                           	psect	text114
 16981  01C9                     __ptext114:	
 16982 ;; *************** function ___ftadd *****************
 16983 ;; Defined at:
 16984 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;  f1              3   22[BANK0 ] float 
 16987 ;;  f2              3   25[BANK0 ] float 
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;  exp1            1   34[BANK0 ] unsigned char 
 16990 ;;  exp2            1   33[BANK0 ] unsigned char 
 16991 ;;  sign            1   32[BANK0 ] unsigned char 
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  3   22[BANK0 ] float 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0, pclath, cstack
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17001 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17003 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;Total ram usage:       13 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    4
 17008 ;; This function calls:
 17009 ;;		___ftpack
 17010 ;; This function is called by:
 17011 ;;		_getDimmerLights_PercentToValue
 17012 ;; This function uses a non-reentrant model
 17013 ;;
 17014                           
 17015                           
 17016                           ;psect for function ___ftadd
 17017  01C9                     ___ftadd:	
 17018                           
 17019                           ;incstack = 0
 17020                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 17021  01C9  0020               	movlb	0	; select bank0
 17022  01CA  0836               	movf	___ftadd@f1,w
 17023  01CB  00BC               	movwf	??___ftadd
 17024  01CC  0837               	movf	___ftadd@f1+1,w
 17025  01CD  00BD               	movwf	??___ftadd+1
 17026  01CE  0838               	movf	___ftadd@f1+2,w
 17027  01CF  00BE               	movwf	??___ftadd+2
 17028  01D0  1003               	clrc
 17029  01D1  0D3D               	rlf	??___ftadd+1,w
 17030  01D2  0D3E               	rlf	??___ftadd+2,w
 17031  01D3  00BF               	movwf	??___ftadd+3
 17032  01D4  083F               	movf	??___ftadd+3,w
 17033  01D5  00C2               	movwf	___ftadd@exp1
 17034  01D6  0839               	movf	___ftadd@f2,w
 17035  01D7  00BC               	movwf	??___ftadd
 17036  01D8  083A               	movf	___ftadd@f2+1,w
 17037  01D9  00BD               	movwf	??___ftadd+1
 17038  01DA  083B               	movf	___ftadd@f2+2,w
 17039  01DB  00BE               	movwf	??___ftadd+2
 17040  01DC  1003               	clrc
 17041  01DD  0D3D               	rlf	??___ftadd+1,w
 17042  01DE  0D3E               	rlf	??___ftadd+2,w
 17043  01DF  00BF               	movwf	??___ftadd+3
 17044  01E0  083F               	movf	??___ftadd+3,w
 17045  01E1  00C1               	movwf	___ftadd@exp2
 17046  01E2  0842               	movf	___ftadd@exp1,w
 17047  01E3  1903               	btfsc	3,2
 17048  01E4  29F1               	goto	l6604
 17049  01E5  0841               	movf	___ftadd@exp2,w
 17050  01E6  0242               	subwf	___ftadd@exp1,w
 17051  01E7  1803               	skipnc
 17052  01E8  29F8               	goto	l6608
 17053  01E9  0342               	decf	___ftadd@exp1,w
 17054  01EA  3AFF               	xorlw	255
 17055  01EB  0741               	addwf	___ftadd@exp2,w
 17056  01EC  00BC               	movwf	??___ftadd
 17057  01ED  3019               	movlw	25
 17058  01EE  023C               	subwf	??___ftadd,w
 17059  01EF  1C03               	skipc
 17060  01F0  29F8               	goto	l6608
 17061  01F1                     l6604:	
 17062  01F1  0839               	movf	___ftadd@f2,w
 17063  01F2  00B6               	movwf	?___ftadd
 17064  01F3  083A               	movf	___ftadd@f2+1,w
 17065  01F4  00B7               	movwf	?___ftadd+1
 17066  01F5  083B               	movf	___ftadd@f2+2,w
 17067  01F6  00B8               	movwf	?___ftadd+2
 17068  01F7  0008               	return
 17069  01F8                     l6608:	
 17070  01F8  0841               	movf	___ftadd@exp2,w
 17071  01F9  1903               	btfsc	3,2
 17072  01FA  0008               	return
 17073  01FB  0842               	movf	___ftadd@exp1,w
 17074  01FC  0241               	subwf	___ftadd@exp2,w
 17075  01FD  1803               	skipnc
 17076  01FE  2A07               	goto	l6614
 17077  01FF  0341               	decf	___ftadd@exp2,w
 17078  0200  3AFF               	xorlw	255
 17079  0201  0742               	addwf	___ftadd@exp1,w
 17080  0202  00BC               	movwf	??___ftadd
 17081  0203  3019               	movlw	25
 17082  0204  023C               	subwf	??___ftadd,w
 17083  0205  1803               	btfsc	3,0
 17084  0206  0008               	return
 17085  0207                     l6614:	
 17086  0207  3006               	movlw	6
 17087  0208  00BC               	movwf	??___ftadd
 17088  0209  083C               	movf	??___ftadd,w
 17089  020A  00C0               	movwf	___ftadd@sign
 17090  020B  1BB8               	btfsc	___ftadd@f1+2,7
 17091  020C  17C0               	bsf	___ftadd@sign,7
 17092  020D  1BBB               	btfsc	___ftadd@f2+2,7
 17093  020E  1740               	bsf	___ftadd@sign,6
 17094  020F  17B7               	bsf	___ftadd@f1+1,7
 17095  0210  30FF               	movlw	255
 17096  0211  05B6               	andwf	___ftadd@f1,f
 17097  0212  30FF               	movlw	255
 17098  0213  05B7               	andwf	___ftadd@f1+1,f
 17099  0214  3000               	movlw	0
 17100  0215  05B8               	andwf	___ftadd@f1+2,f
 17101  0216  17BA               	bsf	___ftadd@f2+1,7
 17102  0217  30FF               	movlw	255
 17103  0218  05B9               	andwf	___ftadd@f2,f
 17104  0219  30FF               	movlw	255
 17105  021A  05BA               	andwf	___ftadd@f2+1,f
 17106  021B  3000               	movlw	0
 17107  021C  05BB               	andwf	___ftadd@f2+2,f
 17108  021D  0841               	movf	___ftadd@exp2,w
 17109  021E  0242               	subwf	___ftadd@exp1,w
 17110  021F  1803               	skipnc
 17111  0220  2A43               	goto	l6636
 17112  0221                     l6626:	
 17113  0221  3001               	movlw	1
 17114  0222                     u5355:	
 17115  0222  35B9               	lslf	___ftadd@f2,f
 17116  0223  0DBA               	rlf	___ftadd@f2+1,f
 17117  0224  0DBB               	rlf	___ftadd@f2+2,f
 17118  0225  0B89               	decfsz	9,f
 17119  0226  2A22               	goto	u5355
 17120  0227  3001               	movlw	1
 17121  0228  02C1               	subwf	___ftadd@exp2,f
 17122  0229  0841               	movf	___ftadd@exp2,w
 17123  022A  0642               	xorwf	___ftadd@exp1,w
 17124  022B  1903               	skipnz
 17125  022C  2A3E               	goto	l6634
 17126  022D  3001               	movlw	1
 17127  022E  02C0               	subwf	___ftadd@sign,f
 17128  022F  0840               	movf	___ftadd@sign,w
 17129  0230  3907               	andlw	7
 17130  0231  1903               	btfsc	3,2
 17131  0232  2A3E               	goto	l6634
 17132  0233  2A21               	goto	l6626
 17133  0234                     l6632:	
 17134  0234  3001               	movlw	1
 17135  0235                     u5385:	
 17136  0235  36B8               	lsrf	___ftadd@f1+2,f
 17137  0236  0CB7               	rrf	___ftadd@f1+1,f
 17138  0237  0CB6               	rrf	___ftadd@f1,f
 17139  0238  0B89               	decfsz	9,f
 17140  0239  2A35               	goto	u5385
 17141  023A  3001               	movlw	1
 17142  023B  00BC               	movwf	??___ftadd
 17143  023C  083C               	movf	??___ftadd,w
 17144  023D  07C2               	addwf	___ftadd@exp1,f
 17145  023E                     l6634:	
 17146  023E  0842               	movf	___ftadd@exp1,w
 17147  023F  0641               	xorwf	___ftadd@exp2,w
 17148  0240  1903               	btfsc	3,2
 17149  0241  2A68               	goto	l3387
 17150  0242  2A34               	goto	l6632
 17151  0243                     l6636:	
 17152  0243  0842               	movf	___ftadd@exp1,w
 17153  0244  0241               	subwf	___ftadd@exp2,w
 17154  0245  1803               	skipnc
 17155  0246  2A68               	goto	l3387
 17156  0247                     l6638:	
 17157  0247  3001               	movlw	1
 17158  0248                     u5415:	
 17159  0248  35B6               	lslf	___ftadd@f1,f
 17160  0249  0DB7               	rlf	___ftadd@f1+1,f
 17161  024A  0DB8               	rlf	___ftadd@f1+2,f
 17162  024B  0B89               	decfsz	9,f
 17163  024C  2A48               	goto	u5415
 17164  024D  3001               	movlw	1
 17165  024E  02C2               	subwf	___ftadd@exp1,f
 17166  024F  0841               	movf	___ftadd@exp2,w
 17167  0250  0642               	xorwf	___ftadd@exp1,w
 17168  0251  1903               	skipnz
 17169  0252  2A64               	goto	l6646
 17170  0253  3001               	movlw	1
 17171  0254  02C0               	subwf	___ftadd@sign,f
 17172  0255  0840               	movf	___ftadd@sign,w
 17173  0256  3907               	andlw	7
 17174  0257  1903               	btfsc	3,2
 17175  0258  2A64               	goto	l6646
 17176  0259  2A47               	goto	l6638
 17177  025A                     l6644:	
 17178  025A  3001               	movlw	1
 17179  025B                     u5445:	
 17180  025B  36BB               	lsrf	___ftadd@f2+2,f
 17181  025C  0CBA               	rrf	___ftadd@f2+1,f
 17182  025D  0CB9               	rrf	___ftadd@f2,f
 17183  025E  0B89               	decfsz	9,f
 17184  025F  2A5B               	goto	u5445
 17185  0260  3001               	movlw	1
 17186  0261  00BC               	movwf	??___ftadd
 17187  0262  083C               	movf	??___ftadd,w
 17188  0263  07C1               	addwf	___ftadd@exp2,f
 17189  0264                     l6646:	
 17190  0264  0842               	movf	___ftadd@exp1,w
 17191  0265  0641               	xorwf	___ftadd@exp2,w
 17192  0266  1D03               	skipz
 17193  0267  2A5A               	goto	l6644
 17194  0268                     l3387:	
 17195  0268  1FC0               	btfss	___ftadd@sign,7
 17196  0269  2A7A               	goto	l6650
 17197  026A  30FF               	movlw	255
 17198  026B  06B6               	xorwf	___ftadd@f1,f
 17199  026C  30FF               	movlw	255
 17200  026D  06B7               	xorwf	___ftadd@f1+1,f
 17201  026E  30FF               	movlw	255
 17202  026F  06B8               	xorwf	___ftadd@f1+2,f
 17203  0270  3001               	movlw	1
 17204  0271  07B6               	addwf	___ftadd@f1,f
 17205  0272  3000               	movlw	0
 17206  0273  1803               	skipnc
 17207  0274  3001               	movlw	1
 17208  0275  07B7               	addwf	___ftadd@f1+1,f
 17209  0276  3000               	movlw	0
 17210  0277  1803               	skipnc
 17211  0278  3001               	movlw	1
 17212  0279  07B8               	addwf	___ftadd@f1+2,f
 17213  027A                     l6650:	
 17214  027A  1F40               	btfss	___ftadd@sign,6
 17215  027B  2A8C               	goto	l6654
 17216  027C  30FF               	movlw	255
 17217  027D  06B9               	xorwf	___ftadd@f2,f
 17218  027E  30FF               	movlw	255
 17219  027F  06BA               	xorwf	___ftadd@f2+1,f
 17220  0280  30FF               	movlw	255
 17221  0281  06BB               	xorwf	___ftadd@f2+2,f
 17222  0282  3001               	movlw	1
 17223  0283  07B9               	addwf	___ftadd@f2,f
 17224  0284  3000               	movlw	0
 17225  0285  1803               	skipnc
 17226  0286  3001               	movlw	1
 17227  0287  07BA               	addwf	___ftadd@f2+1,f
 17228  0288  3000               	movlw	0
 17229  0289  1803               	skipnc
 17230  028A  3001               	movlw	1
 17231  028B  07BB               	addwf	___ftadd@f2+2,f
 17232  028C                     l6654:	
 17233  028C  01C0               	clrf	___ftadd@sign
 17234  028D  0836               	movf	___ftadd@f1,w
 17235  028E  07B9               	addwf	___ftadd@f2,f
 17236  028F  0837               	movf	___ftadd@f1+1,w
 17237  0290  3DBA               	addwfc	___ftadd@f2+1,f
 17238  0291  0838               	movf	___ftadd@f1+2,w
 17239  0292  3DBB               	addwfc	___ftadd@f2+2,f
 17240  0293  1FBB               	btfss	___ftadd@f2+2,7
 17241  0294  2AA7               	goto	l6664
 17242  0295  30FF               	movlw	255
 17243  0296  06B9               	xorwf	___ftadd@f2,f
 17244  0297  30FF               	movlw	255
 17245  0298  06BA               	xorwf	___ftadd@f2+1,f
 17246  0299  30FF               	movlw	255
 17247  029A  06BB               	xorwf	___ftadd@f2+2,f
 17248  029B  3001               	movlw	1
 17249  029C  07B9               	addwf	___ftadd@f2,f
 17250  029D  3000               	movlw	0
 17251  029E  1803               	skipnc
 17252  029F  3001               	movlw	1
 17253  02A0  07BA               	addwf	___ftadd@f2+1,f
 17254  02A1  3000               	movlw	0
 17255  02A2  1803               	skipnc
 17256  02A3  3001               	movlw	1
 17257  02A4  07BB               	addwf	___ftadd@f2+2,f
 17258  02A5  01C0               	clrf	___ftadd@sign
 17259  02A6  0AC0               	incf	___ftadd@sign,f
 17260  02A7                     l6664:	
 17261  02A7  0839               	movf	___ftadd@f2,w
 17262  02A8  00F2               	movwf	___ftpack@arg
 17263  02A9  083A               	movf	___ftadd@f2+1,w
 17264  02AA  00F3               	movwf	___ftpack@arg+1
 17265  02AB  083B               	movf	___ftadd@f2+2,w
 17266  02AC  00F4               	movwf	___ftpack@arg+2
 17267  02AD  0842               	movf	___ftadd@exp1,w
 17268  02AE  00BC               	movwf	??___ftadd
 17269  02AF  083C               	movf	??___ftadd,w
 17270  02B0  00F5               	movwf	___ftpack@exp
 17271  02B1  0840               	movf	___ftadd@sign,w
 17272  02B2  00BD               	movwf	??___ftadd+1
 17273  02B3  083D               	movf	??___ftadd+1,w
 17274  02B4  00F6               	movwf	___ftpack@sign
 17275  02B5  3197  27A0         	fcall	___ftpack
 17276  02B7  0872               	movf	?___ftpack,w
 17277  02B8  0020               	movlb	0	; select bank0
 17278  02B9  00B6               	movwf	?___ftadd
 17279  02BA  0873               	movf	?___ftpack+1,w
 17280  02BB  00B7               	movwf	?___ftadd+1
 17281  02BC  0874               	movf	?___ftpack+2,w
 17282  02BD  00B8               	movwf	?___ftadd+2
 17283  02BE  0008               	return
 17284  02BF                     __end_of___ftadd:	
 17285                           
 17286                           	psect	text115
 17287  1FDE                     __ptext115:	
 17288 ;; *************** function ___awtoft *****************
 17289 ;; Defined at:
 17290 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 17291 ;; Parameters:    Size  Location     Type
 17292 ;;  c               2    0[BANK0 ] int 
 17293 ;; Auto vars:     Size  Location     Type
 17294 ;;  sign            1    5[BANK0 ] unsigned char 
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  3    0[BANK0 ] float 
 17297 ;; Registers used:
 17298 ;;		wreg, status,2, status,0, pclath, cstack
 17299 ;; Tracked objects:
 17300 ;;		On entry : 0/0
 17301 ;;		On exit  : 0/0
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17304 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;Total ram usage:        6 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:    4
 17311 ;; This function calls:
 17312 ;;		___ftpack
 17313 ;; This function is called by:
 17314 ;;		_getDimmerLights_PercentToValue
 17315 ;;		_getDimmerLights_ValueToPercent
 17316 ;; This function uses a non-reentrant model
 17317 ;;
 17318                           
 17319                           
 17320                           ;psect for function ___awtoft
 17321  1FDE                     ___awtoft:	
 17322                           
 17323                           ;incstack = 0
 17324                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 17325  1FDE  0020               	movlb	0	; select bank0
 17326  1FDF  01A5               	clrf	___awtoft@sign
 17327  1FE0  1FA1               	btfss	___awtoft@c+1,7
 17328  1FE1  2FE9               	goto	l9330
 17329  1FE2  09A0               	comf	___awtoft@c,f
 17330  1FE3  09A1               	comf	___awtoft@c+1,f
 17331  1FE4  0AA0               	incf	___awtoft@c,f
 17332  1FE5  1903               	skipnz
 17333  1FE6  0AA1               	incf	___awtoft@c+1,f
 17334  1FE7  01A5               	clrf	___awtoft@sign
 17335  1FE8  0AA5               	incf	___awtoft@sign,f
 17336  1FE9                     l9330:	
 17337  1FE9  0820               	movf	___awtoft@c,w
 17338  1FEA  00F2               	movwf	___ftpack@arg
 17339  1FEB  0821               	movf	___awtoft@c+1,w
 17340  1FEC  00F3               	movwf	___ftpack@arg+1
 17341  1FED  01F4               	clrf	___ftpack@arg+2
 17342  1FEE  308E               	movlw	142
 17343  1FEF  00A3               	movwf	??___awtoft
 17344  1FF0  0823               	movf	??___awtoft,w
 17345  1FF1  00F5               	movwf	___ftpack@exp
 17346  1FF2  0825               	movf	___awtoft@sign,w
 17347  1FF3  00A4               	movwf	??___awtoft+1
 17348  1FF4  0824               	movf	??___awtoft+1,w
 17349  1FF5  00F6               	movwf	___ftpack@sign
 17350  1FF6  3197  27A0         	fcall	___ftpack
 17351  1FF8  0872               	movf	?___ftpack,w
 17352  1FF9  0020               	movlb	0	; select bank0
 17353  1FFA  00A0               	movwf	?___awtoft
 17354  1FFB  0873               	movf	?___ftpack+1,w
 17355  1FFC  00A1               	movwf	?___awtoft+1
 17356  1FFD  0874               	movf	?___ftpack+2,w
 17357  1FFE  00A2               	movwf	?___awtoft+2
 17358  1FFF  0008               	return
 17359  2000                     __end_of___awtoft:	
 17360                           
 17361                           	psect	text116
 17362  17A0                     __ptext116:	
 17363 ;; *************** function ___ftpack *****************
 17364 ;; Defined at:
 17365 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 17366 ;; Parameters:    Size  Location     Type
 17367 ;;  arg             3    2[COMMON] unsigned um
 17368 ;;  exp             1    5[COMMON] unsigned char 
 17369 ;;  sign            1    6[COMMON] unsigned char 
 17370 ;; Auto vars:     Size  Location     Type
 17371 ;;		None
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  3    2[COMMON] float 
 17374 ;; Registers used:
 17375 ;;		wreg, status,2, status,0
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17381 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17384 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17385 ;;Total ram usage:        8 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:    3
 17388 ;; This function calls:
 17389 ;;		Nothing
 17390 ;; This function is called by:
 17391 ;;		___awtoft
 17392 ;;		___ftadd
 17393 ;;		___ftdiv
 17394 ;;		___ftmul
 17395 ;; This function uses a non-reentrant model
 17396 ;;
 17397                           
 17398                           
 17399                           ;psect for function ___ftpack
 17400  17A0                     ___ftpack:	
 17401                           
 17402                           ;incstack = 0
 17403                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 17404  17A0  0875               	movf	___ftpack@exp,w
 17405  17A1  1903               	btfsc	3,2
 17406  17A2  2FA8               	goto	l6422
 17407  17A3  0874               	movf	___ftpack@arg+2,w
 17408  17A4  0473               	iorwf	___ftpack@arg+1,w
 17409  17A5  0472               	iorwf	___ftpack@arg,w
 17410  17A6  1D03               	skipz
 17411  17A7  2FB9               	goto	l6428
 17412  17A8                     l6422:	
 17413  17A8  3000               	movlw	0
 17414  17A9  00F2               	movwf	?___ftpack
 17415  17AA  3000               	movlw	0
 17416  17AB  00F3               	movwf	?___ftpack+1
 17417  17AC  3000               	movlw	0
 17418  17AD  00F4               	movwf	?___ftpack+2
 17419  17AE  0008               	return
 17420  17AF                     l6426:	
 17421  17AF  3001               	movlw	1
 17422  17B0  00F7               	movwf	??___ftpack
 17423  17B1  0877               	movf	??___ftpack,w
 17424  17B2  07F5               	addwf	___ftpack@exp,f
 17425  17B3  3001               	movlw	1
 17426  17B4                     u4915:	
 17427  17B4  36F4               	lsrf	___ftpack@arg+2,f
 17428  17B5  0CF3               	rrf	___ftpack@arg+1,f
 17429  17B6  0CF2               	rrf	___ftpack@arg,f
 17430  17B7  0B89               	decfsz	9,f
 17431  17B8  2FB4               	goto	u4915
 17432  17B9                     l6428:	
 17433  17B9  30FE               	movlw	254
 17434  17BA  0574               	andwf	___ftpack@arg+2,w
 17435  17BB  1903               	btfsc	3,2
 17436  17BC  2FD2               	goto	l3358
 17437  17BD  2FAF               	goto	l6426
 17438  17BE                     l6430:	
 17439  17BE  3001               	movlw	1
 17440  17BF  00F7               	movwf	??___ftpack
 17441  17C0  0877               	movf	??___ftpack,w
 17442  17C1  07F5               	addwf	___ftpack@exp,f
 17443  17C2  3001               	movlw	1
 17444  17C3  07F2               	addwf	___ftpack@arg,f
 17445  17C4  3000               	movlw	0
 17446  17C5  1803               	skipnc
 17447  17C6  3001               	movlw	1
 17448  17C7  07F3               	addwf	___ftpack@arg+1,f
 17449  17C8  3000               	movlw	0
 17450  17C9  1803               	skipnc
 17451  17CA  3001               	movlw	1
 17452  17CB  07F4               	addwf	___ftpack@arg+2,f
 17453  17CC  3001               	movlw	1
 17454  17CD                     u4935:	
 17455  17CD  36F4               	lsrf	___ftpack@arg+2,f
 17456  17CE  0CF3               	rrf	___ftpack@arg+1,f
 17457  17CF  0CF2               	rrf	___ftpack@arg,f
 17458  17D0  0B89               	decfsz	9,f
 17459  17D1  2FCD               	goto	u4935
 17460  17D2                     l3358:	
 17461  17D2  30FF               	movlw	255
 17462  17D3  0574               	andwf	___ftpack@arg+2,w
 17463  17D4  1903               	btfsc	3,2
 17464  17D5  2FDF               	goto	l6438
 17465  17D6  2FBE               	goto	l6430
 17466  17D7                     l6436:	
 17467  17D7  3001               	movlw	1
 17468  17D8  02F5               	subwf	___ftpack@exp,f
 17469  17D9  3001               	movlw	1
 17470  17DA                     u4955:	
 17471  17DA  35F2               	lslf	___ftpack@arg,f
 17472  17DB  0DF3               	rlf	___ftpack@arg+1,f
 17473  17DC  0DF4               	rlf	___ftpack@arg+2,f
 17474  17DD  0B89               	decfsz	9,f
 17475  17DE  2FDA               	goto	u4955
 17476  17DF                     l6438:	
 17477  17DF  1FF3               	btfss	___ftpack@arg+1,7
 17478  17E0  2FD7               	goto	l6436
 17479  17E1  1875               	btfsc	___ftpack@exp,0
 17480  17E2  2FE9               	goto	l3364
 17481  17E3  30FF               	movlw	255
 17482  17E4  05F2               	andwf	___ftpack@arg,f
 17483  17E5  307F               	movlw	127
 17484  17E6  05F3               	andwf	___ftpack@arg+1,f
 17485  17E7  30FF               	movlw	255
 17486  17E8  05F4               	andwf	___ftpack@arg+2,f
 17487  17E9                     l3364:	
 17488  17E9  1003               	clrc
 17489  17EA  0CF5               	rrf	___ftpack@exp,f
 17490  17EB  0875               	movf	___ftpack@exp,w
 17491  17EC  00F7               	movwf	??___ftpack
 17492  17ED  01F8               	clrf	??___ftpack+1
 17493  17EE  01F9               	clrf	??___ftpack+2
 17494  17EF  3010               	movlw	16
 17495  17F0                     u4985:	
 17496  17F0  35F7               	lslf	??___ftpack,f
 17497  17F1  0DF8               	rlf	??___ftpack+1,f
 17498  17F2  0DF9               	rlf	??___ftpack+2,f
 17499  17F3  0B89               	decfsz	9,f
 17500  17F4  2FF0               	goto	u4985
 17501  17F5  0877               	movf	??___ftpack,w
 17502  17F6  04F2               	iorwf	___ftpack@arg,f
 17503  17F7  0878               	movf	??___ftpack+1,w
 17504  17F8  04F3               	iorwf	___ftpack@arg+1,f
 17505  17F9  0879               	movf	??___ftpack+2,w
 17506  17FA  04F4               	iorwf	___ftpack@arg+2,f
 17507  17FB  0876               	movf	___ftpack@sign,w
 17508  17FC  1903               	btfsc	3,2
 17509  17FD  0008               	return
 17510  17FE  17F4               	bsf	___ftpack@arg+2,7
 17511  17FF  0008               	return
 17512  1800                     __end_of___ftpack:	
 17513                           
 17514                           	psect	text117
 17515  1BF0                     __ptext117:	
 17516 ;; *************** function _Division *****************
 17517 ;; Defined at:
 17518 ;;		line 2015 in file "../src/Dimmer_B1.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;  value           1    wreg     unsigned char 
 17521 ;;  num             1    7[COMMON] unsigned char 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;  value           1    0[BANK0 ] unsigned char 
 17524 ;;  result          1    1[BANK0 ] unsigned char 
 17525 ;; Return value:  Size  Location     Type
 17526 ;;                  1    wreg      unsigned char 
 17527 ;; Registers used:
 17528 ;;		wreg, status,2, status,0, pclath, cstack
 17529 ;; Tracked objects:
 17530 ;;		On entry : 0/0
 17531 ;;		On exit  : 0/0
 17532 ;;		Unchanged: 0/0
 17533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17537 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17538 ;;Total ram usage:        5 bytes
 17539 ;; Hardware stack levels used:    1
 17540 ;; Hardware stack levels required when called:    4
 17541 ;; This function calls:
 17542 ;;		___lbdiv
 17543 ;; This function is called by:
 17544 ;;		_DimmerIntr_Initialization
 17545 ;;		_DimmerIntr_ValueCalculate
 17546 ;; This function uses a non-reentrant model
 17547 ;;
 17548                           
 17549                           
 17550                           ;psect for function _Division
 17551  1BF0                     _Division:	
 17552                           
 17553                           ;incstack = 0
 17554                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 17555                           ;Division@value stored from wreg
 17556  1BF0  0020               	movlb	0	; select bank0
 17557  1BF1  00A0               	movwf	Division@value
 17558                           
 17559                           ;Dimmer_B1.c: 2016: char result = (char) (value / num);
 17560  1BF2  0877               	movf	Division@num,w
 17561  1BF3  00F8               	movwf	??_Division
 17562  1BF4  0878               	movf	??_Division,w
 17563  1BF5  00F2               	movwf	___lbdiv@divisor
 17564  1BF6  0820               	movf	Division@value,w
 17565  1BF7  319F  2759         	fcall	___lbdiv
 17566  1BF9  00F9               	movwf	??_Division+1
 17567  1BFA  0879               	movf	??_Division+1,w
 17568  1BFB  0020               	movlb	0	; select bank0
 17569  1BFC  00A1               	movwf	Division@result
 17570                           
 17571                           ;Dimmer_B1.c: 2017: return result;
 17572  1BFD  0821               	movf	Division@result,w
 17573  1BFE  0008               	return
 17574  1BFF                     __end_of_Division:	
 17575                           
 17576                           	psect	text118
 17577  1F59                     __ptext118:	
 17578 ;; *************** function ___lbdiv *****************
 17579 ;; Defined at:
 17580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  dividend        1    wreg     unsigned char 
 17583 ;;  divisor         1    2[COMMON] unsigned char 
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;  dividend        1    4[COMMON] unsigned char 
 17586 ;;  quotient        1    6[COMMON] unsigned char 
 17587 ;;  counter         1    5[COMMON] unsigned char 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      unsigned char 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2, status,0
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17597 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17601 ;;Total ram usage:        5 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:    3
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_Division
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           
 17612                           ;psect for function ___lbdiv
 17613  1F59                     ___lbdiv:	
 17614                           
 17615                           ;incstack = 0
 17616                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 17617                           ;___lbdiv@dividend stored from wreg
 17618  1F59  00F4               	movwf	___lbdiv@dividend
 17619  1F5A  01F6               	clrf	___lbdiv@quotient
 17620  1F5B  0872               	movf	___lbdiv@divisor,w
 17621  1F5C  1903               	btfsc	3,2
 17622  1F5D  2F78               	goto	l9454
 17623  1F5E  01F5               	clrf	___lbdiv@counter
 17624  1F5F  0AF5               	incf	___lbdiv@counter,f
 17625  1F60                     l9442:	
 17626  1F60  1BF2               	btfsc	___lbdiv@divisor,7
 17627  1F61  2F69               	goto	l9444
 17628  1F62  1003               	clrc
 17629  1F63  0DF2               	rlf	___lbdiv@divisor,f
 17630  1F64  3001               	movlw	1
 17631  1F65  00F3               	movwf	??___lbdiv
 17632  1F66  0873               	movf	??___lbdiv,w
 17633  1F67  07F5               	addwf	___lbdiv@counter,f
 17634  1F68  2F60               	goto	l9442
 17635  1F69                     l9444:	
 17636  1F69  1003               	clrc
 17637  1F6A  0DF6               	rlf	___lbdiv@quotient,f
 17638  1F6B  0872               	movf	___lbdiv@divisor,w
 17639  1F6C  0274               	subwf	___lbdiv@dividend,w
 17640  1F6D  1C03               	skipc
 17641  1F6E  2F73               	goto	L11
 17642  1F6F  0872               	movf	___lbdiv@divisor,w
 17643  1F70  02F4               	subwf	___lbdiv@dividend,f
 17644  1F71  1476               	bsf	___lbdiv@quotient,0
 17645  1F72  1003               	clrc
 17646  1F73                     L11:	
 17647  1F73  0CF2               	rrf	___lbdiv@divisor,f
 17648  1F74  3001               	movlw	1
 17649  1F75  02F5               	subwf	___lbdiv@counter,f
 17650  1F76  1D03               	btfss	3,2
 17651  1F77  2F69               	goto	l9444
 17652  1F78                     l9454:	
 17653  1F78  0876               	movf	___lbdiv@quotient,w
 17654  1F79  0008               	return
 17655  1F7A                     __end_of___lbdiv:	
 17656                           
 17657                           	psect	text119
 17658  1BAE                     __ptext119:	
 17659 ;; *************** function _DelayOff_Main *****************
 17660 ;; Defined at:
 17661 ;;		line 41 in file "../src/DelayOff_B1.c"
 17662 ;; Parameters:    Size  Location     Type
 17663 ;;		None
 17664 ;; Auto vars:     Size  Location     Type
 17665 ;;		None
 17666 ;; Return value:  Size  Location     Type
 17667 ;;		None               void
 17668 ;; Registers used:
 17669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17670 ;; Tracked objects:
 17671 ;;		On entry : 0/0
 17672 ;;		On exit  : 0/0
 17673 ;;		Unchanged: 0/0
 17674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17679 ;;Total ram usage:        0 bytes
 17680 ;; Hardware stack levels used:    1
 17681 ;; Hardware stack levels required when called:    7
 17682 ;; This function calls:
 17683 ;;		_DlyOff_Main
 17684 ;; This function is called by:
 17685 ;;		_main
 17686 ;; This function uses a non-reentrant model
 17687 ;;
 17688                           
 17689                           
 17690                           ;psect for function _DelayOff_Main
 17691  1BAE                     _DelayOff_Main:	
 17692                           
 17693                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 17694                           
 17695                           ;incstack = 0
 17696                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17697  1BAE  3001               	movlw	1
 17698  1BAF  318A  2293  319B   	fcall	_DlyOff_Main
 17699                           
 17700                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 17701  1BB2  3002               	movlw	2
 17702  1BB3  318A  2293  319B   	fcall	_DlyOff_Main
 17703                           
 17704                           ;DelayOff_B1.c: 51: DlyOff_Main(3);
 17705  1BB6  3003               	movlw	3
 17706  1BB7  318A  2293         	fcall	_DlyOff_Main
 17707  1BB9  0008               	return
 17708  1BBA                     __end_of_DelayOff_Main:	
 17709                           
 17710                           	psect	text120
 17711  0A93                     __ptext120:	
 17712 ;; *************** function _DlyOff_Main *****************
 17713 ;; Defined at:
 17714 ;;		line 61 in file "../src/DelayOff_B1.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  sw              1    wreg     unsigned char 
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;  sw              1   58[BANK0 ] unsigned char 
 17719 ;; Return value:  Size  Location     Type
 17720 ;;		None               void
 17721 ;; Registers used:
 17722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17723 ;; Tracked objects:
 17724 ;;		On entry : 0/0
 17725 ;;		On exit  : 0/0
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17732 ;;Total ram usage:        3 bytes
 17733 ;; Hardware stack levels used:    1
 17734 ;; Hardware stack levels required when called:    6
 17735 ;; This function calls:
 17736 ;;		_DelayOffPointSelect
 17737 ;;		_getDimmerLights_Status
 17738 ;;		_setDimmerLights_SwOff
 17739 ;;		_setDimmerLights_SwOn
 17740 ;;		_setProductData
 17741 ;; This function is called by:
 17742 ;;		_DelayOff_Main
 17743 ;; This function uses a non-reentrant model
 17744 ;;
 17745                           
 17746                           
 17747                           ;psect for function _DlyOff_Main
 17748  0A93                     _DlyOff_Main:	
 17749                           
 17750                           ;incstack = 0
 17751                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17752                           ;DlyOff_Main@sw stored from wreg
 17753  0A93  0020               	movlb	0	; select bank0
 17754  0A94  00DA               	movwf	DlyOff_Main@sw
 17755                           
 17756                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 17757  0A95  085A               	movf	DlyOff_Main@sw,w
 17758  0A96  319E  26BB  318A   	fcall	_DelayOffPointSelect
 17759                           
 17760                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 17761  0A99  0020               	movlb	0	; select bank0
 17762  0A9A  0868               	movf	_DelayOff,w
 17763  0A9B  0086               	movwf	6
 17764  0A9C  3001               	movlw	1	; select bank2/3
 17765  0A9D  0087               	movwf	7
 17766  0A9E  1C81               	btfss	1,1
 17767  0A9F  0008               	return
 17768                           
 17769                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 17770  0AA0  0868               	movf	_DelayOff,w
 17771  0AA1  3E02               	addlw	2
 17772  0AA2  0086               	movwf	6
 17773  0AA3  3001               	movlw	1	; select bank2/3
 17774  0AA4  0087               	movwf	7
 17775  0AA5  3001               	movlw	1
 17776  0AA6  0781               	addwf	1,f
 17777  0AA7  3141               	addfsr 1,1
 17778  0AA8  1803               	skipnc
 17779  0AA9  0A81               	incf	1,f
 17780                           
 17781                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 17782  0AAA  0868               	movf	_DelayOff,w
 17783  0AAB  3E02               	addlw	2
 17784  0AAC  0086               	movwf	6
 17785  0AAD  3001               	movlw	1	; select bank2/3
 17786  0AAE  0087               	movwf	7
 17787  0AAF  3F40               	moviw [0]fsr1
 17788  0AB0  00D8               	movwf	??_DlyOff_Main
 17789  0AB1  3F41               	moviw [1]fsr1
 17790  0AB2  00D9               	movwf	??_DlyOff_Main+1
 17791  0AB3  3009               	movlw	9
 17792  0AB4  0259               	subwf	??_DlyOff_Main+1,w
 17793  0AB5  30C4               	movlw	196
 17794  0AB6  1903               	skipnz
 17795  0AB7  0258               	subwf	??_DlyOff_Main,w
 17796  0AB8  1C03               	skipc
 17797  0AB9  0008               	return
 17798                           
 17799                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 17800  0ABA  0868               	movf	_DelayOff,w
 17801  0ABB  3E02               	addlw	2
 17802  0ABC  0086               	movwf	6
 17803  0ABD  3001               	movlw	1	; select bank2/3
 17804  0ABE  0087               	movwf	7
 17805  0ABF  3000               	movlw	0
 17806  0AC0  3FC0               	movwi [0]fsr1
 17807  0AC1  3FC1               	movwi [1]fsr1
 17808                           
 17809                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 17810  0AC2  3001               	movlw	1
 17811  0AC3  00D8               	movwf	??_DlyOff_Main
 17812  0AC4  0868               	movf	_DelayOff,w
 17813  0AC5  3E04               	addlw	4
 17814  0AC6  0086               	movwf	6
 17815  0AC7  3001               	movlw	1	; select bank2/3
 17816  0AC8  0087               	movwf	7
 17817  0AC9  0858               	movf	??_DlyOff_Main,w
 17818  0ACA  0781               	addwf	1,f
 17819                           
 17820                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 17821  0ACB  0868               	movf	_DelayOff,w
 17822  0ACC  3E04               	addlw	4
 17823  0ACD  0086               	movwf	6
 17824  0ACE  3001               	movlw	1	; select bank2/3
 17825  0ACF  0087               	movwf	7
 17826  0AD0  0A68               	incf	_DelayOff,w
 17827  0AD1  0084               	movwf	4
 17828  0AD2  3001               	movlw	1	; select bank2/3
 17829  0AD3  0085               	movwf	5
 17830  0AD4  0800               	movf	0,w
 17831  0AD5  0201               	subwf	1,w
 17832  0AD6  1C03               	skipc
 17833  0AD7  0008               	return
 17834                           
 17835                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 17836  0AD8  0868               	movf	_DelayOff,w
 17837  0AD9  3E04               	addlw	4
 17838  0ADA  0086               	movwf	6
 17839  0ADB  3001               	movlw	1	; select bank2/3
 17840  0ADC  0087               	movwf	7
 17841  0ADD  0181               	clrf	1
 17842                           
 17843                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 17844  0ADE  0868               	movf	_DelayOff,w
 17845  0ADF  0086               	movwf	6
 17846  0AE0  3001               	movlw	1	; select bank2/3
 17847  0AE1  0087               	movwf	7
 17848  0AE2  1081               	bcf	1,1
 17849                           
 17850                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 17851  0AE3  085A               	movf	DlyOff_Main@sw,w
 17852  0AE4  319B  23E1  318A   	fcall	_getDimmerLights_Status
 17853  0AE7  3A01               	xorlw	1
 17854  0AE8  1D03               	skipz
 17855  0AE9  2AF4               	goto	l623
 17856                           
 17857                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 17858  0AEA  0020               	movlb	0	; select bank0
 17859  0AEB  085A               	movf	DlyOff_Main@sw,w
 17860  0AEC  3187  2765  318A   	fcall	_setDimmerLights_SwOn
 17861                           
 17862                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 17863  0AEF  0020               	movlb	0	; select bank0
 17864  0AF0  085A               	movf	DlyOff_Main@sw,w
 17865  0AF1  3192  2243  318A   	fcall	_setDimmerLights_SwOff
 17866  0AF4                     l623:	
 17867                           
 17868                           ;DelayOff_B1.c: 78: }
 17869                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 17870  0AF4  0020               	movlb	0	; select bank0
 17871  0AF5  01D5               	clrf	setProductData@value
 17872  0AF6  085A               	movf	DlyOff_Main@sw,w
 17873  0AF7  3E1A               	addlw	26
 17874  0AF8  319B  23A2         	fcall	_setProductData
 17875  0AFA  0008               	return
 17876  0AFB                     __end_of_DlyOff_Main:	
 17877                           
 17878                           	psect	text121
 17879  1BA2                     __ptext121:	
 17880 ;; *************** function _setProductData *****************
 17881 ;; Defined at:
 17882 ;;		line 651 in file "../src/Main_B1.c"
 17883 ;; Parameters:    Size  Location     Type
 17884 ;;  address         1    wreg     unsigned char 
 17885 ;;  value           1   53[BANK0 ] unsigned char 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  address         1   55[BANK0 ] unsigned char 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;		None               void
 17890 ;; Registers used:
 17891 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17897 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17899 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;Total ram usage:        3 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:    3
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_DlyOff_Main
 17908 ;;		_setDelayOff_GO
 17909 ;;		_setDimmerLights_OnOff
 17910 ;;		_setDimmerLights_Dimming
 17911 ;;		_setTemp_Main
 17912 ;;		_setLog_Code
 17913 ;;		_setControl_Lights_Table
 17914 ;;		_setRFSW_AdjControl
 17915 ;;		_setRF_DimmerLights
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919                           
 17920                           ;psect for function _setProductData
 17921  1BA2                     _setProductData:	
 17922                           
 17923                           ;incstack = 0
 17924                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 17925                           ;setProductData@address stored from wreg
 17926  1BA2  0020               	movlb	0	; select bank0
 17927  1BA3  00D7               	movwf	setProductData@address
 17928                           
 17929                           ;Main_B1.c: 652: _product.Data[address] = value;
 17930  1BA4  0855               	movf	setProductData@value,w
 17931  1BA5  00D6               	movwf	??_setProductData
 17932  1BA6  0857               	movf	setProductData@address,w
 17933  1BA7  3EA0               	addlw	__product& (0+255)
 17934  1BA8  0086               	movwf	6
 17935  1BA9  3002               	movlw	2	; select bank5/6
 17936  1BAA  0087               	movwf	7
 17937  1BAB  0856               	movf	??_setProductData,w
 17938  1BAC  0081               	movwf	1
 17939  1BAD  0008               	return
 17940  1BAE                     __end_of_setProductData:	
 17941                           
 17942                           	psect	text122
 17943  0765                     __ptext122:	
 17944 ;; *************** function _setDimmerLights_SwOn *****************
 17945 ;; Defined at:
 17946 ;;		line 731 in file "../src/Dimmer_B1.c"
 17947 ;; Parameters:    Size  Location     Type
 17948 ;;  sw              1    wreg     unsigned char 
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  sw              1   11[BANK0 ] unsigned char 
 17951 ;;  idle            1   10[BANK0 ] unsigned char 
 17952 ;;  dimmingStatu    1    6[BANK0 ] unsigned char 
 17953 ;; Return value:  Size  Location     Type
 17954 ;;		None               void
 17955 ;; Registers used:
 17956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17957 ;; Tracked objects:
 17958 ;;		On entry : 0/0
 17959 ;;		On exit  : 0/0
 17960 ;;		Unchanged: 0/0
 17961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17963 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17965 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17966 ;;Total ram usage:        7 bytes
 17967 ;; Hardware stack levels used:    1
 17968 ;; Hardware stack levels required when called:    5
 17969 ;; This function calls:
 17970 ;;		_DimmerLights_SelectPointer
 17971 ;;		_getDimmerIntr_Dimming_Sw
 17972 ;;		_setBuz
 17973 ;; This function is called by:
 17974 ;;		_DlyOff_Main
 17975 ;;		_setControl_Lights_Table
 17976 ;;		_setRFSW_Control
 17977 ;;		_setRFSW_AdjControl
 17978 ;;		_setSw_Main
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           
 17983                           ;psect for function _setDimmerLights_SwOn
 17984  0765                     _setDimmerLights_SwOn:	
 17985                           
 17986                           ;incstack = 0
 17987                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17988                           ;setDimmerLights_SwOn@sw stored from wreg
 17989  0765  0020               	movlb	0	; select bank0
 17990  0766  00AB               	movwf	setDimmerLights_SwOn@sw
 17991                           
 17992                           ;Dimmer_B1.c: 732: char idle = 0;
 17993  0767  01AA               	clrf	setDimmerLights_SwOn@idle
 17994                           
 17995                           ;Dimmer_B1.c: 734: char dimmingStatus = 0;
 17996  0768  01A6               	clrf	setDimmerLights_SwOn@dimmingStatus
 17997                           
 17998                           ;Dimmer_B1.c: 735: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 17999  0769  082B               	movf	setDimmerLights_SwOn@sw,w
 18000  076A  319E  26DA  3187   	fcall	_getDimmerIntr_Dimming_Sw
 18001  076D  00F9               	movwf	??_setDimmerLights_SwOn
 18002  076E  0879               	movf	??_setDimmerLights_SwOn,w
 18003  076F  0020               	movlb	0	; select bank0
 18004  0770  00A6               	movwf	setDimmerLights_SwOn@dimmingStatus
 18005                           
 18006                           ;Dimmer_B1.c: 748: if (idle == 0) {
 18007  0771  08AA               	movf	setDimmerLights_SwOn@idle,f
 18008  0772  1D03               	skipz
 18009  0773  2FB4               	goto	l9408
 18010                           
 18011                           ;Dimmer_B1.c: 749: if (sw == 1) {
 18012  0774  082B               	movf	setDimmerLights_SwOn@sw,w
 18013  0775  3A01               	xorlw	1
 18014  0776  1D03               	skipz
 18015  0777  2F88               	goto	l9380
 18016                           
 18017                           ;Dimmer_B1.c: 750: idle = DimmerLights2.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 18018                           ;Dimmer_B1.c: 751: || DimmerIntr2.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 18019  0778  01A7               	clrf	_setDimmerLights_SwOn$2633
 18020  0779  0AA7               	incf	_setDimmerLights_SwOn$2633,f
 18021  077A  0022               	movlb	2	; select bank2
 18022  077B  1E5E               	btfss	_DimmerLights2^(0+256),4
 18023  077C  1A67               	btfsc	_DimmerLights3^(0+256),4
 18024  077D  2F85               	goto	l9378
 18025  077E  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 18026  077F  2F85               	goto	l9378
 18027  0780  0023               	movlb	3	; select bank3
 18028  0781  1A20               	btfsc	_DimmerIntr3^(0+384),4
 18029  0782  2F85               	goto	l9378
 18030  0783  0020               	movlb	0	; select bank0
 18031  0784  01A7               	clrf	_setDimmerLights_SwOn$2633
 18032  0785                     l9378:	
 18033  0785  0020               	movlb	0	; select bank0
 18034  0786  0827               	movf	_setDimmerLights_SwOn$2633,w
 18035  0787  2FB1               	goto	L13
 18036  0788                     l9380:	
 18037                           ;Dimmer_B1.c: 752: } else if (sw == 2) {
 18038                           
 18039  0788  082B               	movf	setDimmerLights_SwOn@sw,w
 18040  0789  3A02               	xorlw	2
 18041  078A  1D03               	skipz
 18042  078B  2F9D               	goto	l9394
 18043                           
 18044                           ;Dimmer_B1.c: 753: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 18045                           ;Dimmer_B1.c: 754: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 18046  078C  01A8               	clrf	_setDimmerLights_SwOn$2642
 18047  078D  0AA8               	incf	_setDimmerLights_SwOn$2642,f
 18048  078E  0022               	movlb	2	; select bank2
 18049  078F  1E55               	btfss	_DimmerLights1^(0+256),4
 18050  0790  1A67               	btfsc	_DimmerLights3^(0+256),4
 18051  0791  2F9A               	goto	l9392
 18052  0792  0021               	movlb	1	; select bank1
 18053  0793  1A20               	btfsc	_DimmerIntr1^(0+128),4
 18054  0794  2F9A               	goto	l9392
 18055  0795  0023               	movlb	3	; select bank3
 18056  0796  1A20               	btfsc	_DimmerIntr3^(0+384),4
 18057  0797  2F9A               	goto	l9392
 18058  0798  0020               	movlb	0	; select bank0
 18059  0799  01A8               	clrf	_setDimmerLights_SwOn$2642
 18060  079A                     l9392:	
 18061  079A  0020               	movlb	0	; select bank0
 18062  079B  0828               	movf	_setDimmerLights_SwOn$2642,w
 18063  079C  2FB1               	goto	L13
 18064  079D                     l9394:	
 18065                           ;Dimmer_B1.c: 755: } else if (sw == 3) {
 18066                           
 18067  079D  082B               	movf	setDimmerLights_SwOn@sw,w
 18068  079E  3A03               	xorlw	3
 18069  079F  1D03               	skipz
 18070  07A0  2FB4               	goto	l9408
 18071                           
 18072                           ;Dimmer_B1.c: 756: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights2.DimmingTrig
      +                          ger == 1
 18073                           ;Dimmer_B1.c: 757: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr2.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 18074  07A1  01A9               	clrf	_setDimmerLights_SwOn$2643
 18075  07A2  0AA9               	incf	_setDimmerLights_SwOn$2643,f
 18076  07A3  0022               	movlb	2	; select bank2
 18077  07A4  1E55               	btfss	_DimmerLights1^(0+256),4
 18078  07A5  1A5E               	btfsc	_DimmerLights2^(0+256),4
 18079  07A6  2FAF               	goto	l9406
 18080  07A7  0021               	movlb	1	; select bank1
 18081  07A8  1A20               	btfsc	_DimmerIntr1^(0+128),4
 18082  07A9  2FAF               	goto	l9406
 18083  07AA  0022               	movlb	2	; select bank2
 18084  07AB  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 18085  07AC  2FAF               	goto	l9406
 18086  07AD  0020               	movlb	0	; select bank0
 18087  07AE  01A9               	clrf	_setDimmerLights_SwOn$2643
 18088  07AF                     l9406:	
 18089  07AF  0020               	movlb	0	; select bank0
 18090  07B0  0829               	movf	_setDimmerLights_SwOn$2643,w
 18091  07B1                     L13:	
 18092  07B1  00F9               	movwf	??_setDimmerLights_SwOn
 18093  07B2  0879               	movf	??_setDimmerLights_SwOn,w
 18094  07B3  00AA               	movwf	setDimmerLights_SwOn@idle
 18095  07B4                     l9408:	
 18096                           
 18097                           ;Dimmer_B1.c: 758: }
 18098                           ;Dimmer_B1.c: 759: }
 18099                           ;Dimmer_B1.c: 762: DimmerLights_SelectPointer(sw);
 18100  07B4  082B               	movf	setDimmerLights_SwOn@sw,w
 18101  07B5  319F  2738  3187   	fcall	_DimmerLights_SelectPointer
 18102                           
 18103                           ;Dimmer_B1.c: 763: if (idle == 0) {
 18104  07B8  0020               	movlb	0	; select bank0
 18105  07B9  08AA               	movf	setDimmerLights_SwOn@idle,f
 18106  07BA  1D03               	skipz
 18107  07BB  0008               	return
 18108                           
 18109                           ;Dimmer_B1.c: 765: if (dimmingStatus == 0) {
 18110  07BC  08A6               	movf	setDimmerLights_SwOn@dimmingStatus,f
 18111  07BD  1D03               	skipz
 18112  07BE  2FE0               	goto	l9420
 18113                           
 18114                           ;Dimmer_B1.c: 766: DimmerLights->SwFlag = 1;
 18115  07BF  0869               	movf	_DimmerLights,w
 18116  07C0  0086               	movwf	6
 18117  07C1  3001               	movlw	1	; select bank2/3
 18118  07C2  0087               	movwf	7
 18119  07C3  1401               	bsf	1,0
 18120                           
 18121                           ;Dimmer_B1.c: 767: if (DimmerLights->Status == 0) {
 18122  07C4  0A69               	incf	_DimmerLights,w
 18123  07C5  0086               	movwf	6
 18124  07C6  3001               	movlw	1	; select bank2/3
 18125  07C7  0087               	movwf	7
 18126  07C8  1801               	btfsc	1,0
 18127  07C9  2FDA               	goto	l9418
 18128                           
 18129                           ;Dimmer_B1.c: 768: DimmerLights->Status = 1;
 18130  07CA  0A69               	incf	_DimmerLights,w
 18131  07CB  0086               	movwf	6
 18132  07CC  3001               	movlw	1	; select bank2/3
 18133  07CD  0087               	movwf	7
 18134  07CE  1401               	bsf	1,0
 18135                           
 18136                           ;Dimmer_B1.c: 771: DimmerLights->Trigger = 1;
 18137  07CF  0869               	movf	_DimmerLights,w
 18138  07D0  0086               	movwf	6
 18139  07D1  3001               	movlw	1	; select bank2/3
 18140  07D2  0087               	movwf	7
 18141  07D3  1481               	bsf	1,1
 18142                           
 18143                           ;Dimmer_B1.c: 772: DimmerLights->Switch = 1;
 18144  07D4  0869               	movf	_DimmerLights,w
 18145  07D5  0086               	movwf	6
 18146  07D6  3001               	movlw	1	; select bank2/3
 18147  07D7  0087               	movwf	7
 18148  07D8  1501               	bsf	1,2
 18149                           
 18150                           ;Dimmer_B1.c: 779: } else {
 18151  07D9  2FEA               	goto	l9422
 18152  07DA                     l9418:	
 18153                           
 18154                           ;Dimmer_B1.c: 780: DimmerLights->Status = 0;
 18155  07DA  0A69               	incf	_DimmerLights,w
 18156  07DB  0086               	movwf	6
 18157  07DC  3001               	movlw	1	; select bank2/3
 18158  07DD  0087               	movwf	7
 18159  07DE  1001               	bcf	1,0
 18160                           
 18161                           ;Dimmer_B1.c: 781: }
 18162                           ;Dimmer_B1.c: 782: } else {
 18163  07DF  2FEA               	goto	l9422
 18164  07E0                     l9420:	
 18165                           
 18166                           ;Dimmer_B1.c: 783: DimmerLights->DimmingTrigger = 1;
 18167  07E0  0869               	movf	_DimmerLights,w
 18168  07E1  0086               	movwf	6
 18169  07E2  3001               	movlw	1	; select bank2/3
 18170  07E3  0087               	movwf	7
 18171  07E4  1601               	bsf	1,4
 18172                           
 18173                           ;Dimmer_B1.c: 784: DimmerLights->DimmingSwitch = 0;
 18174  07E5  0869               	movf	_DimmerLights,w
 18175  07E6  0086               	movwf	6
 18176  07E7  3001               	movlw	1	; select bank2/3
 18177  07E8  0087               	movwf	7
 18178  07E9  1281               	bcf	1,5
 18179  07EA                     l9422:	
 18180                           
 18181                           ;Dimmer_B1.c: 785: }
 18182                           ;Dimmer_B1.c: 786: setBuz(1, 100);
 18183  07EA  3064               	movlw	100
 18184  07EB  00A4               	movwf	setBuz@time
 18185  07EC  3000               	movlw	0
 18186  07ED  00A5               	movwf	setBuz@time+1
 18187  07EE  3001               	movlw	1
 18188  07EF  3195  25F3         	fcall	_setBuz
 18189  07F1  0008               	return
 18190  07F2                     __end_of_setDimmerLights_SwOn:	
 18191                           
 18192                           	psect	text123
 18193  15F3                     __ptext123:	
 18194 ;; *************** function _setBuz *****************
 18195 ;; Defined at:
 18196 ;;		line 22 in file "../src/Buzzer_B1.c"
 18197 ;; Parameters:    Size  Location     Type
 18198 ;;  count           1    wreg     unsigned char 
 18199 ;;  time            2    4[BANK0 ] int 
 18200 ;; Auto vars:     Size  Location     Type
 18201 ;;  count           1    8[COMMON] unsigned char 
 18202 ;; Return value:  Size  Location     Type
 18203 ;;		None               void
 18204 ;; Registers used:
 18205 ;;		wreg, status,2, status,0, pclath, cstack
 18206 ;; Tracked objects:
 18207 ;;		On entry : 0/0
 18208 ;;		On exit  : 0/0
 18209 ;;		Unchanged: 0/0
 18210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18214 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18215 ;;Total ram usage:        4 bytes
 18216 ;; Hardware stack levels used:    1
 18217 ;; Hardware stack levels required when called:    4
 18218 ;; This function calls:
 18219 ;;		___awdiv
 18220 ;; This function is called by:
 18221 ;;		_setDimmerLights_SwOn
 18222 ;;		_setDimmerLights_Dimming
 18223 ;;		_my_MainTimer
 18224 ;;		_Exception_Main
 18225 ;;		_setTemp_Main
 18226 ;;		_setLog_Code
 18227 ;;		_setRFSW_Control
 18228 ;;		_setRFSW_AdjControl
 18229 ;;		_setSw_Main
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           
 18234                           ;psect for function _setBuz
 18235  15F3                     _setBuz:	
 18236                           
 18237                           ;incstack = 0
 18238                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 18239                           ;setBuz@count stored from wreg
 18240  15F3  00F8               	movwf	setBuz@count
 18241                           
 18242                           ;Buzzer_B1.c: 23: time /= 20;
 18243  15F4  3014               	movlw	20
 18244  15F5  00F2               	movwf	___awdiv@divisor
 18245  15F6  3000               	movlw	0
 18246  15F7  00F3               	movwf	___awdiv@divisor+1
 18247  15F8  0020               	movlb	0	; select bank0
 18248  15F9  0825               	movf	setBuz@time+1,w
 18249  15FA  01F5               	clrf	___awdiv@dividend+1
 18250  15FB  07F5               	addwf	___awdiv@dividend+1,f
 18251  15FC  0824               	movf	setBuz@time,w
 18252  15FD  01F4               	clrf	___awdiv@dividend
 18253  15FE  07F4               	addwf	___awdiv@dividend,f
 18254  15FF  3196  269A  3195   	fcall	___awdiv
 18255  1602  0873               	movf	?___awdiv+1,w
 18256  1603  0020               	movlb	0	; select bank0
 18257  1604  01A5               	clrf	setBuz@time+1
 18258  1605  07A5               	addwf	setBuz@time+1,f
 18259  1606  0872               	movf	?___awdiv,w
 18260  1607  01A4               	clrf	setBuz@time
 18261  1608  07A4               	addwf	setBuz@time,f
 18262                           
 18263                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 18264  1609  0021               	movlb	1	; select bank1
 18265  160A  1C4C               	btfss	_Buz1^(0+128),0
 18266  160B  0008               	return
 18267                           
 18268                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 18269  160C  18CC               	btfsc	_Buz1^(0+128),1
 18270  160D  2E22               	goto	l108
 18271                           
 18272                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 18273  160E  14CC               	bsf	_Buz1^(0+128),1
 18274                           
 18275                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 18276  160F  01CD               	clrf	(_Buz1^(0+128)+1)
 18277  1610  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 18278                           
 18279                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 18280  1611  0878               	movf	setBuz@count,w
 18281  1612  00F7               	movwf	??_setBuz
 18282  1613  0877               	movf	??_setBuz,w
 18283  1614  00CF               	movwf	(_Buz1^(0+128)+3)
 18284                           
 18285                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 18286  1615  0020               	movlb	0	; select bank0
 18287  1616  0825               	movf	setBuz@time+1,w
 18288  1617  0021               	movlb	1	; select bank1
 18289  1618  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 18290  1619  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 18291  161A  0020               	movlb	0	; select bank0
 18292  161B  0824               	movf	setBuz@time,w
 18293  161C  0021               	movlb	1	; select bank1
 18294  161D  01D2               	clrf	(_Buz1^(0+128)+6)
 18295  161E  07D2               	addwf	(_Buz1^(0+128)+6),f
 18296                           
 18297                           ;Buzzer_B1.c: 30: RB3 = 1;
 18298  161F  0020               	movlb	0	; select bank0
 18299  1620  158D               	bsf	13,3	;volatile
 18300                           
 18301                           ;Buzzer_B1.c: 31: } else {
 18302  1621  0008               	return
 18303  1622                     l108:	
 18304                           
 18305                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 18306  1622  19CC               	btfsc	_Buz1^(0+128),3
 18307  1623  2E34               	goto	l110
 18308                           
 18309                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 18310  1624  15CC               	bsf	_Buz1^(0+128),3
 18311                           
 18312                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 18313  1625  0878               	movf	setBuz@count,w
 18314  1626  00F7               	movwf	??_setBuz
 18315  1627  0877               	movf	??_setBuz,w
 18316  1628  00D0               	movwf	(_Buz1^(0+128)+4)
 18317                           
 18318                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 18319  1629  0020               	movlb	0	; select bank0
 18320  162A  0825               	movf	setBuz@time+1,w
 18321  162B  0021               	movlb	1	; select bank1
 18322  162C  01D5               	clrf	((_Buz1+1)^(0+128)+8)
 18323  162D  07D5               	addwf	((_Buz1+1)^(0+128)+8),f
 18324  162E  0020               	movlb	0	; select bank0
 18325  162F  0824               	movf	setBuz@time,w
 18326  1630  0021               	movlb	1	; select bank1
 18327  1631  01D4               	clrf	(_Buz1^(0+128)+8)
 18328  1632  07D4               	addwf	(_Buz1^(0+128)+8),f
 18329                           
 18330                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 18331  1633  0008               	return
 18332  1634                     l110:	
 18333  1634  1A4C               	btfsc	_Buz1^(0+128),4
 18334  1635  0008               	return
 18335                           
 18336                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 18337  1636  164C               	bsf	_Buz1^(0+128),4
 18338                           
 18339                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 18340  1637  0878               	movf	setBuz@count,w
 18341  1638  00F7               	movwf	??_setBuz
 18342  1639  0877               	movf	??_setBuz,w
 18343  163A  00D1               	movwf	(_Buz1^(0+128)+5)
 18344                           
 18345                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 18346  163B  0020               	movlb	0	; select bank0
 18347  163C  0825               	movf	setBuz@time+1,w
 18348  163D  0021               	movlb	1	; select bank1
 18349  163E  01D7               	clrf	((_Buz1+1)^(0+128)+10)
 18350  163F  07D7               	addwf	((_Buz1+1)^(0+128)+10),f
 18351  1640  0020               	movlb	0	; select bank0
 18352  1641  0824               	movf	setBuz@time,w
 18353  1642  0021               	movlb	1	; select bank1
 18354  1643  01D6               	clrf	(_Buz1^(0+128)+10)
 18355  1644  07D6               	addwf	(_Buz1^(0+128)+10),f
 18356  1645  0008               	return
 18357  1646                     __end_of_setBuz:	
 18358                           
 18359                           	psect	text124
 18360  169A                     __ptext124:	
 18361 ;; *************** function ___awdiv *****************
 18362 ;; Defined at:
 18363 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  divisor         2    2[COMMON] int 
 18366 ;;  dividend        2    4[COMMON] int 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;  quotient        2    2[BANK0 ] int 
 18369 ;;  sign            1    1[BANK0 ] unsigned char 
 18370 ;;  counter         1    0[BANK0 ] unsigned char 
 18371 ;; Return value:  Size  Location     Type
 18372 ;;                  2    2[COMMON] int 
 18373 ;; Registers used:
 18374 ;;		wreg, status,2, status,0
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/0
 18377 ;;		On exit  : 0/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18383 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18384 ;;Total ram usage:        9 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; Hardware stack levels required when called:    3
 18387 ;; This function calls:
 18388 ;;		Nothing
 18389 ;; This function is called by:
 18390 ;;		_setBuz
 18391 ;; This function uses a non-reentrant model
 18392 ;;
 18393                           
 18394                           
 18395                           ;psect for function ___awdiv
 18396  169A                     ___awdiv:	
 18397                           
 18398                           ;incstack = 0
 18399                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 18400  169A  0020               	movlb	0	; select bank0
 18401  169B  01A1               	clrf	___awdiv@sign
 18402  169C  1FF3               	btfss	___awdiv@divisor+1,7
 18403  169D  2EA5               	goto	l9258
 18404  169E  09F2               	comf	___awdiv@divisor,f
 18405  169F  09F3               	comf	___awdiv@divisor+1,f
 18406  16A0  0AF2               	incf	___awdiv@divisor,f
 18407  16A1  1903               	skipnz
 18408  16A2  0AF3               	incf	___awdiv@divisor+1,f
 18409  16A3  01A1               	clrf	___awdiv@sign
 18410  16A4  0AA1               	incf	___awdiv@sign,f
 18411  16A5                     l9258:	
 18412  16A5  1FF5               	btfss	___awdiv@dividend+1,7
 18413  16A6  2EB0               	goto	l9264
 18414  16A7  09F4               	comf	___awdiv@dividend,f
 18415  16A8  09F5               	comf	___awdiv@dividend+1,f
 18416  16A9  0AF4               	incf	___awdiv@dividend,f
 18417  16AA  1903               	skipnz
 18418  16AB  0AF5               	incf	___awdiv@dividend+1,f
 18419  16AC  3001               	movlw	1
 18420  16AD  00F6               	movwf	??___awdiv
 18421  16AE  0876               	movf	??___awdiv,w
 18422  16AF  06A1               	xorwf	___awdiv@sign,f
 18423  16B0                     l9264:	
 18424  16B0  01A2               	clrf	___awdiv@quotient
 18425  16B1  01A3               	clrf	___awdiv@quotient+1
 18426  16B2  0873               	movf	___awdiv@divisor+1,w
 18427  16B3  0472               	iorwf	___awdiv@divisor,w
 18428  16B4  1903               	skipnz
 18429  16B5  2EDF               	goto	l9286
 18430  16B6  01A0               	clrf	___awdiv@counter
 18431  16B7  0AA0               	incf	___awdiv@counter,f
 18432  16B8                     l9274:	
 18433  16B8  1BF3               	btfsc	___awdiv@divisor+1,7
 18434  16B9  2EC4               	goto	l9276
 18435  16BA  3001               	movlw	1
 18436  16BB                     u9805:	
 18437  16BB  35F2               	lslf	___awdiv@divisor,f
 18438  16BC  0DF3               	rlf	___awdiv@divisor+1,f
 18439  16BD  0B89               	decfsz	9,f
 18440  16BE  2EBB               	goto	u9805
 18441  16BF  3001               	movlw	1
 18442  16C0  00F6               	movwf	??___awdiv
 18443  16C1  0876               	movf	??___awdiv,w
 18444  16C2  07A0               	addwf	___awdiv@counter,f
 18445  16C3  2EB8               	goto	l9274
 18446  16C4                     l9276:	
 18447  16C4  3001               	movlw	1
 18448  16C5                     u9825:	
 18449  16C5  35A2               	lslf	___awdiv@quotient,f
 18450  16C6  0DA3               	rlf	___awdiv@quotient+1,f
 18451  16C7  0B89               	decfsz	9,f
 18452  16C8  2EC5               	goto	u9825
 18453  16C9  0873               	movf	___awdiv@divisor+1,w
 18454  16CA  0275               	subwf	___awdiv@dividend+1,w
 18455  16CB  1D03               	skipz
 18456  16CC  2ECF               	goto	u9835
 18457  16CD  0872               	movf	___awdiv@divisor,w
 18458  16CE  0274               	subwf	___awdiv@dividend,w
 18459  16CF                     u9835:	
 18460  16CF  1C03               	skipc
 18461  16D0  2ED6               	goto	l9282
 18462  16D1  0872               	movf	___awdiv@divisor,w
 18463  16D2  02F4               	subwf	___awdiv@dividend,f
 18464  16D3  0873               	movf	___awdiv@divisor+1,w
 18465  16D4  3BF5               	subwfb	___awdiv@dividend+1,f
 18466  16D5  1422               	bsf	___awdiv@quotient,0
 18467  16D6                     l9282:	
 18468  16D6  3001               	movlw	1
 18469  16D7                     u9845:	
 18470  16D7  36F3               	lsrf	___awdiv@divisor+1,f
 18471  16D8  0CF2               	rrf	___awdiv@divisor,f
 18472  16D9  0B89               	decfsz	9,f
 18473  16DA  2ED7               	goto	u9845
 18474  16DB  3001               	movlw	1
 18475  16DC  02A0               	subwf	___awdiv@counter,f
 18476  16DD  1D03               	btfss	3,2
 18477  16DE  2EC4               	goto	l9276
 18478  16DF                     l9286:	
 18479  16DF  0821               	movf	___awdiv@sign,w
 18480  16E0  1903               	btfsc	3,2
 18481  16E1  2EE7               	goto	l9290
 18482  16E2  09A2               	comf	___awdiv@quotient,f
 18483  16E3  09A3               	comf	___awdiv@quotient+1,f
 18484  16E4  0AA2               	incf	___awdiv@quotient,f
 18485  16E5  1903               	skipnz
 18486  16E6  0AA3               	incf	___awdiv@quotient+1,f
 18487  16E7                     l9290:	
 18488  16E7  0823               	movf	___awdiv@quotient+1,w
 18489  16E8  01F3               	clrf	?___awdiv+1
 18490  16E9  07F3               	addwf	?___awdiv+1,f
 18491  16EA  0822               	movf	___awdiv@quotient,w
 18492  16EB  01F2               	clrf	?___awdiv
 18493  16EC  07F2               	addwf	?___awdiv,f
 18494  16ED  0008               	return
 18495  16EE                     __end_of___awdiv:	
 18496                           
 18497                           	psect	text125
 18498  1EDA                     __ptext125:	
 18499 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 18500 ;; Defined at:
 18501 ;;		line 241 in file "../src/Dimmer_B1.c"
 18502 ;; Parameters:    Size  Location     Type
 18503 ;;  lights          1    wreg     unsigned char 
 18504 ;; Auto vars:     Size  Location     Type
 18505 ;;  lights          1    3[COMMON] unsigned char 
 18506 ;;  status          1    2[COMMON] unsigned char 
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  1    wreg      unsigned char 
 18509 ;; Registers used:
 18510 ;;		wreg, status,2
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;Total ram usage:        2 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:    3
 18523 ;; This function calls:
 18524 ;;		Nothing
 18525 ;; This function is called by:
 18526 ;;		_setDimmerLights_SwOn
 18527 ;;		_setRF_AdjControl
 18528 ;; This function uses a non-reentrant model
 18529 ;;
 18530                           
 18531                           
 18532                           ;psect for function _getDimmerIntr_Dimming_Sw
 18533  1EDA                     _getDimmerIntr_Dimming_Sw:	
 18534                           
 18535                           ;incstack = 0
 18536                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 18537                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 18538  1EDA  00F3               	movwf	getDimmerIntr_Dimming_Sw@lights
 18539                           
 18540                           ;Dimmer_B1.c: 242: char status = 0;
 18541  1EDB  01F2               	clrf	getDimmerIntr_Dimming_Sw@status
 18542                           
 18543                           ;Dimmer_B1.c: 244: if (lights == 1) {
 18544  1EDC  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 18545  1EDD  3A01               	xorlw	1
 18546  1EDE  1D03               	skipz
 18547  1EDF  2EE5               	goto	l6540
 18548                           
 18549                           ;Dimmer_B1.c: 245: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 18550  1EE0  3000               	movlw	0
 18551  1EE1  0021               	movlb	1	; select bank1
 18552  1EE2  1A20               	btfsc	_DimmerIntr1^(0+128),4
 18553  1EE3  3001               	movlw	1
 18554  1EE4  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 18555  1EE5                     l6540:	
 18556                           
 18557                           ;Dimmer_B1.c: 246: }
 18558                           ;Dimmer_B1.c: 249: if (lights == 2) {
 18559  1EE5  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 18560  1EE6  3A02               	xorlw	2
 18561  1EE7  1D03               	skipz
 18562  1EE8  2EEE               	goto	l6544
 18563                           
 18564                           ;Dimmer_B1.c: 250: status = DimmerIntr2.Dimming_Sw == 1 ? 1 : 0;
 18565  1EE9  3000               	movlw	0
 18566  1EEA  0022               	movlb	2	; select bank2
 18567  1EEB  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 18568  1EEC  3001               	movlw	1
 18569  1EED  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 18570  1EEE                     l6544:	
 18571                           
 18572                           ;Dimmer_B1.c: 251: }
 18573                           ;Dimmer_B1.c: 254: if (lights == 3) {
 18574  1EEE  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 18575  1EEF  3A03               	xorlw	3
 18576  1EF0  1D03               	skipz
 18577  1EF1  2EF7               	goto	l6548
 18578                           
 18579                           ;Dimmer_B1.c: 255: status = DimmerIntr3.Dimming_Sw == 1 ? 1 : 0;
 18580  1EF2  3000               	movlw	0
 18581  1EF3  0023               	movlb	3	; select bank3
 18582  1EF4  1A20               	btfsc	_DimmerIntr3^(0+384),4
 18583  1EF5  3001               	movlw	1
 18584  1EF6  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 18585  1EF7                     l6548:	
 18586                           
 18587                           ;Dimmer_B1.c: 256: }
 18588                           ;Dimmer_B1.c: 259: return status;
 18589  1EF7  0872               	movf	getDimmerIntr_Dimming_Sw@status,w
 18590  1EF8  0008               	return
 18591  1EF9                     __end_of_getDimmerIntr_Dimming_Sw:	
 18592                           
 18593                           	psect	text126
 18594  1243                     __ptext126:	
 18595 ;; *************** function _setDimmerLights_SwOff *****************
 18596 ;; Defined at:
 18597 ;;		line 791 in file "../src/Dimmer_B1.c"
 18598 ;; Parameters:    Size  Location     Type
 18599 ;;  sw              1    wreg     unsigned char 
 18600 ;; Auto vars:     Size  Location     Type
 18601 ;;  sw              1    4[COMMON] unsigned char 
 18602 ;; Return value:  Size  Location     Type
 18603 ;;		None               void
 18604 ;; Registers used:
 18605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18606 ;; Tracked objects:
 18607 ;;		On entry : 0/0
 18608 ;;		On exit  : 0/0
 18609 ;;		Unchanged: 0/0
 18610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18615 ;;Total ram usage:        1 bytes
 18616 ;; Hardware stack levels used:    1
 18617 ;; Hardware stack levels required when called:    4
 18618 ;; This function calls:
 18619 ;;		_DimmerLights_SelectPointer
 18620 ;; This function is called by:
 18621 ;;		_DlyOff_Main
 18622 ;;		_Exception_Main
 18623 ;;		_setControl_Lights_Table
 18624 ;;		_setRFSW_Control
 18625 ;;		_setRFSW_AdjControl
 18626 ;;		_setSw_Main
 18627 ;; This function uses a non-reentrant model
 18628 ;;
 18629                           
 18630                           
 18631                           ;psect for function _setDimmerLights_SwOff
 18632  1243                     _setDimmerLights_SwOff:	
 18633                           
 18634                           ;incstack = 0
 18635                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18636                           ;setDimmerLights_SwOff@sw stored from wreg
 18637  1243  00F4               	movwf	setDimmerLights_SwOff@sw
 18638                           
 18639                           ;Dimmer_B1.c: 793: DimmerLights_SelectPointer(sw);
 18640  1244  0874               	movf	setDimmerLights_SwOff@sw,w
 18641  1245  319F  2738  3192   	fcall	_DimmerLights_SelectPointer
 18642                           
 18643                           ;Dimmer_B1.c: 795: if (DimmerLights->SwFlag == 1) {
 18644  1248  0020               	movlb	0	; select bank0
 18645  1249  0869               	movf	_DimmerLights,w
 18646  124A  0086               	movwf	6
 18647  124B  3001               	movlw	1	; select bank2/3
 18648  124C  0087               	movwf	7
 18649  124D  1C01               	btfss	1,0
 18650  124E  0008               	return
 18651                           
 18652                           ;Dimmer_B1.c: 796: DimmerLights->SwFlag = 0;
 18653  124F  0869               	movf	_DimmerLights,w
 18654  1250  0086               	movwf	6
 18655  1251  3001               	movlw	1	; select bank2/3
 18656  1252  0087               	movwf	7
 18657  1253  1001               	bcf	1,0
 18658                           
 18659                           ;Dimmer_B1.c: 797: if (DimmerLights->Status == 1) {
 18660  1254  0A69               	incf	_DimmerLights,w
 18661  1255  0086               	movwf	6
 18662  1256  3001               	movlw	1	; select bank2/3
 18663  1257  0087               	movwf	7
 18664  1258  1C01               	btfss	1,0
 18665  1259  2A70               	goto	l6912
 18666                           
 18667                           ;Dimmer_B1.c: 798: if (DimmerLights->DimmingSwFlag == 1) {
 18668  125A  0869               	movf	_DimmerLights,w
 18669  125B  0086               	movwf	6
 18670  125C  3001               	movlw	1	; select bank2/3
 18671  125D  0087               	movwf	7
 18672  125E  1D81               	btfss	1,3
 18673  125F  0008               	return
 18674                           
 18675                           ;Dimmer_B1.c: 799: DimmerLights->DimmingSwFlag = 0;
 18676  1260  0869               	movf	_DimmerLights,w
 18677  1261  0086               	movwf	6
 18678  1262  3001               	movlw	1	; select bank2/3
 18679  1263  0087               	movwf	7
 18680  1264  1181               	bcf	1,3
 18681                           
 18682                           ;Dimmer_B1.c: 801: DimmerLights->DimmingTrigger = 1;
 18683  1265  0869               	movf	_DimmerLights,w
 18684  1266  0086               	movwf	6
 18685  1267  3001               	movlw	1	; select bank2/3
 18686  1268  0087               	movwf	7
 18687  1269  1601               	bsf	1,4
 18688                           
 18689                           ;Dimmer_B1.c: 802: DimmerLights->DimmingSwitch = 0;
 18690  126A  0869               	movf	_DimmerLights,w
 18691  126B  0086               	movwf	6
 18692  126C  3001               	movlw	1	; select bank2/3
 18693  126D  0087               	movwf	7
 18694  126E  1281               	bcf	1,5
 18695                           
 18696                           ;Dimmer_B1.c: 803: }
 18697                           ;Dimmer_B1.c: 804: } else {
 18698  126F  0008               	return
 18699  1270                     l6912:	
 18700                           
 18701                           ;Dimmer_B1.c: 807: DimmerLights->Trigger = 1;
 18702  1270  0869               	movf	_DimmerLights,w
 18703  1271  0086               	movwf	6
 18704  1272  3001               	movlw	1	; select bank2/3
 18705  1273  0087               	movwf	7
 18706  1274  1481               	bsf	1,1
 18707                           
 18708                           ;Dimmer_B1.c: 808: DimmerLights->Switch = 0;
 18709  1275  0869               	movf	_DimmerLights,w
 18710  1276  0086               	movwf	6
 18711  1277  3001               	movlw	1	; select bank2/3
 18712  1278  0087               	movwf	7
 18713  1279  1101               	bcf	1,2
 18714  127A  0008               	return
 18715  127B                     __end_of_setDimmerLights_SwOff:	
 18716                           
 18717                           	psect	text127
 18718  1BE1                     __ptext127:	
 18719 ;; *************** function _getDimmerLights_Status *****************
 18720 ;; Defined at:
 18721 ;;		line 1208 in file "../src/Dimmer_B1.c"
 18722 ;; Parameters:    Size  Location     Type
 18723 ;;  lights          1    wreg     unsigned char 
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;  lights          1    4[COMMON] unsigned char 
 18726 ;;  status          1    5[COMMON] unsigned char 
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      unsigned char 
 18729 ;; Registers used:
 18730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;Total ram usage:        2 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; Hardware stack levels required when called:    4
 18743 ;; This function calls:
 18744 ;;		_DimmerLights_SelectPointer
 18745 ;; This function is called by:
 18746 ;;		_DlyOff_Main
 18747 ;;		_Exception_Main
 18748 ;;		_setControl_Lights_Table
 18749 ;;		_setRFSW_Control
 18750 ;;		_setRFSW_AdjControl
 18751 ;;		_setRF_AdjControl
 18752 ;;		_DimmerLights_AssignationDimming
 18753 ;; This function uses a non-reentrant model
 18754 ;;
 18755                           
 18756                           
 18757                           ;psect for function _getDimmerLights_Status
 18758  1BE1                     _getDimmerLights_Status:	
 18759                           
 18760                           ;incstack = 0
 18761                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18762                           ;getDimmerLights_Status@lights stored from wreg
 18763  1BE1  00F4               	movwf	getDimmerLights_Status@lights
 18764                           
 18765                           ;Dimmer_B1.c: 1209: DimmerLights_SelectPointer(lights);
 18766  1BE2  0874               	movf	getDimmerLights_Status@lights,w
 18767  1BE3  319F  2738         	fcall	_DimmerLights_SelectPointer
 18768                           
 18769                           ;Dimmer_B1.c: 1210: char status = DimmerLights->Status == 1 ? 1 : 0;
 18770  1BE5  0020               	movlb	0	; select bank0
 18771  1BE6  0A69               	incf	_DimmerLights,w
 18772  1BE7  0086               	movwf	6
 18773  1BE8  3001               	movlw	1	; select bank2/3
 18774  1BE9  0087               	movwf	7
 18775  1BEA  3000               	movlw	0
 18776  1BEB  1801               	btfsc	1,0
 18777  1BEC  3001               	movlw	1
 18778  1BED  00F5               	movwf	getDimmerLights_Status@status
 18779                           
 18780                           ;Dimmer_B1.c: 1211: return status;
 18781  1BEE  0875               	movf	getDimmerLights_Status@status,w
 18782  1BEF  0008               	return
 18783  1BF0                     __end_of_getDimmerLights_Status:	
 18784                           
 18785                           	psect	text128
 18786  1F38                     __ptext128:	
 18787 ;; *************** function _DimmerLights_SelectPointer *****************
 18788 ;; Defined at:
 18789 ;;		line 654 in file "../src/Dimmer_B1.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;  lights          1    wreg     unsigned char 
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;  lights          1    3[COMMON] unsigned char 
 18794 ;; Return value:  Size  Location     Type
 18795 ;;		None               void
 18796 ;; Registers used:
 18797 ;;		wreg
 18798 ;; Tracked objects:
 18799 ;;		On entry : 0/0
 18800 ;;		On exit  : 0/0
 18801 ;;		Unchanged: 0/0
 18802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18807 ;;Total ram usage:        2 bytes
 18808 ;; Hardware stack levels used:    1
 18809 ;; Hardware stack levels required when called:    3
 18810 ;; This function calls:
 18811 ;;		Nothing
 18812 ;; This function is called by:
 18813 ;;		_setDimmerLights_SwOn
 18814 ;;		_setDimmerLights_SwOff
 18815 ;;		_setDimmerLights_DimmingOn
 18816 ;;		_setDimmerLights_Main
 18817 ;;		_getDimmerLights_Status
 18818 ;;		_setDimmerLights_DimmingRun
 18819 ;;		_setRF_AdjControl
 18820 ;;		_DimmerLights_TwoPhase_Main
 18821 ;;		_setDimmerLights_Status
 18822 ;; This function uses a non-reentrant model
 18823 ;;
 18824                           
 18825                           
 18826                           ;psect for function _DimmerLights_SelectPointer
 18827  1F38                     _DimmerLights_SelectPointer:	
 18828                           
 18829                           ;incstack = 0
 18830                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 18831                           ;DimmerLights_SelectPointer@lights stored from wreg
 18832  1F38  00F3               	movwf	DimmerLights_SelectPointer@lights
 18833                           
 18834                           ;Dimmer_B1.c: 656: if (lights == 1) {
 18835  1F39  0873               	movf	DimmerLights_SelectPointer@lights,w
 18836  1F3A  3A01               	xorlw	1
 18837  1F3B  1D03               	skipz
 18838  1F3C  2F43               	goto	l6556
 18839                           
 18840                           ;Dimmer_B1.c: 657: DimmerLights = &DimmerLights1;
 18841  1F3D  3055               	movlw	_DimmerLights1& (0+255)
 18842  1F3E  00F2               	movwf	??_DimmerLights_SelectPointer
 18843  1F3F  0872               	movf	??_DimmerLights_SelectPointer,w
 18844  1F40  0020               	movlb	0	; select bank0
 18845  1F41  00E9               	movwf	_DimmerLights
 18846                           
 18847                           ;Dimmer_B1.c: 658: }
 18848  1F42  0008               	return
 18849  1F43                     l6556:	
 18850                           
 18851                           ;Dimmer_B1.c: 661: else if (lights == 2) {
 18852  1F43  0873               	movf	DimmerLights_SelectPointer@lights,w
 18853  1F44  3A02               	xorlw	2
 18854  1F45  1D03               	skipz
 18855  1F46  2F4D               	goto	l6560
 18856                           
 18857                           ;Dimmer_B1.c: 662: DimmerLights = &DimmerLights2;
 18858  1F47  305E               	movlw	_DimmerLights2& (0+255)
 18859  1F48  00F2               	movwf	??_DimmerLights_SelectPointer
 18860  1F49  0872               	movf	??_DimmerLights_SelectPointer,w
 18861  1F4A  0020               	movlb	0	; select bank0
 18862  1F4B  00E9               	movwf	_DimmerLights
 18863                           
 18864                           ;Dimmer_B1.c: 663: }
 18865  1F4C  0008               	return
 18866  1F4D                     l6560:	
 18867                           
 18868                           ;Dimmer_B1.c: 666: else if (lights == 3) {
 18869  1F4D  0873               	movf	DimmerLights_SelectPointer@lights,w
 18870  1F4E  3A03               	xorlw	3
 18871  1F4F  1D03               	skipz
 18872  1F50  0008               	return
 18873                           
 18874                           ;Dimmer_B1.c: 667: DimmerLights = &DimmerLights3;
 18875  1F51  3067               	movlw	_DimmerLights3& (0+255)
 18876  1F52  00F2               	movwf	??_DimmerLights_SelectPointer
 18877  1F53  0872               	movf	??_DimmerLights_SelectPointer,w
 18878  1F54  0020               	movlb	0	; select bank0
 18879  1F55  00E9               	movwf	_DimmerLights
 18880                           
 18881                           ;Dimmer_B1.c: 668: __nop();
 18882  1F56  0000               	nop
 18883                           
 18884                           ;Dimmer_B1.c: 669: __nop();
 18885  1F57  0000               	nop
 18886  1F58  0008               	return
 18887  1F59                     __end_of_DimmerLights_SelectPointer:	
 18888                           
 18889                           	psect	text129
 18890  1B96                     __ptext129:	
 18891 ;; *************** function _DelayOff_Initialization *****************
 18892 ;; Defined at:
 18893 ;;		line 26 in file "../src/DelayOff_B1.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;		None
 18896 ;; Auto vars:     Size  Location     Type
 18897 ;;		None
 18898 ;; Return value:  Size  Location     Type
 18899 ;;		None               void
 18900 ;; Registers used:
 18901 ;;		wreg, status,2, status,0, pclath, cstack
 18902 ;; Tracked objects:
 18903 ;;		On entry : 0/0
 18904 ;;		On exit  : 0/0
 18905 ;;		Unchanged: 0/0
 18906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18911 ;;Total ram usage:        0 bytes
 18912 ;; Hardware stack levels used:    1
 18913 ;; Hardware stack levels required when called:    5
 18914 ;; This function calls:
 18915 ;;		_DlyOff_Initialization
 18916 ;; This function is called by:
 18917 ;;		_main
 18918 ;; This function uses a non-reentrant model
 18919 ;;
 18920                           
 18921                           
 18922                           ;psect for function _DelayOff_Initialization
 18923  1B96                     _DelayOff_Initialization:	
 18924                           
 18925                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 18926                           
 18927                           ;incstack = 0
 18928                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 18929  1B96  3001               	movlw	1
 18930  1B97  319B  231A  319B   	fcall	_DlyOff_Initialization
 18931                           
 18932                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 18933  1B9A  3002               	movlw	2
 18934  1B9B  319B  231A  319B   	fcall	_DlyOff_Initialization
 18935                           
 18936                           ;DelayOff_B1.c: 36: DlyOff_Initialization(3);
 18937  1B9E  3003               	movlw	3
 18938  1B9F  319B  231A         	fcall	_DlyOff_Initialization
 18939  1BA1  0008               	return
 18940  1BA2                     __end_of_DelayOff_Initialization:	
 18941                           
 18942                           	psect	text130
 18943  1B1A                     __ptext130:	
 18944 ;; *************** function _DlyOff_Initialization *****************
 18945 ;; Defined at:
 18946 ;;		line 56 in file "../src/DelayOff_B1.c"
 18947 ;; Parameters:    Size  Location     Type
 18948 ;;  sw              1    wreg     unsigned char 
 18949 ;; Auto vars:     Size  Location     Type
 18950 ;;  sw              1    4[COMMON] unsigned char 
 18951 ;; Return value:  Size  Location     Type
 18952 ;;		None               void
 18953 ;; Registers used:
 18954 ;;		wreg, status,2, status,0, pclath, cstack
 18955 ;; Tracked objects:
 18956 ;;		On entry : 0/0
 18957 ;;		On exit  : 0/0
 18958 ;;		Unchanged: 0/0
 18959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18964 ;;Total ram usage:        1 bytes
 18965 ;; Hardware stack levels used:    1
 18966 ;; Hardware stack levels required when called:    4
 18967 ;; This function calls:
 18968 ;;		_DelayOffPointSelect
 18969 ;; This function is called by:
 18970 ;;		_DelayOff_Initialization
 18971 ;; This function uses a non-reentrant model
 18972 ;;
 18973                           
 18974                           
 18975                           ;psect for function _DlyOff_Initialization
 18976  1B1A                     _DlyOff_Initialization:	
 18977                           
 18978                           ;incstack = 0
 18979                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 18980                           ;DlyOff_Initialization@sw stored from wreg
 18981  1B1A  00F4               	movwf	DlyOff_Initialization@sw
 18982                           
 18983                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 18984  1B1B  0874               	movf	DlyOff_Initialization@sw,w
 18985  1B1C  319E  26BB         	fcall	_DelayOffPointSelect
 18986  1B1E  0008               	return
 18987  1B1F                     __end_of_DlyOff_Initialization:	
 18988                           
 18989                           	psect	text131
 18990  1EBB                     __ptext131:	
 18991 ;; *************** function _DelayOffPointSelect *****************
 18992 ;; Defined at:
 18993 ;;		line 7 in file "../src/DelayOff_B1.c"
 18994 ;; Parameters:    Size  Location     Type
 18995 ;;  sw              1    wreg     unsigned char 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;  sw              1    3[COMMON] unsigned char 
 18998 ;; Return value:  Size  Location     Type
 18999 ;;		None               void
 19000 ;; Registers used:
 19001 ;;		wreg
 19002 ;; Tracked objects:
 19003 ;;		On entry : 0/0
 19004 ;;		On exit  : 0/0
 19005 ;;		Unchanged: 0/0
 19006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19011 ;;Total ram usage:        2 bytes
 19012 ;; Hardware stack levels used:    1
 19013 ;; Hardware stack levels required when called:    3
 19014 ;; This function calls:
 19015 ;;		Nothing
 19016 ;; This function is called by:
 19017 ;;		_DlyOff_Initialization
 19018 ;;		_DlyOff_Main
 19019 ;;		_setDelayOff_GO
 19020 ;;		_getDelayOff_GO
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           
 19025                           ;psect for function _DelayOffPointSelect
 19026  1EBB                     _DelayOffPointSelect:	
 19027                           
 19028                           ;incstack = 0
 19029                           ; Regs used in _DelayOffPointSelect: [wreg]
 19030                           ;DelayOffPointSelect@sw stored from wreg
 19031  1EBB  00F3               	movwf	DelayOffPointSelect@sw
 19032                           
 19033                           ;DelayOff_B1.c: 9: if (sw == 1) {
 19034  1EBC  0873               	movf	DelayOffPointSelect@sw,w
 19035  1EBD  3A01               	xorlw	1
 19036  1EBE  1D03               	skipz
 19037  1EBF  2EC6               	goto	l6524
 19038                           
 19039                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 19040  1EC0  30D0               	movlw	_DlySw1& (0+255)
 19041  1EC1  00F2               	movwf	??_DelayOffPointSelect
 19042  1EC2  0872               	movf	??_DelayOffPointSelect,w
 19043  1EC3  0020               	movlb	0	; select bank0
 19044  1EC4  00E8               	movwf	_DelayOff
 19045                           
 19046                           ;DelayOff_B1.c: 11: }
 19047  1EC5  0008               	return
 19048  1EC6                     l6524:	
 19049                           
 19050                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 19051  1EC6  0873               	movf	DelayOffPointSelect@sw,w
 19052  1EC7  3A02               	xorlw	2
 19053  1EC8  1D03               	skipz
 19054  1EC9  2ED0               	goto	l6528
 19055                           
 19056                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 19057  1ECA  30D5               	movlw	_DlySw2& (0+255)
 19058  1ECB  00F2               	movwf	??_DelayOffPointSelect
 19059  1ECC  0872               	movf	??_DelayOffPointSelect,w
 19060  1ECD  0020               	movlb	0	; select bank0
 19061  1ECE  00E8               	movwf	_DelayOff
 19062                           
 19063                           ;DelayOff_B1.c: 16: }
 19064  1ECF  0008               	return
 19065  1ED0                     l6528:	
 19066                           
 19067                           ;DelayOff_B1.c: 19: else if (sw == 3) {
 19068  1ED0  0873               	movf	DelayOffPointSelect@sw,w
 19069  1ED1  3A03               	xorlw	3
 19070  1ED2  1D03               	skipz
 19071  1ED3  0008               	return
 19072                           
 19073                           ;DelayOff_B1.c: 20: DelayOff = &DlySw3;
 19074  1ED4  30DA               	movlw	_DlySw3& (0+255)
 19075  1ED5  00F2               	movwf	??_DelayOffPointSelect
 19076  1ED6  0872               	movf	??_DelayOffPointSelect,w
 19077  1ED7  0020               	movlb	0	; select bank0
 19078  1ED8  00E8               	movwf	_DelayOff
 19079  1ED9  0008               	return
 19080  1EDA                     __end_of_DelayOffPointSelect:	
 19081                           
 19082                           	psect	text132
 19083  1433                     __ptext132:	
 19084 ;; *************** function _Buzzer_Main *****************
 19085 ;; Defined at:
 19086 ;;		line 46 in file "../src/Buzzer_B1.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;		None
 19089 ;; Auto vars:     Size  Location     Type
 19090 ;;		None
 19091 ;; Return value:  Size  Location     Type
 19092 ;;		None               void
 19093 ;; Registers used:
 19094 ;;		wreg, status,2, status,0
 19095 ;; Tracked objects:
 19096 ;;		On entry : 0/0
 19097 ;;		On exit  : 0/0
 19098 ;;		Unchanged: 0/0
 19099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;Total ram usage:        1 bytes
 19105 ;; Hardware stack levels used:    1
 19106 ;; Hardware stack levels required when called:    3
 19107 ;; This function calls:
 19108 ;;		Nothing
 19109 ;; This function is called by:
 19110 ;;		_main
 19111 ;; This function uses a non-reentrant model
 19112 ;;
 19113                           
 19114                           
 19115                           ;psect for function _Buzzer_Main
 19116  1433                     _Buzzer_Main:	
 19117                           
 19118                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 19119                           
 19120                           ;incstack = 0
 19121                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 19122  1433  0021               	movlb	1	; select bank1
 19123  1434  1CCC               	btfss	_Buz1^(0+128),1
 19124  1435  0008               	return
 19125                           
 19126                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 19127  1436  3001               	movlw	1
 19128  1437  07CD               	addwf	(_Buz1^(0+128)+1),f
 19129  1438  3000               	movlw	0
 19130  1439  3DCE               	addwfc	((_Buz1+1)^(0+128)+1),f
 19131                           
 19132                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 19133  143A  0853               	movf	((_Buz1+1)^(0+128)+6),w
 19134  143B  024E               	subwf	((_Buz1+1)^(0+128)+1),w
 19135  143C  1D03               	skipz
 19136  143D  2C40               	goto	u8885
 19137  143E  0852               	movf	(_Buz1^(0+128)+6),w
 19138  143F  024D               	subwf	(_Buz1^(0+128)+1),w
 19139  1440                     u8885:	
 19140  1440  1C03               	skipc
 19141  1441  0008               	return
 19142                           
 19143                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 19144  1442  01CD               	clrf	(_Buz1^(0+128)+1)
 19145  1443  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 19146                           
 19147                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 19148  1444  12CC               	bcf	_Buz1^(0+128),5
 19149  1445  0020               	movlb	0	; select bank0
 19150  1446  1D8D               	btfss	13,3	;volatile
 19151  1447  2C4A               	goto	l8684
 19152  1448  0021               	movlb	1	; select bank1
 19153  1449  16CC               	bsf	_Buz1^(0+128),5
 19154  144A                     l8684:	
 19155                           
 19156                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 19157  144A  0021               	movlb	1	; select bank1
 19158  144B  1ACC               	btfsc	_Buz1^(0+128),5
 19159  144C  2C72               	goto	l118
 19160                           
 19161                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 19162  144D  08CF               	movf	(_Buz1^(0+128)+3),f
 19163  144E  1D03               	skipz
 19164  144F  2C6E               	goto	l119
 19165                           
 19166                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 19167  1450  1DCC               	btfss	_Buz1^(0+128),3
 19168  1451  2C5E               	goto	l120
 19169                           
 19170                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 19171  1452  11CC               	bcf	_Buz1^(0+128),3
 19172                           
 19173                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 19174  1453  0850               	movf	(_Buz1^(0+128)+4),w
 19175  1454  00F2               	movwf	??_Buzzer_Main
 19176  1455  0872               	movf	??_Buzzer_Main,w
 19177  1456  00CF               	movwf	(_Buz1^(0+128)+3)
 19178                           
 19179                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 19180  1457  0855               	movf	((_Buz1+1)^(0+128)+8),w
 19181  1458  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 19182  1459  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 19183  145A  0854               	movf	(_Buz1^(0+128)+8),w
 19184  145B  01D2               	clrf	(_Buz1^(0+128)+6)
 19185  145C  07D2               	addwf	(_Buz1^(0+128)+6),f
 19186                           
 19187                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 19188  145D  0008               	return
 19189  145E                     l120:	
 19190  145E  1E4C               	btfss	_Buz1^(0+128),4
 19191  145F  2C6C               	goto	l122
 19192                           
 19193                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 19194  1460  124C               	bcf	_Buz1^(0+128),4
 19195                           
 19196                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 19197  1461  0851               	movf	(_Buz1^(0+128)+5),w
 19198  1462  00F2               	movwf	??_Buzzer_Main
 19199  1463  0872               	movf	??_Buzzer_Main,w
 19200  1464  00CF               	movwf	(_Buz1^(0+128)+3)
 19201                           
 19202                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 19203  1465  0857               	movf	((_Buz1+1)^(0+128)+10),w
 19204  1466  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 19205  1467  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 19206  1468  0856               	movf	(_Buz1^(0+128)+10),w
 19207  1469  01D2               	clrf	(_Buz1^(0+128)+6)
 19208  146A  07D2               	addwf	(_Buz1^(0+128)+6),f
 19209                           
 19210                           ;Buzzer_B1.c: 62: } else {
 19211  146B  0008               	return
 19212  146C                     l122:	
 19213                           
 19214                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 19215  146C  10CC               	bcf	_Buz1^(0+128),1
 19216                           
 19217                           ;Buzzer_B1.c: 64: }
 19218                           ;Buzzer_B1.c: 65: } else {
 19219  146D  0008               	return
 19220  146E                     l119:	
 19221                           
 19222                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 19223  146E  16CC               	bsf	_Buz1^(0+128),5
 19224                           
 19225                           ;Buzzer_B1.c: 68: RB3 = 1;
 19226  146F  0020               	movlb	0	; select bank0
 19227  1470  158D               	bsf	13,3	;volatile
 19228                           
 19229                           ;Buzzer_B1.c: 69: }
 19230                           ;Buzzer_B1.c: 70: } else {
 19231  1471  0008               	return
 19232  1472                     l118:	
 19233                           
 19234                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 19235  1472  12CC               	bcf	_Buz1^(0+128),5
 19236                           
 19237                           ;Buzzer_B1.c: 73: RB3 = 0;
 19238  1473  0020               	movlb	0	; select bank0
 19239  1474  118D               	bcf	13,3	;volatile
 19240                           
 19241                           ;Buzzer_B1.c: 75: Buz1.Count--;
 19242  1475  3001               	movlw	1
 19243  1476  0021               	movlb	1	; select bank1
 19244  1477  02CF               	subwf	(_Buz1^(0+128)+3),f
 19245  1478  0008               	return
 19246  1479                     __end_of_Buzzer_Main:	
 19247                           
 19248                           	psect	text133
 19249  1AF7                     __ptext133:	
 19250 ;; *************** function _Buzzer_Initialization *****************
 19251 ;; Defined at:
 19252 ;;		line 11 in file "../src/Buzzer_B1.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;		None
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;		None
 19257 ;; Return value:  Size  Location     Type
 19258 ;;		None               void
 19259 ;; Registers used:
 19260 ;;		None
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19270 ;;Total ram usage:        0 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:    3
 19273 ;; This function calls:
 19274 ;;		Nothing
 19275 ;; This function is called by:
 19276 ;;		_main
 19277 ;; This function uses a non-reentrant model
 19278 ;;
 19279                           
 19280                           
 19281                           ;psect for function _Buzzer_Initialization
 19282  1AF7                     _Buzzer_Initialization:	
 19283                           
 19284                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 19285                           
 19286                           ;incstack = 0
 19287                           ; Regs used in _Buzzer_Initialization: []
 19288  1AF7  0021               	movlb	1	; select bank1
 19289  1AF8  144C               	bsf	_Buz1^(0+128),0
 19290  1AF9  0008               	return
 19291  1AFA                     __end_of_Buzzer_Initialization:	
 19292                           
 19293                           	psect	intentry
 19294  0004                     __pintentry:	
 19295 ;; *************** function _ISR *****************
 19296 ;; Defined at:
 19297 ;;		line 116 in file "../src/MCU_B1.c"
 19298 ;; Parameters:    Size  Location     Type
 19299 ;;		None
 19300 ;; Auto vars:     Size  Location     Type
 19301 ;;		None
 19302 ;; Return value:  Size  Location     Type
 19303 ;;		None               void
 19304 ;; Registers used:
 19305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19306 ;; Tracked objects:
 19307 ;;		On entry : 0/0
 19308 ;;		On exit  : 0/0
 19309 ;;		Unchanged: 0/0
 19310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19315 ;;Total ram usage:        1 bytes
 19316 ;; Hardware stack levels used:    1
 19317 ;; Hardware stack levels required when called:    2
 19318 ;; This function calls:
 19319 ;;		_IOC_ISR
 19320 ;;		_TMR1_ISR
 19321 ;; This function is called by:
 19322 ;;		Interrupt level 1
 19323 ;; This function uses a non-reentrant model
 19324 ;;
 19325                           
 19326  0004                     _ISR:	
 19327                           
 19328                           ;incstack = 0
 19329                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19330  0004  147E               	bsf	126,0	;set compiler interrupt flag
 19331  0005  3180               	pagesel	$
 19332  0006  0020               	movlb	0	; select bank0
 19333  0007  087F               	movf	127,w
 19334  0008  00F1               	movwf	??_ISR
 19335                           
 19336                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 19337  0009  0021               	movlb	1	; select bank1
 19338  000A  1C11               	btfss	17,0	;volatile
 19339  000B  2812               	goto	i1l9172
 19340  000C  0020               	movlb	0	; select bank0
 19341  000D  1C11               	btfss	17,0	;volatile
 19342  000E  2812               	goto	i1l9172
 19343                           
 19344                           ;MCU_B1.c: 126: TMR1_ISR();
 19345  000F  319F  27BC  3180   	fcall	_TMR1_ISR
 19346  0012                     i1l9172:	
 19347                           
 19348                           ;MCU_B1.c: 127: }
 19349                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 19350  0012  198B               	btfsc	11,3	;volatile
 19351  0013  1C0B               	btfss	11,0	;volatile
 19352  0014  281A               	goto	i1l1541
 19353  0015  0027               	movlb	7	; select bank7
 19354  0016  1D16               	btfss	22,2	;volatile
 19355  0017  281A               	goto	i1l1541
 19356                           
 19357                           ;MCU_B1.c: 139: IOC_ISR();
 19358  0018  319B  23D2         	fcall	_IOC_ISR
 19359  001A                     i1l1541:	
 19360                           ;MCU_B1.c: 140: }
 19361                           ;MCU_B1.c: 148: return;
 19362                           
 19363  001A  0871               	movf	??_ISR,w
 19364  001B  0020               	movlb	0	; select bank0
 19365  001C  00FF               	movwf	127
 19366  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 19367  001E  0009               	retfie
 19368  001F                     __end_of_ISR:	
 19369                           
 19370                           	psect	text135
 19371  1FBC                     __ptext135:	
 19372 ;; *************** function _TMR1_ISR *****************
 19373 ;; Defined at:
 19374 ;;		line 236 in file "../src/MCU_B1.c"
 19375 ;; Parameters:    Size  Location     Type
 19376 ;;		None
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;		None
 19379 ;; Return value:  Size  Location     Type
 19380 ;;		None               void
 19381 ;; Registers used:
 19382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19383 ;; Tracked objects:
 19384 ;;		On entry : 0/0
 19385 ;;		On exit  : 0/0
 19386 ;;		Unchanged: 0/0
 19387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19392 ;;Total ram usage:        0 bytes
 19393 ;; Hardware stack levels used:    1
 19394 ;; Hardware stack levels required when called:    1
 19395 ;; This function calls:
 19396 ;;		_DimmerLights_TMR_1
 19397 ;;		_DimmerLights_TMR_2
 19398 ;; This function is called by:
 19399 ;;		_ISR
 19400 ;; This function uses a non-reentrant model
 19401 ;;
 19402                           
 19403                           
 19404                           ;psect for function _TMR1_ISR
 19405  1FBC                     _TMR1_ISR:	
 19406                           
 19407                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 19408                           
 19409                           ;incstack = 0
 19410                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19411  1FBC  3196  2646  319F   	fcall	_DimmerLights_TMR_1
 19412                           
 19413                           ;MCU_B1.c: 259: DimmerLights_TMR_2();
 19414  1FBF  3188  2000  319F   	fcall	_DimmerLights_TMR_2
 19415                           
 19416                           ;MCU_B1.c: 268: Timer1.Count++;
 19417  1FC2  3001               	movlw	1
 19418  1FC3  0022               	movlb	2	; select bank2
 19419  1FC4  07CF               	addwf	(_Timer1^(0+256)+1),f
 19420  1FC5  3000               	movlw	0
 19421  1FC6  3DD0               	addwfc	((_Timer1+1)^(0+256)+1),f
 19422                           
 19423                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
 19424  1FC7  3001               	movlw	1
 19425  1FC8  3E4E               	addlw	_Timer1& (0+255)
 19426  1FC9  0086               	movwf	6
 19427  1FCA  3001               	movlw	1	; select bank2/3
 19428  1FCB  0087               	movwf	7
 19429  1FCC  3F40               	moviw [0]fsr1
 19430  1FCD  3AC8               	xorlw	200
 19431  1FCE  1D03               	skipz
 19432  1FCF  2FD2               	goto	u894_25
 19433  1FD0  3F41               	moviw [1]fsr1
 19434  1FD1  3A00               	xorlw	0
 19435  1FD2                     u894_25:	
 19436  1FD2  1D03               	skipz
 19437  1FD3  2FD7               	goto	i1l8736
 19438                           
 19439                           ;MCU_B1.c: 270: Timer1.Count = 0;
 19440  1FD4  01CF               	clrf	(_Timer1^(0+256)+1)
 19441  1FD5  01D0               	clrf	((_Timer1+1)^(0+256)+1)
 19442                           
 19443                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
 19444  1FD6  144E               	bsf	_Timer1^(0+256),0
 19445  1FD7                     i1l8736:	
 19446                           
 19447                           ;MCU_B1.c: 272: }
 19448                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
 19449  1FD7  30FA               	movlw	250
 19450  1FD8  0020               	movlb	0	; select bank0
 19451  1FD9  0097               	movwf	23	;volatile
 19452                           
 19453                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
 19454  1FDA  3038               	movlw	56
 19455  1FDB  0096               	movwf	22	;volatile
 19456                           
 19457                           ;MCU_B1.c: 276: TMR1IF = 0;
 19458  1FDC  1011               	bcf	17,0	;volatile
 19459  1FDD  0008               	return
 19460  1FDE                     __end_of_TMR1_ISR:	
 19461                           
 19462                           	psect	text136
 19463  0800                     __ptext136:	
 19464 ;; *************** function _DimmerLights_TMR_2 *****************
 19465 ;; Defined at:
 19466 ;;		line 1494 in file "../src/Dimmer_B1.c"
 19467 ;; Parameters:    Size  Location     Type
 19468 ;;		None
 19469 ;; Auto vars:     Size  Location     Type
 19470 ;;		None
 19471 ;; Return value:  Size  Location     Type
 19472 ;;		None               void
 19473 ;; Registers used:
 19474 ;;		None
 19475 ;; Tracked objects:
 19476 ;;		On entry : 0/0
 19477 ;;		On exit  : 0/0
 19478 ;;		Unchanged: 0/0
 19479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19484 ;;Total ram usage:        0 bytes
 19485 ;; Hardware stack levels used:    1
 19486 ;; This function calls:
 19487 ;;		Nothing
 19488 ;; This function is called by:
 19489 ;;		_TMR1_ISR
 19490 ;; This function uses a non-reentrant model
 19491 ;;
 19492                           
 19493                           
 19494                           ;psect for function _DimmerLights_TMR_2
 19495  0800                     _DimmerLights_TMR_2:	
 19496                           
 19497                           ;incstack = 0
 19498                           ; Regs used in _DimmerLights_TMR_2: []
 19499  0800  0008               	return
 19500  0801                     __end_of_DimmerLights_TMR_2:	
 19501                           
 19502                           	psect	text137
 19503  1646                     __ptext137:	
 19504 ;; *************** function _DimmerLights_TMR_1 *****************
 19505 ;; Defined at:
 19506 ;;		line 1405 in file "../src/Dimmer_B1.c"
 19507 ;; Parameters:    Size  Location     Type
 19508 ;;		None
 19509 ;; Auto vars:     Size  Location     Type
 19510 ;;		None
 19511 ;; Return value:  Size  Location     Type
 19512 ;;		None               void
 19513 ;; Registers used:
 19514 ;;		wreg, status,2, status,0
 19515 ;; Tracked objects:
 19516 ;;		On entry : 0/0
 19517 ;;		On exit  : 0/0
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19524 ;;Total ram usage:        1 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; This function calls:
 19527 ;;		Nothing
 19528 ;; This function is called by:
 19529 ;;		_TMR1_ISR
 19530 ;; This function uses a non-reentrant model
 19531 ;;
 19532                           
 19533                           
 19534                           ;psect for function _DimmerLights_TMR_1
 19535  1646                     _DimmerLights_TMR_1:	
 19536                           
 19537                           ;Dimmer_B1.c: 1406: if (DimmerIntr1.Start == 1) {
 19538                           
 19539                           ;incstack = 0
 19540                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 19541  1646  0021               	movlb	1	; select bank1
 19542  1647  1D20               	btfss	_DimmerIntr1^(0+128),2
 19543  1648  2E53               	goto	i1l8232
 19544                           
 19545                           ;Dimmer_B1.c: 1407: DimmerIntr1.Count++;
 19546  1649  3001               	movlw	1
 19547  164A  00F0               	movwf	??_DimmerLights_TMR_1
 19548  164B  0870               	movf	??_DimmerLights_TMR_1,w
 19549  164C  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 19550                           
 19551                           ;Dimmer_B1.c: 1408: if (DimmerIntr1.Count >= ((char)((100-5)*0.55)) + 1) {
 19552  164D  3035               	movlw	53
 19553  164E  0222               	subwf	(_DimmerIntr1^(0+128)+2),w
 19554  164F  1C03               	skipc
 19555  1650  2E53               	goto	i1l8232
 19556                           
 19557                           ;Dimmer_B1.c: 1409: DimmerIntr1.Count = 0;
 19558  1651  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 19559                           
 19560                           ;Dimmer_B1.c: 1410: DimmerIntr1.Start = 0;
 19561  1652  1120               	bcf	_DimmerIntr1^(0+128),2
 19562  1653                     i1l8232:	
 19563                           
 19564                           ;Dimmer_B1.c: 1411: }
 19565                           ;Dimmer_B1.c: 1412: }
 19566                           ;Dimmer_B1.c: 1414: if (DimmerIntr1.GO == 1) {
 19567  1653  1C20               	btfss	_DimmerIntr1^(0+128),0
 19568  1654  2E60               	goto	i1l1056
 19569                           
 19570                           ;Dimmer_B1.c: 1415: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
 19571  1655  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 19572  1656  0222               	subwf	(_DimmerIntr1^(0+128)+2),w
 19573  1657  1C03               	skipc
 19574  1658  2E8F               	goto	i1l1059
 19575                           
 19576                           ;Dimmer_B1.c: 1416: DimmerIntr1.GO = 0;
 19577  1659  1020               	bcf	_DimmerIntr1^(0+128),0
 19578                           
 19579                           ;Dimmer_B1.c: 1417: DimmerIntr1.Tune = 1;
 19580  165A  14A0               	bsf	_DimmerIntr1^(0+128),1
 19581                           
 19582                           ;Dimmer_B1.c: 1419: if (DimmerIntr1.ControlStatus == 1) {
 19583  165B  1DA0               	btfss	_DimmerIntr1^(0+128),3
 19584  165C  2E8F               	goto	i1l1059
 19585                           
 19586                           ;Dimmer_B1.c: 1420: RB4 = 1;
 19587  165D  0020               	movlb	0	; select bank0
 19588  165E  160D               	bsf	13,4	;volatile
 19589                           
 19590                           ;Dimmer_B1.c: 1422: }
 19591                           ;Dimmer_B1.c: 1423: }
 19592                           ;Dimmer_B1.c: 1424: } else {
 19593  165F  2E8F               	goto	i1l1059
 19594  1660                     i1l1056:	
 19595                           
 19596                           ;Dimmer_B1.c: 1425: if (DimmerIntr1.Tune == 1) {
 19597  1660  1CA0               	btfss	_DimmerIntr1^(0+128),1
 19598  1661  2E8F               	goto	i1l1059
 19599                           
 19600                           ;Dimmer_B1.c: 1426: DimmerIntr1.Tune = 0;
 19601  1662  10A0               	bcf	_DimmerIntr1^(0+128),1
 19602                           
 19603                           ;Dimmer_B1.c: 1427: DimmerIntr1.TuneTime++;
 19604  1663  3001               	movlw	1
 19605  1664  00F0               	movwf	??_DimmerLights_TMR_1
 19606  1665  0870               	movf	??_DimmerLights_TMR_1,w
 19607  1666  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 19608                           
 19609                           ;Dimmer_B1.c: 1428: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 19610  1667  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 19611  1668  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 19612  1669  1C03               	skipc
 19613  166A  2E8F               	goto	i1l1059
 19614                           
 19615                           ;Dimmer_B1.c: 1429: DimmerIntr1.TuneTime = 0;
 19616  166B  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 19617                           
 19618                           ;Dimmer_B1.c: 1430: if (DimmerIntr1.Dimming_Sw == 1) {
 19619  166C  1E20               	btfss	_DimmerIntr1^(0+128),4
 19620  166D  2E7C               	goto	i1l1062
 19621                           
 19622                           ;Dimmer_B1.c: 1431: if (DimmerIntr1.Dimming_Status == 0) {
 19623  166E  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 19624  166F  2E76               	goto	i1l8256
 19625                           
 19626                           ;Dimmer_B1.c: 1432: if (DimmerIntr1.DimmingValue > ((char)((100-77)*0.55))) {
 19627  1670  300D               	movlw	13
 19628  1671  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 19629  1672  1803               	btfsc	3,0
 19630  1673  2E82               	goto	i1l8262
 19631                           
 19632                           ;Dimmer_B1.c: 1435: DimmerIntr1.Dimming_Status = 1;
 19633                           
 19634                           ;Dimmer_B1.c: 1434: } else {
 19635                           
 19636                           ;Dimmer_B1.c: 1433: DimmerIntr1.DimmingValue--;
 19637  1674  16A0               	bsf	_DimmerIntr1^(0+128),5
 19638                           
 19639                           ;Dimmer_B1.c: 1436: }
 19640                           ;Dimmer_B1.c: 1437: } else {
 19641  1675  2E8F               	goto	i1l1059
 19642  1676                     i1l8256:	
 19643                           
 19644                           ;Dimmer_B1.c: 1438: if (DimmerIntr1.DimmingValue < ((char)((100-5)*0.55))) {
 19645  1676  3034               	movlw	52
 19646  1677  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 19647  1678  1C03               	btfss	3,0
 19648  1679  2E89               	goto	i1l8266
 19649                           
 19650                           ;Dimmer_B1.c: 1441: DimmerIntr1.Dimming_Status = 0;
 19651                           
 19652                           ;Dimmer_B1.c: 1440: } else {
 19653                           
 19654                           ;Dimmer_B1.c: 1439: DimmerIntr1.DimmingValue++;
 19655  167A  12A0               	bcf	_DimmerIntr1^(0+128),5
 19656                           
 19657                           ;Dimmer_B1.c: 1442: }
 19658                           ;Dimmer_B1.c: 1443: }
 19659                           ;Dimmer_B1.c: 1444: } else if (DimmerIntr1.Dimming_RF == 1) {
 19660  167B  2E8F               	goto	i1l1059
 19661  167C                     i1l1062:	
 19662  167C  1F20               	btfss	_DimmerIntr1^(0+128),6
 19663  167D  2E8F               	goto	i1l1059
 19664                           
 19665                           ;Dimmer_B1.c: 1445: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 19666  167E  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 19667  167F  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 19668  1680  1803               	skipnc
 19669  1681  2E85               	goto	i1l8264
 19670  1682                     i1l8262:	
 19671                           
 19672                           ;Dimmer_B1.c: 1446: DimmerIntr1.DimmingValue--;
 19673  1682  3001               	movlw	1
 19674  1683  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 19675                           
 19676                           ;Dimmer_B1.c: 1447: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 19677  1684  2E8F               	goto	i1l1059
 19678  1685                     i1l8264:	
 19679  1685  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 19680  1686  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 19681  1687  1803               	skipnc
 19682  1688  2E8E               	goto	i1l1073
 19683  1689                     i1l8266:	
 19684                           
 19685                           ;Dimmer_B1.c: 1448: DimmerIntr1.DimmingValue++;
 19686  1689  3001               	movlw	1
 19687  168A  00F0               	movwf	??_DimmerLights_TMR_1
 19688  168B  0870               	movf	??_DimmerLights_TMR_1,w
 19689  168C  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 19690                           
 19691                           ;Dimmer_B1.c: 1449: } else {
 19692  168D  2E8F               	goto	i1l1059
 19693  168E                     i1l1073:	
 19694                           
 19695                           ;Dimmer_B1.c: 1450: DimmerIntr1.Dimming_RF = 0;
 19696  168E  1320               	bcf	_DimmerIntr1^(0+128),6
 19697  168F                     i1l1059:	
 19698                           
 19699                           ;Dimmer_B1.c: 1451: }
 19700                           ;Dimmer_B1.c: 1452: }
 19701                           ;Dimmer_B1.c: 1453: }
 19702                           ;Dimmer_B1.c: 1454: }
 19703                           ;Dimmer_B1.c: 1455: }
 19704                           ;Dimmer_B1.c: 1456: if (RB4 == 1) {
 19705  168F  0020               	movlb	0	; select bank0
 19706  1690  1E0D               	btfss	13,4	;volatile
 19707  1691  0008               	return
 19708                           
 19709                           ;Dimmer_B1.c: 1457: if (DimmerIntr1.Count >= ((char)((100-5)*0.55)) - 10) {
 19710  1692  302A               	movlw	42
 19711  1693  0021               	movlb	1	; select bank1
 19712  1694  0222               	subwf	(_DimmerIntr1^(0+128)+2),w
 19713  1695  1C03               	skipc
 19714  1696  0008               	return
 19715                           
 19716                           ;Dimmer_B1.c: 1458: RB4 = 0;
 19717  1697  0020               	movlb	0	; select bank0
 19718  1698  120D               	bcf	13,4	;volatile
 19719  1699  0008               	return
 19720  169A                     __end_of_DimmerLights_TMR_1:	
 19721                           
 19722                           	psect	text138
 19723  1BD2                     __ptext138:	
 19724 ;; *************** function _IOC_ISR *****************
 19725 ;; Defined at:
 19726 ;;		line 395 in file "../src/MCU_B1.c"
 19727 ;; Parameters:    Size  Location     Type
 19728 ;;		None
 19729 ;; Auto vars:     Size  Location     Type
 19730 ;;		None
 19731 ;; Return value:  Size  Location     Type
 19732 ;;		None               void
 19733 ;; Registers used:
 19734 ;;		status,2, status,0, pclath, cstack
 19735 ;; Tracked objects:
 19736 ;;		On entry : 0/0
 19737 ;;		On exit  : 0/0
 19738 ;;		Unchanged: 0/0
 19739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19744 ;;Total ram usage:        0 bytes
 19745 ;; Hardware stack levels used:    1
 19746 ;; Hardware stack levels required when called:    1
 19747 ;; This function calls:
 19748 ;;		_DimmerLights_IOC_1
 19749 ;;		_DimmerLights_IOC_2
 19750 ;;		_DimmerLights_IOC_3
 19751 ;; This function is called by:
 19752 ;;		_ISR
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           
 19757                           ;psect for function _IOC_ISR
 19758  1BD2                     _IOC_ISR:	
 19759                           
 19760                           ;MCU_B1.c: 397: if (myMain.PowerON == 1) {
 19761                           
 19762                           ;incstack = 0
 19763                           ; Regs used in _IOC_ISR: [status,2+status,0+pclath+cstack]
 19764  1BD2  0021               	movlb	1	; select bank1
 19765  1BD3  1C3F               	btfss	_myMain^(0+128),0
 19766  1BD4  2BDD               	goto	i1l8746
 19767                           
 19768                           ;MCU_B1.c: 403: DimmerLights_IOC_1();
 19769  1BD5  319B  2356  319B   	fcall	_DimmerLights_IOC_1
 19770                           
 19771                           ;MCU_B1.c: 408: DimmerLights_IOC_2();
 19772  1BD8  319A  22F5  319B   	fcall	_DimmerLights_IOC_2
 19773                           
 19774                           ;MCU_B1.c: 413: DimmerLights_IOC_3();
 19775  1BDB  319A  22F6         	fcall	_DimmerLights_IOC_3
 19776  1BDD                     i1l8746:	
 19777                           
 19778                           ;MCU_B1.c: 417: }
 19779                           ;MCU_B1.c: 419: IOCBF2 = 0;
 19780  1BDD  0027               	movlb	7	; select bank7
 19781  1BDE  1116               	bcf	22,2	;volatile
 19782                           
 19783                           ;MCU_B1.c: 420: IOCIF = 0;
 19784  1BDF  100B               	bcf	11,0	;volatile
 19785  1BE0  0008               	return
 19786  1BE1                     __end_of_IOC_ISR:	
 19787                           
 19788                           	psect	text139
 19789  1AF6                     __ptext139:	
 19790 ;; *************** function _DimmerLights_IOC_3 *****************
 19791 ;; Defined at:
 19792 ;;		line 1509 in file "../src/Dimmer_B1.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;		None
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;		None
 19797 ;; Return value:  Size  Location     Type
 19798 ;;		None               void
 19799 ;; Registers used:
 19800 ;;		None
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;Total ram usage:        0 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; This function calls:
 19813 ;;		Nothing
 19814 ;; This function is called by:
 19815 ;;		_IOC_ISR
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819                           
 19820                           ;psect for function _DimmerLights_IOC_3
 19821  1AF6                     _DimmerLights_IOC_3:	
 19822                           
 19823                           ;incstack = 0
 19824                           ; Regs used in _DimmerLights_IOC_3: []
 19825  1AF6  0008               	return
 19826  1AF7                     __end_of_DimmerLights_IOC_3:	
 19827                           
 19828                           	psect	text140
 19829  1AF5                     __ptext140:	
 19830 ;; *************** function _DimmerLights_IOC_2 *****************
 19831 ;; Defined at:
 19832 ;;		line 1498 in file "../src/Dimmer_B1.c"
 19833 ;; Parameters:    Size  Location     Type
 19834 ;;		None
 19835 ;; Auto vars:     Size  Location     Type
 19836 ;;		None
 19837 ;; Return value:  Size  Location     Type
 19838 ;;		None               void
 19839 ;; Registers used:
 19840 ;;		None
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19850 ;;Total ram usage:        0 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; This function calls:
 19853 ;;		Nothing
 19854 ;; This function is called by:
 19855 ;;		_IOC_ISR
 19856 ;; This function uses a non-reentrant model
 19857 ;;
 19858                           
 19859                           
 19860                           ;psect for function _DimmerLights_IOC_2
 19861  1AF5                     _DimmerLights_IOC_2:	
 19862                           
 19863                           ;incstack = 0
 19864                           ; Regs used in _DimmerLights_IOC_2: []
 19865  1AF5  0008               	return
 19866  1AF6                     __end_of_DimmerLights_IOC_2:	
 19867                           
 19868                           	psect	text141
 19869  1B56                     __ptext141:	
 19870 ;; *************** function _DimmerLights_IOC_1 *****************
 19871 ;; Defined at:
 19872 ;;		line 1464 in file "../src/Dimmer_B1.c"
 19873 ;; Parameters:    Size  Location     Type
 19874 ;;		None
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;		None
 19877 ;; Return value:  Size  Location     Type
 19878 ;;		None               void
 19879 ;; Registers used:
 19880 ;;		None
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19890 ;;Total ram usage:        0 bytes
 19891 ;; Hardware stack levels used:    1
 19892 ;; This function calls:
 19893 ;;		Nothing
 19894 ;; This function is called by:
 19895 ;;		_IOC_ISR
 19896 ;; This function uses a non-reentrant model
 19897 ;;
 19898                           
 19899                           
 19900                           ;psect for function _DimmerLights_IOC_1
 19901  1B56                     _DimmerLights_IOC_1:	
 19902                           
 19903                           ;Dimmer_B1.c: 1482: if (DimmerIntr1.Start == 0 && RB2 == 1) {
 19904                           
 19905                           ;incstack = 0
 19906                           ; Regs used in _DimmerLights_IOC_1: []
 19907  1B56  0021               	movlb	1	; select bank1
 19908  1B57  1920               	btfsc	_DimmerIntr1^(0+128),2
 19909  1B58  0008               	return
 19910  1B59  0020               	movlb	0	; select bank0
 19911  1B5A  1D0D               	btfss	13,2	;volatile
 19912  1B5B  0008               	return
 19913                           
 19914                           ;Dimmer_B1.c: 1483: DimmerIntr1.Start = 1;
 19915  1B5C  0021               	movlb	1	; select bank1
 19916  1B5D  1520               	bsf	_DimmerIntr1^(0+128),2
 19917                           
 19918                           ;Dimmer_B1.c: 1484: DimmerIntr1.GO = 1;
 19919  1B5E  1420               	bsf	_DimmerIntr1^(0+128),0
 19920  1B5F  0008               	return
 19921  1B60                     __end_of_DimmerLights_IOC_1:	
 19922  007E                     btemp	set	126	;btemp
 19923  007E                     pic14e$flags	set	126
 19924  007E                     wtemp	set	126
 19925  007E                     wtemp0	set	126
 19926  0080                     wtemp1	set	128
 19927  0082                     wtemp2	set	130
 19928  0084                     wtemp3	set	132
 19929  0086                     wtemp4	set	134
 19930  0088                     wtemp5	set	136
 19931  007F                     wtemp6	set	127
 19932  007E                     ttemp	set	126
 19933  007E                     ttemp0	set	126
 19934  0081                     ttemp1	set	129
 19935  0084                     ttemp2	set	132
 19936  0087                     ttemp3	set	135
 19937  007F                     ttemp4	set	127
 19938  007E                     ltemp	set	126
 19939  007E                     ltemp0	set	126
 19940  0082                     ltemp1	set	130
 19941  0086                     ltemp2	set	134
 19942  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         298
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     71      78
    BANK1            80      0      79
    BANK2            80      0      80
    BANK3            80      0      79
    BANK4            80      4      57
    BANK5            80      0      32
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK3[9]), Sw2(BANK3[9]), Sw1(BANK3[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK3[4]), VarLED3(BANK3[4]), VarLED2(BANK3[4]), 
		 -> VarLED1(BANK3[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights3(BANK2[9]), DimmerLights2(BANK2[9]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK5[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw3(BANK3[5]), DlySw2(BANK3[5]), DlySw1(BANK3[5]), 


Critical Paths under _main in COMMON

    _main->_Exception_Main
    _main->_getTemp_AD
    _main->_my_MainTimer
    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _setTemp_Main->___lwdiv
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _setRF_Main->___lwdiv
    _setControl_Lights_Table->_setDimmerLights_SwOn
    _setControl_Lights_Table->_setRF_AdjControl
    _setRF_AdjControl->_getDimmerLights_Status
    _setRFSW_Control->_setDimmerLights_SwOn
    _setRFSW_AdjControl->_setDimmerLights_SwOn
    _setDimmerLights_DimmingRun->_DimmerLights_SelectPointer
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _CC2500_PowerOnInitial->_CC2500_InitPATable
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setBuz
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _DimmerIntr_ValueCalculate->_Division
    _DimmerIntr_Initialization->_Division
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DlyOff_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setProductData
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _setLog_Code->_setProductData
    _setControl_Lights_Table->_setRFSW_Control
    _setRFSW_Control->_setDelayOff_GO
    _setRFSW_AdjControl->_setDimmerIntr_MaxmumValue
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _Exception_Main->_setBuz
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setRF_DimmerLights
    _setRF_DimmerLights->_setProductData
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _DimmerIntr_ValueCalculate->_Division
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  151407
                                              0 BANK4      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1809
                                              9 COMMON     1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     399
                                              6 COMMON     4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     133
                                              2 COMMON     4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    5934
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                        10    10      0    5934
                                             56 BANK0     10    10      0
                            ___lwdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
            _setOverTemp_ADV_Restore
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ADV_Restore                              3     3      0      68
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4756
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4756
                                             12 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
                             _setBuz
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      88
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1018
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1018
                                              6 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   49574
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           2     2      0   49574
                                             69 BANK0      2     2      0
              _CC2500_PowerOnInitial
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                            ___lwdiv
                          _getBuz_GO
                    _getRF_KeyStatus
                          _getRxData
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   45499
                                             67 BANK0      2     2      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0    4567
                                             56 BANK0      1     1      0
                             _setBuz
                 _setMemory_LoopSave
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setMemory_LoopSave                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0   40806
             _getDimmerLights_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
                 _setRFSW_AdjControl
                    _setRFSW_Control
                   _setRF_AdjControl
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRF_AdjControl                                     4     4      0     405
                                              6 COMMON     4     4      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0   11446
                                             64 BANK0      3     3      0
             _getDimmerLights_Status
                             _setBuz
                     _setDelayOff_GO
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   4     4      0   23371
                                             58 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
                             _setBuz
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
         _setDimmerLights_DimmingRun
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                   _setMemory_Modify
                     _setProductData
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setDimmerLights_DimmingRun                           3     2      1     199
                                              4 COMMON     3     2      1
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getRF_KeyStatus                                      3     3      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getBuz_GO                                            6     4      2      23
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     874
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     235
                                              6 COMMON     2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     426
                                              6 COMMON     2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     145
                                              4 COMMON     2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CC2500_PowerOnInitial                                0     0      0    2367
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (4) _CC2500_SIDLEMode                                     0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_PowerRST                                      1     1      0     516
                                              8 COMMON     1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitSetREG                                    4     4      0     536
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitPATable                                   3     3      0     471
                                              7 COMMON     3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteREG                                      3     2      1     338
                                              4 COMMON     3     2      1
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_FrequencyCabr                                 0     0      0     547
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (5) _DelayTime_1us                                        6     4      2     448
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearTXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearRXFIFO                                   0     0      0      99
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteCommand                                  2     2      0      99
                                              4 COMMON     2     2      0
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _setRF_TimeoutCleared                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RF_Timeout_Counter                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteByte                                     2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     198
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     198
                                              4 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1128
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1128
                                              6 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       7     7      0    3436
                                              9 COMMON     1     1      0
                                              6 BANK0      6     6      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0      92
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   47808
       _DimmerLights_DimmingFunction
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   46827
                                             68 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   29506
                                             64 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
                             _setLED
                     _setProductData
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     996
                                              4 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      88
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     488
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_Dimming_RF                             3     2      1     399
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     221
                                             55 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     310
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _setDelayOff_GO                                       8     6      2    3741
                                             56 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _setCmd_Status                                        3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0     105
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0     111
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   16747
                                             61 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
                     _setProductData
                 _setRF_DimmerLights
                 _setRF_TransceiveGO
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _setRF_TransceiveGO                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerLights                                   5     4      1    3161
                                             56 BANK0      5     4      1
                     _setProductData
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_MaxmumValue                            3     2      1     488
                                             55 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     488
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      92
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      6     6      0     186
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     981
                                              5 BANK0      2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            3     3      0     919
                                              2 BANK0      3     3      0
                           _Division
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   23159
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   23159
                                             55 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (5) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       4     4      0    7430
                                             49 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_PercentToValue                       6     6      0   14850
                                             49 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     430
                                             35 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    3377
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             16    10      6    3687
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             13     7      6    4043
                                             22 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             6     3      3    3214
                                              0 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2873
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _Division                                             5     4      1     857
                                              7 COMMON     3     2      1
                                              0 BANK0      2     2      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              5     4      1     345
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    5478
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    5478
                                             56 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setProductData                                       3     2      1    2714
                                             53 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 7     7      0    2344
                                              9 COMMON     1     1      0
                                              6 BANK0      6     6      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1809
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      88
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_Status                               2     2      0     111
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      88
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      88
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (7) _DelayOffPointSelect                                  2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0       0
                 _DimmerLights_TMR_1
                 _DimmerLights_TMR_2
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_2                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOC_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_IOC_2
                 _DimmerLights_IOC_3
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_3                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_2                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _RF_Timeout_Counter
       _setRF_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
         _Division
           ___lbdiv
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setRF_TransceiveGO
         _setTxData
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
           _Division
             ___lbdiv
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setBuz
       ___awdiv
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_PowerOnInitial
         _CC2500_ClearRXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_ClearTXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_FrequencyCabr
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
           _DelayTime_1us
         _CC2500_InitPATable
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_InitSetREG
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_PowerRST
           _CC2500_WriteByte
           _DelayTime_1us
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_SIDLEMode
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _RF_RxDisable
       ___lwdiv
       _getBuz_GO
       _getRF_KeyStatus
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _getDimmerLights_Status
             _DimmerLights_SelectPointer
           _getMain_All_LightsStatus
           _setCmd_Status
           _setDimmerLights_SwOff
             _DimmerLights_SelectPointer
           _setDimmerLights_SwOn
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _setBuz
               ___awdiv
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
           _setRFSW_AdjControl
             _getDimmerLights_PercentToValue
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDimmerIntr_Dimming_RF
             _setDimmerIntr_MaxmumValue
               _getDimmerLights_PercentToValue (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setDimmerLights_DimmingRun
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setMemory_Modify
             _setProductData
               _getDimmerLights_ValueToPercent (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setTxData
           _setRFSW_Control
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDelayOff_GO
               _DelayOffPointSelect
               ___bmul
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setRF_DimmerLights
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
           _setRF_AdjControl
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
           _setTxData
         _setLog_Code
           _setBuz
             ___awdiv
           _setMemory_LoopSave
           _setMemory_Modify
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
       _setData
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setRF_Learn
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___lwdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
       _setBuz
         ___awdiv
       _setOverTemp_ADV_Restore
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _WDT_Main
     _WDT_Clearing
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
     _DimmerLights_IOC_2
     _DimmerLights_IOC_3
   _TMR1_ISR
     _DimmerLights_TMR_1
     _DimmerLights_TMR_2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      4      39      13       71.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1A1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1A1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Mar 26 16:18:49 2015

                    __size_of_Switch_Main 000F                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 07FE  
                   __end_of_setCmd_Status 1D6A                            ___bmul@product 0074  
                                      _RD 0CA8                   __end_of_CC2500_WriteREG 1F9B  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 0220                                        _Sw 006B  
                          setTemp_Main@AD 0060                    __end_of_setDelayOff_GO 0C66  
                            ___ftadd@exp1 0042                              ___ftadd@exp2 0041  
                  setRF_AdjControl@status 0077                  __size_of_getRF_KeyStatus 000F  
                    _setDimmerLights_Main 08FD                              ___ftadd@sign 0040  
                                     l110 1634                                       l120 145E  
                                     l122 146C                                       l108 1622  
                                     l118 1472                                       l119 146E  
                    _setDimmerLights_SwOn 0765                                       l347 1D4B  
                                     l348 1D4C                                       l623 0AF4  
                                     l391 1104                                       l279 0A6B  
                                     l819 1E81                                       l983 0FC9  
                                     _GIE 005F                                       _CRC 00D8  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 000F                                       _RA3 0063  
                                     _RC0 0070                                       _RB2 006A  
                                     _RA4 0064                                       _LED 007B  
                                     _RC1 0071                                       _RB3 006B  
                                     _RC2 0072                                       _RB4 006C  
                                     _RA6 0066                                       _RB5 006D  
                                     _RC4 0074                                       _RC5 0075  
                                     _RC6 0076                                       _RC7 0077  
                                     _RF1 00B0                                       _ISR 0004  
                                     _WDT 0153                                       _Cmd 0067  
            getDimmerLights_Status@lights 0074                                       _Sw1 01B5  
                                     _Sw2 01BE                                       _Sw3 01C7  
              ??_setDimmerIntr_Dimming_RF 0073                ??_setDimmerIntr_Dimming_Sw 0073  
         setDimmerIntr_Dimming_RF@command 0072                  __end_of_CC2500_WriteByte 1D55  
                   _Buzzer_Initialization 1AF7                           __end_of_ADC_Set 1B3E  
                                     wreg 0009      setDimmerLights_Initialization@lights 0070  
            getDimmerLights_Status@status 0075       __end_of_setDimmerIntr_ControlStatus 12F0  
             _setDimmerIntr_ControlStatus 12B3                         ??_getSw_KeyStatus 0072  
                                    ?_ISR 0070                              ___ftdiv@cntr 0030  
                         __end_of_IOC_ISR 1BE1                     _setDimmerLights_OnOff 0F4E  
        setDimmerLights_DimmingRun@lights 0076                              ___ftdiv@sign 0035  
                                    l1112 0E33                                      l1123 0E88  
                                    l1107 0E35                                      l1125 0E7A  
                                    l1109 0E26                                      l1134 0EA3  
                                    l1118 0E52                                      l1128 0E86  
                                    l1252 10C5                                      l1253 10CD  
                                    l1254 10D5                                      l1602 0DF5  
                                    l1291 14F0                                      l1292 14F7  
                                    l2500 05A1                                      l2092 03C0  
                                    l1293 14FE                                      l2086 046B  
                                    l1813 1E1A                           __end_of_IOC_Set 1B80  
                                    l2525 1B4A                                      l2543 09C5  
                                    l1592 116F                                      l2609 09DA  
                                    l1817 1E16                                      l1578 13A8  
                                    l2563 060F                                      l3364 17E9  
                                    l2564 061E                                      l2556 0831  
                                    l1837 0BE1                                      l3358 17D2  
                                    l1846 1D69                                      l2495 05F5  
                                    l2577 06B0                                      l1793 12B1  
                                    l3387 0268                                      l2499 055D  
                                    l7004 0A18                                      l2942 1DB0  
                                    l7120 1231                                      l8000 1FB1  
                                    l7116 121F                                      l7140 1D57  
                                    l8020 11B4                                      l8004 1FBA  
                                    l6430 17BE                                      l6422 17A8  
                                    l7070 1DE1                                      l8030 11CF  
                                    l7222 11FD                                      l2966 01BF  
                                    l7144 1D64                                      l7072 1DE5  
                                    l2968 009D                                      l6426 17AF  
                                    l7410 0B31                                      l7402 0B25  
                                    l8026 11C6                                      l8018 11A8  
                                    l6524 1EC6                                      l6540 1EE5  
                                    l6436 17D7                                      l6428 17B9  
                                    l6604 01F1                                      l7340 12C8  
                                    l7084 1115                     _setDimmerLights_SwOff 1243  
                                    l6438 17DF                                      l6614 0207  
                                    l6702 0F2C                                      l7430 0B5B  
                                    l7422 0B4E                                      l7406 0B2B  
                                    l7414 0B37                                      l7086 1120  
                                    l6528 1ED0                                      l6560 1F4D  
                                    l6544 1EEE                                      l6632 0234  
                                    l6608 01F8                                      l6800 0CE4  
                                    l7344 12DC                                      l7352 10A6  
                                    l6650 027A                                      l6634 023E  
                                    l6626 0221                                      l6722 06DE  
                                    l7370 1E78                                      l6570 1CF9  
                                    l7426 0B55                                      l7434 0B61  
                                    l6556 1F43                                      l6548 1EF7  
                                    l6644 025A                                      l6636 0243  
                                    l6716 06C8                                      l7700 13D8  
                                    l7356 10B1                                      l6654 028C  
                                    l6646 0264                                      l6638 0247  
                                    l6750 073D                                      l6734 0719  
                                    l7702 13DA                                      l7366 1E71  
                                    l7470 1CA0                                      l6574 1CFF  
                                    l6912 1270                                      l6664 02A7  
                                    l6680 0ED2                                      l7472 1CA5  
                                    l7392 0B15                                      l7384 0B09  
                                    l8360 1E5E                                      l9330 1FE9  
                                    l6674 0EBC                                      l6746 0735  
                                    l6738 0721                                      l7714 13EA  
                                    l7466 1C9A                                      l8354 1E56  
                                    l9420 07E0                                      l7716 13EE  
                                    l7388 0B0F                                      l7396 0B1B  
                                    l8356 1E59                                      l9422 07EA  
                                    l9406 07AF                                      l6694 0F13  
                                    l6766 0C7F                                      l6934 0C1C  
                                    l9264 16B0                                      l9408 07B4  
                                    l6792 0CCA                                      l6784 0CAF  
                                    l9504 1DCB                                      l6944 0C4A  
                                    l7496 1E12                                      l9600 1424  
                                    l9290 16E7                                      l9282 16D6  
                                    l9274 16B8                                      l9258 16A5  
                                    l9418 07DA                                      l9442 1F60  
                                    l6794 0CD3                                      l6786 0CBD  
                                    l9602 1427                                      l9276 16C4  
                                    l9380 0788                                      l9444 1F69  
                                    l6796 0CD6                                      l6972 108F  
                                    l9508 1DD2                                      l6948 0C5C  
                                    l6980 1305                     _myMain_Initialization 1C68  
                                    l9286 16DF                                      l9454 1F78  
                                    l7686 13C3                                      l6990 09CC  
                                    l9462 1E24                                      l9606 142D  
                                    l9542 0D09                                      l9526 1360  
                                    l9702 05FA                                      l8582 1DBB  
                                    l9392 079A                                      l7688 13C5  
                                    l6968 1084                                      l6992 09CD  
                                    l6984 1319                                      l9464 1E27  
                                    l9480 1F85                                      l9712 062D  
                                    l9394 079D                                      l9378 0785  
                                    l9562 10E7                                      l9810 0850  
                                    l9554 0D60                                      l9538 0D04  
                                    l9730 067F                                      l9722 066F  
                                    l9714 0633                                      l8578 1DB5  
                                    l8850 08DF                                      l8842 08C1  
                                    l8684 144A                                      l6996 09D2  
                                    l9468 1E2D                                      l9484 1F8B  
                                    l9564 10EA                                      l9804 0847  
                                    l9732 0683                                      l9724 0673  
                                    l9740 068F                                      l9670 171A  
                                    l9902 1522                                      l9478 1F82  
                                    l9590 1414                                      l9806 084A  
                                    l9750 0A3F                                      l7894 1C53  
                                    l9734 0687                                      l9726 0677  
                                    l9718 064E                                      l7982 1F04  
                                    l8854 08EE                                      l8846 08D0  
                                    l9592 1417                                      l9568 10F0  
                                    l9736 068B                                      l9728 067B  
                                    _CFGS 0CAE                                      l9826 0860  
                                    l9754 0A45                                      l7986 1F0E  
                                    l9596 141D                                      l9828 0877  
                                    l9780 0A7E                                      l9772 0A71  
                                    l9748 0A3C                                      l7996 1FA7  
                                    l9862 0F88                                      l9782 0A81  
                                    l9774 0A74                                      l9880 0FD0  
                                    l9864 0F9D                                      l9872 0FB1  
                                    l9768 0A54                              __CFG_WDTE$ON 0000  
                                    l9786 0A87                                      l9778 0A7A  
                                    l9868 0FA7                                      l9956 115A  
                                    l9894 0FFD                                      l9992 0978  
                                    _FREE 0CAC                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    _PEIE 005E                                      u5415 0248  
                                    u6305 110A                                      u5355 0222  
                                    u5515 0EE4                                      u5445 025B  
                                    u5525 0EF4                                      u5605 06FA  
                                    u5535 0F14                                      u6095 0C28  
                                    u5385 0235                                      u5545 0F23  
                                    u5625 0722                                      u5705 0C86  
                                    u4915 17B4                                      u5555 0F2D  
                                    u5635 0728                                      u7405 1E40  
                                    u4935 17CD                                      u5735 0CB0  
                                    u5665 073E                                      u9105 08B8  
                                    u4955 17DA                                      u5675 0744  
                                    u5595 06EA                                      u9115 08C7  
                                    u5765 0CCB                                      u9125 08D6  
                                    u7375 1DA3                                      u9135 08E5  
                                    u4985 17F0                                      u7705 11BF  
                                    u9145 08F4                                      u7715 11C7  
                                    u7675 11AB                                      u7695 11B5  
                                    u9805 16BB                                      u9825 16C5  
                                    u9835 16CF                                      _LWLO 0CAD  
                                    u8885 1440                                      u9845 16D7  
                                    u9925 1D79                                      _RSSI 00DB  
                                    _WREN 0CAA                                      _WPUB 020D  
      __end_of_setDimmerLights_DimmingRun 1E03                _setDimmerLights_DimmingRun 1DEB  
                                    _Buz1 00CC                                      _Temp 00E1  
                                    _main 15A2                              ___ftpack@arg 0072  
                     __end_of_DlyOff_Main 0AFB                           __end_of_RF_Main 1B00  
                            ___ftpack@exp 0075                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                         __end_of_WDT_Set 1B6A                                      ltemp 007E  
           __size_of_setRF_Initialization 000B                                      start 001F  
                                    ttemp 007E                                      wtemp 007E  
       setDimmerLights_SwOn@dimmingStatus 0026      __end_of_DimmerLights_DimmingFunction 0EA5  
   __size_of_DimmerLights_DimmingFunction 00A8              _DimmerLights_DimmingFunction 0DFD  
              __end_of_setRFSW_AdjControl 0D74                         ___bmul@multiplier 0075  
                            ___ftmul@cntr 0034                              ___ftmul@sign 0035  
            __size_of_Temp_Initialization 0003      _getDimmerLights_Allow_Condition$2696 0073  
    _getDimmerLights_Allow_Condition$2697 0074      _getDimmerLights_Allow_Condition$2698 0075  
                                   ??_ISR 0071                              ___fttol@exp1 0050  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004C  
       setDimmerLights_DimmingRun@command 0074   __end_of_getDimmerLights_Allow_Condition 13F0  
__size_of_getDimmerLights_Allow_Condition 0042         ??_getDimmerLights_Allow_Condition 0072  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 13AE  
                  _getDimmerLights_Status 1BE1                          __end_of_LED_Main 1CC7  
                              _DimmerIntr 00D9                                     l10004 0991  
                                   l10200 0E98                                     l10104 0923  
                                   l10008 099A                                     l10106 0929  
                                   l10116 094F                                     l10118 0955  
                                   l10230 0D7A                                     l10310 0442  
                                   l10320 0457                                     l10146 0E28  
                                   l10218 1C35                                     l10322 0459  
                                   l10164 0E53                                     l10244 0DEE  
                                   l10236 0D8E                                     l10086 0386  
                                   l10158 0E46                                     l10088 0395  
                                   l10432 00CA                                     l10416 0087  
                                   l10272 03C3                                     l10280 03D5  
                                   l10522 04F1                                     l10442 00FC  
                                   l10188 0E7C                                     l10372 05B0  
                                   l10622 0B8A                                     l10358 059C  
                                   l10278 03D2                                     l10640 0BCF  
                                   l10632 0BA8                                     l10456 013A  
                                   l10720 15CA                                     l10642 0BAB  
                                   l10386 05DA                                     l10466 016C  
                                   l10628 0B99                                     l10548 1387  
                                   l10716 15C3                                     l10646 0BD7  
                                   l10398 05EE                     ?_setDimmerLights_Main 0070  
                                   l10584 1293                           ?_setDelayOff_GO 0058  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 0255  
                         __end_of___awdiv 16EE                           __end_of___lbdiv 1F7A  
                         __end_of___ftadd 02BF                           __end_of___ftdiv 0F4E  
                         __end_of___ftmul 0765                           ___awdiv@divisor 0072  
                                   _T1CON 0018                                     u11515 05C9  
                                   u11355 0414                           __end_of___fttol 0CED  
                                   u11375 042B                                     u11395 0449  
                                   u11485 0579                                     u11910 0BD5  
                                   u11915 0BB4                                     u11845 12A9  
                                   u11795 139F                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 11D6                           ___awdiv@counter 0020  
           __size_of_CC2500_FrequencyCabr 000B                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                        setRF_Learn@command 0073  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 1DA9  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 14BF  
 __size_of_getDimmerLights_ValueToPercent 0046            _getDimmerLights_ValueToPercent 1479  
                                   _Light 00DA                          __end_of_TMR1_ISR 1FDE  
                 __size_of_setProductData 000C              __size_of_CC2500_WriteCommand 0019  
                        __end_of_TMR1_Set 1BD2        DimmerLights_DimmingFunction@lights 0026  
                                   _getAD 1E4E                             ___awtoft@sign 0025  
                           ___ftpack@sign 0076                           __end_of_setData 15A2  
             __size_of_CC2500_ClearRXFIFO 0004                             ??_Buzzer_Main 0072  
                        __end_of_WDT_Main 1CF7               __size_of_CC2500_ClearTXFIFO 0004  
                     CC2500_RxData@loop_f 0077                            __pbitbssCOMMON 03D0  
                          __CFG_BOREN$OFF 0000                        Flash_Memory_Read@i 0073  
                        ?_CC2500_ReadByte 0070                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 000F  
           __end_of_setLED_Initialization 1C4A                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                            ?_setRF_Learn 0070                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                       _getAll_Sw_KeyStatus 1C2C  
                      _setRF_DimmerLights 09C7                           ___lbdiv@divisor 0072  
             __size_of_Flash_Memory_Write 002A                         ?_CC2500_SIDLEMode 0070  
                         ___lbdiv@counter 0075                __size_of_RF_Initialization 0003  
        __size_of_DelayOff_Initialization 000C                         setTemp_Main@error 005A  
             __size_of_setRF_TransceiveGO 0010                    ??_Flash_Memory_Erasing 0072  
             ??_setDimmerLights_DimmingOn 0074                        ??_CC2500_SIDLEMode 0076  
                         __initialization 0021                          ?_CC2500_PowerRST 0070  
           ?_DimmerLights_DimmingFunction 0070                         ?_setMemory_Modify 0070  
                        __end_of_Division 1BFF                   __size_of_getDelayOff_GO 000F  
                            __end_of_main 15F3                       ?_setRF_DimmerLights 0058  
                        __end_of_Fosc_Set 1B0A            getMain_All_LightsStatus@status 0072  
                      ??_setMemory_Modify 0072              setDimmerLights_OnOff@command 0060  
                          _Exception_Main 0B6B                          ?_CC2500_WriteREG 0074  
       __end_of_DimmerIntr_ValueCalculate 1745                                 ??_ADC_Set 0072  
                    _setSw_Initialization 1B3E                                    ??_main 007A  
                           ___fttol@sign1 004B                      ?_getAll_Sw_KeyStatus 0070  
                            ?_setLog_Code 0070               ?_setDimmerIntr_DimmingValue 0057  
            ??_DimmerLights_SelectPointer 0072                   _setControl_Lights_Table 05F9  
                          _setMemory_Data 1B6A                    ?_Buzzer_Initialization 0070  
                 ??_DlyOff_Initialization 0074                                _Receive_OK 03D0  
      setDimmerIntr_ControlStatus@command 0072                   _setDimmerLights_Dimming 1506  
                               ??_IOC_ISR 0070                                 ??_IOC_Set 0072  
                             _DimmerIntr1 00A0                               _DimmerIntr2 013E  
                             _DimmerIntr3 01A0                  _getMain_All_LightsStatus 1DBE  
                __size_of_setRFSW_Control 0040                        _RF_Timeout_Counter 1D6A  
                 ??_Switch_Initialization 0077                    ?_setDimmerLights_OnOff 0060  
                    ??_setRF_DimmerLights 0059                                    ?_getAD 0072  
                       ??_getRF_KeyStatus 0072                    ?_setDimmerLights_SwOff 0070  
                             _DlyOff_Main 0A93                    ?_myMain_Initialization 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
        __end_of_getDimmerIntr_Dimming_Sw 1EF9                                 ??_RF_Main 007A  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                                 ??_WDT_Set 0072  
                        __end_of___awtoft 2000                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 1800                  _getMain_All_Error_Status 1E03  
                                  _IOCBF2 1CB2                                    i1l1062 167C  
                                  i1l1056 1660                                    i1l1073 168E  
                                  i1l1059 168F                                    i1l1541 001A  
                                  i1l8232 1653                                    i1l8262 1682  
                                  i1l8264 1685                                    i1l8256 1676  
                                  i1l8266 1689                                    i1l9172 0012  
                                  i1l8736 1FD7                                    i1l8746 1BDD  
                                  _FVRCON 0117      getDimmerLights_Allow_Condition@allow 0077  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                     ?_RF_Timeout_Counter 0070                                    _PMCON2 0196  
                                  _OSCCON 0099                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _IO_Set 1E83  
                                  _WDTCON 0097      __end_of_setDimmerLights_DimmingClose 1C2C  
   __size_of_setDimmerLights_DimmingClose 000F              _setDimmerLights_DimmingClose 1C1D  
                                  u894_25 1FD2                        DelayTime_1us@count 0072  
                      setRF_AdjControl@sw 0079            __size_of_CC2500_PowerOnInitial 0015  
             ??_setDimmerIntr_MaxmumValue 0058             __end_of_CC2500_PowerOnInitial 1D94  
                                  _Dimmer 01B0                                    _DlySw1 01D0  
                                  _DlySw2 01D5                                    _DlySw3 01DA  
                        _setRF_AdjControl 11D6                  ?_setOverTemp_ADV_Restore 0070  
           __size_of_setRF_TimeoutCleared 0004                     __end_of_getCmd_Status 1CA7  
              __end_of_Mcu_Initialization 1078                       __end_of_Buzzer_Main 1479  
                                  _Memory 0230                                    _Timer1 014E  
                                  ___bmul 1CF7                    __end_of_Exception_Main 0BE2  
                    Exception_Main@lights 0026                                 ??___awdiv 0076  
                               ??___lbdiv 0073                                 ??___ftadd 003C  
            __size_of_DelayOffPointSelect 001F                                 ??___ftdiv 002C  
                               ??___ftmul 002C                                 ??___fttol 0047  
            ?_Flash_Memory_Initialization 0070                                 ??___lwdiv 0076  
                  ??_setDimmerLights_Main 007A                                    _r_data 00DF  
                    Exception_Main@status 0027                                    _s_data 00E0  
                  ??_setDimmerLights_SwOn 0079                                    _setLED 0AFB  
                                  _myMain 00BF                      ??_RF_Timeout_Counter 0072  
                  __end_of_setMemory_Data 1B75                     ?_setSw_Initialization 0070  
                        ___awdiv@quotient 0022                                    _setBuz 15F3  
                      __size_of_Temp_Main 0003          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 132D          __end_of_setDimmerIntr_Dimming_Sw 1243  
                   ___ftmul@f3_as_product 0031                 _setDimmerLights_DimmingOn 1125  
                               ??_setData 0072                  Flash_Memory_Read@address 0074  
                        ?_Timeout_Counter 0070                __end_of_setMemory_LoopSave 1CE7  
             __size_of_DimmerLights_IOC_1 000A               __size_of_DimmerLights_IOC_2 0001  
             __size_of_DimmerLights_IOC_3 0001                     __end_of_SwPointSelect 1F18  
             __size_of_DimmerLights_TMR_1 0054               __size_of_DimmerLights_TMR_2 0001  
            __size_of_Flash_Memory_Modify 0089                   __size_of_LedPointSelect 0022  
         setDimmerIntr_Dimming_Sw@command 0072                        setTemp_Main@TempGO 005B  
                        ___lbdiv@dividend 0074                       Flash_Memory_Write@i 0073  
            __size_of_Flash_Memory_Unlock 0009                                _TouchPower 1DA9  
             __size_of_CC2500_InitPATable 001D                       CC2500_TxData@loop_e 0077  
        __end_of_CC2500_registers_address 102F                   __end_of__initialization 0054  
         setDimmerIntr_DimmingValue@value 0057           getDimmerIntr_DimmingValue@value 0073  
                               ?_LED_Main 0070                                ___ftadd@f1 0036  
                              ___ftadd@f2 0039                      _getRF_KeyStatus$6018 0074  
                           ?_my_MainTimer 0070                 _setDimmerLights_SwOn$2633 0027  
               _setDimmerLights_SwOn$2642 0028                 _setDimmerLights_SwOn$2643 0029  
                              ___ftdiv@f1 0029                                ___ftdiv@f2 0026  
                              ___ftdiv@f3 0031             ?_setDimmerLights_DimmingClose 0070  
                              ___awtoft@c 0020                       ___bmul@multiplicand 0072  
            ?_DimmerLights_Initialization 0070                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                ?_DimmerIntr_Initialization 0070  
                              ___fttol@f1 0043                            __pcstackCOMMON 0070  
                         ?_Exception_Main 0070                              __pidataBANK5 1F18  
                           __end_of_getAD 1E68                                 ?_TMR1_ISR 0070  
                               ?_TMR1_Set 0070                 setMemory_LoopSave@command 0073  
                      _LED_Initialization 1CA7                           _getSw_KeyStatus 1F9B  
               ??_setControl_Lights_Table 007A                        getRF_KeyStatus@key 0073  
                         ?_setMemory_Data 0072            ??_DimmerLights_DimmingFunction 0025  
        ??_getDimmerLights_PercentToValue 0051           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 005E             ??_Flash_Memory_Initialization 0076  
                        ___lbdiv@quotient 0076                                 ?_WDT_Main 0070  
       setDimmerIntr_ControlStatus@lights 0074                        __size_of_getBuz_GO 0010  
               _setDimmerIntr_MaxmumValue 1078                __end_of_set_TimeoutCleared 1B24  
         setDimmerIntr_MaxmumValue@lights 0059                        __size_of_getRxData 0065  
                     ?_LED_Initialization 0070                         ?_CC2500_WriteByte 0070  
                          _setProductData 1BA2                      __size_of_setLED_Main 0047  
                                 ??_getAD 0075                       _Temp_Initialization 1B00  
                      ??_CC2500_WriteByte 0072                                 ?_Division 0077  
                              __pbssBANK0 0067                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 1433                         ??_setRFSW_Control 0060  
             ?_setDimmerLights_DimmingRun 0074                         __end_of_Temp_Main 1B06  
                                 ?_IO_Set 0070                            ??_my_MainTimer 0079  
                              ??_LED_Main 0077                           __CFG_VCAPEN$OFF 0000  
                 _DelayOff_Initialization 1B96                             ??_Switch_Main 007A  
                          DelayTime_1us@i 0074                            DelayTime_1us@j 0076  
                    ??_LED_Initialization 0077                              _DimmerLights 0069  
                       LedPointSelect@led 0073                    __size_of_DelayOff_Main 000C  
                    __size_of_setRF_Learn 0011                               setBuz@count 0078  
                 ?_getDimmerLights_Status 0070                                __pmaintext 15A2  
                          _getDelayOff_GO 1C0E                       _CC2500_WriteCommand 1E1C  
                    ?_Temp_Initialization 0070                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005A         __end_of_DimmerIntr_Initialization 039E  
           ??_DimmerLights_Initialization 007A                                ??_TMR1_ISR 0071  
                           ?_setTemp_Main 0070         __size_of_getDimmerIntr_Dimming_Sw 001F  
                              ??_TMR1_Set 0072                                __pintentry 0004  
                  ??_setSw_Initialization 0076                 ?_getDimmerIntr_Dimming_Sw 0070  
                      __size_of_setTxData 0007               ??_DimmerIntr_ValueCalculate 0022  
                                 ?_setLED 0074                    __size_of_DelayTime_1us 0025  
                                 _ADC_Set 1B37                                   ?_setBuz 0024  
                               ?___awtoft 0020                                 ?___ftpack 0072  
                              _getTemp_AD 0899        __end_of_DimmerLights_SelectPointer 1F59  
              _DimmerLights_SelectPointer 1F38                                ??_WDT_Main 0072  
            __end_of_setRF_Initialization 1B8B                        _setRFSW_AdjControl 0CED  
                  __end_of_setProductData 1BAE             setDimmerLights_Dimming@lights 0060  
                                 _IOC_ISR 1BD2                                   _IOC_Set 1B75  
                    __size_of_setLog_Code 0034             setDimmerLights_Dimming@status 005D  
   getDimmerLights_Allow_Condition@lights 0076                      ?_CC2500_WriteCommand 0070  
                       _Flash_Memory_Main 136D                         _Flash_Memory_Read 1D2D  
                  __size_of_CC2500_RxData 0064                    __size_of_CC2500_TxData 0066  
                     ?_setRFSW_AdjControl 0070                                   _RF_Data 0120  
                                 _RF_Main 1AFD                        ?_Flash_Memory_Main 0070  
                      ?_Flash_Memory_Read 0070                                ??_Division 0078  
                                 _WDT_Set 1B60           __end_of_setControl_Lights_Table 06B1  
                         setRF_Main@error 0066                    __size_of_setCmd_Status 0015  
                              ??_Fosc_Set 0072                               ?_TouchPower 0070  
         __end_of_setDimmerLights_Dimming 1552                       getCmd_Status@number 0072  
            __end_of_CC2500_FrequencyCabr 1B96                           __size_of_IO_Set 001B  
                     setCmd_Status@number 0074         __size_of_setDimmerIntr_Dimming_RF 003D  
       __size_of_setDimmerIntr_Dimming_Sw 0037                         __end_of_getBuz_GO 1CD7  
               ?_setDimmerIntr_Dimming_RF 0072                       ??_Flash_Memory_Main 0078  
               ?_setDimmerIntr_Dimming_Sw 0072                       ??_Flash_Memory_Read 0072  
                  __end_of_getDelayOff_GO 1C1D                                   _VarLED1 01E3  
                                 _VarLED2 01E7                                   _VarLED3 01EB  
          __end_of_getDimmerLights_Status 1BF0                         __end_of_getRxData 09C7  
                 __end_of_getSw_KeyStatus 1FBC                  _CC2500_registers_address 1000  
                   ??_Temp_Initialization 0072                      ??_setRFSW_AdjControl 005A  
                          ??_setTemp_Main 0058                           __size_of___bmul 0011  
                     setProductData@value 0055                                   ___awdiv 169A  
          ??_setDimmerLights_DimmingClose 0075                                   ___lbdiv 1F59  
                                 ___ftadd 01C9                                   ___ftdiv 0EA5  
                                 ___ftmul 06B1                                   ___fttol 0C66  
                     __end_of_Switch_Main 1C68                                   ___lwdiv 11A0  
              ??_getMain_All_LightsStatus 0072                   ??_Buzzer_Initialization 0072  
                         _getRF_KeyStatus 1C4A                                ??___awtoft 0023  
                              ??___ftpack 0077                           __size_of_setLED 0070  
                    setRFSW_AdjControl@sw 005D           DimmerIntr_ValueCalculate@lights 0024  
                         __size_of_setBuz 0053                                   __ptext1 127B  
                                 __ptext2 1C68                                   __ptext3 0899  
                                 __ptext4 1E4E                                   __ptext5 1CE7  
                                 __ptext6 07FE                                   __ptext7 1B03  
                                 __ptext8 039E                                   __ptext9 1E35  
               __size_of_CC2500_SIDLEMode 0004                              __size_of_ISR 001B  
              ??_getMain_All_Error_Status 0072                   ??_setDimmerLights_OnOff 0061  
                         ?_setProductData 0055                 __end_of_Flash_Memory_Main 13AE  
               __end_of_Flash_Memory_Read 1D41                   ??_setDimmerLights_SwOff 0074  
                              _setRF_Main 053A                   ??_myMain_Initialization 0072  
                           _DelayOff_Main 1BAE                  __end_of_setRF_AdjControl 120C  
                       _DimmerLights_Main 1D19                                   _setData 1552  
          __size_of_DlyOff_Initialization 0005                     ??_CC2500_WriteCommand 0074  
               __size_of_setMemory_Modify 0010             __end_of_DlyOff_Initialization 1B1F  
              __end_of_CC2500_ClearRXFIFO 1B12                  ??_setTemp_Initialization 0072  
              __end_of_CC2500_ClearTXFIFO 1B16                              ?_DlyOff_Main 0070  
                      ?_DimmerLights_Main 0070                                   _product 006D  
                          _LedPointSelect 10BC                 getAll_Sw_KeyStatus@status 0073  
                         getTemp_AD@ADRES 0078                       _DelayOffPointSelect 1EBB  
                                 clrloop0 1B2B            __size_of_Switch_Initialization 000C  
               _DimmerIntr_ValueCalculate 16EE             __end_of_Switch_Initialization 07FE  
                    end_of_initialization 0054                 ??_DelayOff_Initialization 0075  
                       _CC2500_InitSetREG 1176                             _DelayTime_1us 1100  
                       __end_of_setTxData 1B37                __end_of_Flash_Memory_Write 1176  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 1B24  
              __end_of_setRF_TransceiveGO 1C97                        ?_CC2500_InitSetREG 0070  
                     ??_DimmerLights_Main 007A                      Flash_Memory_Read@ret 0075  
                                 initloop 1B25                                _setSw_Main 0058  
                   CC2500_ReadByte@loop_b 0073                    setDimmerLights_SwOn@sw 002B  
                       _CC2500_ReadStatus 10DE                      Flash_Memory_Modify@i 0077  
                   _setLED_Initialization 1C3B                           ?_getDelayOff_GO 0070  
                              getBuz_GO@i 0076                        ?_CC2500_ReadStatus 0070  
                __size_of_CC2500_ReadByte 0017                             _CC2500_RxData 0835  
                           _CC2500_TxData 0A2D                       ??_CC2500_InitSetREG 0077  
           __size_of_Flash_Memory_Erasing 000C                      ?_DelayOffPointSelect 0070  
                     _Flash_Memory_Modify 0D74                              __pstringtext 1000  
                           _setCmd_Status 1D55                       _Flash_Memory_Unlock 1B4D  
                     ??_CC2500_ReadStatus 0074                   CC2500_InitSetREG@loop_c 0022  
                             ?_getTemp_AD 0070                       __size_of_TouchPower 0015  
                setLED_Initialization@led 0076                   setTemp_Main@DangerValue 005E  
                  setSw_Initialization@sw 0076                 __end_of_DimmerLights_Main 1D2D  
                      _Mcu_Initialization 1066                  __size_of_CC2500_PowerRST 0043  
        __size_of_setOverTemp_ADV_Restore 0019              __end_of_setRF_TimeoutCleared 1B0E  
                    __end_of_my_MainTimer 12B3                            ?_DelayOff_Main 0070  
                        __CFG_FOSC$INTOSC 0000                    __end_of_LedPointSelect 10DE  
                __size_of_CC2500_WriteREG 0021          setDimmerIntr_DimmingValue@lights 0059  
        getDimmerIntr_DimmingValue@lights 0074                 __end_of_CC2500_InitSetREG 11A0  
                     ?_Mcu_Initialization 0070                      ?_Flash_Memory_Modify 0070  
             __size_of_setRF_DimmerLights 0066                            ?_DelayTime_1us 0072  
                    ?_Flash_Memory_Unlock 0070        __size_of_setDimmerIntr_MaxmumValue 0022  
               __end_of_CC2500_ReadStatus 1100                             ?_RF_RxDisable 0070  
          setDimmerIntr_Dimming_RF@lights 0074           getMain_All_Error_Status@command 0073  
                             ___ftdiv@exp 0034         __end_of_setDimmerLights_DimmingOn 114C  
                        ??_Exception_Main 0079                            __end_of_IO_Set 1E9E  
                    _setRF_Initialization 1B80                        _setMemory_LoopSave 1CD7  
                             _Switch_Main 1C59                         __size_of_LED_Main 0010  
                        ?_getSw_KeyStatus 0070                            ?_CC2500_RxData 0070  
                          ?_CC2500_TxData 0070                   __end_of_getRF_KeyStatus 1C59  
                        ??_setMemory_Data 0073                               ___ftmul@exp 0030  
                   _CC2500_PowerOnInitial 1D7F               ??_DimmerIntr_Initialization 0057  
                    ??_Mcu_Initialization 0073               __end_of_getAll_Sw_KeyStatus 1C3B  
                   ??_DelayOffPointSelect 0072                             ?_WDT_Clearing 0070  
                          ?_setCmd_Status 0072                       ?_setMemory_LoopSave 0070  
                          __end_of___bmul 1D08       __size_of_getDimmerIntr_DimmingValue 001B  
                    setRF_DimmerLights@on 0058                         getSw_KeyStatus@sw 0073  
             __size_of_RF_Timeout_Counter 0015                         __size_of_TMR1_ISR 0022  
        DimmerLights_SelectPointer@lights 0073                         __size_of_TMR1_Set 000C  
           __size_of_setDimmerLights_Main 0065                            __end_of_setLED 0B6B  
           __size_of_setDimmerLights_SwOn 008D                            __end_of_setBuz 1646  
              __end_of_DimmerLights_IOC_1 1B60                __end_of_DimmerLights_IOC_2 1AF6  
              __end_of_DimmerLights_IOC_3 1AF7                      _CC2500_FrequencyCabr 1B8B  
              __size_of_Flash_Memory_Main 0041                __size_of_Flash_Memory_Read 0014  
                             ?_setRF_Main 0070                           _setRFSW_Control 132D  
                       __size_of_WDT_Main 0010                __end_of_DimmerLights_TMR_1 169A  
              __end_of_DimmerLights_TMR_2 0801                       start_initialization 0021  
                         ?_LedPointSelect 0070                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 0010                     ??_Flash_Memory_Modify 0076  
            ?_setDimmerIntr_ControlStatus 0072                __end_of_CC2500_InitPATable 1EBB  
         __size_of_setTemp_Initialization 0001                      ??_setMemory_LoopSave 0072  
                   ??_Flash_Memory_Unlock 0072                      __end_of_setTemp_Main 046F  
                          ??_RF_RxDisable 0072    __end_of_getDimmerLights_PercentToValue 17A0  
 __size_of_getDimmerLights_PercentToValue 005B            _getDimmerLights_PercentToValue 1745  
                            ?_Buzzer_Main 0070       getDimmerLights_PercentToValue@value 0053  
           setRF_AdjControl@dimmingStatus 0078                        _set_TimeoutCleared 1B1F  
       __end_of_setDimmerIntr_MaxmumValue 109A                                  ??_IO_Set 0072  
                __size_of_Timeout_Counter 0015                                 _VarErrLED 01DF  
                       __size_of_Division 000F                               ?_setSw_Main 0070  
                     __size_of_getTemp_AD 0064                    ?_setLED_Initialization 0070  
                   ?_setRF_Initialization 0070                         __size_of_Fosc_Set 0004  
               __size_of_CC2500_WriteByte 0014                                 _Temp_Main 1B03  
                     ?_set_TimeoutCleared 0070                            ??_WDT_Clearing 0072  
                               _Rx_Length 00DC                     setProductData@address 0057  
                     Exception_Main@count 0028                       Exception_Main@error 0029  
                                ??___bmul 0073                    __size_of_SwPointSelect 001F  
        __end_of_getMain_All_LightsStatus 1DD4                                 _Tx_Length 006C  
                             __pdataBANK5 02A0                                  ??_setLED 0075  
                                ?_ADC_Set 0070                                  ??_setBuz 0077  
                         ??_DelayOff_Main 007A                         ??_CC2500_ReadByte 0072  
             ?_DimmerLights_SelectPointer 0070          __end_of_getMain_All_Error_Status 1E1C  
                        _CC2500_SIDLEMode 1B16                __size_of_DimmerLights_Main 0014  
                      setMemory_Data@data 0072                     ?_CC2500_FrequencyCabr 0070  
          setDimmerIntr_Dimming_Sw@lights 0074            getDimmerIntr_Dimming_Sw@lights 0073  
                           ??_setLED_Main 0074                         __size_of___awtoft 0022  
                       __size_of___ftpack 0060                                  ?_IOC_ISR 0070  
                             __pbssCOMMON 007B                                  ?_IOC_Set 0070  
          getDimmerIntr_Dimming_Sw@status 0072                                 ___latbits 0003  
                        _setMemory_Modify 1C77                             __pcstackBANK0 0020  
               setRF_TransceiveGO@command 0073                             __pcstackBANK4 0255  
                    ??_set_TimeoutCleared 0072                 _DimmerIntr_Initialization 02BF  
                         ??_DelayTime_1us 0074                __size_of_CC2500_InitSetREG 002A  
                           DlyOff_Main@sw 005A                         ??_CC2500_PowerRST 0078  
                                ?_RF_Main 0070                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0073                              ??_TouchPower 0072  
                    __size_of_DlyOff_Main 0068                __size_of_CC2500_ReadStatus 0022  
          setDimmerIntr_MaxmumValue@value 0057               setDimmerLights_DimmingOn@sw 0074  
                       ??_CC2500_WriteREG 0075                             ??_setRF_Learn 0072  
                           _DimmerLights1 0155                             _DimmerLights2 015E  
                           _DimmerLights3 0167                     CC2500_WriteREG@w_addr 0076  
                   setDelayOff_GO@command 0058                           ??_CC2500_RxData 0076  
                setRFSW_AdjControl@status 005C                           ??_CC2500_TxData 0076  
                               __pnvBANK0 006D                            getRxData@error 0064  
             __size_of_LED_Initialization 0010                      _setRF_TimeoutCleared 1B0A  
                  ?_CC2500_PowerOnInitial 0070                           Exception_Main@i 002A  
                              ?_Temp_Main 0070        __size_of_DimmerIntr_ValueCalculate 0057  
                     __size_of_setRF_Main 00BF                          ___lwdiv@dividend 0074  
                   DelayOffPointSelect@sw 0073                             _getCmd_Status 1C97  
                              setBuz@time 0024                           ??_setCmd_Status 0073  
                     setDelayOff_GO@value 0059                  ?_setControl_Lights_Table 0070  
                        ?_getRF_KeyStatus 0070                    _setTemp_Initialization 0003  
                               _getBuz_GO 1CC7                  ?_setDimmerLights_Dimming 005D  
     __end_of_Flash_Memory_Initialization 053A               _Flash_Memory_Initialization 046F  
                                ?___awdiv 0072                                 __ptext100 120C  
                               __ptext101 1E68                                  ?___lbdiv 0072  
                               __ptext110 1745                                 __ptext102 13AE  
                               __ptext111 0C66                                 __ptext103 0DFD  
                               __ptext120 0A93                                 __ptext112 06B1  
                               __ptext104 16EE                                 __ptext121 1BA2  
                               __ptext113 0EA5                                 __ptext105 1BFF  
                               __ptext130 1B1A                                 __ptext122 0765  
                               __ptext114 01C9                                 __ptext106 0002  
                               __ptext131 1EBB                                 __ptext123 15F3  
                               __ptext115 1FDE                                 __ptext107 02BF  
                               __ptext140 1AF5                                 __ptext132 1433  
                               __ptext124 169A                                 __ptext116 17A0  
                               __ptext108 1C77                                 __ptext141 1B56  
                               __ptext133 1AF7                                 __ptext125 1EDA  
                               __ptext117 1BF0                                 __ptext109 1479  
                                ?___ftadd 0036                                 __ptext126 1243  
                               __ptext118 1F59                                 __ptext135 1FBC  
                               __ptext127 1BE1                                 __ptext119 1BAE  
                               __ptext136 0800                                 __ptext128 1F38  
                               __ptext137 1646                                 __ptext129 1B96  
                               __ptext138 1BD2                                 __ptext139 1AF6  
                               _getRxData 0962                                  ?___ftdiv 0026  
                                ?___ftmul 0026                                  ?___fttol 0043  
                   __size_of_my_MainTimer 0038                                  ?___lwdiv 0072  
                 __end_of_setRFSW_Control 136D                          ??_setProductData 0056  
                 _setOverTemp_ADV_Restore 1E35             __size_of_setSw_Initialization 0007  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 1AFA  
                           ??_setLog_Code 0058                        __end_of_TouchPower 1DBE  
                     __size_of_setSw_Main 0171              CC2500_ReadStatus@status_addr 0075  
      __end_of_getDimmerIntr_DimmingValue 1E83              ??_setDimmerIntr_DimmingValue 0058  
              _getDimmerIntr_DimmingValue 1E68                    CC2500_WriteByte@loop_a 0073  
                                ?_setData 0070            __size_of_setDimmerLights_OnOff 00B2  
                       ?_setRF_AdjControl 0070                                 _r_address 00DE  
           __end_of_setDimmerLights_OnOff 1000            __size_of_setDimmerLights_SwOff 0038  
          __size_of_myMain_Initialization 000F             __end_of_setDimmerLights_SwOff 127B  
            __end_of_CC2500_patable_vaule 1066             __end_of_myMain_Initialization 1C77  
                          __size_of_getAD 001A                          ___lwdiv@quotient 0077  
                      ??_setRF_AdjControl 0076                             _SwPointSelect 1EF9  
                     __end_of_setLED_Main 1506                          ??_getDelayOff_GO 0074  
                  ??_setRF_Initialization 0072               __end_of_Temp_Initialization 1B03  
                       _CC2500_rfSettings 102F                                  _LED_Main 1CB7  
                         SwPointSelect@sw 0073                                 clear_ram0 1B2A  
                CC2500_InitPATable@loop_d 0079                     ?_setRF_TimeoutCleared 0070  
                            _my_MainTimer 127B                                 _setTxData 1B30  
     __end_of_DimmerLights_Initialization 1C0E               _DimmerLights_Initialization 1BFF  
                      _CC2500_ClearRXFIFO 1B0E                    _Flash_Memory_Main$3656 0021  
                          ?_getCmd_Status 0070                        _CC2500_ClearTXFIFO 1B12  
                _getDimmerIntr_Dimming_Sw 1EDA                  setRF_DimmerLights@lights 005C  
                                _GO_nDONE 04E9                       __end_of_setRF_Learn 1D19  
                       ??_Timeout_Counter 0072                                ?_getBuz_GO 0072  
                setRF_DimmerLights@status 005B      __size_of_setDimmerIntr_ControlStatus 003D  
             __size_of_setRFSW_AdjControl 0087       __size_of_setDimmerIntr_DimmingValue 0022  
                      _Flash_Memory_Write 114C                                ?_getRxData 0070  
                                _TMR1_ISR 1FBC                    CC2500_InitSetREG@temp1 0020  
                  CC2500_InitSetREG@temp2 0021                                  _TMR1_Set 1BC6  
                     ?_CC2500_ClearRXFIFO 0070                       ?_CC2500_ClearTXFIFO 0070  
                      _setRF_TransceiveGO 1C87                                  _RF_Count 0151  
                    __end_of_RF_RxDisable 1B4D                              ??_getTemp_AD 0076  
             __end_of_CC2500_WriteCommand 1E35                    ??_CC2500_FrequencyCabr 0078  
                                _WDT_Main 1CE7                   DlyOff_Initialization@sw 0074  
                   getSw_KeyStatus@status 0072                          __size_of_ADC_Set 0007  
                     ?_Flash_Memory_Write 0070                     __size_of_setTemp_Main 00D1  
                     ?_setRF_TransceiveGO 0070                   __size_of_setDelayOff_GO 0084  
                                _DelayOff 0068                              setSw_Main@sw 002E  
                        __size_of_IOC_ISR 000F            getMain_All_Error_Status@status 0076  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1BC6  
                          ?_SwPointSelect 0070                               getAD@adcon0 0075  
                             getAD@adcon1 0072                            setLED_Main@led 0076  
                    __end_of_WDT_Clearing 0800                       __end_of_setLog_Code 0835  
                   _DlyOff_Initialization 1B1A         __size_of_getMain_All_LightsStatus 0016  
                    ??_CC2500_ClearRXFIFO 0076                                  _Division 1BF0  
               ?_getMain_All_LightsStatus 0070                      ??_CC2500_ClearTXFIFO 0076  
               __end_of_CC2500_rfSettings 105E                          __size_of_RF_Main 0003  
                _setDimmerIntr_Dimming_RF 12F0               setDimmerLights_OnOff@lights 0063  
                _setDimmerIntr_Dimming_Sw 120C                                  _Fosc_Set 1B06  
                        __size_of_WDT_Set 000A                     setRFSW_Control@status 0061  
                   _Switch_Initialization 07F2         __size_of_getMain_All_Error_Status 0019  
                    ??_Flash_Memory_Write 0072                 ?_getMain_All_Error_Status 0070  
                    __size_of_Buzzer_Main 0046                        __end_of_getTemp_AD 08FD  
                              ?_setTxData 0070                              ?_Switch_Main 0070  
                        _CC2500_WriteByte 1D41       __size_of_DimmerLights_SelectPointer 0021  
                    ??_setRF_TransceiveGO 0072                                  _SwDetect 00DD  
                             ??_Temp_Main 007A                          getCmd_Status@cmd 0073  
                        setCmd_Status@cmd 0072                         setRFSW_Control@sw 0062  
           _getMain_All_Error_Status$4125 0074          ??_getDimmerLights_ValueToPercent 007A  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0075  
               ??_setOverTemp_ADV_Restore 0072                              _setTemp_Main 039E  
                        __size_of___awdiv 0054                          __size_of___lbdiv 0021  
                        __size_of___ftadd 00F6                          ?_setRFSW_Control 0070  
                        __size_of___ftdiv 00A9                          __size_of___ftmul 00B4  
                        __size_of___fttol 0087                          __size_of___lwdiv 0036  
                setDimmerLights_SwOn@idle 002A                                  ___awtoft 1FDE  
                        ??_LedPointSelect 0072                                  ___ftpack 17A0  
                       getTemp_AD@channel 0077                              ??_setRF_Main 0065  
                    CC2500_WriteREG@value 0074                               _setLED_Main 14BF  
              __end_of_setRF_DimmerLights 0A2D                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
                        setDelayOff_GO@sw 005F                           ___lwdiv@divisor 0072  
                        __size_of_setData 0050                           ___lwdiv@counter 0079  
                                __ptext10 1B00                                  __ptext11 0003  
                                __ptext20 1D94                                  __ptext12 1C59  
                                __ptext21 07F2                                  __ptext13 0058  
                                __ptext30 11D6                                  __ptext22 1B3E  
                                __ptext14 1D08                                  __ptext31 132D  
                                __ptext23 1AFD                                  __ptext15 1125  
                                __ptext40 10DE                                  __ptext32 0CED  
                                __ptext24 053A                                  __ptext16 1F9B  
                                __ptext41 1DD4                                  __ptext33 1DEB  
                                __ptext25 1552                                  __ptext17 1EF9  
                                __ptext50 1B12                                  __ptext42 1D7F  
                                __ptext34 1C4A                                  __ptext26 0962  
                                __ptext18 1DA9                                  __ptext51 1B0E  
                                __ptext43 1B16                                  __ptext35 1CC7  
                                __ptext27 0801                                  __ptext19 1B1F  
                                __ptext60 1BC6                                  __ptext52 1E1C  
                                __ptext44 13F0                                  __ptext36 11A0  
                                __ptext28 1CD7                                  __ptext61 1E83  
                                __ptext53 1B0A                                  __ptext45 1176  
                                __ptext37 1B45                                  __ptext29 05F9  
                                __ptext70 1C2C                                  __ptext62 1B75  
                                __ptext54 1D6A                                  __ptext46 1E9E  
                                __ptext38 0A2D                                  __ptext71 0D74  
                                __ptext63 1B06                                  __ptext55 1D41  
                                __ptext47 1F7A                                  __ptext39 0835  
                                __ptext80 1D19                                  __ptext72 1BBA  
                                __ptext64 1B37                                  __ptext56 1AFA  
                                __ptext48 1B8B                                  __ptext81 08FD  
                                __ptext73 046F                                  __ptext65 1CB7  
                                __ptext57 1B80                                  __ptext49 1100  
                                __ptext90 1CF7                                  __ptext82 0F4E  
                                __ptext74 1B6A                                  __ptext66 14BF  
                                __ptext58 1066                                  __ptext91 1D55  
                                __ptext83 0AFB                                  __ptext75 114C  
                                __ptext67 1CA7                                  __ptext59 1B60  
                                __ptext92 1DBE                                  __ptext84 10BC  
                                __ptext76 1B4D                                  __ptext68 1C3B  
                                __ptext93 1C0E                                  __ptext85 1C1D  
                                __ptext77 1D2D                                  __ptext69 136D  
                                __ptext94 1C97                                  __ptext86 12F0  
                                __ptext78 0B6B                                  __ptext95 1506  
                                __ptext87 109A                                  __ptext79 1E03  
                                __ptext96 1B30                                  __ptext88 12B3  
                                __ptext97 1C87                                  __ptext89 0BE2  
                                __ptext98 09C7                                  __ptext99 1078  
                                __product 02A0                   ??_setLED_Initialization 0076  
                ??_getDimmerLights_Status 0074              __end_of_setDimmerLights_Main 0962  
                      _DimmerLights_IOC_1 1B56                        _DimmerLights_IOC_2 1AF5  
            __end_of_setDimmerLights_SwOn 07F2                        _DimmerLights_IOC_3 1AF6  
                            ??_setSw_Main 002C                    ??_setRF_TimeoutCleared 0072  
            ??_setDimmerLights_DimmingRun 0075                             setLED@command 0074  
                           __size_of_main 0051                               _setRF_Learn 1D08  
      __size_of_DimmerIntr_Initialization 00DF                           ??_getCmd_Status 0072  
                      _DimmerLights_TMR_1 1646                        _DimmerLights_TMR_2 0800  
                __end_of_CC2500_SIDLEMode 1B1A                setDimmerLights_Main@lights 0064  
             __end_of_DelayOffPointSelect 1EDA                  setOverTemp_ADV_Restore@i 0073  
              CC2500_WriteCommand@command 0075                           _CC2500_ReadByte 1DD4  
              ?_setDimmerLights_DimmingOn 0070                        _CC2500_InitPATable 1E9E  
                __end_of_setMemory_Modify 1C87                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_IOC_2 0070                       ?_DimmerLights_IOC_3 0070  
                      __end_of_setRF_Main 05F9                               ??_getBuz_GO 0074  
                     ?_DimmerLights_TMR_1 0070                       ?_DimmerLights_TMR_2 0070  
             __size_of_Mcu_Initialization 0012                      _CC2500_patable_vaule 105E  
                             ??_getRxData 0063                __end_of_RF_Timeout_Counter 1D7F  
             Flash_Memory_Main@key_Status 0020                  _getAll_Sw_KeyStatus$7153 0074  
                                main@argc 0255                                  main@argv 0257  
                     ?_CC2500_InitPATable 0070       getDimmerLights_ValueToPercent@value 0051  
                         _CC2500_PowerRST 13F0                  __size_of_getSw_KeyStatus 0021  
            setDimmerLights_Dimming@value 005F        __end_of_setDimmerIntr_DimmingValue 10BC  
              _setDimmerIntr_DimmingValue 109A               __end_of_Flash_Memory_Modify 0DFD  
            __size_of_getAll_Sw_KeyStatus 000F                               _setLog_Code 0801  
             __end_of_Flash_Memory_Unlock 1B56                           ??_SwPointSelect 0072  
                         _CC2500_WriteREG 1F7A                        __end_of_setSw_Main 01C9  
                    ??_DimmerLights_IOC_1 0070                      ??_DimmerLights_IOC_2 0070  
                    ??_DimmerLights_IOC_3 0070           getDimmerLights_PercentToValue@i 0054  
     __size_of_setDimmerLights_DimmingRun 0018                             _Transceive_OK 03D1  
                  ?_DlyOff_Initialization 0070                      ??_DimmerLights_TMR_1 0070  
                    ??_DimmerLights_TMR_2 0070                            Division@result 0021  
         __end_of_setOverTemp_ADV_Restore 1E4E                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0072                   setDimmerLights_SwOff@sw 0074  
             __size_of_setMemory_LoopSave 0010                                  intlevel1 0000  
                    ??_CC2500_InitPATable 0077                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 005C                           setDelayOff_GO@j 005D  
                         setDelayOff_GO@k 005E                   ??_CC2500_PowerOnInitial 007A  
                   setTemp_Main@SafeValue 005C    __end_of_setDimmerLights_Initialization 0003  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0002  
              ?_setDimmerIntr_MaxmumValue 0057                   ?_setTemp_Initialization 0070  
                             ??_setTxData 0072                    CC2500_InitPATable@temp 0078  
                   __size_of_RF_RxDisable 0008                         _RF_Initialization 1AFA  
                    _Flash_Memory_Erasing 1BBA                        ?_RF_Initialization 0070  
                              _SPI0Buffer 006A                   __size_of_Exception_Main 0077  
                           Division@value 0020           __end_of_DelayOff_Initialization 1BA2  
                   __size_of_WDT_Clearing 0002                     __end_of_DelayOff_Main 1BBA  
                     ??_RF_Initialization 0073                   __size_of_setMemory_Data 000B  
                          _setDelayOff_GO 0BE2               ?_getDimmerIntr_DimmingValue 0070  
        __size_of_setControl_Lights_Table 00B8          __size_of_setDimmerLights_Dimming 004C  
    __size_of_Flash_Memory_Initialization 00CB               __size_of_set_TimeoutCleared 0005  
                           ??_DlyOff_Main 0058                     setMemory_Data@address 0074  
                   __end_of_DelayTime_1us 1125                ??_getDimmerIntr_Dimming_Sw 0072  
                 __end_of_CC2500_ReadByte 1DEB              __end_of_setSw_Initialization 1B45  
                         _Timeout_Counter 1D94           __size_of_getDimmerLights_Status 000F  
         getDimmerLights_ValueToPercent@i 0052                              _RF_RxDisable 1B45  
        Flash_Memory_Initialization@value 0077                __end_of_LED_Initialization 1CB7  
          __end_of_setTemp_Initialization 0004                               Division@num 0077  
                 setMemory_Modify@command 0073                 __end_of_RF_Initialization 1AFD  
               __size_of_setRF_AdjControl 0036                     __end_of_CC2500_RxData 0899  
                   __end_of_CC2500_TxData 0A93                   __end_of_CC2500_PowerRST 1433  
