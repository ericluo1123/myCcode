

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Oct 09 16:59:26 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  011D                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  018E                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020D                     	;# 
   132  0210                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0298                     	;# 
   153  0298                     	;# 
   154  0299                     	;# 
   155  029A                     	;# 
   156  0394                     	;# 
   157  0395                     	;# 
   158  0396                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  0116                     	;# 
   217  0117                     	;# 
   218  011D                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  018E                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0194                     	;# 
   228  0195                     	;# 
   229  0196                     	;# 
   230  0197                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019B                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019C                     	;# 
   238  019C                     	;# 
   239  019D                     	;# 
   240  019E                     	;# 
   241  019F                     	;# 
   242  020D                     	;# 
   243  0210                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0291                     	;# 
   260  0291                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0298                     	;# 
   264  0298                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  0394                     	;# 
   268  0395                     	;# 
   269  0396                     	;# 
   270  0FE4                     	;# 
   271  0FE5                     	;# 
   272  0FE6                     	;# 
   273  0FE7                     	;# 
   274  0FE8                     	;# 
   275  0FE9                     	;# 
   276  0FEA                     	;# 
   277  0FEB                     	;# 
   278  0FED                     	;# 
   279  0FEE                     	;# 
   280  0FEF                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  0010                     	;# 
   297  0011                     	;# 
   298  0012                     	;# 
   299  0015                     	;# 
   300  0016                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001C                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  0090                     	;# 
   312  0091                     	;# 
   313  0092                     	;# 
   314  0095                     	;# 
   315  0096                     	;# 
   316  0097                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009B                     	;# 
   321  009C                     	;# 
   322  009D                     	;# 
   323  009E                     	;# 
   324  010C                     	;# 
   325  010D                     	;# 
   326  010E                     	;# 
   327  0116                     	;# 
   328  0117                     	;# 
   329  011D                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  018E                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0197                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020D                     	;# 
   354  0210                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0291                     	;# 
   371  0291                     	;# 
   372  0292                     	;# 
   373  0293                     	;# 
   374  0298                     	;# 
   375  0298                     	;# 
   376  0299                     	;# 
   377  029A                     	;# 
   378  0394                     	;# 
   379  0395                     	;# 
   380  0396                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  018E                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0197                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019C                     	;# 
   460  019C                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019F                     	;# 
   464  020D                     	;# 
   465  0210                     	;# 
   466  0211                     	;# 
   467  0211                     	;# 
   468  0212                     	;# 
   469  0212                     	;# 
   470  0213                     	;# 
   471  0213                     	;# 
   472  0214                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0217                     	;# 
   481  0291                     	;# 
   482  0291                     	;# 
   483  0292                     	;# 
   484  0293                     	;# 
   485  0298                     	;# 
   486  0298                     	;# 
   487  0299                     	;# 
   488  029A                     	;# 
   489  0394                     	;# 
   490  0395                     	;# 
   491  0396                     	;# 
   492  0FE4                     	;# 
   493  0FE5                     	;# 
   494  0FE6                     	;# 
   495  0FE7                     	;# 
   496  0FE8                     	;# 
   497  0FE9                     	;# 
   498  0FEA                     	;# 
   499  0FEB                     	;# 
   500  0FED                     	;# 
   501  0FEE                     	;# 
   502  0FEF                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  0010                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  010C                     	;# 
   547  010D                     	;# 
   548  010E                     	;# 
   549  0116                     	;# 
   550  0117                     	;# 
   551  011D                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  018E                     	;# 
   555  0191                     	;# 
   556  0191                     	;# 
   557  0192                     	;# 
   558  0193                     	;# 
   559  0193                     	;# 
   560  0194                     	;# 
   561  0195                     	;# 
   562  0196                     	;# 
   563  0197                     	;# 
   564  0199                     	;# 
   565  019A                     	;# 
   566  019B                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019C                     	;# 
   571  019C                     	;# 
   572  019D                     	;# 
   573  019E                     	;# 
   574  019F                     	;# 
   575  020D                     	;# 
   576  0210                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0216                     	;# 
   590  0217                     	;# 
   591  0217                     	;# 
   592  0291                     	;# 
   593  0291                     	;# 
   594  0292                     	;# 
   595  0293                     	;# 
   596  0298                     	;# 
   597  0298                     	;# 
   598  0299                     	;# 
   599  029A                     	;# 
   600  0394                     	;# 
   601  0395                     	;# 
   602  0396                     	;# 
   603  0FE4                     	;# 
   604  0FE5                     	;# 
   605  0FE6                     	;# 
   606  0FE7                     	;# 
   607  0FE8                     	;# 
   608  0FE9                     	;# 
   609  0FEA                     	;# 
   610  0FEB                     	;# 
   611  0FED                     	;# 
   612  0FEE                     	;# 
   613  0FEF                     	;# 
   614  0000                     	;# 
   615  0001                     	;# 
   616  0002                     	;# 
   617  0003                     	;# 
   618  0004                     	;# 
   619  0005                     	;# 
   620  0006                     	;# 
   621  0007                     	;# 
   622  0008                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0016                     	;# 
   635  0017                     	;# 
   636  0018                     	;# 
   637  0019                     	;# 
   638  001A                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  008C                     	;# 
   642  008D                     	;# 
   643  008E                     	;# 
   644  0090                     	;# 
   645  0091                     	;# 
   646  0092                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0099                     	;# 
   651  009A                     	;# 
   652  009B                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010D                     	;# 
   659  010E                     	;# 
   660  0116                     	;# 
   661  0117                     	;# 
   662  011D                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018E                     	;# 
   666  0191                     	;# 
   667  0191                     	;# 
   668  0192                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0197                     	;# 
   675  0199                     	;# 
   676  019A                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019C                     	;# 
   682  019C                     	;# 
   683  019D                     	;# 
   684  019E                     	;# 
   685  019F                     	;# 
   686  020D                     	;# 
   687  0210                     	;# 
   688  0211                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0212                     	;# 
   692  0213                     	;# 
   693  0213                     	;# 
   694  0214                     	;# 
   695  0214                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0216                     	;# 
   700  0216                     	;# 
   701  0217                     	;# 
   702  0217                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0298                     	;# 
   708  0298                     	;# 
   709  0299                     	;# 
   710  029A                     	;# 
   711  0394                     	;# 
   712  0395                     	;# 
   713  0396                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  0010                     	;# 
   741  0011                     	;# 
   742  0012                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0092                     	;# 
   758  0095                     	;# 
   759  0096                     	;# 
   760  0097                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  010C                     	;# 
   769  010D                     	;# 
   770  010E                     	;# 
   771  0116                     	;# 
   772  0117                     	;# 
   773  011D                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  018E                     	;# 
   777  0191                     	;# 
   778  0191                     	;# 
   779  0192                     	;# 
   780  0193                     	;# 
   781  0193                     	;# 
   782  0194                     	;# 
   783  0195                     	;# 
   784  0196                     	;# 
   785  0197                     	;# 
   786  0199                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019F                     	;# 
   797  020D                     	;# 
   798  0210                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0213                     	;# 
   805  0214                     	;# 
   806  0214                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0216                     	;# 
   811  0216                     	;# 
   812  0217                     	;# 
   813  0217                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0298                     	;# 
   819  0298                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  0394                     	;# 
   823  0395                     	;# 
   824  0396                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  0090                     	;# 
   867  0091                     	;# 
   868  0092                     	;# 
   869  0095                     	;# 
   870  0096                     	;# 
   871  0097                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  010C                     	;# 
   880  010D                     	;# 
   881  010E                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  011D                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  0191                     	;# 
   889  0191                     	;# 
   890  0192                     	;# 
   891  0193                     	;# 
   892  0193                     	;# 
   893  0194                     	;# 
   894  0195                     	;# 
   895  0196                     	;# 
   896  0197                     	;# 
   897  0199                     	;# 
   898  019A                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019C                     	;# 
   904  019C                     	;# 
   905  019D                     	;# 
   906  019E                     	;# 
   907  019F                     	;# 
   908  020D                     	;# 
   909  0210                     	;# 
   910  0211                     	;# 
   911  0211                     	;# 
   912  0212                     	;# 
   913  0212                     	;# 
   914  0213                     	;# 
   915  0213                     	;# 
   916  0214                     	;# 
   917  0214                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0216                     	;# 
   922  0216                     	;# 
   923  0217                     	;# 
   924  0217                     	;# 
   925  0291                     	;# 
   926  0291                     	;# 
   927  0292                     	;# 
   928  0293                     	;# 
   929  0298                     	;# 
   930  0298                     	;# 
   931  0299                     	;# 
   932  029A                     	;# 
   933  0394                     	;# 
   934  0395                     	;# 
   935  0396                     	;# 
   936  0FE4                     	;# 
   937  0FE5                     	;# 
   938  0FE6                     	;# 
   939  0FE7                     	;# 
   940  0FE8                     	;# 
   941  0FE9                     	;# 
   942  0FEA                     	;# 
   943  0FEB                     	;# 
   944  0FED                     	;# 
   945  0FEE                     	;# 
   946  0FEF                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0008                     	;# 
   956  0009                     	;# 
   957  000A                     	;# 
   958  000B                     	;# 
   959  000C                     	;# 
   960  000D                     	;# 
   961  000E                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  008C                     	;# 
   975  008D                     	;# 
   976  008E                     	;# 
   977  0090                     	;# 
   978  0091                     	;# 
   979  0092                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0097                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  010C                     	;# 
   991  010D                     	;# 
   992  010E                     	;# 
   993  0116                     	;# 
   994  0117                     	;# 
   995  011D                     	;# 
   996  018C                     	;# 
   997  018D                     	;# 
   998  018E                     	;# 
   999  0191                     	;# 
  1000  0191                     	;# 
  1001  0192                     	;# 
  1002  0193                     	;# 
  1003  0193                     	;# 
  1004  0194                     	;# 
  1005  0195                     	;# 
  1006  0196                     	;# 
  1007  0197                     	;# 
  1008  0199                     	;# 
  1009  019A                     	;# 
  1010  019B                     	;# 
  1011  019B                     	;# 
  1012  019B                     	;# 
  1013  019B                     	;# 
  1014  019C                     	;# 
  1015  019C                     	;# 
  1016  019D                     	;# 
  1017  019E                     	;# 
  1018  019F                     	;# 
  1019  020D                     	;# 
  1020  0210                     	;# 
  1021  0211                     	;# 
  1022  0211                     	;# 
  1023  0212                     	;# 
  1024  0212                     	;# 
  1025  0213                     	;# 
  1026  0213                     	;# 
  1027  0214                     	;# 
  1028  0214                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0216                     	;# 
  1033  0216                     	;# 
  1034  0217                     	;# 
  1035  0217                     	;# 
  1036  0291                     	;# 
  1037  0291                     	;# 
  1038  0292                     	;# 
  1039  0293                     	;# 
  1040  0298                     	;# 
  1041  0298                     	;# 
  1042  0299                     	;# 
  1043  029A                     	;# 
  1044  0394                     	;# 
  1045  0395                     	;# 
  1046  0396                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  0010                     	;# 
  1074  0011                     	;# 
  1075  0012                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0016                     	;# 
  1079  0017                     	;# 
  1080  0018                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  0090                     	;# 
  1089  0091                     	;# 
  1090  0092                     	;# 
  1091  0095                     	;# 
  1092  0096                     	;# 
  1093  0097                     	;# 
  1094  0099                     	;# 
  1095  009A                     	;# 
  1096  009B                     	;# 
  1097  009B                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009E                     	;# 
  1101  010C                     	;# 
  1102  010D                     	;# 
  1103  010E                     	;# 
  1104  0116                     	;# 
  1105  0117                     	;# 
  1106  011D                     	;# 
  1107  018C                     	;# 
  1108  018D                     	;# 
  1109  018E                     	;# 
  1110  0191                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0194                     	;# 
  1116  0195                     	;# 
  1117  0196                     	;# 
  1118  0197                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019C                     	;# 
  1126  019C                     	;# 
  1127  019D                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  020D                     	;# 
  1131  0210                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  0291                     	;# 
  1148  0291                     	;# 
  1149  0292                     	;# 
  1150  0293                     	;# 
  1151  0298                     	;# 
  1152  0298                     	;# 
  1153  0299                     	;# 
  1154  029A                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  0FE4                     	;# 
  1159  0FE5                     	;# 
  1160  0FE6                     	;# 
  1161  0FE7                     	;# 
  1162  0FE8                     	;# 
  1163  0FE9                     	;# 
  1164  0FEA                     	;# 
  1165  0FEB                     	;# 
  1166  0FED                     	;# 
  1167  0FEE                     	;# 
  1168  0FEF                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0008                     	;# 
  1178  0009                     	;# 
  1179  000A                     	;# 
  1180  000B                     	;# 
  1181  000C                     	;# 
  1182  000D                     	;# 
  1183  000E                     	;# 
  1184  0010                     	;# 
  1185  0011                     	;# 
  1186  0012                     	;# 
  1187  0015                     	;# 
  1188  0016                     	;# 
  1189  0016                     	;# 
  1190  0017                     	;# 
  1191  0018                     	;# 
  1192  0019                     	;# 
  1193  001A                     	;# 
  1194  001B                     	;# 
  1195  001C                     	;# 
  1196  008C                     	;# 
  1197  008D                     	;# 
  1198  008E                     	;# 
  1199  0090                     	;# 
  1200  0091                     	;# 
  1201  0092                     	;# 
  1202  0095                     	;# 
  1203  0096                     	;# 
  1204  0097                     	;# 
  1205  0099                     	;# 
  1206  009A                     	;# 
  1207  009B                     	;# 
  1208  009B                     	;# 
  1209  009C                     	;# 
  1210  009D                     	;# 
  1211  009E                     	;# 
  1212  010C                     	;# 
  1213  010D                     	;# 
  1214  010E                     	;# 
  1215  0116                     	;# 
  1216  0117                     	;# 
  1217  011D                     	;# 
  1218  018C                     	;# 
  1219  018D                     	;# 
  1220  018E                     	;# 
  1221  0191                     	;# 
  1222  0191                     	;# 
  1223  0192                     	;# 
  1224  0193                     	;# 
  1225  0193                     	;# 
  1226  0194                     	;# 
  1227  0195                     	;# 
  1228  0196                     	;# 
  1229  0197                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019B                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019B                     	;# 
  1236  019C                     	;# 
  1237  019C                     	;# 
  1238  019D                     	;# 
  1239  019E                     	;# 
  1240  019F                     	;# 
  1241  020D                     	;# 
  1242  0210                     	;# 
  1243  0211                     	;# 
  1244  0211                     	;# 
  1245  0212                     	;# 
  1246  0212                     	;# 
  1247  0213                     	;# 
  1248  0213                     	;# 
  1249  0214                     	;# 
  1250  0214                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0215                     	;# 
  1254  0216                     	;# 
  1255  0216                     	;# 
  1256  0217                     	;# 
  1257  0217                     	;# 
  1258  0291                     	;# 
  1259  0291                     	;# 
  1260  0292                     	;# 
  1261  0293                     	;# 
  1262  0298                     	;# 
  1263  0298                     	;# 
  1264  0299                     	;# 
  1265  029A                     	;# 
  1266  0394                     	;# 
  1267  0395                     	;# 
  1268  0396                     	;# 
  1269  0FE4                     	;# 
  1270  0FE5                     	;# 
  1271  0FE6                     	;# 
  1272  0FE7                     	;# 
  1273  0FE8                     	;# 
  1274  0FE9                     	;# 
  1275  0FEA                     	;# 
  1276  0FEB                     	;# 
  1277  0FED                     	;# 
  1278  0FEE                     	;# 
  1279  0FEF                     	;# 
  1280  0000                     	;# 
  1281  0001                     	;# 
  1282  0002                     	;# 
  1283  0003                     	;# 
  1284  0004                     	;# 
  1285  0005                     	;# 
  1286  0006                     	;# 
  1287  0007                     	;# 
  1288  0008                     	;# 
  1289  0009                     	;# 
  1290  000A                     	;# 
  1291  000B                     	;# 
  1292  000C                     	;# 
  1293  000D                     	;# 
  1294  000E                     	;# 
  1295  0010                     	;# 
  1296  0011                     	;# 
  1297  0012                     	;# 
  1298  0015                     	;# 
  1299  0016                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0019                     	;# 
  1304  001A                     	;# 
  1305  001B                     	;# 
  1306  001C                     	;# 
  1307  008C                     	;# 
  1308  008D                     	;# 
  1309  008E                     	;# 
  1310  0090                     	;# 
  1311  0091                     	;# 
  1312  0092                     	;# 
  1313  0095                     	;# 
  1314  0096                     	;# 
  1315  0097                     	;# 
  1316  0099                     	;# 
  1317  009A                     	;# 
  1318  009B                     	;# 
  1319  009B                     	;# 
  1320  009C                     	;# 
  1321  009D                     	;# 
  1322  009E                     	;# 
  1323  010C                     	;# 
  1324  010D                     	;# 
  1325  010E                     	;# 
  1326  0116                     	;# 
  1327  0117                     	;# 
  1328  011D                     	;# 
  1329  018C                     	;# 
  1330  018D                     	;# 
  1331  018E                     	;# 
  1332  0191                     	;# 
  1333  0191                     	;# 
  1334  0192                     	;# 
  1335  0193                     	;# 
  1336  0193                     	;# 
  1337  0194                     	;# 
  1338  0195                     	;# 
  1339  0196                     	;# 
  1340  0197                     	;# 
  1341  0199                     	;# 
  1342  019A                     	;# 
  1343  019B                     	;# 
  1344  019B                     	;# 
  1345  019B                     	;# 
  1346  019B                     	;# 
  1347  019C                     	;# 
  1348  019C                     	;# 
  1349  019D                     	;# 
  1350  019E                     	;# 
  1351  019F                     	;# 
  1352  020D                     	;# 
  1353  0210                     	;# 
  1354  0211                     	;# 
  1355  0211                     	;# 
  1356  0212                     	;# 
  1357  0212                     	;# 
  1358  0213                     	;# 
  1359  0213                     	;# 
  1360  0214                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0216                     	;# 
  1366  0216                     	;# 
  1367  0217                     	;# 
  1368  0217                     	;# 
  1369  0291                     	;# 
  1370  0291                     	;# 
  1371  0292                     	;# 
  1372  0293                     	;# 
  1373  0298                     	;# 
  1374  0298                     	;# 
  1375  0299                     	;# 
  1376  029A                     	;# 
  1377  0394                     	;# 
  1378  0395                     	;# 
  1379  0396                     	;# 
  1380  0FE4                     	;# 
  1381  0FE5                     	;# 
  1382  0FE6                     	;# 
  1383  0FE7                     	;# 
  1384  0FE8                     	;# 
  1385  0FE9                     	;# 
  1386  0FEA                     	;# 
  1387  0FEB                     	;# 
  1388  0FED                     	;# 
  1389  0FEE                     	;# 
  1390  0FEF                     	;# 
  1391  0000                     	;# 
  1392  0001                     	;# 
  1393  0002                     	;# 
  1394  0003                     	;# 
  1395  0004                     	;# 
  1396  0005                     	;# 
  1397  0006                     	;# 
  1398  0007                     	;# 
  1399  0008                     	;# 
  1400  0009                     	;# 
  1401  000A                     	;# 
  1402  000B                     	;# 
  1403  000C                     	;# 
  1404  000D                     	;# 
  1405  000E                     	;# 
  1406  0010                     	;# 
  1407  0011                     	;# 
  1408  0012                     	;# 
  1409  0015                     	;# 
  1410  0016                     	;# 
  1411  0016                     	;# 
  1412  0017                     	;# 
  1413  0018                     	;# 
  1414  0019                     	;# 
  1415  001A                     	;# 
  1416  001B                     	;# 
  1417  001C                     	;# 
  1418  008C                     	;# 
  1419  008D                     	;# 
  1420  008E                     	;# 
  1421  0090                     	;# 
  1422  0091                     	;# 
  1423  0092                     	;# 
  1424  0095                     	;# 
  1425  0096                     	;# 
  1426  0097                     	;# 
  1427  0099                     	;# 
  1428  009A                     	;# 
  1429  009B                     	;# 
  1430  009B                     	;# 
  1431  009C                     	;# 
  1432  009D                     	;# 
  1433  009E                     	;# 
  1434  010C                     	;# 
  1435  010D                     	;# 
  1436  010E                     	;# 
  1437  0116                     	;# 
  1438  0117                     	;# 
  1439  011D                     	;# 
  1440  018C                     	;# 
  1441  018D                     	;# 
  1442  018E                     	;# 
  1443  0191                     	;# 
  1444  0191                     	;# 
  1445  0192                     	;# 
  1446  0193                     	;# 
  1447  0193                     	;# 
  1448  0194                     	;# 
  1449  0195                     	;# 
  1450  0196                     	;# 
  1451  0197                     	;# 
  1452  0199                     	;# 
  1453  019A                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019C                     	;# 
  1459  019C                     	;# 
  1460  019D                     	;# 
  1461  019E                     	;# 
  1462  019F                     	;# 
  1463  020D                     	;# 
  1464  0210                     	;# 
  1465  0211                     	;# 
  1466  0211                     	;# 
  1467  0212                     	;# 
  1468  0212                     	;# 
  1469  0213                     	;# 
  1470  0213                     	;# 
  1471  0214                     	;# 
  1472  0214                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0215                     	;# 
  1476  0216                     	;# 
  1477  0216                     	;# 
  1478  0217                     	;# 
  1479  0217                     	;# 
  1480  0291                     	;# 
  1481  0291                     	;# 
  1482  0292                     	;# 
  1483  0293                     	;# 
  1484  0298                     	;# 
  1485  0298                     	;# 
  1486  0299                     	;# 
  1487  029A                     	;# 
  1488  0394                     	;# 
  1489  0395                     	;# 
  1490  0396                     	;# 
  1491  0FE4                     	;# 
  1492  0FE5                     	;# 
  1493  0FE6                     	;# 
  1494  0FE7                     	;# 
  1495  0FE8                     	;# 
  1496  0FE9                     	;# 
  1497  0FEA                     	;# 
  1498  0FEB                     	;# 
  1499  0FED                     	;# 
  1500  0FEE                     	;# 
  1501  0FEF                     	;# 
  1502  0000                     	;# 
  1503  0001                     	;# 
  1504  0002                     	;# 
  1505  0003                     	;# 
  1506  0004                     	;# 
  1507  0005                     	;# 
  1508  0006                     	;# 
  1509  0007                     	;# 
  1510  0008                     	;# 
  1511  0009                     	;# 
  1512  000A                     	;# 
  1513  000B                     	;# 
  1514  000C                     	;# 
  1515  000D                     	;# 
  1516  000E                     	;# 
  1517  0010                     	;# 
  1518  0011                     	;# 
  1519  0012                     	;# 
  1520  0015                     	;# 
  1521  0016                     	;# 
  1522  0016                     	;# 
  1523  0017                     	;# 
  1524  0018                     	;# 
  1525  0019                     	;# 
  1526  001A                     	;# 
  1527  001B                     	;# 
  1528  001C                     	;# 
  1529  008C                     	;# 
  1530  008D                     	;# 
  1531  008E                     	;# 
  1532  0090                     	;# 
  1533  0091                     	;# 
  1534  0092                     	;# 
  1535  0095                     	;# 
  1536  0096                     	;# 
  1537  0097                     	;# 
  1538  0099                     	;# 
  1539  009A                     	;# 
  1540  009B                     	;# 
  1541  009B                     	;# 
  1542  009C                     	;# 
  1543  009D                     	;# 
  1544  009E                     	;# 
  1545  010C                     	;# 
  1546  010D                     	;# 
  1547  010E                     	;# 
  1548  0116                     	;# 
  1549  0117                     	;# 
  1550  011D                     	;# 
  1551  018C                     	;# 
  1552  018D                     	;# 
  1553  018E                     	;# 
  1554  0191                     	;# 
  1555  0191                     	;# 
  1556  0192                     	;# 
  1557  0193                     	;# 
  1558  0193                     	;# 
  1559  0194                     	;# 
  1560  0195                     	;# 
  1561  0196                     	;# 
  1562  0197                     	;# 
  1563  0199                     	;# 
  1564  019A                     	;# 
  1565  019B                     	;# 
  1566  019B                     	;# 
  1567  019B                     	;# 
  1568  019B                     	;# 
  1569  019C                     	;# 
  1570  019C                     	;# 
  1571  019D                     	;# 
  1572  019E                     	;# 
  1573  019F                     	;# 
  1574  020D                     	;# 
  1575  0210                     	;# 
  1576  0211                     	;# 
  1577  0211                     	;# 
  1578  0212                     	;# 
  1579  0212                     	;# 
  1580  0213                     	;# 
  1581  0213                     	;# 
  1582  0214                     	;# 
  1583  0214                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0216                     	;# 
  1588  0216                     	;# 
  1589  0217                     	;# 
  1590  0217                     	;# 
  1591  0291                     	;# 
  1592  0291                     	;# 
  1593  0292                     	;# 
  1594  0293                     	;# 
  1595  0298                     	;# 
  1596  0298                     	;# 
  1597  0299                     	;# 
  1598  029A                     	;# 
  1599  0394                     	;# 
  1600  0395                     	;# 
  1601  0396                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613  0000                     	;# 
  1614  0001                     	;# 
  1615  0002                     	;# 
  1616  0003                     	;# 
  1617  0004                     	;# 
  1618  0005                     	;# 
  1619  0006                     	;# 
  1620  0007                     	;# 
  1621  0008                     	;# 
  1622  0009                     	;# 
  1623  000A                     	;# 
  1624  000B                     	;# 
  1625  000C                     	;# 
  1626  000D                     	;# 
  1627  000E                     	;# 
  1628  0010                     	;# 
  1629  0011                     	;# 
  1630  0012                     	;# 
  1631  0015                     	;# 
  1632  0016                     	;# 
  1633  0016                     	;# 
  1634  0017                     	;# 
  1635  0018                     	;# 
  1636  0019                     	;# 
  1637  001A                     	;# 
  1638  001B                     	;# 
  1639  001C                     	;# 
  1640  008C                     	;# 
  1641  008D                     	;# 
  1642  008E                     	;# 
  1643  0090                     	;# 
  1644  0091                     	;# 
  1645  0092                     	;# 
  1646  0095                     	;# 
  1647  0096                     	;# 
  1648  0097                     	;# 
  1649  0099                     	;# 
  1650  009A                     	;# 
  1651  009B                     	;# 
  1652  009B                     	;# 
  1653  009C                     	;# 
  1654  009D                     	;# 
  1655  009E                     	;# 
  1656  010C                     	;# 
  1657  010D                     	;# 
  1658  010E                     	;# 
  1659  0116                     	;# 
  1660  0117                     	;# 
  1661  011D                     	;# 
  1662  018C                     	;# 
  1663  018D                     	;# 
  1664  018E                     	;# 
  1665  0191                     	;# 
  1666  0191                     	;# 
  1667  0192                     	;# 
  1668  0193                     	;# 
  1669  0193                     	;# 
  1670  0194                     	;# 
  1671  0195                     	;# 
  1672  0196                     	;# 
  1673  0197                     	;# 
  1674  0199                     	;# 
  1675  019A                     	;# 
  1676  019B                     	;# 
  1677  019B                     	;# 
  1678  019B                     	;# 
  1679  019B                     	;# 
  1680  019C                     	;# 
  1681  019C                     	;# 
  1682  019D                     	;# 
  1683  019E                     	;# 
  1684  019F                     	;# 
  1685  020D                     	;# 
  1686  0210                     	;# 
  1687  0211                     	;# 
  1688  0211                     	;# 
  1689  0212                     	;# 
  1690  0212                     	;# 
  1691  0213                     	;# 
  1692  0213                     	;# 
  1693  0214                     	;# 
  1694  0214                     	;# 
  1695  0215                     	;# 
  1696  0215                     	;# 
  1697  0215                     	;# 
  1698  0216                     	;# 
  1699  0216                     	;# 
  1700  0217                     	;# 
  1701  0217                     	;# 
  1702  0291                     	;# 
  1703  0291                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0298                     	;# 
  1707  0298                     	;# 
  1708  0299                     	;# 
  1709  029A                     	;# 
  1710  0394                     	;# 
  1711  0395                     	;# 
  1712  0396                     	;# 
  1713  0FE4                     	;# 
  1714  0FE5                     	;# 
  1715  0FE6                     	;# 
  1716  0FE7                     	;# 
  1717  0FE8                     	;# 
  1718  0FE9                     	;# 
  1719  0FEA                     	;# 
  1720  0FEB                     	;# 
  1721  0FED                     	;# 
  1722  0FEE                     	;# 
  1723  0FEF                     	;# 
  1724  0000                     	;# 
  1725  0001                     	;# 
  1726  0002                     	;# 
  1727  0003                     	;# 
  1728  0004                     	;# 
  1729  0005                     	;# 
  1730  0006                     	;# 
  1731  0007                     	;# 
  1732  0008                     	;# 
  1733  0009                     	;# 
  1734  000A                     	;# 
  1735  000B                     	;# 
  1736  000C                     	;# 
  1737  000D                     	;# 
  1738  000E                     	;# 
  1739  0010                     	;# 
  1740  0011                     	;# 
  1741  0012                     	;# 
  1742  0015                     	;# 
  1743  0016                     	;# 
  1744  0016                     	;# 
  1745  0017                     	;# 
  1746  0018                     	;# 
  1747  0019                     	;# 
  1748  001A                     	;# 
  1749  001B                     	;# 
  1750  001C                     	;# 
  1751  008C                     	;# 
  1752  008D                     	;# 
  1753  008E                     	;# 
  1754  0090                     	;# 
  1755  0091                     	;# 
  1756  0092                     	;# 
  1757  0095                     	;# 
  1758  0096                     	;# 
  1759  0097                     	;# 
  1760  0099                     	;# 
  1761  009A                     	;# 
  1762  009B                     	;# 
  1763  009B                     	;# 
  1764  009C                     	;# 
  1765  009D                     	;# 
  1766  009E                     	;# 
  1767  010C                     	;# 
  1768  010D                     	;# 
  1769  010E                     	;# 
  1770  0116                     	;# 
  1771  0117                     	;# 
  1772  011D                     	;# 
  1773  018C                     	;# 
  1774  018D                     	;# 
  1775  018E                     	;# 
  1776  0191                     	;# 
  1777  0191                     	;# 
  1778  0192                     	;# 
  1779  0193                     	;# 
  1780  0193                     	;# 
  1781  0194                     	;# 
  1782  0195                     	;# 
  1783  0196                     	;# 
  1784  0197                     	;# 
  1785  0199                     	;# 
  1786  019A                     	;# 
  1787  019B                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019C                     	;# 
  1792  019C                     	;# 
  1793  019D                     	;# 
  1794  019E                     	;# 
  1795  019F                     	;# 
  1796  020D                     	;# 
  1797  0210                     	;# 
  1798  0211                     	;# 
  1799  0211                     	;# 
  1800  0212                     	;# 
  1801  0212                     	;# 
  1802  0213                     	;# 
  1803  0213                     	;# 
  1804  0214                     	;# 
  1805  0214                     	;# 
  1806  0215                     	;# 
  1807  0215                     	;# 
  1808  0215                     	;# 
  1809  0216                     	;# 
  1810  0216                     	;# 
  1811  0217                     	;# 
  1812  0217                     	;# 
  1813  0291                     	;# 
  1814  0291                     	;# 
  1815  0292                     	;# 
  1816  0293                     	;# 
  1817  0298                     	;# 
  1818  0298                     	;# 
  1819  0299                     	;# 
  1820  029A                     	;# 
  1821  0394                     	;# 
  1822  0395                     	;# 
  1823  0396                     	;# 
  1824  0FE4                     	;# 
  1825  0FE5                     	;# 
  1826  0FE6                     	;# 
  1827  0FE7                     	;# 
  1828  0FE8                     	;# 
  1829  0FE9                     	;# 
  1830  0FEA                     	;# 
  1831  0FEB                     	;# 
  1832  0FED                     	;# 
  1833  0FEE                     	;# 
  1834  0FEF                     	;# 
  1835  0000                     	;# 
  1836  0001                     	;# 
  1837  0002                     	;# 
  1838  0003                     	;# 
  1839  0004                     	;# 
  1840  0005                     	;# 
  1841  0006                     	;# 
  1842  0007                     	;# 
  1843  0008                     	;# 
  1844  0009                     	;# 
  1845  000A                     	;# 
  1846  000B                     	;# 
  1847  000C                     	;# 
  1848  000D                     	;# 
  1849  000E                     	;# 
  1850  0010                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0015                     	;# 
  1854  0016                     	;# 
  1855  0016                     	;# 
  1856  0017                     	;# 
  1857  0018                     	;# 
  1858  0019                     	;# 
  1859  001A                     	;# 
  1860  001B                     	;# 
  1861  001C                     	;# 
  1862  008C                     	;# 
  1863  008D                     	;# 
  1864  008E                     	;# 
  1865  0090                     	;# 
  1866  0091                     	;# 
  1867  0092                     	;# 
  1868  0095                     	;# 
  1869  0096                     	;# 
  1870  0097                     	;# 
  1871  0099                     	;# 
  1872  009A                     	;# 
  1873  009B                     	;# 
  1874  009B                     	;# 
  1875  009C                     	;# 
  1876  009D                     	;# 
  1877  009E                     	;# 
  1878  010C                     	;# 
  1879  010D                     	;# 
  1880  010E                     	;# 
  1881  0116                     	;# 
  1882  0117                     	;# 
  1883  011D                     	;# 
  1884  018C                     	;# 
  1885  018D                     	;# 
  1886  018E                     	;# 
  1887  0191                     	;# 
  1888  0191                     	;# 
  1889  0192                     	;# 
  1890  0193                     	;# 
  1891  0193                     	;# 
  1892  0194                     	;# 
  1893  0195                     	;# 
  1894  0196                     	;# 
  1895  0197                     	;# 
  1896  0199                     	;# 
  1897  019A                     	;# 
  1898  019B                     	;# 
  1899  019B                     	;# 
  1900  019B                     	;# 
  1901  019B                     	;# 
  1902  019C                     	;# 
  1903  019C                     	;# 
  1904  019D                     	;# 
  1905  019E                     	;# 
  1906  019F                     	;# 
  1907  020D                     	;# 
  1908  0210                     	;# 
  1909  0211                     	;# 
  1910  0211                     	;# 
  1911  0212                     	;# 
  1912  0212                     	;# 
  1913  0213                     	;# 
  1914  0213                     	;# 
  1915  0214                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0216                     	;# 
  1921  0216                     	;# 
  1922  0217                     	;# 
  1923  0217                     	;# 
  1924  0291                     	;# 
  1925  0291                     	;# 
  1926  0292                     	;# 
  1927  0293                     	;# 
  1928  0298                     	;# 
  1929  0298                     	;# 
  1930  0299                     	;# 
  1931  029A                     	;# 
  1932  0394                     	;# 
  1933  0395                     	;# 
  1934  0396                     	;# 
  1935  0FE4                     	;# 
  1936  0FE5                     	;# 
  1937  0FE6                     	;# 
  1938  0FE7                     	;# 
  1939  0FE8                     	;# 
  1940  0FE9                     	;# 
  1941  0FEA                     	;# 
  1942  0FEB                     	;# 
  1943  0FED                     	;# 
  1944  0FEE                     	;# 
  1945  0FEF                     	;# 
  1946                           
  1947                           	psect	idataBANK1
  1948  0604                     __pidataBANK1:	
  1949                           
  1950                           ;initializer for __product
  1951  0604  3463               	retlw	99
  1952  0605  3402               	retlw	2
  1953  0606  3400               	retlw	0
  1954  0607  3400               	retlw	0
  1955  0608  3400               	retlw	0
  1956  0609  3400               	retlw	0
  1957  060A  3400               	retlw	0
  1958  060B  3400               	retlw	0
  1959  060C  3400               	retlw	0
  1960  060D  3400               	retlw	0
  1961  060E  3400               	retlw	0
  1962  060F  3400               	retlw	0
  1963  0610  34FF               	retlw	255
  1964  0611  34FF               	retlw	255
  1965  0612  34FF               	retlw	255
  1966  0613  3400               	retlw	0
  1967  0614  3400               	retlw	0
  1968  0615  3400               	retlw	0
  1969  0616  3400               	retlw	0
  1970  0617  3400               	retlw	0
  1971  0618  3400               	retlw	0
  1972  0619  3400               	retlw	0
  1973  061A  3400               	retlw	0
  1974  061B  3400               	retlw	0
  1975  061C  3400               	retlw	0
  1976  061D  3400               	retlw	0
  1977  061E  3400               	retlw	0
  1978  061F  3400               	retlw	0
  1979  0620  3400               	retlw	0
  1980  0621  3400               	retlw	0
  1981  0622  3400               	retlw	0
  1982  0623  3400               	retlw	0
  1983                           
  1984                           	psect	nvBANK0
  1985  0069                     __pnvBANK0:	
  1986  0069                     _Timer0:	
  1987  0069                     	ds	1
  1988  006A                     _WDT:	
  1989  006A                     	ds	1
  1990  006B                     _myMain:	
  1991  006B                     	ds	1
  1992  006C                     _product:	
  1993  006C                     	ds	1
  1994  006D                     _Memory:	
  1995  006D                     	ds	1
  1996  000C                     _PORTA	set	12
  1997  000D                     _PORTB	set	13
  1998  000E                     _PORTC	set	14
  1999  0015                     _TMR0	set	21
  2000  005F                     _GIE	set	95
  2001  005C                     _INTE	set	92
  2002  0059                     _INTF	set	89
  2003  005B                     _IOCIE	set	91
  2004  0058                     _IOCIF	set	88
  2005  005E                     _PEIE	set	94
  2006  0060                     _RA0	set	96
  2007  0063                     _RA3	set	99
  2008  0064                     _RA4	set	100
  2009  0066                     _RA6	set	102
  2010  006B                     _RB3	set	107
  2011  006D                     _RB5	set	109
  2012  0075                     _RC5	set	117
  2013  0076                     _RC6	set	118
  2014  0077                     _RC7	set	119
  2015  005D                     _TMR0IE	set	93
  2016  005A                     _TMR0IF	set	90
  2017  009D                     _ADCON0	set	157
  2018  009E                     _ADCON1	set	158
  2019  009C                     _ADRESH	set	156
  2020  009B                     _ADRESL	set	155
  2021  0095                     _OPTION_REG	set	149
  2022  0099                     _OSCCON	set	153
  2023  008C                     _TRISA	set	140
  2024  008D                     _TRISB	set	141
  2025  008E                     _TRISC	set	142
  2026  0097                     _WDTCON	set	151
  2027  04E9                     _GO_nDONE	set	1257
  2028  0117                     _FVRCON	set	279
  2029  010C                     _LATA	set	268
  2030  010D                     _LATB	set	269
  2031  010E                     _LATC	set	270
  2032  018C                     _ANSELA	set	396
  2033  018D                     _ANSELB	set	397
  2034  018E                     _ANSELC	set	398
  2035  0192                     _PMADRH	set	402
  2036  0191                     _PMADRL	set	401
  2037  0196                     _PMCON2	set	406
  2038  0194                     _PMDATH	set	404
  2039  0193                     _PMDATL	set	403
  2040  0CAE                     _CFGS	set	3246
  2041  0CAC                     _FREE	set	3244
  2042  0CAD                     _LWLO	set	3245
  2043  0CA8                     _RD	set	3240
  2044  0CA9                     _WR	set	3241
  2045  0CAA                     _WREN	set	3242
  2046  1068                     _WPUB0	set	4200
  2047  1069                     _WPUB1	set	4201
  2048  106A                     _WPUB2	set	4202
  2049  0396                     _IOCBF	set	918
  2050  0395                     _IOCBN	set	917
  2051  0394                     _IOCBP	set	916
  2052  1CB2                     _IOCBF2	set	7346
  2053                           
  2054                           ; #config settings
  2055  0000                     
  2056                           	psect	cinit
  2057  0018                     start_initialization:	
  2058  0018                     __initialization:	
  2059                           
  2060                           ; Clear objects allocated to COMMON
  2061  0018  01FC               	clrf	__pbssCOMMON& (0+127)
  2062                           
  2063                           ; Clear objects allocated to BANK0
  2064  0019  3020               	movlw	low __pbssBANK0
  2065  001A  0084               	movwf	4
  2066  001B  3000               	movlw	high __pbssBANK0
  2067  001C  0085               	movwf	5
  2068  001D  3043               	movlw	67
  2069  001E  3187  2775  3180   	fcall	clear_ram0
  2070                           
  2071                           ; Clear objects allocated to BANK1
  2072  0021  30C0               	movlw	low __pbssBANK1
  2073  0022  0084               	movwf	4
  2074  0023  3000               	movlw	high __pbssBANK1
  2075  0024  0085               	movwf	5
  2076  0025  3010               	movlw	16
  2077  0026  3187  2775  3180   	fcall	clear_ram0
  2078                           
  2079                           ; Clear objects allocated to BANK2
  2080  0029  3020               	movlw	low __pbssBANK2
  2081  002A  0084               	movwf	4
  2082  002B  3001               	movlw	high __pbssBANK2
  2083  002C  0085               	movwf	5
  2084  002D  3025               	movlw	37
  2085  002E  3187  2775  3180   	fcall	clear_ram0
  2086                           
  2087                           ; Initialize objects allocated to BANK1
  2088  0031  3004               	movlw	low __pidataBANK1
  2089  0032  0084               	movwf	4
  2090  0033  3086               	movlw	(high __pidataBANK1)| (0+128)
  2091  0034  0085               	movwf	5
  2092  0035  30A0               	movlw	low __pdataBANK1
  2093  0036  0086               	movwf	6
  2094  0037  3000               	movlw	high __pdataBANK1
  2095  0038  0087               	movwf	7
  2096  0039  3020               	movlw	32
  2097  003A  3187  277B         	fcall	init_ram
  2098  003C                     end_of_initialization:	
  2099                           ;End of C runtime variable initialization code
  2100                           
  2101  003C                     __end_of__initialization:	
  2102  003C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2103  003D  0020               	movlb	0
  2104  003E  3185  2D2E         	ljmp	_main	;jump to C main() function
  2105                           
  2106                           	psect	bssCOMMON
  2107  007C                     __pbssCOMMON:	
  2108  007C                     _Sw:	
  2109  007C                     	ds	1
  2110                           
  2111                           	psect	bssBANK0
  2112  0020                     __pbssBANK0:	
  2113  0020                     _Buz:	
  2114  0020                     	ds	1
  2115  0021                     _LED:	
  2116  0021                     	ds	1
  2117  0022                     _Buz1:	
  2118  0022                     	ds	12
  2119  002E                     _Sw1:	
  2120  002E                     	ds	9
  2121  0037                     _Sw2:	
  2122  0037                     	ds	9
  2123  0040                     _Sw3:	
  2124  0040                     	ds	9
  2125  0049                     _VarTimer0:	
  2126  0049                     	ds	8
  2127  0051                     _VarErrLED:	
  2128  0051                     	ds	4
  2129  0055                     _VarLED1:	
  2130  0055                     	ds	4
  2131  0059                     _VarLED2:	
  2132  0059                     	ds	4
  2133  005D                     _VarLED3:	
  2134  005D                     	ds	4
  2135  0061                     __WDT:	
  2136  0061                     	ds	2
  2137                           
  2138                           	psect	bssBANK1
  2139  00C0                     __pbssBANK1:	
  2140  00C0                     __myMain:	
  2141  00C0                     	ds	16
  2142                           
  2143                           	psect	dataBANK1
  2144  00A0                     __pdataBANK1:	
  2145  00A0                     __product:	
  2146  00A0                     	ds	32
  2147                           
  2148                           	psect	bssBANK2
  2149  0120                     __pbssBANK2:	
  2150  0120                     _VarMemory:	
  2151  0120                     	ds	37
  2152                           
  2153                           	psect	clrtext
  2154  0775                     clear_ram0:	
  2155                           ;	Called with FSR0 containing the base address, and
  2156                           ;	WREG with the size to clear
  2157                           
  2158  0775  0064               	clrwdt	;clear the watchdog before getting into this loop
  2159  0776                     clrloop0:	
  2160  0776  0180               	clrf	0	;clear RAM location pointed to by FSR
  2161  0777  3101               	addfsr 0,1
  2162  0778  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2163  0779  2F76               	goto	clrloop0	;have we reached the end yet?
  2164  077A  3400               	retlw	0	;all done for this memory range, return
  2165                           
  2166                           	psect	inittext
  2167  077B                     init_ram:	
  2168  077B  00FE               	movwf	126
  2169  077C                     initloop:	
  2170  077C  0012               	moviw fsr0++
  2171  077D  001E               	movwi fsr1++
  2172  077E  0BFE               	decfsz	126,f
  2173  077F  2F7C               	goto	initloop
  2174  0780  3400               	retlw	0
  2175                           
  2176                           	psect	cstackCOMMON
  2177  0070                     __pcstackCOMMON:	
  2178  0070                     ?_setLED_Initialization:	
  2179  0070                     ?_setLED_Main:	
  2180                           ; 0 bytes @ 0x0
  2181                           
  2182  0070                     ?_Fosc_Set:	
  2183                           ; 0 bytes @ 0x0
  2184                           
  2185  0070                     ?_IO_Set:	
  2186                           ; 0 bytes @ 0x0
  2187                           
  2188  0070                     ?_TMR0_Set:	
  2189                           ; 0 bytes @ 0x0
  2190                           
  2191  0070                     ?_ADC_Set:	
  2192                           ; 0 bytes @ 0x0
  2193                           
  2194  0070                     ?_INT_Set:	
  2195                           ; 0 bytes @ 0x0
  2196                           
  2197  0070                     ?_IOC_Set:	
  2198                           ; 0 bytes @ 0x0
  2199                           
  2200  0070                     ?_WDT_Set:	
  2201                           ; 0 bytes @ 0x0
  2202                           
  2203  0070                     ?_IOC_ISR:	
  2204                           ; 0 bytes @ 0x0
  2205                           
  2206  0070                     ??_IOC_ISR:	
  2207                           ; 0 bytes @ 0x0
  2208                           
  2209  0070                     ?_TMR0_ISR:	
  2210                           ; 0 bytes @ 0x0
  2211                           
  2212  0070                     ??_TMR0_ISR:	
  2213                           ; 0 bytes @ 0x0
  2214                           
  2215  0070                     ?_INT_ISR:	
  2216                           ; 0 bytes @ 0x0
  2217                           
  2218  0070                     ??_INT_ISR:	
  2219                           ; 0 bytes @ 0x0
  2220                           
  2221  0070                     ?_Flash_Memory_Write:	
  2222                           ; 0 bytes @ 0x0
  2223                           
  2224  0070                     ?_Flash_Memory_Modify:	
  2225                           ; 0 bytes @ 0x0
  2226                           
  2227  0070                     ?_WDT_Clearing:	
  2228                           ; 0 bytes @ 0x0
  2229                           
  2230  0070                     ?_myMain_Initialization:	
  2231                           ; 0 bytes @ 0x0
  2232                           
  2233  0070                     ?_Switch_Initialization:	
  2234                           ; 0 bytes @ 0x0
  2235                           
  2236  0070                     ?_my_Main:	
  2237                           ; 0 bytes @ 0x0
  2238                           
  2239  0070                     ?_Switch_Main:	
  2240                           ; 0 bytes @ 0x0
  2241                           
  2242  0070                     ?_setSw_Enable:	
  2243                           ; 0 bytes @ 0x0
  2244                           
  2245  0070                     ?_setSw_Initialization:	
  2246                           ; 0 bytes @ 0x0
  2247                           
  2248  0070                     ?_setSw_Main:	
  2249                           ; 0 bytes @ 0x0
  2250                           
  2251  0070                     ?_Buzzer_Initialization:	
  2252                           ; 0 bytes @ 0x0
  2253                           
  2254  0070                     ?_Buz_Counter:	
  2255                           ; 0 bytes @ 0x0
  2256                           
  2257  0070                     ??_Buz_Counter:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?_Buzzer_Main:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ?_LedPointSelect:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_LED_Initialization:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?_LED_Main:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_Mcu_Initialization:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ?_ISR:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ??_ISR:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_Flash_Memory_Initialization:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_Flash_Memory_Main:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_Flash_Memory_Unlock:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ?_Flash_Memory_Erasing:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_WDT_Main:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ?_TouchPower:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_SwPointSelect:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ?_Flash_Memory_Read:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305                           
  2306                           ; 1 bytes @ 0x0
  2307  0070                     	ds	1
  2308  0071                     ??_Fosc_Set:	
  2309  0071                     ??_IO_Set:	
  2310                           ; 0 bytes @ 0x1
  2311                           
  2312  0071                     ??_TMR0_Set:	
  2313                           ; 0 bytes @ 0x1
  2314                           
  2315  0071                     ??_ADC_Set:	
  2316                           ; 0 bytes @ 0x1
  2317                           
  2318  0071                     ??_INT_Set:	
  2319                           ; 0 bytes @ 0x1
  2320                           
  2321  0071                     ??_IOC_Set:	
  2322                           ; 0 bytes @ 0x1
  2323                           
  2324  0071                     ??_WDT_Set:	
  2325                           ; 0 bytes @ 0x1
  2326                           
  2327  0071                     ??_Flash_Memory_Read:	
  2328                           ; 0 bytes @ 0x1
  2329                           
  2330  0071                     ??_Flash_Memory_Write:	
  2331                           ; 0 bytes @ 0x1
  2332                           
  2333  0071                     ??_WDT_Clearing:	
  2334                           ; 0 bytes @ 0x1
  2335                           
  2336  0071                     ??_myMain_Initialization:	
  2337                           ; 0 bytes @ 0x1
  2338                           
  2339  0071                     ??_Buzzer_Initialization:	
  2340                           ; 0 bytes @ 0x1
  2341                           
  2342  0071                     ??_Buzzer_Main:	
  2343                           ; 0 bytes @ 0x1
  2344                           
  2345  0071                     ??_LedPointSelect:	
  2346                           ; 0 bytes @ 0x1
  2347                           
  2348  0071                     ??_Flash_Memory_Unlock:	
  2349                           ; 0 bytes @ 0x1
  2350                           
  2351  0071                     ??_Flash_Memory_Erasing:	
  2352                           ; 0 bytes @ 0x1
  2353                           
  2354  0071                     ??_WDT_Main:	
  2355                           ; 0 bytes @ 0x1
  2356                           
  2357  0071                     ??_TouchPower:	
  2358                           ; 0 bytes @ 0x1
  2359                           
  2360  0071                     ??_SwPointSelect:	
  2361                           ; 0 bytes @ 0x1
  2362                           
  2363  0071                     ?___awdiv:	
  2364                           ; 0 bytes @ 0x1
  2365                           
  2366  0071                     ___awdiv@divisor:	
  2367                           ; 2 bytes @ 0x1
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  0071                     	ds	1
  2372  0072                     ??_Mcu_Initialization:	
  2373  0072                     LedPointSelect@led:	
  2374                           ; 0 bytes @ 0x2
  2375                           
  2376  0072                     Flash_Memory_Read@i:	
  2377                           ; 1 bytes @ 0x2
  2378                           
  2379  0072                     Flash_Memory_Write@i:	
  2380                           ; 1 bytes @ 0x2
  2381                           
  2382  0072                     SwPointSelect@sw:	
  2383                           ; 1 bytes @ 0x2
  2384                           
  2385                           
  2386                           ; 1 bytes @ 0x2
  2387  0072                     	ds	1
  2388  0073                     ??_setLED_Main:	
  2389  0073                     ?_setLED:	
  2390                           ; 0 bytes @ 0x3
  2391                           
  2392  0073                     ??_setSw_Enable:	
  2393                           ; 0 bytes @ 0x3
  2394                           
  2395  0073                     ??_setSw_Main:	
  2396                           ; 0 bytes @ 0x3
  2397                           
  2398  0073                     setLED@command:	
  2399                           ; 0 bytes @ 0x3
  2400                           
  2401  0073                     Flash_Memory_Read@address:	
  2402                           ; 1 bytes @ 0x3
  2403                           
  2404  0073                     setSw_Enable@command:	
  2405                           ; 1 bytes @ 0x3
  2406                           
  2407  0073                     ___awdiv@dividend:	
  2408                           ; 1 bytes @ 0x3
  2409                           
  2410                           
  2411                           ; 2 bytes @ 0x3
  2412  0073                     	ds	1
  2413  0074                     ??_setLED:	
  2414  0074                     setLED@led:	
  2415                           ; 0 bytes @ 0x4
  2416                           
  2417  0074                     Flash_Memory_Read@ret:	
  2418                           ; 1 bytes @ 0x4
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x4
  2422  0074                     	ds	1
  2423  0075                     ??_setLED_Initialization:	
  2424  0075                     ??_Flash_Memory_Modify:	
  2425                           ; 0 bytes @ 0x5
  2426                           
  2427  0075                     ??_setSw_Initialization:	
  2428                           ; 0 bytes @ 0x5
  2429                           
  2430  0075                     ??_Flash_Memory_Initialization:	
  2431                           ; 0 bytes @ 0x5
  2432                           
  2433  0075                     ??___awdiv:	
  2434                           ; 0 bytes @ 0x5
  2435                           
  2436  0075                     setLED_Initialization@led:	
  2437                           ; 0 bytes @ 0x5
  2438                           
  2439  0075                     setLED_Main@led:	
  2440                           ; 1 bytes @ 0x5
  2441                           
  2442  0075                     setSw_Initialization@sw:	
  2443                           ; 1 bytes @ 0x5
  2444                           
  2445  0075                     setSw_Main@sw:	
  2446                           ; 1 bytes @ 0x5
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x5
  2450  0075                     	ds	1
  2451  0076                     ??_Switch_Initialization:	
  2452  0076                     ??_Switch_Main:	
  2453                           ; 0 bytes @ 0x6
  2454                           
  2455  0076                     ??_LED_Initialization:	
  2456                           ; 0 bytes @ 0x6
  2457                           
  2458  0076                     ??_LED_Main:	
  2459                           ; 0 bytes @ 0x6
  2460                           
  2461  0076                     Flash_Memory_Initialization@i:	
  2462                           ; 0 bytes @ 0x6
  2463                           
  2464  0076                     ___awdiv@counter:	
  2465                           ; 1 bytes @ 0x6
  2466                           
  2467                           
  2468                           ; 1 bytes @ 0x6
  2469  0076                     	ds	1
  2470  0077                     Flash_Memory_Modify@i:	
  2471  0077                     ___awdiv@sign:	
  2472                           ; 1 bytes @ 0x7
  2473                           
  2474                           
  2475                           ; 1 bytes @ 0x7
  2476  0077                     	ds	1
  2477  0078                     ??_Flash_Memory_Main:	
  2478  0078                     ___awdiv@quotient:	
  2479                           ; 0 bytes @ 0x8
  2480                           
  2481                           
  2482                           ; 2 bytes @ 0x8
  2483  0078                     	ds	2
  2484  007A                     ?_setBuz:	
  2485  007A                     setBuz@time:	
  2486                           ; 0 bytes @ 0xA
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0xA
  2490  007A                     	ds	2
  2491  007C                     ??_my_Main:	
  2492  007C                     ??_main:	
  2493                           ; 0 bytes @ 0xC
  2494                           
  2495                           
  2496                           	psect	cstackBANK0
  2497  0063                     __pcstackBANK0:	
  2498                           ; 0 bytes @ 0xC
  2499                           
  2500  0063                     ??_setBuz:	
  2501                           
  2502                           ; 0 bytes @ 0x0
  2503  0063                     	ds	1
  2504  0064                     setBuz@count:	
  2505                           
  2506                           ; 1 bytes @ 0x1
  2507  0064                     	ds	1
  2508  0065                     ?_main:	
  2509  0065                     main@argc:	
  2510                           ; 2 bytes @ 0x2
  2511                           
  2512                           
  2513                           ; 2 bytes @ 0x2
  2514  0065                     	ds	2
  2515  0067                     main@argv:	
  2516                           
  2517                           ; 2 bytes @ 0x4
  2518  0067                     	ds	2
  2519                           
  2520                           	psect	maintext
  2521  052E                     __pmaintext:	
  2522 ;;
  2523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2524 ;;
  2525 ;; *************** function _main *****************
  2526 ;; Defined at:
  2527 ;;		line 7 in file "../src/Main_B1.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  argc            2    2[BANK0 ] int 
  2530 ;;  argv            2    4[BANK0 ] PTR PTR unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  2    2[BANK0 ] int 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 17F/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2542 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2546 ;;Total ram usage:        4 bytes
  2547 ;; Hardware stack levels required when called:    7
  2548 ;; This function calls:
  2549 ;;		_Buzzer_Initialization
  2550 ;;		_Buzzer_Main
  2551 ;;		_Flash_Memory_Initialization
  2552 ;;		_Flash_Memory_Main
  2553 ;;		_LED_Initialization
  2554 ;;		_LED_Main
  2555 ;;		_Mcu_Initialization
  2556 ;;		_Switch_Initialization
  2557 ;;		_Switch_Main
  2558 ;;		_WDT_Main
  2559 ;;		_myMain_Initialization
  2560 ;;		_my_Main
  2561 ;; This function is called by:
  2562 ;;		Startup code after reset
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _main
  2568  052E                     _main:	
  2569                           
  2570                           ;Main_B1.c: 9: myMain_Initialization();
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2574  052E  3186  26B2  3185   	fcall	_myMain_Initialization
  2575                           
  2576                           ;Main_B1.c: 10: Mcu_Initialization();
  2577  0531  3186  2640  3185   	fcall	_Mcu_Initialization
  2578                           
  2579                           ;Main_B1.c: 11: Flash_Memory_Initialization();
  2580  0534  3181  214C  3185   	fcall	_Flash_Memory_Initialization
  2581                           
  2582                           ;Main_B1.c: 12: LED_Initialization();
  2583  0537  3186  26E5  3185   	fcall	_LED_Initialization
  2584                           
  2585                           ;Main_B1.c: 13: Buzzer_Initialization();
  2586  053A  3187  2745  3185   	fcall	_Buzzer_Initialization
  2587                           
  2588                           ;Main_B1.c: 15: ;;
  2589                           ;Main_B1.c: 16: ;;
  2590                           ;Main_B1.c: 17: ;;
  2591                           ;Main_B1.c: 18: ;;
  2592                           ;Main_B1.c: 19: ;;
  2593                           ;Main_B1.c: 21: ;;
  2594                           ;Main_B1.c: 22: ;;
  2595                           ;Main_B1.c: 23: ;;
  2596                           ;Main_B1.c: 24: ;;
  2597                           ;Main_B1.c: 26: Switch_Initialization();
  2598  053D  3186  26C4  3185   	fcall	_Switch_Initialization
  2599                           
  2600                           ;Main_B1.c: 27: ;;
  2601                           ;Main_B1.c: 28: __nop();
  2602  0540  0000               	nop
  2603  0541                     l3051:	
  2604                           ;Main_B1.c: 35: ;;
  2605                           ;Main_B1.c: 39: ;;
  2606                           ;Main_B1.c: 43: ;;
  2607                           ;Main_B1.c: 47: ;;
  2608                           
  2609                           ;Main_B1.c: 29: ;;
  2610                           ;Main_B1.c: 32: while (1) {
  2611                           
  2612                           
  2613                           ;Main_B1.c: 58: }
  2614                           ;Main_B1.c: 61: if (myMain->T0_Timerout) {
  2615  0541  0020               	movlb	0	; select bank0
  2616  0542  086B               	movf	_myMain,w
  2617  0543  0086               	movwf	6
  2618  0544  0187               	clrf	7
  2619  0545  1C81               	btfss	1,1
  2620  0546  2D41               	goto	l3051
  2621                           
  2622                           ;Main_B1.c: 62: myMain->T0_Timerout = 0;
  2623  0547  086B               	movf	_myMain,w
  2624  0548  0086               	movwf	6
  2625  0549  0187               	clrf	7
  2626  054A  1081               	bcf	1,1
  2627                           
  2628                           ;Main_B1.c: 63: my_Main();
  2629  054B  3183  2317  3185   	fcall	_my_Main
  2630                           
  2631                           ;Main_B1.c: 64: WDT_Main();
  2632  054E  3186  265A  3185   	fcall	_WDT_Main
  2633                           
  2634                           ;Main_B1.c: 65: ;;
  2635                           ;Main_B1.c: 66: ;;
  2636                           ;Main_B1.c: 67: if (myMain->PowerON) {
  2637  0551  0020               	movlb	0	; select bank0
  2638  0552  086B               	movf	_myMain,w
  2639  0553  0086               	movwf	6
  2640  0554  0187               	clrf	7
  2641  0555  1C01               	btfss	1,0
  2642  0556  2D41               	goto	l3051
  2643                           
  2644                           ;Main_B1.c: 68: Flash_Memory_Main();
  2645  0557  3184  24A6  3185   	fcall	_Flash_Memory_Main
  2646                           
  2647                           ;Main_B1.c: 70: LED_Main();
  2648  055A  3186  26D5  3185   	fcall	_LED_Main
  2649                           
  2650                           ;Main_B1.c: 71: Buzzer_Main();
  2651  055D  3182  2216  3185   	fcall	_Buzzer_Main
  2652                           
  2653                           ;Main_B1.c: 73: ;;
  2654                           ;Main_B1.c: 74: ;;
  2655                           ;Main_B1.c: 75: ;;
  2656                           ;Main_B1.c: 76: ;;
  2657                           ;Main_B1.c: 78: ;;
  2658                           ;Main_B1.c: 79: ;;
  2659                           ;Main_B1.c: 80: Switch_Main();
  2660  0560  3187  272D  3185   	fcall	_Switch_Main
  2661                           
  2662                           ;Main_B1.c: 81: ;;
  2663                           ;Main_B1.c: 82: ;;
  2664                           ;Main_B1.c: 84: ;;
  2665                           ;Main_B1.c: 85: ;;
  2666                           ;Main_B1.c: 86: ;;
  2667  0563  2D41               	goto	l3051
  2668  0564                     __end_of_main:	
  2669                           
  2670                           	psect	text1
  2671  0317                     __ptext1:	
  2672 ;; *************** function _my_Main *****************
  2673 ;; Defined at:
  2674 ;;		line 123 in file "../src/Main_B1.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    5
  2695 ;; This function calls:
  2696 ;;		_setBuz
  2697 ;;		_setLED
  2698 ;;		_setSw_Enable
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _my_Main
  2706  0317                     _my_Main:	
  2707                           
  2708                           ;Main_B1.c: 125: if (myMain->PowerON == 0) {
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2712  0317  0020               	movlb	0	; select bank0
  2713  0318  086B               	movf	_myMain,w
  2714  0319  0086               	movwf	6
  2715  031A  0187               	clrf	7
  2716  031B  1801               	btfsc	1,0
  2717  031C  2B4B               	goto	l3027
  2718                           
  2719                           ;Main_B1.c: 126: myMain->PowerCount++;
  2720  031D  0A6B               	incf	_myMain,w
  2721  031E  0086               	movwf	6
  2722  031F  0187               	clrf	7
  2723  0320  3001               	movlw	1
  2724  0321  0781               	addwf	1,f
  2725  0322  3141               	addfsr 1,1
  2726  0323  1803               	skipnc
  2727  0324  0A81               	incf	1,f
  2728                           
  2729                           ;Main_B1.c: 127: if (myMain->PowerCount == 150)
  2730  0325  0A6B               	incf	_myMain,w
  2731  0326  0086               	movwf	6
  2732  0327  0187               	clrf	7
  2733  0328  3F40               	moviw [0]fsr1
  2734  0329  3A96               	xorlw	150
  2735  032A  1D03               	skipz
  2736  032B  2B2E               	goto	u2235
  2737  032C  3F41               	moviw [1]fsr1
  2738  032D  3A00               	xorlw	0
  2739  032E                     u2235:	
  2740  032E  1D03               	skipz
  2741  032F  0008               	return
  2742                           
  2743                           ;Main_B1.c: 128: {
  2744                           ;Main_B1.c: 129: myMain->PowerCount = 0;
  2745  0330  0A6B               	incf	_myMain,w
  2746  0331  0086               	movwf	6
  2747  0332  0187               	clrf	7
  2748  0333  3000               	movlw	0
  2749  0334  3FC0               	movwi [0]fsr1
  2750  0335  3FC1               	movwi [1]fsr1
  2751                           
  2752                           ;Main_B1.c: 130: myMain->PowerON = 1;
  2753  0336  086B               	movf	_myMain,w
  2754  0337  0086               	movwf	6
  2755  0338  0187               	clrf	7
  2756  0339  1401               	bsf	1,0
  2757                           
  2758                           ;Main_B1.c: 133: ;;
  2759                           ;Main_B1.c: 137: ;;
  2760                           ;Main_B1.c: 143: setBuz(3, 50);
  2761  033A  3032               	movlw	50
  2762  033B  00FA               	movwf	setBuz@time
  2763  033C  3000               	movlw	0
  2764  033D  00FB               	movwf	setBuz@time+1
  2765  033E  3003               	movlw	3
  2766  033F  3183  238A  3183   	fcall	_setBuz
  2767                           
  2768                           ;Main_B1.c: 144: myMain->SelfTest = 1;
  2769  0342  0020               	movlb	0	; select bank0
  2770  0343  086B               	movf	_myMain,w
  2771  0344  0086               	movwf	6
  2772  0345  0187               	clrf	7
  2773  0346  1701               	bsf	1,6
  2774                           
  2775                           ;Main_B1.c: 146: setSw_Enable(1);
  2776  0347  3001               	movlw	1
  2777  0348  3185  25E2         	fcall	_setSw_Enable
  2778                           
  2779                           ;Main_B1.c: 153: }
  2780                           ;Main_B1.c: 154: } else {
  2781  034A  0008               	return
  2782  034B                     l3027:	
  2783                           
  2784                           ;Main_B1.c: 162: myMain->Count1++;
  2785  034B  0020               	movlb	0	; select bank0
  2786  034C  086B               	movf	_myMain,w
  2787  034D  3E05               	addlw	5
  2788  034E  0086               	movwf	6
  2789  034F  0187               	clrf	7
  2790  0350  3001               	movlw	1
  2791  0351  0781               	addwf	1,f
  2792  0352  3141               	addfsr 1,1
  2793  0353  1803               	skipnc
  2794  0354  0A81               	incf	1,f
  2795                           
  2796                           ;Main_B1.c: 163: if (myMain->Count1 == 100)
  2797  0355  086B               	movf	_myMain,w
  2798  0356  3E05               	addlw	5
  2799  0357  0086               	movwf	6
  2800  0358  0187               	clrf	7
  2801  0359  3F40               	moviw [0]fsr1
  2802  035A  3A64               	xorlw	100
  2803  035B  1D03               	skipz
  2804  035C  2B5F               	goto	u2245
  2805  035D  3F41               	moviw [1]fsr1
  2806  035E  3A00               	xorlw	0
  2807  035F                     u2245:	
  2808  035F  1D03               	skipz
  2809  0360  0008               	return
  2810                           
  2811                           ;Main_B1.c: 164: {
  2812                           ;Main_B1.c: 165: myMain->Count1 = 0;
  2813  0361  086B               	movf	_myMain,w
  2814  0362  3E05               	addlw	5
  2815  0363  0086               	movwf	6
  2816  0364  0187               	clrf	7
  2817  0365  3000               	movlw	0
  2818  0366  3FC0               	movwi [0]fsr1
  2819  0367  3FC1               	movwi [1]fsr1
  2820                           
  2821                           ;Main_B1.c: 166: setBuz(1, 100);
  2822  0368  3064               	movlw	100
  2823  0369  00FA               	movwf	setBuz@time
  2824  036A  3000               	movlw	0
  2825  036B  00FB               	movwf	setBuz@time+1
  2826  036C  3001               	movlw	1
  2827  036D  3183  238A  3183   	fcall	_setBuz
  2828                           
  2829                           ;Main_B1.c: 178: if (myMain->Flag) {
  2830  0370  0020               	movlb	0	; select bank0
  2831  0371  086B               	movf	_myMain,w
  2832  0372  0086               	movwf	6
  2833  0373  0187               	clrf	7
  2834  0374  1D81               	btfss	1,3
  2835  0375  2B80               	goto	l3041
  2836                           
  2837                           ;Main_B1.c: 179: myMain->Flag = 0;
  2838  0376  086B               	movf	_myMain,w
  2839  0377  0086               	movwf	6
  2840  0378  0187               	clrf	7
  2841  0379  1181               	bcf	1,3
  2842                           
  2843                           ;Main_B1.c: 184: setLED(1, 1);
  2844  037A  01F3               	clrf	setLED@command
  2845  037B  0AF3               	incf	setLED@command,f
  2846  037C  3001               	movlw	1
  2847  037D  3182  22A2         	fcall	_setLED
  2848                           
  2849                           ;Main_B1.c: 188: } else {
  2850  037F  0008               	return
  2851  0380                     l3041:	
  2852                           
  2853                           ;Main_B1.c: 189: myMain->Flag = 1;
  2854  0380  0020               	movlb	0	; select bank0
  2855  0381  086B               	movf	_myMain,w
  2856  0382  0086               	movwf	6
  2857  0383  0187               	clrf	7
  2858  0384  1581               	bsf	1,3
  2859                           
  2860                           ;Main_B1.c: 194: setLED(1, 0);
  2861  0385  01F3               	clrf	setLED@command
  2862  0386  3001               	movlw	1
  2863  0387  3182  22A2         	fcall	_setLED
  2864  0389  0008               	return
  2865  038A                     __end_of_my_Main:	
  2866                           
  2867                           	psect	text2
  2868  05E2                     __ptext2:	
  2869 ;; *************** function _setSw_Enable *****************
  2870 ;; Defined at:
  2871 ;;		line 85 in file "../src/Switch_B1.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  command         1    wreg     unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  command         1    3[COMMON] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    4
  2892 ;; This function calls:
  2893 ;;		_SwPointSelect
  2894 ;; This function is called by:
  2895 ;;		_my_Main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _setSw_Enable
  2901  05E2                     _setSw_Enable:	
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _setSw_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2905                           ;setSw_Enable@command stored from wreg
  2906  05E2  00F3               	movwf	setSw_Enable@command
  2907                           
  2908                           ;Switch_B1.c: 88: SwPointSelect(1);
  2909  05E3  3001               	movlw	1
  2910  05E4  3186  2624  3185   	fcall	_SwPointSelect
  2911                           
  2912                           ;Switch_B1.c: 89: Sw->Enable = command;
  2913  05E7  087C               	movf	_Sw,w
  2914  05E8  0086               	movwf	6
  2915  05E9  0187               	clrf	7
  2916  05EA  0873               	movf	setSw_Enable@command,w
  2917  05EB  1001               	bcf	1,0
  2918  05EC  1D03               	skipz
  2919  05ED  1401               	bsf	1,0
  2920                           
  2921                           ;Switch_B1.c: 93: SwPointSelect(2);
  2922  05EE  3002               	movlw	2
  2923  05EF  3186  2624  3185   	fcall	_SwPointSelect
  2924                           
  2925                           ;Switch_B1.c: 94: Sw->Enable = command;
  2926  05F2  087C               	movf	_Sw,w
  2927  05F3  0086               	movwf	6
  2928  05F4  0187               	clrf	7
  2929  05F5  0873               	movf	setSw_Enable@command,w
  2930  05F6  1001               	bcf	1,0
  2931  05F7  1D03               	skipz
  2932  05F8  1401               	bsf	1,0
  2933                           
  2934                           ;Switch_B1.c: 98: SwPointSelect(3);
  2935  05F9  3003               	movlw	3
  2936  05FA  3186  2624         	fcall	_SwPointSelect
  2937                           
  2938                           ;Switch_B1.c: 99: Sw->Enable = command;
  2939  05FC  087C               	movf	_Sw,w
  2940  05FD  0086               	movwf	6
  2941  05FE  0187               	clrf	7
  2942  05FF  0873               	movf	setSw_Enable@command,w
  2943  0600  1001               	bcf	1,0
  2944  0601  1D03               	skipz
  2945  0602  1401               	bsf	1,0
  2946  0603  0008               	return
  2947  0604                     __end_of_setSw_Enable:	
  2948                           
  2949                           	psect	text3
  2950  038A                     __ptext3:	
  2951 ;; *************** function _setBuz *****************
  2952 ;; Defined at:
  2953 ;;		line 30 in file "../src/Buzzer_B1.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  count           1    wreg     unsigned char 
  2956 ;;  time            2   10[COMMON] int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  count           1    1[BANK0 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;Total ram usage:        4 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    4
  2975 ;; This function calls:
  2976 ;;		___awdiv
  2977 ;; This function is called by:
  2978 ;;		_my_Main
  2979 ;;		_Sw_DimmerOnFunc
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _setBuz
  2985  038A                     _setBuz:	
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _setBuz: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2989                           ;setBuz@count stored from wreg
  2990  038A  0020               	movlb	0	; select bank0
  2991  038B  00E4               	movwf	setBuz@count
  2992                           
  2993                           ;Buzzer_B1.c: 31: time /=10;
  2994  038C  300A               	movlw	10
  2995  038D  00F1               	movwf	___awdiv@divisor
  2996  038E  3000               	movlw	0
  2997  038F  00F2               	movwf	___awdiv@divisor+1
  2998  0390  087B               	movf	setBuz@time+1,w
  2999  0391  01F4               	clrf	___awdiv@dividend+1
  3000  0392  07F4               	addwf	___awdiv@dividend+1,f
  3001  0393  087A               	movf	setBuz@time,w
  3002  0394  01F3               	clrf	___awdiv@dividend
  3003  0395  07F3               	addwf	___awdiv@dividend,f
  3004  0396  3184  2453  3183   	fcall	___awdiv
  3005  0399  0872               	movf	?___awdiv+1,w
  3006  039A  01FB               	clrf	setBuz@time+1
  3007  039B  07FB               	addwf	setBuz@time+1,f
  3008  039C  0871               	movf	?___awdiv,w
  3009  039D  01FA               	clrf	setBuz@time
  3010  039E  07FA               	addwf	setBuz@time,f
  3011                           
  3012                           ;Buzzer_B1.c: 32: if (Buz->Enable) {
  3013  039F  0020               	movlb	0	; select bank0
  3014  03A0  0820               	movf	_Buz,w
  3015  03A1  0086               	movwf	6
  3016  03A2  0187               	clrf	7
  3017  03A3  1C01               	btfss	1,0
  3018  03A4  0008               	return
  3019                           
  3020                           ;Buzzer_B1.c: 33: if (!Buz->GO) {
  3021  03A5  0820               	movf	_Buz,w
  3022  03A6  0086               	movwf	6
  3023  03A7  0187               	clrf	7
  3024  03A8  1881               	btfsc	1,1
  3025  03A9  2BC0               	goto	l3007
  3026                           
  3027                           ;Buzzer_B1.c: 34: Buz->GO = 1;
  3028  03AA  0820               	movf	_Buz,w
  3029  03AB  0086               	movwf	6
  3030  03AC  0187               	clrf	7
  3031  03AD  1481               	bsf	1,1
  3032                           
  3033                           ;Buzzer_B1.c: 35: Buz->Count = count;
  3034  03AE  0864               	movf	setBuz@count,w
  3035  03AF  00E3               	movwf	??_setBuz
  3036  03B0  0820               	movf	_Buz,w
  3037  03B1  3E03               	addlw	3
  3038  03B2  0086               	movwf	6
  3039  03B3  0187               	clrf	7
  3040  03B4  0863               	movf	??_setBuz,w
  3041  03B5  0081               	movwf	1
  3042                           
  3043                           ;Buzzer_B1.c: 36: Buz->TimeValue = time;
  3044  03B6  0820               	movf	_Buz,w
  3045  03B7  3E06               	addlw	6
  3046  03B8  0086               	movwf	6
  3047  03B9  0187               	clrf	7
  3048  03BA  087A               	movf	setBuz@time,w
  3049  03BB  3FC0               	movwi [0]fsr1
  3050  03BC  087B               	movf	setBuz@time+1,w
  3051  03BD  3FC1               	movwi [1]fsr1
  3052                           
  3053                           ;Buzzer_B1.c: 37: RB3 = 1;
  3054  03BE  158D               	bsf	13,3	;volatile
  3055                           
  3056                           ;Buzzer_B1.c: 38: } else {
  3057  03BF  0008               	return
  3058  03C0                     l3007:	
  3059                           
  3060                           ;Buzzer_B1.c: 39: if (!Buz->BufferStatus1) {
  3061  03C0  0820               	movf	_Buz,w
  3062  03C1  0086               	movwf	6
  3063  03C2  0187               	clrf	7
  3064  03C3  1981               	btfsc	1,3
  3065  03C4  2BDA               	goto	l3011
  3066                           
  3067                           ;Buzzer_B1.c: 40: Buz->BufferStatus1 = 1;
  3068  03C5  0820               	movf	_Buz,w
  3069  03C6  0086               	movwf	6
  3070  03C7  0187               	clrf	7
  3071  03C8  1581               	bsf	1,3
  3072                           
  3073                           ;Buzzer_B1.c: 41: Buz->CountBuffer1 = count;
  3074  03C9  0864               	movf	setBuz@count,w
  3075  03CA  00E3               	movwf	??_setBuz
  3076  03CB  0820               	movf	_Buz,w
  3077  03CC  3E04               	addlw	4
  3078  03CD  0086               	movwf	6
  3079  03CE  0187               	clrf	7
  3080  03CF  0863               	movf	??_setBuz,w
  3081  03D0  0081               	movwf	1
  3082                           
  3083                           ;Buzzer_B1.c: 42: Buz->TimeValueBuffer1 = time;
  3084  03D1  0820               	movf	_Buz,w
  3085  03D2  3E08               	addlw	8
  3086  03D3  0086               	movwf	6
  3087  03D4  0187               	clrf	7
  3088  03D5  087A               	movf	setBuz@time,w
  3089  03D6  3FC0               	movwi [0]fsr1
  3090  03D7  087B               	movf	setBuz@time+1,w
  3091  03D8  3FC1               	movwi [1]fsr1
  3092                           
  3093                           ;Buzzer_B1.c: 43: } else if (!Buz->BufferStatus2) {
  3094  03D9  0008               	return
  3095  03DA                     l3011:	
  3096  03DA  0820               	movf	_Buz,w
  3097  03DB  0086               	movwf	6
  3098  03DC  0187               	clrf	7
  3099  03DD  1A01               	btfsc	1,4
  3100  03DE  0008               	return
  3101                           
  3102                           ;Buzzer_B1.c: 44: Buz->BufferStatus2 = 1;
  3103  03DF  0820               	movf	_Buz,w
  3104  03E0  0086               	movwf	6
  3105  03E1  0187               	clrf	7
  3106  03E2  1601               	bsf	1,4
  3107                           
  3108                           ;Buzzer_B1.c: 45: Buz->CountBuffer2 = count;
  3109  03E3  0864               	movf	setBuz@count,w
  3110  03E4  00E3               	movwf	??_setBuz
  3111  03E5  0820               	movf	_Buz,w
  3112  03E6  3E05               	addlw	5
  3113  03E7  0086               	movwf	6
  3114  03E8  0187               	clrf	7
  3115  03E9  0863               	movf	??_setBuz,w
  3116  03EA  0081               	movwf	1
  3117                           
  3118                           ;Buzzer_B1.c: 46: Buz->TimeValueBuffer2 = time;
  3119  03EB  0820               	movf	_Buz,w
  3120  03EC  3E0A               	addlw	10
  3121  03ED  0086               	movwf	6
  3122  03EE  0187               	clrf	7
  3123  03EF  087A               	movf	setBuz@time,w
  3124  03F0  3FC0               	movwi [0]fsr1
  3125  03F1  087B               	movf	setBuz@time+1,w
  3126  03F2  3FC1               	movwi [1]fsr1
  3127  03F3  0008               	return
  3128  03F4                     __end_of_setBuz:	
  3129                           
  3130                           	psect	text4
  3131  0453                     __ptext4:	
  3132 ;; *************** function ___awdiv *****************
  3133 ;; Defined at:
  3134 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  divisor         2    1[COMMON] int 
  3137 ;;  dividend        2    3[COMMON] int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  quotient        2    8[COMMON] int 
  3140 ;;  sign            1    7[COMMON] unsigned char 
  3141 ;;  counter         1    6[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    1[COMMON] int 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;Total ram usage:        9 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_setBuz
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function ___awdiv
  3167  0453                     ___awdiv:	
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3171  0453  01F7               	clrf	___awdiv@sign
  3172  0454  1FF2               	btfss	___awdiv@divisor+1,7
  3173  0455  2C5D               	goto	l2465
  3174  0456  09F1               	comf	___awdiv@divisor,f
  3175  0457  09F2               	comf	___awdiv@divisor+1,f
  3176  0458  0AF1               	incf	___awdiv@divisor,f
  3177  0459  1903               	skipnz
  3178  045A  0AF2               	incf	___awdiv@divisor+1,f
  3179  045B  01F7               	clrf	___awdiv@sign
  3180  045C  0AF7               	incf	___awdiv@sign,f
  3181  045D                     l2465:	
  3182  045D  1FF4               	btfss	___awdiv@dividend+1,7
  3183  045E  2C68               	goto	l2471
  3184  045F  09F3               	comf	___awdiv@dividend,f
  3185  0460  09F4               	comf	___awdiv@dividend+1,f
  3186  0461  0AF3               	incf	___awdiv@dividend,f
  3187  0462  1903               	skipnz
  3188  0463  0AF4               	incf	___awdiv@dividend+1,f
  3189  0464  3001               	movlw	1
  3190  0465  00F5               	movwf	??___awdiv
  3191  0466  0875               	movf	??___awdiv,w
  3192  0467  06F7               	xorwf	___awdiv@sign,f
  3193  0468                     l2471:	
  3194  0468  01F8               	clrf	___awdiv@quotient
  3195  0469  01F9               	clrf	___awdiv@quotient+1
  3196  046A  0872               	movf	___awdiv@divisor+1,w
  3197  046B  0471               	iorwf	___awdiv@divisor,w
  3198  046C  1903               	skipnz
  3199  046D  2C97               	goto	l2493
  3200  046E  01F6               	clrf	___awdiv@counter
  3201  046F  0AF6               	incf	___awdiv@counter,f
  3202  0470                     l2481:	
  3203  0470  1BF2               	btfsc	___awdiv@divisor+1,7
  3204  0471  2C7C               	goto	l2483
  3205  0472  3001               	movlw	1
  3206  0473                     u1405:	
  3207  0473  35F1               	lslf	___awdiv@divisor,f
  3208  0474  0DF2               	rlf	___awdiv@divisor+1,f
  3209  0475  0B89               	decfsz	9,f
  3210  0476  2C73               	goto	u1405
  3211  0477  3001               	movlw	1
  3212  0478  00F5               	movwf	??___awdiv
  3213  0479  0875               	movf	??___awdiv,w
  3214  047A  07F6               	addwf	___awdiv@counter,f
  3215  047B  2C70               	goto	l2481
  3216  047C                     l2483:	
  3217  047C  3001               	movlw	1
  3218  047D                     u1425:	
  3219  047D  35F8               	lslf	___awdiv@quotient,f
  3220  047E  0DF9               	rlf	___awdiv@quotient+1,f
  3221  047F  0B89               	decfsz	9,f
  3222  0480  2C7D               	goto	u1425
  3223  0481  0872               	movf	___awdiv@divisor+1,w
  3224  0482  0274               	subwf	___awdiv@dividend+1,w
  3225  0483  1D03               	skipz
  3226  0484  2C87               	goto	u1435
  3227  0485  0871               	movf	___awdiv@divisor,w
  3228  0486  0273               	subwf	___awdiv@dividend,w
  3229  0487                     u1435:	
  3230  0487  1C03               	skipc
  3231  0488  2C8E               	goto	l2489
  3232  0489  0871               	movf	___awdiv@divisor,w
  3233  048A  02F3               	subwf	___awdiv@dividend,f
  3234  048B  0872               	movf	___awdiv@divisor+1,w
  3235  048C  3BF4               	subwfb	___awdiv@dividend+1,f
  3236  048D  1478               	bsf	___awdiv@quotient,0
  3237  048E                     l2489:	
  3238  048E  3001               	movlw	1
  3239  048F                     u1445:	
  3240  048F  36F2               	lsrf	___awdiv@divisor+1,f
  3241  0490  0CF1               	rrf	___awdiv@divisor,f
  3242  0491  0B89               	decfsz	9,f
  3243  0492  2C8F               	goto	u1445
  3244  0493  3001               	movlw	1
  3245  0494  02F6               	subwf	___awdiv@counter,f
  3246  0495  1D03               	btfss	3,2
  3247  0496  2C7C               	goto	l2483
  3248  0497                     l2493:	
  3249  0497  0877               	movf	___awdiv@sign,w
  3250  0498  1903               	btfsc	3,2
  3251  0499  2C9F               	goto	l2497
  3252  049A  09F8               	comf	___awdiv@quotient,f
  3253  049B  09F9               	comf	___awdiv@quotient+1,f
  3254  049C  0AF8               	incf	___awdiv@quotient,f
  3255  049D  1903               	skipnz
  3256  049E  0AF9               	incf	___awdiv@quotient+1,f
  3257  049F                     l2497:	
  3258  049F  0879               	movf	___awdiv@quotient+1,w
  3259  04A0  01F2               	clrf	?___awdiv+1
  3260  04A1  07F2               	addwf	?___awdiv+1,f
  3261  04A2  0878               	movf	___awdiv@quotient,w
  3262  04A3  01F1               	clrf	?___awdiv
  3263  04A4  07F1               	addwf	?___awdiv,f
  3264  04A5  0008               	return
  3265  04A6                     __end_of___awdiv:	
  3266                           
  3267                           	psect	text5
  3268  06B2                     __ptext5:	
  3269 ;; *************** function _myMain_Initialization *****************
  3270 ;; Defined at:
  3271 ;;		line 111 in file "../src/Main_B1.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    3
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _myMain_Initialization
  3301  06B2                     _myMain_Initialization:	
  3302                           
  3303                           ;Main_B1.c: 113: product = &_product;
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3307  06B2  30A0               	movlw	__product& (0+255)
  3308  06B3  00F1               	movwf	??_myMain_Initialization
  3309  06B4  0871               	movf	??_myMain_Initialization,w
  3310  06B5  0020               	movlb	0	; select bank0
  3311  06B6  00EC               	movwf	_product
  3312                           
  3313                           ;Main_B1.c: 114: product->Data[20] = 211;
  3314  06B7  30D3               	movlw	211
  3315  06B8  00F1               	movwf	??_myMain_Initialization
  3316  06B9  086C               	movf	_product,w
  3317  06BA  3E14               	addlw	20
  3318  06BB  0086               	movwf	6
  3319  06BC  0187               	clrf	7
  3320  06BD  0871               	movf	??_myMain_Initialization,w
  3321  06BE  0081               	movwf	1
  3322                           
  3323                           ;Main_B1.c: 117: myMain = &_myMain;
  3324  06BF  30C0               	movlw	__myMain& (0+255)
  3325  06C0  00F1               	movwf	??_myMain_Initialization
  3326  06C1  0871               	movf	??_myMain_Initialization,w
  3327  06C2  00EB               	movwf	_myMain
  3328  06C3  0008               	return
  3329  06C4                     __end_of_myMain_Initialization:	
  3330                           
  3331                           	psect	text6
  3332  065A                     __ptext6:	
  3333 ;; *************** function _WDT_Main *****************
  3334 ;; Defined at:
  3335 ;;		line 907 in file "../src/MCU_B1.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    4
  3356 ;; This function calls:
  3357 ;;		_WDT_Clearing
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _WDT_Main
  3365  065A                     _WDT_Main:	
  3366                           
  3367                           ;MCU_B1.c: 908: if (WDT->Enable) {
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _WDT_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3371  065A  0020               	movlb	0	; select bank0
  3372  065B  086A               	movf	_WDT,w
  3373  065C  0086               	movwf	6
  3374  065D  0187               	clrf	7
  3375  065E  1C01               	btfss	1,0
  3376  065F  0008               	return
  3377                           
  3378                           ;MCU_B1.c: 909: if (WDT->Count-- > 0) {
  3379  0660  0A6A               	incf	_WDT,w
  3380  0661  0086               	movwf	6
  3381  0662  0187               	clrf	7
  3382  0663  3001               	movlw	1
  3383  0664  0281               	subwf	1,f
  3384  0665  0801               	movf	1,w
  3385  0666  3AFF               	xorlw	255
  3386  0667  1903               	skipnz
  3387  0668  0008               	return
  3388                           
  3389                           ;MCU_B1.c: 910: WDT->Count = 10;
  3390  0669  300A               	movlw	10
  3391  066A  00F1               	movwf	??_WDT_Main
  3392  066B  0A6A               	incf	_WDT,w
  3393  066C  0086               	movwf	6
  3394  066D  0187               	clrf	7
  3395  066E  0871               	movf	??_WDT_Main,w
  3396  066F  0081               	movwf	1
  3397                           
  3398                           ;MCU_B1.c: 911: WDT_Clearing();
  3399  0670  3187  2790         	fcall	_WDT_Clearing
  3400  0672  0008               	return
  3401  0673                     __end_of_WDT_Main:	
  3402                           
  3403                           	psect	text7
  3404  0790                     __ptext7:	
  3405 ;; *************** function _WDT_Clearing *****************
  3406 ;; Defined at:
  3407 ;;		line 917 in file "../src/MCU_B1.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		None
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_WDT_Main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _WDT_Clearing
  3437  0790                     _WDT_Clearing:	
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _WDT_Clearing: []
  3441  0790  0064               	clrwdt	;# 
  3442  0791  0008               	return
  3443  0792                     __end_of_WDT_Clearing:	
  3444                           
  3445                           	psect	text8
  3446  072D                     __ptext8:	
  3447 ;; *************** function _Switch_Main *****************
  3448 ;; Defined at:
  3449 ;;		line 61 in file "../src/Switch_B1.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    5
  3470 ;; This function calls:
  3471 ;;		_setSw_Main
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _Switch_Main
  3479  072D                     _Switch_Main:	
  3480                           
  3481                           ;Switch_B1.c: 63: setSw_Main(1);
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3485  072D  3001               	movlw	1
  3486  072E  3180  2040  3187   	fcall	_setSw_Main
  3487                           
  3488                           ;Switch_B1.c: 67: setSw_Main(2);
  3489  0731  3002               	movlw	2
  3490  0732  3180  2040  3187   	fcall	_setSw_Main
  3491                           
  3492                           ;Switch_B1.c: 71: setSw_Main(3);
  3493  0735  3003               	movlw	3
  3494  0736  3180  2040         	fcall	_setSw_Main
  3495  0738  0008               	return
  3496  0739                     __end_of_Switch_Main:	
  3497                           
  3498                           	psect	text9
  3499  0040                     __ptext9:	
  3500 ;; *************** function _setSw_Main *****************
  3501 ;; Defined at:
  3502 ;;		line 111 in file "../src/Switch_B1.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  sw              1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  sw              1    5[COMMON] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;		None               void
  3509 ;; Registers used:
  3510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;Total ram usage:        3 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    4
  3523 ;; This function calls:
  3524 ;;		_SwPointSelect
  3525 ;; This function is called by:
  3526 ;;		_Switch_Main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _setSw_Main
  3532  0040                     _setSw_Main:	
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3536                           ;setSw_Main@sw stored from wreg
  3537  0040  00F5               	movwf	setSw_Main@sw
  3538                           
  3539                           ;Switch_B1.c: 112: if (Sw->Enable) {
  3540  0041  087C               	movf	_Sw,w
  3541  0042  0086               	movwf	6
  3542  0043  0187               	clrf	7
  3543  0044  1C01               	btfss	1,0
  3544  0045  0008               	return
  3545                           
  3546                           ;Switch_B1.c: 113: SwPointSelect(sw);
  3547  0046  0875               	movf	setSw_Main@sw,w
  3548  0047  3186  2624  3180   	fcall	_SwPointSelect
  3549                           
  3550                           ;Switch_B1.c: 115: if (sw == 1) {
  3551  004A  0875               	movf	setSw_Main@sw,w
  3552  004B  3A01               	xorlw	1
  3553  004C  1D03               	skipz
  3554  004D  2856               	goto	l2655
  3555                           
  3556                           ;Switch_B1.c: 116: Sw->Touch = (RA0) ? 1 : 0;
  3557  004E  087C               	movf	_Sw,w
  3558  004F  0086               	movwf	6
  3559  0050  0187               	clrf	7
  3560  0051  1081               	bcf	1,1
  3561  0052  0020               	movlb	0	; select bank0
  3562  0053  180C               	btfsc	12,0	;volatile
  3563  0054  1481               	bsf	1,1
  3564                           
  3565                           ;Switch_B1.c: 117: } else if (sw == 2) {
  3566  0055  286D               	goto	l1110
  3567  0056                     l2655:	
  3568  0056  0875               	movf	setSw_Main@sw,w
  3569  0057  3A02               	xorlw	2
  3570  0058  1D03               	skipz
  3571  0059  2862               	goto	l2659
  3572                           
  3573                           ;Switch_B1.c: 118: Sw->Touch = (RA6) ? 1 : 0;
  3574  005A  087C               	movf	_Sw,w
  3575  005B  0086               	movwf	6
  3576  005C  0187               	clrf	7
  3577  005D  1081               	bcf	1,1
  3578  005E  0020               	movlb	0	; select bank0
  3579  005F  1B0C               	btfsc	12,6	;volatile
  3580  0060  1481               	bsf	1,1
  3581                           
  3582                           ;Switch_B1.c: 119: } else if (sw == 3) {
  3583  0061  286D               	goto	l1110
  3584  0062                     l2659:	
  3585  0062  0875               	movf	setSw_Main@sw,w
  3586  0063  3A03               	xorlw	3
  3587  0064  1D03               	skipz
  3588  0065  286D               	goto	l1110
  3589                           
  3590                           ;Switch_B1.c: 120: Sw->Touch = (RA4) ? 1 : 0;
  3591  0066  087C               	movf	_Sw,w
  3592  0067  0086               	movwf	6
  3593  0068  0187               	clrf	7
  3594  0069  1081               	bcf	1,1
  3595  006A  0020               	movlb	0	; select bank0
  3596  006B  1A0C               	btfsc	12,4	;volatile
  3597  006C  1481               	bsf	1,1
  3598  006D                     l1110:	
  3599                           
  3600                           ;Switch_B1.c: 121: }
  3601                           ;Switch_B1.c: 137: if (Sw->Touch) {
  3602  006D  087C               	movf	_Sw,w
  3603  006E  0086               	movwf	6
  3604  006F  0187               	clrf	7
  3605  0070  1C81               	btfss	1,1
  3606  0071  290C               	goto	l2697
  3607                           
  3608                           ;Switch_B1.c: 138: if (!Sw->Debounce) {
  3609  0072  087C               	movf	_Sw,w
  3610  0073  0086               	movwf	6
  3611  0074  0187               	clrf	7
  3612  0075  1901               	btfsc	1,2
  3613  0076  2891               	goto	l2673
  3614                           
  3615                           ;Switch_B1.c: 139: Sw->DebounceTime++;
  3616  0077  3001               	movlw	1
  3617  0078  00F3               	movwf	??_setSw_Main
  3618  0079  087C               	movf	_Sw,w
  3619  007A  3E02               	addlw	2
  3620  007B  0086               	movwf	6
  3621  007C  0187               	clrf	7
  3622  007D  0873               	movf	??_setSw_Main,w
  3623  007E  0781               	addwf	1,f
  3624                           
  3625                           ;Switch_B1.c: 140: if (Sw->DebounceTime >= 5) {
  3626  007F  087C               	movf	_Sw,w
  3627  0080  3E02               	addlw	2
  3628  0081  0086               	movwf	6
  3629  0082  0187               	clrf	7
  3630  0083  3005               	movlw	5
  3631  0084  0201               	subwf	1,w
  3632  0085  1C03               	skipc
  3633  0086  0008               	return
  3634                           
  3635                           ;Switch_B1.c: 141: Sw->DebounceTime = 0;
  3636  0087  087C               	movf	_Sw,w
  3637  0088  3E02               	addlw	2
  3638  0089  0086               	movwf	6
  3639  008A  0187               	clrf	7
  3640  008B  0181               	clrf	1
  3641                           
  3642                           ;Switch_B1.c: 142: Sw->Debounce = 1;
  3643  008C  087C               	movf	_Sw,w
  3644  008D  0086               	movwf	6
  3645  008E  0187               	clrf	7
  3646  008F  1501               	bsf	1,2
  3647                           
  3648                           ;Switch_B1.c: 148: }
  3649                           ;Switch_B1.c: 149: } else {
  3650  0090  0008               	return
  3651  0091                     l2673:	
  3652                           
  3653                           ;Switch_B1.c: 150: if (!Sw->Hold1) {
  3654  0091  087C               	movf	_Sw,w
  3655  0092  0086               	movwf	6
  3656  0093  0187               	clrf	7
  3657  0094  1981               	btfsc	1,3
  3658  0095  28BA               	goto	l2681
  3659                           
  3660                           ;Switch_B1.c: 151: Sw->Hold1Time++;
  3661  0096  087C               	movf	_Sw,w
  3662  0097  3E03               	addlw	3
  3663  0098  0086               	movwf	6
  3664  0099  0187               	clrf	7
  3665  009A  3001               	movlw	1
  3666  009B  0781               	addwf	1,f
  3667  009C  3141               	addfsr 1,1
  3668  009D  1803               	skipnc
  3669  009E  0A81               	incf	1,f
  3670                           
  3671                           ;Switch_B1.c: 152: if (Sw->Hold1Time >= 150) {
  3672  009F  087C               	movf	_Sw,w
  3673  00A0  3E03               	addlw	3
  3674  00A1  0086               	movwf	6
  3675  00A2  0187               	clrf	7
  3676  00A3  3F40               	moviw [0]fsr1
  3677  00A4  00F3               	movwf	??_setSw_Main
  3678  00A5  3F41               	moviw [1]fsr1
  3679  00A6  00F4               	movwf	??_setSw_Main+1
  3680  00A7  3000               	movlw	0
  3681  00A8  0274               	subwf	??_setSw_Main+1,w
  3682  00A9  3096               	movlw	150
  3683  00AA  1903               	skipnz
  3684  00AB  0273               	subwf	??_setSw_Main,w
  3685  00AC  1C03               	skipc
  3686  00AD  0008               	return
  3687                           
  3688                           ;Switch_B1.c: 153: Sw->Hold1Time = 0;
  3689  00AE  087C               	movf	_Sw,w
  3690  00AF  3E03               	addlw	3
  3691  00B0  0086               	movwf	6
  3692  00B1  0187               	clrf	7
  3693  00B2  3000               	movlw	0
  3694  00B3  3FC0               	movwi [0]fsr1
  3695  00B4  3FC1               	movwi [1]fsr1
  3696                           
  3697                           ;Switch_B1.c: 154: Sw->Hold1 = 1;
  3698  00B5  087C               	movf	_Sw,w
  3699  00B6  0086               	movwf	6
  3700  00B7  0187               	clrf	7
  3701  00B8  1581               	bsf	1,3
  3702                           
  3703                           ;Switch_B1.c: 160: }
  3704                           ;Switch_B1.c: 161: } else {
  3705  00B9  0008               	return
  3706  00BA                     l2681:	
  3707                           
  3708                           ;Switch_B1.c: 162: if (!Sw->Hold2) {
  3709  00BA  087C               	movf	_Sw,w
  3710  00BB  0086               	movwf	6
  3711  00BC  0187               	clrf	7
  3712  00BD  1A01               	btfsc	1,4
  3713  00BE  28E3               	goto	l2689
  3714                           
  3715                           ;Switch_B1.c: 163: Sw->Hold2Time++;
  3716  00BF  087C               	movf	_Sw,w
  3717  00C0  3E05               	addlw	5
  3718  00C1  0086               	movwf	6
  3719  00C2  0187               	clrf	7
  3720  00C3  3001               	movlw	1
  3721  00C4  0781               	addwf	1,f
  3722  00C5  3141               	addfsr 1,1
  3723  00C6  1803               	skipnc
  3724  00C7  0A81               	incf	1,f
  3725                           
  3726                           ;Switch_B1.c: 164: if (Sw->Hold2Time >= 150) {
  3727  00C8  087C               	movf	_Sw,w
  3728  00C9  3E05               	addlw	5
  3729  00CA  0086               	movwf	6
  3730  00CB  0187               	clrf	7
  3731  00CC  3F40               	moviw [0]fsr1
  3732  00CD  00F3               	movwf	??_setSw_Main
  3733  00CE  3F41               	moviw [1]fsr1
  3734  00CF  00F4               	movwf	??_setSw_Main+1
  3735  00D0  3000               	movlw	0
  3736  00D1  0274               	subwf	??_setSw_Main+1,w
  3737  00D2  3096               	movlw	150
  3738  00D3  1903               	skipnz
  3739  00D4  0273               	subwf	??_setSw_Main,w
  3740  00D5  1C03               	skipc
  3741  00D6  0008               	return
  3742                           
  3743                           ;Switch_B1.c: 165: Sw->Hold2Time = 0;
  3744  00D7  087C               	movf	_Sw,w
  3745  00D8  3E05               	addlw	5
  3746  00D9  0086               	movwf	6
  3747  00DA  0187               	clrf	7
  3748  00DB  3000               	movlw	0
  3749  00DC  3FC0               	movwi [0]fsr1
  3750  00DD  3FC1               	movwi [1]fsr1
  3751                           
  3752                           ;Switch_B1.c: 166: Sw->Hold2 = 1;
  3753  00DE  087C               	movf	_Sw,w
  3754  00DF  0086               	movwf	6
  3755  00E0  0187               	clrf	7
  3756  00E1  1601               	bsf	1,4
  3757                           
  3758                           ;Switch_B1.c: 176: }
  3759                           ;Switch_B1.c: 177: } else {
  3760  00E2  0008               	return
  3761  00E3                     l2689:	
  3762                           
  3763                           ;Switch_B1.c: 178: if (!Sw->Hold3) {
  3764  00E3  087C               	movf	_Sw,w
  3765  00E4  0086               	movwf	6
  3766  00E5  0187               	clrf	7
  3767  00E6  1A81               	btfsc	1,5
  3768  00E7  0008               	return
  3769                           
  3770                           ;Switch_B1.c: 179: Sw->Hold3Time++;
  3771  00E8  087C               	movf	_Sw,w
  3772  00E9  3E07               	addlw	7
  3773  00EA  0086               	movwf	6
  3774  00EB  0187               	clrf	7
  3775  00EC  3001               	movlw	1
  3776  00ED  0781               	addwf	1,f
  3777  00EE  3141               	addfsr 1,1
  3778  00EF  1803               	skipnc
  3779  00F0  0A81               	incf	1,f
  3780                           
  3781                           ;Switch_B1.c: 180: if (Sw->Hold3Time >= 300)
  3782  00F1  087C               	movf	_Sw,w
  3783  00F2  3E07               	addlw	7
  3784  00F3  0086               	movwf	6
  3785  00F4  0187               	clrf	7
  3786  00F5  3F40               	moviw [0]fsr1
  3787  00F6  00F3               	movwf	??_setSw_Main
  3788  00F7  3F41               	moviw [1]fsr1
  3789  00F8  00F4               	movwf	??_setSw_Main+1
  3790  00F9  3001               	movlw	1
  3791  00FA  0274               	subwf	??_setSw_Main+1,w
  3792  00FB  302C               	movlw	44
  3793  00FC  1903               	skipnz
  3794  00FD  0273               	subwf	??_setSw_Main,w
  3795  00FE  1C03               	skipc
  3796  00FF  0008               	return
  3797                           
  3798                           ;Switch_B1.c: 181: {
  3799                           ;Switch_B1.c: 182: Sw->Hold3Time = 0;
  3800  0100  087C               	movf	_Sw,w
  3801  0101  3E07               	addlw	7
  3802  0102  0086               	movwf	6
  3803  0103  0187               	clrf	7
  3804  0104  3000               	movlw	0
  3805  0105  3FC0               	movwi [0]fsr1
  3806  0106  3FC1               	movwi [1]fsr1
  3807                           
  3808                           ;Switch_B1.c: 183: Sw->Hold3 = 1;
  3809  0107  087C               	movf	_Sw,w
  3810  0108  0086               	movwf	6
  3811  0109  0187               	clrf	7
  3812  010A  1681               	bsf	1,5
  3813                           
  3814                           ;Switch_B1.c: 189: }
  3815                           ;Switch_B1.c: 190: }
  3816                           ;Switch_B1.c: 191: }
  3817                           ;Switch_B1.c: 192: }
  3818                           ;Switch_B1.c: 193: }
  3819                           ;Switch_B1.c: 194: } else {
  3820  010B  0008               	return
  3821  010C                     l2697:	
  3822                           
  3823                           ;Switch_B1.c: 195: if (Sw->Debounce) {
  3824  010C  087C               	movf	_Sw,w
  3825  010D  0086               	movwf	6
  3826  010E  0187               	clrf	7
  3827  010F  1D01               	btfss	1,2
  3828  0110  0008               	return
  3829                           
  3830                           ;Switch_B1.c: 196: Sw->DebounceTime++;
  3831  0111  3001               	movlw	1
  3832  0112  00F3               	movwf	??_setSw_Main
  3833  0113  087C               	movf	_Sw,w
  3834  0114  3E02               	addlw	2
  3835  0115  0086               	movwf	6
  3836  0116  0187               	clrf	7
  3837  0117  0873               	movf	??_setSw_Main,w
  3838  0118  0781               	addwf	1,f
  3839                           
  3840                           ;Switch_B1.c: 197: if (Sw->DebounceTime >= 5) {
  3841  0119  087C               	movf	_Sw,w
  3842  011A  3E02               	addlw	2
  3843  011B  0086               	movwf	6
  3844  011C  0187               	clrf	7
  3845  011D  3005               	movlw	5
  3846  011E  0201               	subwf	1,w
  3847  011F  1C03               	skipc
  3848  0120  0008               	return
  3849                           
  3850                           ;Switch_B1.c: 198: Sw->DebounceTime = 0;
  3851  0121  087C               	movf	_Sw,w
  3852  0122  3E02               	addlw	2
  3853  0123  0086               	movwf	6
  3854  0124  0187               	clrf	7
  3855  0125  0181               	clrf	1
  3856                           
  3857                           ;Switch_B1.c: 199: Sw->Debounce = 0;
  3858  0126  087C               	movf	_Sw,w
  3859  0127  0086               	movwf	6
  3860  0128  0187               	clrf	7
  3861  0129  1101               	bcf	1,2
  3862                           
  3863                           ;Switch_B1.c: 200: Sw->Hold1Time = 0;
  3864  012A  087C               	movf	_Sw,w
  3865  012B  3E03               	addlw	3
  3866  012C  0086               	movwf	6
  3867  012D  0187               	clrf	7
  3868  012E  3000               	movlw	0
  3869  012F  3FC0               	movwi [0]fsr1
  3870  0130  3FC1               	movwi [1]fsr1
  3871                           
  3872                           ;Switch_B1.c: 201: Sw->Hold1 = 0;
  3873  0131  087C               	movf	_Sw,w
  3874  0132  0086               	movwf	6
  3875  0133  0187               	clrf	7
  3876  0134  1181               	bcf	1,3
  3877                           
  3878                           ;Switch_B1.c: 202: Sw->Hold2Time = 0;
  3879  0135  087C               	movf	_Sw,w
  3880  0136  3E05               	addlw	5
  3881  0137  0086               	movwf	6
  3882  0138  0187               	clrf	7
  3883  0139  3000               	movlw	0
  3884  013A  3FC0               	movwi [0]fsr1
  3885  013B  3FC1               	movwi [1]fsr1
  3886                           
  3887                           ;Switch_B1.c: 203: Sw->Hold2 = 0;
  3888  013C  087C               	movf	_Sw,w
  3889  013D  0086               	movwf	6
  3890  013E  0187               	clrf	7
  3891  013F  1201               	bcf	1,4
  3892                           
  3893                           ;Switch_B1.c: 204: Sw->Hold3Time = 0;
  3894  0140  087C               	movf	_Sw,w
  3895  0141  3E07               	addlw	7
  3896  0142  0086               	movwf	6
  3897  0143  0187               	clrf	7
  3898  0144  3000               	movlw	0
  3899  0145  3FC0               	movwi [0]fsr1
  3900  0146  3FC1               	movwi [1]fsr1
  3901                           
  3902                           ;Switch_B1.c: 205: Sw->Hold3 = 0;
  3903  0147  087C               	movf	_Sw,w
  3904  0148  0086               	movwf	6
  3905  0149  0187               	clrf	7
  3906  014A  1281               	bcf	1,5
  3907  014B  0008               	return
  3908  014C                     __end_of_setSw_Main:	
  3909                           
  3910                           	psect	text10
  3911  0624                     __ptext10:	
  3912 ;; *************** function _SwPointSelect *****************
  3913 ;; Defined at:
  3914 ;;		line 17 in file "../src/Switch_B1.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  sw              1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  sw              1    2[COMMON] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    3
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_setSw_Enable
  3939 ;;		_setSw_Main
  3940 ;;		_setSw_Status
  3941 ;;		_Sw_Detect
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _SwPointSelect
  3947  0624                     _SwPointSelect:	
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in _SwPointSelect: [wreg]
  3951                           ;SwPointSelect@sw stored from wreg
  3952  0624  00F2               	movwf	SwPointSelect@sw
  3953                           
  3954                           ;Switch_B1.c: 20: if (sw == 1) {
  3955  0625  0872               	movf	SwPointSelect@sw,w
  3956  0626  3A01               	xorlw	1
  3957  0627  1D03               	skipz
  3958  0628  2E2E               	goto	l2449
  3959                           
  3960                           ;Switch_B1.c: 21: Sw = &Sw1;
  3961  0629  302E               	movlw	_Sw1& (0+255)
  3962  062A  00F1               	movwf	??_SwPointSelect
  3963  062B  0871               	movf	??_SwPointSelect,w
  3964  062C  00FC               	movwf	_Sw
  3965                           
  3966                           ;Switch_B1.c: 22: }
  3967  062D  0008               	return
  3968  062E                     l2449:	
  3969                           
  3970                           ;Switch_B1.c: 25: else if (sw == 2) {
  3971  062E  0872               	movf	SwPointSelect@sw,w
  3972  062F  3A02               	xorlw	2
  3973  0630  1D03               	skipz
  3974  0631  2E37               	goto	l2453
  3975                           
  3976                           ;Switch_B1.c: 26: Sw = &Sw2;
  3977  0632  3037               	movlw	_Sw2& (0+255)
  3978  0633  00F1               	movwf	??_SwPointSelect
  3979  0634  0871               	movf	??_SwPointSelect,w
  3980  0635  00FC               	movwf	_Sw
  3981                           
  3982                           ;Switch_B1.c: 27: }
  3983  0636  0008               	return
  3984  0637                     l2453:	
  3985                           
  3986                           ;Switch_B1.c: 30: else if (sw == 3) {
  3987  0637  0872               	movf	SwPointSelect@sw,w
  3988  0638  3A03               	xorlw	3
  3989  0639  1D03               	skipz
  3990  063A  0008               	return
  3991                           
  3992                           ;Switch_B1.c: 31: Sw = &Sw3;
  3993  063B  3040               	movlw	_Sw3& (0+255)
  3994  063C  00F1               	movwf	??_SwPointSelect
  3995  063D  0871               	movf	??_SwPointSelect,w
  3996  063E  00FC               	movwf	_Sw
  3997  063F  0008               	return
  3998  0640                     __end_of_SwPointSelect:	
  3999                           
  4000                           	psect	text11
  4001  06C4                     __ptext11:	
  4002 ;; *************** function _Switch_Initialization *****************
  4003 ;; Defined at:
  4004 ;;		line 37 in file "../src/Switch_B1.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    6
  4025 ;; This function calls:
  4026 ;;		_TouchPower
  4027 ;;		_setSw_Initialization
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _Switch_Initialization
  4035  06C4                     _Switch_Initialization:	
  4036                           
  4037                           ;Switch_B1.c: 38: TouchPower();
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4041  06C4  3187  2787  3186   	fcall	_TouchPower
  4042                           
  4043                           ;Switch_B1.c: 40: WPUB1 = 0;
  4044  06C7  0024               	movlb	4	; select bank4
  4045  06C8  108D               	bcf	13,1	;volatile
  4046                           
  4047                           ;Switch_B1.c: 49: setSw_Initialization(1);
  4048  06C9  3001               	movlw	1
  4049  06CA  3187  2760  3186   	fcall	_setSw_Initialization
  4050                           
  4051                           ;Switch_B1.c: 52: setSw_Initialization(2);
  4052  06CD  3002               	movlw	2
  4053  06CE  3187  2760  3186   	fcall	_setSw_Initialization
  4054                           
  4055                           ;Switch_B1.c: 55: setSw_Initialization(3);
  4056  06D1  3003               	movlw	3
  4057  06D2  3187  2760         	fcall	_setSw_Initialization
  4058  06D4  0008               	return
  4059  06D5                     __end_of_Switch_Initialization:	
  4060                           
  4061                           	psect	text12
  4062  0760                     __ptext12:	
  4063 ;; *************** function _setSw_Initialization *****************
  4064 ;; Defined at:
  4065 ;;		line 77 in file "../src/Switch_B1.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  sw              1    wreg     unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  sw              1    5[COMMON] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;		None               void
  4072 ;; Registers used:
  4073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;Total ram usage:        1 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    5
  4086 ;; This function calls:
  4087 ;;		_setLED
  4088 ;; This function is called by:
  4089 ;;		_Switch_Initialization
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _setSw_Initialization
  4095  0760                     _setSw_Initialization:	
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4099                           ;setSw_Initialization@sw stored from wreg
  4100  0760  00F5               	movwf	setSw_Initialization@sw
  4101                           
  4102                           ;Switch_B1.c: 78: setLED(sw, 1);
  4103  0761  01F3               	clrf	setLED@command
  4104  0762  0AF3               	incf	setLED@command,f
  4105  0763  0875               	movf	setSw_Initialization@sw,w
  4106  0764  3182  22A2         	fcall	_setLED
  4107  0766  0008               	return
  4108  0767                     __end_of_setSw_Initialization:	
  4109                           
  4110                           	psect	text13
  4111  0787                     __ptext13:	
  4112 ;; *************** function _TouchPower *****************
  4113 ;; Defined at:
  4114 ;;		line 10 in file "../src/Switch_B1.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;		None               void
  4121 ;; Registers used:
  4122 ;;		None
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;Total ram usage:        0 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    3
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_Switch_Initialization
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _TouchPower
  4144  0787                     _TouchPower:	
  4145  0787                     l1079:	
  4146                           ;Switch_B1.c: 11: while (!RC5)
  4147                           
  4148                           ;incstack = 0
  4149                           ; Regs used in _TouchPower: []
  4150                           
  4151  0787  0020               	movlb	0	; select bank0
  4152  0788  1A8E               	btfsc	14,5	;volatile
  4153  0789  0008               	return
  4154                           
  4155                           ;Switch_B1.c: 12: RC5 = 1;
  4156  078A  168E               	bsf	14,5	;volatile
  4157  078B  2F87               	goto	l1079
  4158  078C                     __end_of_TouchPower:	
  4159                           
  4160                           	psect	text14
  4161  0640                     __ptext14:	
  4162 ;; *************** function _Mcu_Initialization *****************
  4163 ;; Defined at:
  4164 ;;		line 30 in file "../src/MCU_B1.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;		None               void
  4171 ;; Registers used:
  4172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    4
  4185 ;; This function calls:
  4186 ;;		_ADC_Set
  4187 ;;		_Fosc_Set
  4188 ;;		_INT_Set
  4189 ;;		_IOC_Set
  4190 ;;		_IO_Set
  4191 ;;		_TMR0_Set
  4192 ;;		_WDT_Set
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _Mcu_Initialization
  4200  0640                     _Mcu_Initialization:	
  4201                           
  4202                           ;MCU_B1.c: 32: Fosc_Set();
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4206  0640  3187  278C  3186   	fcall	_Fosc_Set
  4207                           
  4208                           ;MCU_B1.c: 34: IO_Set();
  4209  0643  3186  2673  3186   	fcall	_IO_Set
  4210                           
  4211                           ;MCU_B1.c: 36: TMR0_Set();
  4212  0646  3187  2713  3186   	fcall	_TMR0_Set
  4213                           
  4214                           ;MCU_B1.c: 38: ;;
  4215                           ;MCU_B1.c: 40: ADC_Set();
  4216  0649  3187  2767  3186   	fcall	_ADC_Set
  4217                           
  4218                           ;MCU_B1.c: 44: INT_Set();
  4219  064C  3187  2781  3186   	fcall	_INT_Set
  4220                           
  4221                           ;MCU_B1.c: 46: IOC_Set();
  4222  064F  3187  2720  3186   	fcall	_IOC_Set
  4223                           
  4224                           ;MCU_B1.c: 48: ;;
  4225                           ;MCU_B1.c: 50: ;;
  4226                           ;MCU_B1.c: 52: Memory=&VarMemory;
  4227  0652  3020               	movlw	_VarMemory& (0+255)
  4228  0653  00F2               	movwf	??_Mcu_Initialization
  4229  0654  0872               	movf	??_Mcu_Initialization,w
  4230  0655  0020               	movlb	0	; select bank0
  4231  0656  00ED               	movwf	_Memory
  4232                           
  4233                           ;MCU_B1.c: 54: WDT_Set();
  4234  0657  3186  268B         	fcall	_WDT_Set
  4235  0659  0008               	return
  4236  065A                     __end_of_Mcu_Initialization:	
  4237                           
  4238                           	psect	text15
  4239  068B                     __ptext15:	
  4240 ;; *************** function _WDT_Set *****************
  4241 ;; Defined at:
  4242 ;;		line 899 in file "../src/MCU_B1.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, fsr1l, fsr1h
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;Total ram usage:        1 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_Mcu_Initialization
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _WDT_Set
  4272  068B                     _WDT_Set:	
  4273                           
  4274                           ;MCU_B1.c: 900: WDTCON = 0b00010111;;
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _WDT_Set: [wregfsr1]
  4278  068B  3017               	movlw	23
  4279  068C  0021               	movlb	1	; select bank1
  4280  068D  0097               	movwf	23	;volatile
  4281                           
  4282                           ;MCU_B1.c: 901: WDT = &_WDT;
  4283  068E  3061               	movlw	__WDT& (0+255)
  4284  068F  00F1               	movwf	??_WDT_Set
  4285  0690  0871               	movf	??_WDT_Set,w
  4286  0691  0020               	movlb	0	; select bank0
  4287  0692  00EA               	movwf	_WDT
  4288                           
  4289                           ;MCU_B1.c: 902: WDT->Enable = 1;
  4290  0693  086A               	movf	_WDT,w
  4291  0694  0086               	movwf	6
  4292  0695  0187               	clrf	7
  4293  0696  1401               	bsf	1,0
  4294                           
  4295                           ;MCU_B1.c: 903: WDT->Count = 10;
  4296  0697  300A               	movlw	10
  4297  0698  00F1               	movwf	??_WDT_Set
  4298  0699  0A6A               	incf	_WDT,w
  4299  069A  0086               	movwf	6
  4300  069B  0187               	clrf	7
  4301  069C  0871               	movf	??_WDT_Set,w
  4302  069D  0081               	movwf	1
  4303  069E  0008               	return
  4304  069F                     __end_of_WDT_Set:	
  4305                           
  4306                           	psect	text16
  4307  0713                     __ptext16:	
  4308 ;; *************** function _TMR0_Set *****************
  4309 ;; Defined at:
  4310 ;;		line 128 in file "../src/MCU_B1.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;		None               void
  4317 ;; Registers used:
  4318 ;;		wreg, status,2
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;Total ram usage:        1 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    3
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_Mcu_Initialization
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _TMR0_Set
  4340  0713                     _TMR0_Set:	
  4341                           
  4342                           ;MCU_B1.c: 129: Timer0 = &VarTimer0;
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in _TMR0_Set: [wreg+status,2]
  4346  0713  3049               	movlw	_VarTimer0& (0+255)
  4347  0714  00F1               	movwf	??_TMR0_Set
  4348  0715  0871               	movf	??_TMR0_Set,w
  4349  0716  0020               	movlb	0	; select bank0
  4350  0717  00E9               	movwf	_Timer0
  4351                           
  4352                           ;MCU_B1.c: 130: OPTION_REG = 0x00;
  4353  0718  0021               	movlb	1	; select bank1
  4354  0719  0195               	clrf	21	;volatile
  4355                           
  4356                           ;MCU_B1.c: 131: TMR0 = (256-90);
  4357  071A  30A6               	movlw	166
  4358  071B  0020               	movlb	0	; select bank0
  4359  071C  0095               	movwf	21	;volatile
  4360                           
  4361                           ;MCU_B1.c: 132: TMR0IE = 1;
  4362  071D  168B               	bsf	11,5	;volatile
  4363                           
  4364                           ;MCU_B1.c: 133: GIE = 1;
  4365  071E  178B               	bsf	11,7	;volatile
  4366  071F  0008               	return
  4367  0720                     __end_of_TMR0_Set:	
  4368                           
  4369                           	psect	text17
  4370  0673                     __ptext17:	
  4371 ;; *************** function _IO_Set *****************
  4372 ;; Defined at:
  4373 ;;		line 62 in file "../src/MCU_B1.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;		None               void
  4380 ;; Registers used:
  4381 ;;		wreg, status,2
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    3
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_Mcu_Initialization
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _IO_Set
  4403  0673                     _IO_Set:	
  4404                           
  4405                           ;MCU_B1.c: 90: TRISA = 0b01110111;;
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _IO_Set: [wreg+status,2]
  4409  0673  3077               	movlw	119
  4410  0674  0021               	movlb	1	; select bank1
  4411  0675  008C               	movwf	12	;volatile
  4412                           
  4413                           ;MCU_B1.c: 91: TRISB = 0b00000101;;
  4414  0676  3005               	movlw	5
  4415  0677  008D               	movwf	13	;volatile
  4416                           
  4417                           ;MCU_B1.c: 92: TRISC = 0b00001100;;
  4418  0678  300C               	movlw	12
  4419  0679  008E               	movwf	14	;volatile
  4420                           
  4421                           ;MCU_B1.c: 93: LATA = 0b00000000;;
  4422  067A  0022               	movlb	2	; select bank2
  4423  067B  018C               	clrf	12	;volatile
  4424                           
  4425                           ;MCU_B1.c: 94: LATB = 0b00000000;;
  4426  067C  018D               	clrf	13	;volatile
  4427                           
  4428                           ;MCU_B1.c: 95: LATC = 0b00000000;;
  4429  067D  018E               	clrf	14	;volatile
  4430                           
  4431                           ;MCU_B1.c: 96: ANSELA = 0b00000010;;
  4432  067E  3002               	movlw	2
  4433  067F  0023               	movlb	3	; select bank3
  4434  0680  008C               	movwf	12	;volatile
  4435                           
  4436                           ;MCU_B1.c: 97: ANSELB = 0b00000000;;
  4437  0681  018D               	clrf	13	;volatile
  4438                           
  4439                           ;MCU_B1.c: 98: ANSELC = 0b00000000;;
  4440  0682  018E               	clrf	14	;volatile
  4441                           
  4442                           ;MCU_B1.c: 99: PORTA = 0b01110111;;
  4443  0683  3077               	movlw	119
  4444  0684  0020               	movlb	0	; select bank0
  4445  0685  008C               	movwf	12	;volatile
  4446                           
  4447                           ;MCU_B1.c: 100: PORTB = 0b00000101;;
  4448  0686  3005               	movlw	5
  4449  0687  008D               	movwf	13	;volatile
  4450                           
  4451                           ;MCU_B1.c: 101: PORTC = 0b00001100;;
  4452  0688  300C               	movlw	12
  4453  0689  008E               	movwf	14	;volatile
  4454  068A  0008               	return
  4455  068B                     __end_of_IO_Set:	
  4456                           
  4457                           	psect	text18
  4458  0720                     __ptext18:	
  4459 ;; *************** function _IOC_Set *****************
  4460 ;; Defined at:
  4461 ;;		line 268 in file "../src/MCU_B1.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, status,2
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    3
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_Mcu_Initialization
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function _IOC_Set
  4491  0720                     _IOC_Set:	
  4492                           
  4493                           ;MCU_B1.c: 269: WPUB2 = 0;
  4494                           
  4495                           ;incstack = 0
  4496                           ; Regs used in _IOC_Set: [wreg+status,2]
  4497  0720  0024               	movlb	4	; select bank4
  4498  0721  110D               	bcf	13,2	;volatile
  4499                           
  4500                           ;MCU_B1.c: 271: IOCBP = 0b00000100;
  4501  0722  3004               	movlw	4
  4502  0723  0027               	movlb	7	; select bank7
  4503  0724  0094               	movwf	20	;volatile
  4504                           
  4505                           ;MCU_B1.c: 272: IOCBN = 0b00000100;
  4506  0725  3004               	movlw	4
  4507  0726  0095               	movwf	21	;volatile
  4508                           
  4509                           ;MCU_B1.c: 287: IOCBF = 0b00000000;
  4510  0727  0196               	clrf	22	;volatile
  4511                           
  4512                           ;MCU_B1.c: 289: IOCIE = 1;
  4513  0728  158B               	bsf	11,3	;volatile
  4514                           
  4515                           ;MCU_B1.c: 290: IOCIF = 0;
  4516  0729  100B               	bcf	11,0	;volatile
  4517                           
  4518                           ;MCU_B1.c: 291: PEIE = 1;
  4519  072A  170B               	bsf	11,6	;volatile
  4520                           
  4521                           ;MCU_B1.c: 292: GIE = 1;
  4522  072B  178B               	bsf	11,7	;volatile
  4523  072C  0008               	return
  4524  072D                     __end_of_IOC_Set:	
  4525                           
  4526                           	psect	text19
  4527  0781                     __ptext19:	
  4528 ;; *************** function _INT_Set *****************
  4529 ;; Defined at:
  4530 ;;		line 240 in file "../src/MCU_B1.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;		None               void
  4537 ;; Registers used:
  4538 ;;		None
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_Mcu_Initialization
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _INT_Set
  4560  0781                     _INT_Set:	
  4561                           
  4562                           ;MCU_B1.c: 241: WPUB0 = 0;
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _INT_Set: []
  4566  0781  0024               	movlb	4	; select bank4
  4567  0782  100D               	bcf	13,0	;volatile
  4568                           
  4569                           ;MCU_B1.c: 242: INTE = 1;
  4570  0783  160B               	bsf	11,4	;volatile
  4571                           
  4572                           ;MCU_B1.c: 243: PEIE = 1;
  4573  0784  170B               	bsf	11,6	;volatile
  4574                           
  4575                           ;MCU_B1.c: 244: GIE = 1;
  4576  0785  178B               	bsf	11,7	;volatile
  4577  0786  0008               	return
  4578  0787                     __end_of_INT_Set:	
  4579                           
  4580                           	psect	text20
  4581  078C                     __ptext20:	
  4582 ;; *************** function _Fosc_Set *****************
  4583 ;; Defined at:
  4584 ;;		line 58 in file "../src/MCU_B1.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    3
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_Mcu_Initialization
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           
  4613                           ;psect for function _Fosc_Set
  4614  078C                     _Fosc_Set:	
  4615                           
  4616                           ;MCU_B1.c: 59: OSCCON = 0x78;
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _Fosc_Set: [wreg]
  4620  078C  3078               	movlw	120
  4621  078D  0021               	movlb	1	; select bank1
  4622  078E  0099               	movwf	25	;volatile
  4623  078F  0008               	return
  4624  0790                     __end_of_Fosc_Set:	
  4625                           
  4626                           	psect	text21
  4627  0767                     __ptext21:	
  4628 ;; *************** function _ADC_Set *****************
  4629 ;; Defined at:
  4630 ;;		line 314 in file "../src/MCU_B1.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;		None               void
  4637 ;; Registers used:
  4638 ;;		wreg
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_Mcu_Initialization
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _ADC_Set
  4660  0767                     _ADC_Set:	
  4661                           
  4662                           ;MCU_B1.c: 315: ADCON1 = 0xf2;
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _ADC_Set: [wreg]
  4666  0767  30F2               	movlw	242
  4667  0768  0021               	movlb	1	; select bank1
  4668  0769  009E               	movwf	30	;volatile
  4669                           
  4670                           ;MCU_B1.c: 316: FVRCON = 0xc0;
  4671  076A  30C0               	movlw	192
  4672  076B  0022               	movlb	2	; select bank2
  4673  076C  0097               	movwf	23	;volatile
  4674  076D  0008               	return
  4675  076E                     __end_of_ADC_Set:	
  4676                           
  4677                           	psect	text22
  4678  06D5                     __ptext22:	
  4679 ;; *************** function _LED_Main *****************
  4680 ;; Defined at:
  4681 ;;		line 51 in file "../src/LED_B1.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;		None               void
  4688 ;; Registers used:
  4689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    5
  4702 ;; This function calls:
  4703 ;;		_setLED_Main
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _LED_Main
  4711  06D5                     _LED_Main:	
  4712                           
  4713                           ;LED_B1.c: 54: setLED_Main(1);
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4717  06D5  3001               	movlw	1
  4718  06D6  3184  24EB  3186   	fcall	_setLED_Main
  4719                           
  4720                           ;LED_B1.c: 57: setLED_Main(2);
  4721  06D9  3002               	movlw	2
  4722  06DA  3184  24EB  3186   	fcall	_setLED_Main
  4723                           
  4724                           ;LED_B1.c: 60: setLED_Main(3);
  4725  06DD  3003               	movlw	3
  4726  06DE  3184  24EB  3186   	fcall	_setLED_Main
  4727                           
  4728                           ;LED_B1.c: 63: setLED_Main(99);
  4729  06E1  3063               	movlw	99
  4730  06E2  3184  24EB         	fcall	_setLED_Main
  4731  06E4  0008               	return
  4732  06E5                     __end_of_LED_Main:	
  4733                           
  4734                           	psect	text23
  4735  04EB                     __ptext23:	
  4736 ;; *************** function _setLED_Main *****************
  4737 ;; Defined at:
  4738 ;;		line 215 in file "../src/LED_B1.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  led             1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  led             1    5[COMMON] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;Total ram usage:        3 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    4
  4759 ;; This function calls:
  4760 ;;		_LedPointSelect
  4761 ;; This function is called by:
  4762 ;;		_LED_Main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _setLED_Main
  4768  04EB                     _setLED_Main:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4772                           ;setLED_Main@led stored from wreg
  4773  04EB  00F5               	movwf	setLED_Main@led
  4774                           
  4775                           ;LED_B1.c: 217: LedPointSelect(led);
  4776  04EC  0875               	movf	setLED_Main@led,w
  4777  04ED  3185  2591  3184   	fcall	_LedPointSelect
  4778                           
  4779                           ;LED_B1.c: 218: if(LED->GO)
  4780  04F0  0020               	movlb	0	; select bank0
  4781  04F1  0821               	movf	_LED,w
  4782  04F2  0086               	movwf	6
  4783  04F3  0187               	clrf	7
  4784  04F4  1C81               	btfss	1,1
  4785  04F5  0008               	return
  4786                           
  4787                           ;LED_B1.c: 219: {
  4788                           ;LED_B1.c: 220: LED->Time++;
  4789  04F6  0A21               	incf	_LED,w
  4790  04F7  0086               	movwf	6
  4791  04F8  0187               	clrf	7
  4792  04F9  3001               	movlw	1
  4793  04FA  0781               	addwf	1,f
  4794  04FB  3141               	addfsr 1,1
  4795  04FC  1803               	skipnc
  4796  04FD  0A81               	incf	1,f
  4797                           
  4798                           ;LED_B1.c: 221: if(LED->Time >= 500/10)
  4799  04FE  0A21               	incf	_LED,w
  4800  04FF  0086               	movwf	6
  4801  0500  0187               	clrf	7
  4802  0501  3F40               	moviw [0]fsr1
  4803  0502  00F3               	movwf	??_setLED_Main
  4804  0503  3F41               	moviw [1]fsr1
  4805  0504  00F4               	movwf	??_setLED_Main+1
  4806  0505  3000               	movlw	0
  4807  0506  0274               	subwf	??_setLED_Main+1,w
  4808  0507  3032               	movlw	50
  4809  0508  1903               	skipnz
  4810  0509  0273               	subwf	??_setLED_Main,w
  4811  050A  1C03               	skipc
  4812  050B  0008               	return
  4813                           
  4814                           ;LED_B1.c: 222: {
  4815                           ;LED_B1.c: 223: LED->Time=0;
  4816  050C  0A21               	incf	_LED,w
  4817  050D  0086               	movwf	6
  4818  050E  0187               	clrf	7
  4819  050F  3000               	movlw	0
  4820  0510  3FC0               	movwi [0]fsr1
  4821  0511  3FC1               	movwi [1]fsr1
  4822                           
  4823                           ;LED_B1.c: 225: if(led == 1)
  4824  0512  0875               	movf	setLED_Main@led,w
  4825  0513  3A01               	xorlw	1
  4826  0514  1D03               	skipz
  4827  0515  2D19               	goto	l2543
  4828                           
  4829                           ;LED_B1.c: 226: {
  4830                           ;LED_B1.c: 227: RC7=~RC7;
  4831  0516  3080               	movlw	128
  4832  0517  068E               	xorwf	14,f
  4833                           
  4834                           ;LED_B1.c: 228: }
  4835  0518  0008               	return
  4836  0519                     l2543:	
  4837                           
  4838                           ;LED_B1.c: 231: else if(led == 2)
  4839  0519  0875               	movf	setLED_Main@led,w
  4840  051A  3A02               	xorlw	2
  4841  051B  1D03               	skipz
  4842  051C  2D20               	goto	l2547
  4843                           
  4844                           ;LED_B1.c: 232: {
  4845                           ;LED_B1.c: 233: RA3=~RA3;
  4846  051D  3008               	movlw	8
  4847  051E  068C               	xorwf	12,f
  4848                           
  4849                           ;LED_B1.c: 234: }
  4850  051F  0008               	return
  4851  0520                     l2547:	
  4852                           
  4853                           ;LED_B1.c: 237: else if(led == 3)
  4854  0520  0875               	movf	setLED_Main@led,w
  4855  0521  3A03               	xorlw	3
  4856  0522  1D03               	skipz
  4857  0523  2D27               	goto	l2551
  4858                           
  4859                           ;LED_B1.c: 238: {
  4860                           ;LED_B1.c: 239: RC6=~RC6;
  4861  0524  3040               	movlw	64
  4862  0525  068E               	xorwf	14,f
  4863                           
  4864                           ;LED_B1.c: 240: }
  4865  0526  0008               	return
  4866  0527                     l2551:	
  4867                           
  4868                           ;LED_B1.c: 243: else if(led == 99)
  4869  0527  0875               	movf	setLED_Main@led,w
  4870  0528  3A63               	xorlw	99
  4871  0529  1D03               	skipz
  4872  052A  0008               	return
  4873                           
  4874                           ;LED_B1.c: 244: {
  4875                           ;LED_B1.c: 245: RB5=~RB5;
  4876  052B  3020               	movlw	32
  4877  052C  068D               	xorwf	13,f
  4878  052D  0008               	return
  4879  052E                     __end_of_setLED_Main:	
  4880                           
  4881                           	psect	text24
  4882  06E5                     __ptext24:	
  4883 ;; *************** function _LED_Initialization *****************
  4884 ;; Defined at:
  4885 ;;		line 35 in file "../src/LED_B1.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;		None               void
  4892 ;; Registers used:
  4893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    6
  4906 ;; This function calls:
  4907 ;;		_setLED_Initialization
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _LED_Initialization
  4915  06E5                     _LED_Initialization:	
  4916                           
  4917                           ;LED_B1.c: 38: setLED_Initialization(1);
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4921  06E5  3001               	movlw	1
  4922  06E6  3186  26F5  3186   	fcall	_setLED_Initialization
  4923                           
  4924                           ;LED_B1.c: 41: setLED_Initialization(2);
  4925  06E9  3002               	movlw	2
  4926  06EA  3186  26F5  3186   	fcall	_setLED_Initialization
  4927                           
  4928                           ;LED_B1.c: 44: setLED_Initialization(3);
  4929  06ED  3003               	movlw	3
  4930  06EE  3186  26F5  3186   	fcall	_setLED_Initialization
  4931                           
  4932                           ;LED_B1.c: 47: setLED_Initialization(99);
  4933  06F1  3063               	movlw	99
  4934  06F2  3186  26F5         	fcall	_setLED_Initialization
  4935  06F4  0008               	return
  4936  06F5                     __end_of_LED_Initialization:	
  4937                           
  4938                           	psect	text25
  4939  06F5                     __ptext25:	
  4940 ;; *************** function _setLED_Initialization *****************
  4941 ;; Defined at:
  4942 ;;		line 67 in file "../src/LED_B1.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  led             1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  led             1    5[COMMON] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;Total ram usage:        1 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    5
  4963 ;; This function calls:
  4964 ;;		_LedPointSelect
  4965 ;;		_setLED
  4966 ;; This function is called by:
  4967 ;;		_LED_Initialization
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _setLED_Initialization
  4973  06F5                     _setLED_Initialization:	
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4977                           ;setLED_Initialization@led stored from wreg
  4978  06F5  00F5               	movwf	setLED_Initialization@led
  4979                           
  4980                           ;LED_B1.c: 69: LedPointSelect(led);
  4981  06F6  0875               	movf	setLED_Initialization@led,w
  4982  06F7  3185  2591  3186   	fcall	_LedPointSelect
  4983                           
  4984                           ;LED_B1.c: 70: LED->Enable=1;
  4985  06FA  0020               	movlb	0	; select bank0
  4986  06FB  0821               	movf	_LED,w
  4987  06FC  0086               	movwf	6
  4988  06FD  0187               	clrf	7
  4989  06FE  1401               	bsf	1,0
  4990                           
  4991                           ;LED_B1.c: 71: setLED(led,0);
  4992  06FF  01F3               	clrf	setLED@command
  4993  0700  0875               	movf	setLED_Initialization@led,w
  4994  0701  3182  22A2         	fcall	_setLED
  4995  0703  0008               	return
  4996  0704                     __end_of_setLED_Initialization:	
  4997                           
  4998                           	psect	text26
  4999  02A2                     __ptext26:	
  5000 ;; *************** function _setLED *****************
  5001 ;; Defined at:
  5002 ;;		line 74 in file "../src/LED_B1.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  led             1    wreg     unsigned char 
  5005 ;;  command         1    3[COMMON] unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  led             1    4[COMMON] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;Total ram usage:        2 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    4
  5024 ;; This function calls:
  5025 ;;		_LedPointSelect
  5026 ;; This function is called by:
  5027 ;;		_setLED_Initialization
  5028 ;;		_my_Main
  5029 ;;		_setSw_Initialization
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _setLED
  5035  02A2                     _setLED:	
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5039                           ;setLED@led stored from wreg
  5040  02A2  00F4               	movwf	setLED@led
  5041                           
  5042                           ;LED_B1.c: 76: LedPointSelect(led);
  5043  02A3  0874               	movf	setLED@led,w
  5044  02A4  3185  2591  3182   	fcall	_LedPointSelect
  5045                           
  5046                           ;LED_B1.c: 77: if(command == 0)
  5047  02A7  08F3               	movf	setLED@command,f
  5048  02A8  1D03               	skipz
  5049  02A9  2AC6               	goto	l2341
  5050                           
  5051                           ;LED_B1.c: 78: {
  5052                           ;LED_B1.c: 80: if(led == 1)
  5053  02AA  0874               	movf	setLED@led,w
  5054  02AB  3A01               	xorlw	1
  5055  02AC  1D03               	skipz
  5056  02AD  2AB1               	goto	l2329
  5057                           
  5058                           ;LED_B1.c: 81: {
  5059                           ;LED_B1.c: 85: RC7=1;
  5060  02AE  0020               	movlb	0	; select bank0
  5061  02AF  178E               	bsf	14,7	;volatile
  5062                           
  5063                           ;LED_B1.c: 87: }
  5064  02B0  0008               	return
  5065  02B1                     l2329:	
  5066                           
  5067                           ;LED_B1.c: 90: else if(led == 2)
  5068  02B1  0874               	movf	setLED@led,w
  5069  02B2  3A02               	xorlw	2
  5070  02B3  1D03               	skipz
  5071  02B4  2AB8               	goto	l2333
  5072                           
  5073                           ;LED_B1.c: 91: {
  5074                           ;LED_B1.c: 95: RA3=1;
  5075  02B5  0020               	movlb	0	; select bank0
  5076  02B6  158C               	bsf	12,3	;volatile
  5077                           
  5078                           ;LED_B1.c: 97: }
  5079  02B7  0008               	return
  5080  02B8                     l2333:	
  5081                           
  5082                           ;LED_B1.c: 100: else if(led == 3)
  5083  02B8  0874               	movf	setLED@led,w
  5084  02B9  3A03               	xorlw	3
  5085  02BA  1D03               	skipz
  5086  02BB  2ABF               	goto	l2337
  5087                           
  5088                           ;LED_B1.c: 101: {
  5089                           ;LED_B1.c: 105: RC6=1;
  5090  02BC  0020               	movlb	0	; select bank0
  5091  02BD  170E               	bsf	14,6	;volatile
  5092                           
  5093                           ;LED_B1.c: 107: }
  5094  02BE  0008               	return
  5095  02BF                     l2337:	
  5096                           
  5097                           ;LED_B1.c: 110: else if(led == 99)
  5098  02BF  0874               	movf	setLED@led,w
  5099  02C0  3A63               	xorlw	99
  5100  02C1  1D03               	skipz
  5101  02C2  0008               	return
  5102                           
  5103                           ;LED_B1.c: 111: {
  5104                           ;LED_B1.c: 115: RB5=1;
  5105  02C3  0020               	movlb	0	; select bank0
  5106  02C4  168D               	bsf	13,5	;volatile
  5107                           
  5108                           ;LED_B1.c: 117: }
  5109                           ;LED_B1.c: 119: }
  5110  02C5  0008               	return
  5111  02C6                     l2341:	
  5112                           
  5113                           ;LED_B1.c: 120: else if(command == 1)
  5114  02C6  0873               	movf	setLED@command,w
  5115  02C7  3A01               	xorlw	1
  5116  02C8  1D03               	skipz
  5117  02C9  2AE6               	goto	l2359
  5118                           
  5119                           ;LED_B1.c: 121: {
  5120                           ;LED_B1.c: 123: if(led == 1)
  5121  02CA  0874               	movf	setLED@led,w
  5122  02CB  3A01               	xorlw	1
  5123  02CC  1D03               	skipz
  5124  02CD  2AD1               	goto	l2347
  5125                           
  5126                           ;LED_B1.c: 124: {
  5127                           ;LED_B1.c: 128: RC7=0;
  5128  02CE  0020               	movlb	0	; select bank0
  5129  02CF  138E               	bcf	14,7	;volatile
  5130                           
  5131                           ;LED_B1.c: 130: }
  5132  02D0  0008               	return
  5133  02D1                     l2347:	
  5134                           
  5135                           ;LED_B1.c: 133: else if(led == 2)
  5136  02D1  0874               	movf	setLED@led,w
  5137  02D2  3A02               	xorlw	2
  5138  02D3  1D03               	skipz
  5139  02D4  2AD8               	goto	l2351
  5140                           
  5141                           ;LED_B1.c: 134: {
  5142                           ;LED_B1.c: 138: RA3=0;
  5143  02D5  0020               	movlb	0	; select bank0
  5144  02D6  118C               	bcf	12,3	;volatile
  5145                           
  5146                           ;LED_B1.c: 140: }
  5147  02D7  0008               	return
  5148  02D8                     l2351:	
  5149                           
  5150                           ;LED_B1.c: 143: else if(led == 3)
  5151  02D8  0874               	movf	setLED@led,w
  5152  02D9  3A03               	xorlw	3
  5153  02DA  1D03               	skipz
  5154  02DB  2ADF               	goto	l2355
  5155                           
  5156                           ;LED_B1.c: 144: {
  5157                           ;LED_B1.c: 148: RC6=0;
  5158  02DC  0020               	movlb	0	; select bank0
  5159  02DD  130E               	bcf	14,6	;volatile
  5160                           
  5161                           ;LED_B1.c: 150: }
  5162  02DE  0008               	return
  5163  02DF                     l2355:	
  5164                           
  5165                           ;LED_B1.c: 153: else if(led == 99)
  5166  02DF  0874               	movf	setLED@led,w
  5167  02E0  3A63               	xorlw	99
  5168  02E1  1D03               	skipz
  5169  02E2  0008               	return
  5170                           
  5171                           ;LED_B1.c: 154: {
  5172                           ;LED_B1.c: 158: RB5=0;
  5173  02E3  0020               	movlb	0	; select bank0
  5174  02E4  128D               	bcf	13,5	;volatile
  5175                           
  5176                           ;LED_B1.c: 160: }
  5177                           ;LED_B1.c: 162: }
  5178  02E5  0008               	return
  5179  02E6                     l2359:	
  5180                           
  5181                           ;LED_B1.c: 163: else if(command == 10)
  5182  02E6  0873               	movf	setLED@command,w
  5183  02E7  3A0A               	xorlw	10
  5184  02E8  1D03               	skipz
  5185  02E9  2B0D               	goto	l2379
  5186                           
  5187                           ;LED_B1.c: 164: {
  5188                           ;LED_B1.c: 165: LED->GO=0;
  5189  02EA  0020               	movlb	0	; select bank0
  5190  02EB  0821               	movf	_LED,w
  5191  02EC  0086               	movwf	6
  5192  02ED  0187               	clrf	7
  5193  02EE  1081               	bcf	1,1
  5194                           
  5195                           ;LED_B1.c: 166: LED->Time=0;
  5196  02EF  0A21               	incf	_LED,w
  5197  02F0  0086               	movwf	6
  5198  02F1  0187               	clrf	7
  5199  02F2  3000               	movlw	0
  5200  02F3  3FC0               	movwi [0]fsr1
  5201  02F4  3FC1               	movwi [1]fsr1
  5202                           
  5203                           ;LED_B1.c: 168: if(led == 1)
  5204  02F5  0874               	movf	setLED@led,w
  5205  02F6  3A01               	xorlw	1
  5206  02F7  1D03               	skipz
  5207  02F8  2AFB               	goto	l2367
  5208                           
  5209                           ;LED_B1.c: 169: {
  5210                           ;LED_B1.c: 173: RC7=1;
  5211  02F9  178E               	bsf	14,7	;volatile
  5212                           
  5213                           ;LED_B1.c: 175: }
  5214  02FA  0008               	return
  5215  02FB                     l2367:	
  5216                           
  5217                           ;LED_B1.c: 178: else if(led == 2)
  5218  02FB  0874               	movf	setLED@led,w
  5219  02FC  3A02               	xorlw	2
  5220  02FD  1D03               	skipz
  5221  02FE  2B01               	goto	l2371
  5222                           
  5223                           ;LED_B1.c: 179: {
  5224                           ;LED_B1.c: 183: RA3=1;
  5225  02FF  158C               	bsf	12,3	;volatile
  5226                           
  5227                           ;LED_B1.c: 185: }
  5228  0300  0008               	return
  5229  0301                     l2371:	
  5230                           
  5231                           ;LED_B1.c: 188: else if(led == 3)
  5232  0301  0874               	movf	setLED@led,w
  5233  0302  3A03               	xorlw	3
  5234  0303  1D03               	skipz
  5235  0304  2B07               	goto	l2375
  5236                           
  5237                           ;LED_B1.c: 189: {
  5238                           ;LED_B1.c: 193: RC6=1;
  5239  0305  170E               	bsf	14,6	;volatile
  5240                           
  5241                           ;LED_B1.c: 195: }
  5242  0306  0008               	return
  5243  0307                     l2375:	
  5244                           
  5245                           ;LED_B1.c: 198: else if(led == 99)
  5246  0307  0874               	movf	setLED@led,w
  5247  0308  3A63               	xorlw	99
  5248  0309  1D03               	skipz
  5249  030A  0008               	return
  5250                           
  5251                           ;LED_B1.c: 199: {
  5252                           ;LED_B1.c: 203: RB5=1;
  5253  030B  168D               	bsf	13,5	;volatile
  5254                           
  5255                           ;LED_B1.c: 205: }
  5256                           ;LED_B1.c: 207: }
  5257  030C  0008               	return
  5258  030D                     l2379:	
  5259                           
  5260                           ;LED_B1.c: 208: else if(command == 11)
  5261  030D  0873               	movf	setLED@command,w
  5262  030E  3A0B               	xorlw	11
  5263  030F  1D03               	skipz
  5264  0310  0008               	return
  5265                           
  5266                           ;LED_B1.c: 209: {
  5267                           ;LED_B1.c: 210: LED->GO=1;
  5268  0311  0020               	movlb	0	; select bank0
  5269  0312  0821               	movf	_LED,w
  5270  0313  0086               	movwf	6
  5271  0314  0187               	clrf	7
  5272  0315  1481               	bsf	1,1
  5273  0316  0008               	return
  5274  0317                     __end_of_setLED:	
  5275                           
  5276                           	psect	text27
  5277  0591                     __ptext27:	
  5278 ;; *************** function _LedPointSelect *****************
  5279 ;; Defined at:
  5280 ;;		line 7 in file "../src/LED_B1.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  led             1    wreg     unsigned char 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  led             1    2[COMMON] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;		None               void
  5287 ;; Registers used:
  5288 ;;		wreg
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;Total ram usage:        2 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    3
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_setLED_Initialization
  5305 ;;		_setLED
  5306 ;;		_setLED_Main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _LedPointSelect
  5312  0591                     _LedPointSelect:	
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in _LedPointSelect: [wreg]
  5316                           ;LedPointSelect@led stored from wreg
  5317  0591  00F2               	movwf	LedPointSelect@led
  5318                           
  5319                           ;LED_B1.c: 10: if(led == 1)
  5320  0592  0872               	movf	LedPointSelect@led,w
  5321  0593  3A01               	xorlw	1
  5322  0594  1D03               	skipz
  5323  0595  2D9C               	goto	l2301
  5324                           
  5325                           ;LED_B1.c: 11: {
  5326                           ;LED_B1.c: 12: LED=&VarLED1;
  5327  0596  3055               	movlw	_VarLED1& (0+255)
  5328  0597  00F1               	movwf	??_LedPointSelect
  5329  0598  0871               	movf	??_LedPointSelect,w
  5330  0599  0020               	movlb	0	; select bank0
  5331  059A  00A1               	movwf	_LED
  5332                           
  5333                           ;LED_B1.c: 13: }
  5334  059B  0008               	return
  5335  059C                     l2301:	
  5336                           
  5337                           ;LED_B1.c: 16: else if(led == 2)
  5338  059C  0872               	movf	LedPointSelect@led,w
  5339  059D  3A02               	xorlw	2
  5340  059E  1D03               	skipz
  5341  059F  2DA6               	goto	l2305
  5342                           
  5343                           ;LED_B1.c: 17: {
  5344                           ;LED_B1.c: 18: LED=&VarLED2;
  5345  05A0  3059               	movlw	_VarLED2& (0+255)
  5346  05A1  00F1               	movwf	??_LedPointSelect
  5347  05A2  0871               	movf	??_LedPointSelect,w
  5348  05A3  0020               	movlb	0	; select bank0
  5349  05A4  00A1               	movwf	_LED
  5350                           
  5351                           ;LED_B1.c: 19: }
  5352  05A5  0008               	return
  5353  05A6                     l2305:	
  5354                           
  5355                           ;LED_B1.c: 22: else if(led == 3)
  5356  05A6  0872               	movf	LedPointSelect@led,w
  5357  05A7  3A03               	xorlw	3
  5358  05A8  1D03               	skipz
  5359  05A9  2DB0               	goto	l2309
  5360                           
  5361                           ;LED_B1.c: 23: {
  5362                           ;LED_B1.c: 24: LED=&VarLED3;
  5363  05AA  305D               	movlw	_VarLED3& (0+255)
  5364  05AB  00F1               	movwf	??_LedPointSelect
  5365  05AC  0871               	movf	??_LedPointSelect,w
  5366  05AD  0020               	movlb	0	; select bank0
  5367  05AE  00A1               	movwf	_LED
  5368                           
  5369                           ;LED_B1.c: 25: }
  5370  05AF  0008               	return
  5371  05B0                     l2309:	
  5372                           
  5373                           ;LED_B1.c: 28: else if(led == 99)
  5374  05B0  0872               	movf	LedPointSelect@led,w
  5375  05B1  3A63               	xorlw	99
  5376  05B2  1D03               	skipz
  5377  05B3  0008               	return
  5378                           
  5379                           ;LED_B1.c: 29: {
  5380                           ;LED_B1.c: 30: LED=&VarErrLED;
  5381  05B4  3051               	movlw	_VarErrLED& (0+255)
  5382  05B5  00F1               	movwf	??_LedPointSelect
  5383  05B6  0871               	movf	??_LedPointSelect,w
  5384  05B7  0020               	movlb	0	; select bank0
  5385  05B8  00A1               	movwf	_LED
  5386  05B9  0008               	return
  5387  05BA                     __end_of_LedPointSelect:	
  5388                           
  5389                           	psect	text28
  5390  04A6                     __ptext28:	
  5391 ;; *************** function _Flash_Memory_Main *****************
  5392 ;; Defined at:
  5393 ;;		line 793 in file "../src/MCU_B1.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;		None               void
  5400 ;; Registers used:
  5401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;Total ram usage:        0 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    6
  5414 ;; This function calls:
  5415 ;;		_Flash_Memory_Modify
  5416 ;; This function is called by:
  5417 ;;		_main
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           
  5422                           ;psect for function _Flash_Memory_Main
  5423  04A6                     _Flash_Memory_Main:	
  5424                           
  5425                           ;MCU_B1.c: 794: if (Memory->GO) {
  5426                           
  5427                           ;incstack = 0
  5428                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5429  04A6  0020               	movlb	0	; select bank0
  5430  04A7  086D               	movf	_Memory,w
  5431  04A8  3E24               	addlw	36
  5432  04A9  0086               	movwf	6
  5433  04AA  3001               	movlw	1	; select bank2/3
  5434  04AB  0087               	movwf	7
  5435  04AC  1C81               	btfss	1,1
  5436  04AD  0008               	return
  5437                           
  5438                           ;MCU_B1.c: 795: if (Memory->Modify) {
  5439  04AE  086D               	movf	_Memory,w
  5440  04AF  3E24               	addlw	36
  5441  04B0  0086               	movwf	6
  5442  04B1  3001               	movlw	1	; select bank2/3
  5443  04B2  0087               	movwf	7
  5444  04B3  1C01               	btfss	1,0
  5445  04B4  2CE3               	goto	l2855
  5446                           
  5447                           ;MCU_B1.c: 796: Memory->Time++;
  5448  04B5  086D               	movf	_Memory,w
  5449  04B6  3E22               	addlw	34
  5450  04B7  0086               	movwf	6
  5451  04B8  3001               	movlw	1	; select bank2/3
  5452  04B9  0087               	movwf	7
  5453  04BA  3001               	movlw	1
  5454  04BB  0781               	addwf	1,f
  5455  04BC  3141               	addfsr 1,1
  5456  04BD  1803               	skipnc
  5457  04BE  0A81               	incf	1,f
  5458                           
  5459                           ;MCU_B1.c: 797: if (Memory->Time == 25)
  5460  04BF  086D               	movf	_Memory,w
  5461  04C0  3E22               	addlw	34
  5462  04C1  0086               	movwf	6
  5463  04C2  3001               	movlw	1	; select bank2/3
  5464  04C3  0087               	movwf	7
  5465  04C4  3F40               	moviw [0]fsr1
  5466  04C5  3A19               	xorlw	25
  5467  04C6  1D03               	skipz
  5468  04C7  2CCA               	goto	u1975
  5469  04C8  3F41               	moviw [1]fsr1
  5470  04C9  3A00               	xorlw	0
  5471  04CA                     u1975:	
  5472  04CA  1D03               	skipz
  5473  04CB  0008               	return
  5474                           
  5475                           ;MCU_B1.c: 798: {
  5476                           ;MCU_B1.c: 799: Memory->Time = 0;
  5477  04CC  086D               	movf	_Memory,w
  5478  04CD  3E22               	addlw	34
  5479  04CE  0086               	movwf	6
  5480  04CF  3001               	movlw	1	; select bank2/3
  5481  04D0  0087               	movwf	7
  5482  04D1  3000               	movlw	0
  5483  04D2  3FC0               	movwi [0]fsr1
  5484  04D3  3FC1               	movwi [1]fsr1
  5485                           
  5486                           ;MCU_B1.c: 800: Memory->Modify = 0;
  5487  04D4  086D               	movf	_Memory,w
  5488  04D5  3E24               	addlw	36
  5489  04D6  0086               	movwf	6
  5490  04D7  3001               	movlw	1	; select bank2/3
  5491  04D8  0087               	movwf	7
  5492  04D9  1001               	bcf	1,0
  5493                           
  5494                           ;MCU_B1.c: 801: Memory->GO = 0;
  5495  04DA  086D               	movf	_Memory,w
  5496  04DB  3E24               	addlw	36
  5497  04DC  0086               	movwf	6
  5498  04DD  3001               	movlw	1	; select bank2/3
  5499  04DE  0087               	movwf	7
  5500  04DF  1081               	bcf	1,1
  5501                           
  5502                           ;MCU_B1.c: 802: Flash_Memory_Modify();
  5503  04E0  3183  23F4         	fcall	_Flash_Memory_Modify
  5504                           
  5505                           ;MCU_B1.c: 804: }
  5506                           ;MCU_B1.c: 805: } else {
  5507  04E2  0008               	return
  5508  04E3                     l2855:	
  5509                           
  5510                           ;MCU_B1.c: 806: Memory->GO = 0;
  5511  04E3  0020               	movlb	0	; select bank0
  5512  04E4  086D               	movf	_Memory,w
  5513  04E5  3E24               	addlw	36
  5514  04E6  0086               	movwf	6
  5515  04E7  3001               	movlw	1	; select bank2/3
  5516  04E8  0087               	movwf	7
  5517  04E9  1081               	bcf	1,1
  5518  04EA  0008               	return
  5519  04EB                     __end_of_Flash_Memory_Main:	
  5520                           
  5521                           	psect	text29
  5522  03F4                     __ptext29:	
  5523 ;; *************** function _Flash_Memory_Modify *****************
  5524 ;; Defined at:
  5525 ;;		line 863 in file "../src/MCU_B1.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  i               1    7[COMMON] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;		None               void
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5542 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;Total ram usage:        3 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    5
  5546 ;; This function calls:
  5547 ;;		_Flash_Memory_Erasing
  5548 ;;		_Flash_Memory_Read
  5549 ;;		_Flash_Memory_Write
  5550 ;; This function is called by:
  5551 ;;		_Flash_Memory_Main
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           
  5556                           ;psect for function _Flash_Memory_Modify
  5557  03F4                     _Flash_Memory_Modify:	
  5558                           
  5559                           ;MCU_B1.c: 864: char i;
  5560                           ;MCU_B1.c: 865: for (i = 0; i < 32; i++) {
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5564  03F4  01F7               	clrf	Flash_Memory_Modify@i
  5565  03F5  3020               	movlw	32
  5566  03F6  0277               	subwf	Flash_Memory_Modify@i,w
  5567  03F7  1803               	btfsc	3,0
  5568  03F8  2C10               	goto	l2619
  5569  03F9                     l2613:	
  5570                           
  5571                           ;MCU_B1.c: 866: Memory->Data[i] = Flash_Memory_Read(i);
  5572  03F9  0877               	movf	Flash_Memory_Modify@i,w
  5573  03FA  3186  269F  3183   	fcall	_Flash_Memory_Read
  5574  03FD  00F5               	movwf	??_Flash_Memory_Modify
  5575  03FE  0877               	movf	Flash_Memory_Modify@i,w
  5576  03FF  0020               	movlb	0	; select bank0
  5577  0400  076D               	addwf	_Memory,w
  5578  0401  00F6               	movwf	??_Flash_Memory_Modify+1
  5579  0402  0876               	movf	??_Flash_Memory_Modify+1,w
  5580  0403  0086               	movwf	6
  5581  0404  3001               	movlw	1	; select bank2/3
  5582  0405  0087               	movwf	7
  5583  0406  0875               	movf	??_Flash_Memory_Modify,w
  5584  0407  0081               	movwf	1
  5585  0408  3001               	movlw	1
  5586  0409  00F5               	movwf	??_Flash_Memory_Modify
  5587  040A  0875               	movf	??_Flash_Memory_Modify,w
  5588  040B  07F7               	addwf	Flash_Memory_Modify@i,f
  5589  040C  3020               	movlw	32
  5590  040D  0277               	subwf	Flash_Memory_Modify@i,w
  5591  040E  1C03               	skipc
  5592  040F  2BF9               	goto	l2613
  5593  0410                     l2619:	
  5594                           
  5595                           ;MCU_B1.c: 867: }
  5596                           ;MCU_B1.c: 868: Memory->Data[0]=product->Data[12];
  5597  0410  0020               	movlb	0	; select bank0
  5598  0411  086C               	movf	_product,w
  5599  0412  3E0C               	addlw	12
  5600  0413  0086               	movwf	6
  5601  0414  0187               	clrf	7
  5602  0415  0801               	movf	1,w
  5603  0416  00F5               	movwf	??_Flash_Memory_Modify
  5604  0417  086D               	movf	_Memory,w
  5605  0418  0086               	movwf	6
  5606  0419  3001               	movlw	1	; select bank2/3
  5607  041A  0087               	movwf	7
  5608  041B  0875               	movf	??_Flash_Memory_Modify,w
  5609  041C  0081               	movwf	1
  5610                           
  5611                           ;MCU_B1.c: 869: Memory->Data[1]=product->Data[13];
  5612  041D  086C               	movf	_product,w
  5613  041E  3E0D               	addlw	13
  5614  041F  0086               	movwf	6
  5615  0420  0187               	clrf	7
  5616  0421  0801               	movf	1,w
  5617  0422  00F5               	movwf	??_Flash_Memory_Modify
  5618  0423  0A6D               	incf	_Memory,w
  5619  0424  0086               	movwf	6
  5620  0425  3001               	movlw	1	; select bank2/3
  5621  0426  0087               	movwf	7
  5622  0427  0875               	movf	??_Flash_Memory_Modify,w
  5623  0428  0081               	movwf	1
  5624                           
  5625                           ;MCU_B1.c: 870: Memory->Data[2]=product->Data[14];
  5626  0429  086C               	movf	_product,w
  5627  042A  3E0E               	addlw	14
  5628  042B  0086               	movwf	6
  5629  042C  0187               	clrf	7
  5630  042D  0801               	movf	1,w
  5631  042E  00F5               	movwf	??_Flash_Memory_Modify
  5632  042F  086D               	movf	_Memory,w
  5633  0430  3E02               	addlw	2
  5634  0431  0086               	movwf	6
  5635  0432  3001               	movlw	1	; select bank2/3
  5636  0433  0087               	movwf	7
  5637  0434  0875               	movf	??_Flash_Memory_Modify,w
  5638  0435  0081               	movwf	1
  5639                           
  5640                           ;MCU_B1.c: 876: if (Memory->LoopSave) {
  5641  0436  086D               	movf	_Memory,w
  5642  0437  3E24               	addlw	36
  5643  0438  0086               	movwf	6
  5644  0439  3001               	movlw	1	; select bank2/3
  5645  043A  0087               	movwf	7
  5646  043B  1D01               	btfss	1,2
  5647  043C  2C4B               	goto	l2623
  5648                           
  5649                           ;MCU_B1.c: 877: Memory->LoopSave = 0;
  5650  043D  086D               	movf	_Memory,w
  5651  043E  3E24               	addlw	36
  5652  043F  0086               	movwf	6
  5653  0440  3001               	movlw	1	; select bank2/3
  5654  0441  0087               	movwf	7
  5655  0442  1101               	bcf	1,2
  5656                           
  5657                           ;MCU_B1.c: 878: myMain->FirstOpen = 0;
  5658  0443  086B               	movf	_myMain,w
  5659  0444  0086               	movwf	6
  5660  0445  0187               	clrf	7
  5661  0446  1281               	bcf	1,5
  5662                           
  5663                           ;MCU_B1.c: 879: myMain->First = 0;
  5664  0447  086B               	movf	_myMain,w
  5665  0448  0086               	movwf	6
  5666  0449  0187               	clrf	7
  5667  044A  1381               	bcf	1,7
  5668  044B                     l2623:	
  5669                           
  5670                           ;MCU_B1.c: 881: }
  5671                           ;MCU_B1.c: 882: GIE = 0;
  5672  044B  138B               	bcf	11,7	;volatile
  5673                           
  5674                           ;MCU_B1.c: 883: Flash_Memory_Erasing();
  5675  044C  3187  2739  3183   	fcall	_Flash_Memory_Erasing
  5676                           
  5677                           ;MCU_B1.c: 884: Flash_Memory_Write();
  5678  044F  3185  2564         	fcall	_Flash_Memory_Write
  5679                           
  5680                           ;MCU_B1.c: 885: GIE = 1;
  5681  0451  178B               	bsf	11,7	;volatile
  5682  0452  0008               	return
  5683  0453                     __end_of_Flash_Memory_Modify:	
  5684                           
  5685                           	psect	text30
  5686  0739                     __ptext30:	
  5687 ;; *************** function _Flash_Memory_Erasing *****************
  5688 ;; Defined at:
  5689 ;;		line 852 in file "../src/MCU_B1.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;		None               void
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;Total ram usage:        0 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    4
  5710 ;; This function calls:
  5711 ;;		_Flash_Memory_Unlock
  5712 ;; This function is called by:
  5713 ;;		_Flash_Memory_Modify
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _Flash_Memory_Erasing
  5719  0739                     _Flash_Memory_Erasing:	
  5720                           
  5721                           ;MCU_B1.c: 853: CFGS = 0;
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  5725  0739  0023               	movlb	3	; select bank3
  5726  073A  1315               	bcf	21,6	;volatile
  5727                           
  5728                           ;MCU_B1.c: 854: PMADRH = 0x30;
  5729  073B  3030               	movlw	48
  5730  073C  0092               	movwf	18	;volatile
  5731                           
  5732                           ;MCU_B1.c: 855: PMADRL = 0x00;
  5733  073D  0191               	clrf	17	;volatile
  5734                           
  5735                           ;MCU_B1.c: 856: FREE = 1;
  5736  073E  1615               	bsf	21,4	;volatile
  5737                           
  5738                           ;MCU_B1.c: 857: WREN = 1;
  5739  073F  1515               	bsf	21,2	;volatile
  5740                           
  5741                           ;MCU_B1.c: 858: Flash_Memory_Unlock();
  5742  0740  3187  274F         	fcall	_Flash_Memory_Unlock
  5743                           
  5744                           ;MCU_B1.c: 859: WREN = 0;
  5745  0742  0023               	movlb	3	; select bank3
  5746  0743  1115               	bcf	21,2	;volatile
  5747  0744  0008               	return
  5748  0745                     __end_of_Flash_Memory_Erasing:	
  5749                           
  5750                           	psect	text31
  5751  014C                     __ptext31:	
  5752 ;; *************** function _Flash_Memory_Initialization *****************
  5753 ;; Defined at:
  5754 ;;		line 752 in file "../src/MCU_B1.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;		None
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  i               1    6[COMMON] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;		None               void
  5761 ;; Registers used:
  5762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;Total ram usage:        2 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    5
  5775 ;; This function calls:
  5776 ;;		_Flash_Memory_Read
  5777 ;;		_Flash_Memory_Write
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _Flash_Memory_Initialization
  5785  014C                     _Flash_Memory_Initialization:	
  5786                           
  5787                           ;MCU_B1.c: 753: char i;
  5788                           ;MCU_B1.c: 754: if (Flash_Memory_Read(31) == 0xaa) {
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5792  014C  301F               	movlw	31
  5793  014D  3186  269F  3181   	fcall	_Flash_Memory_Read
  5794  0150  3AAA               	xorlw	170
  5795  0151  1D03               	skipz
  5796  0152  29B1               	goto	l2811
  5797                           
  5798                           ;MCU_B1.c: 755: product->Data[12] = Flash_Memory_Read(0);
  5799  0153  3000               	movlw	0
  5800  0154  3186  269F  3181   	fcall	_Flash_Memory_Read
  5801  0157  00F5               	movwf	??_Flash_Memory_Initialization
  5802  0158  0020               	movlb	0	; select bank0
  5803  0159  086C               	movf	_product,w
  5804  015A  3E0C               	addlw	12
  5805  015B  0086               	movwf	6
  5806  015C  0187               	clrf	7
  5807  015D  0875               	movf	??_Flash_Memory_Initialization,w
  5808  015E  0081               	movwf	1
  5809                           
  5810                           ;MCU_B1.c: 756: product->Data[13] = Flash_Memory_Read(1);
  5811  015F  3001               	movlw	1
  5812  0160  3186  269F  3181   	fcall	_Flash_Memory_Read
  5813  0163  00F5               	movwf	??_Flash_Memory_Initialization
  5814  0164  0020               	movlb	0	; select bank0
  5815  0165  086C               	movf	_product,w
  5816  0166  3E0D               	addlw	13
  5817  0167  0086               	movwf	6
  5818  0168  0187               	clrf	7
  5819  0169  0875               	movf	??_Flash_Memory_Initialization,w
  5820  016A  0081               	movwf	1
  5821                           
  5822                           ;MCU_B1.c: 757: product->Data[14] = Flash_Memory_Read(2);
  5823  016B  3002               	movlw	2
  5824  016C  3186  269F  3181   	fcall	_Flash_Memory_Read
  5825  016F  00F5               	movwf	??_Flash_Memory_Initialization
  5826  0170  0020               	movlb	0	; select bank0
  5827  0171  086C               	movf	_product,w
  5828  0172  3E0E               	addlw	14
  5829  0173  0086               	movwf	6
  5830  0174  0187               	clrf	7
  5831  0175  0875               	movf	??_Flash_Memory_Initialization,w
  5832  0176  0081               	movwf	1
  5833                           
  5834                           ;MCU_B1.c: 763: i = 0;
  5835  0177  01F6               	clrf	Flash_Memory_Initialization@i
  5836                           
  5837                           ;MCU_B1.c: 764: product->Data[21] = i;
  5838  0178  0876               	movf	Flash_Memory_Initialization@i,w
  5839  0179  00F5               	movwf	??_Flash_Memory_Initialization
  5840  017A  086C               	movf	_product,w
  5841  017B  3E15               	addlw	21
  5842  017C  0086               	movwf	6
  5843  017D  0187               	clrf	7
  5844  017E  0875               	movf	??_Flash_Memory_Initialization,w
  5845  017F  0081               	movwf	1
  5846                           
  5847                           ;MCU_B1.c: 765: product->Data[22] = i;
  5848  0180  0876               	movf	Flash_Memory_Initialization@i,w
  5849  0181  00F5               	movwf	??_Flash_Memory_Initialization
  5850  0182  086C               	movf	_product,w
  5851  0183  3E16               	addlw	22
  5852  0184  0086               	movwf	6
  5853  0185  0187               	clrf	7
  5854  0186  0875               	movf	??_Flash_Memory_Initialization,w
  5855  0187  0081               	movwf	1
  5856                           
  5857                           ;MCU_B1.c: 766: product->Data[23] = i;
  5858  0188  0876               	movf	Flash_Memory_Initialization@i,w
  5859  0189  00F5               	movwf	??_Flash_Memory_Initialization
  5860  018A  086C               	movf	_product,w
  5861  018B  3E17               	addlw	23
  5862  018C  0086               	movwf	6
  5863  018D  0187               	clrf	7
  5864  018E  0875               	movf	??_Flash_Memory_Initialization,w
  5865  018F  0081               	movwf	1
  5866                           
  5867                           ;MCU_B1.c: 768: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  5868  0190  086C               	movf	_product,w
  5869  0191  3E0C               	addlw	12
  5870  0192  0086               	movwf	6
  5871  0193  0187               	clrf	7
  5872  0194  0801               	movf	1,w
  5873  0195  3AFF               	xorlw	255
  5874  0196  1D03               	skipz
  5875  0197  0008               	return
  5876  0198  086C               	movf	_product,w
  5877  0199  3E0D               	addlw	13
  5878  019A  0086               	movwf	6
  5879  019B  0187               	clrf	7
  5880  019C  0801               	movf	1,w
  5881  019D  3AFF               	xorlw	255
  5882  019E  1D03               	skipz
  5883  019F  0008               	return
  5884  01A0  086C               	movf	_product,w
  5885  01A1  3E0E               	addlw	14
  5886  01A2  0086               	movwf	6
  5887  01A3  0187               	clrf	7
  5888  01A4  0801               	movf	1,w
  5889  01A5  3AFF               	xorlw	255
  5890  01A6  1D03               	skipz
  5891  01A7  0008               	return
  5892                           
  5893                           ;MCU_B1.c: 769: myMain->FirstOpen = 1;
  5894  01A8  086B               	movf	_myMain,w
  5895  01A9  0086               	movwf	6
  5896  01AA  0187               	clrf	7
  5897  01AB  1681               	bsf	1,5
  5898                           
  5899                           ;MCU_B1.c: 770: myMain->First = 1;
  5900  01AC  086B               	movf	_myMain,w
  5901  01AD  0086               	movwf	6
  5902  01AE  0187               	clrf	7
  5903  01AF  1781               	bsf	1,7
  5904                           
  5905                           ;MCU_B1.c: 771: }
  5906                           ;MCU_B1.c: 772: } else {
  5907  01B0  0008               	return
  5908  01B1                     l2811:	
  5909                           
  5910                           ;MCU_B1.c: 773: i = 0;
  5911  01B1  01F6               	clrf	Flash_Memory_Initialization@i
  5912                           
  5913                           ;MCU_B1.c: 774: Memory->Data[0]=0xff;
  5914  01B2  30FF               	movlw	255
  5915  01B3  00F5               	movwf	??_Flash_Memory_Initialization
  5916  01B4  0020               	movlb	0	; select bank0
  5917  01B5  086D               	movf	_Memory,w
  5918  01B6  0086               	movwf	6
  5919  01B7  3001               	movlw	1	; select bank2/3
  5920  01B8  0087               	movwf	7
  5921  01B9  0875               	movf	??_Flash_Memory_Initialization,w
  5922  01BA  0081               	movwf	1
  5923                           
  5924                           ;MCU_B1.c: 775: Memory->Data[1]=0xff;
  5925  01BB  30FF               	movlw	255
  5926  01BC  00F5               	movwf	??_Flash_Memory_Initialization
  5927  01BD  0A6D               	incf	_Memory,w
  5928  01BE  0086               	movwf	6
  5929  01BF  3001               	movlw	1	; select bank2/3
  5930  01C0  0087               	movwf	7
  5931  01C1  0875               	movf	??_Flash_Memory_Initialization,w
  5932  01C2  0081               	movwf	1
  5933                           
  5934                           ;MCU_B1.c: 776: Memory->Data[2]=0xff;
  5935  01C3  30FF               	movlw	255
  5936  01C4  00F5               	movwf	??_Flash_Memory_Initialization
  5937  01C5  086D               	movf	_Memory,w
  5938  01C6  3E02               	addlw	2
  5939  01C7  0086               	movwf	6
  5940  01C8  3001               	movlw	1	; select bank2/3
  5941  01C9  0087               	movwf	7
  5942  01CA  0875               	movf	??_Flash_Memory_Initialization,w
  5943  01CB  0081               	movwf	1
  5944                           
  5945                           ;MCU_B1.c: 777: Memory->Data[3]=0xff;
  5946  01CC  30FF               	movlw	255
  5947  01CD  00F5               	movwf	??_Flash_Memory_Initialization
  5948  01CE  086D               	movf	_Memory,w
  5949  01CF  3E03               	addlw	3
  5950  01D0  0086               	movwf	6
  5951  01D1  3001               	movlw	1	; select bank2/3
  5952  01D2  0087               	movwf	7
  5953  01D3  0875               	movf	??_Flash_Memory_Initialization,w
  5954  01D4  0081               	movwf	1
  5955                           
  5956                           ;MCU_B1.c: 778: Memory->Data[4]=0xff;
  5957  01D5  30FF               	movlw	255
  5958  01D6  00F5               	movwf	??_Flash_Memory_Initialization
  5959  01D7  086D               	movf	_Memory,w
  5960  01D8  3E04               	addlw	4
  5961  01D9  0086               	movwf	6
  5962  01DA  3001               	movlw	1	; select bank2/3
  5963  01DB  0087               	movwf	7
  5964  01DC  0875               	movf	??_Flash_Memory_Initialization,w
  5965  01DD  0081               	movwf	1
  5966                           
  5967                           ;MCU_B1.c: 779: Memory->Data[5]=0xff;
  5968  01DE  30FF               	movlw	255
  5969  01DF  00F5               	movwf	??_Flash_Memory_Initialization
  5970  01E0  086D               	movf	_Memory,w
  5971  01E1  3E05               	addlw	5
  5972  01E2  0086               	movwf	6
  5973  01E3  3001               	movlw	1	; select bank2/3
  5974  01E4  0087               	movwf	7
  5975  01E5  0875               	movf	??_Flash_Memory_Initialization,w
  5976  01E6  0081               	movwf	1
  5977                           
  5978                           ;MCU_B1.c: 780: Memory->Data[31]=0xaa;
  5979  01E7  30AA               	movlw	170
  5980  01E8  00F5               	movwf	??_Flash_Memory_Initialization
  5981  01E9  086D               	movf	_Memory,w
  5982  01EA  3E1F               	addlw	31
  5983  01EB  0086               	movwf	6
  5984  01EC  3001               	movlw	1	; select bank2/3
  5985  01ED  0087               	movwf	7
  5986  01EE  0875               	movf	??_Flash_Memory_Initialization,w
  5987  01EF  0081               	movwf	1
  5988                           
  5989                           ;MCU_B1.c: 781: product->Data[21] = i;
  5990  01F0  0876               	movf	Flash_Memory_Initialization@i,w
  5991  01F1  00F5               	movwf	??_Flash_Memory_Initialization
  5992  01F2  086C               	movf	_product,w
  5993  01F3  3E15               	addlw	21
  5994  01F4  0086               	movwf	6
  5995  01F5  0187               	clrf	7
  5996  01F6  0875               	movf	??_Flash_Memory_Initialization,w
  5997  01F7  0081               	movwf	1
  5998                           
  5999                           ;MCU_B1.c: 782: product->Data[22] = i;
  6000  01F8  0876               	movf	Flash_Memory_Initialization@i,w
  6001  01F9  00F5               	movwf	??_Flash_Memory_Initialization
  6002  01FA  086C               	movf	_product,w
  6003  01FB  3E16               	addlw	22
  6004  01FC  0086               	movwf	6
  6005  01FD  0187               	clrf	7
  6006  01FE  0875               	movf	??_Flash_Memory_Initialization,w
  6007  01FF  0081               	movwf	1
  6008                           
  6009                           ;MCU_B1.c: 783: product->Data[23] = i;
  6010  0200  0876               	movf	Flash_Memory_Initialization@i,w
  6011  0201  00F5               	movwf	??_Flash_Memory_Initialization
  6012  0202  086C               	movf	_product,w
  6013  0203  3E17               	addlw	23
  6014  0204  0086               	movwf	6
  6015  0205  0187               	clrf	7
  6016  0206  0875               	movf	??_Flash_Memory_Initialization,w
  6017  0207  0081               	movwf	1
  6018                           
  6019                           ;MCU_B1.c: 784: GIE = 0;
  6020  0208  138B               	bcf	11,7	;volatile
  6021                           
  6022                           ;MCU_B1.c: 785: Flash_Memory_Write();
  6023  0209  3185  2564         	fcall	_Flash_Memory_Write
  6024                           
  6025                           ;MCU_B1.c: 786: GIE = 1;
  6026  020B  178B               	bsf	11,7	;volatile
  6027                           
  6028                           ;MCU_B1.c: 787: myMain->FirstOpen = 1;
  6029  020C  0020               	movlb	0	; select bank0
  6030  020D  086B               	movf	_myMain,w
  6031  020E  0086               	movwf	6
  6032  020F  0187               	clrf	7
  6033  0210  1681               	bsf	1,5
  6034                           
  6035                           ;MCU_B1.c: 788: myMain->First = 1;
  6036  0211  086B               	movf	_myMain,w
  6037  0212  0086               	movwf	6
  6038  0213  0187               	clrf	7
  6039  0214  1781               	bsf	1,7
  6040  0215  0008               	return
  6041  0216                     __end_of_Flash_Memory_Initialization:	
  6042                           
  6043                           	psect	text32
  6044  0564                     __ptext32:	
  6045 ;; *************** function _Flash_Memory_Write *****************
  6046 ;; Defined at:
  6047 ;;		line 833 in file "../src/MCU_B1.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  i               1    2[COMMON] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;		None               void
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;Total ram usage:        2 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    4
  6068 ;; This function calls:
  6069 ;;		_Flash_Memory_Unlock
  6070 ;; This function is called by:
  6071 ;;		_Flash_Memory_Initialization
  6072 ;;		_Flash_Memory_Modify
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _Flash_Memory_Write
  6078  0564                     _Flash_Memory_Write:	
  6079                           
  6080                           ;MCU_B1.c: 834: char i;
  6081                           ;MCU_B1.c: 835: CFGS = 0;
  6082                           
  6083                           ;incstack = 0
  6084                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6085  0564  0023               	movlb	3	; select bank3
  6086  0565  1315               	bcf	21,6	;volatile
  6087                           
  6088                           ;MCU_B1.c: 836: PMADRH = 0x30;
  6089  0566  3030               	movlw	48
  6090  0567  0092               	movwf	18	;volatile
  6091                           
  6092                           ;MCU_B1.c: 837: PMDATH = 0;
  6093  0568  0194               	clrf	20	;volatile
  6094                           
  6095                           ;MCU_B1.c: 838: FREE = 0;
  6096  0569  1215               	bcf	21,4	;volatile
  6097                           
  6098                           ;MCU_B1.c: 839: LWLO = 1;
  6099  056A  1695               	bsf	21,5	;volatile
  6100                           
  6101                           ;MCU_B1.c: 840: WREN = 1;
  6102  056B  1515               	bsf	21,2	;volatile
  6103                           
  6104                           ;MCU_B1.c: 841: for (i = 0; i < 32; i++) {
  6105  056C  01F2               	clrf	Flash_Memory_Write@i
  6106  056D  3020               	movlw	32
  6107  056E  0272               	subwf	Flash_Memory_Write@i,w
  6108  056F  1803               	btfsc	3,0
  6109  0570  2D8A               	goto	l602
  6110  0571                     l2417:	
  6111                           
  6112                           ;MCU_B1.c: 842: PMADRL = i;
  6113  0571  0872               	movf	Flash_Memory_Write@i,w
  6114  0572  0023               	movlb	3	; select bank3
  6115  0573  0091               	movwf	17	;volatile
  6116                           
  6117                           ;MCU_B1.c: 843: PMDATL = Memory->Data[i];
  6118  0574  0872               	movf	Flash_Memory_Write@i,w
  6119  0575  0020               	movlb	0	; select bank0
  6120  0576  076D               	addwf	_Memory,w
  6121  0577  00F1               	movwf	??_Flash_Memory_Write
  6122  0578  0871               	movf	??_Flash_Memory_Write,w
  6123  0579  0086               	movwf	6
  6124  057A  3001               	movlw	1	; select bank2/3
  6125  057B  0087               	movwf	7
  6126  057C  0801               	movf	1,w
  6127  057D  0023               	movlb	3	; select bank3
  6128  057E  0093               	movwf	19	;volatile
  6129                           
  6130                           ;MCU_B1.c: 844: Flash_Memory_Unlock();
  6131  057F  3187  274F  3185   	fcall	_Flash_Memory_Unlock
  6132  0582  3001               	movlw	1
  6133  0583  00F1               	movwf	??_Flash_Memory_Write
  6134  0584  0871               	movf	??_Flash_Memory_Write,w
  6135  0585  07F2               	addwf	Flash_Memory_Write@i,f
  6136  0586  3020               	movlw	32
  6137  0587  0272               	subwf	Flash_Memory_Write@i,w
  6138  0588  1C03               	skipc
  6139  0589  2D71               	goto	l2417
  6140  058A                     l602:	
  6141                           
  6142                           ;MCU_B1.c: 845: }
  6143                           ;MCU_B1.c: 846: LWLO = 0;
  6144  058A  0023               	movlb	3	; select bank3
  6145  058B  1295               	bcf	21,5	;volatile
  6146                           
  6147                           ;MCU_B1.c: 847: Flash_Memory_Unlock();
  6148  058C  3187  274F         	fcall	_Flash_Memory_Unlock
  6149                           
  6150                           ;MCU_B1.c: 848: WREN = 0;
  6151  058E  0023               	movlb	3	; select bank3
  6152  058F  1115               	bcf	21,2	;volatile
  6153  0590  0008               	return
  6154  0591                     __end_of_Flash_Memory_Write:	
  6155                           
  6156                           	psect	text33
  6157  074F                     __ptext33:	
  6158 ;; *************** function _Flash_Memory_Unlock *****************
  6159 ;; Defined at:
  6160 ;;		line 812 in file "../src/MCU_B1.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;		None               void
  6167 ;; Registers used:
  6168 ;;		wreg
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    3
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_Flash_Memory_Write
  6185 ;;		_Flash_Memory_Erasing
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           
  6190                           ;psect for function _Flash_Memory_Unlock
  6191  074F                     _Flash_Memory_Unlock:	
  6192                           
  6193                           ;MCU_B1.c: 813: PMCON2 = 0x55;
  6194                           
  6195                           ;incstack = 0
  6196                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  6197  074F  3055               	movlw	85
  6198  0750  0023               	movlb	3	; select bank3
  6199  0751  0096               	movwf	22	;volatile
  6200                           
  6201                           ;MCU_B1.c: 814: PMCON2 = 0xaa;
  6202  0752  30AA               	movlw	170
  6203  0753  0096               	movwf	22	;volatile
  6204                           
  6205                           ;MCU_B1.c: 815: WR = 1;
  6206  0754  1495               	bsf	21,1	;volatile
  6207                           
  6208                           ;MCU_B1.c: 816: __nop();
  6209  0755  0000               	nop
  6210                           
  6211                           ;MCU_B1.c: 817: __nop();
  6212  0756  0000               	nop
  6213  0757  0008               	return
  6214  0758                     __end_of_Flash_Memory_Unlock:	
  6215                           
  6216                           	psect	text34
  6217  069F                     __ptext34:	
  6218 ;; *************** function _Flash_Memory_Read *****************
  6219 ;; Defined at:
  6220 ;;		line 821 in file "../src/MCU_B1.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  address         1    wreg     unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  address         1    3[COMMON] unsigned char 
  6225 ;;  ret             1    4[COMMON] unsigned char 
  6226 ;;  i               1    2[COMMON] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      unsigned char 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;Total ram usage:        4 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:    3
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_Flash_Memory_Initialization
  6247 ;;		_Flash_Memory_Modify
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _Flash_Memory_Read
  6253  069F                     _Flash_Memory_Read:	
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  6257                           ;Flash_Memory_Read@address stored from wreg
  6258  069F  00F3               	movwf	Flash_Memory_Read@address
  6259                           
  6260                           ;MCU_B1.c: 822: char i, ret = 0;
  6261  06A0  01F4               	clrf	Flash_Memory_Read@ret
  6262                           
  6263                           ;MCU_B1.c: 823: PMADRH = 0x30;
  6264  06A1  3030               	movlw	48
  6265  06A2  0023               	movlb	3	; select bank3
  6266  06A3  0092               	movwf	18	;volatile
  6267                           
  6268                           ;MCU_B1.c: 824: PMADRL = address;
  6269  06A4  0873               	movf	Flash_Memory_Read@address,w
  6270  06A5  0091               	movwf	17	;volatile
  6271                           
  6272                           ;MCU_B1.c: 825: CFGS = 0;
  6273  06A6  1315               	bcf	21,6	;volatile
  6274                           
  6275                           ;MCU_B1.c: 826: RD = 1;
  6276  06A7  1415               	bsf	21,0	;volatile
  6277                           
  6278                           ;MCU_B1.c: 827: i = PMDATH;
  6279  06A8  0814               	movf	20,w	;volatile
  6280  06A9  00F1               	movwf	??_Flash_Memory_Read
  6281  06AA  0871               	movf	??_Flash_Memory_Read,w
  6282  06AB  00F2               	movwf	Flash_Memory_Read@i
  6283                           
  6284                           ;MCU_B1.c: 828: ret = PMDATL;
  6285  06AC  0813               	movf	19,w	;volatile
  6286  06AD  00F1               	movwf	??_Flash_Memory_Read
  6287  06AE  0871               	movf	??_Flash_Memory_Read,w
  6288  06AF  00F4               	movwf	Flash_Memory_Read@ret
  6289                           
  6290                           ;MCU_B1.c: 829: return ret;
  6291  06B0  0874               	movf	Flash_Memory_Read@ret,w
  6292  06B1  0008               	return
  6293  06B2                     __end_of_Flash_Memory_Read:	
  6294                           
  6295                           	psect	text35
  6296  0216                     __ptext35:	
  6297 ;; *************** function _Buzzer_Main *****************
  6298 ;; Defined at:
  6299 ;;		line 53 in file "../src/Buzzer_B1.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;		None               void
  6306 ;; Registers used:
  6307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    3
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_main
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function _Buzzer_Main
  6329  0216                     _Buzzer_Main:	
  6330                           
  6331                           ;Buzzer_B1.c: 54: Buz->Switch = (RB3) ? 1 : 0;
  6332                           
  6333                           ;incstack = 0
  6334                           ; Regs used in _Buzzer_Main: [wreg-fsr1h+status,2+status,0]
  6335  0216  0020               	movlb	0	; select bank0
  6336  0217  0820               	movf	_Buz,w
  6337  0218  0086               	movwf	6
  6338  0219  0187               	clrf	7
  6339  021A  1281               	bcf	1,5
  6340  021B  198D               	btfsc	13,3	;volatile
  6341  021C  1681               	bsf	1,5
  6342                           
  6343                           ;Buzzer_B1.c: 56: if (Buz->Counter >= Buz->TimeValue) {
  6344  021D  0020               	movlb	0	; select bank0
  6345  021E  0820               	movf	_Buz,w
  6346  021F  3E06               	addlw	6
  6347  0220  0086               	movwf	6
  6348  0221  0187               	clrf	7
  6349  0222  3F40               	moviw [0]fsr1
  6350  0223  00F1               	movwf	??_Buzzer_Main
  6351  0224  3F41               	moviw [1]fsr1
  6352  0225  00F2               	movwf	??_Buzzer_Main+1
  6353  0226  0A20               	incf	_Buz,w
  6354  0227  0086               	movwf	6
  6355  0228  0187               	clrf	7
  6356  0229  3F40               	moviw [0]fsr1
  6357  022A  00F3               	movwf	??_Buzzer_Main+2
  6358  022B  3F41               	moviw [1]fsr1
  6359  022C  00F4               	movwf	??_Buzzer_Main+3
  6360  022D  0872               	movf	??_Buzzer_Main+1,w
  6361  022E  0274               	subwf	??_Buzzer_Main+3,w
  6362  022F  1D03               	skipz
  6363  0230  2A33               	goto	u1815
  6364  0231  0871               	movf	??_Buzzer_Main,w
  6365  0232  0273               	subwf	??_Buzzer_Main+2,w
  6366  0233                     u1815:	
  6367  0233  1C03               	skipc
  6368  0234  0008               	return
  6369                           
  6370                           ;Buzzer_B1.c: 57: Buz->Counter = 0;
  6371  0235  0A20               	incf	_Buz,w
  6372  0236  0086               	movwf	6
  6373  0237  0187               	clrf	7
  6374  0238  3000               	movlw	0
  6375  0239  3FC0               	movwi [0]fsr1
  6376  023A  3FC1               	movwi [1]fsr1
  6377                           
  6378                           ;Buzzer_B1.c: 58: if (!Buz->Switch) {
  6379  023B  0820               	movf	_Buz,w
  6380  023C  0086               	movwf	6
  6381  023D  0187               	clrf	7
  6382  023E  1A81               	btfsc	1,5
  6383  023F  2A96               	goto	l2747
  6384                           
  6385                           ;Buzzer_B1.c: 59: if (Buz->Count == 0) {
  6386  0240  0820               	movf	_Buz,w
  6387  0241  3E03               	addlw	3
  6388  0242  0086               	movwf	6
  6389  0243  0187               	clrf	7
  6390  0244  0881               	movf	1,f
  6391  0245  1D03               	skipz
  6392  0246  2A90               	goto	l2743
  6393                           
  6394                           ;Buzzer_B1.c: 60: if (Buz->BufferStatus1) {
  6395  0247  0820               	movf	_Buz,w
  6396  0248  0086               	movwf	6
  6397  0249  0187               	clrf	7
  6398  024A  1D81               	btfss	1,3
  6399  024B  2A69               	goto	l2735
  6400                           
  6401                           ;Buzzer_B1.c: 61: Buz->BufferStatus1 = 0;
  6402  024C  0820               	movf	_Buz,w
  6403  024D  0086               	movwf	6
  6404  024E  0187               	clrf	7
  6405  024F  1181               	bcf	1,3
  6406                           
  6407                           ;Buzzer_B1.c: 62: Buz->Count = Buz->CountBuffer1;
  6408  0250  0820               	movf	_Buz,w
  6409  0251  3E04               	addlw	4
  6410  0252  0086               	movwf	6
  6411  0253  0187               	clrf	7
  6412  0254  0801               	movf	1,w
  6413  0255  00F1               	movwf	??_Buzzer_Main
  6414  0256  0820               	movf	_Buz,w
  6415  0257  3E03               	addlw	3
  6416  0258  0086               	movwf	6
  6417  0259  0187               	clrf	7
  6418  025A  0871               	movf	??_Buzzer_Main,w
  6419  025B  0081               	movwf	1
  6420                           
  6421                           ;Buzzer_B1.c: 63: Buz->TimeValue = Buz->TimeValueBuffer1;
  6422  025C  0820               	movf	_Buz,w
  6423  025D  3E08               	addlw	8
  6424  025E  0086               	movwf	6
  6425  025F  0187               	clrf	7
  6426  0260  0820               	movf	_Buz,w
  6427  0261  3E06               	addlw	6
  6428  0262  0084               	movwf	4
  6429  0263  0185               	clrf	5
  6430  0264  3F40               	moviw [0]fsr1
  6431  0265  3F80               	movwi [0]fsr0
  6432  0266  3F41               	moviw [1]fsr1
  6433  0267  3F81               	movwi [1]fsr0
  6434                           
  6435                           ;Buzzer_B1.c: 64: } else if (Buz->BufferStatus2) {
  6436  0268  0008               	return
  6437  0269                     l2735:	
  6438  0269  0820               	movf	_Buz,w
  6439  026A  0086               	movwf	6
  6440  026B  0187               	clrf	7
  6441  026C  1E01               	btfss	1,4
  6442  026D  2A8B               	goto	l2741
  6443                           
  6444                           ;Buzzer_B1.c: 65: Buz->BufferStatus2 = 0;
  6445  026E  0820               	movf	_Buz,w
  6446  026F  0086               	movwf	6
  6447  0270  0187               	clrf	7
  6448  0271  1201               	bcf	1,4
  6449                           
  6450                           ;Buzzer_B1.c: 66: Buz->Count = Buz->CountBuffer2;
  6451  0272  0820               	movf	_Buz,w
  6452  0273  3E05               	addlw	5
  6453  0274  0086               	movwf	6
  6454  0275  0187               	clrf	7
  6455  0276  0801               	movf	1,w
  6456  0277  00F1               	movwf	??_Buzzer_Main
  6457  0278  0820               	movf	_Buz,w
  6458  0279  3E03               	addlw	3
  6459  027A  0086               	movwf	6
  6460  027B  0187               	clrf	7
  6461  027C  0871               	movf	??_Buzzer_Main,w
  6462  027D  0081               	movwf	1
  6463                           
  6464                           ;Buzzer_B1.c: 67: Buz->TimeValue = Buz->TimeValueBuffer2;
  6465  027E  0820               	movf	_Buz,w
  6466  027F  3E0A               	addlw	10
  6467  0280  0086               	movwf	6
  6468  0281  0187               	clrf	7
  6469  0282  0820               	movf	_Buz,w
  6470  0283  3E06               	addlw	6
  6471  0284  0084               	movwf	4
  6472  0285  0185               	clrf	5
  6473  0286  3F40               	moviw [0]fsr1
  6474  0287  3F80               	movwi [0]fsr0
  6475  0288  3F41               	moviw [1]fsr1
  6476  0289  3F81               	movwi [1]fsr0
  6477                           
  6478                           ;Buzzer_B1.c: 68: } else {
  6479  028A  0008               	return
  6480  028B                     l2741:	
  6481                           
  6482                           ;Buzzer_B1.c: 69: Buz->GO = 0;
  6483  028B  0820               	movf	_Buz,w
  6484  028C  0086               	movwf	6
  6485  028D  0187               	clrf	7
  6486  028E  1081               	bcf	1,1
  6487                           
  6488                           ;Buzzer_B1.c: 70: }
  6489                           ;Buzzer_B1.c: 71: } else {
  6490  028F  0008               	return
  6491  0290                     l2743:	
  6492                           
  6493                           ;Buzzer_B1.c: 72: Buz->Switch = 1;
  6494  0290  0820               	movf	_Buz,w
  6495  0291  0086               	movwf	6
  6496  0292  0187               	clrf	7
  6497  0293  1681               	bsf	1,5
  6498                           
  6499                           ;Buzzer_B1.c: 74: RB3 = 1;
  6500  0294  158D               	bsf	13,3	;volatile
  6501                           
  6502                           ;Buzzer_B1.c: 75: }
  6503                           ;Buzzer_B1.c: 76: } else {
  6504  0295  0008               	return
  6505  0296                     l2747:	
  6506                           
  6507                           ;Buzzer_B1.c: 77: Buz->Switch = 0;
  6508  0296  0820               	movf	_Buz,w
  6509  0297  0086               	movwf	6
  6510  0298  0187               	clrf	7
  6511  0299  1281               	bcf	1,5
  6512                           
  6513                           ;Buzzer_B1.c: 79: RB3 = 0;
  6514  029A  118D               	bcf	13,3	;volatile
  6515                           
  6516                           ;Buzzer_B1.c: 81: Buz->Count--;
  6517  029B  0820               	movf	_Buz,w
  6518  029C  3E03               	addlw	3
  6519  029D  0086               	movwf	6
  6520  029E  0187               	clrf	7
  6521  029F  3001               	movlw	1
  6522  02A0  0281               	subwf	1,f
  6523  02A1  0008               	return
  6524  02A2                     __end_of_Buzzer_Main:	
  6525                           
  6526                           	psect	text36
  6527  0745                     __ptext36:	
  6528 ;; *************** function _Buzzer_Initialization *****************
  6529 ;; Defined at:
  6530 ;;		line 11 in file "../src/Buzzer_B1.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;		None               void
  6537 ;; Registers used:
  6538 ;;		wreg, fsr1l, fsr1h
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;Total ram usage:        1 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    3
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_main
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           
  6559                           ;psect for function _Buzzer_Initialization
  6560  0745                     _Buzzer_Initialization:	
  6561                           
  6562                           ;Buzzer_B1.c: 12: Buz = &Buz1;
  6563                           
  6564                           ;incstack = 0
  6565                           ; Regs used in _Buzzer_Initialization: [wregfsr1]
  6566  0745  3022               	movlw	_Buz1& (0+255)
  6567  0746  00F1               	movwf	??_Buzzer_Initialization
  6568  0747  0871               	movf	??_Buzzer_Initialization,w
  6569  0748  0020               	movlb	0	; select bank0
  6570  0749  00A0               	movwf	_Buz
  6571                           
  6572                           ;Buzzer_B1.c: 13: Buz->Enable = 1;
  6573  074A  0820               	movf	_Buz,w
  6574  074B  0086               	movwf	6
  6575  074C  0187               	clrf	7
  6576  074D  1401               	bsf	1,0
  6577  074E  0008               	return
  6578  074F                     __end_of_Buzzer_Initialization:	
  6579                           
  6580                           	psect	intentry
  6581  0004                     __pintentry:	
  6582 ;; *************** function _ISR *****************
  6583 ;; Defined at:
  6584 ;;		line 109 in file "../src/MCU_B1.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;		None               void
  6591 ;; Registers used:
  6592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;Total ram usage:        1 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    2
  6605 ;; This function calls:
  6606 ;;		_INT_ISR
  6607 ;;		_IOC_ISR
  6608 ;;		_TMR0_ISR
  6609 ;; This function is called by:
  6610 ;;		Interrupt level 1
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614  0004                     _ISR:	
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6618  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6619  0005  3180               	pagesel	$
  6620  0006  0020               	movlb	0	; select bank0
  6621  0007  087F               	movf	127,w
  6622  0008  00F0               	movwf	??_ISR
  6623                           
  6624                           ;MCU_B1.c: 111: IOC_ISR();
  6625  0009  3187  2758  3180   	fcall	_IOC_ISR
  6626                           
  6627                           ;MCU_B1.c: 113: TMR0_ISR();
  6628  000C  3185  25BA  3180   	fcall	_TMR0_ISR
  6629                           
  6630                           ;MCU_B1.c: 115: ;;
  6631                           ;MCU_B1.c: 119: INT_ISR();
  6632  000F  3187  276E         	fcall	_INT_ISR
  6633  0011  0870               	movf	??_ISR,w
  6634  0012  0020               	movlb	0	; select bank0
  6635  0013  00FF               	movwf	127
  6636  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  6637  0015  0009               	retfie
  6638  0016                     __end_of_ISR:	
  6639                           
  6640                           	psect	text38
  6641  05BA                     __ptext38:	
  6642 ;; *************** function _TMR0_ISR *****************
  6643 ;; Defined at:
  6644 ;;		line 137 in file "../src/MCU_B1.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    1
  6665 ;; This function calls:
  6666 ;;		_Buz_Counter
  6667 ;; This function is called by:
  6668 ;;		_ISR
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _TMR0_ISR
  6674  05BA                     _TMR0_ISR:	
  6675                           
  6676                           ;MCU_B1.c: 138: if (TMR0IE == 1 && TMR0IF == 1) {
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6680  05BA  1E8B               	btfss	11,5	;volatile
  6681  05BB  0008               	return
  6682  05BC  1D0B               	btfss	11,2	;volatile
  6683  05BD  0008               	return
  6684                           
  6685                           ;MCU_B1.c: 139: TMR0 = (256-90);
  6686  05BE  30A6               	movlw	166
  6687  05BF  0020               	movlb	0	; select bank0
  6688  05C0  0095               	movwf	21	;volatile
  6689                           
  6690                           ;MCU_B1.c: 140: TMR0IF = 0;
  6691  05C1  110B               	bcf	11,2	;volatile
  6692                           
  6693                           ;MCU_B1.c: 161: Timer0->Count++;
  6694  05C2  0A69               	incf	_Timer0,w
  6695  05C3  0086               	movwf	6
  6696  05C4  0187               	clrf	7
  6697  05C5  3001               	movlw	1
  6698  05C6  0781               	addwf	1,f
  6699  05C7  3141               	addfsr 1,1
  6700  05C8  1803               	skipnc
  6701  05C9  0A81               	incf	1,f
  6702                           
  6703                           ;MCU_B1.c: 162: if (Timer0->Count == 200) {
  6704  05CA  0A69               	incf	_Timer0,w
  6705  05CB  0086               	movwf	6
  6706  05CC  0187               	clrf	7
  6707  05CD  3F40               	moviw [0]fsr1
  6708  05CE  3AC8               	xorlw	200
  6709  05CF  1D03               	skipz
  6710  05D0  2DD3               	goto	u190_25
  6711  05D1  3F41               	moviw [1]fsr1
  6712  05D2  3A00               	xorlw	0
  6713  05D3                     u190_25:	
  6714  05D3  1D03               	skipz
  6715  05D4  0008               	return
  6716                           
  6717                           ;MCU_B1.c: 163: Timer0->Count = 0;
  6718  05D5  0A69               	incf	_Timer0,w
  6719  05D6  0086               	movwf	6
  6720  05D7  0187               	clrf	7
  6721  05D8  3000               	movlw	0
  6722  05D9  3FC0               	movwi [0]fsr1
  6723  05DA  3FC1               	movwi [1]fsr1
  6724                           
  6725                           ;MCU_B1.c: 164: myMain->T0_Timerout = 1;
  6726  05DB  086B               	movf	_myMain,w
  6727  05DC  0086               	movwf	6
  6728  05DD  0187               	clrf	7
  6729  05DE  1481               	bsf	1,1
  6730                           
  6731                           ;MCU_B1.c: 167: Buz_Counter();
  6732  05DF  3187  2704         	fcall	_Buz_Counter
  6733  05E1  0008               	return
  6734  05E2                     __end_of_TMR0_ISR:	
  6735                           
  6736                           	psect	text39
  6737  0704                     __ptext39:	
  6738 ;; *************** function _Buz_Counter *****************
  6739 ;; Defined at:
  6740 ;;		line 23 in file "../src/Buzzer_B1.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_TMR0_ISR
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function _Buz_Counter
  6769  0704                     _Buz_Counter:	
  6770                           
  6771                           ;Buzzer_B1.c: 24: if (Buz->GO == 1) {
  6772                           
  6773                           ;incstack = 0
  6774                           ; Regs used in _Buz_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6775  0704  0020               	movlb	0	; select bank0
  6776  0705  0820               	movf	_Buz,w
  6777  0706  0086               	movwf	6
  6778  0707  0187               	clrf	7
  6779  0708  1C81               	btfss	1,1
  6780  0709  0008               	return
  6781                           
  6782                           ;Buzzer_B1.c: 25: Buz->Counter++;
  6783  070A  0A20               	incf	_Buz,w
  6784  070B  0086               	movwf	6
  6785  070C  0187               	clrf	7
  6786  070D  3001               	movlw	1
  6787  070E  0781               	addwf	1,f
  6788  070F  3141               	addfsr 1,1
  6789  0710  1803               	skipnc
  6790  0711  0A81               	incf	1,f
  6791  0712  0008               	return
  6792  0713                     __end_of_Buz_Counter:	
  6793                           
  6794                           	psect	text40
  6795  0758                     __ptext40:	
  6796 ;; *************** function _IOC_ISR *****************
  6797 ;; Defined at:
  6798 ;;		line 296 in file "../src/MCU_B1.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;		None               void
  6805 ;; Registers used:
  6806 ;;		wreg, fsr1l, fsr1h
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_ISR
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _IOC_ISR
  6827  0758                     _IOC_ISR:	
  6828                           
  6829                           ;MCU_B1.c: 297: if (IOCIE == 1 && IOCBF2 == 1) {
  6830                           
  6831                           ;incstack = 0
  6832                           ; Regs used in _IOC_ISR: [wregfsr1]
  6833  0758  1D8B               	btfss	11,3	;volatile
  6834  0759  0008               	return
  6835  075A  0027               	movlb	7	; select bank7
  6836  075B  1D16               	btfss	22,2	;volatile
  6837  075C  0008               	return
  6838                           
  6839                           ;MCU_B1.c: 298: IOCBF2 = 0;
  6840  075D  1116               	bcf	22,2	;volatile
  6841                           
  6842                           ;MCU_B1.c: 299: IOCIF = 0;
  6843  075E  100B               	bcf	11,0	;volatile
  6844  075F  0008               	return
  6845  0760                     __end_of_IOC_ISR:	
  6846                           
  6847                           	psect	text41
  6848  076E                     __ptext41:	
  6849 ;; *************** function _INT_ISR *****************
  6850 ;; Defined at:
  6851 ;;		line 248 in file "../src/MCU_B1.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;		None               void
  6858 ;; Registers used:
  6859 ;;		None
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_ISR
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function _INT_ISR
  6880  076E                     _INT_ISR:	
  6881                           
  6882                           ;MCU_B1.c: 249: if (INTE && INTF) {
  6883                           
  6884                           ;incstack = 0
  6885                           ; Regs used in _INT_ISR: []
  6886  076E  1E0B               	btfss	11,4	;volatile
  6887  076F  0008               	return
  6888  0770  1C8B               	btfss	11,1	;volatile
  6889  0771  0008               	return
  6890                           
  6891                           ;MCU_B1.c: 250: INTF = 0;
  6892  0772  108B               	bcf	11,1	;volatile
  6893                           
  6894                           ;MCU_B1.c: 251: INTE = 0;
  6895  0773  120B               	bcf	11,4	;volatile
  6896  0774  0008               	return
  6897  0775                     __end_of_INT_ISR:	
  6898                           ;MCU_B1.c: 252: ;;
  6899                           ;MCU_B1.c: 253: ;;
  6900                           
  6901  007E                     btemp	set	126	;btemp
  6902  007E                     pic14e$flags	set	126
  6903  007E                     wtemp	set	126
  6904  007E                     wtemp0	set	126
  6905  0080                     wtemp1	set	128
  6906  0082                     wtemp2	set	130
  6907  0084                     wtemp3	set	132
  6908  0086                     wtemp4	set	134
  6909  0088                     wtemp5	set	136
  6910  007F                     wtemp6	set	127
  6911  007E                     ttemp	set	126
  6912  007E                     ttemp0	set	126
  6913  0081                     ttemp1	set	129
  6914  0084                     ttemp2	set	132
  6915  0087                     ttemp3	set	135
  6916  007F                     ttemp4	set	127
  6917  007E                     ltemp	set	126
  6918  007E                     ltemp0	set	126
  6919  0082                     ltemp1	set	130
  6920  0086                     ltemp2	set	134
  6921  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         121
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      6      78
    BANK1            80      0      48
    BANK2            80      0      37
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK0[9]), Sw2(BANK0[9]), Sw1(BANK0[9]), 

    WDT	PTR struct WDT size(1) Largest target is 2
		 -> NULL(NULL[0]), _WDT(BANK0[2]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK1[32]), 

    myMain	PTR struct myMain size(1) Largest target is 16
		 -> NULL(NULL[0]), _myMain(BANK1[16]), 

    Timer0	PTR struct Timer0 size(1) Largest target is 8
		 -> NULL(NULL[0]), VarTimer0(BANK0[8]), 

    Memory	PTR struct FlashMemory size(1) Largest target is 37
		 -> NULL(NULL[0]), VarMemory(BANK2[37]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED3(BANK0[4]), VarLED2(BANK0[4]), 
		 -> VarLED1(BANK0[4]), 

    Buz	PTR struct Buzzer size(1) Largest target is 12
		 -> NULL(NULL[0]), Buz1(BANK0[12]), 


Critical Paths under _main in COMMON

    _my_Main->_setBuz
    _setSw_Enable->_SwPointSelect
    _setBuz->___awdiv
    _Switch_Main->_setSw_Main
    _setSw_Main->_SwPointSelect
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_TMR0_Set
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _my_Main->_setBuz

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4169
                                              2 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                            _my_Main
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0    1729
                             _setBuz
                             _setLED
                       _setSw_Enable
 ---------------------------------------------------------------------------------
 (2) _setSw_Enable                                         1     1      0     132
                                              3 COMMON     1     1      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2     879
                                             10 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              1 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0     154
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0     154
                                              3 COMMON     3     3      0
                      _SwPointSelect
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      66
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     740
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     740
                                              5 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   1     1      0       0
                                              2 COMMON     1     1      0
                            _ADC_Set
                           _Fosc_Set
                            _INT_Set
                            _IOC_Set
                             _IO_Set
                           _TMR0_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     198
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     198
                                              3 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     850
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     850
                                              5 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1     718
                                              3 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      88
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    0     0      0     227
                _Flash_Memory_Modify
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  3     3      0     227
                                              5 COMMON     3     3      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0     271
                                              5 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0      90
                                              1 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      47
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          4     4      0       0
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
                            _INT_ISR
                            _IOC_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                        _Buz_Counter
 ---------------------------------------------------------------------------------
 (7) _Buz_Counter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _INT_Set
     _IOC_Set
     _IO_Set
     _TMR0_Set
     _WDT_Set
   _Switch_Initialization
     _TouchPower
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _setSw_Main
       _SwPointSelect
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv
     _setLED
       _LedPointSelect
     _setSw_Enable
       _SwPointSelect

 _ISR (ROOT)
   _INT_ISR
   _IOC_ISR
   _TMR0_ISR
     _Buz_Counter

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      25       9       46.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Oct 09 16:59:26 2014

                __size_of_Switch_Main 000C                 ?_Flash_Memory_Erasing 0070  
                        _WDT_Clearing 0790                                    _RD 0CA8  
                                  _WR 0CA9                          ___awdiv@sign 0077  
                                  _Sw 007C                                   l602 058A  
                                 _GIE 005F                                   _RA0 0060  
                                 _RA3 0063                                   _RA4 0064  
                                 _LED 0021                                   _RB3 006B  
                                 _RA6 0066                                   _RB5 006D  
                                 _RC5 0075                                   _RC6 0076  
                                 _RC7 0077                                   _ISR 0004  
                                 _WDT 006A                                   _Sw1 002E  
                                 _Sw2 0037                                   _Buz 0020  
                                 _Sw3 0040                         ??_Buz_Counter 0070  
               _Buzzer_Initialization 0745                       __end_of_ADC_Set 076E  
                                 wreg 0009                                  ?_ISR 0070  
                     __end_of_IOC_ISR 0760                                  l1110 006D  
                                l3011 03DA                                  l2301 059C  
                                l1079 0787                                  l3007 03C0  
                                l2305 05A6                                  l3041 0380  
                                l3027 034B                                  l3051 0541  
                                l2309 05B0                                  l2333 02B8  
                                l2341 02C6                                  l2351 02D8  
                                l2417 0571                                  l2337 02BF  
                                l2329 02B1                                  l2371 0301  
                                l2355 02DF                                  l2347 02D1  
                                l2613 03F9                       __end_of_IOC_Set 072D  
                                l2453 0637                                  l2623 044B  
                                l2375 0307                                  l2367 02FB  
                                l2359 02E6                                  l2551 0527  
                                l2543 0519                                  l2471 0468  
                                l2449 062E                                  l2481 0470  
                                l2465 045D                                  l2811 01B1  
                                l2619 0410                                  l2379 030D  
                                l2547 0520                                  l2483 047C  
                                l2741 028B                                  l2493 0497  
                                l2735 0269                                  l2743 0290  
                                l2655 0056                                  l2681 00BA  
                                l2673 0091                                  l2497 049F  
                                l2489 048E                                  l2747 0296  
                                l2659 0062                                  l2855 04E3  
                                l2689 00E3                                  l2697 010C  
               _myMain_Initialization 06B2                                  _CFGS 0CAE  
                                _FREE 0CAC                                  u1405 0473  
                                _LATA 010C                                  _LATB 010D  
                     __end_of_INT_ISR 0775                                  _LATC 010E  
                                u1425 047D                                  u1435 0487  
                                u2235 032E                                  u1445 048F  
                                u2245 035F                                  u1815 0233  
                                _PEIE 005E                                  _INTE 005C  
                                _INTF 0059                                  u1975 04CA  
                                _LWLO 0CAD                                  _TMR0 0015  
                     __end_of_INT_Set 0787                                  _WREN 0CAA  
                                _Buz1 0022                                  __WDT 0061  
                                _main 052E                                  fsr0h 0005  
                                fsr1h 0007                                  fsr0l 0004  
                                indf0 0000                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                     __end_of_WDT_Set 069F                                  ltemp 007E  
                                start 0016                                  ttemp 007E  
                                wtemp 007E                                 ??_ISR 0070  
                    __end_of_LED_Main 06E5                                 ?_main 0065  
                     __end_of___awdiv 04A6                       ___awdiv@divisor 0071  
                               _IOCBF 0396                                 _IOCBN 0395  
                               _IOCBP 0394                                 _IOCIE 005B  
                               _IOCIF 0058                       ___awdiv@counter 0076  
                               _PORTA 000C                                 _PORTB 000D  
                               _PORTC 000E                          ?_setLED_Main 0070  
                               _TRISA 008C                                 _TRISB 008D  
                               _TRISC 008E                                 _WPUB0 1068  
                               _WPUB1 1069                                 _WPUB2 106A  
                       __CFG_WRT$HALF 0000                      __end_of_TMR0_ISR 05E2  
                    __end_of_TMR0_Set 0720                       __end_of_my_Main 038A  
                       ??_Buzzer_Main 0071                      __end_of_WDT_Main 0673  
                      __CFG_BOREN$OFF 0000                   __end_of_Buz_Counter 0713  
                  Flash_Memory_Read@i 0072                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080        __size_of_setLED_Initialization 000F  
       __end_of_setLED_Initialization 0704                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
         __size_of_Flash_Memory_Write 002D                ??_Flash_Memory_Erasing 0071  
                     __initialization 0018                          __end_of_main 0564  
                    __end_of_Fosc_Set 0790                             ??_ADC_Set 0071  
                _setSw_Initialization 0760                                ??_main 007C  
              ?_Buzzer_Initialization 0070                             ??_IOC_ISR 0070  
                           ??_IOC_Set 0071                             ??_INT_ISR 0070  
                           ??_INT_Set 0071               ??_Switch_Initialization 0076  
              ?_myMain_Initialization 0070                                _ADCON0 009D  
                              _ADCON1 009E                                _ADRESH 009C  
                              _ADRESL 009B                      ___awdiv@dividend 0073  
                           ??_WDT_Set 0071                                _ANSELA 018C  
                              _ANSELB 018D                                _ANSELC 018E  
                              _IOCBF2 1CB2                                _FVRCON 0117  
                              u190_25 05D3                                _PMADRH 0192  
                              _PMADRL 0191                                _PMDATH 0194  
                              _PMDATL 0193                                _PMCON2 0196  
                              _OSCCON 0099                                _TMR0IE 005D  
                              _TMR0IF 005A                                _IO_Set 0673  
                              _WDTCON 0097            __end_of_Mcu_Initialization 065A  
                 __end_of_Buzzer_Main 02A2                                _Memory 006D  
                              _Timer0 0069                             ??___awdiv 0075  
        ?_Flash_Memory_Initialization 0070                                _setLED 02A2  
                              _myMain 006B                 ?_setSw_Initialization 0070  
                    ___awdiv@quotient 0078                                _setBuz 038A  
                           ??_my_Main 007C              Flash_Memory_Read@address 0073  
                         _Buz_Counter 0704                 __end_of_SwPointSelect 0640  
        __size_of_Flash_Memory_Modify 005F               __size_of_LedPointSelect 0029  
                 Flash_Memory_Write@i 0072          __size_of_Flash_Memory_Unlock 0009  
                          _TouchPower 0787               __end_of__initialization 003C  
                           ?_LED_Main 0070                   setSw_Enable@command 0073  
                      __pcstackCOMMON 0070                          __pidataBANK1 0604  
                           ?_TMR0_ISR 0070                             ?_TMR0_Set 0070  
                  _LED_Initialization 06E5         ??_Flash_Memory_Initialization 0075  
                           ?_WDT_Main 0070                   ?_LED_Initialization 0070  
                __size_of_setLED_Main 0043                            __pbssBANK0 0020  
                          __pbssBANK1 00C0                            __pbssBANK2 0120  
                           ?_Fosc_Set 0070                           _Buzzer_Main 0216  
                             ?_IO_Set 0070                            ??_LED_Main 0076  
                     __CFG_VCAPEN$OFF 0000                         ??_Switch_Main 0076  
                ??_LED_Initialization 0076                     LedPointSelect@led 0072  
                         setBuz@count 0064                            __pmaintext 052E  
                          ??_TMR0_ISR 0070                            ??_TMR0_Set 0071  
                          __pintentry 0004                ??_setSw_Initialization 0075  
                       ?_setSw_Enable 0070                               ?_setLED 0073  
                             _ADC_Set 0767                               ?_setBuz 007A  
                          ??_WDT_Main 0071                               _IOC_ISR 0758  
                             _IOC_Set 0720                               _INT_ISR 076E  
                             _INT_Set 0781                     _Flash_Memory_Main 04A6  
                   _Flash_Memory_Read 069F                    ?_Flash_Memory_Main 0070  
                  ?_Flash_Memory_Read 0070                               _WDT_Set 068B  
                          ??_Fosc_Set 0071                           ?_TouchPower 0070  
                     __size_of_IO_Set 0018                   ??_Flash_Memory_Main 0078  
                 ??_Flash_Memory_Read 0071                               _VarLED1 0055  
                             _VarLED2 0059                               _VarLED3 005D  
                             ___awdiv 0453                        ??_setSw_Enable 0073  
                 __end_of_Switch_Main 0739               ??_Buzzer_Initialization 0071  
                             __myMain 00C0                       __size_of_setLED 0075  
                     __size_of_setBuz 006A                               __ptext1 0317  
                             __ptext2 05E2                               __ptext3 038A  
                             __ptext4 0453                               __ptext5 06B2  
                             __ptext6 065A                               __ptext7 0790  
                             __ptext8 072D                               __ptext9 0040  
                        __size_of_ISR 0012             __end_of_Flash_Memory_Main 04EB  
           __end_of_Flash_Memory_Read 06B2               ??_myMain_Initialization 0071  
                             _my_Main 0317                               _product 006C  
                      _LedPointSelect 0591                               clrloop0 0776  
      __size_of_Switch_Initialization 0011         __end_of_Switch_Initialization 06D5  
                end_of_initialization 003C            __end_of_Flash_Memory_Write 0591  
                             init_ram 077B                  Flash_Memory_Read@ret 0074  
                             initloop 077C                            _setSw_Main 0040  
                Flash_Memory_Modify@i 0077                 _setLED_Initialization 06F5  
       __size_of_Flash_Memory_Erasing 000C                   _Flash_Memory_Modify 03F4  
                 _Flash_Memory_Unlock 074F                   __size_of_TouchPower 0005  
            setLED_Initialization@led 0075                setSw_Initialization@sw 0075  
                  _Mcu_Initialization 0640                      __CFG_FOSC$INTOSC 0000  
                        ?_Buz_Counter 0070                __end_of_LedPointSelect 05BA  
                 ?_Mcu_Initialization 0070                  ?_Flash_Memory_Modify 0070  
                ?_Flash_Memory_Unlock 0070                        __end_of_IO_Set 068B  
                         _Switch_Main 072D                     __size_of_LED_Main 0010  
                ??_Mcu_Initialization 0072                         ?_WDT_Clearing 0070  
                   __size_of_TMR0_ISR 0028                     __size_of_TMR0_Set 000D  
                      __end_of_setLED 0317                        __end_of_setBuz 03F4  
          __size_of_Flash_Memory_Main 0045            __size_of_Flash_Memory_Read 0013  
                   __size_of_WDT_Main 0019                   start_initialization 0018  
                     ?_LedPointSelect 0070                           __end_of_ISR 0016  
               ??_Flash_Memory_Modify 0075                 ??_Flash_Memory_Unlock 0071  
                __end_of_setSw_Enable 0604                          ?_Buzzer_Main 0070  
                            ??_IO_Set 0071                             _VarErrLED 0051  
                         ?_setSw_Main 0070                ?_setLED_Initialization 0070  
                   __size_of_Fosc_Set 0004                             _VarMemory 0120  
                           _VarTimer0 0049                        ??_WDT_Clearing 0071  
              __size_of_SwPointSelect 001C                           __pdataBANK1 00A0  
                            ??_setLED 0074                              ?_ADC_Set 0070  
                            ??_setBuz 0063                         ??_setLED_Main 0073  
                            ?_IOC_ISR 0070                           __pbssCOMMON 007C  
                            ?_IOC_Set 0070                             ___latbits 0003  
                            ?_INT_ISR 0070                         __pcstackBANK0 0063  
                            ?_INT_Set 0070                              ?_WDT_Set 0070  
                        ??_TouchPower 0071                             __pnvBANK0 0069  
         __size_of_LED_Initialization 0010                            setBuz@time 007A  
 __end_of_Flash_Memory_Initialization 0216           _Flash_Memory_Initialization 014C  
                            ?___awdiv 0071         __size_of_setSw_Initialization 0007  
      __size_of_Buzzer_Initialization 000A         __end_of_Buzzer_Initialization 074F  
                  __end_of_TouchPower 078C                   __size_of_setSw_Main 010C  
                            ?_my_Main 0070        __size_of_myMain_Initialization 0012  
       __end_of_myMain_Initialization 06C4                         _SwPointSelect 0624  
                __size_of_Buz_Counter 000F                   __end_of_setLED_Main 052E  
                            _LED_Main 06D5                       SwPointSelect@sw 0072  
                           clear_ram0 0775                              _GO_nDONE 04E9  
                  _Flash_Memory_Write 0564                              _TMR0_ISR 05BA  
                            _TMR0_Set 0713                              _WDT_Main 065A  
                    __size_of_ADC_Set 0007                   ?_Flash_Memory_Write 0070  
               __size_of_setSw_Enable 0022                          setSw_Main@sw 0075  
                    __size_of_IOC_ISR 0008                      __size_of_IOC_Set 000D  
        __end_of_Flash_Memory_Erasing 0745                        ?_SwPointSelect 0070  
                    __size_of_INT_ISR 0007                        setLED_Main@led 0075  
                __end_of_WDT_Clearing 0792                      __size_of_INT_Set 0006  
                            _Fosc_Set 078C                      __size_of_WDT_Set 0014  
               _Switch_Initialization 06C4                  ??_Flash_Memory_Write 0071  
                __size_of_Buzzer_Main 008C                          ?_Switch_Main 0070  
        Flash_Memory_Initialization@i 0076                             setLED@led 0074  
                    __size_of___awdiv 0053                          _setSw_Enable 05E2  
                    ??_LedPointSelect 0071                           _setLED_Main 04EB  
                    __size_of_my_Main 0073                              __ptext10 0624  
                            __ptext11 06C4                              __ptext20 078C  
                            __ptext12 0760                              __ptext21 0767  
                            __ptext13 0787                              __ptext30 0739  
                            __ptext22 06D5                              __ptext14 0640  
                            __ptext31 014C                              __ptext23 04EB  
                            __ptext15 068B                              __ptext40 0758  
                            __ptext32 0564                              __ptext24 06E5  
                            __ptext16 0713                              __ptext41 076E  
                            __ptext33 074F                              __ptext25 06F5  
                            __ptext17 0673                              __ptext34 069F  
                            __ptext26 02A2                              __ptext18 0720  
                            __ptext35 0216                              __ptext27 0591  
                            __ptext19 0781                              __ptext36 0745  
                            __ptext28 04A6                              __ptext29 03F4  
                            __ptext38 05BA                              __ptext39 0704  
                            __product 00A0               ??_setLED_Initialization 0075  
                        ??_setSw_Main 0073                         setLED@command 0073  
                       __size_of_main 0036           __size_of_Mcu_Initialization 001A  
                            main@argc 0065                              main@argv 0067  
         __end_of_Flash_Memory_Modify 0453           __end_of_Flash_Memory_Unlock 0758  
                     ??_SwPointSelect 0071                    __end_of_setSw_Main 014C  
                         pic14e$flags 007E                              intlevel1 0000  
              ?_Switch_Initialization 0070                  _Flash_Memory_Erasing 0739  
                          _OPTION_REG 0095                 __size_of_WDT_Clearing 0002  
__size_of_Flash_Memory_Initialization 00CA          __end_of_setSw_Initialization 0767  
          __end_of_LED_Initialization 06F5  
