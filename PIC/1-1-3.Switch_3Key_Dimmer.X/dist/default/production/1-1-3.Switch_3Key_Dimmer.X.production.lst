

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Mar 30 11:46:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	text70,local,class=CODE,merge=1,delta=2
    92                           	psect	text71,local,class=CODE,merge=1,delta=2
    93                           	psect	text72,local,class=CODE,merge=1,delta=2
    94                           	psect	text73,local,class=CODE,merge=1,delta=2
    95                           	psect	text74,local,class=CODE,merge=1,delta=2
    96                           	psect	text75,local,class=CODE,merge=1,delta=2
    97                           	psect	text76,local,class=CODE,merge=1,delta=2
    98                           	psect	text77,local,class=CODE,merge=1,delta=2
    99                           	psect	text78,local,class=CODE,merge=1,delta=2
   100                           	psect	text79,local,class=CODE,merge=1,delta=2
   101                           	psect	text80,local,class=CODE,merge=1,delta=2
   102                           	psect	text81,local,class=CODE,merge=1,delta=2
   103                           	psect	text82,local,class=CODE,merge=1,delta=2
   104                           	psect	text83,local,class=CODE,merge=1,delta=2
   105                           	psect	text84,local,class=CODE,merge=1,delta=2
   106                           	psect	text85,local,class=CODE,merge=1,delta=2
   107                           	psect	text86,local,class=CODE,merge=1,delta=2
   108                           	psect	text87,local,class=CODE,merge=1,delta=2
   109                           	psect	text88,local,class=CODE,merge=1,delta=2
   110                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text92,local,class=CODE,merge=1,delta=2
   114                           	psect	text93,local,class=CODE,merge=1,delta=2
   115                           	psect	text94,local,class=CODE,merge=1,delta=2
   116                           	psect	text95,local,class=CODE,merge=1,delta=2
   117                           	psect	text96,local,class=CODE,merge=1,delta=2
   118                           	psect	text97,local,class=CODE,merge=1,delta=2
   119                           	psect	text98,local,class=CODE,merge=1,delta=2
   120                           	psect	text99,local,class=CODE,merge=1,delta=2
   121                           	psect	text100,local,class=CODE,merge=1,delta=2
   122                           	psect	text101,local,class=CODE,merge=1,delta=2
   123                           	psect	text102,local,class=CODE,merge=1,delta=2
   124                           	psect	text103,local,class=CODE,merge=1,delta=2
   125                           	psect	text104,local,class=CODE,merge=1,delta=2
   126                           	psect	text105,local,class=CODE,merge=1,delta=2
   127                           	psect	text106,local,class=CODE,merge=1,delta=2
   128                           	psect	text107,local,class=CODE,merge=1,delta=2
   129                           	psect	text108,local,class=CODE,merge=1,delta=2
   130                           	psect	text109,local,class=CODE,merge=1,delta=2
   131                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text111,local,class=CODE,merge=1,delta=2
   133                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text113,local,class=CODE,merge=1,delta=2
   135                           	psect	text114,local,class=CODE,merge=1,delta=2
   136                           	psect	text115,local,class=CODE,merge=1,delta=2
   137                           	psect	text116,local,class=CODE,merge=1,delta=2
   138                           	psect	text117,local,class=CODE,merge=1,delta=2
   139                           	psect	text118,local,class=CODE,merge=1,delta=2
   140                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text121,local,class=CODE,merge=1,delta=2
   143                           	psect	text122,local,class=CODE,merge=1,delta=2
   144                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text126,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text127,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text128,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   155                           	dabs	1,0x7E,2
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  011D                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  018E                     	;# 
   208  0191                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0193                     	;# 
   212  0193                     	;# 
   213  0194                     	;# 
   214  0195                     	;# 
   215  0196                     	;# 
   216  0197                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  019C                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019F                     	;# 
   228  020D                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0216                     	;# 
   243  0217                     	;# 
   244  0217                     	;# 
   245  0291                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0293                     	;# 
   249  0298                     	;# 
   250  0298                     	;# 
   251  0299                     	;# 
   252  029A                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0FE4                     	;# 
   257  0FE5                     	;# 
   258  0FE6                     	;# 
   259  0FE7                     	;# 
   260  0FE8                     	;# 
   261  0FE9                     	;# 
   262  0FEA                     	;# 
   263  0FEB                     	;# 
   264  0FED                     	;# 
   265  0FEE                     	;# 
   266  0FEF                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  0010                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  011D                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018E                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0194                     	;# 
   325  0195                     	;# 
   326  0196                     	;# 
   327  0197                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020D                     	;# 
   340  0210                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0090                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0095                     	;# 
   412  0096                     	;# 
   413  0097                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  011D                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  018E                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0197                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020D                     	;# 
   451  0210                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0298                     	;# 
   472  0298                     	;# 
   473  0299                     	;# 
   474  029A                     	;# 
   475  0394                     	;# 
   476  0395                     	;# 
   477  0396                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  011D                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  018E                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0194                     	;# 
   547  0195                     	;# 
   548  0196                     	;# 
   549  0197                     	;# 
   550  0199                     	;# 
   551  019A                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019C                     	;# 
   557  019C                     	;# 
   558  019D                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  020D                     	;# 
   562  0210                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0216                     	;# 
   575  0216                     	;# 
   576  0217                     	;# 
   577  0217                     	;# 
   578  0291                     	;# 
   579  0291                     	;# 
   580  0292                     	;# 
   581  0293                     	;# 
   582  0298                     	;# 
   583  0298                     	;# 
   584  0299                     	;# 
   585  029A                     	;# 
   586  0394                     	;# 
   587  0395                     	;# 
   588  0396                     	;# 
   589  0FE4                     	;# 
   590  0FE5                     	;# 
   591  0FE6                     	;# 
   592  0FE7                     	;# 
   593  0FE8                     	;# 
   594  0FE9                     	;# 
   595  0FEA                     	;# 
   596  0FEB                     	;# 
   597  0FED                     	;# 
   598  0FEE                     	;# 
   599  0FEF                     	;# 
   600  0000                     	;# 
   601  0001                     	;# 
   602  0002                     	;# 
   603  0003                     	;# 
   604  0004                     	;# 
   605  0005                     	;# 
   606  0006                     	;# 
   607  0007                     	;# 
   608  0008                     	;# 
   609  0009                     	;# 
   610  000A                     	;# 
   611  000B                     	;# 
   612  000C                     	;# 
   613  000D                     	;# 
   614  000E                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008D                     	;# 
   629  008E                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0099                     	;# 
   637  009A                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  011D                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  018E                     	;# 
   652  0191                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0197                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  020D                     	;# 
   673  0210                     	;# 
   674  0211                     	;# 
   675  0211                     	;# 
   676  0212                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0214                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0291                     	;# 
   690  0291                     	;# 
   691  0292                     	;# 
   692  0293                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  008E                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  010E                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  011D                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  018E                     	;# 
   763  0191                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0193                     	;# 
   767  0193                     	;# 
   768  0194                     	;# 
   769  0195                     	;# 
   770  0196                     	;# 
   771  0197                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019D                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  020D                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0298                     	;# 
   805  0298                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  0394                     	;# 
   809  0395                     	;# 
   810  0396                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  0010                     	;# 
   838  0011                     	;# 
   839  0012                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  008C                     	;# 
   850  008D                     	;# 
   851  008E                     	;# 
   852  0090                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0099                     	;# 
   859  009A                     	;# 
   860  009B                     	;# 
   861  009B                     	;# 
   862  009C                     	;# 
   863  009D                     	;# 
   864  009E                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010E                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  011D                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  0191                     	;# 
   875  0191                     	;# 
   876  0192                     	;# 
   877  0193                     	;# 
   878  0193                     	;# 
   879  0194                     	;# 
   880  0195                     	;# 
   881  0196                     	;# 
   882  0197                     	;# 
   883  0199                     	;# 
   884  019A                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019D                     	;# 
   892  019E                     	;# 
   893  019F                     	;# 
   894  020D                     	;# 
   895  0210                     	;# 
   896  0211                     	;# 
   897  0211                     	;# 
   898  0212                     	;# 
   899  0212                     	;# 
   900  0213                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0214                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0215                     	;# 
   907  0216                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0217                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0298                     	;# 
   916  0298                     	;# 
   917  0299                     	;# 
   918  029A                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  0FE4                     	;# 
   923  0FE5                     	;# 
   924  0FE6                     	;# 
   925  0FE7                     	;# 
   926  0FE8                     	;# 
   927  0FE9                     	;# 
   928  0FEA                     	;# 
   929  0FEB                     	;# 
   930  0FED                     	;# 
   931  0FEE                     	;# 
   932  0FEF                     	;# 
   933  0000                     	;# 
   934  0001                     	;# 
   935  0002                     	;# 
   936  0003                     	;# 
   937  0004                     	;# 
   938  0005                     	;# 
   939  0006                     	;# 
   940  0007                     	;# 
   941  0008                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  0010                     	;# 
   949  0011                     	;# 
   950  0012                     	;# 
   951  0015                     	;# 
   952  0016                     	;# 
   953  0016                     	;# 
   954  0017                     	;# 
   955  0018                     	;# 
   956  0019                     	;# 
   957  001A                     	;# 
   958  001B                     	;# 
   959  001C                     	;# 
   960  008C                     	;# 
   961  008D                     	;# 
   962  008E                     	;# 
   963  0090                     	;# 
   964  0091                     	;# 
   965  0092                     	;# 
   966  0095                     	;# 
   967  0096                     	;# 
   968  0097                     	;# 
   969  0099                     	;# 
   970  009A                     	;# 
   971  009B                     	;# 
   972  009B                     	;# 
   973  009C                     	;# 
   974  009D                     	;# 
   975  009E                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0116                     	;# 
   980  0117                     	;# 
   981  011D                     	;# 
   982  018C                     	;# 
   983  018D                     	;# 
   984  018E                     	;# 
   985  0191                     	;# 
   986  0191                     	;# 
   987  0192                     	;# 
   988  0193                     	;# 
   989  0193                     	;# 
   990  0194                     	;# 
   991  0195                     	;# 
   992  0196                     	;# 
   993  0197                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019C                     	;# 
  1001  019C                     	;# 
  1002  019D                     	;# 
  1003  019E                     	;# 
  1004  019F                     	;# 
  1005  020D                     	;# 
  1006  0210                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0216                     	;# 
  1019  0216                     	;# 
  1020  0217                     	;# 
  1021  0217                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0298                     	;# 
  1027  0298                     	;# 
  1028  0299                     	;# 
  1029  029A                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  0FE4                     	;# 
  1034  0FE5                     	;# 
  1035  0FE6                     	;# 
  1036  0FE7                     	;# 
  1037  0FE8                     	;# 
  1038  0FE9                     	;# 
  1039  0FEA                     	;# 
  1040  0FEB                     	;# 
  1041  0FED                     	;# 
  1042  0FEE                     	;# 
  1043  0FEF                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0008                     	;# 
  1053  0009                     	;# 
  1054  000A                     	;# 
  1055  000B                     	;# 
  1056  000C                     	;# 
  1057  000D                     	;# 
  1058  000E                     	;# 
  1059  0010                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0015                     	;# 
  1063  0016                     	;# 
  1064  0016                     	;# 
  1065  0017                     	;# 
  1066  0018                     	;# 
  1067  0019                     	;# 
  1068  001A                     	;# 
  1069  001B                     	;# 
  1070  001C                     	;# 
  1071  008C                     	;# 
  1072  008D                     	;# 
  1073  008E                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  011D                     	;# 
  1093  018C                     	;# 
  1094  018D                     	;# 
  1095  018E                     	;# 
  1096  0191                     	;# 
  1097  0191                     	;# 
  1098  0192                     	;# 
  1099  0193                     	;# 
  1100  0193                     	;# 
  1101  0194                     	;# 
  1102  0195                     	;# 
  1103  0196                     	;# 
  1104  0197                     	;# 
  1105  0199                     	;# 
  1106  019A                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019C                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020D                     	;# 
  1117  0210                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0298                     	;# 
  1138  0298                     	;# 
  1139  0299                     	;# 
  1140  029A                     	;# 
  1141  0394                     	;# 
  1142  0395                     	;# 
  1143  0396                     	;# 
  1144  0FE4                     	;# 
  1145  0FE5                     	;# 
  1146  0FE6                     	;# 
  1147  0FE7                     	;# 
  1148  0FE8                     	;# 
  1149  0FE9                     	;# 
  1150  0FEA                     	;# 
  1151  0FEB                     	;# 
  1152  0FED                     	;# 
  1153  0FEE                     	;# 
  1154  0FEF                     	;# 
  1155  0000                     	;# 
  1156  0001                     	;# 
  1157  0002                     	;# 
  1158  0003                     	;# 
  1159  0004                     	;# 
  1160  0005                     	;# 
  1161  0006                     	;# 
  1162  0007                     	;# 
  1163  0008                     	;# 
  1164  0009                     	;# 
  1165  000A                     	;# 
  1166  000B                     	;# 
  1167  000C                     	;# 
  1168  000D                     	;# 
  1169  000E                     	;# 
  1170  0010                     	;# 
  1171  0011                     	;# 
  1172  0012                     	;# 
  1173  0015                     	;# 
  1174  0016                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  0019                     	;# 
  1179  001A                     	;# 
  1180  001B                     	;# 
  1181  001C                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0095                     	;# 
  1189  0096                     	;# 
  1190  0097                     	;# 
  1191  0099                     	;# 
  1192  009A                     	;# 
  1193  009B                     	;# 
  1194  009B                     	;# 
  1195  009C                     	;# 
  1196  009D                     	;# 
  1197  009E                     	;# 
  1198  010C                     	;# 
  1199  010D                     	;# 
  1200  010E                     	;# 
  1201  0116                     	;# 
  1202  0117                     	;# 
  1203  011D                     	;# 
  1204  018C                     	;# 
  1205  018D                     	;# 
  1206  018E                     	;# 
  1207  0191                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0193                     	;# 
  1211  0193                     	;# 
  1212  0194                     	;# 
  1213  0195                     	;# 
  1214  0196                     	;# 
  1215  0197                     	;# 
  1216  0199                     	;# 
  1217  019A                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019C                     	;# 
  1223  019C                     	;# 
  1224  019D                     	;# 
  1225  019E                     	;# 
  1226  019F                     	;# 
  1227  020D                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0291                     	;# 
  1245  0291                     	;# 
  1246  0292                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  0394                     	;# 
  1253  0395                     	;# 
  1254  0396                     	;# 
  1255  0FE4                     	;# 
  1256  0FE5                     	;# 
  1257  0FE6                     	;# 
  1258  0FE7                     	;# 
  1259  0FE8                     	;# 
  1260  0FE9                     	;# 
  1261  0FEA                     	;# 
  1262  0FEB                     	;# 
  1263  0FED                     	;# 
  1264  0FEE                     	;# 
  1265  0FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000D                     	;# 
  1280  000E                     	;# 
  1281  0010                     	;# 
  1282  0011                     	;# 
  1283  0012                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  0090                     	;# 
  1297  0091                     	;# 
  1298  0092                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0097                     	;# 
  1302  0099                     	;# 
  1303  009A                     	;# 
  1304  009B                     	;# 
  1305  009B                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009E                     	;# 
  1309  010C                     	;# 
  1310  010D                     	;# 
  1311  010E                     	;# 
  1312  0116                     	;# 
  1313  0117                     	;# 
  1314  011D                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  0191                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  0193                     	;# 
  1322  0193                     	;# 
  1323  0194                     	;# 
  1324  0195                     	;# 
  1325  0196                     	;# 
  1326  0197                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019B                     	;# 
  1331  019B                     	;# 
  1332  019B                     	;# 
  1333  019C                     	;# 
  1334  019C                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019F                     	;# 
  1338  020D                     	;# 
  1339  0210                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0213                     	;# 
  1346  0214                     	;# 
  1347  0214                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0216                     	;# 
  1352  0216                     	;# 
  1353  0217                     	;# 
  1354  0217                     	;# 
  1355  0291                     	;# 
  1356  0291                     	;# 
  1357  0292                     	;# 
  1358  0293                     	;# 
  1359  0298                     	;# 
  1360  0298                     	;# 
  1361  0299                     	;# 
  1362  029A                     	;# 
  1363  0394                     	;# 
  1364  0395                     	;# 
  1365  0396                     	;# 
  1366  0FE4                     	;# 
  1367  0FE5                     	;# 
  1368  0FE6                     	;# 
  1369  0FE7                     	;# 
  1370  0FE8                     	;# 
  1371  0FE9                     	;# 
  1372  0FEA                     	;# 
  1373  0FEB                     	;# 
  1374  0FED                     	;# 
  1375  0FEE                     	;# 
  1376  0FEF                     	;# 
  1377  0000                     	;# 
  1378  0001                     	;# 
  1379  0002                     	;# 
  1380  0003                     	;# 
  1381  0004                     	;# 
  1382  0005                     	;# 
  1383  0006                     	;# 
  1384  0007                     	;# 
  1385  0008                     	;# 
  1386  0009                     	;# 
  1387  000A                     	;# 
  1388  000B                     	;# 
  1389  000C                     	;# 
  1390  000D                     	;# 
  1391  000E                     	;# 
  1392  0010                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0015                     	;# 
  1396  0016                     	;# 
  1397  0016                     	;# 
  1398  0017                     	;# 
  1399  0018                     	;# 
  1400  0019                     	;# 
  1401  001A                     	;# 
  1402  001B                     	;# 
  1403  001C                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  008E                     	;# 
  1407  0090                     	;# 
  1408  0091                     	;# 
  1409  0092                     	;# 
  1410  0095                     	;# 
  1411  0096                     	;# 
  1412  0097                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  010C                     	;# 
  1421  010D                     	;# 
  1422  010E                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019C                     	;# 
  1445  019C                     	;# 
  1446  019D                     	;# 
  1447  019E                     	;# 
  1448  019F                     	;# 
  1449  020D                     	;# 
  1450  0210                     	;# 
  1451  0211                     	;# 
  1452  0211                     	;# 
  1453  0212                     	;# 
  1454  0212                     	;# 
  1455  0213                     	;# 
  1456  0213                     	;# 
  1457  0214                     	;# 
  1458  0214                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0215                     	;# 
  1462  0216                     	;# 
  1463  0216                     	;# 
  1464  0217                     	;# 
  1465  0217                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0298                     	;# 
  1471  0298                     	;# 
  1472  0299                     	;# 
  1473  029A                     	;# 
  1474  0394                     	;# 
  1475  0395                     	;# 
  1476  0396                     	;# 
  1477  0FE4                     	;# 
  1478  0FE5                     	;# 
  1479  0FE6                     	;# 
  1480  0FE7                     	;# 
  1481  0FE8                     	;# 
  1482  0FE9                     	;# 
  1483  0FEA                     	;# 
  1484  0FEB                     	;# 
  1485  0FED                     	;# 
  1486  0FEE                     	;# 
  1487  0FEF                     	;# 
  1488  0000                     	;# 
  1489  0001                     	;# 
  1490  0002                     	;# 
  1491  0003                     	;# 
  1492  0004                     	;# 
  1493  0005                     	;# 
  1494  0006                     	;# 
  1495  0007                     	;# 
  1496  0008                     	;# 
  1497  0009                     	;# 
  1498  000A                     	;# 
  1499  000B                     	;# 
  1500  000C                     	;# 
  1501  000D                     	;# 
  1502  000E                     	;# 
  1503  0010                     	;# 
  1504  0011                     	;# 
  1505  0012                     	;# 
  1506  0015                     	;# 
  1507  0016                     	;# 
  1508  0016                     	;# 
  1509  0017                     	;# 
  1510  0018                     	;# 
  1511  0019                     	;# 
  1512  001A                     	;# 
  1513  001B                     	;# 
  1514  001C                     	;# 
  1515  008C                     	;# 
  1516  008D                     	;# 
  1517  008E                     	;# 
  1518  0090                     	;# 
  1519  0091                     	;# 
  1520  0092                     	;# 
  1521  0095                     	;# 
  1522  0096                     	;# 
  1523  0097                     	;# 
  1524  0099                     	;# 
  1525  009A                     	;# 
  1526  009B                     	;# 
  1527  009B                     	;# 
  1528  009C                     	;# 
  1529  009D                     	;# 
  1530  009E                     	;# 
  1531  010C                     	;# 
  1532  010D                     	;# 
  1533  010E                     	;# 
  1534  0116                     	;# 
  1535  0117                     	;# 
  1536  011D                     	;# 
  1537  018C                     	;# 
  1538  018D                     	;# 
  1539  018E                     	;# 
  1540  0191                     	;# 
  1541  0191                     	;# 
  1542  0192                     	;# 
  1543  0193                     	;# 
  1544  0193                     	;# 
  1545  0194                     	;# 
  1546  0195                     	;# 
  1547  0196                     	;# 
  1548  0197                     	;# 
  1549  0199                     	;# 
  1550  019A                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019C                     	;# 
  1556  019C                     	;# 
  1557  019D                     	;# 
  1558  019E                     	;# 
  1559  019F                     	;# 
  1560  020D                     	;# 
  1561  0210                     	;# 
  1562  0211                     	;# 
  1563  0211                     	;# 
  1564  0212                     	;# 
  1565  0212                     	;# 
  1566  0213                     	;# 
  1567  0213                     	;# 
  1568  0214                     	;# 
  1569  0214                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0216                     	;# 
  1574  0216                     	;# 
  1575  0217                     	;# 
  1576  0217                     	;# 
  1577  0291                     	;# 
  1578  0291                     	;# 
  1579  0292                     	;# 
  1580  0293                     	;# 
  1581  0298                     	;# 
  1582  0298                     	;# 
  1583  0299                     	;# 
  1584  029A                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0015                     	;# 
  1618  0016                     	;# 
  1619  0016                     	;# 
  1620  0017                     	;# 
  1621  0018                     	;# 
  1622  0019                     	;# 
  1623  001A                     	;# 
  1624  001B                     	;# 
  1625  001C                     	;# 
  1626  008C                     	;# 
  1627  008D                     	;# 
  1628  008E                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0092                     	;# 
  1632  0095                     	;# 
  1633  0096                     	;# 
  1634  0097                     	;# 
  1635  0099                     	;# 
  1636  009A                     	;# 
  1637  009B                     	;# 
  1638  009B                     	;# 
  1639  009C                     	;# 
  1640  009D                     	;# 
  1641  009E                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  0116                     	;# 
  1646  0117                     	;# 
  1647  011D                     	;# 
  1648  018C                     	;# 
  1649  018D                     	;# 
  1650  018E                     	;# 
  1651  0191                     	;# 
  1652  0191                     	;# 
  1653  0192                     	;# 
  1654  0193                     	;# 
  1655  0193                     	;# 
  1656  0194                     	;# 
  1657  0195                     	;# 
  1658  0196                     	;# 
  1659  0197                     	;# 
  1660  0199                     	;# 
  1661  019A                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019C                     	;# 
  1667  019C                     	;# 
  1668  019D                     	;# 
  1669  019E                     	;# 
  1670  019F                     	;# 
  1671  020D                     	;# 
  1672  0210                     	;# 
  1673  0211                     	;# 
  1674  0211                     	;# 
  1675  0212                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0213                     	;# 
  1679  0214                     	;# 
  1680  0214                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0215                     	;# 
  1684  0216                     	;# 
  1685  0216                     	;# 
  1686  0217                     	;# 
  1687  0217                     	;# 
  1688  0291                     	;# 
  1689  0291                     	;# 
  1690  0292                     	;# 
  1691  0293                     	;# 
  1692  0298                     	;# 
  1693  0298                     	;# 
  1694  0299                     	;# 
  1695  029A                     	;# 
  1696  0394                     	;# 
  1697  0395                     	;# 
  1698  0396                     	;# 
  1699  0FE4                     	;# 
  1700  0FE5                     	;# 
  1701  0FE6                     	;# 
  1702  0FE7                     	;# 
  1703  0FE8                     	;# 
  1704  0FE9                     	;# 
  1705  0FEA                     	;# 
  1706  0FEB                     	;# 
  1707  0FED                     	;# 
  1708  0FEE                     	;# 
  1709  0FEF                     	;# 
  1710  0000                     	;# 
  1711  0001                     	;# 
  1712  0002                     	;# 
  1713  0003                     	;# 
  1714  0004                     	;# 
  1715  0005                     	;# 
  1716  0006                     	;# 
  1717  0007                     	;# 
  1718  0008                     	;# 
  1719  0009                     	;# 
  1720  000A                     	;# 
  1721  000B                     	;# 
  1722  000C                     	;# 
  1723  000D                     	;# 
  1724  000E                     	;# 
  1725  0010                     	;# 
  1726  0011                     	;# 
  1727  0012                     	;# 
  1728  0015                     	;# 
  1729  0016                     	;# 
  1730  0016                     	;# 
  1731  0017                     	;# 
  1732  0018                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  0090                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0095                     	;# 
  1744  0096                     	;# 
  1745  0097                     	;# 
  1746  0099                     	;# 
  1747  009A                     	;# 
  1748  009B                     	;# 
  1749  009B                     	;# 
  1750  009C                     	;# 
  1751  009D                     	;# 
  1752  009E                     	;# 
  1753  010C                     	;# 
  1754  010D                     	;# 
  1755  010E                     	;# 
  1756  0116                     	;# 
  1757  0117                     	;# 
  1758  011D                     	;# 
  1759  018C                     	;# 
  1760  018D                     	;# 
  1761  018E                     	;# 
  1762  0191                     	;# 
  1763  0191                     	;# 
  1764  0192                     	;# 
  1765  0193                     	;# 
  1766  0193                     	;# 
  1767  0194                     	;# 
  1768  0195                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0199                     	;# 
  1772  019A                     	;# 
  1773  019B                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019C                     	;# 
  1778  019C                     	;# 
  1779  019D                     	;# 
  1780  019E                     	;# 
  1781  019F                     	;# 
  1782  020D                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0213                     	;# 
  1790  0214                     	;# 
  1791  0214                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0216                     	;# 
  1796  0216                     	;# 
  1797  0217                     	;# 
  1798  0217                     	;# 
  1799  0291                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0293                     	;# 
  1803  0298                     	;# 
  1804  0298                     	;# 
  1805  0299                     	;# 
  1806  029A                     	;# 
  1807  0394                     	;# 
  1808  0395                     	;# 
  1809  0396                     	;# 
  1810  0FE4                     	;# 
  1811  0FE5                     	;# 
  1812  0FE6                     	;# 
  1813  0FE7                     	;# 
  1814  0FE8                     	;# 
  1815  0FE9                     	;# 
  1816  0FEA                     	;# 
  1817  0FEB                     	;# 
  1818  0FED                     	;# 
  1819  0FEE                     	;# 
  1820  0FEF                     	;# 
  1821  0000                     	;# 
  1822  0001                     	;# 
  1823  0002                     	;# 
  1824  0003                     	;# 
  1825  0004                     	;# 
  1826  0005                     	;# 
  1827  0006                     	;# 
  1828  0007                     	;# 
  1829  0008                     	;# 
  1830  0009                     	;# 
  1831  000A                     	;# 
  1832  000B                     	;# 
  1833  000C                     	;# 
  1834  000D                     	;# 
  1835  000E                     	;# 
  1836  0010                     	;# 
  1837  0011                     	;# 
  1838  0012                     	;# 
  1839  0015                     	;# 
  1840  0016                     	;# 
  1841  0016                     	;# 
  1842  0017                     	;# 
  1843  0018                     	;# 
  1844  0019                     	;# 
  1845  001A                     	;# 
  1846  001B                     	;# 
  1847  001C                     	;# 
  1848  008C                     	;# 
  1849  008D                     	;# 
  1850  008E                     	;# 
  1851  0090                     	;# 
  1852  0091                     	;# 
  1853  0092                     	;# 
  1854  0095                     	;# 
  1855  0096                     	;# 
  1856  0097                     	;# 
  1857  0099                     	;# 
  1858  009A                     	;# 
  1859  009B                     	;# 
  1860  009B                     	;# 
  1861  009C                     	;# 
  1862  009D                     	;# 
  1863  009E                     	;# 
  1864  010C                     	;# 
  1865  010D                     	;# 
  1866  010E                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  011D                     	;# 
  1870  018C                     	;# 
  1871  018D                     	;# 
  1872  018E                     	;# 
  1873  0191                     	;# 
  1874  0191                     	;# 
  1875  0192                     	;# 
  1876  0193                     	;# 
  1877  0193                     	;# 
  1878  0194                     	;# 
  1879  0195                     	;# 
  1880  0196                     	;# 
  1881  0197                     	;# 
  1882  0199                     	;# 
  1883  019A                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019B                     	;# 
  1887  019B                     	;# 
  1888  019C                     	;# 
  1889  019C                     	;# 
  1890  019D                     	;# 
  1891  019E                     	;# 
  1892  019F                     	;# 
  1893  020D                     	;# 
  1894  0210                     	;# 
  1895  0211                     	;# 
  1896  0211                     	;# 
  1897  0212                     	;# 
  1898  0212                     	;# 
  1899  0213                     	;# 
  1900  0213                     	;# 
  1901  0214                     	;# 
  1902  0214                     	;# 
  1903  0215                     	;# 
  1904  0215                     	;# 
  1905  0215                     	;# 
  1906  0216                     	;# 
  1907  0216                     	;# 
  1908  0217                     	;# 
  1909  0217                     	;# 
  1910  0291                     	;# 
  1911  0291                     	;# 
  1912  0292                     	;# 
  1913  0293                     	;# 
  1914  0298                     	;# 
  1915  0298                     	;# 
  1916  0299                     	;# 
  1917  029A                     	;# 
  1918  0394                     	;# 
  1919  0395                     	;# 
  1920  0396                     	;# 
  1921  0FE4                     	;# 
  1922  0FE5                     	;# 
  1923  0FE6                     	;# 
  1924  0FE7                     	;# 
  1925  0FE8                     	;# 
  1926  0FE9                     	;# 
  1927  0FEA                     	;# 
  1928  0FEB                     	;# 
  1929  0FED                     	;# 
  1930  0FEE                     	;# 
  1931  0FEF                     	;# 
  1932  0000                     	;# 
  1933  0001                     	;# 
  1934  0002                     	;# 
  1935  0003                     	;# 
  1936  0004                     	;# 
  1937  0005                     	;# 
  1938  0006                     	;# 
  1939  0007                     	;# 
  1940  0008                     	;# 
  1941  0009                     	;# 
  1942  000A                     	;# 
  1943  000B                     	;# 
  1944  000C                     	;# 
  1945  000D                     	;# 
  1946  000E                     	;# 
  1947  0010                     	;# 
  1948  0011                     	;# 
  1949  0012                     	;# 
  1950  0015                     	;# 
  1951  0016                     	;# 
  1952  0016                     	;# 
  1953  0017                     	;# 
  1954  0018                     	;# 
  1955  0019                     	;# 
  1956  001A                     	;# 
  1957  001B                     	;# 
  1958  001C                     	;# 
  1959  008C                     	;# 
  1960  008D                     	;# 
  1961  008E                     	;# 
  1962  0090                     	;# 
  1963  0091                     	;# 
  1964  0092                     	;# 
  1965  0095                     	;# 
  1966  0096                     	;# 
  1967  0097                     	;# 
  1968  0099                     	;# 
  1969  009A                     	;# 
  1970  009B                     	;# 
  1971  009B                     	;# 
  1972  009C                     	;# 
  1973  009D                     	;# 
  1974  009E                     	;# 
  1975  010C                     	;# 
  1976  010D                     	;# 
  1977  010E                     	;# 
  1978  0116                     	;# 
  1979  0117                     	;# 
  1980  011D                     	;# 
  1981  018C                     	;# 
  1982  018D                     	;# 
  1983  018E                     	;# 
  1984  0191                     	;# 
  1985  0191                     	;# 
  1986  0192                     	;# 
  1987  0193                     	;# 
  1988  0193                     	;# 
  1989  0194                     	;# 
  1990  0195                     	;# 
  1991  0196                     	;# 
  1992  0197                     	;# 
  1993  0199                     	;# 
  1994  019A                     	;# 
  1995  019B                     	;# 
  1996  019B                     	;# 
  1997  019B                     	;# 
  1998  019B                     	;# 
  1999  019C                     	;# 
  2000  019C                     	;# 
  2001  019D                     	;# 
  2002  019E                     	;# 
  2003  019F                     	;# 
  2004  020D                     	;# 
  2005  0210                     	;# 
  2006  0211                     	;# 
  2007  0211                     	;# 
  2008  0212                     	;# 
  2009  0212                     	;# 
  2010  0213                     	;# 
  2011  0213                     	;# 
  2012  0214                     	;# 
  2013  0214                     	;# 
  2014  0215                     	;# 
  2015  0215                     	;# 
  2016  0215                     	;# 
  2017  0216                     	;# 
  2018  0216                     	;# 
  2019  0217                     	;# 
  2020  0217                     	;# 
  2021  0291                     	;# 
  2022  0291                     	;# 
  2023  0292                     	;# 
  2024  0293                     	;# 
  2025  0298                     	;# 
  2026  0298                     	;# 
  2027  0299                     	;# 
  2028  029A                     	;# 
  2029  0394                     	;# 
  2030  0395                     	;# 
  2031  0396                     	;# 
  2032  0FE4                     	;# 
  2033  0FE5                     	;# 
  2034  0FE6                     	;# 
  2035  0FE7                     	;# 
  2036  0FE8                     	;# 
  2037  0FE9                     	;# 
  2038  0FEA                     	;# 
  2039  0FEB                     	;# 
  2040  0FED                     	;# 
  2041  0FEE                     	;# 
  2042  0FEF                     	;# 
  2043                           
  2044                           	psect	idataBANK4
  2045  1173                     __pidataBANK4:	
  2046                           
  2047                           ;initializer for __product
  2048  1173  3463               	retlw	99
  2049  1174  3402               	retlw	2
  2050  1175  3400               	retlw	0
  2051  1176  3400               	retlw	0
  2052  1177  3400               	retlw	0
  2053  1178  3400               	retlw	0
  2054  1179  3400               	retlw	0
  2055  117A  3400               	retlw	0
  2056  117B  3400               	retlw	0
  2057  117C  3400               	retlw	0
  2058  117D  3400               	retlw	0
  2059  117E  3400               	retlw	0
  2060  117F  34FF               	retlw	255
  2061  1180  34FF               	retlw	255
  2062  1181  34FF               	retlw	255
  2063  1182  3400               	retlw	0
  2064  1183  3400               	retlw	0
  2065  1184  3400               	retlw	0
  2066  1185  3400               	retlw	0
  2067  1186  3400               	retlw	0
  2068  1187  3400               	retlw	0
  2069  1188  3400               	retlw	0
  2070  1189  3400               	retlw	0
  2071  118A  3400               	retlw	0
  2072  118B  3400               	retlw	0
  2073  118C  3400               	retlw	0
  2074  118D  3400               	retlw	0
  2075  118E  3400               	retlw	0
  2076  118F  3400               	retlw	0
  2077  1190  3400               	retlw	0
  2078  1191  3400               	retlw	0
  2079  1192  3400               	retlw	0
  2080                           
  2081                           	psect	stringtext
  2082  1000                     __pstringtext:	
  2083  1000                     _CC2500_registers_address:	
  2084  1000  3403               	retlw	3
  2085  1001  3416               	retlw	22
  2086  1002  3417               	retlw	23
  2087  1003  341E               	retlw	30
  2088  1004  341F               	retlw	31
  2089  1005  3420               	retlw	32
  2090  1006  342A               	retlw	42
  2091  1007  342B               	retlw	43
  2092  1008  340B               	retlw	11
  2093  1009  340C               	retlw	12
  2094  100A  340D               	retlw	13
  2095  100B  340E               	retlw	14
  2096  100C  340F               	retlw	15
  2097  100D  3410               	retlw	16
  2098  100E  3411               	retlw	17
  2099  100F  3412               	retlw	18
  2100  1010  3413               	retlw	19
  2101  1011  3414               	retlw	20
  2102  1012  340A               	retlw	10
  2103  1013  3415               	retlw	21
  2104  1014  3421               	retlw	33
  2105  1015  3422               	retlw	34
  2106  1016  3418               	retlw	24
  2107  1017  3419               	retlw	25
  2108  1018  341A               	retlw	26
  2109  1019  341B               	retlw	27
  2110  101A  341C               	retlw	28
  2111  101B  341D               	retlw	29
  2112  101C  3423               	retlw	35
  2113  101D  3424               	retlw	36
  2114  101E  3425               	retlw	37
  2115  101F  3426               	retlw	38
  2116  1020  3429               	retlw	41
  2117  1021  342C               	retlw	44
  2118  1022  342D               	retlw	45
  2119  1023  342E               	retlw	46
  2120  1024  3400               	retlw	0
  2121  1025  3401               	retlw	1
  2122  1026  3402               	retlw	2
  2123  1027  3407               	retlw	7
  2124  1028  3408               	retlw	8
  2125  1029  3409               	retlw	9
  2126  102A  3406               	retlw	6
  2127  102B  3404               	retlw	4
  2128  102C  3405               	retlw	5
  2129  102D  3427               	retlw	39
  2130  102E  3428               	retlw	40
  2131  102F                     __end_of_CC2500_registers_address:	
  2132  102F                     _CC2500_rfSettings:	
  2133  102F  3407               	retlw	7
  2134  1030  3407               	retlw	7
  2135  1031  3430               	retlw	48
  2136  1032  3487               	retlw	135
  2137  1033  346B               	retlw	107
  2138  1034  34F8               	retlw	248
  2139  1035  347F               	retlw	127
  2140  1036  343F               	retlw	63
  2141  1037  3409               	retlw	9
  2142  1038  3400               	retlw	0
  2143  1039  345C               	retlw	92
  2144  103A  34A7               	retlw	167
  2145  103B  3462               	retlw	98
  2146  103C  3486               	retlw	134
  2147  103D  3483               	retlw	131
  2148  103E  3403               	retlw	3
  2149  103F  3422               	retlw	34
  2150  1040  34F8               	retlw	248
  2151  1041  3400               	retlw	0
  2152  1042  3444               	retlw	68
  2153  1043  34B6               	retlw	182
  2154  1044  3410               	retlw	16
  2155  1045  3418               	retlw	24
  2156  1046  341D               	retlw	29
  2157  1047  341C               	retlw	28
  2158  1048  34C7               	retlw	199
  2159  1049  3400               	retlw	0
  2160  104A  34B2               	retlw	178
  2161  104B  34EA               	retlw	234
  2162  104C  340A               	retlw	10
  2163  104D  3400               	retlw	0
  2164  104E  3411               	retlw	17
  2165  104F  3459               	retlw	89
  2166  1050  3488               	retlw	136
  2167  1051  3431               	retlw	49
  2168  1052  340B               	retlw	11
  2169  1053  342F               	retlw	47
  2170  1054  342E               	retlw	46
  2171  1055  3406               	retlw	6
  2172  1056  3404               	retlw	4
  2173  1057  3405               	retlw	5
  2174  1058  3400               	retlw	0
  2175  1059  3430               	retlw	48
  2176  105A  34D3               	retlw	211
  2177  105B  3491               	retlw	145
  2178  105C  3441               	retlw	65
  2179  105D  3400               	retlw	0
  2180  105E                     __end_of_CC2500_rfSettings:	
  2181  105E                     _CC2500_patable_vaule:	
  2182  105E  34FE               	retlw	254
  2183  105F  34FE               	retlw	254
  2184  1060  34FE               	retlw	254
  2185  1061  34FE               	retlw	254
  2186  1062  34FE               	retlw	254
  2187  1063  34FE               	retlw	254
  2188  1064  34FE               	retlw	254
  2189  1065  34FE               	retlw	254
  2190  1066                     __end_of_CC2500_patable_vaule:	
  2191                           
  2192                           	psect	nvBANK0
  2193  006E                     __pnvBANK0:	
  2194  006E                     _product:	
  2195  006E                     	ds	1
  2196  000C                     _PORTA	set	12
  2197  000D                     _PORTB	set	13
  2198  000E                     _PORTC	set	14
  2199  0018                     _T1CON	set	24
  2200  0017                     _TMR1H	set	23
  2201  0016                     _TMR1L	set	22
  2202  005F                     _GIE	set	95
  2203  005B                     _IOCIE	set	91
  2204  0058                     _IOCIF	set	88
  2205  005E                     _PEIE	set	94
  2206  0060                     _RA0	set	96
  2207  0063                     _RA3	set	99
  2208  0064                     _RA4	set	100
  2209  0066                     _RA6	set	102
  2210  0067                     _RA7	set	103
  2211  0068                     _RB0	set	104
  2212  0069                     _RB1	set	105
  2213  006A                     _RB2	set	106
  2214  006B                     _RB3	set	107
  2215  006C                     _RB4	set	108
  2216  006D                     _RB5	set	109
  2217  0070                     _RC0	set	112
  2218  0071                     _RC1	set	113
  2219  0072                     _RC2	set	114
  2220  0074                     _RC4	set	116
  2221  0075                     _RC5	set	117
  2222  0076                     _RC6	set	118
  2223  0077                     _RC7	set	119
  2224  0088                     _TMR1IF	set	136
  2225  009D                     _ADCON0	set	157
  2226  009E                     _ADCON1	set	158
  2227  009C                     _ADRESH	set	156
  2228  009B                     _ADRESL	set	155
  2229  0099                     _OSCCON	set	153
  2230  008C                     _TRISA	set	140
  2231  008D                     _TRISB	set	141
  2232  008E                     _TRISC	set	142
  2233  0097                     _WDTCON	set	151
  2234  04E9                     _GO_nDONE	set	1257
  2235  0488                     _TMR1IE	set	1160
  2236  0117                     _FVRCON	set	279
  2237  010C                     _LATA	set	268
  2238  010D                     _LATB	set	269
  2239  010E                     _LATC	set	270
  2240  018C                     _ANSELA	set	396
  2241  018D                     _ANSELB	set	397
  2242  018E                     _ANSELC	set	398
  2243  0192                     _PMADRH	set	402
  2244  0191                     _PMADRL	set	401
  2245  0196                     _PMCON2	set	406
  2246  0194                     _PMDATH	set	404
  2247  0193                     _PMDATL	set	403
  2248  0CAE                     _CFGS	set	3246
  2249  0CAC                     _FREE	set	3244
  2250  0CAD                     _LWLO	set	3245
  2251  0CA8                     _RD	set	3240
  2252  0CA9                     _WR	set	3241
  2253  0CAA                     _WREN	set	3242
  2254  020D                     _WPUB	set	525
  2255  0396                     _IOCBF	set	918
  2256  0395                     _IOCBN	set	917
  2257  0394                     _IOCBP	set	916
  2258  1CB2                     _IOCBF2	set	7346
  2259                           
  2260                           ; #config settings
  2261  0000                     
  2262                           	psect	cinit
  2263  0021                     start_initialization:	
  2264  0021                     __initialization:	
  2265                           
  2266                           ; Clear objects allocated to BITCOMMON
  2267  0021  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2268                           
  2269                           ; Clear objects allocated to COMMON
  2270  0022  01FA               	clrf	__pbssCOMMON& (0+127)
  2271  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2272                           
  2273                           ; Clear objects allocated to BANK0
  2274  0024  01E8               	clrf	__pbssBANK0& (0+127)
  2275  0025  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2276  0026  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2277  0027  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2278  0028  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2279  0029  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  2280                           
  2281                           ; Clear objects allocated to BANK1
  2282  002A  30A0               	movlw	low __pbssBANK1
  2283  002B  0084               	movwf	4
  2284  002C  3000               	movlw	high __pbssBANK1
  2285  002D  0085               	movwf	5
  2286  002E  3050               	movlw	80
  2287  002F  319C  24CC  3180   	fcall	clear_ram0
  2288                           
  2289                           ; Clear objects allocated to BANK2
  2290  0032  3020               	movlw	low __pbssBANK2
  2291  0033  0084               	movwf	4
  2292  0034  3001               	movlw	high __pbssBANK2
  2293  0035  0085               	movwf	5
  2294  0036  3050               	movlw	80
  2295  0037  319C  24CC  3180   	fcall	clear_ram0
  2296                           
  2297                           ; Clear objects allocated to BANK3
  2298  003A  30A0               	movlw	low __pbssBANK3
  2299  003B  0084               	movwf	4
  2300  003C  3001               	movlw	high __pbssBANK3
  2301  003D  0085               	movwf	5
  2302  003E  3050               	movlw	80
  2303  003F  319C  24CC  3180   	fcall	clear_ram0
  2304                           
  2305                           ; Clear objects allocated to BANK4
  2306  0042  3020               	movlw	low __pbssBANK4
  2307  0043  0084               	movwf	4
  2308  0044  3002               	movlw	high __pbssBANK4
  2309  0045  0085               	movwf	5
  2310  0046  3025               	movlw	37
  2311  0047  319C  24CC  3180   	fcall	clear_ram0
  2312                           
  2313                           ; Initialize objects allocated to BANK4
  2314  004A  3073               	movlw	low __pidataBANK4
  2315  004B  0084               	movwf	4
  2316  004C  3091               	movlw	(high __pidataBANK4)| (0+128)
  2317  004D  0085               	movwf	5
  2318  004E  3045               	movlw	low __pdataBANK4
  2319  004F  0086               	movwf	6
  2320  0050  3002               	movlw	high __pdataBANK4
  2321  0051  0087               	movwf	7
  2322  0052  3020               	movlw	32
  2323  0053  319C  24C6         	fcall	init_ram
  2324  0055                     end_of_initialization:	
  2325                           ;End of C runtime variable initialization code
  2326                           
  2327  0055                     __end_of__initialization:	
  2328  0055  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2329  0056  0020               	movlb	0
  2330  0057  3196  2E9A         	ljmp	_main	;jump to C main() function
  2331                           
  2332                           	psect	bitbssCOMMON
  2333  03C8                     __pbitbssCOMMON:	
  2334  03C8                     _Receive_OK:	
  2335  03C8                     	ds	1
  2336  03C9                     _Transceive_OK:	
  2337  03C9                     	ds	1
  2338                           
  2339                           	psect	bssCOMMON
  2340  007A                     __pbssCOMMON:	
  2341  007A                     _LED:	
  2342  007A                     	ds	2
  2343                           
  2344                           	psect	bssBANK0
  2345  0068                     __pbssBANK0:	
  2346  0068                     _Cmd:	
  2347  0068                     	ds	1
  2348  0069                     _DelayOff:	
  2349  0069                     	ds	1
  2350  006A                     _DimmerLights:	
  2351  006A                     	ds	1
  2352  006B                     _SPI0Buffer:	
  2353  006B                     	ds	1
  2354  006C                     _Sw:	
  2355  006C                     	ds	1
  2356  006D                     _Tx_Length:	
  2357  006D                     	ds	1
  2358                           
  2359                           	psect	bssBANK1
  2360  00A0                     __pbssBANK1:	
  2361  00A0                     _DimmerIntr1:	
  2362  00A0                     	ds	16
  2363  00B0                     _RF1:	
  2364  00B0                     	ds	15
  2365  00BF                     _myMain:	
  2366  00BF                     	ds	13
  2367  00CC                     _Buz1:	
  2368  00CC                     	ds	12
  2369  00D8                     _Timer1:	
  2370  00D8                     	ds	3
  2371  00DB                     _RF_Count:	
  2372  00DB                     	ds	2
  2373  00DD                     _WDT:	
  2374  00DD                     	ds	2
  2375  00DF                     _CRC:	
  2376  00DF                     	ds	1
  2377  00E0                     _DimmerIntr:	
  2378  00E0                     	ds	1
  2379  00E1                     _Light:	
  2380  00E1                     	ds	1
  2381  00E2                     _RSSI:	
  2382  00E2                     	ds	1
  2383  00E3                     _Rx_Length:	
  2384  00E3                     	ds	1
  2385  00E4                     _SwDetect:	
  2386  00E4                     	ds	1
  2387  00E5                     _r_address:	
  2388  00E5                     	ds	1
  2389  00E6                     _r_data:	
  2390  00E6                     	ds	1
  2391  00E7                     _s_data:	
  2392  00E7                     	ds	1
  2393  00E8                     _VarErrLED:	
  2394  00E8                     	ds	4
  2395  00EC                     _VarLED1:	
  2396  00EC                     	ds	4
  2397                           
  2398                           	psect	bssBANK2
  2399  0120                     __pbssBANK2:	
  2400  0120                     _RF_Data:	
  2401  0120                     	ds	30
  2402  013E                     _DimmerIntr2:	
  2403  013E                     	ds	16
  2404  014E                     _DimmerIntr3:	
  2405  014E                     	ds	16
  2406  015E                     _DimmerLights1:	
  2407  015E                     	ds	9
  2408  0167                     _DimmerLights2:	
  2409  0167                     	ds	9
  2410                           
  2411                           	psect	bssBANK3
  2412  01A0                     __pbssBANK3:	
  2413  01A0                     _u1:	
  2414  01A0                     	ds	16
  2415  01B0                     _Dimmer:	
  2416  01B0                     	ds	5
  2417  01B5                     _DimmerLights3:	
  2418  01B5                     	ds	9
  2419  01BE                     _Sw1:	
  2420  01BE                     	ds	9
  2421  01C7                     _Sw2:	
  2422  01C7                     	ds	9
  2423  01D0                     _Sw3:	
  2424  01D0                     	ds	9
  2425  01D9                     _DlySw1:	
  2426  01D9                     	ds	5
  2427  01DE                     _DlySw2:	
  2428  01DE                     	ds	5
  2429  01E3                     _DlySw3:	
  2430  01E3                     	ds	5
  2431  01E8                     _VarLED2:	
  2432  01E8                     	ds	4
  2433  01EC                     _VarLED3:	
  2434  01EC                     	ds	4
  2435                           
  2436                           	psect	bssBANK4
  2437  0220                     __pbssBANK4:	
  2438  0220                     _Memory:	
  2439  0220                     	ds	37
  2440                           
  2441                           	psect	dataBANK4
  2442  0245                     __pdataBANK4:	
  2443  0245                     __product:	
  2444  0245                     	ds	32
  2445                           
  2446                           	psect	clrtext
  2447  1CCC                     clear_ram0:	
  2448                           ;	Called with FSR0 containing the base address, and
  2449                           ;	WREG with the size to clear
  2450                           
  2451  1CCC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2452  1CCD                     clrloop0:	
  2453  1CCD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2454  1CCE  3101               	addfsr 0,1
  2455  1CCF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2456  1CD0  2CCD               	goto	clrloop0	;have we reached the end yet?
  2457  1CD1  3400               	retlw	0	;all done for this memory range, return
  2458                           
  2459                           	psect	inittext
  2460  1CC6                     init_ram:	
  2461  1CC6  00FE               	movwf	126
  2462  1CC7                     initloop:	
  2463  1CC7  0012               	moviw fsr0++
  2464  1CC8  001E               	movwi fsr1++
  2465  1CC9  0BFE               	decfsz	126,f
  2466  1CCA  2CC7               	goto	initloop
  2467  1CCB  3400               	retlw	0
  2468                           
  2469                           	psect	cstackBANK4
  2470  0265                     __pcstackBANK4:	
  2471  0265                     ?_main:	
  2472  0265                     main@argc:	
  2473                           ; 2 bytes @ 0x0
  2474                           
  2475                           
  2476                           ; 2 bytes @ 0x0
  2477  0265                     	ds	2
  2478  0267                     main@argv:	
  2479                           
  2480                           ; 2 bytes @ 0x2
  2481  0267                     	ds	2
  2482                           
  2483                           	psect	cstackCOMMON
  2484  0070                     __pcstackCOMMON:	
  2485  0070                     ?_CC2500_WriteCommand:	
  2486  0070                     ?_RF_Timeout_Counter:	
  2487                           ; 0 bytes @ 0x0
  2488                           
  2489  0070                     ?_setRF_TimeoutCleared:	
  2490                           ; 0 bytes @ 0x0
  2491                           
  2492  0070                     ?_CC2500_WriteByte:	
  2493                           ; 0 bytes @ 0x0
  2494                           
  2495  0070                     ?_CC2500_ReadStatus:	
  2496                           ; 0 bytes @ 0x0
  2497                           
  2498  0070                     ?_CC2500_ReadByte:	
  2499                           ; 0 bytes @ 0x0
  2500                           
  2501  0070                     ?_CC2500_PowerRST:	
  2502                           ; 0 bytes @ 0x0
  2503                           
  2504  0070                     ?_CC2500_InitSetREG:	
  2505                           ; 0 bytes @ 0x0
  2506                           
  2507  0070                     ?_CC2500_InitPATable:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0070                     ?_CC2500_ClearTXFIFO:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0070                     ?_CC2500_ClearRXFIFO:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0070                     ?_CC2500_FrequencyCabr:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0070                     ?_CC2500_SIDLEMode:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0070                     ?_DlyOff_Initialization:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0070                     ?_DlyOff_Main:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0070                     ?_setDimmerLights_SwOn:	
  2529                           ; 0 bytes @ 0x0
  2530                           
  2531  0070                     ?_setDimmerLights_SwOff:	
  2532                           ; 0 bytes @ 0x0
  2533                           
  2534  0070                     ?_setMemory_Modify:	
  2535                           ; 0 bytes @ 0x0
  2536                           
  2537  0070                     ?_setDimmerLights_Initialization:	
  2538                           ; 0 bytes @ 0x0
  2539                           
  2540  0070                     ?_setDimmerLights_Main:	
  2541                           ; 0 bytes @ 0x0
  2542                           
  2543  0070                     ?_DimmerLights_DimmingFunction:	
  2544                           ; 0 bytes @ 0x0
  2545                           
  2546  0070                     ?_DimmerIntr_ValueCalculate:	
  2547                           ; 0 bytes @ 0x0
  2548                           
  2549  0070                     ?_setDimmerLights_DimmingClose:	
  2550                           ; 0 bytes @ 0x0
  2551                           
  2552  0070                     ?_setTxData:	
  2553                           ; 0 bytes @ 0x0
  2554                           
  2555  0070                     ?_setRF_TransceiveGO:	
  2556                           ; 0 bytes @ 0x0
  2557                           
  2558  0070                     ?_setLED_Initialization:	
  2559                           ; 0 bytes @ 0x0
  2560                           
  2561  0070                     ?_setLED_Main:	
  2562                           ; 0 bytes @ 0x0
  2563                           
  2564  0070                     ?_Fosc_Set:	
  2565                           ; 0 bytes @ 0x0
  2566                           
  2567  0070                     ?_IO_Set:	
  2568                           ; 0 bytes @ 0x0
  2569                           
  2570  0070                     ?_TMR1_Set:	
  2571                           ; 0 bytes @ 0x0
  2572                           
  2573  0070                     ?_ADC_Set:	
  2574                           ; 0 bytes @ 0x0
  2575                           
  2576  0070                     ?_IOC_Set:	
  2577                           ; 0 bytes @ 0x0
  2578                           
  2579  0070                     ?_WDT_Set:	
  2580                           ; 0 bytes @ 0x0
  2581                           
  2582  0070                     ?_TMR1_ISR:	
  2583                           ; 0 bytes @ 0x0
  2584                           
  2585  0070                     ?_IOC_ISR:	
  2586                           ; 0 bytes @ 0x0
  2587                           
  2588  0070                     ?_Timeout_Counter:	
  2589                           ; 0 bytes @ 0x0
  2590                           
  2591  0070                     ?_set_TimeoutCleared:	
  2592                           ; 0 bytes @ 0x0
  2593                           
  2594  0070                     ?_Flash_Memory_Write:	
  2595                           ; 0 bytes @ 0x0
  2596                           
  2597  0070                     ?_Flash_Memory_Modify:	
  2598                           ; 0 bytes @ 0x0
  2599                           
  2600  0070                     ?_WDT_Clearing:	
  2601                           ; 0 bytes @ 0x0
  2602                           
  2603  0070                     ?_myMain_Initialization:	
  2604                           ; 0 bytes @ 0x0
  2605                           
  2606  0070                     ?_Switch_Initialization:	
  2607                           ; 0 bytes @ 0x0
  2608                           
  2609  0070                     ?_RF_Initialization:	
  2610                           ; 0 bytes @ 0x0
  2611                           
  2612  0070                     ?_my_MainTimer:	
  2613                           ; 0 bytes @ 0x0
  2614                           
  2615  0070                     ?_Switch_Main:	
  2616                           ; 0 bytes @ 0x0
  2617                           
  2618  0070                     ?_RF_Main:	
  2619                           ; 0 bytes @ 0x0
  2620                           
  2621  0070                     ?_Exception_Main:	
  2622                           ; 0 bytes @ 0x0
  2623                           
  2624  0070                     ?_setRF_Initialization:	
  2625                           ; 0 bytes @ 0x0
  2626                           
  2627  0070                     ?_setRF_Main:	
  2628                           ; 0 bytes @ 0x0
  2629                           
  2630  0070                     ?_RF_RxDisable:	
  2631                           ; 0 bytes @ 0x0
  2632                           
  2633  0070                     ?_setData:	
  2634                           ; 0 bytes @ 0x0
  2635                           
  2636  0070                     ?_getRxData:	
  2637                           ; 0 bytes @ 0x0
  2638                           
  2639  0070                     ?_setLog_Code:	
  2640                           ; 0 bytes @ 0x0
  2641                           
  2642  0070                     ?_setControl_Lights_Table:	
  2643                           ; 0 bytes @ 0x0
  2644                           
  2645  0070                     ?_setRFSW_Control:	
  2646                           ; 0 bytes @ 0x0
  2647                           
  2648  0070                     ?_setRFSW_AdjControl:	
  2649                           ; 0 bytes @ 0x0
  2650                           
  2651  0070                     ?_setRF_AdjControl:	
  2652                           ; 0 bytes @ 0x0
  2653                           
  2654  0070                     ?_setSw_Initialization:	
  2655                           ; 0 bytes @ 0x0
  2656                           
  2657  0070                     ?_setSw_Main:	
  2658                           ; 0 bytes @ 0x0
  2659                           
  2660  0070                     ?_Buzzer_Initialization:	
  2661                           ; 0 bytes @ 0x0
  2662                           
  2663  0070                     ?_Buzzer_Main:	
  2664                           ; 0 bytes @ 0x0
  2665                           
  2666  0070                     ?_CC2500_TxData:	
  2667                           ; 0 bytes @ 0x0
  2668                           
  2669  0070                     ?_CC2500_RxData:	
  2670                           ; 0 bytes @ 0x0
  2671                           
  2672  0070                     ?_CC2500_PowerOnInitial:	
  2673                           ; 0 bytes @ 0x0
  2674                           
  2675  0070                     ?_DelayOffPointSelect:	
  2676                           ; 0 bytes @ 0x0
  2677                           
  2678  0070                     ?_DelayOff_Initialization:	
  2679                           ; 0 bytes @ 0x0
  2680                           
  2681  0070                     ?_DelayOff_Main:	
  2682                           ; 0 bytes @ 0x0
  2683                           
  2684  0070                     ?_DimmerIntr_Initialization:	
  2685                           ; 0 bytes @ 0x0
  2686                           
  2687  0070                     ?_DimmerLights_SelectPointer:	
  2688                           ; 0 bytes @ 0x0
  2689                           
  2690  0070                     ?_DimmerLights_Initialization:	
  2691                           ; 0 bytes @ 0x0
  2692                           
  2693  0070                     ?_setDimmerLights_DimmingOn:	
  2694                           ; 0 bytes @ 0x0
  2695                           
  2696  0070                     ?_DimmerLights_Main:	
  2697                           ; 0 bytes @ 0x0
  2698                           
  2699  0070                     ?_DimmerLights_IOC_1:	
  2700                           ; 0 bytes @ 0x0
  2701                           
  2702  0070                     ??_DimmerLights_IOC_1:	
  2703                           ; 0 bytes @ 0x0
  2704                           
  2705  0070                     ?_DimmerLights_TMR_1:	
  2706                           ; 0 bytes @ 0x0
  2707                           
  2708  0070                     ??_DimmerLights_TMR_1:	
  2709                           ; 0 bytes @ 0x0
  2710                           
  2711  0070                     ?_DimmerLights_IOC_2:	
  2712                           ; 0 bytes @ 0x0
  2713                           
  2714  0070                     ??_DimmerLights_IOC_2:	
  2715                           ; 0 bytes @ 0x0
  2716                           
  2717  0070                     ?_DimmerLights_TMR_2:	
  2718                           ; 0 bytes @ 0x0
  2719                           
  2720  0070                     ??_DimmerLights_TMR_2:	
  2721                           ; 0 bytes @ 0x0
  2722                           
  2723  0070                     ?_DimmerLights_IOC_3:	
  2724                           ; 0 bytes @ 0x0
  2725                           
  2726  0070                     ??_DimmerLights_IOC_3:	
  2727                           ; 0 bytes @ 0x0
  2728                           
  2729  0070                     ?_DimmerLights_TMR_3:	
  2730                           ; 0 bytes @ 0x0
  2731                           
  2732  0070                     ??_DimmerLights_TMR_3:	
  2733                           ; 0 bytes @ 0x0
  2734                           
  2735  0070                     ?_LedPointSelect:	
  2736                           ; 0 bytes @ 0x0
  2737                           
  2738  0070                     ?_LED_Initialization:	
  2739                           ; 0 bytes @ 0x0
  2740                           
  2741  0070                     ?_LED_Main:	
  2742                           ; 0 bytes @ 0x0
  2743                           
  2744  0070                     ?_Mcu_Initialization:	
  2745                           ; 0 bytes @ 0x0
  2746                           
  2747  0070                     ?_ISR:	
  2748                           ; 0 bytes @ 0x0
  2749                           
  2750  0070                     ?_Flash_Memory_Initialization:	
  2751                           ; 0 bytes @ 0x0
  2752                           
  2753  0070                     ?_Flash_Memory_Main:	
  2754                           ; 0 bytes @ 0x0
  2755                           
  2756  0070                     ?_Flash_Memory_Unlock:	
  2757                           ; 0 bytes @ 0x0
  2758                           
  2759  0070                     ?_Flash_Memory_Erasing:	
  2760                           ; 0 bytes @ 0x0
  2761                           
  2762  0070                     ?_setMemory_LoopSave:	
  2763                           ; 0 bytes @ 0x0
  2764                           
  2765  0070                     ?_WDT_Main:	
  2766                           ; 0 bytes @ 0x0
  2767                           
  2768  0070                     ?_setRF_Learn:	
  2769                           ; 0 bytes @ 0x0
  2770                           
  2771  0070                     ?_TouchPower:	
  2772                           ; 0 bytes @ 0x0
  2773                           
  2774  0070                     ?_SwPointSelect:	
  2775                           ; 0 bytes @ 0x0
  2776                           
  2777  0070                     ?_getDimmerLights_Status:	
  2778                           ; 0 bytes @ 0x0
  2779                           
  2780  0070                     ?_getDimmerLights_ValueToPercent:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  0070                     ?_getDimmerLights_PercentToValue:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  0070                     ?_getDimmerLights_Allow_Condition:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  0070                     ?_getMain_All_LightsStatus:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  0070                     ?_getCmd_Status:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  0070                     ?_Flash_Memory_Read:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  0070                     ?_getAll_Sw_KeyStatus:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  0070                     ?_getRF_KeyStatus:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  0070                     ?_getSw_KeyStatus:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  0070                     ?_getDelayOff_GO:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  0070                     ?_getDimmerIntr_DimmingValue:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     ?_getMain_All_Error_Status:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     setDimmerLights_Initialization@lights:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     getMain_All_Error_Status@command:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825                           
  2826                           ; 1 bytes @ 0x0
  2827  0070                     	ds	1
  2828  0071                     ??_TMR1_ISR:	
  2829  0071                     ??_IOC_ISR:	
  2830                           ; 0 bytes @ 0x1
  2831                           
  2832  0071                     ??_ISR:	
  2833                           ; 0 bytes @ 0x1
  2834                           
  2835                           
  2836                           ; 0 bytes @ 0x1
  2837  0071                     	ds	1
  2838  0072                     ??_RF_Timeout_Counter:	
  2839  0072                     ??_setRF_TimeoutCleared:	
  2840                           ; 0 bytes @ 0x2
  2841                           
  2842  0072                     ??_CC2500_WriteByte:	
  2843                           ; 0 bytes @ 0x2
  2844                           
  2845  0072                     ??_CC2500_ReadByte:	
  2846                           ; 0 bytes @ 0x2
  2847                           
  2848  0072                     ?_DelayTime_1us:	
  2849                           ; 0 bytes @ 0x2
  2850                           
  2851  0072                     ??_setMemory_Modify:	
  2852                           ; 0 bytes @ 0x2
  2853                           
  2854  0072                     ??_setDimmerLights_Initialization:	
  2855                           ; 0 bytes @ 0x2
  2856                           
  2857  0072                     ??_getDimmerLights_Allow_Condition:	
  2858                           ; 0 bytes @ 0x2
  2859                           
  2860  0072                     ??_getMain_All_LightsStatus:	
  2861                           ; 0 bytes @ 0x2
  2862                           
  2863  0072                     ??_DimmerIntr_ValueCalculate:	
  2864                           ; 0 bytes @ 0x2
  2865                           
  2866  0072                     ??_getCmd_Status:	
  2867                           ; 0 bytes @ 0x2
  2868                           
  2869  0072                     ?_setCmd_Status:	
  2870                           ; 0 bytes @ 0x2
  2871                           
  2872  0072                     ??_setTxData:	
  2873                           ; 0 bytes @ 0x2
  2874                           
  2875  0072                     ??_setRF_TransceiveGO:	
  2876                           ; 0 bytes @ 0x2
  2877                           
  2878  0072                     ??_Fosc_Set:	
  2879                           ; 0 bytes @ 0x2
  2880                           
  2881  0072                     ??_IO_Set:	
  2882                           ; 0 bytes @ 0x2
  2883                           
  2884  0072                     ??_TMR1_Set:	
  2885                           ; 0 bytes @ 0x2
  2886                           
  2887  0072                     ??_ADC_Set:	
  2888                           ; 0 bytes @ 0x2
  2889                           
  2890  0072                     ??_IOC_Set:	
  2891                           ; 0 bytes @ 0x2
  2892                           
  2893  0072                     ??_WDT_Set:	
  2894                           ; 0 bytes @ 0x2
  2895                           
  2896  0072                     ??_Timeout_Counter:	
  2897                           ; 0 bytes @ 0x2
  2898                           
  2899  0072                     ??_set_TimeoutCleared:	
  2900                           ; 0 bytes @ 0x2
  2901                           
  2902  0072                     ??_Flash_Memory_Read:	
  2903                           ; 0 bytes @ 0x2
  2904                           
  2905  0072                     ?_setMemory_Data:	
  2906                           ; 0 bytes @ 0x2
  2907                           
  2908  0072                     ??_Flash_Memory_Write:	
  2909                           ; 0 bytes @ 0x2
  2910                           
  2911  0072                     ??_getAll_Sw_KeyStatus:	
  2912                           ; 0 bytes @ 0x2
  2913                           
  2914  0072                     ??_WDT_Clearing:	
  2915                           ; 0 bytes @ 0x2
  2916                           
  2917  0072                     ??_myMain_Initialization:	
  2918                           ; 0 bytes @ 0x2
  2919                           
  2920  0072                     ??_setRF_Initialization:	
  2921                           ; 0 bytes @ 0x2
  2922                           
  2923  0072                     ??_getRF_KeyStatus:	
  2924                           ; 0 bytes @ 0x2
  2925                           
  2926  0072                     ??_RF_RxDisable:	
  2927                           ; 0 bytes @ 0x2
  2928                           
  2929  0072                     ??_setData:	
  2930                           ; 0 bytes @ 0x2
  2931                           
  2932  0072                     ??_getSw_KeyStatus:	
  2933                           ; 0 bytes @ 0x2
  2934                           
  2935  0072                     ??_Buzzer_Initialization:	
  2936                           ; 0 bytes @ 0x2
  2937                           
  2938  0072                     ??_Buzzer_Main:	
  2939                           ; 0 bytes @ 0x2
  2940                           
  2941  0072                     ??_DelayOffPointSelect:	
  2942                           ; 0 bytes @ 0x2
  2943                           
  2944  0072                     ?_setDimmerIntr_ControlStatus:	
  2945                           ; 0 bytes @ 0x2
  2946                           
  2947  0072                     ??_getDimmerIntr_DimmingValue:	
  2948                           ; 0 bytes @ 0x2
  2949                           
  2950  0072                     ?_setDimmerIntr_Dimming_Sw:	
  2951                           ; 0 bytes @ 0x2
  2952                           
  2953  0072                     ??_getDimmerIntr_Dimming_Sw:	
  2954                           ; 0 bytes @ 0x2
  2955                           
  2956  0072                     ?_setDimmerIntr_Dimming_RF:	
  2957                           ; 0 bytes @ 0x2
  2958                           
  2959  0072                     ??_DimmerLights_SelectPointer:	
  2960                           ; 0 bytes @ 0x2
  2961                           
  2962  0072                     ??_LedPointSelect:	
  2963                           ; 0 bytes @ 0x2
  2964                           
  2965  0072                     ??_Flash_Memory_Unlock:	
  2966                           ; 0 bytes @ 0x2
  2967                           
  2968  0072                     ??_Flash_Memory_Erasing:	
  2969                           ; 0 bytes @ 0x2
  2970                           
  2971  0072                     ??_setMemory_LoopSave:	
  2972                           ; 0 bytes @ 0x2
  2973                           
  2974  0072                     ??_WDT_Main:	
  2975                           ; 0 bytes @ 0x2
  2976                           
  2977  0072                     ??_getMain_All_Error_Status:	
  2978                           ; 0 bytes @ 0x2
  2979                           
  2980  0072                     ??_setRF_Learn:	
  2981                           ; 0 bytes @ 0x2
  2982                           
  2983  0072                     ??_TouchPower:	
  2984                           ; 0 bytes @ 0x2
  2985                           
  2986  0072                     ??_SwPointSelect:	
  2987                           ; 0 bytes @ 0x2
  2988                           
  2989  0072                     ?___bmul:	
  2990                           ; 0 bytes @ 0x2
  2991                           
  2992  0072                     ?_getBuz_GO:	
  2993                           ; 1 bytes @ 0x2
  2994                           
  2995  0072                     ?___awdiv:	
  2996                           ; 2 bytes @ 0x2
  2997                           
  2998  0072                     ?___lwdiv:	
  2999                           ; 2 bytes @ 0x2
  3000                           
  3001  0072                     ?___ftpack:	
  3002                           ; 2 bytes @ 0x2
  3003                           
  3004  0072                     setDimmerIntr_ControlStatus@command:	
  3005                           ; 3 bytes @ 0x2
  3006                           
  3007  0072                     setDimmerIntr_Dimming_Sw@command:	
  3008                           ; 1 bytes @ 0x2
  3009                           
  3010  0072                     getDimmerIntr_Dimming_Sw@status:	
  3011                           ; 1 bytes @ 0x2
  3012                           
  3013  0072                     setDimmerIntr_Dimming_RF@command:	
  3014                           ; 1 bytes @ 0x2
  3015                           
  3016  0072                     LedPointSelect@led:	
  3017                           ; 1 bytes @ 0x2
  3018                           
  3019  0072                     setMemory_Data@data:	
  3020                           ; 1 bytes @ 0x2
  3021                           
  3022  0072                     getMain_All_LightsStatus@status:	
  3023                           ; 1 bytes @ 0x2
  3024                           
  3025  0072                     getMain_All_Error_Status@status:	
  3026                           ; 1 bytes @ 0x2
  3027                           
  3028  0072                     setCmd_Status@cmd:	
  3029                           ; 1 bytes @ 0x2
  3030                           
  3031  0072                     getCmd_Status@number:	
  3032                           ; 1 bytes @ 0x2
  3033                           
  3034  0072                     getSw_KeyStatus@status:	
  3035                           ; 1 bytes @ 0x2
  3036                           
  3037  0072                     ___bmul@multiplicand:	
  3038                           ; 1 bytes @ 0x2
  3039                           
  3040  0072                     DelayTime_1us@count:	
  3041                           ; 1 bytes @ 0x2
  3042                           
  3043  0072                     ___awdiv@divisor:	
  3044                           ; 2 bytes @ 0x2
  3045                           
  3046  0072                     ___lwdiv@divisor:	
  3047                           ; 2 bytes @ 0x2
  3048                           
  3049  0072                     ___ftpack@arg:	
  3050                           ; 2 bytes @ 0x2
  3051                           
  3052                           
  3053                           ; 3 bytes @ 0x2
  3054  0072                     	ds	1
  3055  0073                     ?_setLED:	
  3056  0073                     ??_setCmd_Status:	
  3057                           ; 0 bytes @ 0x3
  3058                           
  3059  0073                     ??_setLED_Main:	
  3060                           ; 0 bytes @ 0x3
  3061                           
  3062  0073                     ??_setMemory_Data:	
  3063                           ; 0 bytes @ 0x3
  3064                           
  3065  0073                     ??_RF_Initialization:	
  3066                           ; 0 bytes @ 0x3
  3067                           
  3068  0073                     ??_setDimmerIntr_ControlStatus:	
  3069                           ; 0 bytes @ 0x3
  3070                           
  3071  0073                     ??_setDimmerIntr_Dimming_Sw:	
  3072                           ; 0 bytes @ 0x3
  3073                           
  3074  0073                     ??_setDimmerIntr_Dimming_RF:	
  3075                           ; 0 bytes @ 0x3
  3076                           
  3077  0073                     ??_Mcu_Initialization:	
  3078                           ; 0 bytes @ 0x3
  3079                           
  3080  0073                     ??___bmul:	
  3081                           ; 0 bytes @ 0x3
  3082                           
  3083  0073                     CC2500_WriteByte@loop_a:	
  3084                           ; 0 bytes @ 0x3
  3085                           
  3086  0073                     CC2500_ReadByte@loop_b:	
  3087                           ; 1 bytes @ 0x3
  3088                           
  3089  0073                     DelayOffPointSelect@sw:	
  3090                           ; 1 bytes @ 0x3
  3091                           
  3092  0073                     getDimmerIntr_DimmingValue@value:	
  3093                           ; 1 bytes @ 0x3
  3094                           
  3095  0073                     getDimmerIntr_Dimming_Sw@lights:	
  3096                           ; 1 bytes @ 0x3
  3097                           
  3098  0073                     DimmerLights_SelectPointer@lights:	
  3099                           ; 1 bytes @ 0x3
  3100                           
  3101  0073                     _getDimmerLights_Allow_Condition$2624:	
  3102                           ; 1 bytes @ 0x3
  3103                           
  3104  0073                     DimmerIntr_ValueCalculate@lights:	
  3105                           ; 1 bytes @ 0x3
  3106                           
  3107  0073                     setLED@command:	
  3108                           ; 1 bytes @ 0x3
  3109                           
  3110  0073                     Flash_Memory_Read@i:	
  3111                           ; 1 bytes @ 0x3
  3112                           
  3113  0073                     Flash_Memory_Write@i:	
  3114                           ; 1 bytes @ 0x3
  3115                           
  3116  0073                     setMemory_Modify@command:	
  3117                           ; 1 bytes @ 0x3
  3118                           
  3119  0073                     setMemory_LoopSave@command:	
  3120                           ; 1 bytes @ 0x3
  3121                           
  3122  0073                     getCmd_Status@cmd:	
  3123                           ; 1 bytes @ 0x3
  3124                           
  3125  0073                     setRF_Learn@command:	
  3126                           ; 1 bytes @ 0x3
  3127                           
  3128  0073                     getRF_KeyStatus@key:	
  3129                           ; 1 bytes @ 0x3
  3130                           
  3131  0073                     setRF_TransceiveGO@command:	
  3132                           ; 1 bytes @ 0x3
  3133                           
  3134  0073                     SwPointSelect@sw:	
  3135                           ; 1 bytes @ 0x3
  3136                           
  3137  0073                     getSw_KeyStatus@sw:	
  3138                           ; 1 bytes @ 0x3
  3139                           
  3140  0073                     getAll_Sw_KeyStatus@status:	
  3141                           ; 1 bytes @ 0x3
  3142                           
  3143                           
  3144                           ; 1 bytes @ 0x3
  3145  0073                     	ds	1
  3146  0074                     ??_CC2500_WriteCommand:	
  3147  0074                     ??_CC2500_ReadStatus:	
  3148                           ; 0 bytes @ 0x4
  3149                           
  3150  0074                     ??_DelayTime_1us:	
  3151                           ; 0 bytes @ 0x4
  3152                           
  3153  0074                     ?_CC2500_WriteREG:	
  3154                           ; 0 bytes @ 0x4
  3155                           
  3156  0074                     ??_DlyOff_Initialization:	
  3157                           ; 0 bytes @ 0x4
  3158                           
  3159  0074                     ??_getDimmerLights_Status:	
  3160                           ; 0 bytes @ 0x4
  3161                           
  3162  0074                     ??_setDimmerLights_SwOff:	
  3163                           ; 0 bytes @ 0x4
  3164                           
  3165  0074                     ??_DimmerLights_DimmingFunction:	
  3166                           ; 0 bytes @ 0x4
  3167                           
  3168  0074                     ??_setLED:	
  3169                           ; 0 bytes @ 0x4
  3170                           
  3171  0074                     ??_getBuz_GO:	
  3172                           ; 0 bytes @ 0x4
  3173                           
  3174  0074                     ??_getDelayOff_GO:	
  3175                           ; 0 bytes @ 0x4
  3176                           
  3177  0074                     ??_setDimmerLights_DimmingOn:	
  3178                           ; 0 bytes @ 0x4
  3179                           
  3180  0074                     ?_setDimmerLights_DimmingRun:	
  3181                           ; 0 bytes @ 0x4
  3182                           
  3183  0074                     CC2500_WriteREG@value:	
  3184                           ; 0 bytes @ 0x4
  3185                           
  3186  0074                     DlyOff_Initialization@sw:	
  3187                           ; 1 bytes @ 0x4
  3188                           
  3189  0074                     getDelayOff_GO@sw:	
  3190                           ; 1 bytes @ 0x4
  3191                           
  3192  0074                     setDimmerIntr_ControlStatus@lights:	
  3193                           ; 1 bytes @ 0x4
  3194                           
  3195  0074                     getDimmerIntr_DimmingValue@lights:	
  3196                           ; 1 bytes @ 0x4
  3197                           
  3198  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3199                           ; 1 bytes @ 0x4
  3200                           
  3201  0074                     setDimmerIntr_Dimming_RF@lights:	
  3202                           ; 1 bytes @ 0x4
  3203                           
  3204  0074                     setDimmerLights_SwOff@sw:	
  3205                           ; 1 bytes @ 0x4
  3206                           
  3207  0074                     setDimmerLights_DimmingOn@sw:	
  3208                           ; 1 bytes @ 0x4
  3209                           
  3210  0074                     _getDimmerLights_Allow_Condition$2625:	
  3211                           ; 1 bytes @ 0x4
  3212                           
  3213  0074                     getDimmerLights_Status@lights:	
  3214                           ; 1 bytes @ 0x4
  3215                           
  3216  0074                     setDimmerLights_DimmingRun@command:	
  3217                           ; 1 bytes @ 0x4
  3218                           
  3219  0074                     setLED@led:	
  3220                           ; 1 bytes @ 0x4
  3221                           
  3222  0074                     Flash_Memory_Read@address:	
  3223                           ; 1 bytes @ 0x4
  3224                           
  3225  0074                     setMemory_Data@address:	
  3226                           ; 1 bytes @ 0x4
  3227                           
  3228  0074                     setCmd_Status@number:	
  3229                           ; 1 bytes @ 0x4
  3230                           
  3231  0074                     _getRF_KeyStatus$5789:	
  3232                           ; 1 bytes @ 0x4
  3233                           
  3234  0074                     _getAll_Sw_KeyStatus$6885:	
  3235                           ; 1 bytes @ 0x4
  3236                           
  3237  0074                     ___bmul@product:	
  3238                           ; 1 bytes @ 0x4
  3239                           
  3240  0074                     DelayTime_1us@i:	
  3241                           ; 1 bytes @ 0x4
  3242                           
  3243  0074                     ___awdiv@dividend:	
  3244                           ; 2 bytes @ 0x4
  3245                           
  3246  0074                     ___lwdiv@dividend:	
  3247                           ; 2 bytes @ 0x4
  3248                           
  3249                           
  3250                           ; 2 bytes @ 0x4
  3251  0074                     	ds	1
  3252  0075                     ??_CC2500_WriteREG:	
  3253  0075                     ??_setDimmerLights_DimmingClose:	
  3254                           ; 0 bytes @ 0x5
  3255                           
  3256  0075                     ??_setLED_Initialization:	
  3257                           ; 0 bytes @ 0x5
  3258                           
  3259  0075                     ??_Exception_Main:	
  3260                           ; 0 bytes @ 0x5
  3261                           
  3262  0075                     ??_setSw_Initialization:	
  3263                           ; 0 bytes @ 0x5
  3264                           
  3265  0075                     ??_DelayOff_Initialization:	
  3266                           ; 0 bytes @ 0x5
  3267                           
  3268  0075                     ??_setDimmerLights_DimmingRun:	
  3269                           ; 0 bytes @ 0x5
  3270                           
  3271  0075                     CC2500_WriteCommand@command:	
  3272                           ; 0 bytes @ 0x5
  3273                           
  3274  0075                     CC2500_ReadStatus@status_addr:	
  3275                           ; 1 bytes @ 0x5
  3276                           
  3277  0075                     getDelayOff_GO@go:	
  3278                           ; 1 bytes @ 0x5
  3279                           
  3280  0075                     _getDimmerLights_Allow_Condition$2626:	
  3281                           ; 1 bytes @ 0x5
  3282                           
  3283  0075                     getDimmerLights_Status@status:	
  3284                           ; 1 bytes @ 0x5
  3285                           
  3286  0075                     DimmerLights_DimmingFunction@lights:	
  3287                           ; 1 bytes @ 0x5
  3288                           
  3289  0075                     setLED_Initialization@led:	
  3290                           ; 1 bytes @ 0x5
  3291                           
  3292  0075                     setLED_Main@led:	
  3293                           ; 1 bytes @ 0x5
  3294                           
  3295  0075                     Flash_Memory_Read@ret:	
  3296                           ; 1 bytes @ 0x5
  3297                           
  3298  0075                     setSw_Initialization@sw:	
  3299                           ; 1 bytes @ 0x5
  3300                           
  3301  0075                     ___bmul@multiplier:	
  3302                           ; 1 bytes @ 0x5
  3303                           
  3304  0075                     ___ftpack@exp:	
  3305                           ; 1 bytes @ 0x5
  3306                           
  3307                           
  3308                           ; 1 bytes @ 0x5
  3309  0075                     	ds	1
  3310  0076                     ??_CC2500_ClearTXFIFO:	
  3311  0076                     ??_CC2500_ClearRXFIFO:	
  3312                           ; 0 bytes @ 0x6
  3313                           
  3314  0076                     ??_CC2500_SIDLEMode:	
  3315                           ; 0 bytes @ 0x6
  3316                           
  3317  0076                     ??_Flash_Memory_Modify:	
  3318                           ; 0 bytes @ 0x6
  3319                           
  3320  0076                     ??_Switch_Initialization:	
  3321                           ; 0 bytes @ 0x6
  3322                           
  3323  0076                     ??_setRF_AdjControl:	
  3324                           ; 0 bytes @ 0x6
  3325                           
  3326  0076                     ??_CC2500_TxData:	
  3327                           ; 0 bytes @ 0x6
  3328                           
  3329  0076                     ??_CC2500_RxData:	
  3330                           ; 0 bytes @ 0x6
  3331                           
  3332  0076                     ??_LED_Initialization:	
  3333                           ; 0 bytes @ 0x6
  3334                           
  3335  0076                     ??_LED_Main:	
  3336                           ; 0 bytes @ 0x6
  3337                           
  3338  0076                     ??_Flash_Memory_Initialization:	
  3339                           ; 0 bytes @ 0x6
  3340                           
  3341  0076                     ??___awdiv:	
  3342                           ; 0 bytes @ 0x6
  3343                           
  3344  0076                     ??___lwdiv:	
  3345                           ; 0 bytes @ 0x6
  3346                           
  3347  0076                     CC2500_WriteREG@w_addr:	
  3348                           ; 0 bytes @ 0x6
  3349                           
  3350  0076                     getDimmerLights_Allow_Condition@lights:	
  3351                           ; 1 bytes @ 0x6
  3352                           
  3353  0076                     setDimmerLights_DimmingRun@lights:	
  3354                           ; 1 bytes @ 0x6
  3355                           
  3356  0076                     ___ftpack@sign:	
  3357                           ; 1 bytes @ 0x6
  3358                           
  3359  0076                     getBuz_GO@i:	
  3360                           ; 1 bytes @ 0x6
  3361                           
  3362  0076                     DelayTime_1us@j:	
  3363                           ; 2 bytes @ 0x6
  3364                           
  3365                           
  3366                           ; 2 bytes @ 0x6
  3367  0076                     	ds	1
  3368  0077                     ??_CC2500_InitSetREG:	
  3369  0077                     ??_CC2500_InitPATable:	
  3370                           ; 0 bytes @ 0x7
  3371                           
  3372  0077                     ??_setBuz:	
  3373                           ; 0 bytes @ 0x7
  3374                           
  3375  0077                     ??___awtoft:	
  3376                           ; 0 bytes @ 0x7
  3377                           
  3378  0077                     CC2500_TxData@loop_e:	
  3379                           ; 0 bytes @ 0x7
  3380                           
  3381  0077                     CC2500_RxData@loop_f:	
  3382                           ; 1 bytes @ 0x7
  3383                           
  3384  0077                     getDimmerLights_Allow_Condition@allow:	
  3385                           ; 1 bytes @ 0x7
  3386                           
  3387  0077                     Flash_Memory_Initialization@value:	
  3388                           ; 1 bytes @ 0x7
  3389                           
  3390  0077                     Flash_Memory_Modify@i:	
  3391                           ; 1 bytes @ 0x7
  3392                           
  3393                           
  3394                           ; 1 bytes @ 0x7
  3395  0077                     	ds	1
  3396  0078                     ??_CC2500_PowerRST:	
  3397  0078                     ??_CC2500_FrequencyCabr:	
  3398                           ; 0 bytes @ 0x8
  3399                           
  3400  0078                     ??_Flash_Memory_Main:	
  3401                           ; 0 bytes @ 0x8
  3402                           
  3403  0078                     setBuz@count:	
  3404                           ; 0 bytes @ 0x8
  3405                           
  3406                           
  3407                           ; 1 bytes @ 0x8
  3408  0078                     	ds	1
  3409  0079                     ??_getDimmerLights_ValueToPercent:	
  3410  0079                     ??_setDimmerLights_Main:	
  3411                           ; 0 bytes @ 0x9
  3412                           
  3413  0079                     ??_Switch_Main:	
  3414                           ; 0 bytes @ 0x9
  3415                           
  3416  0079                     ??_RF_Main:	
  3417                           ; 0 bytes @ 0x9
  3418                           
  3419  0079                     ??_setControl_Lights_Table:	
  3420                           ; 0 bytes @ 0x9
  3421                           
  3422  0079                     ??_CC2500_PowerOnInitial:	
  3423                           ; 0 bytes @ 0x9
  3424                           
  3425  0079                     ??_DelayOff_Main:	
  3426                           ; 0 bytes @ 0x9
  3427                           
  3428  0079                     ??_DimmerLights_Initialization:	
  3429                           ; 0 bytes @ 0x9
  3430                           
  3431  0079                     ??_DimmerLights_Main:	
  3432                           ; 0 bytes @ 0x9
  3433                           
  3434  0079                     ??_main:	
  3435                           ; 0 bytes @ 0x9
  3436                           
  3437                           
  3438                           	psect	cstackBANK0
  3439  0020                     __pcstackBANK0:	
  3440                           ; 0 bytes @ 0x9
  3441                           
  3442  0020                     ??___ftpack:	
  3443  0020                     CC2500_InitSetREG@temp1:	
  3444                           ; 0 bytes @ 0x0
  3445                           
  3446  0020                     CC2500_InitPATable@temp:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0020                     Flash_Memory_Main@key_Status:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0020                     Exception_Main@lights:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0020                     setRF_AdjControl@status:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0020                     ___awdiv@counter:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0020                     ___lwdiv@counter:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464                           
  3465                           ; 1 bytes @ 0x0
  3466  0020                     	ds	1
  3467  0021                     CC2500_InitSetREG@temp2:	
  3468  0021                     CC2500_InitPATable@loop_d:	
  3469                           ; 1 bytes @ 0x1
  3470                           
  3471  0021                     _Flash_Memory_Main$3562:	
  3472                           ; 1 bytes @ 0x1
  3473                           
  3474  0021                     Exception_Main@count:	
  3475                           ; 1 bytes @ 0x1
  3476                           
  3477  0021                     setRF_AdjControl@dimmingStatus:	
  3478                           ; 1 bytes @ 0x1
  3479                           
  3480  0021                     ___awdiv@sign:	
  3481                           ; 1 bytes @ 0x1
  3482                           
  3483  0021                     ___lwdiv@quotient:	
  3484                           ; 1 bytes @ 0x1
  3485                           
  3486                           
  3487                           ; 2 bytes @ 0x1
  3488  0021                     	ds	1
  3489  0022                     CC2500_InitSetREG@loop_c:	
  3490  0022                     Exception_Main@status:	
  3491                           ; 1 bytes @ 0x2
  3492                           
  3493  0022                     setRF_AdjControl@sw:	
  3494                           ; 1 bytes @ 0x2
  3495                           
  3496  0022                     ___awdiv@quotient:	
  3497                           ; 1 bytes @ 0x2
  3498                           
  3499                           
  3500                           ; 2 bytes @ 0x2
  3501  0022                     	ds	1
  3502  0023                     ?___awtoft:	
  3503  0023                     Exception_Main@error:	
  3504                           ; 3 bytes @ 0x3
  3505                           
  3506  0023                     ___awtoft@c:	
  3507                           ; 1 bytes @ 0x3
  3508                           
  3509                           
  3510                           ; 2 bytes @ 0x3
  3511  0023                     	ds	1
  3512  0024                     ?_setBuz:	
  3513  0024                     setBuz@time:	
  3514                           ; 0 bytes @ 0x4
  3515                           
  3516                           
  3517                           ; 2 bytes @ 0x4
  3518  0024                     	ds	2
  3519  0026                     ??_setDimmerLights_SwOn:	
  3520  0026                     ??_my_MainTimer:	
  3521                           ; 0 bytes @ 0x6
  3522                           
  3523  0026                     ___awtoft@sign:	
  3524                           ; 0 bytes @ 0x6
  3525                           
  3526                           
  3527                           ; 1 bytes @ 0x6
  3528  0026                     	ds	1
  3529  0027                     ?___ftdiv:	
  3530  0027                     ?___ftmul:	
  3531                           ; 3 bytes @ 0x7
  3532                           
  3533  0027                     setDimmerLights_SwOn@dimmingStatus:	
  3534                           ; 3 bytes @ 0x7
  3535                           
  3536  0027                     ___ftdiv@f2:	
  3537                           ; 1 bytes @ 0x7
  3538                           
  3539  0027                     ___ftmul@f1:	
  3540                           ; 3 bytes @ 0x7
  3541                           
  3542                           
  3543                           ; 3 bytes @ 0x7
  3544  0027                     	ds	1
  3545  0028                     _setDimmerLights_SwOn$2561:	
  3546                           
  3547                           ; 1 bytes @ 0x8
  3548  0028                     	ds	1
  3549  0029                     _setDimmerLights_SwOn$2570:	
  3550                           
  3551                           ; 1 bytes @ 0x9
  3552  0029                     	ds	1
  3553  002A                     _setDimmerLights_SwOn$2571:	
  3554  002A                     ___ftdiv@f1:	
  3555                           ; 1 bytes @ 0xA
  3556                           
  3557  002A                     ___ftmul@f2:	
  3558                           ; 3 bytes @ 0xA
  3559                           
  3560                           
  3561                           ; 3 bytes @ 0xA
  3562  002A                     	ds	1
  3563  002B                     setDimmerLights_SwOn@idle:	
  3564                           
  3565                           ; 1 bytes @ 0xB
  3566  002B                     	ds	1
  3567  002C                     setDimmerLights_SwOn@sw:	
  3568                           
  3569                           ; 1 bytes @ 0xC
  3570  002C                     	ds	1
  3571  002D                     ??_setSw_Main:	
  3572  002D                     ??___ftdiv:	
  3573                           ; 0 bytes @ 0xD
  3574                           
  3575  002D                     ??___ftmul:	
  3576                           ; 0 bytes @ 0xD
  3577                           
  3578                           
  3579                           ; 0 bytes @ 0xD
  3580  002D                     	ds	2
  3581  002F                     setSw_Main@sw:	
  3582                           
  3583                           ; 1 bytes @ 0xF
  3584  002F                     	ds	2
  3585  0031                     ___ftdiv@cntr:	
  3586  0031                     ___ftmul@exp:	
  3587                           ; 1 bytes @ 0x11
  3588                           
  3589                           
  3590                           ; 1 bytes @ 0x11
  3591  0031                     	ds	1
  3592  0032                     ___ftdiv@f3:	
  3593  0032                     ___ftmul@f3_as_product:	
  3594                           ; 3 bytes @ 0x12
  3595                           
  3596                           
  3597                           ; 3 bytes @ 0x12
  3598  0032                     	ds	3
  3599  0035                     ___ftdiv@exp:	
  3600  0035                     ___ftmul@cntr:	
  3601                           ; 1 bytes @ 0x15
  3602                           
  3603                           
  3604                           ; 1 bytes @ 0x15
  3605  0035                     	ds	1
  3606  0036                     ___ftdiv@sign:	
  3607  0036                     ___ftmul@sign:	
  3608                           ; 1 bytes @ 0x16
  3609                           
  3610                           
  3611                           ; 1 bytes @ 0x16
  3612  0036                     	ds	1
  3613  0037                     ?___ftadd:	
  3614  0037                     ___ftadd@f1:	
  3615                           ; 3 bytes @ 0x17
  3616                           
  3617                           
  3618                           ; 3 bytes @ 0x17
  3619  0037                     	ds	3
  3620  003A                     ___ftadd@f2:	
  3621                           
  3622                           ; 3 bytes @ 0x1A
  3623  003A                     	ds	3
  3624  003D                     ??___ftadd:	
  3625                           
  3626                           ; 0 bytes @ 0x1D
  3627  003D                     	ds	4
  3628  0041                     ___ftadd@sign:	
  3629                           
  3630                           ; 1 bytes @ 0x21
  3631  0041                     	ds	1
  3632  0042                     ___ftadd@exp2:	
  3633                           
  3634                           ; 1 bytes @ 0x22
  3635  0042                     	ds	1
  3636  0043                     ___ftadd@exp1:	
  3637                           
  3638                           ; 1 bytes @ 0x23
  3639  0043                     	ds	1
  3640  0044                     ?___fttol:	
  3641  0044                     ___fttol@f1:	
  3642                           ; 4 bytes @ 0x24
  3643                           
  3644                           
  3645                           ; 3 bytes @ 0x24
  3646  0044                     	ds	4
  3647  0048                     ??___fttol:	
  3648                           
  3649                           ; 0 bytes @ 0x28
  3650  0048                     	ds	4
  3651  004C                     ___fttol@sign1:	
  3652                           
  3653                           ; 1 bytes @ 0x2C
  3654  004C                     	ds	1
  3655  004D                     ___fttol@lval:	
  3656                           
  3657                           ; 4 bytes @ 0x2D
  3658  004D                     	ds	4
  3659  0051                     ___fttol@exp1:	
  3660                           
  3661                           ; 1 bytes @ 0x31
  3662  0051                     	ds	1
  3663  0052                     ??_getDimmerLights_PercentToValue:	
  3664  0052                     getDimmerLights_ValueToPercent@value:	
  3665                           ; 0 bytes @ 0x32
  3666                           
  3667                           
  3668                           ; 1 bytes @ 0x32
  3669  0052                     	ds	1
  3670  0053                     getDimmerLights_ValueToPercent@i:	
  3671                           
  3672                           ; 3 bytes @ 0x33
  3673  0053                     	ds	1
  3674  0054                     getDimmerLights_PercentToValue@value:	
  3675                           
  3676                           ; 1 bytes @ 0x34
  3677  0054                     	ds	1
  3678  0055                     getDimmerLights_PercentToValue@i:	
  3679                           
  3680                           ; 3 bytes @ 0x35
  3681  0055                     	ds	1
  3682  0056                     ?_setProductData:	
  3683  0056                     setProductData@value:	
  3684                           ; 0 bytes @ 0x36
  3685                           
  3686                           
  3687                           ; 1 bytes @ 0x36
  3688  0056                     	ds	1
  3689  0057                     ??_setProductData:	
  3690                           
  3691                           ; 0 bytes @ 0x37
  3692  0057                     	ds	1
  3693  0058                     ??_DimmerIntr_Initialization:	
  3694  0058                     ?_setDimmerIntr_DimmingValue:	
  3695                           ; 0 bytes @ 0x38
  3696                           
  3697  0058                     ?_setDimmerIntr_MaxmumValue:	
  3698                           ; 0 bytes @ 0x38
  3699                           
  3700  0058                     setDimmerIntr_DimmingValue@value:	
  3701                           ; 0 bytes @ 0x38
  3702                           
  3703  0058                     setDimmerIntr_MaxmumValue@value:	
  3704                           ; 1 bytes @ 0x38
  3705                           
  3706  0058                     setProductData@address:	
  3707                           ; 1 bytes @ 0x38
  3708                           
  3709                           
  3710                           ; 1 bytes @ 0x38
  3711  0058                     	ds	1
  3712  0059                     ??_DlyOff_Main:	
  3713  0059                     ?_setRF_DimmerLights:	
  3714                           ; 0 bytes @ 0x39
  3715                           
  3716  0059                     ??_setLog_Code:	
  3717                           ; 0 bytes @ 0x39
  3718                           
  3719  0059                     ?_setDelayOff_GO:	
  3720                           ; 0 bytes @ 0x39
  3721                           
  3722  0059                     ??_setDimmerIntr_DimmingValue:	
  3723                           ; 0 bytes @ 0x39
  3724                           
  3725  0059                     ??_setDimmerIntr_MaxmumValue:	
  3726                           ; 0 bytes @ 0x39
  3727                           
  3728  0059                     setDelayOff_GO@command:	
  3729                           ; 0 bytes @ 0x39
  3730                           
  3731  0059                     setRF_DimmerLights@on:	
  3732                           ; 1 bytes @ 0x39
  3733                           
  3734                           
  3735                           ; 1 bytes @ 0x39
  3736  0059                     	ds	1
  3737  005A                     ??_setRF_DimmerLights:	
  3738  005A                     setDelayOff_GO@value:	
  3739                           ; 0 bytes @ 0x3A
  3740                           
  3741  005A                     setDimmerIntr_DimmingValue@lights:	
  3742                           ; 1 bytes @ 0x3A
  3743                           
  3744  005A                     setDimmerIntr_MaxmumValue@lights:	
  3745                           ; 1 bytes @ 0x3A
  3746                           
  3747                           
  3748                           ; 1 bytes @ 0x3A
  3749  005A                     	ds	1
  3750  005B                     ??_setRFSW_AdjControl:	
  3751  005B                     ??_setDelayOff_GO:	
  3752                           ; 0 bytes @ 0x3B
  3753                           
  3754  005B                     DlyOff_Main@sw:	
  3755                           ; 0 bytes @ 0x3B
  3756                           
  3757                           
  3758                           ; 1 bytes @ 0x3B
  3759  005B                     	ds	1
  3760  005C                     setRF_DimmerLights@status:	
  3761                           
  3762                           ; 1 bytes @ 0x3C
  3763  005C                     	ds	1
  3764  005D                     setDelayOff_GO@i:	
  3765  005D                     setRFSW_AdjControl@status:	
  3766                           ; 1 bytes @ 0x3D
  3767                           
  3768  005D                     setRF_DimmerLights@lights:	
  3769                           ; 1 bytes @ 0x3D
  3770                           
  3771                           
  3772                           ; 1 bytes @ 0x3D
  3773  005D                     	ds	1
  3774  005E                     ?_setDimmerLights_Dimming:	
  3775  005E                     setDelayOff_GO@j:	
  3776                           ; 0 bytes @ 0x3E
  3777                           
  3778  005E                     setDimmerLights_Dimming@status:	
  3779                           ; 1 bytes @ 0x3E
  3780                           
  3781  005E                     setRFSW_AdjControl@sw:	
  3782                           ; 1 bytes @ 0x3E
  3783                           
  3784                           
  3785                           ; 1 bytes @ 0x3E
  3786  005E                     	ds	1
  3787  005F                     ??_setDimmerLights_Dimming:	
  3788  005F                     setDelayOff_GO@k:	
  3789                           ; 0 bytes @ 0x3F
  3790                           
  3791                           
  3792                           ; 1 bytes @ 0x3F
  3793  005F                     	ds	1
  3794  0060                     setDelayOff_GO@sw:	
  3795  0060                     setDimmerLights_Dimming@value:	
  3796                           ; 1 bytes @ 0x40
  3797                           
  3798                           
  3799                           ; 1 bytes @ 0x40
  3800  0060                     	ds	1
  3801  0061                     ?_setDimmerLights_OnOff:	
  3802  0061                     ??_setRFSW_Control:	
  3803                           ; 0 bytes @ 0x41
  3804                           
  3805  0061                     setDimmerLights_OnOff@command:	
  3806                           ; 0 bytes @ 0x41
  3807                           
  3808  0061                     setDimmerLights_Dimming@lights:	
  3809                           ; 1 bytes @ 0x41
  3810                           
  3811                           
  3812                           ; 1 bytes @ 0x41
  3813  0061                     	ds	1
  3814  0062                     ??_setDimmerLights_OnOff:	
  3815  0062                     setRFSW_Control@status:	
  3816                           ; 0 bytes @ 0x42
  3817                           
  3818                           
  3819                           ; 1 bytes @ 0x42
  3820  0062                     	ds	1
  3821  0063                     setRFSW_Control@sw:	
  3822                           
  3823                           ; 1 bytes @ 0x43
  3824  0063                     	ds	1
  3825  0064                     ??_getRxData:	
  3826  0064                     setDimmerLights_OnOff@lights:	
  3827                           ; 0 bytes @ 0x44
  3828                           
  3829                           
  3830                           ; 1 bytes @ 0x44
  3831  0064                     	ds	1
  3832  0065                     setDimmerLights_Main@lights:	
  3833  0065                     getRxData@error:	
  3834                           ; 1 bytes @ 0x45
  3835                           
  3836                           
  3837                           ; 1 bytes @ 0x45
  3838  0065                     	ds	1
  3839  0066                     ??_setRF_Main:	
  3840                           
  3841                           ; 0 bytes @ 0x46
  3842  0066                     	ds	1
  3843  0067                     setRF_Main@error:	
  3844                           
  3845                           ; 1 bytes @ 0x47
  3846  0067                     	ds	1
  3847                           
  3848                           	psect	maintext
  3849  169A                     __pmaintext:	
  3850 ;;
  3851 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3852 ;;
  3853 ;; *************** function _main *****************
  3854 ;; Defined at:
  3855 ;;		line 6 in file "../src/Main_B1.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  argc            2    0[BANK4 ] int 
  3858 ;;  argv            2    2[BANK4 ] PTR PTR unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2    0[BANK4 ] int 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 17F/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3870 ;;      Params:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Totals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0
  3874 ;;Total ram usage:        4 bytes
  3875 ;; Hardware stack levels required when called:   11
  3876 ;; This function calls:
  3877 ;;		_Buzzer_Initialization
  3878 ;;		_Buzzer_Main
  3879 ;;		_CC2500_PowerOnInitial
  3880 ;;		_DelayOff_Initialization
  3881 ;;		_DelayOff_Main
  3882 ;;		_DimmerLights_Initialization
  3883 ;;		_DimmerLights_Main
  3884 ;;		_Exception_Main
  3885 ;;		_Flash_Memory_Initialization
  3886 ;;		_Flash_Memory_Main
  3887 ;;		_LED_Initialization
  3888 ;;		_LED_Main
  3889 ;;		_Mcu_Initialization
  3890 ;;		_RF_Initialization
  3891 ;;		_RF_Main
  3892 ;;		_Switch_Initialization
  3893 ;;		_Switch_Main
  3894 ;;		_WDT_Main
  3895 ;;		_myMain_Initialization
  3896 ;;		_my_MainTimer
  3897 ;; This function is called by:
  3898 ;;		Startup code after reset
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _main
  3904  169A                     _main:	
  3905                           
  3906                           ;Main_B1.c: 7: myMain_Initialization();
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3910  169A  319D  25E7  3196   	fcall	_myMain_Initialization
  3911                           
  3912                           ;Main_B1.c: 8: Mcu_Initialization();
  3913  169D  319E  2698  3196   	fcall	_Mcu_Initialization
  3914                           
  3915                           ;Main_B1.c: 9: Flash_Memory_Initialization();
  3916  16A0  3183  23A8  3196   	fcall	_Flash_Memory_Initialization
  3917                           
  3918                           ;Main_B1.c: 10: LED_Initialization();
  3919  16A3  319E  2626  3196   	fcall	_LED_Initialization
  3920                           
  3921                           ;Main_B1.c: 11: Buzzer_Initialization();
  3922  16A6  319C  249C  3196   	fcall	_Buzzer_Initialization
  3923                           
  3924                           ;Main_B1.c: 13: ;;
  3925                           ;Main_B1.c: 14: ;;
  3926                           ;Main_B1.c: 15: ;;
  3927                           ;Main_B1.c: 16: ;;
  3928                           ;Main_B1.c: 17: DelayOff_Initialization();
  3929  16A9  319D  2524  3196   	fcall	_DelayOff_Initialization
  3930                           
  3931                           ;Main_B1.c: 19: DimmerLights_Initialization();
  3932  16AC  319D  257E  3196   	fcall	_DimmerLights_Initialization
  3933                           
  3934                           ;Main_B1.c: 20: ;;
  3935                           ;Main_B1.c: 21: ;;
  3936                           ;Main_B1.c: 22: ;;
  3937                           ;Main_B1.c: 23: Switch_Initialization();
  3938  16AF  3190  2068  3196   	fcall	_Switch_Initialization
  3939                           
  3940                           ;Main_B1.c: 24: RF_Initialization();
  3941  16B2  319C  24A2  3196   	fcall	_RF_Initialization
  3942                           
  3943                           ;Main_B1.c: 25: CC2500_PowerOnInitial();
  3944  16B5  319E  26FC  3196   	fcall	_CC2500_PowerOnInitial
  3945  16B8                     l1781:	
  3946                           ;Main_B1.c: 26: ;;
  3947                           ;Main_B1.c: 27: ;;
  3948                           ;Main_B1.c: 29: while (1) {
  3949                           
  3950                           
  3951                           ;Main_B1.c: 56: }
  3952                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3953  16B8  0021               	movlb	1	; select bank1
  3954  16B9  1C58               	btfss	_Timer1^(0+128),0
  3955  16BA  2EB8               	goto	l1781
  3956                           
  3957                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3958  16BB  1058               	bcf	_Timer1^(0+128),0
  3959                           
  3960                           ;Main_B1.c: 95: my_MainTimer();
  3961  16BC  3194  24DD  3196   	fcall	_my_MainTimer
  3962                           
  3963                           ;Main_B1.c: 96: WDT_Main();
  3964  16BF  319E  2666  3196   	fcall	_WDT_Main
  3965                           
  3966                           ;Main_B1.c: 97: ;;
  3967                           ;Main_B1.c: 98: ;;
  3968                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  3969  16C2  0021               	movlb	1	; select bank1
  3970  16C3  1C3F               	btfss	_myMain^(0+128),0
  3971  16C4  2EB8               	goto	l1781
  3972                           
  3973                           ;Main_B1.c: 100: Flash_Memory_Main();
  3974  16C5  3195  25D3  3196   	fcall	_Flash_Memory_Main
  3975                           
  3976                           ;Main_B1.c: 102: LED_Main();
  3977  16C8  319E  2636  3196   	fcall	_LED_Main
  3978                           
  3979                           ;Main_B1.c: 103: Buzzer_Main();
  3980  16CB  3196  26DE  3196   	fcall	_Buzzer_Main
  3981                           
  3982                           ;Main_B1.c: 105: ;;
  3983                           ;Main_B1.c: 106: ;;
  3984                           ;Main_B1.c: 107: ;;
  3985                           ;Main_B1.c: 108: ;;
  3986                           ;Main_B1.c: 110: ;;
  3987                           ;Main_B1.c: 111: DimmerLights_Main();
  3988  16CE  319F  2769  3196   	fcall	_DimmerLights_Main
  3989                           
  3990                           ;Main_B1.c: 112: Switch_Main();
  3991  16D1  319D  25D8  3196   	fcall	_Switch_Main
  3992                           
  3993                           ;Main_B1.c: 113: ;;
  3994                           ;Main_B1.c: 114: ;;
  3995                           ;Main_B1.c: 116: RF_Main();
  3996  16D4  319C  24A5  3196   	fcall	_RF_Main
  3997                           
  3998                           ;Main_B1.c: 117: DelayOff_Main();
  3999  16D7  319D  253C  3196   	fcall	_DelayOff_Main
  4000                           
  4001                           ;Main_B1.c: 118: ;;
  4002                           ;Main_B1.c: 119: ;;
  4003                           ;Main_B1.c: 120: Exception_Main();
  4004  16DA  3194  24A3  3196   	fcall	_Exception_Main
  4005  16DD  2EB8               	goto	l1781
  4006  16DE                     __end_of_main:	
  4007                           ;Main_B1.c: 127: }
  4008                           ;Main_B1.c: 128: }
  4009                           ;Main_B1.c: 162: }
  4010                           ;Main_B1.c: 163: return (0);
  4011                           ;	Return value of _main is never used
  4012                           
  4013                           
  4014                           	psect	text1
  4015  14DD                     __ptext1:	
  4016 ;; *************** function _my_MainTimer *****************
  4017 ;; Defined at:
  4018 ;;		line 184 in file "../src/Main_B1.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        1 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_setBuz
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _my_MainTimer
  4048  14DD                     _my_MainTimer:	
  4049                           
  4050                           ;Main_B1.c: 186: if (myMain.PowerON == 0) {
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4054  14DD  0021               	movlb	1	; select bank1
  4055  14DE  183F               	btfsc	_myMain^(0+128),0
  4056  14DF  2CF7               	goto	l11369
  4057                           
  4058                           ;Main_B1.c: 187: myMain.PowerCount++;
  4059  14E0  3001               	movlw	1
  4060  14E1  0020               	movlb	0	; select bank0
  4061  14E2  00A6               	movwf	??_my_MainTimer
  4062  14E3  0826               	movf	??_my_MainTimer,w
  4063  14E4  0021               	movlb	1	; select bank1
  4064  14E5  07C0               	addwf	(_myMain^(0+128)+1),f
  4065                           
  4066                           ;Main_B1.c: 188: if (myMain.PowerCount == (1500 / 20)) {
  4067  14E6  0840               	movf	(_myMain^(0+128)+1),w
  4068  14E7  3A4B               	xorlw	75
  4069  14E8  1D03               	skipz
  4070  14E9  0008               	return
  4071                           
  4072                           ;Main_B1.c: 189: myMain.PowerCount = 0;
  4073  14EA  01C0               	clrf	(_myMain^(0+128)+1)
  4074                           
  4075                           ;Main_B1.c: 190: myMain.PowerON = 1;
  4076  14EB  143F               	bsf	_myMain^(0+128),0
  4077                           
  4078                           ;Main_B1.c: 195: setBuz(3, 50);
  4079  14EC  3032               	movlw	50
  4080  14ED  0020               	movlb	0	; select bank0
  4081  14EE  00A4               	movwf	setBuz@time
  4082  14EF  3000               	movlw	0
  4083  14F0  00A5               	movwf	setBuz@time+1
  4084  14F1  3003               	movlw	3
  4085  14F2  3188  2050         	fcall	_setBuz
  4086                           
  4087                           ;Main_B1.c: 196: myMain.SelfTest = 1;
  4088  14F4  0021               	movlb	1	; select bank1
  4089  14F5  163F               	bsf	_myMain^(0+128),4
  4090                           
  4091                           ;Main_B1.c: 205: }
  4092                           ;Main_B1.c: 206: } else {
  4093  14F6  0008               	return
  4094  14F7                     l11369:	
  4095                           
  4096                           ;Main_B1.c: 207: myMain.PowerCount++;
  4097  14F7  3001               	movlw	1
  4098  14F8  0020               	movlb	0	; select bank0
  4099  14F9  00A6               	movwf	??_my_MainTimer
  4100  14FA  0826               	movf	??_my_MainTimer,w
  4101  14FB  0021               	movlb	1	; select bank1
  4102  14FC  07C0               	addwf	(_myMain^(0+128)+1),f
  4103                           
  4104                           ;Main_B1.c: 208: if (myMain.PowerCount == (1000 / 20)) {
  4105  14FD  0840               	movf	(_myMain^(0+128)+1),w
  4106  14FE  3A32               	xorlw	50
  4107  14FF  1903               	btfsc	3,2
  4108                           
  4109                           ;Main_B1.c: 209: myMain.PowerCount = 0;
  4110  1500  01C0               	clrf	(_myMain^(0+128)+1)
  4111                           
  4112                           ;Main_B1.c: 231: }
  4113                           ;Main_B1.c: 233: myMain.Count1++;
  4114  1501  3001               	movlw	1
  4115  1502  07C3               	addwf	(_myMain^(0+128)+4),f
  4116  1503  3000               	movlw	0
  4117  1504  3DC4               	addwfc	((_myMain+1)^(0+128)+4),f
  4118                           
  4119                           ;Main_B1.c: 234: if (myMain.Count1 == (1000 / 20)) {
  4120  1505  3004               	movlw	4
  4121  1506  3EBF               	addlw	_myMain& (0+255)
  4122  1507  0086               	movwf	6
  4123  1508  0187               	clrf	7
  4124  1509  3F40               	moviw [0]fsr1
  4125  150A  3A32               	xorlw	50
  4126  150B  1D03               	skipz
  4127  150C  2D0F               	goto	u13725
  4128  150D  3F41               	moviw [1]fsr1
  4129  150E  3A00               	xorlw	0
  4130  150F                     u13725:	
  4131  150F  1D03               	skipz
  4132  1510  0008               	return
  4133                           
  4134                           ;Main_B1.c: 235: myMain.Count1 = 0;
  4135  1511  01C3               	clrf	(_myMain^(0+128)+4)
  4136  1512  01C4               	clrf	((_myMain+1)^(0+128)+4)
  4137                           
  4138                           ;Main_B1.c: 247: if (myMain.Flag) {
  4139  1513  1CBF               	btfss	_myMain^(0+128),1
  4140  1514  2D17               	goto	l1797
  4141                           
  4142                           ;Main_B1.c: 248: myMain.Flag = 0;
  4143  1515  10BF               	bcf	_myMain^(0+128),1
  4144                           
  4145                           ;Main_B1.c: 257: } else {
  4146  1516  0008               	return
  4147  1517                     l1797:	
  4148                           
  4149                           ;Main_B1.c: 258: myMain.Flag = 1;
  4150  1517  14BF               	bsf	_myMain^(0+128),1
  4151  1518  0008               	return
  4152  1519                     __end_of_my_MainTimer:	
  4153                           
  4154                           	psect	text2
  4155  1DE7                     __ptext2:	
  4156 ;; *************** function _myMain_Initialization *****************
  4157 ;; Defined at:
  4158 ;;		line 169 in file "../src/Main_B1.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;		None               void
  4165 ;; Registers used:
  4166 ;;		wreg, fsr1l, fsr1h
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;Total ram usage:        1 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    3
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _myMain_Initialization
  4188  1DE7                     _myMain_Initialization:	
  4189                           
  4190                           ;Main_B1.c: 172: product = &_product;
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4194  1DE7  3045               	movlw	__product& (0+255)
  4195  1DE8  00F2               	movwf	??_myMain_Initialization
  4196  1DE9  0872               	movf	??_myMain_Initialization,w
  4197  1DEA  0020               	movlb	0	; select bank0
  4198  1DEB  00EE               	movwf	_product
  4199                           
  4200                           ;Main_B1.c: 173: product->Data[20] = 211;
  4201  1DEC  30D3               	movlw	211
  4202  1DED  00F2               	movwf	??_myMain_Initialization
  4203  1DEE  086E               	movf	_product,w
  4204  1DEF  3E14               	addlw	20
  4205  1DF0  0086               	movwf	6
  4206  1DF1  3002               	movlw	2	; select bank4/5
  4207  1DF2  0087               	movwf	7
  4208  1DF3  0872               	movf	??_myMain_Initialization,w
  4209  1DF4  0081               	movwf	1
  4210  1DF5  0008               	return
  4211  1DF6                     __end_of_myMain_Initialization:	
  4212                           
  4213                           	psect	text3
  4214  1E66                     __ptext3:	
  4215 ;; *************** function _WDT_Main *****************
  4216 ;; Defined at:
  4217 ;;		line 1121 in file "../src/MCU_B1.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;		None               void
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;Total ram usage:        1 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    4
  4238 ;; This function calls:
  4239 ;;		_WDT_Clearing
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function _WDT_Main
  4247  1E66                     _WDT_Main:	
  4248                           
  4249                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4253  1E66  0021               	movlb	1	; select bank1
  4254  1E67  1C5D               	btfss	_WDT^(0+128),0
  4255  1E68  0008               	return
  4256                           
  4257                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  4258  1E69  3001               	movlw	1
  4259  1E6A  02DE               	subwf	(_WDT^(0+128)+1),f
  4260  1E6B  085E               	movf	(_WDT^(0+128)+1),w
  4261  1E6C  3AFF               	xorlw	255
  4262  1E6D  1903               	skipnz
  4263  1E6E  0008               	return
  4264                           
  4265                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  4266  1E6F  3064               	movlw	100
  4267  1E70  00F2               	movwf	??_WDT_Main
  4268  1E71  0872               	movf	??_WDT_Main,w
  4269  1E72  00DE               	movwf	(_WDT^(0+128)+1)
  4270                           
  4271                           ;MCU_B1.c: 1125: WDT_Clearing();
  4272  1E73  3180  2002         	fcall	_WDT_Clearing
  4273  1E75  0008               	return
  4274  1E76                     __end_of_WDT_Main:	
  4275                           
  4276                           	psect	text4
  4277  0002                     __ptext4:	
  4278 ;; *************** function _WDT_Clearing *****************
  4279 ;; Defined at:
  4280 ;;		line 1131 in file "../src/MCU_B1.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;		None               void
  4287 ;; Registers used:
  4288 ;;		None
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    3
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_WDT_Main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _WDT_Clearing
  4310  0002                     _WDT_Clearing:	
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _WDT_Clearing: []
  4314  0002  0064               	clrwdt	;# 
  4315  0003  0008               	return
  4316  0004                     __end_of_WDT_Clearing:	
  4317                           
  4318                           	psect	text5
  4319  1DD8                     __ptext5:	
  4320 ;; *************** function _Switch_Main *****************
  4321 ;; Defined at:
  4322 ;;		line 76 in file "../src/Switch_B1.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;		None               void
  4329 ;; Registers used:
  4330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;Total ram usage:        0 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    7
  4343 ;; This function calls:
  4344 ;;		_TouchPower
  4345 ;;		_setSw_Main
  4346 ;; This function is called by:
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function _Switch_Main
  4353  1DD8                     _Switch_Main:	
  4354                           
  4355                           ;Switch_B1.c: 79: setSw_Main(1);
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4359  1DD8  3001               	movlw	1
  4360  1DD9  3180  2059  319D   	fcall	_setSw_Main
  4361                           
  4362                           ;Switch_B1.c: 83: setSw_Main(2);
  4363  1DDC  3002               	movlw	2
  4364  1DDD  3180  2059  319D   	fcall	_setSw_Main
  4365                           
  4366                           ;Switch_B1.c: 87: setSw_Main(3);
  4367  1DE0  3003               	movlw	3
  4368  1DE1  3180  2059  319D   	fcall	_setSw_Main
  4369                           
  4370                           ;Switch_B1.c: 91: TouchPower();
  4371  1DE4  319F  2726         	fcall	_TouchPower
  4372  1DE6  0008               	return
  4373  1DE7                     __end_of_Switch_Main:	
  4374                           
  4375                           	psect	text6
  4376  0059                     __ptext6:	
  4377 ;; *************** function _setSw_Main *****************
  4378 ;; Defined at:
  4379 ;;		line 117 in file "../src/Switch_B1.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  sw              1    wreg     unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  sw              1   15[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;		None               void
  4386 ;; Registers used:
  4387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;Total ram usage:        3 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    6
  4400 ;; This function calls:
  4401 ;;		_SwPointSelect
  4402 ;;		_getMain_All_Error_Status
  4403 ;;		_getSw_KeyStatus
  4404 ;;		_setBuz
  4405 ;;		_setDimmerLights_DimmingOn
  4406 ;;		_setDimmerLights_SwOff
  4407 ;;		_setDimmerLights_SwOn
  4408 ;;		_setRF_Learn
  4409 ;; This function is called by:
  4410 ;;		_Switch_Main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _setSw_Main
  4416  0059                     _setSw_Main:	
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4420                           ;setSw_Main@sw stored from wreg
  4421  0059  0020               	movlb	0	; select bank0
  4422  005A  00AF               	movwf	setSw_Main@sw
  4423                           
  4424                           ;Switch_B1.c: 118: SwPointSelect(sw);
  4425  005B  082F               	movf	setSw_Main@sw,w
  4426  005C  3191  2154  3180   	fcall	_SwPointSelect
  4427                           
  4428                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  4429  005F  0020               	movlb	0	; select bank0
  4430  0060  086C               	movf	_Sw,w
  4431  0061  0086               	movwf	6
  4432  0062  3001               	movlw	1	; select bank2/3
  4433  0063  0087               	movwf	7
  4434  0064  1C01               	btfss	1,0
  4435  0065  29C0               	goto	l2875
  4436                           
  4437                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  4438  0066  3000               	movlw	0
  4439  0067  319C  249F  3180   	fcall	_getMain_All_Error_Status
  4440  006A  3800               	iorlw	0
  4441  006B  1D03               	skipz
  4442  006C  2888               	goto	l11255
  4443                           
  4444                           ;Switch_B1.c: 122: Sw->Detect = 0;
  4445  006D  0020               	movlb	0	; select bank0
  4446  006E  0A6C               	incf	_Sw,w
  4447  006F  0086               	movwf	6
  4448  0070  3001               	movlw	1	; select bank2/3
  4449  0071  0087               	movwf	7
  4450  0072  1081               	bcf	1,1
  4451                           
  4452                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  4453  0073  082F               	movf	setSw_Main@sw,w
  4454  0074  3191  21D5  3180   	fcall	_getSw_KeyStatus
  4455  0077  3A01               	xorlw	1
  4456  0078  3000               	movlw	0
  4457  0079  1903               	skipnz
  4458  007A  3001               	movlw	1
  4459  007B  0020               	movlb	0	; select bank0
  4460  007C  00AD               	movwf	??_setSw_Main
  4461  007D  086C               	movf	_Sw,w
  4462  007E  0086               	movwf	6
  4463  007F  3001               	movlw	1	; select bank2/3
  4464  0080  0087               	movwf	7
  4465  0081  0DAD               	rlf	??_setSw_Main,f
  4466  0082  0801               	movf	1,w
  4467  0083  062D               	xorwf	??_setSw_Main,w
  4468  0084  39FD               	andlw	-3
  4469  0085  062D               	xorwf	??_setSw_Main,w
  4470  0086  0081               	movwf	1
  4471                           
  4472                           ;Switch_B1.c: 124: } else {
  4473  0087  289E               	goto	l2877
  4474  0088                     l11255:	
  4475                           
  4476                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  4477  0088  0020               	movlb	0	; select bank0
  4478  0089  0A6C               	incf	_Sw,w
  4479  008A  0086               	movwf	6
  4480  008B  3001               	movlw	1	; select bank2/3
  4481  008C  0087               	movwf	7
  4482  008D  1881               	btfsc	1,1
  4483  008E  289E               	goto	l2877
  4484                           
  4485                           ;Switch_B1.c: 126: Sw->Detect = 1;
  4486  008F  0A6C               	incf	_Sw,w
  4487  0090  0086               	movwf	6
  4488  0091  3001               	movlw	1	; select bank2/3
  4489  0092  0087               	movwf	7
  4490  0093  1481               	bsf	1,1
  4491                           
  4492                           ;Switch_B1.c: 128: Sw->Touch = 0;
  4493  0094  086C               	movf	_Sw,w
  4494  0095  0086               	movwf	6
  4495  0096  3001               	movlw	1	; select bank2/3
  4496  0097  0087               	movwf	7
  4497  0098  1081               	bcf	1,1
  4498                           
  4499                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  4500  0099  086C               	movf	_Sw,w
  4501  009A  0086               	movwf	6
  4502  009B  3001               	movlw	1	; select bank2/3
  4503  009C  0087               	movwf	7
  4504  009D  1501               	bsf	1,2
  4505  009E                     l2877:	
  4506                           
  4507                           ;Switch_B1.c: 130: }
  4508                           ;Switch_B1.c: 131: }
  4509                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  4510  009E  086C               	movf	_Sw,w
  4511  009F  0086               	movwf	6
  4512  00A0  3001               	movlw	1	; select bank2/3
  4513  00A1  0087               	movwf	7
  4514  00A2  1C81               	btfss	1,1
  4515  00A3  296D               	goto	l11305
  4516                           
  4517                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  4518  00A4  086C               	movf	_Sw,w
  4519  00A5  0086               	movwf	6
  4520  00A6  3001               	movlw	1	; select bank2/3
  4521  00A7  0087               	movwf	7
  4522  00A8  1901               	btfsc	1,2
  4523  00A9  28CB               	goto	l11271
  4524                           
  4525                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  4526  00AA  3001               	movlw	1
  4527  00AB  00AD               	movwf	??_setSw_Main
  4528  00AC  086C               	movf	_Sw,w
  4529  00AD  3E02               	addlw	2
  4530  00AE  0086               	movwf	6
  4531  00AF  3001               	movlw	1	; select bank2/3
  4532  00B0  0087               	movwf	7
  4533  00B1  082D               	movf	??_setSw_Main,w
  4534  00B2  0781               	addwf	1,f
  4535                           
  4536                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  4537  00B3  086C               	movf	_Sw,w
  4538  00B4  3E02               	addlw	2
  4539  00B5  0086               	movwf	6
  4540  00B6  3001               	movlw	1	; select bank2/3
  4541  00B7  0087               	movwf	7
  4542  00B8  3005               	movlw	5
  4543  00B9  0201               	subwf	1,w
  4544  00BA  1C03               	skipc
  4545  00BB  0008               	return
  4546                           
  4547                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  4548  00BC  086C               	movf	_Sw,w
  4549  00BD  3E02               	addlw	2
  4550  00BE  0086               	movwf	6
  4551  00BF  3001               	movlw	1	; select bank2/3
  4552  00C0  0087               	movwf	7
  4553  00C1  0181               	clrf	1
  4554                           
  4555                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  4556  00C2  086C               	movf	_Sw,w
  4557  00C3  0086               	movwf	6
  4558  00C4  3001               	movlw	1	; select bank2/3
  4559  00C5  0087               	movwf	7
  4560  00C6  1501               	bsf	1,2
  4561                           
  4562                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  4563  00C7  082F               	movf	setSw_Main@sw,w
  4564  00C8  3187  2766         	fcall	_setDimmerLights_SwOn
  4565                           
  4566                           ;Switch_B1.c: 147: }
  4567                           ;Switch_B1.c: 148: } else {
  4568  00CA  0008               	return
  4569  00CB                     l11271:	
  4570                           
  4571                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  4572  00CB  0020               	movlb	0	; select bank0
  4573  00CC  086C               	movf	_Sw,w
  4574  00CD  0086               	movwf	6
  4575  00CE  3001               	movlw	1	; select bank2/3
  4576  00CF  0087               	movwf	7
  4577  00D0  1981               	btfsc	1,3
  4578  00D1  28FD               	goto	l11281
  4579                           
  4580                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  4581  00D2  086C               	movf	_Sw,w
  4582  00D3  3E03               	addlw	3
  4583  00D4  0086               	movwf	6
  4584  00D5  3001               	movlw	1	; select bank2/3
  4585  00D6  0087               	movwf	7
  4586  00D7  3001               	movlw	1
  4587  00D8  0781               	addwf	1,f
  4588  00D9  3141               	addfsr 1,1
  4589  00DA  1803               	skipnc
  4590  00DB  0A81               	incf	1,f
  4591                           
  4592                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  4593  00DC  086C               	movf	_Sw,w
  4594  00DD  3E03               	addlw	3
  4595  00DE  0086               	movwf	6
  4596  00DF  3001               	movlw	1	; select bank2/3
  4597  00E0  0087               	movwf	7
  4598  00E1  3F40               	moviw [0]fsr1
  4599  00E2  00AD               	movwf	??_setSw_Main
  4600  00E3  3F41               	moviw [1]fsr1
  4601  00E4  00AE               	movwf	??_setSw_Main+1
  4602  00E5  3000               	movlw	0
  4603  00E6  022E               	subwf	??_setSw_Main+1,w
  4604  00E7  304B               	movlw	75
  4605  00E8  1903               	skipnz
  4606  00E9  022D               	subwf	??_setSw_Main,w
  4607  00EA  1C03               	skipc
  4608  00EB  0008               	return
  4609                           
  4610                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  4611  00EC  086C               	movf	_Sw,w
  4612  00ED  3E03               	addlw	3
  4613  00EE  0086               	movwf	6
  4614  00EF  3001               	movlw	1	; select bank2/3
  4615  00F0  0087               	movwf	7
  4616  00F1  3000               	movlw	0
  4617  00F2  3FC0               	movwi [0]fsr1
  4618  00F3  3FC1               	movwi [1]fsr1
  4619                           
  4620                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  4621  00F4  086C               	movf	_Sw,w
  4622  00F5  0086               	movwf	6
  4623  00F6  3001               	movlw	1	; select bank2/3
  4624  00F7  0087               	movwf	7
  4625  00F8  1581               	bsf	1,3
  4626                           
  4627                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  4628  00F9  082F               	movf	setSw_Main@sw,w
  4629  00FA  3192  22E9         	fcall	_setDimmerLights_DimmingOn
  4630                           
  4631                           ;Switch_B1.c: 162: }
  4632                           ;Switch_B1.c: 163: } else {
  4633  00FC  0008               	return
  4634  00FD                     l11281:	
  4635                           
  4636                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  4637  00FD  0020               	movlb	0	; select bank0
  4638  00FE  086C               	movf	_Sw,w
  4639  00FF  0086               	movwf	6
  4640  0100  3001               	movlw	1	; select bank2/3
  4641  0101  0087               	movwf	7
  4642  0102  1A01               	btfsc	1,4
  4643  0103  293B               	goto	l11295
  4644                           
  4645                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  4646  0104  086C               	movf	_Sw,w
  4647  0105  3E05               	addlw	5
  4648  0106  0086               	movwf	6
  4649  0107  3001               	movlw	1	; select bank2/3
  4650  0108  0087               	movwf	7
  4651  0109  3001               	movlw	1
  4652  010A  0781               	addwf	1,f
  4653  010B  3141               	addfsr 1,1
  4654  010C  1803               	skipnc
  4655  010D  0A81               	incf	1,f
  4656                           
  4657                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  4658  010E  086C               	movf	_Sw,w
  4659  010F  3E05               	addlw	5
  4660  0110  0086               	movwf	6
  4661  0111  3001               	movlw	1	; select bank2/3
  4662  0112  0087               	movwf	7
  4663  0113  3F40               	moviw [0]fsr1
  4664  0114  00AD               	movwf	??_setSw_Main
  4665  0115  3F41               	moviw [1]fsr1
  4666  0116  00AE               	movwf	??_setSw_Main+1
  4667  0117  3000               	movlw	0
  4668  0118  022E               	subwf	??_setSw_Main+1,w
  4669  0119  304B               	movlw	75
  4670  011A  1903               	skipnz
  4671  011B  022D               	subwf	??_setSw_Main,w
  4672  011C  1C03               	skipc
  4673  011D  0008               	return
  4674                           
  4675                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  4676  011E  086C               	movf	_Sw,w
  4677  011F  3E05               	addlw	5
  4678  0120  0086               	movwf	6
  4679  0121  3001               	movlw	1	; select bank2/3
  4680  0122  0087               	movwf	7
  4681  0123  3000               	movlw	0
  4682  0124  3FC0               	movwi [0]fsr1
  4683  0125  3FC1               	movwi [1]fsr1
  4684                           
  4685                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  4686  0126  086C               	movf	_Sw,w
  4687  0127  0086               	movwf	6
  4688  0128  3001               	movlw	1	; select bank2/3
  4689  0129  0087               	movwf	7
  4690  012A  1601               	bsf	1,4
  4691                           
  4692                           ;Switch_B1.c: 172: setRF_Learn(1);
  4693  012B  3001               	movlw	1
  4694  012C  319E  2687  3180   	fcall	_setRF_Learn
  4695                           
  4696                           ;Switch_B1.c: 173: if (myMain.First == 1) {
  4697  012F  0021               	movlb	1	; select bank1
  4698  0130  1EBF               	btfss	_myMain^(0+128),5
  4699  0131  0008               	return
  4700                           
  4701                           ;Switch_B1.c: 174: setBuz(2, 100);
  4702  0132  3064               	movlw	100
  4703  0133  0020               	movlb	0	; select bank0
  4704  0134  00A4               	movwf	setBuz@time
  4705  0135  3000               	movlw	0
  4706  0136  00A5               	movwf	setBuz@time+1
  4707  0137  3002               	movlw	2
  4708  0138  3188  2050         	fcall	_setBuz
  4709                           
  4710                           ;Switch_B1.c: 175: }
  4711                           ;Switch_B1.c: 179: }
  4712                           ;Switch_B1.c: 180: } else {
  4713  013A  0008               	return
  4714  013B                     l11295:	
  4715                           
  4716                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  4717  013B  0020               	movlb	0	; select bank0
  4718  013C  086C               	movf	_Sw,w
  4719  013D  0086               	movwf	6
  4720  013E  3001               	movlw	1	; select bank2/3
  4721  013F  0087               	movwf	7
  4722  0140  1A81               	btfsc	1,5
  4723  0141  0008               	return
  4724                           
  4725                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  4726  0142  086C               	movf	_Sw,w
  4727  0143  3E07               	addlw	7
  4728  0144  0086               	movwf	6
  4729  0145  3001               	movlw	1	; select bank2/3
  4730  0146  0087               	movwf	7
  4731  0147  3001               	movlw	1
  4732  0148  0781               	addwf	1,f
  4733  0149  3141               	addfsr 1,1
  4734  014A  1803               	skipnc
  4735  014B  0A81               	incf	1,f
  4736                           
  4737                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  4738  014C  086C               	movf	_Sw,w
  4739  014D  3E07               	addlw	7
  4740  014E  0086               	movwf	6
  4741  014F  3001               	movlw	1	; select bank2/3
  4742  0150  0087               	movwf	7
  4743  0151  3F40               	moviw [0]fsr1
  4744  0152  00AD               	movwf	??_setSw_Main
  4745  0153  3F41               	moviw [1]fsr1
  4746  0154  00AE               	movwf	??_setSw_Main+1
  4747  0155  3000               	movlw	0
  4748  0156  022E               	subwf	??_setSw_Main+1,w
  4749  0157  3096               	movlw	150
  4750  0158  1903               	skipnz
  4751  0159  022D               	subwf	??_setSw_Main,w
  4752  015A  1C03               	skipc
  4753  015B  0008               	return
  4754                           
  4755                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  4756  015C  086C               	movf	_Sw,w
  4757  015D  3E07               	addlw	7
  4758  015E  0086               	movwf	6
  4759  015F  3001               	movlw	1	; select bank2/3
  4760  0160  0087               	movwf	7
  4761  0161  3000               	movlw	0
  4762  0162  3FC0               	movwi [0]fsr1
  4763  0163  3FC1               	movwi [1]fsr1
  4764                           
  4765                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  4766  0164  086C               	movf	_Sw,w
  4767  0165  0086               	movwf	6
  4768  0166  3001               	movlw	1	; select bank2/3
  4769  0167  0087               	movwf	7
  4770  0168  1681               	bsf	1,5
  4771                           
  4772                           ;Switch_B1.c: 188: setRF_Learn(0);
  4773  0169  3000               	movlw	0
  4774  016A  319E  2687         	fcall	_setRF_Learn
  4775                           
  4776                           ;Switch_B1.c: 191: }
  4777                           ;Switch_B1.c: 192: }
  4778                           ;Switch_B1.c: 193: }
  4779                           ;Switch_B1.c: 195: }
  4780                           ;Switch_B1.c: 196: }
  4781                           ;Switch_B1.c: 197: } else {
  4782  016C  0008               	return
  4783  016D                     l11305:	
  4784                           
  4785                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  4786  016D  0020               	movlb	0	; select bank0
  4787  016E  086C               	movf	_Sw,w
  4788  016F  0086               	movwf	6
  4789  0170  3001               	movlw	1	; select bank2/3
  4790  0171  0087               	movwf	7
  4791  0172  1D01               	btfss	1,2
  4792  0173  0008               	return
  4793                           
  4794                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  4795  0174  3001               	movlw	1
  4796  0175  00AD               	movwf	??_setSw_Main
  4797  0176  086C               	movf	_Sw,w
  4798  0177  3E02               	addlw	2
  4799  0178  0086               	movwf	6
  4800  0179  3001               	movlw	1	; select bank2/3
  4801  017A  0087               	movwf	7
  4802  017B  082D               	movf	??_setSw_Main,w
  4803  017C  0781               	addwf	1,f
  4804                           
  4805                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  4806  017D  086C               	movf	_Sw,w
  4807  017E  3E02               	addlw	2
  4808  017F  0086               	movwf	6
  4809  0180  3001               	movlw	1	; select bank2/3
  4810  0181  0087               	movwf	7
  4811  0182  3005               	movlw	5
  4812  0183  0201               	subwf	1,w
  4813  0184  1C03               	skipc
  4814  0185  0008               	return
  4815                           
  4816                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  4817  0186  086C               	movf	_Sw,w
  4818  0187  3E02               	addlw	2
  4819  0188  0086               	movwf	6
  4820  0189  3001               	movlw	1	; select bank2/3
  4821  018A  0087               	movwf	7
  4822  018B  0181               	clrf	1
  4823                           
  4824                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  4825  018C  086C               	movf	_Sw,w
  4826  018D  0086               	movwf	6
  4827  018E  3001               	movlw	1	; select bank2/3
  4828  018F  0087               	movwf	7
  4829  0190  1101               	bcf	1,2
  4830                           
  4831                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  4832  0191  086C               	movf	_Sw,w
  4833  0192  3E03               	addlw	3
  4834  0193  0086               	movwf	6
  4835  0194  3001               	movlw	1	; select bank2/3
  4836  0195  0087               	movwf	7
  4837  0196  3000               	movlw	0
  4838  0197  3FC0               	movwi [0]fsr1
  4839  0198  3FC1               	movwi [1]fsr1
  4840                           
  4841                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  4842  0199  086C               	movf	_Sw,w
  4843  019A  0086               	movwf	6
  4844  019B  3001               	movlw	1	; select bank2/3
  4845  019C  0087               	movwf	7
  4846  019D  1181               	bcf	1,3
  4847                           
  4848                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  4849  019E  086C               	movf	_Sw,w
  4850  019F  0086               	movwf	6
  4851  01A0  3001               	movlw	1	; select bank2/3
  4852  01A1  0087               	movwf	7
  4853  01A2  1201               	bcf	1,4
  4854                           
  4855                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  4856  01A3  086C               	movf	_Sw,w
  4857  01A4  0086               	movwf	6
  4858  01A5  3001               	movlw	1	; select bank2/3
  4859  01A6  0087               	movwf	7
  4860  01A7  1281               	bcf	1,5
  4861                           
  4862                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  4863  01A8  086C               	movf	_Sw,w
  4864  01A9  3E05               	addlw	5
  4865  01AA  0086               	movwf	6
  4866  01AB  3001               	movlw	1	; select bank2/3
  4867  01AC  0087               	movwf	7
  4868  01AD  3000               	movlw	0
  4869  01AE  3FC0               	movwi [0]fsr1
  4870  01AF  3FC1               	movwi [1]fsr1
  4871                           
  4872                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  4873  01B0  086C               	movf	_Sw,w
  4874  01B1  3E07               	addlw	7
  4875  01B2  0086               	movwf	6
  4876  01B3  3001               	movlw	1	; select bank2/3
  4877  01B4  0087               	movwf	7
  4878  01B5  3000               	movlw	0
  4879  01B6  3FC0               	movwi [0]fsr1
  4880  01B7  3FC1               	movwi [1]fsr1
  4881                           
  4882                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  4883  01B8  082F               	movf	setSw_Main@sw,w
  4884  01B9  3194  2432  3180   	fcall	_setDimmerLights_SwOff
  4885                           
  4886                           ;Switch_B1.c: 220: setRF_Learn(0);
  4887  01BC  3000               	movlw	0
  4888  01BD  319E  2687         	fcall	_setRF_Learn
  4889                           
  4890                           ;Switch_B1.c: 222: }
  4891                           ;Switch_B1.c: 223: }
  4892                           ;Switch_B1.c: 224: }
  4893                           ;Switch_B1.c: 225: } else {
  4894  01BF  0008               	return
  4895  01C0                     l2875:	
  4896                           
  4897                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  4898  01C0  0021               	movlb	1	; select bank1
  4899  01C1  1C3F               	btfss	_myMain^(0+128),0
  4900  01C2  0008               	return
  4901                           
  4902                           ;Switch_B1.c: 227: Sw->Enable = 1;
  4903  01C3  0020               	movlb	0	; select bank0
  4904  01C4  086C               	movf	_Sw,w
  4905  01C5  0086               	movwf	6
  4906  01C6  3001               	movlw	1	; select bank2/3
  4907  01C7  0087               	movwf	7
  4908  01C8  1401               	bsf	1,0
  4909  01C9  0008               	return
  4910  01CA                     __end_of_setSw_Main:	
  4911                           
  4912                           	psect	text7
  4913  1E87                     __ptext7:	
  4914 ;; *************** function _setRF_Learn *****************
  4915 ;; Defined at:
  4916 ;;		line 33 in file "../src/RF_Control_B1.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  command         1    wreg     unsigned char 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  command         1    3[COMMON] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;Total ram usage:        2 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    3
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_setSw_Main
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _setRF_Learn
  4946  1E87                     _setRF_Learn:	
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _setRF_Learn: [wreg+status,2+status,0]
  4950                           ;setRF_Learn@command stored from wreg
  4951  1E87  00F3               	movwf	setRF_Learn@command
  4952                           
  4953                           ;RF_Control_B1.c: 34: RF1.Learn = command == 1 ? 1 : 0;
  4954  1E88  0873               	movf	setRF_Learn@command,w
  4955  1E89  3A01               	xorlw	1
  4956  1E8A  3000               	movlw	0
  4957  1E8B  1903               	skipnz
  4958  1E8C  3001               	movlw	1
  4959  1E8D  00F2               	movwf	??_setRF_Learn
  4960  1E8E  0EF2               	swapf	??_setRF_Learn,f
  4961  1E8F  0DF2               	rlf	??_setRF_Learn,f
  4962  1E90  0DF2               	rlf	??_setRF_Learn,f
  4963  1E91  0021               	movlb	1	; select bank1
  4964  1E92  0830               	movf	_RF1^(0+128),w
  4965  1E93  0672               	xorwf	??_setRF_Learn,w
  4966  1E94  39BF               	andlw	-65
  4967  1E95  0672               	xorwf	??_setRF_Learn,w
  4968  1E96  00B0               	movwf	_RF1^(0+128)
  4969  1E97  0008               	return
  4970  1E98                     __end_of_setRF_Learn:	
  4971                           
  4972                           	psect	text8
  4973  12E9                     __ptext8:	
  4974 ;; *************** function _setDimmerLights_DimmingOn *****************
  4975 ;; Defined at:
  4976 ;;		line 846 in file "../src/Dimmer_B1.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  sw              1    wreg     unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  sw              1    4[COMMON] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;		None               void
  4983 ;; Registers used:
  4984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;Total ram usage:        1 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    4
  4997 ;; This function calls:
  4998 ;;		_DimmerLights_SelectPointer
  4999 ;; This function is called by:
  5000 ;;		_setSw_Main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _setDimmerLights_DimmingOn
  5006  12E9                     _setDimmerLights_DimmingOn:	
  5007                           
  5008                           ;incstack = 0
  5009                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5010                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5011  12E9  00F4               	movwf	setDimmerLights_DimmingOn@sw
  5012                           
  5013                           ;Dimmer_B1.c: 852: DimmerLights_SelectPointer(sw);
  5014  12EA  0874               	movf	setDimmerLights_DimmingOn@sw,w
  5015  12EB  3191  2193  3192   	fcall	_DimmerLights_SelectPointer
  5016                           
  5017                           ;Dimmer_B1.c: 853: if (DimmerLights->Trigger == 0) {
  5018  12EE  0020               	movlb	0	; select bank0
  5019  12EF  086A               	movf	_DimmerLights,w
  5020  12F0  0086               	movwf	6
  5021  12F1  3001               	movlw	1	; select bank2/3
  5022  12F2  0087               	movwf	7
  5023  12F3  1881               	btfsc	1,1
  5024  12F4  0008               	return
  5025                           
  5026                           ;Dimmer_B1.c: 854: if (DimmerLights->SwFlag == 1) {
  5027  12F5  086A               	movf	_DimmerLights,w
  5028  12F6  0086               	movwf	6
  5029  12F7  3001               	movlw	1	; select bank2/3
  5030  12F8  0087               	movwf	7
  5031  12F9  1C01               	btfss	1,0
  5032  12FA  0008               	return
  5033                           
  5034                           ;Dimmer_B1.c: 855: DimmerLights->Status = 1;
  5035  12FB  0A6A               	incf	_DimmerLights,w
  5036  12FC  0086               	movwf	6
  5037  12FD  3001               	movlw	1	; select bank2/3
  5038  12FE  0087               	movwf	7
  5039  12FF  1401               	bsf	1,0
  5040                           
  5041                           ;Dimmer_B1.c: 857: DimmerLights->DimmingSwFlag = 1;
  5042  1300  086A               	movf	_DimmerLights,w
  5043  1301  0086               	movwf	6
  5044  1302  3001               	movlw	1	; select bank2/3
  5045  1303  0087               	movwf	7
  5046  1304  1581               	bsf	1,3
  5047                           
  5048                           ;Dimmer_B1.c: 858: DimmerLights->DimmingTrigger = 1;
  5049  1305  086A               	movf	_DimmerLights,w
  5050  1306  0086               	movwf	6
  5051  1307  3001               	movlw	1	; select bank2/3
  5052  1308  0087               	movwf	7
  5053  1309  1601               	bsf	1,4
  5054                           
  5055                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwitch = 1;
  5056  130A  086A               	movf	_DimmerLights,w
  5057  130B  0086               	movwf	6
  5058  130C  3001               	movlw	1	; select bank2/3
  5059  130D  0087               	movwf	7
  5060  130E  1681               	bsf	1,5
  5061  130F  0008               	return
  5062  1310                     __end_of_setDimmerLights_DimmingOn:	
  5063                           
  5064                           	psect	text9
  5065  11D5                     __ptext9:	
  5066 ;; *************** function _getSw_KeyStatus *****************
  5067 ;; Defined at:
  5068 ;;		line 238 in file "../src/Switch_B1.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  sw              1    wreg     unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  sw              1    3[COMMON] unsigned char 
  5073 ;;  status          1    2[COMMON] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      unsigned char 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;Total ram usage:        2 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    3
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_setSw_Main
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _getSw_KeyStatus
  5099  11D5                     _getSw_KeyStatus:	
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5103                           ;getSw_KeyStatus@sw stored from wreg
  5104  11D5  00F3               	movwf	getSw_KeyStatus@sw
  5105                           
  5106                           ;Switch_B1.c: 239: char status = 0;
  5107  11D6  01F2               	clrf	getSw_KeyStatus@status
  5108                           
  5109                           ;Switch_B1.c: 241: if (sw == 1) {
  5110  11D7  0873               	movf	getSw_KeyStatus@sw,w
  5111  11D8  3A01               	xorlw	1
  5112  11D9  1D03               	skipz
  5113  11DA  29E1               	goto	l7675
  5114                           
  5115                           ;Switch_B1.c: 242: status = (RA0 == 1) ? 1 : 0;
  5116  11DB  3000               	movlw	0
  5117  11DC  0020               	movlb	0	; select bank0
  5118  11DD  180C               	btfsc	12,0	;volatile
  5119  11DE  3001               	movlw	1
  5120  11DF  00F2               	movwf	getSw_KeyStatus@status
  5121                           
  5122                           ;Switch_B1.c: 243: } else if (sw == 2) {
  5123  11E0  29F4               	goto	l7683
  5124  11E1                     l7675:	
  5125  11E1  0873               	movf	getSw_KeyStatus@sw,w
  5126  11E2  3A02               	xorlw	2
  5127  11E3  1D03               	skipz
  5128  11E4  29EB               	goto	l7679
  5129                           
  5130                           ;Switch_B1.c: 244: status = (RA6 == 1) ? 1 : 0;
  5131  11E5  3000               	movlw	0
  5132  11E6  0020               	movlb	0	; select bank0
  5133  11E7  1B0C               	btfsc	12,6	;volatile
  5134  11E8  3001               	movlw	1
  5135  11E9  00F2               	movwf	getSw_KeyStatus@status
  5136                           
  5137                           ;Switch_B1.c: 245: } else if (sw == 3) {
  5138  11EA  29F4               	goto	l7683
  5139  11EB                     l7679:	
  5140  11EB  0873               	movf	getSw_KeyStatus@sw,w
  5141  11EC  3A03               	xorlw	3
  5142  11ED  1D03               	skipz
  5143  11EE  29F4               	goto	l7683
  5144                           
  5145                           ;Switch_B1.c: 246: status = (RA4 == 1) ? 1 : 0;
  5146  11EF  3000               	movlw	0
  5147  11F0  0020               	movlb	0	; select bank0
  5148  11F1  1A0C               	btfsc	12,4	;volatile
  5149  11F2  3001               	movlw	1
  5150  11F3  00F2               	movwf	getSw_KeyStatus@status
  5151  11F4                     l7683:	
  5152                           
  5153                           ;Switch_B1.c: 247: }
  5154                           ;Switch_B1.c: 283: return status;
  5155  11F4  0872               	movf	getSw_KeyStatus@status,w
  5156  11F5  0008               	return
  5157  11F6                     __end_of_getSw_KeyStatus:	
  5158                           
  5159                           	psect	text10
  5160  1154                     __ptext10:	
  5161 ;; *************** function _SwPointSelect *****************
  5162 ;; Defined at:
  5163 ;;		line 25 in file "../src/Switch_B1.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  sw              1    wreg     unsigned char 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  sw              1    3[COMMON] unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;		None               void
  5170 ;; Registers used:
  5171 ;;		wreg
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    3
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_setSw_Main
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _SwPointSelect
  5193  1154                     _SwPointSelect:	
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _SwPointSelect: [wreg]
  5197                           ;SwPointSelect@sw stored from wreg
  5198  1154  00F3               	movwf	SwPointSelect@sw
  5199                           
  5200                           ;Switch_B1.c: 28: if (sw == 1) {
  5201  1155  0873               	movf	SwPointSelect@sw,w
  5202  1156  3A01               	xorlw	1
  5203  1157  1D03               	skipz
  5204  1158  295F               	goto	l7661
  5205                           
  5206                           ;Switch_B1.c: 29: Sw = &Sw1;
  5207  1159  30BE               	movlw	_Sw1& (0+255)
  5208  115A  00F2               	movwf	??_SwPointSelect
  5209  115B  0872               	movf	??_SwPointSelect,w
  5210  115C  0020               	movlb	0	; select bank0
  5211  115D  00EC               	movwf	_Sw
  5212                           
  5213                           ;Switch_B1.c: 30: }
  5214  115E  0008               	return
  5215  115F                     l7661:	
  5216                           
  5217                           ;Switch_B1.c: 33: else if (sw == 2) {
  5218  115F  0873               	movf	SwPointSelect@sw,w
  5219  1160  3A02               	xorlw	2
  5220  1161  1D03               	skipz
  5221  1162  2969               	goto	l7665
  5222                           
  5223                           ;Switch_B1.c: 34: Sw = &Sw2;
  5224  1163  30C7               	movlw	_Sw2& (0+255)
  5225  1164  00F2               	movwf	??_SwPointSelect
  5226  1165  0872               	movf	??_SwPointSelect,w
  5227  1166  0020               	movlb	0	; select bank0
  5228  1167  00EC               	movwf	_Sw
  5229                           
  5230                           ;Switch_B1.c: 35: }
  5231  1168  0008               	return
  5232  1169                     l7665:	
  5233                           
  5234                           ;Switch_B1.c: 38: else if (sw == 3) {
  5235  1169  0873               	movf	SwPointSelect@sw,w
  5236  116A  3A03               	xorlw	3
  5237  116B  1D03               	skipz
  5238  116C  0008               	return
  5239                           
  5240                           ;Switch_B1.c: 39: Sw = &Sw3;
  5241  116D  30D0               	movlw	_Sw3& (0+255)
  5242  116E  00F2               	movwf	??_SwPointSelect
  5243  116F  0872               	movf	??_SwPointSelect,w
  5244  1170  0020               	movlb	0	; select bank0
  5245  1171  00EC               	movwf	_Sw
  5246  1172  0008               	return
  5247  1173                     __end_of_SwPointSelect:	
  5248                           
  5249                           	psect	text11
  5250  1F26                     __ptext11:	
  5251 ;; *************** function _TouchPower *****************
  5252 ;; Defined at:
  5253 ;;		line 10 in file "../src/Switch_B1.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;		None               void
  5260 ;; Registers used:
  5261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    4
  5274 ;; This function calls:
  5275 ;;		_Timeout_Counter
  5276 ;;		_set_TimeoutCleared
  5277 ;; This function is called by:
  5278 ;;		_Switch_Main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _TouchPower
  5284  1F26                     _TouchPower:	
  5285                           
  5286                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  5287                           
  5288                           ;incstack = 0
  5289                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5290  1F26  0021               	movlb	1	; select bank1
  5291  1F27  1C3F               	btfss	_myMain^(0+128),0
  5292  1F28  0008               	return
  5293                           
  5294                           ;Switch_B1.c: 12: if (RC5 == 0) {
  5295  1F29  0020               	movlb	0	; select bank0
  5296  1F2A  1A8E               	btfsc	14,5	;volatile
  5297  1F2B  0008               	return
  5298  1F2C  2F32               	goto	l8239
  5299  1F2D                     l2851:	
  5300                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  5301                           
  5302                           
  5303                           ;Switch_B1.c: 14: RC5 = 1;
  5304  1F2D  0020               	movlb	0	; select bank0
  5305  1F2E  168E               	bsf	14,5	;volatile
  5306                           
  5307                           ;Switch_B1.c: 15: Timeout_Counter();
  5308  1F2F  319F  2711  319F   	fcall	_Timeout_Counter
  5309  1F32                     l8239:	
  5310  1F32  0020               	movlb	0	; select bank0
  5311  1F33  1A8E               	btfsc	14,5	;volatile
  5312  1F34  2F38               	goto	l8243
  5313  1F35  0021               	movlb	1	; select bank1
  5314  1F36  1D49               	btfss	(_myMain^(0+128)+10),2
  5315  1F37  2F2D               	goto	l2851
  5316  1F38                     l8243:	
  5317                           
  5318                           ;Switch_B1.c: 16: }
  5319                           ;Switch_B1.c: 17: set_TimeoutCleared();
  5320  1F38  319C  24C1         	fcall	_set_TimeoutCleared
  5321  1F3A  0008               	return
  5322  1F3B                     __end_of_TouchPower:	
  5323                           
  5324                           	psect	text12
  5325  1CC1                     __ptext12:	
  5326 ;; *************** function _set_TimeoutCleared *****************
  5327 ;; Defined at:
  5328 ;;		line 286 in file "../src/Main_B1.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;		None               void
  5335 ;; Registers used:
  5336 ;;		status,2
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    3
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_TouchPower
  5353 ;;		_getAD
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _set_TimeoutCleared
  5359  1CC1                     _set_TimeoutCleared:	
  5360                           
  5361                           ;Main_B1.c: 287: myMain.Timeout = 0;
  5362                           
  5363                           ;incstack = 0
  5364                           ; Regs used in _set_TimeoutCleared: [status,2]
  5365  1CC1  0021               	movlb	1	; select bank1
  5366  1CC2  1149               	bcf	(_myMain^(0+128)+10),2
  5367                           
  5368                           ;Main_B1.c: 288: myMain.Timeout_Counter = 0;
  5369  1CC3  01CA               	clrf	(_myMain^(0+128)+11)
  5370  1CC4  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5371  1CC5  0008               	return
  5372  1CC6                     __end_of_set_TimeoutCleared:	
  5373                           
  5374                           	psect	text13
  5375  1F11                     __ptext13:	
  5376 ;; *************** function _Timeout_Counter *****************
  5377 ;; Defined at:
  5378 ;;		line 277 in file "../src/Main_B1.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    3
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_TouchPower
  5403 ;;		_getAD
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _Timeout_Counter
  5409  1F11                     _Timeout_Counter:	
  5410                           
  5411                           ;Main_B1.c: 278: myMain.Timeout_Counter++;
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5415  1F11  3001               	movlw	1
  5416  1F12  0021               	movlb	1	; select bank1
  5417  1F13  07CA               	addwf	(_myMain^(0+128)+11),f
  5418  1F14  3000               	movlw	0
  5419  1F15  3DCB               	addwfc	((_myMain+1)^(0+128)+11),f
  5420                           
  5421                           ;Main_B1.c: 279: if (myMain.Timeout_Counter == 25000) {
  5422  1F16  300B               	movlw	11
  5423  1F17  3EBF               	addlw	_myMain& (0+255)
  5424  1F18  0086               	movwf	6
  5425  1F19  0187               	clrf	7
  5426  1F1A  3F40               	moviw [0]fsr1
  5427  1F1B  3AA8               	xorlw	168
  5428  1F1C  1D03               	skipz
  5429  1F1D  2F20               	goto	u7255
  5430  1F1E  3F41               	moviw [1]fsr1
  5431  1F1F  3A61               	xorlw	97
  5432  1F20                     u7255:	
  5433  1F20  1D03               	skipz
  5434  1F21  0008               	return
  5435                           
  5436                           ;Main_B1.c: 280: myMain.Timeout_Counter = 0;
  5437  1F22  01CA               	clrf	(_myMain^(0+128)+11)
  5438  1F23  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5439                           
  5440                           ;Main_B1.c: 281: myMain.Timeout = 1;
  5441  1F24  1549               	bsf	(_myMain^(0+128)+10),2
  5442  1F25  0008               	return
  5443  1F26                     __end_of_Timeout_Counter:	
  5444                           
  5445                           	psect	text14
  5446  1068                     __ptext14:	
  5447 ;; *************** function _Switch_Initialization *****************
  5448 ;; Defined at:
  5449 ;;		line 46 in file "../src/Switch_B1.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;Total ram usage:        0 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    6
  5470 ;; This function calls:
  5471 ;;		_setSw_Initialization
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _Switch_Initialization
  5479  1068                     _Switch_Initialization:	
  5480                           
  5481                           ;Switch_B1.c: 52: setSw_Initialization(1);
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5485  1068  3001               	movlw	1
  5486  1069  319C  24E0  3190   	fcall	_setSw_Initialization
  5487                           
  5488                           ;Switch_B1.c: 56: setSw_Initialization(2);
  5489  106C  3002               	movlw	2
  5490  106D  319C  24E0  3190   	fcall	_setSw_Initialization
  5491                           
  5492                           ;Switch_B1.c: 60: setSw_Initialization(3);
  5493  1070  3003               	movlw	3
  5494  1071  319C  24E0         	fcall	_setSw_Initialization
  5495  1073  0008               	return
  5496  1074                     __end_of_Switch_Initialization:	
  5497                           
  5498                           	psect	text15
  5499  1CE0                     __ptext15:	
  5500 ;; *************** function _setSw_Initialization *****************
  5501 ;; Defined at:
  5502 ;;		line 66 in file "../src/Switch_B1.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  sw              1    wreg     unsigned char 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  sw              1    5[COMMON] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;		None               void
  5509 ;; Registers used:
  5510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;Total ram usage:        1 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    5
  5523 ;; This function calls:
  5524 ;;		_setLED
  5525 ;; This function is called by:
  5526 ;;		_Switch_Initialization
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function _setSw_Initialization
  5532  1CE0                     _setSw_Initialization:	
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5536                           ;setSw_Initialization@sw stored from wreg
  5537  1CE0  00F5               	movwf	setSw_Initialization@sw
  5538                           
  5539                           ;Switch_B1.c: 68: setLED(sw, 1);
  5540  1CE1  01F3               	clrf	setLED@command
  5541  1CE2  0AF3               	incf	setLED@command,f
  5542  1CE3  0875               	movf	setSw_Initialization@sw,w
  5543  1CE4  318C  2417         	fcall	_setLED
  5544  1CE6  0008               	return
  5545  1CE7                     __end_of_setSw_Initialization:	
  5546                           
  5547                           	psect	text16
  5548  1CA5                     __ptext16:	
  5549 ;; *************** function _RF_Main *****************
  5550 ;; Defined at:
  5551 ;;		line 26 in file "../src/RF_Control_B1.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:   10
  5572 ;; This function calls:
  5573 ;;		_setRF_Main
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _RF_Main
  5581  1CA5                     _RF_Main:	
  5582                           
  5583                           ;RF_Control_B1.c: 28: setRF_Main();
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5587  1CA5  3185  2536         	fcall	_setRF_Main
  5588  1CA7  0008               	return
  5589  1CA8                     __end_of_RF_Main:	
  5590                           
  5591                           	psect	text17
  5592  0536                     __ptext17:	
  5593 ;; *************** function _setRF_Main *****************
  5594 ;; Defined at:
  5595 ;;		line 53 in file "../src/RF_Control_B1.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  error           1   71[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    9
  5616 ;; This function calls:
  5617 ;;		_CC2500_PowerOnInitial
  5618 ;;		_CC2500_RxData
  5619 ;;		_CC2500_TxData
  5620 ;;		_CC2500_WriteCommand
  5621 ;;		_RF_RxDisable
  5622 ;;		___lwdiv
  5623 ;;		_getBuz_GO
  5624 ;;		_getRF_KeyStatus
  5625 ;;		_getRxData
  5626 ;;		_setData
  5627 ;; This function is called by:
  5628 ;;		_RF_Main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function _setRF_Main
  5634  0536                     _setRF_Main:	
  5635                           
  5636                           ;RF_Control_B1.c: 54: char error = 0;
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5640  0536  0020               	movlb	0	; select bank0
  5641  0537  01E7               	clrf	setRF_Main@error
  5642                           
  5643                           ;RF_Control_B1.c: 55: if (RF1.Enable == 1) {
  5644  0538  0021               	movlb	1	; select bank1
  5645  0539  1C30               	btfss	_RF1^(0+128),0
  5646  053A  2DF1               	goto	l2410
  5647                           
  5648                           ;RF_Control_B1.c: 56: if (getBuz_GO() == 0) {
  5649  053B  319E  2646  3185   	fcall	_getBuz_GO
  5650  053E  0873               	movf	?_getBuz_GO+1,w
  5651  053F  0472               	iorwf	?_getBuz_GO,w
  5652  0540  1D03               	skipz
  5653  0541  2DD6               	goto	l11223
  5654                           
  5655                           ;RF_Control_B1.c: 59: RF1.Key = getRF_KeyStatus() == 1 ? 1 : 0;
  5656  0542  319D  25C9  3185   	fcall	_getRF_KeyStatus
  5657  0545  3A01               	xorlw	1
  5658  0546  3000               	movlw	0
  5659  0547  1903               	skipnz
  5660  0548  3001               	movlw	1
  5661  0549  0020               	movlb	0	; select bank0
  5662  054A  00E6               	movwf	??_setRF_Main
  5663  054B  0CE6               	rrf	??_setRF_Main,f
  5664  054C  0CE6               	rrf	??_setRF_Main,f
  5665  054D  0021               	movlb	1	; select bank1
  5666  054E  0830               	movf	_RF1^(0+128),w
  5667  054F  0020               	movlb	0	; select bank0
  5668  0550  0666               	xorwf	??_setRF_Main,w
  5669  0551  397F               	andlw	-129
  5670  0552  0666               	xorwf	??_setRF_Main,w
  5671  0553  0021               	movlb	1	; select bank1
  5672  0554  00B0               	movwf	_RF1^(0+128)
  5673                           
  5674                           ;RF_Control_B1.c: 64: if (RF1.Key == 0 || RF1.Learn == 1) {
  5675  0555  1FB0               	btfss	_RF1^(0+128),7
  5676  0556  2D59               	goto	l2414
  5677  0557  1F30               	btfss	_RF1^(0+128),6
  5678  0558  2DD6               	goto	l11223
  5679  0559                     l2414:	
  5680                           
  5681                           ;RF_Control_B1.c: 66: if (RF1.TransceiveGO == 1) {
  5682  0559  1D30               	btfss	_RF1^(0+128),2
  5683  055A  2D9D               	goto	l2415
  5684                           
  5685                           ;RF_Control_B1.c: 67: if (RF1.Learn == 0) {
  5686  055B  1B30               	btfsc	_RF1^(0+128),6
  5687  055C  2D98               	goto	l11195
  5688                           
  5689                           ;RF_Control_B1.c: 68: RF1.Count++;
  5690  055D  3001               	movlw	1
  5691  055E  07B3               	addwf	(_RF1^(0+128)+3),f
  5692  055F  3000               	movlw	0
  5693  0560  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5694                           
  5695                           ;RF_Control_B1.c: 69: if (RF1.Count >= (RF1.RunTime / 20)) {
  5696  0561  3014               	movlw	20
  5697  0562  00F2               	movwf	___lwdiv@divisor
  5698  0563  3000               	movlw	0
  5699  0564  00F3               	movwf	___lwdiv@divisor+1
  5700  0565  0839               	movf	((_RF1+1)^(0+128)+8),w
  5701  0566  01F5               	clrf	___lwdiv@dividend+1
  5702  0567  07F5               	addwf	___lwdiv@dividend+1,f
  5703  0568  0838               	movf	(_RF1^(0+128)+8),w
  5704  0569  01F4               	clrf	___lwdiv@dividend
  5705  056A  07F4               	addwf	___lwdiv@dividend,f
  5706  056B  3193  23FB  3185   	fcall	___lwdiv
  5707  056E  0873               	movf	?___lwdiv+1,w
  5708  056F  0021               	movlb	1	; select bank1
  5709  0570  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5710  0571  1D03               	skipz
  5711  0572  2D75               	goto	u13465
  5712  0573  0872               	movf	?___lwdiv,w
  5713  0574  0233               	subwf	(_RF1^(0+128)+3),w
  5714  0575                     u13465:	
  5715  0575  1C03               	skipc
  5716  0576  2DD6               	goto	l11223
  5717                           
  5718                           ;RF_Control_B1.c: 70: RF1.Count = (RF1.RunTime / 20);
  5719  0577  3014               	movlw	20
  5720  0578  00F2               	movwf	___lwdiv@divisor
  5721  0579  3000               	movlw	0
  5722  057A  00F3               	movwf	___lwdiv@divisor+1
  5723  057B  0839               	movf	((_RF1+1)^(0+128)+8),w
  5724  057C  01F5               	clrf	___lwdiv@dividend+1
  5725  057D  07F5               	addwf	___lwdiv@dividend+1,f
  5726  057E  0838               	movf	(_RF1^(0+128)+8),w
  5727  057F  01F4               	clrf	___lwdiv@dividend
  5728  0580  07F4               	addwf	___lwdiv@dividend,f
  5729  0581  3193  23FB  3185   	fcall	___lwdiv
  5730  0584  0873               	movf	?___lwdiv+1,w
  5731  0585  0021               	movlb	1	; select bank1
  5732  0586  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5733  0587  07B4               	addwf	((_RF1+1)^(0+128)+3),f
  5734  0588  0872               	movf	?___lwdiv,w
  5735  0589  01B3               	clrf	(_RF1^(0+128)+3)
  5736  058A  07B3               	addwf	(_RF1^(0+128)+3),f
  5737                           
  5738                           ;RF_Control_B1.c: 72: RF1.TransceiveGO = 0;
  5739  058B  1130               	bcf	_RF1^(0+128),2
  5740                           
  5741                           ;RF_Control_B1.c: 73: RF1.CorrectionCounter = 0;
  5742  058C  01BB               	clrf	(_RF1^(0+128)+11)
  5743  058D  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5744                           
  5745                           ;RF_Control_B1.c: 74: RF_RxDisable();
  5746  058E  319C  24E7  3185   	fcall	_RF_RxDisable
  5747                           
  5748                           ;RF_Control_B1.c: 75: setData();
  5749  0591  3188  2000  3185   	fcall	_setData
  5750                           
  5751                           ;RF_Control_B1.c: 76: CC2500_TxData();
  5752  0594  318B  2349  3185   	fcall	_CC2500_TxData
  5753                           
  5754                           ;RF_Control_B1.c: 78: }
  5755                           ;RF_Control_B1.c: 79: } else {
  5756  0597  2DD6               	goto	l11223
  5757  0598                     l11195:	
  5758                           
  5759                           ;RF_Control_B1.c: 80: RF1.Count = 0;
  5760  0598  0021               	movlb	1	; select bank1
  5761  0599  01B3               	clrf	(_RF1^(0+128)+3)
  5762  059A  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5763                           
  5764                           ;RF_Control_B1.c: 81: RF1.TransceiveGO = 0;
  5765  059B  1130               	bcf	_RF1^(0+128),2
  5766                           
  5767                           ;RF_Control_B1.c: 82: }
  5768                           ;RF_Control_B1.c: 83: } else {
  5769  059C  2DD6               	goto	l11223
  5770  059D                     l2415:	
  5771                           
  5772                           ;RF_Control_B1.c: 84: if (RF1.RxStatus == 1) {
  5773  059D  1DB0               	btfss	_RF1^(0+128),3
  5774  059E  2DAC               	goto	l11209
  5775                           
  5776                           ;RF_Control_B1.c: 86: CC2500_RxData();
  5777  059F  3189  21B5  3185   	fcall	_CC2500_RxData
  5778                           
  5779                           ;RF_Control_B1.c: 88: if (RF1.ReceiveGO == 1) {
  5780  05A2  0021               	movlb	1	; select bank1
  5781  05A3  1CB0               	btfss	_RF1^(0+128),1
  5782  05A4  2DD6               	goto	l11223
  5783                           
  5784                           ;RF_Control_B1.c: 89: RF1.ReceiveGO = 0;
  5785  05A5  10B0               	bcf	_RF1^(0+128),1
  5786                           
  5787                           ;RF_Control_B1.c: 90: RF1.CorrectionCounter = 0;
  5788  05A6  01BB               	clrf	(_RF1^(0+128)+11)
  5789  05A7  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5790                           
  5791                           ;RF_Control_B1.c: 98: getRxData();
  5792  05A8  318A  227E  3185   	fcall	_getRxData
  5793                           
  5794                           ;RF_Control_B1.c: 101: }
  5795                           ;RF_Control_B1.c: 102: } else {
  5796  05AB  2DD6               	goto	l11223
  5797  05AC                     l11209:	
  5798                           
  5799                           ;RF_Control_B1.c: 103: RF1.Count++;
  5800  05AC  3001               	movlw	1
  5801  05AD  0021               	movlb	1	; select bank1
  5802  05AE  07B3               	addwf	(_RF1^(0+128)+3),f
  5803  05AF  3000               	movlw	0
  5804  05B0  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5805                           
  5806                           ;RF_Control_B1.c: 104: if (RF1.Count >= (RF1.RunTime / 20)) {
  5807  05B1  3014               	movlw	20
  5808  05B2  00F2               	movwf	___lwdiv@divisor
  5809  05B3  3000               	movlw	0
  5810  05B4  00F3               	movwf	___lwdiv@divisor+1
  5811  05B5  0839               	movf	((_RF1+1)^(0+128)+8),w
  5812  05B6  01F5               	clrf	___lwdiv@dividend+1
  5813  05B7  07F5               	addwf	___lwdiv@dividend+1,f
  5814  05B8  0838               	movf	(_RF1^(0+128)+8),w
  5815  05B9  01F4               	clrf	___lwdiv@dividend
  5816  05BA  07F4               	addwf	___lwdiv@dividend,f
  5817  05BB  3193  23FB  3185   	fcall	___lwdiv
  5818  05BE  0873               	movf	?___lwdiv+1,w
  5819  05BF  0021               	movlb	1	; select bank1
  5820  05C0  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5821  05C1  1D03               	skipz
  5822  05C2  2DC5               	goto	u13495
  5823  05C3  0872               	movf	?___lwdiv,w
  5824  05C4  0233               	subwf	(_RF1^(0+128)+3),w
  5825  05C5                     u13495:	
  5826  05C5  1C03               	skipc
  5827  05C6  2DD6               	goto	l11223
  5828                           
  5829                           ;RF_Control_B1.c: 105: RF1.Count = 0;
  5830  05C7  01B3               	clrf	(_RF1^(0+128)+3)
  5831  05C8  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5832                           
  5833                           ;RF_Control_B1.c: 107: RF1.RxStatus = 1;
  5834  05C9  15B0               	bsf	_RF1^(0+128),3
  5835                           
  5836                           ;RF_Control_B1.c: 108: CC2500_WriteCommand(0x36);
  5837  05CA  3036               	movlw	54
  5838  05CB  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5839                           
  5840                           ;RF_Control_B1.c: 109: CC2500_WriteCommand(0x3A);
  5841  05CE  303A               	movlw	58
  5842  05CF  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5843                           
  5844                           ;RF_Control_B1.c: 110: CC2500_WriteCommand(0x34);
  5845  05D2  3034               	movlw	52
  5846  05D3  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5847  05D6                     l11223:	
  5848                           
  5849                           ;RF_Control_B1.c: 112: }
  5850                           ;RF_Control_B1.c: 113: }
  5851                           ;RF_Control_B1.c: 114: }
  5852                           ;RF_Control_B1.c: 115: }
  5853                           ;RF_Control_B1.c: 116: }
  5854                           ;RF_Control_B1.c: 118: RF1.CorrectionCounter++;
  5855  05D6  3001               	movlw	1
  5856  05D7  0021               	movlb	1	; select bank1
  5857  05D8  07BB               	addwf	(_RF1^(0+128)+11),f
  5858  05D9  3000               	movlw	0
  5859  05DA  3DBC               	addwfc	((_RF1+1)^(0+128)+11),f
  5860                           
  5861                           ;RF_Control_B1.c: 119: if (RF1.CorrectionCounter > (60000 / 20)) {
  5862  05DB  300B               	movlw	11
  5863  05DC  023C               	subwf	((_RF1+1)^(0+128)+11),w
  5864  05DD  30B9               	movlw	185
  5865  05DE  1903               	skipnz
  5866  05DF  023B               	subwf	(_RF1^(0+128)+11),w
  5867  05E0  1C03               	skipc
  5868  05E1  2DEA               	goto	l11235
  5869                           
  5870                           ;RF_Control_B1.c: 120: RF1.CorrectionCounter = 0;
  5871  05E2  01BB               	clrf	(_RF1^(0+128)+11)
  5872  05E3  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5873                           
  5874                           ;RF_Control_B1.c: 122: RF1.RxStatus = 0;
  5875  05E4  11B0               	bcf	_RF1^(0+128),3
  5876                           
  5877                           ;RF_Control_B1.c: 123: RF1.ReceiveGO = 0;
  5878  05E5  10B0               	bcf	_RF1^(0+128),1
  5879                           
  5880                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x36);
  5881  05E6  3036               	movlw	54
  5882  05E7  319F  2799  3185   	fcall	_CC2500_WriteCommand
  5883  05EA                     l11235:	
  5884                           
  5885                           ;RF_Control_B1.c: 126: }
  5886                           ;RF_Control_B1.c: 128: if (RF1.Timeout == 1) {
  5887  05EA  0021               	movlb	1	; select bank1
  5888  05EB  1F31               	btfss	(_RF1^(0+128)+1),6
  5889  05EC  0008               	return
  5890                           
  5891                           ;RF_Control_B1.c: 129: RF1.Timeout = 0;
  5892  05ED  1331               	bcf	(_RF1^(0+128)+1),6
  5893                           
  5894                           ;RF_Control_B1.c: 130: CC2500_PowerOnInitial();
  5895  05EE  319E  26FC         	fcall	_CC2500_PowerOnInitial
  5896                           
  5897                           ;RF_Control_B1.c: 131: }
  5898                           ;RF_Control_B1.c: 133: } else {
  5899  05F0  0008               	return
  5900  05F1                     l2410:	
  5901                           
  5902                           ;RF_Control_B1.c: 134: if (myMain.PowerON == 1) {
  5903  05F1  1C3F               	btfss	_myMain^(0+128),0
  5904  05F2  0008               	return
  5905                           
  5906                           ;RF_Control_B1.c: 135: RF1.Enable = 1;
  5907  05F3  1430               	bsf	_RF1^(0+128),0
  5908  05F4  0008               	return
  5909  05F5                     __end_of_setRF_Main:	
  5910                           
  5911                           	psect	text18
  5912  0800                     __ptext18:	
  5913 ;; *************** function _setData *****************
  5914 ;; Defined at:
  5915 ;;		line 188 in file "../src/RF_Control_B1.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;		None               void
  5922 ;; Registers used:
  5923 ;;		wreg, fsr1l, fsr1h, status,2
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;Total ram usage:        1 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    3
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_setRF_Main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _setData
  5945  0800                     _setData:	
  5946                           
  5947                           ;RF_Control_B1.c: 212: RF_Data[0] = 0x63;
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _setData: [wreg+fsr1l+fsr1h+status,2]
  5951  0800  3063               	movlw	99
  5952  0801  00F2               	movwf	??_setData
  5953  0802  0872               	movf	??_setData,w
  5954  0803  0022               	movlb	2	; select bank2
  5955  0804  00A0               	movwf	_RF_Data^(0+256)
  5956                           
  5957                           ;RF_Control_B1.c: 213: RF_Data[1] = 0x02;
  5958  0805  3002               	movlw	2
  5959  0806  00F2               	movwf	??_setData
  5960  0807  0872               	movf	??_setData,w
  5961  0808  00A1               	movwf	(_RF_Data^(0+256)+1)
  5962                           
  5963                           ;RF_Control_B1.c: 215: RF_Data[2] = 0;
  5964  0809  01A2               	clrf	(_RF_Data^(0+256)+2)
  5965                           
  5966                           ;RF_Control_B1.c: 216: RF_Data[3] = 0;
  5967  080A  01A3               	clrf	(_RF_Data^(0+256)+3)
  5968                           
  5969                           ;RF_Control_B1.c: 217: RF_Data[4] = 0;
  5970  080B  01A4               	clrf	(_RF_Data^(0+256)+4)
  5971                           
  5972                           ;RF_Control_B1.c: 218: RF_Data[5] = 0;
  5973  080C  01A5               	clrf	(_RF_Data^(0+256)+5)
  5974                           
  5975                           ;RF_Control_B1.c: 219: RF_Data[6] = 0;
  5976  080D  01A6               	clrf	(_RF_Data^(0+256)+6)
  5977                           
  5978                           ;RF_Control_B1.c: 220: RF_Data[7] = 0;
  5979  080E  01A7               	clrf	(_RF_Data^(0+256)+7)
  5980                           
  5981                           ;RF_Control_B1.c: 221: RF_Data[8] = 0;
  5982  080F  01A8               	clrf	(_RF_Data^(0+256)+8)
  5983                           
  5984                           ;RF_Control_B1.c: 222: RF_Data[9] = product->Data[9];
  5985  0810  0020               	movlb	0	; select bank0
  5986  0811  086E               	movf	_product,w
  5987  0812  0086               	movwf	6
  5988  0813  3002               	movlw	2	; select bank4/5
  5989  0814  0087               	movwf	7
  5990  0815  3002               	movlw	2	; select bank4/5
  5991  0816  3F49               	moviw [9]fsr1
  5992  0817  0022               	movlb	2	; select bank2
  5993  0818  00A9               	movwf	(_RF_Data^(0+256)+9)
  5994                           
  5995                           ;RF_Control_B1.c: 223: RF_Data[10] = 0;
  5996  0819  01AA               	clrf	(_RF_Data^(0+256)+10)
  5997                           
  5998                           ;RF_Control_B1.c: 224: RF_Data[11] = product->Data[11];
  5999  081A  0020               	movlb	0	; select bank0
  6000  081B  086E               	movf	_product,w
  6001  081C  0086               	movwf	6
  6002  081D  3002               	movlw	2	; select bank4/5
  6003  081E  0087               	movwf	7
  6004  081F  3002               	movlw	2	; select bank4/5
  6005  0820  3F4B               	moviw [11]fsr1
  6006  0821  0022               	movlb	2	; select bank2
  6007  0822  00AB               	movwf	(_RF_Data^(0+256)+11)
  6008                           
  6009                           ;RF_Control_B1.c: 225: RF_Data[12] = product->Data[12];
  6010  0823  0020               	movlb	0	; select bank0
  6011  0824  086E               	movf	_product,w
  6012  0825  0086               	movwf	6
  6013  0826  3002               	movlw	2	; select bank4/5
  6014  0827  0087               	movwf	7
  6015  0828  3002               	movlw	2	; select bank4/5
  6016  0829  3F4C               	moviw [12]fsr1
  6017  082A  0022               	movlb	2	; select bank2
  6018  082B  00AC               	movwf	(_RF_Data^(0+256)+12)
  6019                           
  6020                           ;RF_Control_B1.c: 226: RF_Data[13] = product->Data[13];
  6021  082C  0020               	movlb	0	; select bank0
  6022  082D  086E               	movf	_product,w
  6023  082E  0086               	movwf	6
  6024  082F  3002               	movlw	2	; select bank4/5
  6025  0830  0087               	movwf	7
  6026  0831  3002               	movlw	2	; select bank4/5
  6027  0832  3F4D               	moviw [13]fsr1
  6028  0833  0022               	movlb	2	; select bank2
  6029  0834  00AD               	movwf	(_RF_Data^(0+256)+13)
  6030                           
  6031                           ;RF_Control_B1.c: 227: RF_Data[14] = product->Data[14];
  6032  0835  0020               	movlb	0	; select bank0
  6033  0836  086E               	movf	_product,w
  6034  0837  0086               	movwf	6
  6035  0838  3002               	movlw	2	; select bank4/5
  6036  0839  0087               	movwf	7
  6037  083A  3002               	movlw	2	; select bank4/5
  6038  083B  3F4E               	moviw [14]fsr1
  6039  083C  0022               	movlb	2	; select bank2
  6040  083D  00AE               	movwf	(_RF_Data^(0+256)+14)
  6041                           
  6042                           ;RF_Control_B1.c: 228: RF_Data[15] = product->Data[15];
  6043  083E  0020               	movlb	0	; select bank0
  6044  083F  086E               	movf	_product,w
  6045  0840  0086               	movwf	6
  6046  0841  3002               	movlw	2	; select bank4/5
  6047  0842  0087               	movwf	7
  6048  0843  3002               	movlw	2	; select bank4/5
  6049  0844  3F4F               	moviw [15]fsr1
  6050  0845  0022               	movlb	2	; select bank2
  6051  0846  00AF               	movwf	(_RF_Data^(0+256)+15)
  6052                           
  6053                           ;RF_Control_B1.c: 229: RF_Data[16] = 0;
  6054  0847  01B0               	clrf	(_RF_Data^(0+256)+16)
  6055                           
  6056                           ;RF_Control_B1.c: 230: RF_Data[17] = 0;
  6057  0848  01B1               	clrf	(_RF_Data^(0+256)+17)
  6058                           
  6059                           ;RF_Control_B1.c: 231: RF_Data[18] = 0;
  6060  0849  01B2               	clrf	(_RF_Data^(0+256)+18)
  6061                           
  6062                           ;RF_Control_B1.c: 232: RF_Data[19] = 0;
  6063  084A  01B3               	clrf	(_RF_Data^(0+256)+19)
  6064                           
  6065                           ;RF_Control_B1.c: 233: RF_Data[20] = 211;
  6066  084B  30D3               	movlw	211
  6067  084C  00F2               	movwf	??_setData
  6068  084D  0872               	movf	??_setData,w
  6069  084E  00B4               	movwf	(_RF_Data^(0+256)+20)
  6070  084F  0008               	return
  6071  0850                     __end_of_setData:	
  6072                           
  6073                           	psect	text19
  6074  0A7E                     __ptext19:	
  6075 ;; *************** function _getRxData *****************
  6076 ;; Defined at:
  6077 ;;		line 256 in file "../src/RF_Control_B1.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  error           1   69[BANK0 ] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;		None               void
  6084 ;; Registers used:
  6085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;Total ram usage:        2 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    8
  6098 ;; This function calls:
  6099 ;;		_getMain_All_Error_Status
  6100 ;;		_setControl_Lights_Table
  6101 ;;		_setLog_Code
  6102 ;;		_setTxData
  6103 ;; This function is called by:
  6104 ;;		_setRF_Main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function _getRxData
  6110  0A7E                     _getRxData:	
  6111                           
  6112                           ;RF_Control_B1.c: 258: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6116  0A7E  0022               	movlb	2	; select bank2
  6117  0A7F  0820               	movf	_RF_Data^(0+256),w
  6118  0A80  3AAA               	xorlw	170
  6119  0A81  1D03               	skipz
  6120  0A82  2A94               	goto	l11005
  6121  0A83  0821               	movf	(_RF_Data^(0+256)+1),w
  6122  0A84  3A01               	xorlw	1
  6123  0A85  1D03               	skipz
  6124  0A86  2A94               	goto	l11005
  6125                           
  6126                           ;RF_Control_B1.c: 259: product->Data[2] = 0x55;
  6127  0A87  3055               	movlw	85
  6128  0A88  0020               	movlb	0	; select bank0
  6129  0A89  00E4               	movwf	??_getRxData
  6130  0A8A  086E               	movf	_product,w
  6131  0A8B  3E02               	addlw	2
  6132  0A8C  0086               	movwf	6
  6133  0A8D  3002               	movlw	2	; select bank4/5
  6134  0A8E  0087               	movwf	7
  6135  0A8F  0864               	movf	??_getRxData,w
  6136  0A90  0081               	movwf	1
  6137                           
  6138                           ;RF_Control_B1.c: 260: setTxData();
  6139  0A91  319C  24D2         	fcall	_setTxData
  6140                           
  6141                           ;RF_Control_B1.c: 264: } else {
  6142  0A93  0008               	return
  6143  0A94                     l11005:	
  6144                           
  6145                           ;RF_Control_B1.c: 265: char error = getMain_All_Error_Status(0);
  6146  0A94  3000               	movlw	0
  6147  0A95  319C  249F  318A   	fcall	_getMain_All_Error_Status
  6148  0A98  0020               	movlb	0	; select bank0
  6149  0A99  00E4               	movwf	??_getRxData
  6150  0A9A  0864               	movf	??_getRxData,w
  6151  0A9B  00E5               	movwf	getRxData@error
  6152                           
  6153                           ;RF_Control_B1.c: 266: if (error == 0) {
  6154  0A9C  08E5               	movf	getRxData@error,f
  6155  0A9D  1D03               	skipz
  6156  0A9E  2AE1               	goto	l2458
  6157                           
  6158                           ;RF_Control_B1.c: 267: if (RF1.Learn == 1) {
  6159  0A9F  0021               	movlb	1	; select bank1
  6160  0AA0  1F30               	btfss	_RF1^(0+128),6
  6161  0AA1  2AAD               	goto	l11017
  6162                           
  6163                           ;RF_Control_B1.c: 269: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x64) {
  6164  0AA2  0022               	movlb	2	; select bank2
  6165  0AA3  08A0               	movf	_RF_Data^(0+256),f
  6166  0AA4  1D03               	skipz
  6167  0AA5  0008               	return
  6168  0AA6  0821               	movf	(_RF_Data^(0+256)+1),w
  6169  0AA7  3A64               	xorlw	100
  6170  0AA8  1D03               	skipz
  6171  0AA9  0008               	return
  6172                           
  6173                           ;RF_Control_B1.c: 270: setLog_Code();
  6174  0AAA  3193  2390         	fcall	_setLog_Code
  6175                           
  6176                           ;RF_Control_B1.c: 271: }
  6177                           ;RF_Control_B1.c: 289: } else {
  6178  0AAC  0008               	return
  6179  0AAD                     l11017:	
  6180                           
  6181                           ;RF_Control_B1.c: 290: if (RF_Data[20] == 211 || RF_Data[20] == 0x0a) {
  6182  0AAD  0022               	movlb	2	; select bank2
  6183  0AAE  0834               	movf	(_RF_Data^(0+256)+20),w
  6184  0AAF  3AD3               	xorlw	211
  6185  0AB0  1903               	skipnz
  6186  0AB1  2AB6               	goto	l11021
  6187  0AB2  0834               	movf	(_RF_Data^(0+256)+20),w
  6188  0AB3  3A0A               	xorlw	10
  6189  0AB4  1D03               	skipz
  6190  0AB5  0008               	return
  6191  0AB6                     l11021:	
  6192                           
  6193                           ;RF_Control_B1.c: 292: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  6194  0AB6  08A0               	movf	_RF_Data^(0+256),f
  6195  0AB7  1D03               	skipz
  6196  0AB8  0008               	return
  6197  0AB9  0821               	movf	(_RF_Data^(0+256)+1),w
  6198  0ABA  3A02               	xorlw	2
  6199  0ABB  1D03               	skipz
  6200  0ABC  0008               	return
  6201                           
  6202                           ;RF_Control_B1.c: 294: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  6203  0ABD  0020               	movlb	0	; select bank0
  6204  0ABE  086E               	movf	_product,w
  6205  0ABF  3E0C               	addlw	12
  6206  0AC0  0086               	movwf	6
  6207  0AC1  3002               	movlw	2	; select bank4/5
  6208  0AC2  0087               	movwf	7
  6209  0AC3  0022               	movlb	2	; select bank2
  6210  0AC4  082C               	movf	(_RF_Data^(0+256)+12),w
  6211  0AC5  0601               	xorwf	1,w
  6212  0AC6  1D03               	skipz
  6213  0AC7  0008               	return
  6214  0AC8  0020               	movlb	0	; select bank0
  6215  0AC9  086E               	movf	_product,w
  6216  0ACA  3E0D               	addlw	13
  6217  0ACB  0086               	movwf	6
  6218  0ACC  3002               	movlw	2	; select bank4/5
  6219  0ACD  0087               	movwf	7
  6220  0ACE  0022               	movlb	2	; select bank2
  6221  0ACF  082D               	movf	(_RF_Data^(0+256)+13),w
  6222  0AD0  0601               	xorwf	1,w
  6223  0AD1  1D03               	skipz
  6224  0AD2  0008               	return
  6225  0AD3  0020               	movlb	0	; select bank0
  6226  0AD4  086E               	movf	_product,w
  6227  0AD5  3E0E               	addlw	14
  6228  0AD6  0086               	movwf	6
  6229  0AD7  3002               	movlw	2	; select bank4/5
  6230  0AD8  0087               	movwf	7
  6231  0AD9  0022               	movlb	2	; select bank2
  6232  0ADA  082E               	movf	(_RF_Data^(0+256)+14),w
  6233  0ADB  0601               	xorwf	1,w
  6234  0ADC  1D03               	skipz
  6235  0ADD  0008               	return
  6236                           
  6237                           ;RF_Control_B1.c: 295: setControl_Lights_Table();
  6238  0ADE  3186  26AE         	fcall	_setControl_Lights_Table
  6239                           
  6240                           ;RF_Control_B1.c: 296: }
  6241                           ;RF_Control_B1.c: 299: }
  6242                           ;RF_Control_B1.c: 310: }
  6243                           ;RF_Control_B1.c: 311: }
  6244                           ;RF_Control_B1.c: 312: } else {
  6245  0AE0  0008               	return
  6246  0AE1                     l2458:	
  6247                           
  6248                           ;RF_Control_B1.c: 313: __nop();
  6249  0AE1  0000               	nop
  6250  0AE2  0008               	return
  6251  0AE3                     __end_of_getRxData:	
  6252                           
  6253                           	psect	text20
  6254  1390                     __ptext20:	
  6255 ;; *************** function _setLog_Code *****************
  6256 ;; Defined at:
  6257 ;;		line 319 in file "../src/RF_Control_B1.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;		None               void
  6264 ;; Registers used:
  6265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;Total ram usage:        1 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    5
  6278 ;; This function calls:
  6279 ;;		_setBuz
  6280 ;;		_setMemory_LoopSave
  6281 ;;		_setMemory_Modify
  6282 ;;		_setProductData
  6283 ;; This function is called by:
  6284 ;;		_getRxData
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function _setLog_Code
  6290  1390                     _setLog_Code:	
  6291                           
  6292                           ;RF_Control_B1.c: 320: RF1.Learn = 0;
  6293                           
  6294                           ;incstack = 0
  6295                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6296  1390  0021               	movlb	1	; select bank1
  6297  1391  1330               	bcf	_RF1^(0+128),6
  6298                           
  6299                           ;RF_Control_B1.c: 321: setProductData(12, RF_Data[12]);
  6300  1392  0022               	movlb	2	; select bank2
  6301  1393  082C               	movf	(_RF_Data^(0+256)+12),w
  6302  1394  0020               	movlb	0	; select bank0
  6303  1395  00D9               	movwf	??_setLog_Code
  6304  1396  0859               	movf	??_setLog_Code,w
  6305  1397  00D6               	movwf	setProductData@value
  6306  1398  300C               	movlw	12
  6307  1399  319D  2530  3193   	fcall	_setProductData
  6308                           
  6309                           ;RF_Control_B1.c: 322: setProductData(13, RF_Data[13]);
  6310  139C  0022               	movlb	2	; select bank2
  6311  139D  082D               	movf	(_RF_Data^(0+256)+13),w
  6312  139E  0020               	movlb	0	; select bank0
  6313  139F  00D9               	movwf	??_setLog_Code
  6314  13A0  0859               	movf	??_setLog_Code,w
  6315  13A1  00D6               	movwf	setProductData@value
  6316  13A2  300D               	movlw	13
  6317  13A3  319D  2530  3193   	fcall	_setProductData
  6318                           
  6319                           ;RF_Control_B1.c: 323: setProductData(14, RF_Data[14]);
  6320  13A6  0022               	movlb	2	; select bank2
  6321  13A7  082E               	movf	(_RF_Data^(0+256)+14),w
  6322  13A8  0020               	movlb	0	; select bank0
  6323  13A9  00D9               	movwf	??_setLog_Code
  6324  13AA  0859               	movf	??_setLog_Code,w
  6325  13AB  00D6               	movwf	setProductData@value
  6326  13AC  300E               	movlw	14
  6327  13AD  319D  2530  3193   	fcall	_setProductData
  6328                           
  6329                           ;RF_Control_B1.c: 324: setBuz(1, 100);
  6330  13B0  3064               	movlw	100
  6331  13B1  0020               	movlb	0	; select bank0
  6332  13B2  00A4               	movwf	setBuz@time
  6333  13B3  3000               	movlw	0
  6334  13B4  00A5               	movwf	setBuz@time+1
  6335  13B5  3001               	movlw	1
  6336  13B6  3188  2050  3193   	fcall	_setBuz
  6337                           
  6338                           ;RF_Control_B1.c: 325: if (myMain.First == 1) {
  6339  13B9  0021               	movlb	1	; select bank1
  6340  13BA  1EBF               	btfss	_myMain^(0+128),5
  6341  13BB  2BC0               	goto	l2471
  6342                           
  6343                           ;RF_Control_B1.c: 326: setMemory_LoopSave(1);
  6344  13BC  3001               	movlw	1
  6345  13BD  319E  2656  3193   	fcall	_setMemory_LoopSave
  6346  13C0                     l2471:	
  6347                           
  6348                           ;RF_Control_B1.c: 327: }
  6349                           ;RF_Control_B1.c: 328: setMemory_Modify(1);
  6350  13C0  3001               	movlw	1
  6351  13C1  319D  25F6         	fcall	_setMemory_Modify
  6352  13C3  0008               	return
  6353  13C4                     __end_of_setLog_Code:	
  6354                           
  6355                           	psect	text21
  6356  1E56                     __ptext21:	
  6357 ;; *************** function _setMemory_LoopSave *****************
  6358 ;; Defined at:
  6359 ;;		line 1094 in file "../src/MCU_B1.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  command         1    wreg     unsigned char 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  command         1    3[COMMON] unsigned char 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;		None               void
  6366 ;; Registers used:
  6367 ;;		wreg, status,2, status,0
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;Total ram usage:        2 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    3
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_setLog_Code
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           
  6388                           ;psect for function _setMemory_LoopSave
  6389  1E56                     _setMemory_LoopSave:	
  6390                           
  6391                           ;incstack = 0
  6392                           ; Regs used in _setMemory_LoopSave: [wreg+status,2+status,0]
  6393                           ;setMemory_LoopSave@command stored from wreg
  6394  1E56  00F3               	movwf	setMemory_LoopSave@command
  6395                           
  6396                           ;MCU_B1.c: 1095: Memory.LoopSave = command == 1 ? 1 : 0;
  6397  1E57  0873               	movf	setMemory_LoopSave@command,w
  6398  1E58  3A01               	xorlw	1
  6399  1E59  3000               	movlw	0
  6400  1E5A  1903               	skipnz
  6401  1E5B  3001               	movlw	1
  6402  1E5C  00F2               	movwf	??_setMemory_LoopSave
  6403  1E5D  0DF2               	rlf	??_setMemory_LoopSave,f
  6404  1E5E  0DF2               	rlf	??_setMemory_LoopSave,f
  6405  1E5F  0024               	movlb	4	; select bank4
  6406  1E60  0844               	movf	(_Memory^(0+512)+36),w
  6407  1E61  0672               	xorwf	??_setMemory_LoopSave,w
  6408  1E62  39FB               	andlw	-5
  6409  1E63  0672               	xorwf	??_setMemory_LoopSave,w
  6410  1E64  00C4               	movwf	(_Memory^(0+512)+36)
  6411  1E65  0008               	return
  6412  1E66                     __end_of_setMemory_LoopSave:	
  6413                           
  6414                           	psect	text22
  6415  06AE                     __ptext22:	
  6416 ;; *************** function _setControl_Lights_Table *****************
  6417 ;; Defined at:
  6418 ;;		line 332 in file "../src/RF_Control_B1.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;		None               void
  6425 ;; Registers used:
  6426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    7
  6439 ;; This function calls:
  6440 ;;		_getDimmerLights_Status
  6441 ;;		_getMain_All_LightsStatus
  6442 ;;		_setCmd_Status
  6443 ;;		_setDimmerLights_SwOff
  6444 ;;		_setDimmerLights_SwOn
  6445 ;;		_setProductData
  6446 ;;		_setRFSW_AdjControl
  6447 ;;		_setRFSW_Control
  6448 ;;		_setRF_AdjControl
  6449 ;;		_setTxData
  6450 ;; This function is called by:
  6451 ;;		_getRxData
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _setControl_Lights_Table
  6457  06AE                     _setControl_Lights_Table:	
  6458                           
  6459                           ;RF_Control_B1.c: 334: switch (RF_Data[15]) {
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6463  06AE  2F44               	goto	l10799
  6464  06AF                     l10761:	
  6465                           ;RF_Control_B1.c: 336: case 0x00:
  6466                           
  6467                           
  6468                           ;RF_Control_B1.c: 337: if (getMain_All_LightsStatus() == 1) {
  6469  06AF  319F  273B  3186   	fcall	_getMain_All_LightsStatus
  6470  06B2  3A01               	xorlw	1
  6471  06B3  1D03               	skipz
  6472  06B4  2EE8               	goto	l10773
  6473                           
  6474                           ;RF_Control_B1.c: 340: if (getDimmerLights_Status(1) == 1) {
  6475  06B5  3001               	movlw	1
  6476  06B6  319D  256F  3186   	fcall	_getDimmerLights_Status
  6477  06B9  3A01               	xorlw	1
  6478  06BA  1D03               	skipz
  6479  06BB  2EC4               	goto	l2478
  6480                           
  6481                           ;RF_Control_B1.c: 341: setDimmerLights_SwOn(1);
  6482  06BC  3001               	movlw	1
  6483  06BD  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6484                           
  6485                           ;RF_Control_B1.c: 342: setDimmerLights_SwOff(1);
  6486  06C0  3001               	movlw	1
  6487  06C1  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6488  06C4                     l2478:	
  6489                           
  6490                           ;RF_Control_B1.c: 343: }
  6491                           ;RF_Control_B1.c: 346: if (getDimmerLights_Status(2) == 1) {
  6492  06C4  3002               	movlw	2
  6493  06C5  319D  256F  3186   	fcall	_getDimmerLights_Status
  6494  06C8  3A01               	xorlw	1
  6495  06C9  1D03               	skipz
  6496  06CA  2ED3               	goto	l2479
  6497                           
  6498                           ;RF_Control_B1.c: 347: setDimmerLights_SwOn(2);
  6499  06CB  3002               	movlw	2
  6500  06CC  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6501                           
  6502                           ;RF_Control_B1.c: 348: setDimmerLights_SwOff(2);
  6503  06CF  3002               	movlw	2
  6504  06D0  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6505  06D3                     l2479:	
  6506                           
  6507                           ;RF_Control_B1.c: 349: }
  6508                           ;RF_Control_B1.c: 352: if (getDimmerLights_Status(3) == 1) {
  6509  06D3  3003               	movlw	3
  6510  06D4  319D  256F  3186   	fcall	_getDimmerLights_Status
  6511  06D7  3A01               	xorlw	1
  6512  06D8  1D03               	skipz
  6513  06D9  2EE2               	goto	l10771
  6514                           
  6515                           ;RF_Control_B1.c: 353: setDimmerLights_SwOn(3);
  6516  06DA  3003               	movlw	3
  6517  06DB  3187  2766  3186   	fcall	_setDimmerLights_SwOn
  6518                           
  6519                           ;RF_Control_B1.c: 354: setDimmerLights_SwOff(3);
  6520  06DE  3003               	movlw	3
  6521  06DF  3194  2432  3186   	fcall	_setDimmerLights_SwOff
  6522  06E2                     l10771:	
  6523                           
  6524                           ;RF_Control_B1.c: 355: }
  6525                           ;RF_Control_B1.c: 358: setCmd_Status(1, 1);
  6526  06E2  01F2               	clrf	setCmd_Status@cmd
  6527  06E3  0AF2               	incf	setCmd_Status@cmd,f
  6528  06E4  3001               	movlw	1
  6529  06E5  319E  26D2         	fcall	_setCmd_Status
  6530                           
  6531                           ;RF_Control_B1.c: 359: } else {
  6532  06E7  0008               	return
  6533  06E8                     l10773:	
  6534                           
  6535                           ;RF_Control_B1.c: 360: setProductData(9, 0);
  6536  06E8  0020               	movlb	0	; select bank0
  6537  06E9  01D6               	clrf	setProductData@value
  6538  06EA  3009               	movlw	9
  6539  06EB  319D  2530  3186   	fcall	_setProductData
  6540                           
  6541                           ;RF_Control_B1.c: 361: setProductData(11, 0);
  6542  06EE  0020               	movlb	0	; select bank0
  6543  06EF  01D6               	clrf	setProductData@value
  6544  06F0  300B               	movlw	11
  6545  06F1  319D  2530  3186   	fcall	_setProductData
  6546                           
  6547                           ;RF_Control_B1.c: 362: setProductData(15, 0);
  6548  06F4  0020               	movlb	0	; select bank0
  6549  06F5  01D6               	clrf	setProductData@value
  6550  06F6  300F               	movlw	15
  6551  06F7  319D  2530  3186   	fcall	_setProductData
  6552                           
  6553                           ;RF_Control_B1.c: 363: setProductData(17, 0);
  6554  06FA  0020               	movlb	0	; select bank0
  6555  06FB  01D6               	clrf	setProductData@value
  6556  06FC  3011               	movlw	17
  6557  06FD  319D  2530  3186   	fcall	_setProductData
  6558                           
  6559                           ;RF_Control_B1.c: 364: setTxData();
  6560  0700  319C  24D2         	fcall	_setTxData
  6561                           
  6562                           ;RF_Control_B1.c: 365: }
  6563                           ;RF_Control_B1.c: 366: break;
  6564  0702  0008               	return
  6565  0703                     l10777:	
  6566                           ;RF_Control_B1.c: 368: case 0x20:
  6567                           
  6568                           
  6569                           ;RF_Control_B1.c: 369: setProductData(9, 0);
  6570  0703  0020               	movlb	0	; select bank0
  6571  0704  01D6               	clrf	setProductData@value
  6572  0705  3009               	movlw	9
  6573  0706  319D  2530  3186   	fcall	_setProductData
  6574                           
  6575                           ;RF_Control_B1.c: 370: setProductData(11, 0);
  6576  0709  0020               	movlb	0	; select bank0
  6577  070A  01D6               	clrf	setProductData@value
  6578  070B  300B               	movlw	11
  6579  070C  319D  2530  3186   	fcall	_setProductData
  6580                           
  6581                           ;RF_Control_B1.c: 371: setProductData(15, product->Data[15]);
  6582  070F  0020               	movlb	0	; select bank0
  6583  0710  086E               	movf	_product,w
  6584  0711  0086               	movwf	6
  6585  0712  3002               	movlw	2	; select bank4/5
  6586  0713  0087               	movwf	7
  6587  0714  3002               	movlw	2	; select bank4/5
  6588  0715  3F4F               	moviw [15]fsr1
  6589  0716  00D6               	movwf	setProductData@value
  6590  0717  300F               	movlw	15
  6591  0718  319D  2530  3186   	fcall	_setProductData
  6592                           
  6593                           ;RF_Control_B1.c: 372: setProductData(17, 0);
  6594  071B  0020               	movlb	0	; select bank0
  6595  071C  01D6               	clrf	setProductData@value
  6596  071D  3011               	movlw	17
  6597  071E  319D  2530  3186   	fcall	_setProductData
  6598                           
  6599                           ;RF_Control_B1.c: 373: setTxData();
  6600  0721  319C  24D2         	fcall	_setTxData
  6601                           
  6602                           ;RF_Control_B1.c: 374: break;
  6603  0723  0008               	return
  6604  0724                     l10781:	
  6605                           ;RF_Control_B1.c: 377: case 0x01:
  6606                           
  6607                           
  6608                           ;RF_Control_B1.c: 378: setRFSW_Control(1);
  6609  0724  3001               	movlw	1
  6610  0725  3195  2593         	fcall	_setRFSW_Control
  6611                           
  6612                           ;RF_Control_B1.c: 379: break;
  6613  0727  0008               	return
  6614  0728                     l10783:	
  6615                           ;RF_Control_B1.c: 383: case 0x11:
  6616                           
  6617                           
  6618                           ;RF_Control_B1.c: 384: setRFSW_AdjControl(1);
  6619  0728  3001               	movlw	1
  6620  0729  318D  2593         	fcall	_setRFSW_AdjControl
  6621                           
  6622                           ;RF_Control_B1.c: 385: break;
  6623  072B  0008               	return
  6624  072C                     l10785:	
  6625                           ;RF_Control_B1.c: 387: case 0xd1:
  6626                           
  6627                           
  6628                           ;RF_Control_B1.c: 388: setRF_AdjControl(1);
  6629  072C  3001               	movlw	1
  6630  072D  3194  246A         	fcall	_setRF_AdjControl
  6631                           
  6632                           ;RF_Control_B1.c: 389: break;
  6633  072F  0008               	return
  6634  0730                     l10787:	
  6635                           ;RF_Control_B1.c: 394: case 0x02:
  6636                           
  6637                           
  6638                           ;RF_Control_B1.c: 395: setRFSW_Control(2);
  6639  0730  3002               	movlw	2
  6640  0731  3195  2593         	fcall	_setRFSW_Control
  6641                           
  6642                           ;RF_Control_B1.c: 396: break;
  6643  0733  0008               	return
  6644  0734                     l10789:	
  6645                           ;RF_Control_B1.c: 399: case 0x21:
  6646                           
  6647                           
  6648                           ;RF_Control_B1.c: 400: setRFSW_AdjControl(2);
  6649  0734  3002               	movlw	2
  6650  0735  318D  2593         	fcall	_setRFSW_AdjControl
  6651                           
  6652                           ;RF_Control_B1.c: 401: break;
  6653  0737  0008               	return
  6654  0738                     l10791:	
  6655                           ;RF_Control_B1.c: 403: case 0xd2:
  6656                           
  6657                           
  6658                           ;RF_Control_B1.c: 404: setRF_AdjControl(2);
  6659  0738  3002               	movlw	2
  6660  0739  3194  246A         	fcall	_setRF_AdjControl
  6661                           
  6662                           ;RF_Control_B1.c: 405: break;
  6663  073B  0008               	return
  6664  073C                     l10793:	
  6665                           ;RF_Control_B1.c: 411: case 0x03:
  6666                           
  6667                           
  6668                           ;RF_Control_B1.c: 412: setRFSW_Control(3);
  6669  073C  3003               	movlw	3
  6670  073D  3195  2593         	fcall	_setRFSW_Control
  6671                           
  6672                           ;RF_Control_B1.c: 413: break;
  6673  073F  0008               	return
  6674  0740                     l10795:	
  6675                           ;RF_Control_B1.c: 417: case 0x31:
  6676                           
  6677                           
  6678                           ;RF_Control_B1.c: 418: setRFSW_AdjControl(3);
  6679  0740  3003               	movlw	3
  6680  0741  318D  2593         	fcall	_setRFSW_AdjControl
  6681                           
  6682                           ;RF_Control_B1.c: 422: }
  6683                           
  6684                           ;RF_Control_B1.c: 419: break;
  6685  0743  0008               	return
  6686  0744                     l10799:	
  6687  0744  0022               	movlb	2	; select bank2
  6688  0745  082F               	movf	(_RF_Data^(0+256)+15),w
  6689                           
  6690                           ; Switch size 1, requested type "space"
  6691                           ; Number of cases is 10, Range of values is 0 to 210
  6692                           ; switch strategies available:
  6693                           ; Name         Instructions Cycles
  6694                           ; simple_byte           31    16 (average)
  6695                           ; jumptable            260     6 (fixed)
  6696                           ;	Chosen strategy is simple_byte
  6697  0746  3A00               	xorlw	0	; case 0
  6698  0747  1903               	skipnz
  6699  0748  2EAF               	goto	l10761
  6700  0749  3A01               	xorlw	1	; case 1
  6701  074A  1903               	skipnz
  6702  074B  2F24               	goto	l10781
  6703  074C  3A03               	xorlw	3	; case 2
  6704  074D  1903               	skipnz
  6705  074E  2F30               	goto	l10787
  6706  074F  3A01               	xorlw	1	; case 3
  6707  0750  1903               	skipnz
  6708  0751  2F3C               	goto	l10793
  6709  0752  3A12               	xorlw	18	; case 17
  6710  0753  1903               	skipnz
  6711  0754  2F28               	goto	l10783
  6712  0755  3A31               	xorlw	49	; case 32
  6713  0756  1903               	skipnz
  6714  0757  2F03               	goto	l10777
  6715  0758  3A01               	xorlw	1	; case 33
  6716  0759  1903               	skipnz
  6717  075A  2F34               	goto	l10789
  6718  075B  3A10               	xorlw	16	; case 49
  6719  075C  1903               	skipnz
  6720  075D  2F40               	goto	l10795
  6721  075E  3AE0               	xorlw	224	; case 209
  6722  075F  1903               	skipnz
  6723  0760  2F2C               	goto	l10785
  6724  0761  3A03               	xorlw	3	; case 210
  6725  0762  1903               	skipnz
  6726  0763  2F38               	goto	l10791
  6727  0764  2F65               	goto	l2492
  6728  0765                     l2492:	
  6729  0765  0008               	return
  6730  0766                     __end_of_setControl_Lights_Table:	
  6731                           
  6732                           	psect	text23
  6733  146A                     __ptext23:	
  6734 ;; *************** function _setRF_AdjControl *****************
  6735 ;; Defined at:
  6736 ;;		line 501 in file "../src/RF_Control_B1.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  sw              1    wreg     unsigned char 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  sw              1    2[BANK0 ] unsigned char 
  6741 ;;  dimmingStatu    1    1[BANK0 ] unsigned char 
  6742 ;;  status          1    0[BANK0 ] unsigned char 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;		None               void
  6745 ;; Registers used:
  6746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;Total ram usage:        4 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    5
  6759 ;; This function calls:
  6760 ;;		_DimmerLights_SelectPointer
  6761 ;;		_getDimmerIntr_Dimming_Sw
  6762 ;;		_getDimmerLights_Status
  6763 ;; This function is called by:
  6764 ;;		_setControl_Lights_Table
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _setRF_AdjControl
  6770  146A                     _setRF_AdjControl:	
  6771                           
  6772                           ;incstack = 0
  6773                           ; Regs used in _setRF_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6774                           ;setRF_AdjControl@sw stored from wreg
  6775  146A  0020               	movlb	0	; select bank0
  6776  146B  00A2               	movwf	setRF_AdjControl@sw
  6777                           
  6778                           ;RF_Control_B1.c: 502: char status = 0;
  6779  146C  01A0               	clrf	setRF_AdjControl@status
  6780                           
  6781                           ;RF_Control_B1.c: 504: status = getDimmerLights_Status(sw);
  6782  146D  0822               	movf	setRF_AdjControl@sw,w
  6783  146E  319D  256F  3194   	fcall	_getDimmerLights_Status
  6784  1471  00F6               	movwf	??_setRF_AdjControl
  6785  1472  0876               	movf	??_setRF_AdjControl,w
  6786  1473  0020               	movlb	0	; select bank0
  6787  1474  00A0               	movwf	setRF_AdjControl@status
  6788                           
  6789                           ;RF_Control_B1.c: 505: char dimmingStatus = 0;
  6790  1475  01A1               	clrf	setRF_AdjControl@dimmingStatus
  6791                           
  6792                           ;RF_Control_B1.c: 506: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
  6793  1476  0822               	movf	setRF_AdjControl@sw,w
  6794  1477  3191  2116  3194   	fcall	_getDimmerIntr_Dimming_Sw
  6795  147A  00F6               	movwf	??_setRF_AdjControl
  6796  147B  0876               	movf	??_setRF_AdjControl,w
  6797  147C  0020               	movlb	0	; select bank0
  6798  147D  00A1               	movwf	setRF_AdjControl@dimmingStatus
  6799                           
  6800                           ;RF_Control_B1.c: 508: if (status == 1) {
  6801  147E  0820               	movf	setRF_AdjControl@status,w
  6802  147F  3A01               	xorlw	1
  6803  1480  1D03               	skipz
  6804  1481  0008               	return
  6805                           
  6806                           ;RF_Control_B1.c: 509: if (dimmingStatus == 0) {
  6807  1482  08A1               	movf	setRF_AdjControl@dimmingStatus,f
  6808  1483  1D03               	skipz
  6809  1484  2C94               	goto	l10585
  6810                           
  6811                           ;RF_Control_B1.c: 510: DimmerLights_SelectPointer(sw);
  6812  1485  0822               	movf	setRF_AdjControl@sw,w
  6813  1486  3191  2193         	fcall	_DimmerLights_SelectPointer
  6814                           
  6815                           ;RF_Control_B1.c: 511: DimmerLights->DimmingTrigger = 1;
  6816  1488  0020               	movlb	0	; select bank0
  6817  1489  086A               	movf	_DimmerLights,w
  6818  148A  0086               	movwf	6
  6819  148B  3001               	movlw	1	; select bank2/3
  6820  148C  0087               	movwf	7
  6821  148D  1601               	bsf	1,4
  6822                           
  6823                           ;RF_Control_B1.c: 512: DimmerLights->DimmingSwitch = 1;
  6824  148E  086A               	movf	_DimmerLights,w
  6825  148F  0086               	movwf	6
  6826  1490  3001               	movlw	1	; select bank2/3
  6827  1491  0087               	movwf	7
  6828  1492  1681               	bsf	1,5
  6829                           
  6830                           ;RF_Control_B1.c: 514: } else {
  6831  1493  0008               	return
  6832  1494                     l10585:	
  6833                           
  6834                           ;RF_Control_B1.c: 515: DimmerLights_SelectPointer(sw);
  6835  1494  0822               	movf	setRF_AdjControl@sw,w
  6836  1495  3191  2193         	fcall	_DimmerLights_SelectPointer
  6837                           
  6838                           ;RF_Control_B1.c: 516: DimmerLights->DimmingTrigger = 1;
  6839  1497  0020               	movlb	0	; select bank0
  6840  1498  086A               	movf	_DimmerLights,w
  6841  1499  0086               	movwf	6
  6842  149A  3001               	movlw	1	; select bank2/3
  6843  149B  0087               	movwf	7
  6844  149C  1601               	bsf	1,4
  6845                           
  6846                           ;RF_Control_B1.c: 517: DimmerLights->DimmingSwitch = 0;
  6847  149D  086A               	movf	_DimmerLights,w
  6848  149E  0086               	movwf	6
  6849  149F  3001               	movlw	1	; select bank2/3
  6850  14A0  0087               	movwf	7
  6851  14A1  1281               	bcf	1,5
  6852  14A2  0008               	return
  6853  14A3                     __end_of_setRF_AdjControl:	
  6854                           
  6855                           	psect	text24
  6856  1593                     __ptext24:	
  6857 ;; *************** function _setRFSW_Control *****************
  6858 ;; Defined at:
  6859 ;;		line 430 in file "../src/RF_Control_B1.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  sw              1    wreg     unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  sw              1   67[BANK0 ] unsigned char 
  6864 ;;  status          1   66[BANK0 ] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;		None               void
  6867 ;; Registers used:
  6868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;Total ram usage:        3 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    6
  6881 ;; This function calls:
  6882 ;;		_getDimmerLights_Status
  6883 ;;		_setBuz
  6884 ;;		_setDelayOff_GO
  6885 ;;		_setDimmerLights_SwOff
  6886 ;;		_setDimmerLights_SwOn
  6887 ;;		_setRF_DimmerLights
  6888 ;;		_setTxData
  6889 ;; This function is called by:
  6890 ;;		_setControl_Lights_Table
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _setRFSW_Control
  6896  1593                     _setRFSW_Control:	
  6897                           
  6898                           ;incstack = 0
  6899                           ; Regs used in _setRFSW_Control: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6900                           ;setRFSW_Control@sw stored from wreg
  6901  1593  0020               	movlb	0	; select bank0
  6902  1594  00E3               	movwf	setRFSW_Control@sw
  6903                           
  6904                           ;RF_Control_B1.c: 431: char status = 0;
  6905  1595  01E2               	clrf	setRFSW_Control@status
  6906                           
  6907                           ;RF_Control_B1.c: 433: if (RF_Data[16] == 0x80) {
  6908  1596  0022               	movlb	2	; select bank2
  6909  1597  0830               	movf	(_RF_Data^(0+256)+16),w
  6910  1598  3A80               	xorlw	128
  6911  1599  1D03               	skipz
  6912  159A  2DC6               	goto	l10535
  6913                           
  6914                           ;RF_Control_B1.c: 434: setDelayOff_GO(sw, 1, RF_Data[17]);
  6915  159B  0020               	movlb	0	; select bank0
  6916  159C  01D9               	clrf	setDelayOff_GO@command
  6917  159D  0AD9               	incf	setDelayOff_GO@command,f
  6918  159E  0022               	movlb	2	; select bank2
  6919  159F  0831               	movf	(_RF_Data^(0+256)+17),w
  6920  15A0  0020               	movlb	0	; select bank0
  6921  15A1  00E1               	movwf	??_setRFSW_Control
  6922  15A2  0861               	movf	??_setRFSW_Control,w
  6923  15A3  00DA               	movwf	setDelayOff_GO@value
  6924  15A4  0863               	movf	setRFSW_Control@sw,w
  6925  15A5  318C  2488  3195   	fcall	_setDelayOff_GO
  6926                           
  6927                           ;RF_Control_B1.c: 435: if (getDimmerLights_Status(sw) == 1) {
  6928  15A8  0020               	movlb	0	; select bank0
  6929  15A9  0863               	movf	setRFSW_Control@sw,w
  6930  15AA  319D  256F  3195   	fcall	_getDimmerLights_Status
  6931  15AD  3A01               	xorlw	1
  6932  15AE  1D03               	skipz
  6933  15AF  2DC6               	goto	l10535
  6934                           
  6935                           ;RF_Control_B1.c: 436: setBuz(1, 100);
  6936  15B0  3064               	movlw	100
  6937  15B1  0020               	movlb	0	; select bank0
  6938  15B2  00A4               	movwf	setBuz@time
  6939  15B3  3000               	movlw	0
  6940  15B4  00A5               	movwf	setBuz@time+1
  6941  15B5  3001               	movlw	1
  6942  15B6  3188  2050  3195   	fcall	_setBuz
  6943                           
  6944                           ;RF_Control_B1.c: 437: setRF_DimmerLights(sw, 1);
  6945  15B9  0020               	movlb	0	; select bank0
  6946  15BA  01D9               	clrf	setRF_DimmerLights@on
  6947  15BB  0AD9               	incf	setRF_DimmerLights@on,f
  6948  15BC  0863               	movf	setRFSW_Control@sw,w
  6949  15BD  318A  22E3  3195   	fcall	_setRF_DimmerLights
  6950                           
  6951                           ;RF_Control_B1.c: 438: setTxData();
  6952  15C0  319C  24D2  3195   	fcall	_setTxData
  6953                           
  6954                           ;RF_Control_B1.c: 439: status = 1;
  6955  15C3  0020               	movlb	0	; select bank0
  6956  15C4  01E2               	clrf	setRFSW_Control@status
  6957  15C5  0AE2               	incf	setRFSW_Control@status,f
  6958  15C6                     l10535:	
  6959                           
  6960                           ;RF_Control_B1.c: 440: }
  6961                           ;RF_Control_B1.c: 441: }
  6962                           ;RF_Control_B1.c: 443: if (status == 0) {
  6963  15C6  0020               	movlb	0	; select bank0
  6964  15C7  08E2               	movf	setRFSW_Control@status,f
  6965  15C8  1D03               	skipz
  6966  15C9  0008               	return
  6967                           
  6968                           ;RF_Control_B1.c: 445: setDimmerLights_SwOn(sw);
  6969  15CA  0863               	movf	setRFSW_Control@sw,w
  6970  15CB  3187  2766  3195   	fcall	_setDimmerLights_SwOn
  6971                           
  6972                           ;RF_Control_B1.c: 446: setDimmerLights_SwOff(sw);
  6973  15CE  0020               	movlb	0	; select bank0
  6974  15CF  0863               	movf	setRFSW_Control@sw,w
  6975  15D0  3194  2432         	fcall	_setDimmerLights_SwOff
  6976  15D2  0008               	return
  6977  15D3                     __end_of_setRFSW_Control:	
  6978                           
  6979                           	psect	text25
  6980  0D93                     __ptext25:	
  6981 ;; *************** function _setRFSW_AdjControl *****************
  6982 ;; Defined at:
  6983 ;;		line 453 in file "../src/RF_Control_B1.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  sw              1    wreg     unsigned char 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  sw              1   62[BANK0 ] unsigned char 
  6988 ;;  status          1   61[BANK0 ] unsigned char 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;		None               void
  6991 ;; Registers used:
  6992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;Total ram usage:        4 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    6
  7005 ;; This function calls:
  7006 ;;		_getDimmerLights_PercentToValue
  7007 ;;		_getDimmerLights_Status
  7008 ;;		_setBuz
  7009 ;;		_setDimmerIntr_Dimming_RF
  7010 ;;		_setDimmerIntr_MaxmumValue
  7011 ;;		_setDimmerLights_DimmingRun
  7012 ;;		_setDimmerLights_SwOff
  7013 ;;		_setDimmerLights_SwOn
  7014 ;;		_setMemory_Modify
  7015 ;;		_setProductData
  7016 ;;		_setTxData
  7017 ;; This function is called by:
  7018 ;;		_setControl_Lights_Table
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           
  7023                           ;psect for function _setRFSW_AdjControl
  7024  0D93                     _setRFSW_AdjControl:	
  7025                           
  7026                           ;incstack = 0
  7027                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7028                           ;setRFSW_AdjControl@sw stored from wreg
  7029  0D93  0020               	movlb	0	; select bank0
  7030  0D94  00DE               	movwf	setRFSW_AdjControl@sw
  7031                           
  7032                           ;RF_Control_B1.c: 454: char status = 0;
  7033  0D95  01DD               	clrf	setRFSW_AdjControl@status
  7034                           
  7035                           ;RF_Control_B1.c: 456: status = getDimmerLights_Status(sw);
  7036  0D96  085E               	movf	setRFSW_AdjControl@sw,w
  7037  0D97  319D  256F  318D   	fcall	_getDimmerLights_Status
  7038  0D9A  0020               	movlb	0	; select bank0
  7039  0D9B  00DB               	movwf	??_setRFSW_AdjControl
  7040  0D9C  085B               	movf	??_setRFSW_AdjControl,w
  7041  0D9D  00DD               	movwf	setRFSW_AdjControl@status
  7042                           
  7043                           ;RF_Control_B1.c: 458: if (RF_Data[9] > 0x64) {
  7044  0D9E  3065               	movlw	101
  7045  0D9F  0022               	movlb	2	; select bank2
  7046  0DA0  0229               	subwf	(_RF_Data^(0+256)+9),w
  7047  0DA1  1C03               	skipc
  7048  0DA2  2DAA               	goto	l10547
  7049                           
  7050                           ;RF_Control_B1.c: 459: RF_Data[9] = 0x64;
  7051  0DA3  3064               	movlw	100
  7052  0DA4  0020               	movlb	0	; select bank0
  7053  0DA5  00DB               	movwf	??_setRFSW_AdjControl
  7054  0DA6  085B               	movf	??_setRFSW_AdjControl,w
  7055  0DA7  0022               	movlb	2	; select bank2
  7056  0DA8  00A9               	movwf	(_RF_Data^(0+256)+9)
  7057                           
  7058                           ;RF_Control_B1.c: 460: } else if (RF_Data[9] < 0x01) {
  7059  0DA9  2DAF               	goto	l10551
  7060  0DAA                     l10547:	
  7061  0DAA  08A9               	movf	(_RF_Data^(0+256)+9),f
  7062  0DAB  1D03               	skipz
  7063  0DAC  2DAF               	goto	l10551
  7064                           
  7065                           ;RF_Control_B1.c: 461: RF_Data[9] = 0x01;
  7066  0DAD  01A9               	clrf	(_RF_Data^(0+256)+9)
  7067  0DAE  0AA9               	incf	(_RF_Data^(0+256)+9),f
  7068  0DAF                     l10551:	
  7069                           
  7070                           ;RF_Control_B1.c: 462: }
  7071                           ;RF_Control_B1.c: 463: setProductData(9, RF_Data[9]);
  7072  0DAF  0829               	movf	(_RF_Data^(0+256)+9),w
  7073  0DB0  0020               	movlb	0	; select bank0
  7074  0DB1  00DB               	movwf	??_setRFSW_AdjControl
  7075  0DB2  085B               	movf	??_setRFSW_AdjControl,w
  7076  0DB3  00D6               	movwf	setProductData@value
  7077  0DB4  3009               	movlw	9
  7078  0DB5  319D  2530  318D   	fcall	_setProductData
  7079                           
  7080                           ;RF_Control_B1.c: 464: setProductData(11, sw);
  7081  0DB8  0020               	movlb	0	; select bank0
  7082  0DB9  085E               	movf	setRFSW_AdjControl@sw,w
  7083  0DBA  00DB               	movwf	??_setRFSW_AdjControl
  7084  0DBB  085B               	movf	??_setRFSW_AdjControl,w
  7085  0DBC  00D6               	movwf	setProductData@value
  7086  0DBD  300B               	movlw	11
  7087  0DBE  319D  2530  318D   	fcall	_setProductData
  7088                           
  7089                           ;RF_Control_B1.c: 465: setProductData(17, product->Data[26 + sw]);
  7090  0DC1  0020               	movlb	0	; select bank0
  7091  0DC2  085E               	movf	setRFSW_AdjControl@sw,w
  7092  0DC3  3E1A               	addlw	26
  7093  0DC4  076E               	addwf	_product,w
  7094  0DC5  00DB               	movwf	??_setRFSW_AdjControl
  7095  0DC6  085B               	movf	??_setRFSW_AdjControl,w
  7096  0DC7  0086               	movwf	6
  7097  0DC8  3002               	movlw	2	; select bank4/5
  7098  0DC9  0087               	movwf	7
  7099  0DCA  0801               	movf	1,w
  7100  0DCB  00DC               	movwf	??_setRFSW_AdjControl+1
  7101  0DCC  085C               	movf	??_setRFSW_AdjControl+1,w
  7102  0DCD  00D6               	movwf	setProductData@value
  7103  0DCE  3011               	movlw	17
  7104  0DCF  319D  2530  318D   	fcall	_setProductData
  7105                           
  7106                           ;RF_Control_B1.c: 466: setProductData((20 + sw), RF_Data[9]);
  7107  0DD2  0022               	movlb	2	; select bank2
  7108  0DD3  0829               	movf	(_RF_Data^(0+256)+9),w
  7109  0DD4  0020               	movlb	0	; select bank0
  7110  0DD5  00DB               	movwf	??_setRFSW_AdjControl
  7111  0DD6  085B               	movf	??_setRFSW_AdjControl,w
  7112  0DD7  00D6               	movwf	setProductData@value
  7113  0DD8  085E               	movf	setRFSW_AdjControl@sw,w
  7114  0DD9  3E14               	addlw	20
  7115  0DDA  319D  2530  318D   	fcall	_setProductData
  7116                           
  7117                           ;RF_Control_B1.c: 474: setMemory_Modify(1);
  7118  0DDD  3001               	movlw	1
  7119  0DDE  319D  25F6  318D   	fcall	_setMemory_Modify
  7120                           
  7121                           ;RF_Control_B1.c: 478: if (status == 1) {
  7122  0DE1  0020               	movlb	0	; select bank0
  7123  0DE2  085D               	movf	setRFSW_AdjControl@status,w
  7124  0DE3  3A01               	xorlw	1
  7125  0DE4  1D03               	skipz
  7126  0DE5  2E06               	goto	l10563
  7127                           
  7128                           ;RF_Control_B1.c: 480: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(RF_D
      +                          ata[9]));
  7129  0DE6  0022               	movlb	2	; select bank2
  7130  0DE7  0829               	movf	(_RF_Data^(0+256)+9),w
  7131  0DE8  3188  20F7  318D   	fcall	_getDimmerLights_PercentToValue
  7132  0DEB  0020               	movlb	0	; select bank0
  7133  0DEC  00DB               	movwf	??_setRFSW_AdjControl
  7134  0DED  085B               	movf	??_setRFSW_AdjControl,w
  7135  0DEE  00D8               	movwf	setDimmerIntr_MaxmumValue@value
  7136  0DEF  085E               	movf	setRFSW_AdjControl@sw,w
  7137  0DF0  3192  2218  318D   	fcall	_setDimmerIntr_MaxmumValue
  7138                           
  7139                           ;RF_Control_B1.c: 481: setDimmerIntr_Dimming_RF(sw, 1);
  7140  0DF3  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  7141  0DF4  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  7142  0DF5  0020               	movlb	0	; select bank0
  7143  0DF6  085E               	movf	setRFSW_AdjControl@sw,w
  7144  0DF7  3195  2556  318D   	fcall	_setDimmerIntr_Dimming_RF
  7145                           
  7146                           ;RF_Control_B1.c: 483: setTxData();
  7147  0DFA  319C  24D2  318D   	fcall	_setTxData
  7148                           
  7149                           ;RF_Control_B1.c: 485: setBuz(1, 100);
  7150  0DFD  3064               	movlw	100
  7151  0DFE  0020               	movlb	0	; select bank0
  7152  0DFF  00A4               	movwf	setBuz@time
  7153  0E00  3000               	movlw	0
  7154  0E01  00A5               	movwf	setBuz@time+1
  7155  0E02  3001               	movlw	1
  7156  0E03  3188  2050         	fcall	_setBuz
  7157                           
  7158                           ;RF_Control_B1.c: 486: } else if (status == 0) {
  7159  0E05  0008               	return
  7160  0E06                     l10563:	
  7161  0E06  0020               	movlb	0	; select bank0
  7162  0E07  08DD               	movf	setRFSW_AdjControl@status,f
  7163  0E08  1D03               	skipz
  7164  0E09  0008               	return
  7165                           
  7166                           ;RF_Control_B1.c: 490: setDimmerLights_DimmingRun(sw, 1);
  7167  0E0A  01F4               	clrf	setDimmerLights_DimmingRun@command
  7168  0E0B  0AF4               	incf	setDimmerLights_DimmingRun@command,f
  7169  0E0C  085E               	movf	setRFSW_AdjControl@sw,w
  7170  0E0D  319F  2781  318D   	fcall	_setDimmerLights_DimmingRun
  7171                           
  7172                           ;RF_Control_B1.c: 491: setDimmerLights_SwOn(sw);
  7173  0E10  0020               	movlb	0	; select bank0
  7174  0E11  085E               	movf	setRFSW_AdjControl@sw,w
  7175  0E12  3187  2766  318D   	fcall	_setDimmerLights_SwOn
  7176                           
  7177                           ;RF_Control_B1.c: 492: setDimmerLights_SwOff(sw);
  7178  0E15  0020               	movlb	0	; select bank0
  7179  0E16  085E               	movf	setRFSW_AdjControl@sw,w
  7180  0E17  3194  2432         	fcall	_setDimmerLights_SwOff
  7181  0E19  0008               	return
  7182  0E1A                     __end_of_setRFSW_AdjControl:	
  7183                           
  7184                           	psect	text26
  7185  1F81                     __ptext26:	
  7186 ;; *************** function _setDimmerLights_DimmingRun *****************
  7187 ;; Defined at:
  7188 ;;		line 1272 in file "../src/Dimmer_B1.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  lights          1    wreg     unsigned char 
  7191 ;;  command         1    4[COMMON] unsigned char 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  lights          1    6[COMMON] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;		None               void
  7196 ;; Registers used:
  7197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;Total ram usage:        3 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    4
  7210 ;; This function calls:
  7211 ;;		_DimmerLights_SelectPointer
  7212 ;; This function is called by:
  7213 ;;		_setRFSW_AdjControl
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function _setDimmerLights_DimmingRun
  7219  1F81                     _setDimmerLights_DimmingRun:	
  7220                           
  7221                           ;incstack = 0
  7222                           ; Regs used in _setDimmerLights_DimmingRun: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7223                           ;setDimmerLights_DimmingRun@lights stored from wreg
  7224  1F81  00F6               	movwf	setDimmerLights_DimmingRun@lights
  7225                           
  7226                           ;Dimmer_B1.c: 1273: DimmerLights_SelectPointer(lights);
  7227  1F82  0876               	movf	setDimmerLights_DimmingRun@lights,w
  7228  1F83  3191  2193         	fcall	_DimmerLights_SelectPointer
  7229                           
  7230                           ;Dimmer_B1.c: 1274: DimmerLights->DimmingRun = command == 1 ? 1 : 0;
  7231  1F85  0874               	movf	setDimmerLights_DimmingRun@command,w
  7232  1F86  3A01               	xorlw	1
  7233  1F87  3000               	movlw	0
  7234  1F88  1903               	skipnz
  7235  1F89  3001               	movlw	1
  7236  1F8A  00F5               	movwf	??_setDimmerLights_DimmingRun
  7237  1F8B  0020               	movlb	0	; select bank0
  7238  1F8C  0A6A               	incf	_DimmerLights,w
  7239  1F8D  0086               	movwf	6
  7240  1F8E  3001               	movlw	1	; select bank2/3
  7241  1F8F  0087               	movwf	7
  7242  1F90  0EF5               	swapf	??_setDimmerLights_DimmingRun,f
  7243  1F91  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7244  1F92  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7245  1F93  0801               	movf	1,w
  7246  1F94  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7247  1F95  39BF               	andlw	-65
  7248  1F96  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7249  1F97  0081               	movwf	1
  7250  1F98  0008               	return
  7251  1F99                     __end_of_setDimmerLights_DimmingRun:	
  7252                           
  7253                           	psect	text27
  7254  1DC9                     __ptext27:	
  7255 ;; *************** function _getRF_KeyStatus *****************
  7256 ;; Defined at:
  7257 ;;		line 167 in file "../src/RF_Control_B1.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  key             1    3[COMMON] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      unsigned char 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;Total ram usage:        3 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    3
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_setRF_Main
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _getRF_KeyStatus
  7287  1DC9                     _getRF_KeyStatus:	
  7288                           
  7289                           ;RF_Control_B1.c: 168: char key = 0;
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in _getRF_KeyStatus: [wreg+status,2]
  7293  1DC9  01F3               	clrf	getRF_KeyStatus@key
  7294                           
  7295                           ;RF_Control_B1.c: 170: key = (RA0 == 1 || RA6 == 1 || RA4 == 1) ? 1 : 0;
  7296  1DCA  01F4               	clrf	_getRF_KeyStatus$5789
  7297  1DCB  0AF4               	incf	_getRF_KeyStatus$5789,f
  7298  1DCC  0020               	movlb	0	; select bank0
  7299  1DCD  1C0C               	btfss	12,0	;volatile
  7300  1DCE  1B0C               	btfsc	12,6	;volatile
  7301  1DCF  2DD2               	goto	l7573
  7302  1DD0  1E0C               	btfss	12,4	;volatile
  7303  1DD1  01F4               	clrf	_getRF_KeyStatus$5789
  7304  1DD2                     l7573:	
  7305  1DD2  0874               	movf	_getRF_KeyStatus$5789,w
  7306  1DD3  00F2               	movwf	??_getRF_KeyStatus
  7307  1DD4  0872               	movf	??_getRF_KeyStatus,w
  7308  1DD5  00F3               	movwf	getRF_KeyStatus@key
  7309                           
  7310                           ;RF_Control_B1.c: 184: return key;
  7311  1DD6  0873               	movf	getRF_KeyStatus@key,w
  7312  1DD7  0008               	return
  7313  1DD8                     __end_of_getRF_KeyStatus:	
  7314                           
  7315                           	psect	text28
  7316  1E46                     __ptext28:	
  7317 ;; *************** function _getBuz_GO *****************
  7318 ;; Defined at:
  7319 ;;		line 82 in file "../src/Buzzer_B1.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  i               2    6[COMMON] int 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  2    2[COMMON] int 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;Total ram usage:        6 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    3
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_setRF_Main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           
  7348                           ;psect for function _getBuz_GO
  7349  1E46                     _getBuz_GO:	
  7350                           
  7351                           ;Buzzer_B1.c: 83: int i = Buz1.GO;
  7352                           
  7353                           ;incstack = 0
  7354                           ; Regs used in _getBuz_GO: [wreg+status,2+status,0]
  7355  1E46  0021               	movlb	1	; select bank1
  7356  1E47  0C4C               	rrf	_Buz1^(0+128),w
  7357  1E48  3901               	andlw	1
  7358  1E49  00F4               	movwf	??_getBuz_GO
  7359  1E4A  01F5               	clrf	??_getBuz_GO+1
  7360  1E4B  0874               	movf	??_getBuz_GO,w
  7361  1E4C  00F6               	movwf	getBuz_GO@i
  7362  1E4D  0875               	movf	??_getBuz_GO+1,w
  7363  1E4E  00F7               	movwf	getBuz_GO@i+1
  7364                           
  7365                           ;Buzzer_B1.c: 84: return i;
  7366  1E4F  0877               	movf	getBuz_GO@i+1,w
  7367  1E50  01F3               	clrf	?_getBuz_GO+1
  7368  1E51  07F3               	addwf	?_getBuz_GO+1,f
  7369  1E52  0876               	movf	getBuz_GO@i,w
  7370  1E53  01F2               	clrf	?_getBuz_GO
  7371  1E54  07F2               	addwf	?_getBuz_GO,f
  7372  1E55  0008               	return
  7373  1E56                     __end_of_getBuz_GO:	
  7374                           
  7375                           	psect	text29
  7376  13FB                     __ptext29:	
  7377 ;; *************** function ___lwdiv *****************
  7378 ;; Defined at:
  7379 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  divisor         2    2[COMMON] unsigned int 
  7382 ;;  dividend        2    4[COMMON] unsigned int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  quotient        2    1[BANK0 ] unsigned int 
  7385 ;;  counter         1    0[BANK0 ] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    2[COMMON] unsigned int 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;Total ram usage:        8 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    3
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_setRF_Main
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function ___lwdiv
  7411  13FB                     ___lwdiv:	
  7412                           
  7413                           ;incstack = 0
  7414                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7415  13FB  0020               	movlb	0	; select bank0
  7416  13FC  01A1               	clrf	___lwdiv@quotient
  7417  13FD  01A2               	clrf	___lwdiv@quotient+1
  7418  13FE  0873               	movf	___lwdiv@divisor+1,w
  7419  13FF  0472               	iorwf	___lwdiv@divisor,w
  7420  1400  1903               	skipnz
  7421  1401  2C2B               	goto	l11055
  7422  1402  01A0               	clrf	___lwdiv@counter
  7423  1403  0AA0               	incf	___lwdiv@counter,f
  7424  1404                     l11043:	
  7425  1404  1BF3               	btfsc	___lwdiv@divisor+1,7
  7426  1405  2C10               	goto	l11045
  7427  1406  3001               	movlw	1
  7428  1407                     u13155:	
  7429  1407  35F2               	lslf	___lwdiv@divisor,f
  7430  1408  0DF3               	rlf	___lwdiv@divisor+1,f
  7431  1409  0B89               	decfsz	9,f
  7432  140A  2C07               	goto	u13155
  7433  140B  3001               	movlw	1
  7434  140C  00F6               	movwf	??___lwdiv
  7435  140D  0876               	movf	??___lwdiv,w
  7436  140E  07A0               	addwf	___lwdiv@counter,f
  7437  140F  2C04               	goto	l11043
  7438  1410                     l11045:	
  7439  1410  3001               	movlw	1
  7440  1411                     u13175:	
  7441  1411  35A1               	lslf	___lwdiv@quotient,f
  7442  1412  0DA2               	rlf	___lwdiv@quotient+1,f
  7443  1413  0B89               	decfsz	9,f
  7444  1414  2C11               	goto	u13175
  7445  1415  0873               	movf	___lwdiv@divisor+1,w
  7446  1416  0275               	subwf	___lwdiv@dividend+1,w
  7447  1417  1D03               	skipz
  7448  1418  2C1B               	goto	u13185
  7449  1419  0872               	movf	___lwdiv@divisor,w
  7450  141A  0274               	subwf	___lwdiv@dividend,w
  7451  141B                     u13185:	
  7452  141B  1C03               	skipc
  7453  141C  2C22               	goto	l11051
  7454  141D  0872               	movf	___lwdiv@divisor,w
  7455  141E  02F4               	subwf	___lwdiv@dividend,f
  7456  141F  0873               	movf	___lwdiv@divisor+1,w
  7457  1420  3BF5               	subwfb	___lwdiv@dividend+1,f
  7458  1421  1421               	bsf	___lwdiv@quotient,0
  7459  1422                     l11051:	
  7460  1422  3001               	movlw	1
  7461  1423                     u13195:	
  7462  1423  36F3               	lsrf	___lwdiv@divisor+1,f
  7463  1424  0CF2               	rrf	___lwdiv@divisor,f
  7464  1425  0B89               	decfsz	9,f
  7465  1426  2C23               	goto	u13195
  7466  1427  3001               	movlw	1
  7467  1428  02A0               	subwf	___lwdiv@counter,f
  7468  1429  1D03               	btfss	3,2
  7469  142A  2C10               	goto	l11045
  7470  142B                     l11055:	
  7471  142B  0822               	movf	___lwdiv@quotient+1,w
  7472  142C  01F3               	clrf	?___lwdiv+1
  7473  142D  07F3               	addwf	?___lwdiv+1,f
  7474  142E  0821               	movf	___lwdiv@quotient,w
  7475  142F  01F2               	clrf	?___lwdiv
  7476  1430  07F2               	addwf	?___lwdiv,f
  7477  1431  0008               	return
  7478  1432                     __end_of___lwdiv:	
  7479                           
  7480                           	psect	text30
  7481  1CE7                     __ptext30:	
  7482 ;; *************** function _RF_RxDisable *****************
  7483 ;; Defined at:
  7484 ;;		line 155 in file "../src/RF_Control_B1.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;		None               void
  7491 ;; Registers used:
  7492 ;;		None
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    3
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_setRF_Main
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           
  7513                           ;psect for function _RF_RxDisable
  7514  1CE7                     _RF_RxDisable:	
  7515                           
  7516                           ;RF_Control_B1.c: 156: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  7517                           
  7518                           ;incstack = 0
  7519                           ; Regs used in _RF_RxDisable: []
  7520  1CE7  0021               	movlb	1	; select bank1
  7521  1CE8  18B0               	btfsc	_RF1^(0+128),1
  7522  1CE9  2CEC               	goto	l2440
  7523  1CEA  1DB0               	btfss	_RF1^(0+128),3
  7524  1CEB  0008               	return
  7525  1CEC                     l2440:	
  7526                           
  7527                           ;RF_Control_B1.c: 157: RF1.RxStatus = 0;
  7528  1CEC  11B0               	bcf	_RF1^(0+128),3
  7529                           
  7530                           ;RF_Control_B1.c: 158: RF1.ReceiveGO = 0;
  7531  1CED  10B0               	bcf	_RF1^(0+128),1
  7532  1CEE  0008               	return
  7533  1CEF                     __end_of_RF_RxDisable:	
  7534                           
  7535                           	psect	text31
  7536  0B49                     __ptext31:	
  7537 ;; *************** function _CC2500_TxData *****************
  7538 ;; Defined at:
  7539 ;;		line 32 in file "../src/CC2500_B1.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  loop_e          1    7[COMMON] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;		None               void
  7546 ;; Registers used:
  7547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;Total ram usage:        2 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:    5
  7560 ;; This function calls:
  7561 ;;		_CC2500_WriteByte
  7562 ;;		_CC2500_WriteCommand
  7563 ;;		_RF_Timeout_Counter
  7564 ;;		_setRF_TimeoutCleared
  7565 ;; This function is called by:
  7566 ;;		_setRF_Main
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _CC2500_TxData
  7572  0B49                     _CC2500_TxData:	
  7573                           
  7574                           ;CC2500_B1.c: 33: unsigned char loop_e;
  7575                           ;CC2500_B1.c: 35: CC2500_WriteCommand(0x36);
  7576                           
  7577                           ;incstack = 0
  7578                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7579  0B49  3036               	movlw	54
  7580  0B4A  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7581                           
  7582                           ;CC2500_B1.c: 36: CC2500_WriteCommand(0x3B);
  7583  0B4D  303B               	movlw	59
  7584  0B4E  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7585                           
  7586                           ;CC2500_B1.c: 38: RC4 = 0;
  7587  0B51  0020               	movlb	0	; select bank0
  7588  0B52  120E               	bcf	14,4	;volatile
  7589                           
  7590                           ;CC2500_B1.c: 39: SPI0Buffer = 0x3F + 0x40;
  7591  0B53  307F               	movlw	127
  7592  0B54  00F6               	movwf	??_CC2500_TxData
  7593  0B55  0876               	movf	??_CC2500_TxData,w
  7594  0B56  00EB               	movwf	_SPI0Buffer
  7595                           
  7596                           ;CC2500_B1.c: 40: while (RC2 == 1 && RF1.Timeout == 0) {
  7597  0B57  2B5B               	goto	l10809
  7598  0B58                     l10807:	
  7599                           
  7600                           ;CC2500_B1.c: 41: RF_Timeout_Counter();
  7601  0B58  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7602  0B5B                     l10809:	
  7603  0B5B  0020               	movlb	0	; select bank0
  7604  0B5C  1D0E               	btfss	14,2	;volatile
  7605  0B5D  2B61               	goto	l10813
  7606  0B5E  0021               	movlb	1	; select bank1
  7607  0B5F  1F31               	btfss	(_RF1^(0+128)+1),6
  7608  0B60  2B58               	goto	l10807
  7609  0B61                     l10813:	
  7610                           
  7611                           ;CC2500_B1.c: 42: };
  7612                           ;CC2500_B1.c: 43: setRF_TimeoutCleared();
  7613  0B61  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7614                           
  7615                           ;CC2500_B1.c: 45: CC2500_WriteByte();
  7616  0B64  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7617                           
  7618                           ;CC2500_B1.c: 46: SPI0Buffer = Tx_Length;
  7619  0B67  0020               	movlb	0	; select bank0
  7620  0B68  086D               	movf	_Tx_Length,w
  7621  0B69  00F6               	movwf	??_CC2500_TxData
  7622  0B6A  0876               	movf	??_CC2500_TxData,w
  7623  0B6B  00EB               	movwf	_SPI0Buffer
  7624                           
  7625                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  7626  0B6C  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7627                           
  7628                           ;CC2500_B1.c: 48: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  7629  0B6F  01F7               	clrf	CC2500_TxData@loop_e
  7630  0B70                     l10827:	
  7631  0B70  0020               	movlb	0	; select bank0
  7632  0B71  086D               	movf	_Tx_Length,w
  7633  0B72  0277               	subwf	CC2500_TxData@loop_e,w
  7634  0B73  1803               	btfsc	3,0
  7635  0B74  2B87               	goto	l275
  7636                           
  7637                           ;CC2500_B1.c: 49: SPI0Buffer = RF_Data[loop_e];
  7638  0B75  0877               	movf	CC2500_TxData@loop_e,w
  7639  0B76  3E20               	addlw	_RF_Data& (0+255)
  7640  0B77  0086               	movwf	6
  7641  0B78  3001               	movlw	1	; select bank2/3
  7642  0B79  0087               	movwf	7
  7643  0B7A  0801               	movf	1,w
  7644  0B7B  00F6               	movwf	??_CC2500_TxData
  7645  0B7C  0876               	movf	??_CC2500_TxData,w
  7646  0B7D  0020               	movlb	0	; select bank0
  7647  0B7E  00EB               	movwf	_SPI0Buffer
  7648                           
  7649                           ;CC2500_B1.c: 50: CC2500_WriteByte();
  7650  0B7F  319E  26BE  318B   	fcall	_CC2500_WriteByte
  7651  0B82  3001               	movlw	1
  7652  0B83  00F6               	movwf	??_CC2500_TxData
  7653  0B84  0876               	movf	??_CC2500_TxData,w
  7654  0B85  07F7               	addwf	CC2500_TxData@loop_e,f
  7655  0B86  2B70               	goto	l10827
  7656  0B87                     l275:	
  7657                           
  7658                           ;CC2500_B1.c: 51: }
  7659                           ;CC2500_B1.c: 52: RC4 = 1;
  7660  0B87  160E               	bsf	14,4	;volatile
  7661                           
  7662                           ;CC2500_B1.c: 53: CC2500_WriteCommand(0x35);
  7663  0B88  3035               	movlw	53
  7664  0B89  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7665                           
  7666                           ;CC2500_B1.c: 54: while (RB0 == 0 && RF1.Timeout == 0) {
  7667  0B8C  2B90               	goto	l10833
  7668  0B8D                     l10831:	
  7669                           
  7670                           ;CC2500_B1.c: 55: RF_Timeout_Counter();
  7671  0B8D  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7672  0B90                     l10833:	
  7673  0B90  0020               	movlb	0	; select bank0
  7674  0B91  180D               	btfsc	13,0	;volatile
  7675  0B92  2B96               	goto	l10837
  7676  0B93  0021               	movlb	1	; select bank1
  7677  0B94  1F31               	btfss	(_RF1^(0+128)+1),6
  7678  0B95  2B8D               	goto	l10831
  7679  0B96                     l10837:	
  7680                           
  7681                           ;CC2500_B1.c: 56: };
  7682                           ;CC2500_B1.c: 57: setRF_TimeoutCleared();
  7683  0B96  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7684                           
  7685                           ;CC2500_B1.c: 59: while (RB0 == 1 && RF1.Timeout == 0) {
  7686  0B99  2B9D               	goto	l10841
  7687  0B9A                     l10839:	
  7688                           
  7689                           ;CC2500_B1.c: 60: RF_Timeout_Counter();
  7690  0B9A  319E  26E7  318B   	fcall	_RF_Timeout_Counter
  7691  0B9D                     l10841:	
  7692  0B9D  0020               	movlb	0	; select bank0
  7693  0B9E  1C0D               	btfss	13,0	;volatile
  7694  0B9F  2BA3               	goto	l10845
  7695  0BA0  0021               	movlb	1	; select bank1
  7696  0BA1  1F31               	btfss	(_RF1^(0+128)+1),6
  7697  0BA2  2B9A               	goto	l10839
  7698  0BA3                     l10845:	
  7699                           
  7700                           ;CC2500_B1.c: 61: };
  7701                           ;CC2500_B1.c: 62: setRF_TimeoutCleared();
  7702  0BA3  319C  24AC  318B   	fcall	_setRF_TimeoutCleared
  7703                           
  7704                           ;CC2500_B1.c: 64: CC2500_WriteCommand(0x36);
  7705  0BA6  3036               	movlw	54
  7706  0BA7  319F  2799  318B   	fcall	_CC2500_WriteCommand
  7707                           
  7708                           ;CC2500_B1.c: 65: CC2500_WriteCommand(0x3B);
  7709  0BAA  303B               	movlw	59
  7710  0BAB  319F  2799         	fcall	_CC2500_WriteCommand
  7711                           
  7712                           ;CC2500_B1.c: 67: Transceive_OK = 1;
  7713  0BAD  14F9               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  7714  0BAE  0008               	return
  7715  0BAF                     __end_of_CC2500_TxData:	
  7716                           
  7717                           	psect	text32
  7718  09B5                     __ptext32:	
  7719 ;; *************** function _CC2500_RxData *****************
  7720 ;; Defined at:
  7721 ;;		line 73 in file "../src/CC2500_B1.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  loop_f          1    7[COMMON] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;		None               void
  7728 ;; Registers used:
  7729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;Total ram usage:        2 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    5
  7742 ;; This function calls:
  7743 ;;		_CC2500_ReadByte
  7744 ;;		_CC2500_ReadStatus
  7745 ;;		_CC2500_WriteByte
  7746 ;;		_CC2500_WriteCommand
  7747 ;;		_RF_Timeout_Counter
  7748 ;;		_setRF_TimeoutCleared
  7749 ;; This function is called by:
  7750 ;;		_setRF_Main
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           
  7755                           ;psect for function _CC2500_RxData
  7756  09B5                     _CC2500_RxData:	
  7757                           
  7758                           ;CC2500_B1.c: 74: unsigned char loop_f;
  7759                           ;CC2500_B1.c: 78: if (RB0 == 0) {
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7763  09B5  0020               	movlb	0	; select bank0
  7764  09B6  180D               	btfsc	13,0	;volatile
  7765  09B7  0008               	return
  7766                           
  7767                           ;CC2500_B1.c: 87: CC2500_ReadStatus(0x3B);
  7768  09B8  303B               	movlw	59
  7769  09B9  3192  227E  3189   	fcall	_CC2500_ReadStatus
  7770                           
  7771                           ;CC2500_B1.c: 89: if (s_data != 0) {
  7772  09BC  0021               	movlb	1	; select bank1
  7773  09BD  0867               	movf	_s_data^(0+128),w
  7774  09BE  1903               	btfsc	3,2
  7775  09BF  0008               	return
  7776                           
  7777                           ;CC2500_B1.c: 90: RC4 = 0;
  7778  09C0  0020               	movlb	0	; select bank0
  7779  09C1  120E               	bcf	14,4	;volatile
  7780                           
  7781                           ;CC2500_B1.c: 91: SPI0Buffer = 0x3F + 0xC0;
  7782  09C2  30FF               	movlw	255
  7783  09C3  00F6               	movwf	??_CC2500_RxData
  7784  09C4  0876               	movf	??_CC2500_RxData,w
  7785  09C5  00EB               	movwf	_SPI0Buffer
  7786                           
  7787                           ;CC2500_B1.c: 93: while (RC2 == 1 && RF1.Timeout == 0) {
  7788  09C6  29CA               	goto	l10865
  7789  09C7                     l10863:	
  7790                           
  7791                           ;CC2500_B1.c: 94: RF_Timeout_Counter();
  7792  09C7  319E  26E7  3189   	fcall	_RF_Timeout_Counter
  7793  09CA                     l10865:	
  7794  09CA  0020               	movlb	0	; select bank0
  7795  09CB  1D0E               	btfss	14,2	;volatile
  7796  09CC  29D0               	goto	l10869
  7797  09CD  0021               	movlb	1	; select bank1
  7798  09CE  1F31               	btfss	(_RF1^(0+128)+1),6
  7799  09CF  29C7               	goto	l10863
  7800  09D0                     l10869:	
  7801                           
  7802                           ;CC2500_B1.c: 95: };
  7803                           ;CC2500_B1.c: 96: setRF_TimeoutCleared();
  7804  09D0  319C  24AC  3189   	fcall	_setRF_TimeoutCleared
  7805                           
  7806                           ;CC2500_B1.c: 98: CC2500_WriteByte();
  7807  09D3  319E  26BE  3189   	fcall	_CC2500_WriteByte
  7808                           
  7809                           ;CC2500_B1.c: 99: CC2500_ReadByte();
  7810  09D6  319F  2752  3189   	fcall	_CC2500_ReadByte
  7811                           
  7812                           ;CC2500_B1.c: 100: Rx_Length = SPI0Buffer;
  7813  09D9  0020               	movlb	0	; select bank0
  7814  09DA  086B               	movf	_SPI0Buffer,w
  7815  09DB  00F6               	movwf	??_CC2500_RxData
  7816  09DC  0876               	movf	??_CC2500_RxData,w
  7817  09DD  0021               	movlb	1	; select bank1
  7818  09DE  00E3               	movwf	_Rx_Length^(0+128)
  7819                           
  7820                           ;CC2500_B1.c: 101: for (loop_f = 0; loop_f < Rx_Length; loop_f++) {
  7821  09DF  01F7               	clrf	CC2500_RxData@loop_f
  7822  09E0                     l10885:	
  7823  09E0  0021               	movlb	1	; select bank1
  7824  09E1  0863               	movf	_Rx_Length^(0+128),w
  7825  09E2  0277               	subwf	CC2500_RxData@loop_f,w
  7826  09E3  1803               	btfsc	3,0
  7827  09E4  29F7               	goto	l10887
  7828                           
  7829                           ;CC2500_B1.c: 102: CC2500_ReadByte();
  7830  09E5  319F  2752  3189   	fcall	_CC2500_ReadByte
  7831                           
  7832                           ;CC2500_B1.c: 103: RF_Data[loop_f] = SPI0Buffer;
  7833  09E8  0020               	movlb	0	; select bank0
  7834  09E9  086B               	movf	_SPI0Buffer,w
  7835  09EA  00F6               	movwf	??_CC2500_RxData
  7836  09EB  0877               	movf	CC2500_RxData@loop_f,w
  7837  09EC  3E20               	addlw	_RF_Data& (0+255)
  7838  09ED  0086               	movwf	6
  7839  09EE  3001               	movlw	1	; select bank2/3
  7840  09EF  0087               	movwf	7
  7841  09F0  0876               	movf	??_CC2500_RxData,w
  7842  09F1  0081               	movwf	1
  7843  09F2  3001               	movlw	1
  7844  09F3  00F6               	movwf	??_CC2500_RxData
  7845  09F4  0876               	movf	??_CC2500_RxData,w
  7846  09F5  07F7               	addwf	CC2500_RxData@loop_f,f
  7847  09F6  29E0               	goto	l10885
  7848  09F7                     l10887:	
  7849                           
  7850                           ;CC2500_B1.c: 104: }
  7851                           ;CC2500_B1.c: 105: CC2500_ReadByte();
  7852  09F7  319F  2752  3189   	fcall	_CC2500_ReadByte
  7853                           
  7854                           ;CC2500_B1.c: 106: RSSI = SPI0Buffer;
  7855  09FA  0020               	movlb	0	; select bank0
  7856  09FB  086B               	movf	_SPI0Buffer,w
  7857  09FC  00F6               	movwf	??_CC2500_RxData
  7858  09FD  0876               	movf	??_CC2500_RxData,w
  7859  09FE  0021               	movlb	1	; select bank1
  7860  09FF  00E2               	movwf	_RSSI^(0+128)
  7861                           
  7862                           ;CC2500_B1.c: 107: CC2500_ReadByte();
  7863  0A00  319F  2752  3189   	fcall	_CC2500_ReadByte
  7864                           
  7865                           ;CC2500_B1.c: 108: CRC = SPI0Buffer;
  7866  0A03  0020               	movlb	0	; select bank0
  7867  0A04  086B               	movf	_SPI0Buffer,w
  7868  0A05  00F6               	movwf	??_CC2500_RxData
  7869  0A06  0876               	movf	??_CC2500_RxData,w
  7870  0A07  0021               	movlb	1	; select bank1
  7871  0A08  00DF               	movwf	_CRC^(0+128)
  7872                           
  7873                           ;CC2500_B1.c: 109: RC4 = 1;
  7874  0A09  0020               	movlb	0	; select bank0
  7875  0A0A  160E               	bsf	14,4	;volatile
  7876                           
  7877                           ;CC2500_B1.c: 110: if (CRC & 0x80)
  7878  0A0B  0021               	movlb	1	; select bank1
  7879  0A0C  1BDF               	btfsc	_CRC^(0+128),7
  7880                           
  7881                           ;CC2500_B1.c: 111: Receive_OK = 1;
  7882  0A0D  1479               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  7883                           
  7884                           ;CC2500_B1.c: 113: RF1.RxStatus = 0;
  7885  0A0E  11B0               	bcf	_RF1^(0+128),3
  7886                           
  7887                           ;CC2500_B1.c: 114: RF1.ReceiveGO = 1;
  7888  0A0F  14B0               	bsf	_RF1^(0+128),1
  7889                           
  7890                           ;CC2500_B1.c: 115: CC2500_WriteCommand(0x36);
  7891  0A10  3036               	movlw	54
  7892  0A11  319F  2799  3189   	fcall	_CC2500_WriteCommand
  7893                           
  7894                           ;CC2500_B1.c: 116: CC2500_WriteCommand(0x3A);
  7895  0A14  303A               	movlw	58
  7896  0A15  319F  2799         	fcall	_CC2500_WriteCommand
  7897  0A17  0021               	movlb	1	; select bank1
  7898  0A18  0008               	return
  7899  0A19                     __end_of_CC2500_RxData:	
  7900                           
  7901                           	psect	text33
  7902  127E                     __ptext33:	
  7903 ;; *************** function _CC2500_ReadStatus *****************
  7904 ;; Defined at:
  7905 ;;		line 308 in file "../src/CC2500_B1.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  status_addr     1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  status_addr     1    5[COMMON] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;		None               void
  7912 ;; Registers used:
  7913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;Total ram usage:        2 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    4
  7926 ;; This function calls:
  7927 ;;		_CC2500_ReadByte
  7928 ;;		_CC2500_WriteByte
  7929 ;;		_RF_Timeout_Counter
  7930 ;;		_setRF_TimeoutCleared
  7931 ;; This function is called by:
  7932 ;;		_CC2500_RxData
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function _CC2500_ReadStatus
  7938  127E                     _CC2500_ReadStatus:	
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _CC2500_ReadStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7942                           ;CC2500_ReadStatus@status_addr stored from wreg
  7943  127E  00F5               	movwf	CC2500_ReadStatus@status_addr
  7944                           
  7945                           ;CC2500_B1.c: 309: RC4 = 0;
  7946  127F  0020               	movlb	0	; select bank0
  7947  1280  120E               	bcf	14,4	;volatile
  7948                           
  7949                           ;CC2500_B1.c: 310: SPI0Buffer = status_addr + 0xC0;
  7950  1281  0875               	movf	CC2500_ReadStatus@status_addr,w
  7951  1282  3EC0               	addlw	192
  7952  1283  00F4               	movwf	??_CC2500_ReadStatus
  7953  1284  0874               	movf	??_CC2500_ReadStatus,w
  7954  1285  00EB               	movwf	_SPI0Buffer
  7955                           
  7956                           ;CC2500_B1.c: 312: while (RC2 == 1 && RF1.Timeout == 0) {
  7957  1286  2A8A               	goto	l10597
  7958  1287                     l10595:	
  7959                           
  7960                           ;CC2500_B1.c: 313: RF_Timeout_Counter();
  7961  1287  319E  26E7  3192   	fcall	_RF_Timeout_Counter
  7962  128A                     l10597:	
  7963  128A  0020               	movlb	0	; select bank0
  7964  128B  1D0E               	btfss	14,2	;volatile
  7965  128C  2A90               	goto	l10601
  7966  128D  0021               	movlb	1	; select bank1
  7967  128E  1F31               	btfss	(_RF1^(0+128)+1),6
  7968  128F  2A87               	goto	l10595
  7969  1290                     l10601:	
  7970                           
  7971                           ;CC2500_B1.c: 314: };
  7972                           ;CC2500_B1.c: 315: setRF_TimeoutCleared();
  7973  1290  319C  24AC  3192   	fcall	_setRF_TimeoutCleared
  7974                           
  7975                           ;CC2500_B1.c: 317: CC2500_WriteByte();
  7976  1293  319E  26BE  3192   	fcall	_CC2500_WriteByte
  7977                           
  7978                           ;CC2500_B1.c: 318: CC2500_ReadByte();
  7979  1296  319F  2752         	fcall	_CC2500_ReadByte
  7980                           
  7981                           ;CC2500_B1.c: 319: RC4 = 1;
  7982  1298  0020               	movlb	0	; select bank0
  7983  1299  160E               	bsf	14,4	;volatile
  7984                           
  7985                           ;CC2500_B1.c: 321: s_data = SPI0Buffer;
  7986  129A  086B               	movf	_SPI0Buffer,w
  7987  129B  00F4               	movwf	??_CC2500_ReadStatus
  7988  129C  0874               	movf	??_CC2500_ReadStatus,w
  7989  129D  0021               	movlb	1	; select bank1
  7990  129E  00E7               	movwf	_s_data^(0+128)
  7991  129F  0008               	return
  7992  12A0                     __end_of_CC2500_ReadStatus:	
  7993                           
  7994                           	psect	text34
  7995  1F52                     __ptext34:	
  7996 ;; *************** function _CC2500_ReadByte *****************
  7997 ;; Defined at:
  7998 ;;		line 242 in file "../src/CC2500_B1.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;		None
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  loop_b          1    3[COMMON] unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;		None               void
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;Total ram usage:        2 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    3
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_CC2500_RxData
  8023 ;;		_CC2500_ReadStatus
  8024 ;;		_CC2500_ReadREG
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           
  8029                           ;psect for function _CC2500_ReadByte
  8030  1F52                     _CC2500_ReadByte:	
  8031                           
  8032                           ;CC2500_B1.c: 243: unsigned char loop_b;
  8033                           ;CC2500_B1.c: 244: for (loop_b = 0; loop_b < 8; loop_b++) {
  8034                           
  8035                           ;incstack = 0
  8036                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  8037  1F52  01F3               	clrf	CC2500_ReadByte@loop_b
  8038  1F53                     L1:	
  8039  1F53  3008               	movlw	8
  8040  1F54  0273               	subwf	CC2500_ReadByte@loop_b,w
  8041  1F55  1803               	btfsc	3,0
  8042  1F56  0008               	return
  8043                           
  8044                           ;CC2500_B1.c: 245: RC1 = 1;
  8045  1F57  0020               	movlb	0	; select bank0
  8046  1F58  148E               	bsf	14,1	;volatile
  8047                           
  8048                           ;CC2500_B1.c: 246: SPI0Buffer <<= 1;
  8049  1F59  1003               	clrc
  8050  1F5A  0DEB               	rlf	_SPI0Buffer,f
  8051                           
  8052                           ;CC2500_B1.c: 247: if (RC2 == 1)
  8053  1F5B  1D0E               	btfss	14,2	;volatile
  8054  1F5C  2F5F               	goto	l6763
  8055                           
  8056                           ;CC2500_B1.c: 248: SPI0Buffer |= 0x01;
  8057  1F5D  146B               	bsf	_SPI0Buffer,0
  8058  1F5E  2F63               	goto	l6765
  8059  1F5F                     l6763:	
  8060                           
  8061                           ;CC2500_B1.c: 249: else
  8062                           ;CC2500_B1.c: 250: SPI0Buffer &= 0xFE;
  8063  1F5F  30FE               	movlw	254
  8064  1F60  00F2               	movwf	??_CC2500_ReadByte
  8065  1F61  0872               	movf	??_CC2500_ReadByte,w
  8066  1F62  05EB               	andwf	_SPI0Buffer,f
  8067  1F63                     l6765:	
  8068                           
  8069                           ;CC2500_B1.c: 251: RC1 = 0;
  8070  1F63  108E               	bcf	14,1	;volatile
  8071  1F64  3001               	movlw	1
  8072  1F65  00F2               	movwf	??_CC2500_ReadByte
  8073  1F66  0872               	movf	??_CC2500_ReadByte,w
  8074  1F67  07F3               	addwf	CC2500_ReadByte@loop_b,f
  8075  1F68  2F53               	goto	L1
  8076  1F69                     __end_of_CC2500_ReadByte:	
  8077                           
  8078                           	psect	text35
  8079  1EFC                     __ptext35:	
  8080 ;; *************** function _CC2500_PowerOnInitial *****************
  8081 ;; Defined at:
  8082 ;;		line 126 in file "../src/CC2500_B1.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;		None
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;		None               void
  8089 ;; Registers used:
  8090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    6
  8103 ;; This function calls:
  8104 ;;		_CC2500_ClearRXFIFO
  8105 ;;		_CC2500_ClearTXFIFO
  8106 ;;		_CC2500_FrequencyCabr
  8107 ;;		_CC2500_InitPATable
  8108 ;;		_CC2500_InitSetREG
  8109 ;;		_CC2500_PowerRST
  8110 ;;		_CC2500_SIDLEMode
  8111 ;; This function is called by:
  8112 ;;		_main
  8113 ;;		_setRF_Main
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           
  8118                           ;psect for function _CC2500_PowerOnInitial
  8119  1EFC                     _CC2500_PowerOnInitial:	
  8120                           
  8121                           ;CC2500_B1.c: 127: CC2500_PowerRST();
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8125  1EFC  3196  2657  319E   	fcall	_CC2500_PowerRST
  8126                           
  8127                           ;CC2500_B1.c: 128: CC2500_InitSetREG();
  8128  1EFF  3193  233A  319E   	fcall	_CC2500_InitSetREG
  8129                           
  8130                           ;CC2500_B1.c: 129: CC2500_InitPATable();
  8131  1F02  3191  2135  319E   	fcall	_CC2500_InitPATable
  8132                           
  8133                           ;CC2500_B1.c: 130: CC2500_ClearTXFIFO();
  8134  1F05  319C  24B4  319E   	fcall	_CC2500_ClearTXFIFO
  8135                           
  8136                           ;CC2500_B1.c: 131: CC2500_ClearRXFIFO();
  8137  1F08  319C  24B0  319E   	fcall	_CC2500_ClearRXFIFO
  8138                           
  8139                           ;CC2500_B1.c: 132: CC2500_FrequencyCabr();
  8140  1F0B  319D  2519  319E   	fcall	_CC2500_FrequencyCabr
  8141                           
  8142                           ;CC2500_B1.c: 133: CC2500_SIDLEMode();
  8143  1F0E  319C  24B8         	fcall	_CC2500_SIDLEMode
  8144  1F10  0008               	return
  8145  1F11                     __end_of_CC2500_PowerOnInitial:	
  8146                           
  8147                           	psect	text36
  8148  1CB8                     __ptext36:	
  8149 ;; *************** function _CC2500_SIDLEMode *****************
  8150 ;; Defined at:
  8151 ;;		line 216 in file "../src/CC2500_B1.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;		None               void
  8158 ;; Registers used:
  8159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;Total ram usage:        0 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    5
  8172 ;; This function calls:
  8173 ;;		_CC2500_WriteCommand
  8174 ;; This function is called by:
  8175 ;;		_CC2500_PowerOnInitial
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function _CC2500_SIDLEMode
  8181  1CB8                     _CC2500_SIDLEMode:	
  8182                           
  8183                           ;CC2500_B1.c: 217: CC2500_WriteCommand(0x36);
  8184                           
  8185                           ;incstack = 0
  8186                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8187  1CB8  3036               	movlw	54
  8188  1CB9  319F  2799         	fcall	_CC2500_WriteCommand
  8189  1CBB  0008               	return
  8190  1CBC                     __end_of_CC2500_SIDLEMode:	
  8191                           
  8192                           	psect	text37
  8193  1657                     __ptext37:	
  8194 ;; *************** function _CC2500_PowerRST *****************
  8195 ;; Defined at:
  8196 ;;		line 139 in file "../src/CC2500_B1.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;		None               void
  8203 ;; Registers used:
  8204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;Total ram usage:        1 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    4
  8217 ;; This function calls:
  8218 ;;		_CC2500_WriteByte
  8219 ;;		_DelayTime_1us
  8220 ;;		_RF_Timeout_Counter
  8221 ;;		_setRF_TimeoutCleared
  8222 ;; This function is called by:
  8223 ;;		_CC2500_PowerOnInitial
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           
  8228                           ;psect for function _CC2500_PowerRST
  8229  1657                     _CC2500_PowerRST:	
  8230                           
  8231                           ;CC2500_B1.c: 140: RC1 = 0;
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8235  1657  0020               	movlb	0	; select bank0
  8236  1658  108E               	bcf	14,1	;volatile
  8237                           
  8238                           ;CC2500_B1.c: 141: RC0 = 0;
  8239  1659  100E               	bcf	14,0	;volatile
  8240                           
  8241                           ;CC2500_B1.c: 142: RC4 = 1;
  8242  165A  160E               	bsf	14,4	;volatile
  8243                           
  8244                           ;CC2500_B1.c: 143: DelayTime_1us(10);
  8245  165B  300A               	movlw	10
  8246  165C  00F2               	movwf	DelayTime_1us@count
  8247  165D  3000               	movlw	0
  8248  165E  00F3               	movwf	DelayTime_1us@count+1
  8249  165F  3192  22C4  3196   	fcall	_DelayTime_1us
  8250                           
  8251                           ;CC2500_B1.c: 144: RC4 = 0;
  8252  1662  0020               	movlb	0	; select bank0
  8253  1663  120E               	bcf	14,4	;volatile
  8254                           
  8255                           ;CC2500_B1.c: 145: DelayTime_1us(10);
  8256  1664  300A               	movlw	10
  8257  1665  00F2               	movwf	DelayTime_1us@count
  8258  1666  3000               	movlw	0
  8259  1667  00F3               	movwf	DelayTime_1us@count+1
  8260  1668  3192  22C4  3196   	fcall	_DelayTime_1us
  8261                           
  8262                           ;CC2500_B1.c: 146: RC4 = 1;
  8263  166B  0020               	movlb	0	; select bank0
  8264  166C  160E               	bsf	14,4	;volatile
  8265                           
  8266                           ;CC2500_B1.c: 147: DelayTime_1us(40);
  8267  166D  3028               	movlw	40
  8268  166E  00F2               	movwf	DelayTime_1us@count
  8269  166F  3000               	movlw	0
  8270  1670  00F3               	movwf	DelayTime_1us@count+1
  8271  1671  3192  22C4  3196   	fcall	_DelayTime_1us
  8272                           
  8273                           ;CC2500_B1.c: 148: RC4 = 0;
  8274  1674  0020               	movlb	0	; select bank0
  8275  1675  120E               	bcf	14,4	;volatile
  8276                           
  8277                           ;CC2500_B1.c: 149: SPI0Buffer = 0x30;
  8278  1676  3030               	movlw	48
  8279  1677  00F8               	movwf	??_CC2500_PowerRST
  8280  1678  0878               	movf	??_CC2500_PowerRST,w
  8281  1679  00EB               	movwf	_SPI0Buffer
  8282                           
  8283                           ;CC2500_B1.c: 150: while (RC2 == 1 && RF1.Timeout == 0) {
  8284  167A  2E7E               	goto	l10625
  8285  167B                     l10623:	
  8286                           
  8287                           ;CC2500_B1.c: 151: RF_Timeout_Counter();
  8288  167B  319E  26E7  3196   	fcall	_RF_Timeout_Counter
  8289  167E                     l10625:	
  8290  167E  0020               	movlb	0	; select bank0
  8291  167F  1D0E               	btfss	14,2	;volatile
  8292  1680  2E84               	goto	l10629
  8293  1681  0021               	movlb	1	; select bank1
  8294  1682  1F31               	btfss	(_RF1^(0+128)+1),6
  8295  1683  2E7B               	goto	l10623
  8296  1684                     l10629:	
  8297                           
  8298                           ;CC2500_B1.c: 152: };
  8299                           ;CC2500_B1.c: 153: setRF_TimeoutCleared();
  8300  1684  319C  24AC  3196   	fcall	_setRF_TimeoutCleared
  8301                           
  8302                           ;CC2500_B1.c: 154: CC2500_WriteByte();
  8303  1687  319E  26BE  3196   	fcall	_CC2500_WriteByte
  8304                           
  8305                           ;CC2500_B1.c: 155: while (RC2 == 1 && RF1.Timeout == 0) {
  8306  168A  2E8E               	goto	l10635
  8307  168B                     l10633:	
  8308                           
  8309                           ;CC2500_B1.c: 156: RF_Timeout_Counter();
  8310  168B  319E  26E7  3196   	fcall	_RF_Timeout_Counter
  8311  168E                     l10635:	
  8312  168E  0020               	movlb	0	; select bank0
  8313  168F  1D0E               	btfss	14,2	;volatile
  8314  1690  2E94               	goto	l10639
  8315  1691  0021               	movlb	1	; select bank1
  8316  1692  1F31               	btfss	(_RF1^(0+128)+1),6
  8317  1693  2E8B               	goto	l10633
  8318  1694                     l10639:	
  8319                           
  8320                           ;CC2500_B1.c: 157: };
  8321                           ;CC2500_B1.c: 158: setRF_TimeoutCleared();
  8322  1694  319C  24AC         	fcall	_setRF_TimeoutCleared
  8323                           
  8324                           ;CC2500_B1.c: 159: RC0 = 0;
  8325  1696  0020               	movlb	0	; select bank0
  8326  1697  100E               	bcf	14,0	;volatile
  8327                           
  8328                           ;CC2500_B1.c: 160: RC4 = 1;
  8329  1698  160E               	bsf	14,4	;volatile
  8330  1699  0008               	return
  8331  169A                     __end_of_CC2500_PowerRST:	
  8332                           
  8333                           	psect	text38
  8334  133A                     __ptext38:	
  8335 ;; *************** function _CC2500_InitSetREG *****************
  8336 ;; Defined at:
  8337 ;;		line 166 in file "../src/CC2500_B1.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;		None
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  loop_c          1    2[BANK0 ] unsigned char 
  8342 ;;  temp2           1    1[BANK0 ] unsigned char 
  8343 ;;  temp1           1    0[BANK0 ] unsigned char 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;		None               void
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;Total ram usage:        4 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    5
  8360 ;; This function calls:
  8361 ;;		_CC2500_WriteREG
  8362 ;; This function is called by:
  8363 ;;		_CC2500_PowerOnInitial
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function _CC2500_InitSetREG
  8369  133A                     _CC2500_InitSetREG:	
  8370                           
  8371                           ;CC2500_B1.c: 167: unsigned char loop_c;
  8372                           ;CC2500_B1.c: 168: unsigned char temp1, temp2;
  8373                           ;CC2500_B1.c: 170: for (loop_c = 0; loop_c < 47; loop_c++) {
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8377  133A  0020               	movlb	0	; select bank0
  8378  133B  01A2               	clrf	CC2500_InitSetREG@loop_c
  8379  133C                     L2:	
  8380  133C  302F               	movlw	47
  8381  133D  0222               	subwf	CC2500_InitSetREG@loop_c,w
  8382  133E  1803               	btfsc	3,0
  8383  133F  0008               	return
  8384                           
  8385                           ;CC2500_B1.c: 171: temp1 = CC2500_registers_address[loop_c];
  8386  1340  0822               	movf	CC2500_InitSetREG@loop_c,w
  8387  1341  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  8388  1342  0084               	movwf	4
  8389  1343  3090               	movlw	high (_CC2500_registers_address| (0+32768))
  8390  1344  1803               	skipnc
  8391  1345  3E01               	addlw	1
  8392  1346  0085               	movwf	5
  8393  1347  0800               	movf	0,w	;code access
  8394  1348  00F7               	movwf	??_CC2500_InitSetREG
  8395  1349  0877               	movf	??_CC2500_InitSetREG,w
  8396  134A  00A0               	movwf	CC2500_InitSetREG@temp1
  8397                           
  8398                           ;CC2500_B1.c: 172: temp2 = CC2500_rfSettings[loop_c];
  8399  134B  0822               	movf	CC2500_InitSetREG@loop_c,w
  8400  134C  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  8401  134D  0084               	movwf	4
  8402  134E  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
  8403  134F  1803               	skipnc
  8404  1350  3E01               	addlw	1
  8405  1351  0085               	movwf	5
  8406  1352  0800               	movf	0,w	;code access
  8407  1353  00F7               	movwf	??_CC2500_InitSetREG
  8408  1354  0877               	movf	??_CC2500_InitSetREG,w
  8409  1355  00A1               	movwf	CC2500_InitSetREG@temp2
  8410                           
  8411                           ;CC2500_B1.c: 174: CC2500_WriteREG(temp1, temp2);
  8412  1356  0821               	movf	CC2500_InitSetREG@temp2,w
  8413  1357  00F7               	movwf	??_CC2500_InitSetREG
  8414  1358  0877               	movf	??_CC2500_InitSetREG,w
  8415  1359  00F4               	movwf	CC2500_WriteREG@value
  8416  135A  0820               	movf	CC2500_InitSetREG@temp1,w
  8417  135B  3191  21B4  3193   	fcall	_CC2500_WriteREG
  8418  135E  3001               	movlw	1
  8419  135F  00F7               	movwf	??_CC2500_InitSetREG
  8420  1360  0877               	movf	??_CC2500_InitSetREG,w
  8421  1361  0020               	movlb	0	; select bank0
  8422  1362  07A2               	addwf	CC2500_InitSetREG@loop_c,f
  8423  1363  2B3C               	goto	L2
  8424  1364                     __end_of_CC2500_InitSetREG:	
  8425                           
  8426                           	psect	text39
  8427  1135                     __ptext39:	
  8428 ;; *************** function _CC2500_InitPATable *****************
  8429 ;; Defined at:
  8430 ;;		line 181 in file "../src/CC2500_B1.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  loop_d          1    1[BANK0 ] unsigned char 
  8435 ;;  temp            1    0[BANK0 ] unsigned char 
  8436 ;; Return value:  Size  Location     Type
  8437 ;;		None               void
  8438 ;; Registers used:
  8439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;Total ram usage:        3 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    5
  8452 ;; This function calls:
  8453 ;;		_CC2500_WriteREG
  8454 ;; This function is called by:
  8455 ;;		_CC2500_PowerOnInitial
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function _CC2500_InitPATable
  8461  1135                     _CC2500_InitPATable:	
  8462                           
  8463                           ;CC2500_B1.c: 182: unsigned char loop_d;
  8464                           ;CC2500_B1.c: 183: unsigned char temp;
  8465                           ;CC2500_B1.c: 185: for (loop_d = 0; loop_d < 8; loop_d++) {
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8469  1135  0020               	movlb	0	; select bank0
  8470  1136  01A1               	clrf	CC2500_InitPATable@loop_d
  8471  1137                     L3:	
  8472  1137  3008               	movlw	8
  8473  1138  0221               	subwf	CC2500_InitPATable@loop_d,w
  8474  1139  1803               	btfsc	3,0
  8475  113A  0008               	return
  8476                           
  8477                           ;CC2500_B1.c: 186: temp = CC2500_patable_vaule[loop_d];
  8478  113B  0821               	movf	CC2500_InitPATable@loop_d,w
  8479  113C  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  8480  113D  0084               	movwf	4
  8481  113E  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
  8482  113F  1803               	skipnc
  8483  1140  3E01               	addlw	1
  8484  1141  0085               	movwf	5
  8485  1142  0800               	movf	0,w	;code access
  8486  1143  00F7               	movwf	??_CC2500_InitPATable
  8487  1144  0877               	movf	??_CC2500_InitPATable,w
  8488  1145  00A0               	movwf	CC2500_InitPATable@temp
  8489                           
  8490                           ;CC2500_B1.c: 187: CC2500_WriteREG(0x3E, temp);
  8491  1146  0820               	movf	CC2500_InitPATable@temp,w
  8492  1147  00F7               	movwf	??_CC2500_InitPATable
  8493  1148  0877               	movf	??_CC2500_InitPATable,w
  8494  1149  00F4               	movwf	CC2500_WriteREG@value
  8495  114A  303E               	movlw	62
  8496  114B  3191  21B4  3191   	fcall	_CC2500_WriteREG
  8497  114E  3001               	movlw	1
  8498  114F  00F7               	movwf	??_CC2500_InitPATable
  8499  1150  0877               	movf	??_CC2500_InitPATable,w
  8500  1151  0020               	movlb	0	; select bank0
  8501  1152  07A1               	addwf	CC2500_InitPATable@loop_d,f
  8502  1153  2937               	goto	L3
  8503  1154                     __end_of_CC2500_InitPATable:	
  8504                           
  8505                           	psect	text40
  8506  11B4                     __ptext40:	
  8507 ;; *************** function _CC2500_WriteREG *****************
  8508 ;; Defined at:
  8509 ;;		line 258 in file "../src/CC2500_B1.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  w_addr          1    wreg     unsigned char 
  8512 ;;  value           1    4[COMMON] unsigned char 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  w_addr          1    6[COMMON] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;		None               void
  8517 ;; Registers used:
  8518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;Total ram usage:        3 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    4
  8531 ;; This function calls:
  8532 ;;		_CC2500_WriteByte
  8533 ;;		_RF_Timeout_Counter
  8534 ;;		_setRF_TimeoutCleared
  8535 ;; This function is called by:
  8536 ;;		_CC2500_InitSetREG
  8537 ;;		_CC2500_InitPATable
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           
  8542                           ;psect for function _CC2500_WriteREG
  8543  11B4                     _CC2500_WriteREG:	
  8544                           
  8545                           ;incstack = 0
  8546                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8547                           ;CC2500_WriteREG@w_addr stored from wreg
  8548  11B4  00F6               	movwf	CC2500_WriteREG@w_addr
  8549                           
  8550                           ;CC2500_B1.c: 259: RC4 = 0;
  8551  11B5  0020               	movlb	0	; select bank0
  8552  11B6  120E               	bcf	14,4	;volatile
  8553                           
  8554                           ;CC2500_B1.c: 260: SPI0Buffer = w_addr;
  8555  11B7  0876               	movf	CC2500_WriteREG@w_addr,w
  8556  11B8  00F5               	movwf	??_CC2500_WriteREG
  8557  11B9  0875               	movf	??_CC2500_WriteREG,w
  8558  11BA  00EB               	movwf	_SPI0Buffer
  8559                           
  8560                           ;CC2500_B1.c: 261: while (RC2 == 1 && RF1.Timeout == 0) {
  8561  11BB  29BF               	goto	l10493
  8562  11BC                     l10491:	
  8563                           
  8564                           ;CC2500_B1.c: 262: RF_Timeout_Counter();
  8565  11BC  319E  26E7  3191   	fcall	_RF_Timeout_Counter
  8566  11BF                     l10493:	
  8567  11BF  0020               	movlb	0	; select bank0
  8568  11C0  1D0E               	btfss	14,2	;volatile
  8569  11C1  29C5               	goto	l10497
  8570  11C2  0021               	movlb	1	; select bank1
  8571  11C3  1F31               	btfss	(_RF1^(0+128)+1),6
  8572  11C4  29BC               	goto	l10491
  8573  11C5                     l10497:	
  8574                           
  8575                           ;CC2500_B1.c: 263: };
  8576                           ;CC2500_B1.c: 264: setRF_TimeoutCleared();
  8577  11C5  319C  24AC  3191   	fcall	_setRF_TimeoutCleared
  8578                           
  8579                           ;CC2500_B1.c: 266: CC2500_WriteByte();
  8580  11C8  319E  26BE  3191   	fcall	_CC2500_WriteByte
  8581                           
  8582                           ;CC2500_B1.c: 267: SPI0Buffer = value;
  8583  11CB  0874               	movf	CC2500_WriteREG@value,w
  8584  11CC  00F5               	movwf	??_CC2500_WriteREG
  8585  11CD  0875               	movf	??_CC2500_WriteREG,w
  8586  11CE  0020               	movlb	0	; select bank0
  8587  11CF  00EB               	movwf	_SPI0Buffer
  8588                           
  8589                           ;CC2500_B1.c: 268: CC2500_WriteByte();
  8590  11D0  319E  26BE         	fcall	_CC2500_WriteByte
  8591                           
  8592                           ;CC2500_B1.c: 269: RC4 = 1;
  8593  11D2  0020               	movlb	0	; select bank0
  8594  11D3  160E               	bsf	14,4	;volatile
  8595  11D4  0008               	return
  8596  11D5                     __end_of_CC2500_WriteREG:	
  8597                           
  8598                           	psect	text41
  8599  1D19                     __ptext41:	
  8600 ;; *************** function _CC2500_FrequencyCabr *****************
  8601 ;; Defined at:
  8602 ;;		line 208 in file "../src/CC2500_B1.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;		None               void
  8609 ;; Registers used:
  8610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;Total ram usage:        0 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    5
  8623 ;; This function calls:
  8624 ;;		_CC2500_WriteCommand
  8625 ;;		_DelayTime_1us
  8626 ;; This function is called by:
  8627 ;;		_CC2500_PowerOnInitial
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function _CC2500_FrequencyCabr
  8633  1D19                     _CC2500_FrequencyCabr:	
  8634                           
  8635                           ;CC2500_B1.c: 209: CC2500_WriteCommand(0x33);
  8636                           
  8637                           ;incstack = 0
  8638                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8639  1D19  3033               	movlw	51
  8640  1D1A  319F  2799  319D   	fcall	_CC2500_WriteCommand
  8641                           
  8642                           ;CC2500_B1.c: 210: DelayTime_1us(1000);
  8643  1D1D  30E8               	movlw	232
  8644  1D1E  00F2               	movwf	DelayTime_1us@count
  8645  1D1F  3003               	movlw	3
  8646  1D20  00F3               	movwf	DelayTime_1us@count+1
  8647  1D21  3192  22C4         	fcall	_DelayTime_1us
  8648  1D23  0008               	return
  8649  1D24                     __end_of_CC2500_FrequencyCabr:	
  8650                           
  8651                           	psect	text42
  8652  12C4                     __ptext42:	
  8653 ;; *************** function _DelayTime_1us *****************
  8654 ;; Defined at:
  8655 ;;		line 327 in file "../src/CC2500_B1.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  count           2    2[COMMON] int 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  j               2    6[COMMON] unsigned int 
  8660 ;;  i               2    4[COMMON] unsigned int 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;		None               void
  8663 ;; Registers used:
  8664 ;;		wreg, status,2
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;Total ram usage:        6 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    3
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_CC2500_PowerRST
  8681 ;;		_CC2500_FrequencyCabr
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function _DelayTime_1us
  8687  12C4                     _DelayTime_1us:	
  8688                           
  8689                           ;CC2500_B1.c: 328: unsigned int i, j;
  8690                           ;CC2500_B1.c: 329: for (i = 1; i < count; i++)
  8691                           
  8692                           ;incstack = 0
  8693                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  8694  12C4  3001               	movlw	1
  8695  12C5  00F4               	movwf	DelayTime_1us@i
  8696  12C6  3000               	movlw	0
  8697  12C7  00F5               	movwf	DelayTime_1us@i+1
  8698  12C8                     l387:	
  8699  12C8  0873               	movf	DelayTime_1us@count+1,w
  8700  12C9  0275               	subwf	DelayTime_1us@i+1,w
  8701  12CA  1D03               	skipz
  8702  12CB  2ACE               	goto	u6175
  8703  12CC  0872               	movf	DelayTime_1us@count,w
  8704  12CD  0274               	subwf	DelayTime_1us@i,w
  8705  12CE                     u6175:	
  8706  12CE  1803               	btfsc	3,0
  8707  12CF  0008               	return
  8708                           
  8709                           ;CC2500_B1.c: 330: for (j = 0; j <= 1; j++);
  8710  12D0  01F6               	clrf	DelayTime_1us@j
  8711  12D1  01F7               	clrf	DelayTime_1us@j+1
  8712  12D2  3000               	movlw	0
  8713  12D3  0277               	subwf	DelayTime_1us@j+1,w
  8714  12D4  3002               	movlw	2
  8715  12D5  1903               	skipnz
  8716  12D6  0276               	subwf	DelayTime_1us@j,w
  8717  12D7  1803               	btfsc	3,0
  8718  12D8  2AE4               	goto	l6779
  8719  12D9                     l6777:	
  8720  12D9  3001               	movlw	1
  8721  12DA  07F6               	addwf	DelayTime_1us@j,f
  8722  12DB  3000               	movlw	0
  8723  12DC  3DF7               	addwfc	DelayTime_1us@j+1,f
  8724  12DD  3000               	movlw	0
  8725  12DE  0277               	subwf	DelayTime_1us@j+1,w
  8726  12DF  3002               	movlw	2
  8727  12E0  1903               	skipnz
  8728  12E1  0276               	subwf	DelayTime_1us@j,w
  8729  12E2  1C03               	skipc
  8730  12E3  2AD9               	goto	l6777
  8731  12E4                     l6779:	
  8732  12E4  3001               	movlw	1
  8733  12E5  07F4               	addwf	DelayTime_1us@i,f
  8734  12E6  3000               	movlw	0
  8735  12E7  3DF5               	addwfc	DelayTime_1us@i+1,f
  8736  12E8  2AC8               	goto	l387
  8737  12E9                     __end_of_DelayTime_1us:	
  8738                           
  8739                           	psect	text43
  8740  1CB4                     __ptext43:	
  8741 ;; *************** function _CC2500_ClearTXFIFO *****************
  8742 ;; Defined at:
  8743 ;;		line 194 in file "../src/CC2500_B1.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;		None               void
  8750 ;; Registers used:
  8751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    5
  8764 ;; This function calls:
  8765 ;;		_CC2500_WriteCommand
  8766 ;; This function is called by:
  8767 ;;		_CC2500_PowerOnInitial
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function _CC2500_ClearTXFIFO
  8773  1CB4                     _CC2500_ClearTXFIFO:	
  8774                           
  8775                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3B);
  8776                           
  8777                           ;incstack = 0
  8778                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8779  1CB4  303B               	movlw	59
  8780  1CB5  319F  2799         	fcall	_CC2500_WriteCommand
  8781  1CB7  0008               	return
  8782  1CB8                     __end_of_CC2500_ClearTXFIFO:	
  8783                           
  8784                           	psect	text44
  8785  1CB0                     __ptext44:	
  8786 ;; *************** function _CC2500_ClearRXFIFO *****************
  8787 ;; Defined at:
  8788 ;;		line 201 in file "../src/CC2500_B1.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;		None               void
  8795 ;; Registers used:
  8796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;Total ram usage:        0 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    5
  8809 ;; This function calls:
  8810 ;;		_CC2500_WriteCommand
  8811 ;; This function is called by:
  8812 ;;		_CC2500_PowerOnInitial
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           
  8817                           ;psect for function _CC2500_ClearRXFIFO
  8818  1CB0                     _CC2500_ClearRXFIFO:	
  8819                           
  8820                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x3A);
  8821                           
  8822                           ;incstack = 0
  8823                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8824  1CB0  303A               	movlw	58
  8825  1CB1  319F  2799         	fcall	_CC2500_WriteCommand
  8826  1CB3  0008               	return
  8827  1CB4                     __end_of_CC2500_ClearRXFIFO:	
  8828                           
  8829                           	psect	text45
  8830  1F99                     __ptext45:	
  8831 ;; *************** function _CC2500_WriteCommand *****************
  8832 ;; Defined at:
  8833 ;;		line 292 in file "../src/CC2500_B1.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  command         1    wreg     unsigned char 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  command         1    5[COMMON] unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;		None               void
  8840 ;; Registers used:
  8841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        2 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    4
  8854 ;; This function calls:
  8855 ;;		_CC2500_WriteByte
  8856 ;;		_RF_Timeout_Counter
  8857 ;;		_setRF_TimeoutCleared
  8858 ;; This function is called by:
  8859 ;;		_CC2500_TxData
  8860 ;;		_CC2500_RxData
  8861 ;;		_CC2500_ClearTXFIFO
  8862 ;;		_CC2500_ClearRXFIFO
  8863 ;;		_CC2500_FrequencyCabr
  8864 ;;		_CC2500_SIDLEMode
  8865 ;;		_setRF_Main
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           
  8870                           ;psect for function _CC2500_WriteCommand
  8871  1F99                     _CC2500_WriteCommand:	
  8872                           
  8873                           ;incstack = 0
  8874                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8875                           ;CC2500_WriteCommand@command stored from wreg
  8876  1F99  00F5               	movwf	CC2500_WriteCommand@command
  8877                           
  8878                           ;CC2500_B1.c: 293: RC4 = 0;
  8879  1F9A  0020               	movlb	0	; select bank0
  8880  1F9B  120E               	bcf	14,4	;volatile
  8881                           
  8882                           ;CC2500_B1.c: 294: SPI0Buffer = command;
  8883  1F9C  0875               	movf	CC2500_WriteCommand@command,w
  8884  1F9D  00F4               	movwf	??_CC2500_WriteCommand
  8885  1F9E  0874               	movf	??_CC2500_WriteCommand,w
  8886  1F9F  00EB               	movwf	_SPI0Buffer
  8887                           
  8888                           ;CC2500_B1.c: 296: while (RC2 == 1 && RF1.Timeout == 0) {
  8889  1FA0  2FA4               	goto	l10477
  8890  1FA1                     l10475:	
  8891                           
  8892                           ;CC2500_B1.c: 297: RF_Timeout_Counter();
  8893  1FA1  319E  26E7  319F   	fcall	_RF_Timeout_Counter
  8894  1FA4                     l10477:	
  8895  1FA4  0020               	movlb	0	; select bank0
  8896  1FA5  1D0E               	btfss	14,2	;volatile
  8897  1FA6  2FAA               	goto	l10481
  8898  1FA7  0021               	movlb	1	; select bank1
  8899  1FA8  1F31               	btfss	(_RF1^(0+128)+1),6
  8900  1FA9  2FA1               	goto	l10475
  8901  1FAA                     l10481:	
  8902                           
  8903                           ;CC2500_B1.c: 298: };
  8904                           ;CC2500_B1.c: 299: setRF_TimeoutCleared();
  8905  1FAA  319C  24AC  319F   	fcall	_setRF_TimeoutCleared
  8906                           
  8907                           ;CC2500_B1.c: 301: CC2500_WriteByte();
  8908  1FAD  319E  26BE         	fcall	_CC2500_WriteByte
  8909                           
  8910                           ;CC2500_B1.c: 302: RC4 = 1;
  8911  1FAF  0020               	movlb	0	; select bank0
  8912  1FB0  160E               	bsf	14,4	;volatile
  8913  1FB1  0008               	return
  8914  1FB2                     __end_of_CC2500_WriteCommand:	
  8915                           
  8916                           	psect	text46
  8917  1CAC                     __ptext46:	
  8918 ;; *************** function _setRF_TimeoutCleared *****************
  8919 ;; Defined at:
  8920 ;;		line 150 in file "../src/RF_Control_B1.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;		None               void
  8927 ;; Registers used:
  8928 ;;		status,2
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;Total ram usage:        0 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    3
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_CC2500_TxData
  8945 ;;		_CC2500_RxData
  8946 ;;		_CC2500_PowerRST
  8947 ;;		_CC2500_WriteREG
  8948 ;;		_CC2500_WriteCommand
  8949 ;;		_CC2500_ReadStatus
  8950 ;;		_CC2500_ReadREG
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _setRF_TimeoutCleared
  8956  1CAC                     _setRF_TimeoutCleared:	
  8957                           
  8958                           ;RF_Control_B1.c: 151: RF1.TimeoutCount = 0;
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in _setRF_TimeoutCleared: [status,2]
  8962  1CAC  0021               	movlb	1	; select bank1
  8963  1CAD  01BD               	clrf	(_RF1^(0+128)+13)
  8964  1CAE  01BE               	clrf	((_RF1+1)^(0+128)+13)
  8965  1CAF  0008               	return
  8966  1CB0                     __end_of_setRF_TimeoutCleared:	
  8967                           
  8968                           	psect	text47
  8969  1EE7                     __ptext47:	
  8970 ;; *************** function _RF_Timeout_Counter *****************
  8971 ;; Defined at:
  8972 ;;		line 142 in file "../src/RF_Control_B1.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;		None               void
  8979 ;; Registers used:
  8980 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    3
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_CC2500_TxData
  8997 ;;		_CC2500_RxData
  8998 ;;		_CC2500_PowerRST
  8999 ;;		_CC2500_WriteREG
  9000 ;;		_CC2500_WriteCommand
  9001 ;;		_CC2500_ReadStatus
  9002 ;;		_CC2500_ReadREG
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           
  9007                           ;psect for function _RF_Timeout_Counter
  9008  1EE7                     _RF_Timeout_Counter:	
  9009                           
  9010                           ;RF_Control_B1.c: 143: RF1.TimeoutCount++;
  9011                           
  9012                           ;incstack = 0
  9013                           ; Regs used in _RF_Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  9014  1EE7  3001               	movlw	1
  9015  1EE8  0021               	movlb	1	; select bank1
  9016  1EE9  07BD               	addwf	(_RF1^(0+128)+13),f
  9017  1EEA  3000               	movlw	0
  9018  1EEB  3DBE               	addwfc	((_RF1+1)^(0+128)+13),f
  9019                           
  9020                           ;RF_Control_B1.c: 144: if (RF1.TimeoutCount == 25000) {
  9021  1EEC  300D               	movlw	13
  9022  1EED  3EB0               	addlw	_RF1& (0+255)
  9023  1EEE  0086               	movwf	6
  9024  1EEF  0187               	clrf	7
  9025  1EF0  3F40               	moviw [0]fsr1
  9026  1EF1  3AA8               	xorlw	168
  9027  1EF2  1D03               	skipz
  9028  1EF3  2EF6               	goto	u12005
  9029  1EF4  3F41               	moviw [1]fsr1
  9030  1EF5  3A61               	xorlw	97
  9031  1EF6                     u12005:	
  9032  1EF6  1D03               	skipz
  9033  1EF7  0008               	return
  9034                           
  9035                           ;RF_Control_B1.c: 145: RF1.TimeoutCount = 0;
  9036  1EF8  01BD               	clrf	(_RF1^(0+128)+13)
  9037  1EF9  01BE               	clrf	((_RF1+1)^(0+128)+13)
  9038                           
  9039                           ;RF_Control_B1.c: 146: RF1.Timeout = 1;
  9040  1EFA  1731               	bsf	(_RF1^(0+128)+1),6
  9041  1EFB  0008               	return
  9042  1EFC                     __end_of_RF_Timeout_Counter:	
  9043                           
  9044                           	psect	text48
  9045  1EBE                     __ptext48:	
  9046 ;; *************** function _CC2500_WriteByte *****************
  9047 ;; Defined at:
  9048 ;;		line 226 in file "../src/CC2500_B1.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  loop_a          1    3[COMMON] unsigned char 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;		None               void
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;Total ram usage:        2 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    3
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_CC2500_TxData
  9073 ;;		_CC2500_RxData
  9074 ;;		_CC2500_PowerRST
  9075 ;;		_CC2500_WriteREG
  9076 ;;		_CC2500_WriteCommand
  9077 ;;		_CC2500_ReadStatus
  9078 ;;		_CC2500_ReadREG
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _CC2500_WriteByte
  9084  1EBE                     _CC2500_WriteByte:	
  9085                           
  9086                           ;CC2500_B1.c: 227: unsigned char loop_a;
  9087                           ;CC2500_B1.c: 228: for (loop_a = 0; loop_a < 8; loop_a++) {
  9088                           
  9089                           ;incstack = 0
  9090                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  9091  1EBE  01F3               	clrf	CC2500_WriteByte@loop_a
  9092  1EBF                     L4:	
  9093  1EBF  3008               	movlw	8
  9094  1EC0  0273               	subwf	CC2500_WriteByte@loop_a,w
  9095  1EC1  1803               	btfsc	3,0
  9096  1EC2  0008               	return
  9097                           
  9098                           ;CC2500_B1.c: 229: if (SPI0Buffer & 0x80)
  9099  1EC3  0020               	movlb	0	; select bank0
  9100  1EC4  1FEB               	btfss	_SPI0Buffer,7
  9101  1EC5  2EC8               	goto	l343
  9102                           
  9103                           ;CC2500_B1.c: 230: RC0 = 1;
  9104  1EC6  140E               	bsf	14,0	;volatile
  9105  1EC7  2EC9               	goto	l344
  9106  1EC8                     l343:	
  9107                           
  9108                           ;CC2500_B1.c: 231: else
  9109                           ;CC2500_B1.c: 232: RC0 = 0;
  9110  1EC8  100E               	bcf	14,0	;volatile
  9111  1EC9                     l344:	
  9112                           
  9113                           ;CC2500_B1.c: 233: RC1 = 1;
  9114  1EC9  148E               	bsf	14,1	;volatile
  9115                           
  9116                           ;CC2500_B1.c: 234: SPI0Buffer <<= 1;
  9117  1ECA  1003               	clrc
  9118  1ECB  0DEB               	rlf	_SPI0Buffer,f
  9119                           
  9120                           ;CC2500_B1.c: 235: RC1 = 0;
  9121  1ECC  108E               	bcf	14,1	;volatile
  9122  1ECD  3001               	movlw	1
  9123  1ECE  00F2               	movwf	??_CC2500_WriteByte
  9124  1ECF  0872               	movf	??_CC2500_WriteByte,w
  9125  1ED0  07F3               	addwf	CC2500_WriteByte@loop_a,f
  9126  1ED1  2EBF               	goto	L4
  9127  1ED2                     __end_of_CC2500_WriteByte:	
  9128                           
  9129                           	psect	text49
  9130  1CA2                     __ptext49:	
  9131 ;; *************** function _RF_Initialization *****************
  9132 ;; Defined at:
  9133 ;;		line 9 in file "../src/RF_Control_B1.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;		None               void
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0, pclath, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    4
  9154 ;; This function calls:
  9155 ;;		_setRF_Initialization
  9156 ;; This function is called by:
  9157 ;;		_main
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           
  9162                           ;psect for function _RF_Initialization
  9163  1CA2                     _RF_Initialization:	
  9164                           
  9165                           ;RF_Control_B1.c: 11: setRF_Initialization();
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9169  1CA2  319D  250E         	fcall	_setRF_Initialization
  9170  1CA4  0008               	return
  9171  1CA5                     __end_of_RF_Initialization:	
  9172                           
  9173                           	psect	text50
  9174  1D0E                     __ptext50:	
  9175 ;; *************** function _setRF_Initialization *****************
  9176 ;; Defined at:
  9177 ;;		line 17 in file "../src/RF_Control_B1.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;		None               void
  9184 ;; Registers used:
  9185 ;;		wreg
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;Total ram usage:        1 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    3
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_RF_Initialization
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           
  9206                           ;psect for function _setRF_Initialization
  9207  1D0E                     _setRF_Initialization:	
  9208                           
  9209                           ;RF_Control_B1.c: 19: Tx_Length = 21;
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _setRF_Initialization: [wreg]
  9213  1D0E  3015               	movlw	21
  9214  1D0F  00F2               	movwf	??_setRF_Initialization
  9215  1D10  0872               	movf	??_setRF_Initialization,w
  9216  1D11  0020               	movlb	0	; select bank0
  9217  1D12  00ED               	movwf	_Tx_Length
  9218                           
  9219                           ;RF_Control_B1.c: 20: RF1.RunTime = 200;
  9220  1D13  30C8               	movlw	200
  9221  1D14  0021               	movlb	1	; select bank1
  9222  1D15  00B8               	movwf	(_RF1^(0+128)+8)
  9223  1D16  3000               	movlw	0
  9224  1D17  00B9               	movwf	(_RF1^(0+128)+9)
  9225  1D18  0008               	return
  9226  1D19                     __end_of_setRF_Initialization:	
  9227                           
  9228                           	psect	text51
  9229  1E98                     __ptext51:	
  9230 ;; *************** function _Mcu_Initialization *****************
  9231 ;; Defined at:
  9232 ;;		line 30 in file "../src/MCU_B1.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;		None               void
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    4
  9253 ;; This function calls:
  9254 ;;		_ADC_Set
  9255 ;;		_Fosc_Set
  9256 ;;		_IOC_Set
  9257 ;;		_IO_Set
  9258 ;;		_TMR1_Set
  9259 ;;		_WDT_Set
  9260 ;; This function is called by:
  9261 ;;		_main
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _Mcu_Initialization
  9267  1E98                     _Mcu_Initialization:	
  9268                           
  9269                           ;MCU_B1.c: 32: Fosc_Set();
  9270                           
  9271                           ;incstack = 0
  9272                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9273  1E98  319C  24A8  319E   	fcall	_Fosc_Set
  9274                           
  9275                           ;MCU_B1.c: 34: IO_Set();
  9276  1E9B  3190  20C2  319E   	fcall	_IO_Set
  9277                           
  9278                           ;MCU_B1.c: 36: ;;
  9279                           ;MCU_B1.c: 38: TMR1_Set();
  9280  1E9E  319D  2554  319E   	fcall	_TMR1_Set
  9281                           
  9282                           ;MCU_B1.c: 40: ADC_Set();
  9283  1EA1  319C  24D9  319E   	fcall	_ADC_Set
  9284                           
  9285                           ;MCU_B1.c: 42: ;;
  9286                           ;MCU_B1.c: 44: ;;
  9287                           ;MCU_B1.c: 46: IOC_Set();
  9288  1EA4  319D  2503  319E   	fcall	_IOC_Set
  9289                           
  9290                           ;MCU_B1.c: 48: ;;
  9291                           ;MCU_B1.c: 50: ;;
  9292                           ;MCU_B1.c: 52: WDT_Set();
  9293  1EA7  3187  27F6         	fcall	_WDT_Set
  9294  1EA9  0008               	return
  9295  1EAA                     __end_of_Mcu_Initialization:	
  9296                           
  9297                           	psect	text52
  9298  07F6                     __ptext52:	
  9299 ;; *************** function _WDT_Set *****************
  9300 ;; Defined at:
  9301 ;;		line 1107 in file "../src/MCU_B1.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;		None               void
  9308 ;; Registers used:
  9309 ;;		wreg
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;Total ram usage:        1 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    3
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_Mcu_Initialization
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _WDT_Set
  9331  07F6                     _WDT_Set:	
  9332                           
  9333                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  9334                           
  9335                           ;incstack = 0
  9336                           ; Regs used in _WDT_Set: [wreg]
  9337  07F6  3017               	movlw	23
  9338  07F7  0021               	movlb	1	; select bank1
  9339  07F8  0097               	movwf	23	;volatile
  9340                           
  9341                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  9342  07F9  145D               	bsf	_WDT^(0+128),0
  9343                           
  9344                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  9345  07FA  300A               	movlw	10
  9346  07FB  00F2               	movwf	??_WDT_Set
  9347  07FC  0872               	movf	??_WDT_Set,w
  9348  07FD  00DE               	movwf	(_WDT^(0+128)+1)
  9349  07FE  0008               	return
  9350  07FF                     __end_of_WDT_Set:	
  9351                           
  9352                           	psect	text53
  9353  1D54                     __ptext53:	
  9354 ;; *************** function _TMR1_Set *****************
  9355 ;; Defined at:
  9356 ;;		line 226 in file "../src/MCU_B1.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;		None               void
  9363 ;; Registers used:
  9364 ;;		wreg
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    3
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_Mcu_Initialization
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function _TMR1_Set
  9386  1D54                     _TMR1_Set:	
  9387                           
  9388                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  9389                           
  9390                           ;incstack = 0
  9391                           ; Regs used in _TMR1_Set: [wreg]
  9392  1D54  3041               	movlw	65
  9393  1D55  0020               	movlb	0	; select bank0
  9394  1D56  0098               	movwf	24	;volatile
  9395                           
  9396                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  9397  1D57  30FA               	movlw	250
  9398  1D58  0097               	movwf	23	;volatile
  9399                           
  9400                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  9401  1D59  3038               	movlw	56
  9402  1D5A  0096               	movwf	22	;volatile
  9403                           
  9404                           ;MCU_B1.c: 230: TMR1IE = 1;
  9405  1D5B  0021               	movlb	1	; select bank1
  9406  1D5C  1411               	bsf	17,0	;volatile
  9407                           
  9408                           ;MCU_B1.c: 231: PEIE = 1;
  9409  1D5D  170B               	bsf	11,6	;volatile
  9410                           
  9411                           ;MCU_B1.c: 232: GIE = 1;
  9412  1D5E  178B               	bsf	11,7	;volatile
  9413  1D5F  0008               	return
  9414  1D60                     __end_of_TMR1_Set:	
  9415                           
  9416                           	psect	text54
  9417  10C2                     __ptext54:	
  9418 ;; *************** function _IO_Set *****************
  9419 ;; Defined at:
  9420 ;;		line 60 in file "../src/MCU_B1.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg, status,2
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    3
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_Mcu_Initialization
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _IO_Set
  9450  10C2                     _IO_Set:	
  9451                           
  9452                           ;MCU_B1.c: 92: TRISA = 0b01110111;;
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _IO_Set: [wreg+status,2]
  9456  10C2  3077               	movlw	119
  9457  10C3  0021               	movlb	1	; select bank1
  9458  10C4  008C               	movwf	12	;volatile
  9459                           
  9460                           ;MCU_B1.c: 93: TRISB = 0b00000101;;
  9461  10C5  3005               	movlw	5
  9462  10C6  008D               	movwf	13	;volatile
  9463                           
  9464                           ;MCU_B1.c: 94: TRISC = 0b00001100;;
  9465  10C7  300C               	movlw	12
  9466  10C8  008E               	movwf	14	;volatile
  9467                           
  9468                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  9469  10C9  0022               	movlb	2	; select bank2
  9470  10CA  018C               	clrf	12	;volatile
  9471                           
  9472                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  9473  10CB  018D               	clrf	13	;volatile
  9474                           
  9475                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  9476  10CC  018E               	clrf	14	;volatile
  9477                           
  9478                           ;MCU_B1.c: 100: ANSELA = 0b00000010;;
  9479  10CD  3002               	movlw	2
  9480  10CE  0023               	movlb	3	; select bank3
  9481  10CF  008C               	movwf	12	;volatile
  9482                           
  9483                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  9484  10D0  018D               	clrf	13	;volatile
  9485                           
  9486                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  9487  10D1  018E               	clrf	14	;volatile
  9488                           
  9489                           ;MCU_B1.c: 104: PORTA = 0b01110111;;
  9490  10D2  3077               	movlw	119
  9491  10D3  0020               	movlb	0	; select bank0
  9492  10D4  008C               	movwf	12	;volatile
  9493                           
  9494                           ;MCU_B1.c: 105: PORTB = 0b00000101;;
  9495  10D5  3005               	movlw	5
  9496  10D6  008D               	movwf	13	;volatile
  9497                           
  9498                           ;MCU_B1.c: 106: PORTC = 0b00001100;;
  9499  10D7  300C               	movlw	12
  9500  10D8  008E               	movwf	14	;volatile
  9501                           
  9502                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  9503  10D9  0024               	movlb	4	; select bank4
  9504  10DA  018D               	clrf	13	;volatile
  9505  10DB  0008               	return
  9506  10DC                     __end_of_IO_Set:	
  9507                           
  9508                           	psect	text55
  9509  1D03                     __ptext55:	
  9510 ;; *************** function _IOC_Set *****************
  9511 ;; Defined at:
  9512 ;;		line 381 in file "../src/MCU_B1.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;		None               void
  9519 ;; Registers used:
  9520 ;;		wreg, status,2
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;Total ram usage:        0 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    3
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_Mcu_Initialization
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           
  9541                           ;psect for function _IOC_Set
  9542  1D03                     _IOC_Set:	
  9543                           
  9544                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  9545                           
  9546                           ;incstack = 0
  9547                           ; Regs used in _IOC_Set: [wreg+status,2]
  9548  1D03  3004               	movlw	4
  9549  1D04  0027               	movlb	7	; select bank7
  9550  1D05  0094               	movwf	20	;volatile
  9551                           
  9552                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  9553  1D06  3004               	movlw	4
  9554  1D07  0095               	movwf	21	;volatile
  9555                           
  9556                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  9557  1D08  0196               	clrf	22	;volatile
  9558                           
  9559                           ;MCU_B1.c: 388: IOCIE = 1;
  9560  1D09  158B               	bsf	11,3	;volatile
  9561                           
  9562                           ;MCU_B1.c: 389: IOCIF = 0;
  9563  1D0A  100B               	bcf	11,0	;volatile
  9564                           
  9565                           ;MCU_B1.c: 390: PEIE = 1;
  9566  1D0B  170B               	bsf	11,6	;volatile
  9567                           
  9568                           ;MCU_B1.c: 391: GIE = 1;
  9569  1D0C  178B               	bsf	11,7	;volatile
  9570  1D0D  0008               	return
  9571  1D0E                     __end_of_IOC_Set:	
  9572                           
  9573                           	psect	text56
  9574  1CA8                     __ptext56:	
  9575 ;; *************** function _Fosc_Set *****************
  9576 ;; Defined at:
  9577 ;;		line 56 in file "../src/MCU_B1.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;		None               void
  9584 ;; Registers used:
  9585 ;;		wreg
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;Total ram usage:        0 bytes
  9596 ;; Hardware stack levels used:    1
  9597 ;; Hardware stack levels required when called:    3
  9598 ;; This function calls:
  9599 ;;		Nothing
  9600 ;; This function is called by:
  9601 ;;		_Mcu_Initialization
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           
  9606                           ;psect for function _Fosc_Set
  9607  1CA8                     _Fosc_Set:	
  9608                           
  9609                           ;MCU_B1.c: 57: OSCCON = 0x78;
  9610                           
  9611                           ;incstack = 0
  9612                           ; Regs used in _Fosc_Set: [wreg]
  9613  1CA8  3078               	movlw	120
  9614  1CA9  0021               	movlb	1	; select bank1
  9615  1CAA  0099               	movwf	25	;volatile
  9616  1CAB  0008               	return
  9617  1CAC                     __end_of_Fosc_Set:	
  9618                           
  9619                           	psect	text57
  9620  1CD9                     __ptext57:	
  9621 ;; *************** function _ADC_Set *****************
  9622 ;; Defined at:
  9623 ;;		line 429 in file "../src/MCU_B1.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;		None
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;		None               void
  9630 ;; Registers used:
  9631 ;;		wreg
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;Total ram usage:        0 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    3
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_Mcu_Initialization
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _ADC_Set
  9653  1CD9                     _ADC_Set:	
  9654                           
  9655                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  9656                           
  9657                           ;incstack = 0
  9658                           ; Regs used in _ADC_Set: [wreg]
  9659  1CD9  30F3               	movlw	243
  9660  1CDA  0021               	movlb	1	; select bank1
  9661  1CDB  009E               	movwf	30	;volatile
  9662                           
  9663                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  9664  1CDC  30C1               	movlw	193
  9665  1CDD  0022               	movlb	2	; select bank2
  9666  1CDE  0097               	movwf	23	;volatile
  9667  1CDF  0008               	return
  9668  1CE0                     __end_of_ADC_Set:	
  9669                           
  9670                           	psect	text58
  9671  1E36                     __ptext58:	
  9672 ;; *************** function _LED_Main *****************
  9673 ;; Defined at:
  9674 ;;		line 47 in file "../src/LED_B1.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;		None
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;		None               void
  9681 ;; Registers used:
  9682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;Total ram usage:        0 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    5
  9695 ;; This function calls:
  9696 ;;		_setLED_Main
  9697 ;; This function is called by:
  9698 ;;		_main
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           
  9703                           ;psect for function _LED_Main
  9704  1E36                     _LED_Main:	
  9705                           
  9706                           ;LED_B1.c: 58: setLED_Main(1);
  9707                           
  9708                           ;incstack = 0
  9709                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9710  1E36  3001               	movlw	1
  9711  1E37  3197  276A  319E   	fcall	_setLED_Main
  9712                           
  9713                           ;LED_B1.c: 61: setLED_Main(2);
  9714  1E3A  3002               	movlw	2
  9715  1E3B  3197  276A  319E   	fcall	_setLED_Main
  9716                           
  9717                           ;LED_B1.c: 64: setLED_Main(3);
  9718  1E3E  3003               	movlw	3
  9719  1E3F  3197  276A  319E   	fcall	_setLED_Main
  9720                           
  9721                           ;LED_B1.c: 67: setLED_Main(99);
  9722  1E42  3063               	movlw	99
  9723  1E43  3197  276A         	fcall	_setLED_Main
  9724  1E45  0008               	return
  9725  1E46                     __end_of_LED_Main:	
  9726                           
  9727                           	psect	text59
  9728  176A                     __ptext59:	
  9729 ;; *************** function _setLED_Main *****************
  9730 ;; Defined at:
  9731 ;;		line 229 in file "../src/LED_B1.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  led             1    wreg     unsigned char 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  led             1    5[COMMON] unsigned char 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;		None               void
  9738 ;; Registers used:
  9739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;Total ram usage:        3 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    4
  9752 ;; This function calls:
  9753 ;;		_LedPointSelect
  9754 ;; This function is called by:
  9755 ;;		_LED_Main
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _setLED_Main
  9761  176A                     _setLED_Main:	
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9765                           ;setLED_Main@led stored from wreg
  9766  176A  00F5               	movwf	setLED_Main@led
  9767                           
  9768                           ;LED_B1.c: 230: LedPointSelect(led);
  9769  176B  0875               	movf	setLED_Main@led,w
  9770  176C  3192  225C  3197   	fcall	_LedPointSelect
  9771                           
  9772                           ;LED_B1.c: 231: if (LED->GO == 1) {
  9773  176F  087A               	movf	_LED,w
  9774  1770  0086               	movwf	6
  9775  1771  087B               	movf	_LED+1,w
  9776  1772  0087               	movwf	7
  9777  1773  1C81               	btfss	1,1
  9778  1774  0008               	return
  9779                           
  9780                           ;LED_B1.c: 232: LED->Time++;
  9781  1775  087A               	movf	_LED,w
  9782  1776  0086               	movwf	6
  9783  1777  087B               	movf	_LED+1,w
  9784  1778  0087               	movwf	7
  9785  1779  3141               	addfsr 1,1
  9786  177A  3001               	movlw	1
  9787  177B  0781               	addwf	1,f
  9788  177C  3141               	addfsr 1,1
  9789  177D  1803               	skipnc
  9790  177E  0A81               	incf	1,f
  9791                           
  9792                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  9793  177F  087A               	movf	_LED,w
  9794  1780  0086               	movwf	6
  9795  1781  087B               	movf	_LED+1,w
  9796  1782  0087               	movwf	7
  9797  1783  3141               	addfsr 1,1
  9798  1784  3F40               	moviw [0]fsr1
  9799  1785  00F3               	movwf	??_setLED_Main
  9800  1786  3F41               	moviw [1]fsr1
  9801  1787  00F4               	movwf	??_setLED_Main+1
  9802  1788  3000               	movlw	0
  9803  1789  0274               	subwf	??_setLED_Main+1,w
  9804  178A  3019               	movlw	25
  9805  178B  1903               	skipnz
  9806  178C  0273               	subwf	??_setLED_Main,w
  9807  178D  1C03               	skipc
  9808  178E  0008               	return
  9809                           
  9810                           ;LED_B1.c: 234: LED->Time = 0;
  9811  178F  087A               	movf	_LED,w
  9812  1790  0086               	movwf	6
  9813  1791  087B               	movf	_LED+1,w
  9814  1792  0087               	movwf	7
  9815  1793  3141               	addfsr 1,1
  9816  1794  3000               	movlw	0
  9817  1795  3FC0               	movwi [0]fsr1
  9818  1796  3FC1               	movwi [1]fsr1
  9819                           
  9820                           ;LED_B1.c: 237: if (led == 1) {
  9821  1797  0875               	movf	setLED_Main@led,w
  9822  1798  3A01               	xorlw	1
  9823  1799  1D03               	skipz
  9824  179A  2F9E               	goto	l1307
  9825                           
  9826                           ;LED_B1.c: 238: RC7 = RC7 == 1 ? 0 : 1;
  9827  179B  3080               	movlw	128
  9828  179C  0020               	movlb	0	; select bank0
  9829  179D  068E               	xorwf	14,f
  9830  179E                     l1307:	
  9831                           
  9832                           ;LED_B1.c: 239: }
  9833                           ;LED_B1.c: 242: if (led == 2) {
  9834  179E  0875               	movf	setLED_Main@led,w
  9835  179F  3A02               	xorlw	2
  9836  17A0  1D03               	skipz
  9837  17A1  2FA5               	goto	l1308
  9838                           
  9839                           ;LED_B1.c: 243: RA3 = RA3 == 1 ? 0 : 1;
  9840  17A2  3008               	movlw	8
  9841  17A3  0020               	movlb	0	; select bank0
  9842  17A4  068C               	xorwf	12,f
  9843  17A5                     l1308:	
  9844                           
  9845                           ;LED_B1.c: 244: }
  9846                           ;LED_B1.c: 247: if (led == 3) {
  9847  17A5  0875               	movf	setLED_Main@led,w
  9848  17A6  3A03               	xorlw	3
  9849  17A7  1D03               	skipz
  9850  17A8  2FAC               	goto	l1309
  9851                           
  9852                           ;LED_B1.c: 248: RC6 = RC6 == 1 ? 0 : 1;
  9853  17A9  3040               	movlw	64
  9854  17AA  0020               	movlb	0	; select bank0
  9855  17AB  068E               	xorwf	14,f
  9856  17AC                     l1309:	
  9857                           
  9858                           ;LED_B1.c: 249: }
  9859                           ;LED_B1.c: 252: if (led == 99) {
  9860  17AC  0875               	movf	setLED_Main@led,w
  9861  17AD  3A63               	xorlw	99
  9862  17AE  1D03               	skipz
  9863  17AF  0008               	return
  9864                           
  9865                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  9866  17B0  3020               	movlw	32
  9867  17B1  0020               	movlb	0	; select bank0
  9868  17B2  068D               	xorwf	13,f
  9869  17B3  0008               	return
  9870  17B4                     __end_of_setLED_Main:	
  9871                           
  9872                           	psect	text60
  9873  1E26                     __ptext60:	
  9874 ;; *************** function _LED_Initialization *****************
  9875 ;; Defined at:
  9876 ;;		line 31 in file "../src/LED_B1.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;		None               void
  9883 ;; Registers used:
  9884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;Total ram usage:        0 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    6
  9897 ;; This function calls:
  9898 ;;		_setLED_Initialization
  9899 ;; This function is called by:
  9900 ;;		_main
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           
  9905                           ;psect for function _LED_Initialization
  9906  1E26                     _LED_Initialization:	
  9907                           
  9908                           ;LED_B1.c: 33: setLED_Initialization(1);
  9909                           
  9910                           ;incstack = 0
  9911                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9912  1E26  3001               	movlw	1
  9913  1E27  319D  25BA  319E   	fcall	_setLED_Initialization
  9914                           
  9915                           ;LED_B1.c: 36: setLED_Initialization(2);
  9916  1E2A  3002               	movlw	2
  9917  1E2B  319D  25BA  319E   	fcall	_setLED_Initialization
  9918                           
  9919                           ;LED_B1.c: 39: setLED_Initialization(3);
  9920  1E2E  3003               	movlw	3
  9921  1E2F  319D  25BA  319E   	fcall	_setLED_Initialization
  9922                           
  9923                           ;LED_B1.c: 42: setLED_Initialization(99);
  9924  1E32  3063               	movlw	99
  9925  1E33  319D  25BA         	fcall	_setLED_Initialization
  9926  1E35  0008               	return
  9927  1E36                     __end_of_LED_Initialization:	
  9928                           
  9929                           	psect	text61
  9930  1DBA                     __ptext61:	
  9931 ;; *************** function _setLED_Initialization *****************
  9932 ;; Defined at:
  9933 ;;		line 74 in file "../src/LED_B1.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  led             1    wreg     unsigned char 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  led             1    5[COMMON] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;		None               void
  9940 ;; Registers used:
  9941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;Total ram usage:        1 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:    5
  9954 ;; This function calls:
  9955 ;;		_LedPointSelect
  9956 ;;		_setLED
  9957 ;; This function is called by:
  9958 ;;		_LED_Initialization
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           
  9963                           ;psect for function _setLED_Initialization
  9964  1DBA                     _setLED_Initialization:	
  9965                           
  9966                           ;incstack = 0
  9967                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9968                           ;setLED_Initialization@led stored from wreg
  9969  1DBA  00F5               	movwf	setLED_Initialization@led
  9970                           
  9971                           ;LED_B1.c: 75: LedPointSelect(led);
  9972  1DBB  0875               	movf	setLED_Initialization@led,w
  9973  1DBC  3192  225C  319D   	fcall	_LedPointSelect
  9974                           
  9975                           ;LED_B1.c: 76: LED->Enable = 1;
  9976  1DBF  087A               	movf	_LED,w
  9977  1DC0  0086               	movwf	6
  9978  1DC1  087B               	movf	_LED+1,w
  9979  1DC2  0087               	movwf	7
  9980  1DC3  1401               	bsf	1,0
  9981                           
  9982                           ;LED_B1.c: 77: setLED(led, 0);
  9983  1DC4  01F3               	clrf	setLED@command
  9984  1DC5  0875               	movf	setLED_Initialization@led,w
  9985  1DC6  318C  2417         	fcall	_setLED
  9986  1DC8  0008               	return
  9987  1DC9                     __end_of_setLED_Initialization:	
  9988                           
  9989                           	psect	text62
  9990  15D3                     __ptext62:	
  9991 ;; *************** function _Flash_Memory_Main *****************
  9992 ;; Defined at:
  9993 ;;		line 980 in file "../src/MCU_B1.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;		None
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  key_Status      1    0[BANK0 ] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;		None               void
 10000 ;; Registers used:
 10001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;Total ram usage:        3 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    6
 10014 ;; This function calls:
 10015 ;;		_Flash_Memory_Modify
 10016 ;;		_getAll_Sw_KeyStatus
 10017 ;;		_getMain_All_LightsStatus
 10018 ;; This function is called by:
 10019 ;;		_main
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           
 10024                           ;psect for function _Flash_Memory_Main
 10025  15D3                     _Flash_Memory_Main:	
 10026                           
 10027                           ;MCU_B1.c: 981: char key_Status = 0;
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10031  15D3  0020               	movlb	0	; select bank0
 10032  15D4  01A0               	clrf	Flash_Memory_Main@key_Status
 10033                           
 10034                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
 10035  15D5  319D  25AB  3195   	fcall	_getAll_Sw_KeyStatus
 10036  15D8  00F8               	movwf	??_Flash_Memory_Main
 10037  15D9  0878               	movf	??_Flash_Memory_Main,w
 10038  15DA  0020               	movlb	0	; select bank0
 10039  15DB  00A0               	movwf	Flash_Memory_Main@key_Status
 10040                           
 10041                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
 10042  15DC  0024               	movlb	4	; select bank4
 10043  15DD  1C44               	btfss	(_Memory^(0+512)+36),0
 10044  15DE  0008               	return
 10045                           
 10046                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
 10047  15DF  0020               	movlb	0	; select bank0
 10048  15E0  01A1               	clrf	_Flash_Memory_Main$3562
 10049  15E1  319F  273B  3195   	fcall	_getMain_All_LightsStatus
 10050  15E4  3800               	iorlw	0
 10051  15E5  1D03               	skipz
 10052  15E6  2DED               	goto	l9959
 10053  15E7  0020               	movlb	0	; select bank0
 10054  15E8  08A0               	movf	Flash_Memory_Main@key_Status,f
 10055  15E9  1D03               	skipz
 10056  15EA  2DED               	goto	l9959
 10057  15EB  01A1               	clrf	_Flash_Memory_Main$3562
 10058  15EC  0AA1               	incf	_Flash_Memory_Main$3562,f
 10059  15ED                     l9959:	
 10060  15ED  0020               	movlb	0	; select bank0
 10061  15EE  0821               	movf	_Flash_Memory_Main$3562,w
 10062  15EF  0024               	movlb	4	; select bank4
 10063  15F0  10C4               	bcf	(_Memory^(0+512)+36),1
 10064  15F1  1D03               	skipz
 10065  15F2  14C4               	bsf	(_Memory^(0+512)+36),1
 10066                           
 10067                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
 10068  15F3  1CC4               	btfss	(_Memory^(0+512)+36),1
 10069  15F4  2E0E               	goto	l1594
 10070                           
 10071                           ;MCU_B1.c: 988: Memory.Runtime = 1;
 10072  15F5  15C4               	bsf	(_Memory^(0+512)+36),3
 10073                           
 10074                           ;MCU_B1.c: 989: Memory.Time++;
 10075  15F6  3001               	movlw	1
 10076  15F7  07C2               	addwf	(_Memory^(0+512)+34),f
 10077  15F8  3000               	movlw	0
 10078  15F9  3DC3               	addwfc	((_Memory+1)^(0+512)+34),f
 10079                           
 10080                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
 10081  15FA  3022               	movlw	34
 10082  15FB  3E20               	addlw	_Memory& (0+255)
 10083  15FC  0086               	movwf	6
 10084  15FD  3002               	movlw	2	; select bank4/5
 10085  15FE  0087               	movwf	7
 10086  15FF  3F40               	moviw [0]fsr1
 10087  1600  3A0A               	xorlw	10
 10088  1601  1D03               	skipz
 10089  1602  2E05               	goto	u11235
 10090  1603  3F41               	moviw [1]fsr1
 10091  1604  3A00               	xorlw	0
 10092  1605                     u11235:	
 10093  1605  1D03               	skipz
 10094  1606  0008               	return
 10095                           
 10096                           ;MCU_B1.c: 991: Memory.Time = 0;
 10097  1607  01C2               	clrf	(_Memory^(0+512)+34)
 10098  1608  01C3               	clrf	((_Memory+1)^(0+512)+34)
 10099                           
 10100                           ;MCU_B1.c: 992: Memory.Modify = 0;
 10101  1609  1044               	bcf	(_Memory^(0+512)+36),0
 10102                           
 10103                           ;MCU_B1.c: 993: Memory.GO = 0;
 10104  160A  10C4               	bcf	(_Memory^(0+512)+36),1
 10105                           
 10106                           ;MCU_B1.c: 994: Flash_Memory_Modify();
 10107  160B  318E  261A         	fcall	_Flash_Memory_Modify
 10108                           
 10109                           ;MCU_B1.c: 995: }
 10110                           ;MCU_B1.c: 996: } else {
 10111  160D  0008               	return
 10112  160E                     l1594:	
 10113                           
 10114                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
 10115  160E  1DC4               	btfss	(_Memory^(0+512)+36),3
 10116  160F  0008               	return
 10117                           
 10118                           ;MCU_B1.c: 998: Memory.Runtime = 0;
 10119  1610  11C4               	bcf	(_Memory^(0+512)+36),3
 10120                           
 10121                           ;MCU_B1.c: 999: Memory.Time = 0;
 10122  1611  01C2               	clrf	(_Memory^(0+512)+34)
 10123  1612  01C3               	clrf	((_Memory+1)^(0+512)+34)
 10124  1613  0008               	return
 10125  1614                     __end_of_Flash_Memory_Main:	
 10126                           
 10127                           	psect	text63
 10128  1DAB                     __ptext63:	
 10129 ;; *************** function _getAll_Sw_KeyStatus *****************
 10130 ;; Defined at:
 10131 ;;		line 286 in file "../src/Switch_B1.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  status          1    3[COMMON] unsigned char 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      unsigned char 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;Total ram usage:        3 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    3
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_Flash_Memory_Main
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _getAll_Sw_KeyStatus
 10161  1DAB                     _getAll_Sw_KeyStatus:	
 10162                           
 10163                           ;Switch_B1.c: 287: char status = 0;
 10164                           
 10165                           ;incstack = 0
 10166                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
 10167  1DAB  01F3               	clrf	getAll_Sw_KeyStatus@status
 10168                           
 10169                           ;Switch_B1.c: 289: status = RA0 == 1 || RA6 == 1 || RA4 == 1 ? 1 : 0;
 10170  1DAC  01F4               	clrf	_getAll_Sw_KeyStatus$6885
 10171  1DAD  0AF4               	incf	_getAll_Sw_KeyStatus$6885,f
 10172  1DAE  0020               	movlb	0	; select bank0
 10173  1DAF  1C0C               	btfss	12,0	;volatile
 10174  1DB0  1B0C               	btfsc	12,6	;volatile
 10175  1DB1  2DB4               	goto	l9701
 10176  1DB2  1E0C               	btfss	12,4	;volatile
 10177  1DB3  01F4               	clrf	_getAll_Sw_KeyStatus$6885
 10178  1DB4                     l9701:	
 10179  1DB4  0874               	movf	_getAll_Sw_KeyStatus$6885,w
 10180  1DB5  00F2               	movwf	??_getAll_Sw_KeyStatus
 10181  1DB6  0872               	movf	??_getAll_Sw_KeyStatus,w
 10182  1DB7  00F3               	movwf	getAll_Sw_KeyStatus@status
 10183                           
 10184                           ;Switch_B1.c: 315: return status;
 10185  1DB8  0873               	movf	getAll_Sw_KeyStatus@status,w
 10186  1DB9  0008               	return
 10187  1DBA                     __end_of_getAll_Sw_KeyStatus:	
 10188                           
 10189                           	psect	text64
 10190  0E1A                     __ptext64:	
 10191 ;; *************** function _Flash_Memory_Modify *****************
 10192 ;; Defined at:
 10193 ;;		line 1057 in file "../src/MCU_B1.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  i               1    7[COMMON] unsigned char 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;		None               void
 10200 ;; Registers used:
 10201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;Total ram usage:        2 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    5
 10214 ;; This function calls:
 10215 ;;		_Flash_Memory_Erasing
 10216 ;;		_Flash_Memory_Read
 10217 ;;		_Flash_Memory_Write
 10218 ;;		_setMemory_Data
 10219 ;; This function is called by:
 10220 ;;		_Flash_Memory_Main
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           
 10225                           ;psect for function _Flash_Memory_Modify
 10226  0E1A                     _Flash_Memory_Modify:	
 10227                           
 10228                           ;MCU_B1.c: 1058: char i = 0;
 10229                           
 10230                           ;incstack = 0
 10231                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10232  0E1A  01F7               	clrf	Flash_Memory_Modify@i
 10233                           
 10234                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
 10235  0E1B  01F7               	clrf	Flash_Memory_Modify@i
 10236  0E1C  3020               	movlw	32
 10237  0E1D  0277               	subwf	Flash_Memory_Modify@i,w
 10238  0E1E  1803               	btfsc	3,0
 10239  0E1F  2E34               	goto	l9719
 10240  0E20                     l9713:	
 10241                           
 10242                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
 10243  0E20  0877               	movf	Flash_Memory_Modify@i,w
 10244  0E21  319E  26AA  318E   	fcall	_Flash_Memory_Read
 10245  0E24  00F6               	movwf	??_Flash_Memory_Modify
 10246  0E25  0877               	movf	Flash_Memory_Modify@i,w
 10247  0E26  3E20               	addlw	_Memory& (0+255)
 10248  0E27  0086               	movwf	6
 10249  0E28  3002               	movlw	2	; select bank4/5
 10250  0E29  0087               	movwf	7
 10251  0E2A  0876               	movf	??_Flash_Memory_Modify,w
 10252  0E2B  0081               	movwf	1
 10253  0E2C  3001               	movlw	1
 10254  0E2D  00F6               	movwf	??_Flash_Memory_Modify
 10255  0E2E  0876               	movf	??_Flash_Memory_Modify,w
 10256  0E2F  07F7               	addwf	Flash_Memory_Modify@i,f
 10257  0E30  3020               	movlw	32
 10258  0E31  0277               	subwf	Flash_Memory_Modify@i,w
 10259  0E32  1C03               	skipc
 10260  0E33  2E20               	goto	l9713
 10261  0E34                     l9719:	
 10262                           
 10263                           ;MCU_B1.c: 1061: }
 10264                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
 10265  0E34  0020               	movlb	0	; select bank0
 10266  0E35  086E               	movf	_product,w
 10267  0E36  0086               	movwf	6
 10268  0E37  3002               	movlw	2	; select bank4/5
 10269  0E38  0087               	movwf	7
 10270  0E39  3002               	movlw	2	; select bank4/5
 10271  0E3A  3F4B               	moviw [11]fsr1
 10272  0E3B  00F2               	movwf	setMemory_Data@data
 10273  0E3C  3006               	movlw	6
 10274  0E3D  319C  24F8  318E   	fcall	_setMemory_Data
 10275                           
 10276                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
 10277  0E40  0020               	movlb	0	; select bank0
 10278  0E41  086E               	movf	_product,w
 10279  0E42  0086               	movwf	6
 10280  0E43  3002               	movlw	2	; select bank4/5
 10281  0E44  0087               	movwf	7
 10282  0E45  3002               	movlw	2	; select bank4/5
 10283  0E46  3F4C               	moviw [12]fsr1
 10284  0E47  00F2               	movwf	setMemory_Data@data
 10285  0E48  3000               	movlw	0
 10286  0E49  319C  24F8  318E   	fcall	_setMemory_Data
 10287                           
 10288                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
 10289  0E4C  0020               	movlb	0	; select bank0
 10290  0E4D  086E               	movf	_product,w
 10291  0E4E  0086               	movwf	6
 10292  0E4F  3002               	movlw	2	; select bank4/5
 10293  0E50  0087               	movwf	7
 10294  0E51  3002               	movlw	2	; select bank4/5
 10295  0E52  3F4D               	moviw [13]fsr1
 10296  0E53  00F2               	movwf	setMemory_Data@data
 10297  0E54  3001               	movlw	1
 10298  0E55  319C  24F8  318E   	fcall	_setMemory_Data
 10299                           
 10300                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
 10301  0E58  0020               	movlb	0	; select bank0
 10302  0E59  086E               	movf	_product,w
 10303  0E5A  0086               	movwf	6
 10304  0E5B  3002               	movlw	2	; select bank4/5
 10305  0E5C  0087               	movwf	7
 10306  0E5D  3002               	movlw	2	; select bank4/5
 10307  0E5E  3F4E               	moviw [14]fsr1
 10308  0E5F  00F2               	movwf	setMemory_Data@data
 10309  0E60  3002               	movlw	2
 10310  0E61  319C  24F8  318E   	fcall	_setMemory_Data
 10311                           
 10312                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
 10313  0E64  0020               	movlb	0	; select bank0
 10314  0E65  086E               	movf	_product,w
 10315  0E66  0086               	movwf	6
 10316  0E67  3002               	movlw	2	; select bank4/5
 10317  0E68  0087               	movwf	7
 10318  0E69  3002               	movlw	2	; select bank4/5
 10319  0E6A  3F55               	moviw [21]fsr1
 10320  0E6B  00F2               	movwf	setMemory_Data@data
 10321  0E6C  3003               	movlw	3
 10322  0E6D  319C  24F8  318E   	fcall	_setMemory_Data
 10323                           
 10324                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
 10325  0E70  0020               	movlb	0	; select bank0
 10326  0E71  086E               	movf	_product,w
 10327  0E72  0086               	movwf	6
 10328  0E73  3002               	movlw	2	; select bank4/5
 10329  0E74  0087               	movwf	7
 10330  0E75  3002               	movlw	2	; select bank4/5
 10331  0E76  3F56               	moviw [22]fsr1
 10332  0E77  00F2               	movwf	setMemory_Data@data
 10333  0E78  3004               	movlw	4
 10334  0E79  319C  24F8  318E   	fcall	_setMemory_Data
 10335                           
 10336                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
 10337  0E7C  0020               	movlb	0	; select bank0
 10338  0E7D  086E               	movf	_product,w
 10339  0E7E  0086               	movwf	6
 10340  0E7F  3002               	movlw	2	; select bank4/5
 10341  0E80  0087               	movwf	7
 10342  0E81  3002               	movlw	2	; select bank4/5
 10343  0E82  3F57               	moviw [23]fsr1
 10344  0E83  00F2               	movwf	setMemory_Data@data
 10345  0E84  3005               	movlw	5
 10346  0E85  319C  24F8  318E   	fcall	_setMemory_Data
 10347                           
 10348                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
 10349  0E88  0021               	movlb	1	; select bank1
 10350  0E89  1EC9               	btfss	(_myMain^(0+128)+10),5
 10351  0E8A  2E94               	goto	l9727
 10352                           
 10353                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
 10354  0E8B  12C9               	bcf	(_myMain^(0+128)+10),5
 10355                           
 10356                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
 10357  0E8C  30AA               	movlw	170
 10358  0E8D  00F6               	movwf	??_Flash_Memory_Modify
 10359  0E8E  0876               	movf	??_Flash_Memory_Modify,w
 10360  0E8F  00F2               	movwf	setMemory_Data@data
 10361  0E90  301E               	movlw	30
 10362  0E91  319C  24F8  318E   	fcall	_setMemory_Data
 10363  0E94                     l9727:	
 10364                           
 10365                           ;MCU_B1.c: 1073: }
 10366                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
 10367  0E94  0024               	movlb	4	; select bank4
 10368  0E95  1D44               	btfss	(_Memory^(0+512)+36),2
 10369  0E96  2E9B               	goto	l1618
 10370                           
 10371                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
 10372  0E97  1144               	bcf	(_Memory^(0+512)+36),2
 10373                           
 10374                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
 10375  0E98  0021               	movlb	1	; select bank1
 10376  0E99  11BF               	bcf	_myMain^(0+128),3
 10377                           
 10378                           ;MCU_B1.c: 1078: myMain.First = 0;
 10379  0E9A  12BF               	bcf	_myMain^(0+128),5
 10380  0E9B                     l1618:	
 10381                           
 10382                           ;MCU_B1.c: 1080: }
 10383                           ;MCU_B1.c: 1081: GIE = 0;
 10384  0E9B  138B               	bcf	11,7	;volatile
 10385                           
 10386                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
 10387  0E9C  319D  2548  318E   	fcall	_Flash_Memory_Erasing
 10388                           
 10389                           ;MCU_B1.c: 1083: Flash_Memory_Write();
 10390  0E9F  3193  2310         	fcall	_Flash_Memory_Write
 10391                           
 10392                           ;MCU_B1.c: 1084: GIE = 1;
 10393  0EA1  178B               	bsf	11,7	;volatile
 10394  0EA2  0008               	return
 10395  0EA3                     __end_of_Flash_Memory_Modify:	
 10396                           
 10397                           	psect	text65
 10398  1D48                     __ptext65:	
 10399 ;; *************** function _Flash_Memory_Erasing *****************
 10400 ;; Defined at:
 10401 ;;		line 1046 in file "../src/MCU_B1.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;		None
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;		None
 10406 ;; Return value:  Size  Location     Type
 10407 ;;		None               void
 10408 ;; Registers used:
 10409 ;;		wreg, status,2, status,0, pclath, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;Total ram usage:        0 bytes
 10420 ;; Hardware stack levels used:    1
 10421 ;; Hardware stack levels required when called:    4
 10422 ;; This function calls:
 10423 ;;		_Flash_Memory_Unlock
 10424 ;; This function is called by:
 10425 ;;		_Flash_Memory_Modify
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           
 10430                           ;psect for function _Flash_Memory_Erasing
 10431  1D48                     _Flash_Memory_Erasing:	
 10432                           
 10433                           ;MCU_B1.c: 1047: CFGS = 0;
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 10437  1D48  0023               	movlb	3	; select bank3
 10438  1D49  1315               	bcf	21,6	;volatile
 10439                           
 10440                           ;MCU_B1.c: 1048: PMADRH = 0x30;
 10441  1D4A  3030               	movlw	48
 10442  1D4B  0092               	movwf	18	;volatile
 10443                           
 10444                           ;MCU_B1.c: 1049: PMADRL = 0x00;
 10445  1D4C  0191               	clrf	17	;volatile
 10446                           
 10447                           ;MCU_B1.c: 1050: FREE = 1;
 10448  1D4D  1615               	bsf	21,4	;volatile
 10449                           
 10450                           ;MCU_B1.c: 1051: WREN = 1;
 10451  1D4E  1515               	bsf	21,2	;volatile
 10452                           
 10453                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
 10454  1D4F  319C  24EF         	fcall	_Flash_Memory_Unlock
 10455                           
 10456                           ;MCU_B1.c: 1053: WREN = 0;
 10457  1D51  0023               	movlb	3	; select bank3
 10458  1D52  1115               	bcf	21,2	;volatile
 10459  1D53  0008               	return
 10460  1D54                     __end_of_Flash_Memory_Erasing:	
 10461                           
 10462                           	psect	text66
 10463  03A8                     __ptext66:	
 10464 ;; *************** function _Flash_Memory_Initialization *****************
 10465 ;; Defined at:
 10466 ;;		line 934 in file "../src/MCU_B1.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  value           1    7[COMMON] unsigned char 
 10471 ;; Return value:  Size  Location     Type
 10472 ;;		None               void
 10473 ;; Registers used:
 10474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;Total ram usage:        2 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    5
 10487 ;; This function calls:
 10488 ;;		_Flash_Memory_Read
 10489 ;;		_Flash_Memory_Write
 10490 ;;		_setMemory_Data
 10491 ;; This function is called by:
 10492 ;;		_main
 10493 ;; This function uses a non-reentrant model
 10494 ;;
 10495                           
 10496                           
 10497                           ;psect for function _Flash_Memory_Initialization
 10498  03A8                     _Flash_Memory_Initialization:	
 10499                           
 10500                           ;MCU_B1.c: 935: char value = 0;
 10501                           
 10502                           ;incstack = 0
 10503                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10504  03A8  01F7               	clrf	Flash_Memory_Initialization@value
 10505                           
 10506                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
 10507  03A9  301F               	movlw	31
 10508  03AA  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10509  03AD  3AAA               	xorlw	170
 10510  03AE  1D03               	skipz
 10511  03AF  2C2A               	goto	l9933
 10512                           
 10513                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
 10514  03B0  3006               	movlw	6
 10515  03B1  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10516  03B4  00F6               	movwf	??_Flash_Memory_Initialization
 10517  03B5  0020               	movlb	0	; select bank0
 10518  03B6  086E               	movf	_product,w
 10519  03B7  3E0B               	addlw	11
 10520  03B8  0086               	movwf	6
 10521  03B9  3002               	movlw	2	; select bank4/5
 10522  03BA  0087               	movwf	7
 10523  03BB  0876               	movf	??_Flash_Memory_Initialization,w
 10524  03BC  0081               	movwf	1
 10525                           
 10526                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
 10527  03BD  3000               	movlw	0
 10528  03BE  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10529  03C1  00F6               	movwf	??_Flash_Memory_Initialization
 10530  03C2  0020               	movlb	0	; select bank0
 10531  03C3  086E               	movf	_product,w
 10532  03C4  3E0C               	addlw	12
 10533  03C5  0086               	movwf	6
 10534  03C6  3002               	movlw	2	; select bank4/5
 10535  03C7  0087               	movwf	7
 10536  03C8  0876               	movf	??_Flash_Memory_Initialization,w
 10537  03C9  0081               	movwf	1
 10538                           
 10539                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
 10540  03CA  3001               	movlw	1
 10541  03CB  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10542  03CE  00F6               	movwf	??_Flash_Memory_Initialization
 10543  03CF  0020               	movlb	0	; select bank0
 10544  03D0  086E               	movf	_product,w
 10545  03D1  3E0D               	addlw	13
 10546  03D2  0086               	movwf	6
 10547  03D3  3002               	movlw	2	; select bank4/5
 10548  03D4  0087               	movwf	7
 10549  03D5  0876               	movf	??_Flash_Memory_Initialization,w
 10550  03D6  0081               	movwf	1
 10551                           
 10552                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
 10553  03D7  3002               	movlw	2
 10554  03D8  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10555  03DB  00F6               	movwf	??_Flash_Memory_Initialization
 10556  03DC  0020               	movlb	0	; select bank0
 10557  03DD  086E               	movf	_product,w
 10558  03DE  3E0E               	addlw	14
 10559  03DF  0086               	movwf	6
 10560  03E0  3002               	movlw	2	; select bank4/5
 10561  03E1  0087               	movwf	7
 10562  03E2  0876               	movf	??_Flash_Memory_Initialization,w
 10563  03E3  0081               	movwf	1
 10564                           
 10565                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
 10566  03E4  3003               	movlw	3
 10567  03E5  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10568  03E8  00F6               	movwf	??_Flash_Memory_Initialization
 10569  03E9  0020               	movlb	0	; select bank0
 10570  03EA  086E               	movf	_product,w
 10571  03EB  3E15               	addlw	21
 10572  03EC  0086               	movwf	6
 10573  03ED  3002               	movlw	2	; select bank4/5
 10574  03EE  0087               	movwf	7
 10575  03EF  0876               	movf	??_Flash_Memory_Initialization,w
 10576  03F0  0081               	movwf	1
 10577                           
 10578                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
 10579  03F1  3004               	movlw	4
 10580  03F2  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10581  03F5  00F6               	movwf	??_Flash_Memory_Initialization
 10582  03F6  0020               	movlb	0	; select bank0
 10583  03F7  086E               	movf	_product,w
 10584  03F8  3E16               	addlw	22
 10585  03F9  0086               	movwf	6
 10586  03FA  3002               	movlw	2	; select bank4/5
 10587  03FB  0087               	movwf	7
 10588  03FC  0876               	movf	??_Flash_Memory_Initialization,w
 10589  03FD  0081               	movwf	1
 10590                           
 10591                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
 10592  03FE  3005               	movlw	5
 10593  03FF  319E  26AA  3183   	fcall	_Flash_Memory_Read
 10594  0402  00F6               	movwf	??_Flash_Memory_Initialization
 10595  0403  0020               	movlb	0	; select bank0
 10596  0404  086E               	movf	_product,w
 10597  0405  3E17               	addlw	23
 10598  0406  0086               	movwf	6
 10599  0407  3002               	movlw	2	; select bank4/5
 10600  0408  0087               	movwf	7
 10601  0409  0876               	movf	??_Flash_Memory_Initialization,w
 10602  040A  0081               	movwf	1
 10603                           
 10604                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
 10605  040B  086E               	movf	_product,w
 10606  040C  3E0C               	addlw	12
 10607  040D  0086               	movwf	6
 10608  040E  3002               	movlw	2	; select bank4/5
 10609  040F  0087               	movwf	7
 10610  0410  0801               	movf	1,w
 10611  0411  3AFF               	xorlw	255
 10612  0412  1D03               	skipz
 10613  0413  0008               	return
 10614  0414  086E               	movf	_product,w
 10615  0415  3E0D               	addlw	13
 10616  0416  0086               	movwf	6
 10617  0417  3002               	movlw	2	; select bank4/5
 10618  0418  0087               	movwf	7
 10619  0419  0801               	movf	1,w
 10620  041A  3AFF               	xorlw	255
 10621  041B  1D03               	skipz
 10622  041C  0008               	return
 10623  041D  086E               	movf	_product,w
 10624  041E  3E0E               	addlw	14
 10625  041F  0086               	movwf	6
 10626  0420  3002               	movlw	2	; select bank4/5
 10627  0421  0087               	movwf	7
 10628  0422  0801               	movf	1,w
 10629  0423  3AFF               	xorlw	255
 10630  0424  1D03               	skipz
 10631  0425  0008               	return
 10632                           
 10633                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
 10634  0426  0021               	movlb	1	; select bank1
 10635  0427  15BF               	bsf	_myMain^(0+128),3
 10636                           
 10637                           ;MCU_B1.c: 954: myMain.First = 1;
 10638  0428  16BF               	bsf	_myMain^(0+128),5
 10639                           
 10640                           ;MCU_B1.c: 955: }
 10641                           ;MCU_B1.c: 956: } else {
 10642  0429  0008               	return
 10643  042A                     l9933:	
 10644                           
 10645                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
 10646  042A  30FF               	movlw	255
 10647  042B  00F6               	movwf	??_Flash_Memory_Initialization
 10648  042C  0876               	movf	??_Flash_Memory_Initialization,w
 10649  042D  00F2               	movwf	setMemory_Data@data
 10650  042E  3000               	movlw	0
 10651  042F  319C  24F8  3183   	fcall	_setMemory_Data
 10652                           
 10653                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
 10654  0432  30FF               	movlw	255
 10655  0433  00F6               	movwf	??_Flash_Memory_Initialization
 10656  0434  0876               	movf	??_Flash_Memory_Initialization,w
 10657  0435  00F2               	movwf	setMemory_Data@data
 10658  0436  3001               	movlw	1
 10659  0437  319C  24F8  3183   	fcall	_setMemory_Data
 10660                           
 10661                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
 10662  043A  30FF               	movlw	255
 10663  043B  00F6               	movwf	??_Flash_Memory_Initialization
 10664  043C  0876               	movf	??_Flash_Memory_Initialization,w
 10665  043D  00F2               	movwf	setMemory_Data@data
 10666  043E  3002               	movlw	2
 10667  043F  319C  24F8  3183   	fcall	_setMemory_Data
 10668                           
 10669                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
 10670  0442  30FF               	movlw	255
 10671  0443  00F6               	movwf	??_Flash_Memory_Initialization
 10672  0444  0876               	movf	??_Flash_Memory_Initialization,w
 10673  0445  00F2               	movwf	setMemory_Data@data
 10674  0446  3003               	movlw	3
 10675  0447  319C  24F8  3183   	fcall	_setMemory_Data
 10676                           
 10677                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
 10678  044A  30FF               	movlw	255
 10679  044B  00F6               	movwf	??_Flash_Memory_Initialization
 10680  044C  0876               	movf	??_Flash_Memory_Initialization,w
 10681  044D  00F2               	movwf	setMemory_Data@data
 10682  044E  3004               	movlw	4
 10683  044F  319C  24F8  3183   	fcall	_setMemory_Data
 10684                           
 10685                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
 10686  0452  30FF               	movlw	255
 10687  0453  00F6               	movwf	??_Flash_Memory_Initialization
 10688  0454  0876               	movf	??_Flash_Memory_Initialization,w
 10689  0455  00F2               	movwf	setMemory_Data@data
 10690  0456  3005               	movlw	5
 10691  0457  319C  24F8  3183   	fcall	_setMemory_Data
 10692                           
 10693                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
 10694  045A  30FF               	movlw	255
 10695  045B  00F6               	movwf	??_Flash_Memory_Initialization
 10696  045C  0876               	movf	??_Flash_Memory_Initialization,w
 10697  045D  00F2               	movwf	setMemory_Data@data
 10698  045E  3006               	movlw	6
 10699  045F  319C  24F8  3183   	fcall	_setMemory_Data
 10700                           
 10701                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
 10702  0462  30AA               	movlw	170
 10703  0463  00F6               	movwf	??_Flash_Memory_Initialization
 10704  0464  0876               	movf	??_Flash_Memory_Initialization,w
 10705  0465  00F2               	movwf	setMemory_Data@data
 10706  0466  301F               	movlw	31
 10707  0467  319C  24F8  3183   	fcall	_setMemory_Data
 10708                           
 10709                           ;MCU_B1.c: 970: GIE = 0;
 10710  046A  138B               	bcf	11,7	;volatile
 10711                           
 10712                           ;MCU_B1.c: 971: Flash_Memory_Write();
 10713  046B  3193  2310         	fcall	_Flash_Memory_Write
 10714                           
 10715                           ;MCU_B1.c: 972: GIE = 1;
 10716  046D  178B               	bsf	11,7	;volatile
 10717                           
 10718                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
 10719  046E  0021               	movlb	1	; select bank1
 10720  046F  15BF               	bsf	_myMain^(0+128),3
 10721                           
 10722                           ;MCU_B1.c: 974: myMain.First = 1;
 10723  0470  16BF               	bsf	_myMain^(0+128),5
 10724                           
 10725                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
 10726  0471  1649               	bsf	(_myMain^(0+128)+10),4
 10727  0472  0008               	return
 10728  0473                     __end_of_Flash_Memory_Initialization:	
 10729                           
 10730                           	psect	text67
 10731  1CF8                     __ptext67:	
 10732 ;; *************** function _setMemory_Data *****************
 10733 ;; Defined at:
 10734 ;;		line 1099 in file "../src/MCU_B1.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;  address         1    wreg     unsigned char 
 10737 ;;  data            1    2[COMMON] unsigned char 
 10738 ;; Auto vars:     Size  Location     Type
 10739 ;;  address         1    4[COMMON] unsigned char 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;		None               void
 10742 ;; Registers used:
 10743 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;Total ram usage:        3 bytes
 10754 ;; Hardware stack levels used:    1
 10755 ;; Hardware stack levels required when called:    3
 10756 ;; This function calls:
 10757 ;;		Nothing
 10758 ;; This function is called by:
 10759 ;;		_Flash_Memory_Initialization
 10760 ;;		_Flash_Memory_Modify
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           
 10765                           ;psect for function _setMemory_Data
 10766  1CF8                     _setMemory_Data:	
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
 10770                           ;setMemory_Data@address stored from wreg
 10771  1CF8  00F4               	movwf	setMemory_Data@address
 10772                           
 10773                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
 10774  1CF9  0872               	movf	setMemory_Data@data,w
 10775  1CFA  00F3               	movwf	??_setMemory_Data
 10776  1CFB  0874               	movf	setMemory_Data@address,w
 10777  1CFC  3E20               	addlw	_Memory& (0+255)
 10778  1CFD  0086               	movwf	6
 10779  1CFE  3002               	movlw	2	; select bank4/5
 10780  1CFF  0087               	movwf	7
 10781  1D00  0873               	movf	??_setMemory_Data,w
 10782  1D01  0081               	movwf	1
 10783  1D02  0008               	return
 10784  1D03                     __end_of_setMemory_Data:	
 10785                           
 10786                           	psect	text68
 10787  1310                     __ptext68:	
 10788 ;; *************** function _Flash_Memory_Write *****************
 10789 ;; Defined at:
 10790 ;;		line 1027 in file "../src/MCU_B1.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  i               1    3[COMMON] unsigned char 
 10795 ;; Return value:  Size  Location     Type
 10796 ;;		None               void
 10797 ;; Registers used:
 10798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;Total ram usage:        2 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    4
 10811 ;; This function calls:
 10812 ;;		_Flash_Memory_Unlock
 10813 ;; This function is called by:
 10814 ;;		_Flash_Memory_Initialization
 10815 ;;		_Flash_Memory_Modify
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           
 10820                           ;psect for function _Flash_Memory_Write
 10821  1310                     _Flash_Memory_Write:	
 10822                           
 10823                           ;MCU_B1.c: 1028: char i = 0;
 10824                           
 10825                           ;incstack = 0
 10826                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10827  1310  01F3               	clrf	Flash_Memory_Write@i
 10828                           
 10829                           ;MCU_B1.c: 1029: CFGS = 0;
 10830  1311  0023               	movlb	3	; select bank3
 10831  1312  1315               	bcf	21,6	;volatile
 10832                           
 10833                           ;MCU_B1.c: 1030: PMADRH = 0x30;
 10834  1313  3030               	movlw	48
 10835  1314  0092               	movwf	18	;volatile
 10836                           
 10837                           ;MCU_B1.c: 1031: PMDATH = 0;
 10838  1315  0194               	clrf	20	;volatile
 10839                           
 10840                           ;MCU_B1.c: 1032: FREE = 0;
 10841  1316  1215               	bcf	21,4	;volatile
 10842                           
 10843                           ;MCU_B1.c: 1033: LWLO = 1;
 10844  1317  1695               	bsf	21,5	;volatile
 10845                           
 10846                           ;MCU_B1.c: 1034: WREN = 1;
 10847  1318  1515               	bsf	21,2	;volatile
 10848                           
 10849                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
 10850  1319  01F3               	clrf	Flash_Memory_Write@i
 10851  131A  3020               	movlw	32
 10852  131B  0273               	subwf	Flash_Memory_Write@i,w
 10853  131C  1803               	btfsc	3,0
 10854  131D  2B33               	goto	l1608
 10855  131E                     l9545:	
 10856                           
 10857                           ;MCU_B1.c: 1036: PMADRL = i;
 10858  131E  0873               	movf	Flash_Memory_Write@i,w
 10859  131F  0023               	movlb	3	; select bank3
 10860  1320  0091               	movwf	17	;volatile
 10861                           
 10862                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
 10863  1321  0873               	movf	Flash_Memory_Write@i,w
 10864  1322  3E20               	addlw	_Memory& (0+255)
 10865  1323  0086               	movwf	6
 10866  1324  3002               	movlw	2	; select bank4/5
 10867  1325  0087               	movwf	7
 10868  1326  0801               	movf	1,w
 10869  1327  0093               	movwf	19	;volatile
 10870                           
 10871                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
 10872  1328  319C  24EF  3193   	fcall	_Flash_Memory_Unlock
 10873  132B  3001               	movlw	1
 10874  132C  00F2               	movwf	??_Flash_Memory_Write
 10875  132D  0872               	movf	??_Flash_Memory_Write,w
 10876  132E  07F3               	addwf	Flash_Memory_Write@i,f
 10877  132F  3020               	movlw	32
 10878  1330  0273               	subwf	Flash_Memory_Write@i,w
 10879  1331  1C03               	skipc
 10880  1332  2B1E               	goto	l9545
 10881  1333                     l1608:	
 10882                           
 10883                           ;MCU_B1.c: 1039: }
 10884                           ;MCU_B1.c: 1040: LWLO = 0;
 10885  1333  0023               	movlb	3	; select bank3
 10886  1334  1295               	bcf	21,5	;volatile
 10887                           
 10888                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
 10889  1335  319C  24EF         	fcall	_Flash_Memory_Unlock
 10890                           
 10891                           ;MCU_B1.c: 1042: WREN = 0;
 10892  1337  0023               	movlb	3	; select bank3
 10893  1338  1115               	bcf	21,2	;volatile
 10894  1339  0008               	return
 10895  133A                     __end_of_Flash_Memory_Write:	
 10896                           
 10897                           	psect	text69
 10898  1CEF                     __ptext69:	
 10899 ;; *************** function _Flash_Memory_Unlock *****************
 10900 ;; Defined at:
 10901 ;;		line 1006 in file "../src/MCU_B1.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;		None
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;		None
 10906 ;; Return value:  Size  Location     Type
 10907 ;;		None               void
 10908 ;; Registers used:
 10909 ;;		wreg
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;Total ram usage:        0 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    3
 10922 ;; This function calls:
 10923 ;;		Nothing
 10924 ;; This function is called by:
 10925 ;;		_Flash_Memory_Write
 10926 ;;		_Flash_Memory_Erasing
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _Flash_Memory_Unlock
 10932  1CEF                     _Flash_Memory_Unlock:	
 10933                           
 10934                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
 10935                           
 10936                           ;incstack = 0
 10937                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 10938  1CEF  3055               	movlw	85
 10939  1CF0  0023               	movlb	3	; select bank3
 10940  1CF1  0096               	movwf	22	;volatile
 10941                           
 10942                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
 10943  1CF2  30AA               	movlw	170
 10944  1CF3  0096               	movwf	22	;volatile
 10945                           
 10946                           ;MCU_B1.c: 1009: WR = 1;
 10947  1CF4  1495               	bsf	21,1	;volatile
 10948                           
 10949                           ;MCU_B1.c: 1010: __nop();
 10950  1CF5  0000               	nop
 10951                           
 10952                           ;MCU_B1.c: 1011: __nop();
 10953  1CF6  0000               	nop
 10954  1CF7  0008               	return
 10955  1CF8                     __end_of_Flash_Memory_Unlock:	
 10956                           
 10957                           	psect	text70
 10958  1EAA                     __ptext70:	
 10959 ;; *************** function _Flash_Memory_Read *****************
 10960 ;; Defined at:
 10961 ;;		line 1015 in file "../src/MCU_B1.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  address         1    wreg     unsigned char 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  address         1    4[COMMON] unsigned char 
 10966 ;;  ret             1    5[COMMON] unsigned char 
 10967 ;;  i               1    3[COMMON] unsigned char 
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      unsigned char 
 10970 ;; Registers used:
 10971 ;;		wreg, status,2
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;Total ram usage:        4 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:    3
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		_Flash_Memory_Initialization
 10988 ;;		_Flash_Memory_Modify
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           
 10993                           ;psect for function _Flash_Memory_Read
 10994  1EAA                     _Flash_Memory_Read:	
 10995                           
 10996                           ;incstack = 0
 10997                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 10998                           ;Flash_Memory_Read@address stored from wreg
 10999  1EAA  00F4               	movwf	Flash_Memory_Read@address
 11000                           
 11001                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
 11002  1EAB  01F3               	clrf	Flash_Memory_Read@i
 11003  1EAC  01F5               	clrf	Flash_Memory_Read@ret
 11004                           
 11005                           ;MCU_B1.c: 1017: PMADRH = 0x30;
 11006  1EAD  3030               	movlw	48
 11007  1EAE  0023               	movlb	3	; select bank3
 11008  1EAF  0092               	movwf	18	;volatile
 11009                           
 11010                           ;MCU_B1.c: 1018: PMADRL = address;
 11011  1EB0  0874               	movf	Flash_Memory_Read@address,w
 11012  1EB1  0091               	movwf	17	;volatile
 11013                           
 11014                           ;MCU_B1.c: 1019: CFGS = 0;
 11015  1EB2  1315               	bcf	21,6	;volatile
 11016                           
 11017                           ;MCU_B1.c: 1020: RD = 1;
 11018  1EB3  1415               	bsf	21,0	;volatile
 11019                           
 11020                           ;MCU_B1.c: 1021: i = PMDATH;
 11021  1EB4  0814               	movf	20,w	;volatile
 11022  1EB5  00F2               	movwf	??_Flash_Memory_Read
 11023  1EB6  0872               	movf	??_Flash_Memory_Read,w
 11024  1EB7  00F3               	movwf	Flash_Memory_Read@i
 11025                           
 11026                           ;MCU_B1.c: 1022: ret = PMDATL;
 11027  1EB8  0813               	movf	19,w	;volatile
 11028  1EB9  00F2               	movwf	??_Flash_Memory_Read
 11029  1EBA  0872               	movf	??_Flash_Memory_Read,w
 11030  1EBB  00F5               	movwf	Flash_Memory_Read@ret
 11031                           
 11032                           ;MCU_B1.c: 1023: return ret;
 11033  1EBC  0875               	movf	Flash_Memory_Read@ret,w
 11034  1EBD  0008               	return
 11035  1EBE                     __end_of_Flash_Memory_Read:	
 11036                           
 11037                           	psect	text71
 11038  14A3                     __ptext71:	
 11039 ;; *************** function _Exception_Main *****************
 11040 ;; Defined at:
 11041 ;;		line 504 in file "../src/Main_B1.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  error           1    3[BANK0 ] unsigned char 
 11046 ;;  status          1    2[BANK0 ] unsigned char 
 11047 ;;  count           1    1[BANK0 ] unsigned char 
 11048 ;;  lights          1    0[BANK0 ] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;		None               void
 11051 ;; Registers used:
 11052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        5 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    5
 11065 ;; This function calls:
 11066 ;;		_getMain_All_Error_Status
 11067 ;;		_setLED
 11068 ;; This function is called by:
 11069 ;;		_main
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           
 11074                           ;psect for function _Exception_Main
 11075  14A3                     _Exception_Main:	
 11076                           
 11077                           ;Main_B1.c: 505: char error = getMain_All_Error_Status(0);
 11078                           
 11079                           ;incstack = 0
 11080                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11081  14A3  3000               	movlw	0
 11082  14A4  319C  249F  3194   	fcall	_getMain_All_Error_Status
 11083  14A7  00F5               	movwf	??_Exception_Main
 11084  14A8  0875               	movf	??_Exception_Main,w
 11085  14A9  0020               	movlb	0	; select bank0
 11086  14AA  00A3               	movwf	Exception_Main@error
 11087                           
 11088                           ;Main_B1.c: 506: char lights = 0, count = 3;
 11089  14AB  01A0               	clrf	Exception_Main@lights
 11090  14AC  3003               	movlw	3
 11091  14AD  00F5               	movwf	??_Exception_Main
 11092  14AE  0875               	movf	??_Exception_Main,w
 11093  14AF  00A1               	movwf	Exception_Main@count
 11094                           
 11095                           ;Main_B1.c: 507: char status = 0;
 11096  14B0  01A2               	clrf	Exception_Main@status
 11097                           
 11098                           ;Main_B1.c: 509: if (myMain.Error_Run == 1) {
 11099  14B1  0021               	movlb	1	; select bank1
 11100  14B2  1DC9               	btfss	(_myMain^(0+128)+10),3
 11101  14B3  2CC3               	goto	l11405
 11102                           
 11103                           ;Main_B1.c: 510: if (error == 0) {
 11104  14B4  0020               	movlb	0	; select bank0
 11105  14B5  08A3               	movf	Exception_Main@error,f
 11106  14B6  1D03               	skipz
 11107  14B7  0008               	return
 11108                           
 11109                           ;Main_B1.c: 511: myMain.Error_Run = 0;
 11110  14B8  0021               	movlb	1	; select bank1
 11111  14B9  11C9               	bcf	(_myMain^(0+128)+10),3
 11112                           
 11113                           ;Main_B1.c: 516: setLED(error, 110);
 11114  14BA  306E               	movlw	110
 11115  14BB  00F5               	movwf	??_Exception_Main
 11116  14BC  0875               	movf	??_Exception_Main,w
 11117  14BD  00F3               	movwf	setLED@command
 11118  14BE  0020               	movlb	0	; select bank0
 11119  14BF  0823               	movf	Exception_Main@error,w
 11120  14C0  318C  2417         	fcall	_setLED
 11121                           
 11122                           ;Main_B1.c: 527: }
 11123                           ;Main_B1.c: 528: } else {
 11124  14C2  0008               	return
 11125  14C3                     l11405:	
 11126                           
 11127                           ;Main_B1.c: 529: if (error != 0) {
 11128  14C3  0020               	movlb	0	; select bank0
 11129  14C4  0823               	movf	Exception_Main@error,w
 11130  14C5  1903               	btfsc	3,2
 11131  14C6  0008               	return
 11132                           
 11133                           ;Main_B1.c: 530: myMain.Error_Run = 1;
 11134  14C7  0021               	movlb	1	; select bank1
 11135  14C8  15C9               	bsf	(_myMain^(0+128)+10),3
 11136                           
 11137                           ;Main_B1.c: 534: setLED(error, 111);
 11138  14C9  306F               	movlw	111
 11139  14CA  00F5               	movwf	??_Exception_Main
 11140  14CB  0875               	movf	??_Exception_Main,w
 11141  14CC  00F3               	movwf	setLED@command
 11142  14CD  0020               	movlb	0	; select bank0
 11143  14CE  0823               	movf	Exception_Main@error,w
 11144  14CF  318C  2417  3194   	fcall	_setLED
 11145                           
 11146                           ;Main_B1.c: 591: }
 11147                           
 11148                           ;Main_B1.c: 590: break;
 11149                           
 11150                           ;Main_B1.c: 566: case 3:
 11151                           
 11152                           ;Main_B1.c: 565: break;
 11153                           
 11154                           ;Main_B1.c: 544: case 2:
 11155                           
 11156                           ;Main_B1.c: 543: switch (error) {
 11157  14D2  0020               	movlb	0	; select bank0
 11158  14D3  0823               	movf	Exception_Main@error,w
 11159                           
 11160                           ; Switch size 1, requested type "space"
 11161                           ; Number of cases is 2, Range of values is 2 to 3
 11162                           ; switch strategies available:
 11163                           ; Name         Instructions Cycles
 11164                           ; simple_byte            7     4 (average)
 11165                           ; direct_byte           13     9 (fixed)
 11166                           ; jumptable            263     9 (fixed)
 11167                           ;	Chosen strategy is simple_byte
 11168  14D4  3A02               	xorlw	2	; case 2
 11169  14D5  1903               	skipnz
 11170  14D6  2CDC               	goto	l1831
 11171  14D7  3A01               	xorlw	1	; case 3
 11172  14D8  1903               	skipnz
 11173  14D9  2CDC               	goto	l1831
 11174  14DA  2CDC               	goto	l1831
 11175  14DB  0008               	return
 11176  14DC                     l1831:	
 11177  14DC  0008               	return
 11178  14DD                     __end_of_Exception_Main:	
 11179                           
 11180                           	psect	text72
 11181  1C9F                     __ptext72:	
 11182 ;; *************** function _getMain_All_Error_Status *****************
 11183 ;; Defined at:
 11184 ;;		line 429 in file "../src/Main_B1.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  command         1    wreg     unsigned char 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  command         1    0[COMMON] unsigned char 
 11189 ;;  status          1    2[COMMON] unsigned char 
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1    wreg      unsigned char 
 11192 ;; Registers used:
 11193 ;;		wreg, status,2
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;Total ram usage:        1 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    3
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_Exception_Main
 11210 ;;		_getRxData
 11211 ;;		_setSw_Main
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           
 11216                           ;psect for function _getMain_All_Error_Status
 11217  1C9F                     _getMain_All_Error_Status:	
 11218                           
 11219                           ;Main_B1.c: 430: char status = 0;
 11220                           
 11221                           ;incstack = 0
 11222                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
 11223  1C9F  01F2               	clrf	getMain_All_Error_Status@status
 11224                           
 11225                           ;Main_B1.c: 460: return status;
 11226  1CA0  0872               	movf	getMain_All_Error_Status@status,w
 11227  1CA1  0008               	return
 11228  1CA2                     __end_of_getMain_All_Error_Status:	
 11229                           
 11230                           	psect	text73
 11231  1F69                     __ptext73:	
 11232 ;; *************** function _DimmerLights_Main *****************
 11233 ;; Defined at:
 11234 ;;		line 867 in file "../src/Dimmer_B1.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;		None               void
 11241 ;; Registers used:
 11242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    8
 11255 ;; This function calls:
 11256 ;;		_DimmerLights_DimmingFunction
 11257 ;;		_setDimmerLights_Main
 11258 ;; This function is called by:
 11259 ;;		_main
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           
 11264                           ;psect for function _DimmerLights_Main
 11265  1F69                     _DimmerLights_Main:	
 11266                           
 11267                           ;Dimmer_B1.c: 879: setDimmerLights_Main(1);
 11268                           
 11269                           ;incstack = 0
 11270                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11271  1F69  3001               	movlw	1
 11272  1F6A  318A  2219  319F   	fcall	_setDimmerLights_Main
 11273                           
 11274                           ;Dimmer_B1.c: 882: DimmerLights_DimmingFunction(1);
 11275  1F6D  3001               	movlw	1
 11276  1F6E  3182  22C0  319F   	fcall	_DimmerLights_DimmingFunction
 11277                           
 11278                           ;Dimmer_B1.c: 892: setDimmerLights_Main(2);
 11279  1F71  3002               	movlw	2
 11280  1F72  318A  2219  319F   	fcall	_setDimmerLights_Main
 11281                           
 11282                           ;Dimmer_B1.c: 894: DimmerLights_DimmingFunction(2);
 11283  1F75  3002               	movlw	2
 11284  1F76  3182  22C0  319F   	fcall	_DimmerLights_DimmingFunction
 11285                           
 11286                           ;Dimmer_B1.c: 904: setDimmerLights_Main(3);
 11287  1F79  3003               	movlw	3
 11288  1F7A  318A  2219  319F   	fcall	_setDimmerLights_Main
 11289                           
 11290                           ;Dimmer_B1.c: 907: DimmerLights_DimmingFunction(3);
 11291  1F7D  3003               	movlw	3
 11292  1F7E  3182  22C0         	fcall	_DimmerLights_DimmingFunction
 11293  1F80  0008               	return
 11294  1F81                     __end_of_DimmerLights_Main:	
 11295                           
 11296                           	psect	text74
 11297  0A19                     __ptext74:	
 11298 ;; *************** function _setDimmerLights_Main *****************
 11299 ;; Defined at:
 11300 ;;		line 924 in file "../src/Dimmer_B1.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;  lights          1    wreg     unsigned char 
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;  lights          1   69[BANK0 ] unsigned char 
 11305 ;; Return value:  Size  Location     Type
 11306 ;;		None               void
 11307 ;; Registers used:
 11308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;Total ram usage:        1 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    7
 11321 ;; This function calls:
 11322 ;;		_DimmerLights_SelectPointer
 11323 ;;		_getDimmerLights_Allow_Condition
 11324 ;;		_getMain_All_LightsStatus
 11325 ;;		_setDimmerLights_Dimming
 11326 ;;		_setDimmerLights_OnOff
 11327 ;; This function is called by:
 11328 ;;		_DimmerLights_Main
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           
 11333                           ;psect for function _setDimmerLights_Main
 11334  0A19                     _setDimmerLights_Main:	
 11335                           
 11336                           ;incstack = 0
 11337                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11338                           ;setDimmerLights_Main@lights stored from wreg
 11339  0A19  0020               	movlb	0	; select bank0
 11340  0A1A  00E5               	movwf	setDimmerLights_Main@lights
 11341                           
 11342                           ;Dimmer_B1.c: 926: DimmerLights_SelectPointer(lights);
 11343  0A1B  0865               	movf	setDimmerLights_Main@lights,w
 11344  0A1C  3191  2193  318A   	fcall	_DimmerLights_SelectPointer
 11345                           
 11346                           ;Dimmer_B1.c: 927: if (DimmerLights->Trigger == 1) {
 11347  0A1F  0020               	movlb	0	; select bank0
 11348  0A20  086A               	movf	_DimmerLights,w
 11349  0A21  0086               	movwf	6
 11350  0A22  3001               	movlw	1	; select bank2/3
 11351  0A23  0087               	movwf	7
 11352  0A24  1C81               	btfss	1,1
 11353  0A25  2A45               	goto	l11123
 11354                           
 11355                           ;Dimmer_B1.c: 928: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11356  0A26  0865               	movf	setDimmerLights_Main@lights,w
 11357  0A27  3196  2614  318A   	fcall	_getDimmerLights_Allow_Condition
 11358  0A2A  3800               	iorlw	0
 11359  0A2B  1D03               	skipz
 11360  0A2C  0008               	return
 11361                           
 11362                           ;Dimmer_B1.c: 929: DimmerLights->Trigger = 0;
 11363  0A2D  0020               	movlb	0	; select bank0
 11364  0A2E  086A               	movf	_DimmerLights,w
 11365  0A2F  0086               	movwf	6
 11366  0A30  3001               	movlw	1	; select bank2/3
 11367  0A31  0087               	movwf	7
 11368  0A32  1081               	bcf	1,1
 11369                           
 11370                           ;Dimmer_B1.c: 930: if (DimmerLights->Switch == 1) {
 11371  0A33  086A               	movf	_DimmerLights,w
 11372  0A34  0086               	movwf	6
 11373  0A35  3001               	movlw	1	; select bank2/3
 11374  0A36  0087               	movwf	7
 11375  0A37  1D01               	btfss	1,2
 11376  0A38  2A3F               	goto	l11121
 11377                           
 11378                           ;Dimmer_B1.c: 931: setDimmerLights_OnOff(lights, 1);
 11379  0A39  01E1               	clrf	setDimmerLights_OnOff@command
 11380  0A3A  0AE1               	incf	setDimmerLights_OnOff@command,f
 11381  0A3B  0865               	movf	setDimmerLights_Main@lights,w
 11382  0A3C  3184  2473         	fcall	_setDimmerLights_OnOff
 11383                           
 11384                           ;Dimmer_B1.c: 932: } else {
 11385  0A3E  0008               	return
 11386  0A3F                     l11121:	
 11387                           
 11388                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 0);
 11389  0A3F  0020               	movlb	0	; select bank0
 11390  0A40  01E1               	clrf	setDimmerLights_OnOff@command
 11391  0A41  0865               	movf	setDimmerLights_Main@lights,w
 11392  0A42  3184  2473         	fcall	_setDimmerLights_OnOff
 11393                           
 11394                           ;Dimmer_B1.c: 934: }
 11395                           ;Dimmer_B1.c: 935: }
 11396                           ;Dimmer_B1.c: 936: } else {
 11397  0A44  0008               	return
 11398  0A45                     l11123:	
 11399                           
 11400                           ;Dimmer_B1.c: 937: if (getMain_All_LightsStatus() == 1) {
 11401  0A45  319F  273B  318A   	fcall	_getMain_All_LightsStatus
 11402  0A48  3A01               	xorlw	1
 11403  0A49  1D03               	skipz
 11404  0A4A  2A71               	goto	l11135
 11405                           
 11406                           ;Dimmer_B1.c: 938: if (DimmerLights->DimmingTrigger == 1) {
 11407  0A4B  0020               	movlb	0	; select bank0
 11408  0A4C  086A               	movf	_DimmerLights,w
 11409  0A4D  0086               	movwf	6
 11410  0A4E  3001               	movlw	1	; select bank2/3
 11411  0A4F  0087               	movwf	7
 11412  0A50  1E01               	btfss	1,4
 11413  0A51  0008               	return
 11414                           
 11415                           ;Dimmer_B1.c: 939: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11416  0A52  0865               	movf	setDimmerLights_Main@lights,w
 11417  0A53  3196  2614  318A   	fcall	_getDimmerLights_Allow_Condition
 11418  0A56  3800               	iorlw	0
 11419  0A57  1D03               	skipz
 11420  0A58  0008               	return
 11421                           
 11422                           ;Dimmer_B1.c: 940: DimmerLights->DimmingTrigger = 0;
 11423  0A59  0020               	movlb	0	; select bank0
 11424  0A5A  086A               	movf	_DimmerLights,w
 11425  0A5B  0086               	movwf	6
 11426  0A5C  3001               	movlw	1	; select bank2/3
 11427  0A5D  0087               	movwf	7
 11428  0A5E  1201               	bcf	1,4
 11429                           
 11430                           ;Dimmer_B1.c: 941: if (DimmerLights->DimmingSwitch == 1) {
 11431  0A5F  086A               	movf	_DimmerLights,w
 11432  0A60  0086               	movwf	6
 11433  0A61  3001               	movlw	1	; select bank2/3
 11434  0A62  0087               	movwf	7
 11435  0A63  1E81               	btfss	1,5
 11436  0A64  2A6B               	goto	l11133
 11437                           
 11438                           ;Dimmer_B1.c: 942: setDimmerLights_Dimming(lights, 1);
 11439  0A65  01DE               	clrf	setDimmerLights_Dimming@status
 11440  0A66  0ADE               	incf	setDimmerLights_Dimming@status,f
 11441  0A67  0865               	movf	setDimmerLights_Main@lights,w
 11442  0A68  3197  27B4         	fcall	_setDimmerLights_Dimming
 11443                           
 11444                           ;Dimmer_B1.c: 943: } else {
 11445  0A6A  0008               	return
 11446  0A6B                     l11133:	
 11447                           
 11448                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 0);
 11449  0A6B  0020               	movlb	0	; select bank0
 11450  0A6C  01DE               	clrf	setDimmerLights_Dimming@status
 11451  0A6D  0865               	movf	setDimmerLights_Main@lights,w
 11452  0A6E  3197  27B4         	fcall	_setDimmerLights_Dimming
 11453                           
 11454                           ;Dimmer_B1.c: 945: }
 11455                           ;Dimmer_B1.c: 946: }
 11456                           ;Dimmer_B1.c: 947: }
 11457                           ;Dimmer_B1.c: 948: } else {
 11458  0A70  0008               	return
 11459  0A71                     l11135:	
 11460                           
 11461                           ;Dimmer_B1.c: 949: if (DimmerLights->DimmingTrigger == 1) {
 11462  0A71  0020               	movlb	0	; select bank0
 11463  0A72  086A               	movf	_DimmerLights,w
 11464  0A73  0086               	movwf	6
 11465  0A74  3001               	movlw	1	; select bank2/3
 11466  0A75  0087               	movwf	7
 11467  0A76  1E01               	btfss	1,4
 11468  0A77  0008               	return
 11469                           
 11470                           ;Dimmer_B1.c: 950: DimmerLights->DimmingTrigger = 0;
 11471  0A78  086A               	movf	_DimmerLights,w
 11472  0A79  0086               	movwf	6
 11473  0A7A  3001               	movlw	1	; select bank2/3
 11474  0A7B  0087               	movwf	7
 11475  0A7C  1201               	bcf	1,4
 11476  0A7D  0008               	return
 11477  0A7E                     __end_of_setDimmerLights_Main:	
 11478                           
 11479                           	psect	text75
 11480  0473                     __ptext75:	
 11481 ;; *************** function _setDimmerLights_OnOff *****************
 11482 ;; Defined at:
 11483 ;;		line 1001 in file "../src/Dimmer_B1.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  lights          1    wreg     unsigned char 
 11486 ;;  command         1   65[BANK0 ] unsigned char 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  lights          1   68[BANK0 ] unsigned char 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;		None               void
 11491 ;; Registers used:
 11492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11498 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;Total ram usage:        4 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    6
 11505 ;; This function calls:
 11506 ;;		_DimmerIntr_ValueCalculate
 11507 ;;		_getCmd_Status
 11508 ;;		_getDelayOff_GO
 11509 ;;		_getDimmerLights_PercentToValue
 11510 ;;		_getMain_All_LightsStatus
 11511 ;;		_setCmd_Status
 11512 ;;		_setDelayOff_GO
 11513 ;;		_setDimmerIntr_ControlStatus
 11514 ;;		_setDimmerIntr_DimmingValue
 11515 ;;		_setDimmerIntr_Dimming_RF
 11516 ;;		_setDimmerIntr_MaxmumValue
 11517 ;;		_setDimmerLights_DimmingClose
 11518 ;;		_setLED
 11519 ;;		_setProductData
 11520 ;;		_setRF_DimmerLights
 11521 ;;		_setTxData
 11522 ;; This function is called by:
 11523 ;;		_setDimmerLights_Main
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _setDimmerLights_OnOff
 11529  0473                     _setDimmerLights_OnOff:	
 11530                           
 11531                           ;incstack = 0
 11532                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11533                           ;setDimmerLights_OnOff@lights stored from wreg
 11534  0473  0020               	movlb	0	; select bank0
 11535  0474  00E4               	movwf	setDimmerLights_OnOff@lights
 11536                           
 11537                           ;Dimmer_B1.c: 1003: if (command == 1) {
 11538  0475  0861               	movf	setDimmerLights_OnOff@command,w
 11539  0476  3A01               	xorlw	1
 11540  0477  1D03               	skipz
 11541  0478  2CD6               	goto	l10939
 11542                           
 11543                           ;Dimmer_B1.c: 1005: setDimmerIntr_ControlStatus(lights, 1);
 11544  0479  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11545  047A  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
 11546  047B  0864               	movf	setDimmerLights_OnOff@lights,w
 11547  047C  3195  2519  3184   	fcall	_setDimmerIntr_ControlStatus
 11548                           
 11549                           ;Dimmer_B1.c: 1015: setLED(lights, 0);
 11550  047F  01F3               	clrf	setLED@command
 11551  0480  0020               	movlb	0	; select bank0
 11552  0481  0864               	movf	setDimmerLights_OnOff@lights,w
 11553  0482  318C  2417  3184   	fcall	_setLED
 11554                           
 11555                           ;Dimmer_B1.c: 1036: if (DimmerLights->DimmingRun == 1) {
 11556  0485  0020               	movlb	0	; select bank0
 11557  0486  0A6A               	incf	_DimmerLights,w
 11558  0487  0086               	movwf	6
 11559  0488  3001               	movlw	1	; select bank2/3
 11560  0489  0087               	movwf	7
 11561  048A  1F01               	btfss	1,6
 11562  048B  2CAD               	goto	l10929
 11563                           
 11564                           ;Dimmer_B1.c: 1037: DimmerLights->DimmingRun = 0;
 11565  048C  0A6A               	incf	_DimmerLights,w
 11566  048D  0086               	movwf	6
 11567  048E  3001               	movlw	1	; select bank2/3
 11568  048F  0087               	movwf	7
 11569  0490  1301               	bcf	1,6
 11570                           
 11571                           ;Dimmer_B1.c: 1038: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 11572  0491  0864               	movf	setDimmerLights_OnOff@lights,w
 11573  0492  3E14               	addlw	20
 11574  0493  076E               	addwf	_product,w
 11575  0494  00E2               	movwf	??_setDimmerLights_OnOff
 11576  0495  0862               	movf	??_setDimmerLights_OnOff,w
 11577  0496  0086               	movwf	6
 11578  0497  3002               	movlw	2	; select bank4/5
 11579  0498  0087               	movwf	7
 11580  0499  0801               	movf	1,w
 11581  049A  3188  20F7  3184   	fcall	_getDimmerLights_PercentToValue
 11582  049D  0020               	movlb	0	; select bank0
 11583  049E  00E3               	movwf	??_setDimmerLights_OnOff+1
 11584  049F  0863               	movf	??_setDimmerLights_OnOff+1,w
 11585  04A0  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 11586  04A1  0864               	movf	setDimmerLights_OnOff@lights,w
 11587  04A2  3192  2218  3184   	fcall	_setDimmerIntr_MaxmumValue
 11588                           
 11589                           ;Dimmer_B1.c: 1039: setDimmerIntr_Dimming_RF(lights, 1);
 11590  04A5  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 11591  04A6  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 11592  04A7  0020               	movlb	0	; select bank0
 11593  04A8  0864               	movf	setDimmerLights_OnOff@lights,w
 11594  04A9  3195  2556  3184   	fcall	_setDimmerIntr_Dimming_RF
 11595                           
 11596                           ;Dimmer_B1.c: 1040: } else {
 11597  04AC  2CC2               	goto	l10931
 11598  04AD                     l10929:	
 11599                           
 11600                           ;Dimmer_B1.c: 1043: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pr
      +                          oduct->Data[20 + lights]));
 11601  04AD  0020               	movlb	0	; select bank0
 11602  04AE  0864               	movf	setDimmerLights_OnOff@lights,w
 11603  04AF  3E14               	addlw	20
 11604  04B0  076E               	addwf	_product,w
 11605  04B1  00E2               	movwf	??_setDimmerLights_OnOff
 11606  04B2  0862               	movf	??_setDimmerLights_OnOff,w
 11607  04B3  0086               	movwf	6
 11608  04B4  3002               	movlw	2	; select bank4/5
 11609  04B5  0087               	movwf	7
 11610  04B6  0801               	movf	1,w
 11611  04B7  3188  20F7  3184   	fcall	_getDimmerLights_PercentToValue
 11612  04BA  0020               	movlb	0	; select bank0
 11613  04BB  00E3               	movwf	??_setDimmerLights_OnOff+1
 11614  04BC  0863               	movf	??_setDimmerLights_OnOff+1,w
 11615  04BD  00D8               	movwf	setDimmerIntr_DimmingValue@value
 11616  04BE  0864               	movf	setDimmerLights_OnOff@lights,w
 11617  04BF  3192  223A  3184   	fcall	_setDimmerIntr_DimmingValue
 11618  04C2                     l10931:	
 11619                           
 11620                           ;Dimmer_B1.c: 1049: }
 11621                           ;Dimmer_B1.c: 1051: if (lights == 1) {
 11622  04C2  0020               	movlb	0	; select bank0
 11623  04C3  0864               	movf	setDimmerLights_OnOff@lights,w
 11624  04C4  3A01               	xorlw	1
 11625  04C5  1D03               	skipz
 11626  04C6  2CCC               	goto	l10935
 11627                           
 11628                           ;Dimmer_B1.c: 1054: DimmerIntr_ValueCalculate(1);
 11629  04C7  3001               	movlw	1
 11630  04C8  3193  2364  3184   	fcall	_DimmerIntr_ValueCalculate
 11631                           
 11632                           ;Dimmer_B1.c: 1056: } else if (lights == 2) {
 11633  04CB  2D06               	goto	l10959
 11634  04CC                     l10935:	
 11635  04CC  0020               	movlb	0	; select bank0
 11636  04CD  0864               	movf	setDimmerLights_OnOff@lights,w
 11637  04CE  3A02               	xorlw	2
 11638  04CF  1D03               	skipz
 11639  04D0  2D06               	goto	l10959
 11640                           
 11641                           ;Dimmer_B1.c: 1059: DimmerIntr_ValueCalculate(2);
 11642  04D1  3002               	movlw	2
 11643  04D2  3193  2364  3184   	fcall	_DimmerIntr_ValueCalculate
 11644                           
 11645                           ;Dimmer_B1.c: 1061: }
 11646                           ;Dimmer_B1.c: 1067: } else if (command == 0) {
 11647  04D5  2D06               	goto	l10959
 11648  04D6                     l10939:	
 11649  04D6  0020               	movlb	0	; select bank0
 11650  04D7  08E1               	movf	setDimmerLights_OnOff@command,f
 11651  04D8  1D03               	skipz
 11652  04D9  2D06               	goto	l10959
 11653                           
 11654                           ;Dimmer_B1.c: 1069: setDimmerIntr_ControlStatus(lights, 0);
 11655  04DA  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11656  04DB  0864               	movf	setDimmerLights_OnOff@lights,w
 11657  04DC  3195  2519  3184   	fcall	_setDimmerIntr_ControlStatus
 11658                           
 11659                           ;Dimmer_B1.c: 1076: if (getDelayOff_GO(lights) == 1) {
 11660  04DF  0020               	movlb	0	; select bank0
 11661  04E0  0864               	movf	setDimmerLights_OnOff@lights,w
 11662  04E1  319D  258D  3184   	fcall	_getDelayOff_GO
 11663  04E4  3A01               	xorlw	1
 11664  04E5  1D03               	skipz
 11665  04E6  2CEE               	goto	l973
 11666                           
 11667                           ;Dimmer_B1.c: 1077: setDelayOff_GO(lights, 0, 0);
 11668  04E7  0020               	movlb	0	; select bank0
 11669  04E8  01D9               	clrf	setDelayOff_GO@command
 11670  04E9  01DA               	clrf	setDelayOff_GO@value
 11671  04EA  0864               	movf	setDimmerLights_OnOff@lights,w
 11672  04EB  318C  2488  3184   	fcall	_setDelayOff_GO
 11673  04EE                     l973:	
 11674                           
 11675                           ;Dimmer_B1.c: 1078: }
 11676                           ;Dimmer_B1.c: 1083: setLED(lights, 1);
 11677  04EE  01F3               	clrf	setLED@command
 11678  04EF  0AF3               	incf	setLED@command,f
 11679  04F0  0020               	movlb	0	; select bank0
 11680  04F1  0864               	movf	setDimmerLights_OnOff@lights,w
 11681  04F2  318C  2417  3184   	fcall	_setLED
 11682                           
 11683                           ;Dimmer_B1.c: 1088: if (lights == 1) {
 11684  04F5  0020               	movlb	0	; select bank0
 11685  04F6  0864               	movf	setDimmerLights_OnOff@lights,w
 11686  04F7  3A01               	xorlw	1
 11687  04F8  1D03               	skipz
 11688  04F9  2CFC               	goto	l10951
 11689                           
 11690                           ;Dimmer_B1.c: 1094: RB4 = 0;
 11691  04FA  120D               	bcf	13,4	;volatile
 11692                           
 11693                           ;Dimmer_B1.c: 1096: }
 11694  04FB  2D06               	goto	l10959
 11695  04FC                     l10951:	
 11696                           
 11697                           ;Dimmer_B1.c: 1099: else if (lights == 2) {
 11698  04FC  0864               	movf	setDimmerLights_OnOff@lights,w
 11699  04FD  3A02               	xorlw	2
 11700  04FE  1D03               	skipz
 11701  04FF  2D02               	goto	l10955
 11702                           
 11703                           ;Dimmer_B1.c: 1104: RA7 = 0;
 11704  0500  138C               	bcf	12,7	;volatile
 11705                           
 11706                           ;Dimmer_B1.c: 1106: }
 11707  0501  2D06               	goto	l10959
 11708  0502                     l10955:	
 11709                           
 11710                           ;Dimmer_B1.c: 1110: else if (lights == 3) {
 11711  0502  0864               	movf	setDimmerLights_OnOff@lights,w
 11712  0503  3A03               	xorlw	3
 11713  0504  1903               	btfsc	3,2
 11714                           
 11715                           ;Dimmer_B1.c: 1115: RB1 = 0;
 11716  0505  108D               	bcf	13,1	;volatile
 11717  0506                     l10959:	
 11718                           
 11719                           ;Dimmer_B1.c: 1117: }
 11720                           ;Dimmer_B1.c: 1122: }
 11721                           ;Dimmer_B1.c: 1124: setDimmerLights_DimmingClose();
 11722  0506  319D  259C  3184   	fcall	_setDimmerLights_DimmingClose
 11723                           
 11724                           ;Dimmer_B1.c: 1126: setRF_DimmerLights(lights, command);
 11725  0509  0020               	movlb	0	; select bank0
 11726  050A  0861               	movf	setDimmerLights_OnOff@command,w
 11727  050B  00E2               	movwf	??_setDimmerLights_OnOff
 11728  050C  0862               	movf	??_setDimmerLights_OnOff,w
 11729  050D  00D9               	movwf	setRF_DimmerLights@on
 11730  050E  0864               	movf	setDimmerLights_OnOff@lights,w
 11731  050F  318A  22E3  3184   	fcall	_setRF_DimmerLights
 11732                           
 11733                           ;Dimmer_B1.c: 1128: if (getCmd_Status(1) == 1) {
 11734  0512  3001               	movlw	1
 11735  0513  319E  2616  3184   	fcall	_getCmd_Status
 11736  0516  3A01               	xorlw	1
 11737  0517  1D03               	skipz
 11738  0518  2D33               	goto	l10975
 11739                           
 11740                           ;Dimmer_B1.c: 1129: if (getMain_All_LightsStatus() == 0) {
 11741  0519  319F  273B  3184   	fcall	_getMain_All_LightsStatus
 11742  051C  3800               	iorlw	0
 11743  051D  1D03               	skipz
 11744  051E  0008               	return
 11745                           
 11746                           ;Dimmer_B1.c: 1130: setCmd_Status(1, 0);
 11747  051F  01F2               	clrf	setCmd_Status@cmd
 11748  0520  3001               	movlw	1
 11749  0521  319E  26D2  3184   	fcall	_setCmd_Status
 11750                           
 11751                           ;Dimmer_B1.c: 1131: setProductData(11, 0);
 11752  0524  0020               	movlb	0	; select bank0
 11753  0525  01D6               	clrf	setProductData@value
 11754  0526  300B               	movlw	11
 11755  0527  319D  2530  3184   	fcall	_setProductData
 11756                           
 11757                           ;Dimmer_B1.c: 1132: setProductData(17, 0);
 11758  052A  0020               	movlb	0	; select bank0
 11759  052B  01D6               	clrf	setProductData@value
 11760  052C  3011               	movlw	17
 11761  052D  319D  2530  3184   	fcall	_setProductData
 11762                           
 11763                           ;Dimmer_B1.c: 1133: setTxData();
 11764  0530  319C  24D2         	fcall	_setTxData
 11765                           
 11766                           ;Dimmer_B1.c: 1134: }
 11767                           ;Dimmer_B1.c: 1135: } else {
 11768  0532  0008               	return
 11769  0533                     l10975:	
 11770                           
 11771                           ;Dimmer_B1.c: 1136: setTxData();
 11772  0533  319C  24D2         	fcall	_setTxData
 11773  0535  0008               	return
 11774  0536                     __end_of_setDimmerLights_OnOff:	
 11775                           
 11776                           	psect	text76
 11777  0C17                     __ptext76:	
 11778 ;; *************** function _setLED *****************
 11779 ;; Defined at:
 11780 ;;		line 81 in file "../src/LED_B1.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  led             1    wreg     unsigned char 
 11783 ;;  command         1    3[COMMON] unsigned char 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  led             1    4[COMMON] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;		None               void
 11788 ;; Registers used:
 11789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11795 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11799 ;;Total ram usage:        2 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    4
 11802 ;; This function calls:
 11803 ;;		_LedPointSelect
 11804 ;; This function is called by:
 11805 ;;		_setDimmerLights_OnOff
 11806 ;;		_setLED_Initialization
 11807 ;;		_Exception_Main
 11808 ;;		_setSw_Initialization
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           
 11813                           ;psect for function _setLED
 11814  0C17                     _setLED:	
 11815                           
 11816                           ;incstack = 0
 11817                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11818                           ;setLED@led stored from wreg
 11819  0C17  00F4               	movwf	setLED@led
 11820                           
 11821                           ;LED_B1.c: 82: LedPointSelect(led);
 11822  0C18  0874               	movf	setLED@led,w
 11823  0C19  3192  225C  318C   	fcall	_LedPointSelect
 11824                           
 11825                           ;LED_B1.c: 83: if (command == 0) {
 11826  0C1C  08F3               	movf	setLED@command,f
 11827  0C1D  1D03               	skipz
 11828  0C1E  2C37               	goto	l10711
 11829                           
 11830                           ;LED_B1.c: 85: if (led == 1) {
 11831  0C1F  0874               	movf	setLED@led,w
 11832  0C20  3A01               	xorlw	1
 11833  0C21  1D03               	skipz
 11834  0C22  2C25               	goto	l10699
 11835                           
 11836                           ;LED_B1.c: 89: RC7 = 1;
 11837  0C23  0020               	movlb	0	; select bank0
 11838  0C24  178E               	bsf	14,7	;volatile
 11839  0C25                     l10699:	
 11840                           
 11841                           ;LED_B1.c: 91: }
 11842                           ;LED_B1.c: 94: if (led == 2) {
 11843  0C25  0874               	movf	setLED@led,w
 11844  0C26  3A02               	xorlw	2
 11845  0C27  1D03               	skipz
 11846  0C28  2C2B               	goto	l10703
 11847                           
 11848                           ;LED_B1.c: 98: RA3 = 1;
 11849  0C29  0020               	movlb	0	; select bank0
 11850  0C2A  158C               	bsf	12,3	;volatile
 11851  0C2B                     l10703:	
 11852                           
 11853                           ;LED_B1.c: 100: }
 11854                           ;LED_B1.c: 103: if (led == 3) {
 11855  0C2B  0874               	movf	setLED@led,w
 11856  0C2C  3A03               	xorlw	3
 11857  0C2D  1D03               	skipz
 11858  0C2E  2C31               	goto	l10707
 11859                           
 11860                           ;LED_B1.c: 107: RC6 = 1;
 11861  0C2F  0020               	movlb	0	; select bank0
 11862  0C30  170E               	bsf	14,6	;volatile
 11863  0C31                     l10707:	
 11864                           
 11865                           ;LED_B1.c: 109: }
 11866                           ;LED_B1.c: 112: if (led == 99) {
 11867  0C31  0874               	movf	setLED@led,w
 11868  0C32  3A63               	xorlw	99
 11869  0C33  1D03               	skipz
 11870  0C34  2C37               	goto	l10711
 11871                           
 11872                           ;LED_B1.c: 116: RB5 = 1;
 11873  0C35  0020               	movlb	0	; select bank0
 11874  0C36  168D               	bsf	13,5	;volatile
 11875  0C37                     l10711:	
 11876                           
 11877                           ;LED_B1.c: 118: }
 11878                           ;LED_B1.c: 120: }
 11879                           ;LED_B1.c: 121: if (command == 1) {
 11880  0C37  0873               	movf	setLED@command,w
 11881  0C38  3A01               	xorlw	1
 11882  0C39  1D03               	skipz
 11883  0C3A  2C53               	goto	l10729
 11884                           
 11885                           ;LED_B1.c: 123: if (led == 1) {
 11886  0C3B  0874               	movf	setLED@led,w
 11887  0C3C  3A01               	xorlw	1
 11888  0C3D  1D03               	skipz
 11889  0C3E  2C41               	goto	l10717
 11890                           
 11891                           ;LED_B1.c: 127: RC7 = 0;
 11892  0C3F  0020               	movlb	0	; select bank0
 11893  0C40  138E               	bcf	14,7	;volatile
 11894  0C41                     l10717:	
 11895                           
 11896                           ;LED_B1.c: 129: }
 11897                           ;LED_B1.c: 132: if (led == 2) {
 11898  0C41  0874               	movf	setLED@led,w
 11899  0C42  3A02               	xorlw	2
 11900  0C43  1D03               	skipz
 11901  0C44  2C47               	goto	l10721
 11902                           
 11903                           ;LED_B1.c: 136: RA3 = 0;
 11904  0C45  0020               	movlb	0	; select bank0
 11905  0C46  118C               	bcf	12,3	;volatile
 11906  0C47                     l10721:	
 11907                           
 11908                           ;LED_B1.c: 138: }
 11909                           ;LED_B1.c: 141: if (led == 3) {
 11910  0C47  0874               	movf	setLED@led,w
 11911  0C48  3A03               	xorlw	3
 11912  0C49  1D03               	skipz
 11913  0C4A  2C4D               	goto	l10725
 11914                           
 11915                           ;LED_B1.c: 145: RC6 = 0;
 11916  0C4B  0020               	movlb	0	; select bank0
 11917  0C4C  130E               	bcf	14,6	;volatile
 11918  0C4D                     l10725:	
 11919                           
 11920                           ;LED_B1.c: 147: }
 11921                           ;LED_B1.c: 150: if (led == 99) {
 11922  0C4D  0874               	movf	setLED@led,w
 11923  0C4E  3A63               	xorlw	99
 11924  0C4F  1D03               	skipz
 11925  0C50  2C53               	goto	l10729
 11926                           
 11927                           ;LED_B1.c: 154: RB5 = 0;
 11928  0C51  0020               	movlb	0	; select bank0
 11929  0C52  128D               	bcf	13,5	;volatile
 11930  0C53                     l10729:	
 11931                           
 11932                           ;LED_B1.c: 156: }
 11933                           ;LED_B1.c: 158: }
 11934                           ;LED_B1.c: 159: if (command == 10) {
 11935  0C53  0873               	movf	setLED@command,w
 11936  0C54  3A0A               	xorlw	10
 11937  0C55  1D03               	skipz
 11938  0C56  2C7E               	goto	l10749
 11939                           
 11940                           ;LED_B1.c: 160: LED->GO = 0;
 11941  0C57  087A               	movf	_LED,w
 11942  0C58  0086               	movwf	6
 11943  0C59  087B               	movf	_LED+1,w
 11944  0C5A  0087               	movwf	7
 11945  0C5B  1081               	bcf	1,1
 11946                           
 11947                           ;LED_B1.c: 161: LED->Time = 0;
 11948  0C5C  087A               	movf	_LED,w
 11949  0C5D  0086               	movwf	6
 11950  0C5E  087B               	movf	_LED+1,w
 11951  0C5F  0087               	movwf	7
 11952  0C60  3141               	addfsr 1,1
 11953  0C61  3000               	movlw	0
 11954  0C62  3FC0               	movwi [0]fsr1
 11955  0C63  3FC1               	movwi [1]fsr1
 11956                           
 11957                           ;LED_B1.c: 163: if (led == 1) {
 11958  0C64  0874               	movf	setLED@led,w
 11959  0C65  3A01               	xorlw	1
 11960  0C66  1D03               	skipz
 11961  0C67  2C6B               	goto	l10737
 11962                           
 11963                           ;LED_B1.c: 167: RC7 = 1;
 11964  0C68  0020               	movlb	0	; select bank0
 11965  0C69  178E               	bsf	14,7	;volatile
 11966                           
 11967                           ;LED_B1.c: 169: }
 11968  0C6A  2C78               	goto	l10745
 11969  0C6B                     l10737:	
 11970                           
 11971                           ;LED_B1.c: 172: else if (led == 2) {
 11972  0C6B  0874               	movf	setLED@led,w
 11973  0C6C  3A02               	xorlw	2
 11974  0C6D  1D03               	skipz
 11975  0C6E  2C72               	goto	l10741
 11976                           
 11977                           ;LED_B1.c: 176: RA3 = 1;
 11978  0C6F  0020               	movlb	0	; select bank0
 11979  0C70  158C               	bsf	12,3	;volatile
 11980                           
 11981                           ;LED_B1.c: 178: }
 11982  0C71  2C78               	goto	l10745
 11983  0C72                     l10741:	
 11984                           
 11985                           ;LED_B1.c: 181: else if (led == 3) {
 11986  0C72  0874               	movf	setLED@led,w
 11987  0C73  3A03               	xorlw	3
 11988  0C74  1D03               	skipz
 11989  0C75  2C78               	goto	l10745
 11990                           
 11991                           ;LED_B1.c: 185: RC6 = 1;
 11992  0C76  0020               	movlb	0	; select bank0
 11993  0C77  170E               	bsf	14,6	;volatile
 11994  0C78                     l10745:	
 11995                           
 11996                           ;LED_B1.c: 187: }
 11997                           ;LED_B1.c: 190: if (led == 99) {
 11998  0C78  0874               	movf	setLED@led,w
 11999  0C79  3A63               	xorlw	99
 12000  0C7A  1D03               	skipz
 12001  0C7B  2C7E               	goto	l10749
 12002                           
 12003                           ;LED_B1.c: 194: RB5 = 1;
 12004  0C7C  0020               	movlb	0	; select bank0
 12005  0C7D  168D               	bsf	13,5	;volatile
 12006  0C7E                     l10749:	
 12007                           
 12008                           ;LED_B1.c: 196: }
 12009                           ;LED_B1.c: 198: }
 12010                           ;LED_B1.c: 199: if (command == 11) {
 12011  0C7E  0873               	movf	setLED@command,w
 12012  0C7F  3A0B               	xorlw	11
 12013  0C80  1D03               	skipz
 12014  0C81  0008               	return
 12015                           
 12016                           ;LED_B1.c: 200: LED->GO = 1;
 12017  0C82  087A               	movf	_LED,w
 12018  0C83  0086               	movwf	6
 12019  0C84  087B               	movf	_LED+1,w
 12020  0C85  0087               	movwf	7
 12021  0C86  1481               	bsf	1,1
 12022  0C87  0008               	return
 12023  0C88                     __end_of_setLED:	
 12024                           
 12025                           	psect	text77
 12026  125C                     __ptext77:	
 12027 ;; *************** function _LedPointSelect *****************
 12028 ;; Defined at:
 12029 ;;		line 7 in file "../src/LED_B1.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  led             1    wreg     unsigned char 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;  led             1    2[COMMON] unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;		None               void
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;Total ram usage:        1 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    3
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		_setLED_Initialization
 12054 ;;		_setLED
 12055 ;;		_setLED_Main
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _LedPointSelect
 12061  125C                     _LedPointSelect:	
 12062                           
 12063                           ;incstack = 0
 12064                           ; Regs used in _LedPointSelect: [wreg+status,2+status,0]
 12065                           ;LedPointSelect@led stored from wreg
 12066  125C  00F2               	movwf	LedPointSelect@led
 12067                           
 12068                           ;LED_B1.c: 9: if (led == 1) {
 12069  125D  0872               	movf	LedPointSelect@led,w
 12070  125E  3A01               	xorlw	1
 12071  125F  1D03               	skipz
 12072  1260  2A65               	goto	l10509
 12073                           
 12074                           ;LED_B1.c: 10: LED = &VarLED1;
 12075  1261  30EC               	movlw	low _VarLED1
 12076  1262  00FA               	movwf	_LED
 12077  1263  3000               	movlw	high _VarLED1
 12078  1264  00FB               	movwf	_LED+1
 12079  1265                     l10509:	
 12080                           
 12081                           ;LED_B1.c: 11: }
 12082                           ;LED_B1.c: 14: if (led == 2) {
 12083  1265  0872               	movf	LedPointSelect@led,w
 12084  1266  3A02               	xorlw	2
 12085  1267  1D03               	skipz
 12086  1268  2A6D               	goto	l10513
 12087                           
 12088                           ;LED_B1.c: 15: LED = &VarLED2;
 12089  1269  30E8               	movlw	low _VarLED2
 12090  126A  00FA               	movwf	_LED
 12091  126B  3001               	movlw	high _VarLED2
 12092  126C  00FB               	movwf	_LED+1
 12093  126D                     l10513:	
 12094                           
 12095                           ;LED_B1.c: 16: }
 12096                           ;LED_B1.c: 19: if (led == 3) {
 12097  126D  0872               	movf	LedPointSelect@led,w
 12098  126E  3A03               	xorlw	3
 12099  126F  1D03               	skipz
 12100  1270  2A75               	goto	l10517
 12101                           
 12102                           ;LED_B1.c: 20: LED = &VarLED3;
 12103  1271  30EC               	movlw	low _VarLED3
 12104  1272  00FA               	movwf	_LED
 12105  1273  3001               	movlw	high _VarLED3
 12106  1274  00FB               	movwf	_LED+1
 12107  1275                     l10517:	
 12108                           
 12109                           ;LED_B1.c: 21: }
 12110                           ;LED_B1.c: 24: if (led == 99) {
 12111  1275  0872               	movf	LedPointSelect@led,w
 12112  1276  3A63               	xorlw	99
 12113  1277  1D03               	skipz
 12114  1278  0008               	return
 12115                           
 12116                           ;LED_B1.c: 25: LED = &VarErrLED;
 12117  1279  30E8               	movlw	low _VarErrLED
 12118  127A  00FA               	movwf	_LED
 12119  127B  3000               	movlw	high _VarErrLED
 12120  127C  00FB               	movwf	_LED+1
 12121  127D  0008               	return
 12122  127E                     __end_of_LedPointSelect:	
 12123                           
 12124                           	psect	text78
 12125  1D9C                     __ptext78:	
 12126 ;; *************** function _setDimmerLights_DimmingClose *****************
 12127 ;; Defined at:
 12128 ;;		line 2043 in file "../src/Dimmer_B1.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;		None               void
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, pclath, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used:    1
 12148 ;; Hardware stack levels required when called:    4
 12149 ;; This function calls:
 12150 ;;		_setDimmerIntr_Dimming_Sw
 12151 ;; This function is called by:
 12152 ;;		_setDimmerLights_OnOff
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           
 12157                           ;psect for function _setDimmerLights_DimmingClose
 12158  1D9C                     _setDimmerLights_DimmingClose:	
 12159                           
 12160                           ;Dimmer_B1.c: 2045: setDimmerIntr_Dimming_Sw(1, 0);
 12161                           
 12162                           ;incstack = 0
 12163                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 12164  1D9C  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12165  1D9D  3001               	movlw	1
 12166  1D9E  3193  23C4  319D   	fcall	_setDimmerIntr_Dimming_Sw
 12167                           
 12168                           ;Dimmer_B1.c: 2049: setDimmerIntr_Dimming_Sw(2, 0);
 12169  1DA1  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12170  1DA2  3002               	movlw	2
 12171  1DA3  3193  23C4  319D   	fcall	_setDimmerIntr_Dimming_Sw
 12172                           
 12173                           ;Dimmer_B1.c: 2053: setDimmerIntr_Dimming_Sw(3, 0);
 12174  1DA6  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 12175  1DA7  3003               	movlw	3
 12176  1DA8  3193  23C4         	fcall	_setDimmerIntr_Dimming_Sw
 12177  1DAA  0008               	return
 12178  1DAB                     __end_of_setDimmerLights_DimmingClose:	
 12179                           
 12180                           	psect	text79
 12181  1556                     __ptext79:	
 12182 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 12183 ;; Defined at:
 12184 ;;		line 290 in file "../src/Dimmer_B1.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  lights          1    wreg     unsigned char 
 12187 ;;  command         1    2[COMMON] unsigned char 
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;  lights          1    4[COMMON] unsigned char 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;		None               void
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12199 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;Total ram usage:        3 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    3
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_setDimmerLights_OnOff
 12210 ;;		_setRFSW_AdjControl
 12211 ;;		_DimmerLights_AssignationDimming
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           
 12216                           ;psect for function _setDimmerIntr_Dimming_RF
 12217  1556                     _setDimmerIntr_Dimming_RF:	
 12218                           
 12219                           ;incstack = 0
 12220                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 12221                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 12222  1556  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 12223                           
 12224                           ;Dimmer_B1.c: 292: if (lights == 1) {
 12225  1557  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12226  1558  3A01               	xorlw	1
 12227  1559  1D03               	skipz
 12228  155A  2D6B               	goto	l6699
 12229                           
 12230                           ;Dimmer_B1.c: 293: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 12231  155B  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12232  155C  3A01               	xorlw	1
 12233  155D  3000               	movlw	0
 12234  155E  1903               	skipnz
 12235  155F  3001               	movlw	1
 12236  1560  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12237  1561  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12238  1562  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12239  1563  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12240  1564  0021               	movlb	1	; select bank1
 12241  1565  0820               	movf	_DimmerIntr1^(0+128),w
 12242  1566  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12243  1567  39BF               	andlw	-65
 12244  1568  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12245  1569  00A0               	movwf	_DimmerIntr1^(0+128)
 12246                           
 12247                           ;Dimmer_B1.c: 294: }
 12248  156A  0008               	return
 12249  156B                     l6699:	
 12250                           
 12251                           ;Dimmer_B1.c: 297: else if (lights == 2) {
 12252  156B  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12253  156C  3A02               	xorlw	2
 12254  156D  1D03               	skipz
 12255  156E  2D7F               	goto	l6703
 12256                           
 12257                           ;Dimmer_B1.c: 298: DimmerIntr2.Dimming_RF = command == 1 ? 1 : 0;
 12258  156F  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12259  1570  3A01               	xorlw	1
 12260  1571  3000               	movlw	0
 12261  1572  1903               	skipnz
 12262  1573  3001               	movlw	1
 12263  1574  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12264  1575  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12265  1576  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12266  1577  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12267  1578  0022               	movlb	2	; select bank2
 12268  1579  083E               	movf	_DimmerIntr2^(0+256),w
 12269  157A  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12270  157B  39BF               	andlw	-65
 12271  157C  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12272  157D  00BE               	movwf	_DimmerIntr2^(0+256)
 12273                           
 12274                           ;Dimmer_B1.c: 299: }
 12275  157E  0008               	return
 12276  157F                     l6703:	
 12277                           
 12278                           ;Dimmer_B1.c: 302: else if (lights == 3) {
 12279  157F  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12280  1580  3A03               	xorlw	3
 12281  1581  1D03               	skipz
 12282  1582  0008               	return
 12283                           
 12284                           ;Dimmer_B1.c: 303: DimmerIntr3.Dimming_RF = command == 1 ? 1 : 0;
 12285  1583  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12286  1584  3A01               	xorlw	1
 12287  1585  3000               	movlw	0
 12288  1586  1903               	skipnz
 12289  1587  3001               	movlw	1
 12290  1588  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12291  1589  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12292  158A  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12293  158B  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12294  158C  0022               	movlb	2	; select bank2
 12295  158D  084E               	movf	_DimmerIntr3^(0+256),w
 12296  158E  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12297  158F  39BF               	andlw	-65
 12298  1590  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12299  1591  00CE               	movwf	_DimmerIntr3^(0+256)
 12300  1592  0008               	return
 12301  1593                     __end_of_setDimmerIntr_Dimming_RF:	
 12302                           
 12303                           	psect	text80
 12304  123A                     __ptext80:	
 12305 ;; *************** function _setDimmerIntr_DimmingValue *****************
 12306 ;; Defined at:
 12307 ;;		line 137 in file "../src/Dimmer_B1.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  lights          1    wreg     unsigned char 
 12310 ;;  value           1   56[BANK0 ] unsigned char 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;  lights          1   58[BANK0 ] unsigned char 
 12313 ;; Return value:  Size  Location     Type
 12314 ;;		None               void
 12315 ;; Registers used:
 12316 ;;		wreg
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12322 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;Total ram usage:        3 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    3
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_setDimmerLights_OnOff
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _setDimmerIntr_DimmingValue
 12338  123A                     _setDimmerIntr_DimmingValue:	
 12339                           
 12340                           ;incstack = 0
 12341                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 12342                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 12343  123A  0020               	movlb	0	; select bank0
 12344  123B  00DA               	movwf	setDimmerIntr_DimmingValue@lights
 12345                           
 12346                           ;Dimmer_B1.c: 139: if (lights == 1) {
 12347  123C  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12348  123D  3A01               	xorlw	1
 12349  123E  1D03               	skipz
 12350  123F  2A46               	goto	l7047
 12351                           
 12352                           ;Dimmer_B1.c: 140: DimmerIntr1.DimmingValue = value;
 12353  1240  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12354  1241  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12355  1242  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12356  1243  0021               	movlb	1	; select bank1
 12357  1244  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 12358                           
 12359                           ;Dimmer_B1.c: 141: }
 12360  1245  0008               	return
 12361  1246                     l7047:	
 12362                           
 12363                           ;Dimmer_B1.c: 144: else if (lights == 2) {
 12364  1246  0020               	movlb	0	; select bank0
 12365  1247  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12366  1248  3A02               	xorlw	2
 12367  1249  1D03               	skipz
 12368  124A  2A51               	goto	l7051
 12369                           
 12370                           ;Dimmer_B1.c: 145: DimmerIntr2.DimmingValue = value;
 12371  124B  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12372  124C  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12373  124D  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12374  124E  0022               	movlb	2	; select bank2
 12375  124F  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 12376                           
 12377                           ;Dimmer_B1.c: 146: }
 12378  1250  0008               	return
 12379  1251                     l7051:	
 12380                           
 12381                           ;Dimmer_B1.c: 149: else if (lights == 3) {
 12382  1251  0020               	movlb	0	; select bank0
 12383  1252  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12384  1253  3A03               	xorlw	3
 12385  1254  1D03               	skipz
 12386  1255  0008               	return
 12387                           
 12388                           ;Dimmer_B1.c: 150: DimmerIntr3.DimmingValue = value;
 12389  1256  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12390  1257  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12391  1258  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12392  1259  0022               	movlb	2	; select bank2
 12393  125A  00D3               	movwf	(_DimmerIntr3^(0+256)+5)
 12394  125B  0008               	return
 12395  125C                     __end_of_setDimmerIntr_DimmingValue:	
 12396                           
 12397                           	psect	text81
 12398  1519                     __ptext81:	
 12399 ;; *************** function _setDimmerIntr_ControlStatus *****************
 12400 ;; Defined at:
 12401 ;;		line 119 in file "../src/Dimmer_B1.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  lights          1    wreg     unsigned char 
 12404 ;;  command         1    2[COMMON] unsigned char 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  lights          1    4[COMMON] unsigned char 
 12407 ;; Return value:  Size  Location     Type
 12408 ;;		None               void
 12409 ;; Registers used:
 12410 ;;		wreg, status,2, status,0
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;Total ram usage:        3 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:    3
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_setDimmerLights_OnOff
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function _setDimmerIntr_ControlStatus
 12432  1519                     _setDimmerIntr_ControlStatus:	
 12433                           
 12434                           ;incstack = 0
 12435                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 12436                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 12437  1519  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 12438                           
 12439                           ;Dimmer_B1.c: 121: if (lights == 1) {
 12440  151A  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12441  151B  3A01               	xorlw	1
 12442  151C  1D03               	skipz
 12443  151D  2D2E               	goto	l7035
 12444                           
 12445                           ;Dimmer_B1.c: 122: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 12446  151E  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12447  151F  3A01               	xorlw	1
 12448  1520  3000               	movlw	0
 12449  1521  1903               	skipnz
 12450  1522  3001               	movlw	1
 12451  1523  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12452  1524  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12453  1525  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12454  1526  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12455  1527  0021               	movlb	1	; select bank1
 12456  1528  0820               	movf	_DimmerIntr1^(0+128),w
 12457  1529  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12458  152A  39F7               	andlw	-9
 12459  152B  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12460  152C  00A0               	movwf	_DimmerIntr1^(0+128)
 12461                           
 12462                           ;Dimmer_B1.c: 123: }
 12463  152D  0008               	return
 12464  152E                     l7035:	
 12465                           
 12466                           ;Dimmer_B1.c: 126: else if (lights == 2) {
 12467  152E  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12468  152F  3A02               	xorlw	2
 12469  1530  1D03               	skipz
 12470  1531  2D42               	goto	l7039
 12471                           
 12472                           ;Dimmer_B1.c: 127: DimmerIntr2.ControlStatus = command == 1 ? 1 : 0;
 12473  1532  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12474  1533  3A01               	xorlw	1
 12475  1534  3000               	movlw	0
 12476  1535  1903               	skipnz
 12477  1536  3001               	movlw	1
 12478  1537  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12479  1538  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12480  1539  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12481  153A  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12482  153B  0022               	movlb	2	; select bank2
 12483  153C  083E               	movf	_DimmerIntr2^(0+256),w
 12484  153D  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12485  153E  39F7               	andlw	-9
 12486  153F  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12487  1540  00BE               	movwf	_DimmerIntr2^(0+256)
 12488                           
 12489                           ;Dimmer_B1.c: 128: }
 12490  1541  0008               	return
 12491  1542                     l7039:	
 12492                           
 12493                           ;Dimmer_B1.c: 131: else if (lights == 3) {
 12494  1542  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12495  1543  3A03               	xorlw	3
 12496  1544  1D03               	skipz
 12497  1545  0008               	return
 12498                           
 12499                           ;Dimmer_B1.c: 132: DimmerIntr3.ControlStatus = command == 1 ? 1 : 0;
 12500  1546  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12501  1547  3A01               	xorlw	1
 12502  1548  3000               	movlw	0
 12503  1549  1903               	skipnz
 12504  154A  3001               	movlw	1
 12505  154B  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12506  154C  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12507  154D  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12508  154E  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12509  154F  0022               	movlb	2	; select bank2
 12510  1550  084E               	movf	_DimmerIntr3^(0+256),w
 12511  1551  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12512  1552  39F7               	andlw	-9
 12513  1553  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12514  1554  00CE               	movwf	_DimmerIntr3^(0+256)
 12515  1555  0008               	return
 12516  1556                     __end_of_setDimmerIntr_ControlStatus:	
 12517                           
 12518                           	psect	text82
 12519  0C88                     __ptext82:	
 12520 ;; *************** function _setDelayOff_GO *****************
 12521 ;; Defined at:
 12522 ;;		line 87 in file "../src/DelayOff_B1.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  sw              1    wreg     unsigned char 
 12525 ;;  command         1   57[BANK0 ] unsigned char 
 12526 ;;  value           1   58[BANK0 ] unsigned char 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  sw              1   64[BANK0 ] unsigned char 
 12529 ;;  k               1   63[BANK0 ] unsigned char 
 12530 ;;  j               1   62[BANK0 ] unsigned char 
 12531 ;;  i               1   61[BANK0 ] unsigned char 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;		None               void
 12534 ;; Registers used:
 12535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/0
 12538 ;;		On exit  : 0/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;Total ram usage:        8 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:    4
 12548 ;; This function calls:
 12549 ;;		_DelayOffPointSelect
 12550 ;;		___bmul
 12551 ;;		_setProductData
 12552 ;; This function is called by:
 12553 ;;		_setDimmerLights_OnOff
 12554 ;;		_setRFSW_Control
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           
 12559                           ;psect for function _setDelayOff_GO
 12560  0C88                     _setDelayOff_GO:	
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12564                           ;setDelayOff_GO@sw stored from wreg
 12565  0C88  0020               	movlb	0	; select bank0
 12566  0C89  00E0               	movwf	setDelayOff_GO@sw
 12567                           
 12568                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 12569  0C8A  0860               	movf	setDelayOff_GO@sw,w
 12570  0C8B  3190  20F7  318C   	fcall	_DelayOffPointSelect
 12571                           
 12572                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 12573  0C8E  0020               	movlb	0	; select bank0
 12574  0C8F  0859               	movf	setDelayOff_GO@command,w
 12575  0C90  3A01               	xorlw	1
 12576  0C91  3000               	movlw	0
 12577  0C92  1903               	skipnz
 12578  0C93  3001               	movlw	1
 12579  0C94  00DB               	movwf	??_setDelayOff_GO
 12580  0C95  0869               	movf	_DelayOff,w
 12581  0C96  0086               	movwf	6
 12582  0C97  3001               	movlw	1	; select bank2/3
 12583  0C98  0087               	movwf	7
 12584  0C99  0DDB               	rlf	??_setDelayOff_GO,f
 12585  0C9A  0801               	movf	1,w
 12586  0C9B  065B               	xorwf	??_setDelayOff_GO,w
 12587  0C9C  39FD               	andlw	-3
 12588  0C9D  065B               	xorwf	??_setDelayOff_GO,w
 12589  0C9E  0081               	movwf	1
 12590                           
 12591                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 12592  0C9F  0869               	movf	_DelayOff,w
 12593  0CA0  3E02               	addlw	2
 12594  0CA1  0086               	movwf	6
 12595  0CA2  3001               	movlw	1	; select bank2/3
 12596  0CA3  0087               	movwf	7
 12597  0CA4  3000               	movlw	0
 12598  0CA5  3FC0               	movwi [0]fsr1
 12599  0CA6  3FC1               	movwi [1]fsr1
 12600                           
 12601                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 12602  0CA7  0869               	movf	_DelayOff,w
 12603  0CA8  3E04               	addlw	4
 12604  0CA9  0086               	movwf	6
 12605  0CAA  3001               	movlw	1	; select bank2/3
 12606  0CAB  0087               	movwf	7
 12607  0CAC  0181               	clrf	1
 12608                           
 12609                           ;DelayOff_B1.c: 94: if (command == 1) {
 12610  0CAD  0859               	movf	setDelayOff_GO@command,w
 12611  0CAE  3A01               	xorlw	1
 12612  0CAF  1D03               	skipz
 12613  0CB0  2D02               	goto	l6667
 12614                           
 12615                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 12616  0CB1  3005               	movlw	5
 12617  0CB2  00DB               	movwf	??_setDelayOff_GO
 12618  0CB3  085B               	movf	??_setDelayOff_GO,w
 12619  0CB4  00DD               	movwf	setDelayOff_GO@i
 12620  0CB5  01DE               	clrf	setDelayOff_GO@j
 12621  0CB6  01DF               	clrf	setDelayOff_GO@k
 12622                           
 12623                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 12624  0CB7  300F               	movlw	15
 12625  0CB8  055A               	andwf	setDelayOff_GO@value,w
 12626  0CB9  00DB               	movwf	??_setDelayOff_GO
 12627  0CBA  085B               	movf	??_setDelayOff_GO,w
 12628  0CBB  3A05               	xorlw	5
 12629  0CBC  1903               	skipnz
 12630  0CBD  2CC2               	goto	l6653
 12631  0CBE  085A               	movf	setDelayOff_GO@value,w
 12632  0CBF  390F               	andlw	15
 12633  0CC0  1D03               	btfss	3,2
 12634  0CC1  2CF0               	goto	l6663
 12635  0CC2                     l6653:	
 12636  0CC2  3031               	movlw	49
 12637  0CC3  025A               	subwf	setDelayOff_GO@value,w
 12638  0CC4  1803               	skipnc
 12639  0CC5  2CF0               	goto	l6663
 12640                           
 12641                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 12642  0CC6  085A               	movf	setDelayOff_GO@value,w
 12643  0CC7  390F               	andlw	15
 12644  0CC8  00DB               	movwf	??_setDelayOff_GO
 12645  0CC9  085B               	movf	??_setDelayOff_GO,w
 12646  0CCA  00DE               	movwf	setDelayOff_GO@j
 12647                           
 12648                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 12649  0CCB  085A               	movf	setDelayOff_GO@value,w
 12650  0CCC  00DB               	movwf	??_setDelayOff_GO
 12651  0CCD  3004               	movlw	4
 12652  0CCE                     u6005:	
 12653  0CCE  36DB               	lsrf	??_setDelayOff_GO,f
 12654  0CCF  0B89               	decfsz	9,f
 12655  0CD0  2CCE               	goto	u6005
 12656  0CD1  085B               	movf	??_setDelayOff_GO,w
 12657  0CD2  390F               	andlw	15
 12658  0CD3  00DC               	movwf	??_setDelayOff_GO+1
 12659  0CD4  085C               	movf	??_setDelayOff_GO+1,w
 12660  0CD5  00DF               	movwf	setDelayOff_GO@k
 12661                           
 12662                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 12663  0CD6  300A               	movlw	10
 12664  0CD7  00DB               	movwf	??_setDelayOff_GO
 12665  0CD8  085B               	movf	??_setDelayOff_GO,w
 12666  0CD9  00F2               	movwf	___bmul@multiplicand
 12667  0CDA  085F               	movf	setDelayOff_GO@k,w
 12668  0CDB  319E  2676  318C   	fcall	___bmul
 12669  0CDE  0020               	movlb	0	; select bank0
 12670  0CDF  075E               	addwf	setDelayOff_GO@j,w
 12671  0CE0  00DC               	movwf	??_setDelayOff_GO+1
 12672  0CE1  0A69               	incf	_DelayOff,w
 12673  0CE2  0086               	movwf	6
 12674  0CE3  3001               	movlw	1	; select bank2/3
 12675  0CE4  0087               	movwf	7
 12676  0CE5  085C               	movf	??_setDelayOff_GO+1,w
 12677  0CE6  0081               	movwf	1
 12678                           
 12679                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 12680  0CE7  085A               	movf	setDelayOff_GO@value,w
 12681  0CE8  00DB               	movwf	??_setDelayOff_GO
 12682  0CE9  085B               	movf	??_setDelayOff_GO,w
 12683  0CEA  00D6               	movwf	setProductData@value
 12684  0CEB  0860               	movf	setDelayOff_GO@sw,w
 12685  0CEC  3E1A               	addlw	26
 12686  0CED  319D  2530         	fcall	_setProductData
 12687                           
 12688                           ;DelayOff_B1.c: 103: } else {
 12689  0CEF  0008               	return
 12690  0CF0                     l6663:	
 12691                           
 12692                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 12693  0CF0  3005               	movlw	5
 12694  0CF1  0020               	movlb	0	; select bank0
 12695  0CF2  00DB               	movwf	??_setDelayOff_GO
 12696  0CF3  0A69               	incf	_DelayOff,w
 12697  0CF4  0086               	movwf	6
 12698  0CF5  3001               	movlw	1	; select bank2/3
 12699  0CF6  0087               	movwf	7
 12700  0CF7  085B               	movf	??_setDelayOff_GO,w
 12701  0CF8  0081               	movwf	1
 12702                           
 12703                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 12704  0CF9  3005               	movlw	5
 12705  0CFA  00DB               	movwf	??_setDelayOff_GO
 12706  0CFB  085B               	movf	??_setDelayOff_GO,w
 12707  0CFC  00D6               	movwf	setProductData@value
 12708  0CFD  0860               	movf	setDelayOff_GO@sw,w
 12709  0CFE  3E1A               	addlw	26
 12710  0CFF  319D  2530         	fcall	_setProductData
 12711                           
 12712                           ;DelayOff_B1.c: 106: }
 12713                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 12714  0D01  0008               	return
 12715  0D02                     l6667:	
 12716  0D02  0020               	movlb	0	; select bank0
 12717  0D03  08D9               	movf	setDelayOff_GO@command,f
 12718  0D04  1D03               	skipz
 12719  0D05  0008               	return
 12720                           
 12721                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 12722  0D06  01D6               	clrf	setProductData@value
 12723  0D07  0860               	movf	setDelayOff_GO@sw,w
 12724  0D08  3E1A               	addlw	26
 12725  0D09  319D  2530         	fcall	_setProductData
 12726  0D0B  0008               	return
 12727  0D0C                     __end_of_setDelayOff_GO:	
 12728                           
 12729                           	psect	text83
 12730  1E76                     __ptext83:	
 12731 ;; *************** function ___bmul *****************
 12732 ;; Defined at:
 12733 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  multiplier      1    wreg     unsigned char 
 12736 ;;  multiplicand    1    2[COMMON] unsigned char 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  multiplier      1    5[COMMON] unsigned char 
 12739 ;;  product         1    4[COMMON] unsigned char 
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      unsigned char 
 12742 ;; Registers used:
 12743 ;;		wreg, status,2, status,0
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;Total ram usage:        4 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    3
 12756 ;; This function calls:
 12757 ;;		Nothing
 12758 ;; This function is called by:
 12759 ;;		_setDelayOff_GO
 12760 ;;		_DelayTimejudge
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           
 12764                           
 12765                           ;psect for function ___bmul
 12766  1E76                     ___bmul:	
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12770                           ;___bmul@multiplier stored from wreg
 12771  1E76  00F5               	movwf	___bmul@multiplier
 12772  1E77  01F4               	clrf	___bmul@product
 12773  1E78                     l6289:	
 12774  1E78  1C75               	btfss	___bmul@multiplier,0
 12775  1E79  2E7E               	goto	l6293
 12776  1E7A  0872               	movf	___bmul@multiplicand,w
 12777  1E7B  00F3               	movwf	??___bmul
 12778  1E7C  0873               	movf	??___bmul,w
 12779  1E7D  07F4               	addwf	___bmul@product,f
 12780  1E7E                     l6293:	
 12781  1E7E  1003               	clrc
 12782  1E7F  0DF2               	rlf	___bmul@multiplicand,f
 12783  1E80  1003               	clrc
 12784  1E81  0CF5               	rrf	___bmul@multiplier,f
 12785  1E82  08F5               	movf	___bmul@multiplier,f
 12786  1E83  1D03               	skipz
 12787  1E84  2E78               	goto	l6289
 12788  1E85  0874               	movf	___bmul@product,w
 12789  1E86  0008               	return
 12790  1E87                     __end_of___bmul:	
 12791                           
 12792                           	psect	text84
 12793  1ED2                     __ptext84:	
 12794 ;; *************** function _setCmd_Status *****************
 12795 ;; Defined at:
 12796 ;;		line 656 in file "../src/Main_B1.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  number          1    wreg     unsigned char 
 12799 ;;  cmd             1    2[COMMON] unsigned char 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  number          1    4[COMMON] unsigned char 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;		None               void
 12804 ;; Registers used:
 12805 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;Total ram usage:        3 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:    3
 12818 ;; This function calls:
 12819 ;;		Nothing
 12820 ;; This function is called by:
 12821 ;;		_setDimmerLights_OnOff
 12822 ;;		_setControl_Lights_Table
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function _setCmd_Status
 12828  1ED2                     _setCmd_Status:	
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 12832                           ;setCmd_Status@number stored from wreg
 12833  1ED2  00F4               	movwf	setCmd_Status@number
 12834                           
 12835                           ;Main_B1.c: 657: switch (number) {
 12836  1ED3  2EE1               	goto	l6833
 12837  1ED4                     l6829:	
 12838                           ;Main_B1.c: 658: case 1:
 12839                           
 12840                           
 12841                           ;Main_B1.c: 659: Cmd.all_off = cmd == 1 ? 1 : 0;
 12842  1ED4  0872               	movf	setCmd_Status@cmd,w
 12843  1ED5  3A01               	xorlw	1
 12844  1ED6  3000               	movlw	0
 12845  1ED7  1903               	skipnz
 12846  1ED8  3001               	movlw	1
 12847  1ED9  00F3               	movwf	??_setCmd_Status
 12848  1EDA  0020               	movlb	0	; select bank0
 12849  1EDB  0868               	movf	_Cmd,w
 12850  1EDC  0673               	xorwf	??_setCmd_Status,w
 12851  1EDD  39FE               	andlw	-2
 12852  1EDE  0673               	xorwf	??_setCmd_Status,w
 12853  1EDF  00E8               	movwf	_Cmd
 12854                           
 12855                           ;Main_B1.c: 661: }
 12856                           
 12857                           ;Main_B1.c: 660: break;
 12858  1EE0  0008               	return
 12859  1EE1                     l6833:	
 12860  1EE1  0874               	movf	setCmd_Status@number,w
 12861                           
 12862                           ; Switch size 1, requested type "space"
 12863                           ; Number of cases is 1, Range of values is 1 to 1
 12864                           ; switch strategies available:
 12865                           ; Name         Instructions Cycles
 12866                           ; simple_byte            4     3 (average)
 12867                           ; direct_byte           11     9 (fixed)
 12868                           ; jumptable            263     9 (fixed)
 12869                           ;	Chosen strategy is simple_byte
 12870  1EE2  3A01               	xorlw	1	; case 1
 12871  1EE3  1903               	skipnz
 12872  1EE4  2ED4               	goto	l6829
 12873  1EE5  2EE6               	goto	l1840
 12874  1EE6                     l1840:	
 12875  1EE6  0008               	return
 12876  1EE7                     __end_of_setCmd_Status:	
 12877                           
 12878                           	psect	text85
 12879  1F3B                     __ptext85:	
 12880 ;; *************** function _getMain_All_LightsStatus *****************
 12881 ;; Defined at:
 12882 ;;		line 378 in file "../src/Main_B1.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  status          1    2[COMMON] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      unsigned char 
 12889 ;; Registers used:
 12890 ;;		wreg, status,2, status,0
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;Total ram usage:        1 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:    3
 12903 ;; This function calls:
 12904 ;;		Nothing
 12905 ;; This function is called by:
 12906 ;;		_setDimmerLights_Main
 12907 ;;		_setDimmerLights_OnOff
 12908 ;;		_Flash_Memory_Main
 12909 ;;		_setControl_Lights_Table
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           
 12914                           ;psect for function _getMain_All_LightsStatus
 12915  1F3B                     _getMain_All_LightsStatus:	
 12916                           
 12917                           ;Main_B1.c: 379: char status = 0;
 12918                           
 12919                           ;incstack = 0
 12920                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2+status,0]
 12921  1F3B  01F2               	clrf	getMain_All_LightsStatus@status
 12922                           
 12923                           ;Main_B1.c: 416: status = DimmerLights1.Status == 1 ? 1 : 0;
 12924  1F3C  3000               	movlw	0
 12925  1F3D  0022               	movlb	2	; select bank2
 12926  1F3E  185F               	btfsc	(_DimmerLights1^(0+256)+1),0
 12927  1F3F  3001               	movlw	1
 12928  1F40  00F2               	movwf	getMain_All_LightsStatus@status
 12929                           
 12930                           ;Main_B1.c: 417: if (status == 0) {
 12931  1F41  08F2               	movf	getMain_All_LightsStatus@status,f
 12932  1F42  1D03               	skipz
 12933  1F43  2F48               	goto	l9103
 12934                           
 12935                           ;Main_B1.c: 418: status = DimmerLights2.Status == 1 ? 1 : 0;
 12936  1F44  3000               	movlw	0
 12937  1F45  1868               	btfsc	(_DimmerLights2^(0+256)+1),0
 12938  1F46  3001               	movlw	1
 12939  1F47  00F2               	movwf	getMain_All_LightsStatus@status
 12940  1F48                     l9103:	
 12941                           
 12942                           ;Main_B1.c: 419: }
 12943                           ;Main_B1.c: 420: if (status == 0) {
 12944  1F48  08F2               	movf	getMain_All_LightsStatus@status,f
 12945  1F49  1D03               	skipz
 12946  1F4A  2F50               	goto	l9107
 12947                           
 12948                           ;Main_B1.c: 421: status = DimmerLights3.Status == 1 ? 1 : 0;
 12949  1F4B  3000               	movlw	0
 12950  1F4C  0023               	movlb	3	; select bank3
 12951  1F4D  1836               	btfsc	(_DimmerLights3^(0+384)+1),0
 12952  1F4E  3001               	movlw	1
 12953  1F4F  00F2               	movwf	getMain_All_LightsStatus@status
 12954  1F50                     l9107:	
 12955                           
 12956                           ;Main_B1.c: 422: }
 12957                           ;Main_B1.c: 425: return status;
 12958  1F50  0872               	movf	getMain_All_LightsStatus@status,w
 12959  1F51  0008               	return
 12960  1F52                     __end_of_getMain_All_LightsStatus:	
 12961                           
 12962                           	psect	text86
 12963  1D8D                     __ptext86:	
 12964 ;; *************** function _getDelayOff_GO *****************
 12965 ;; Defined at:
 12966 ;;		line 114 in file "../src/DelayOff_B1.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;  sw              1    wreg     unsigned char 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  sw              1    4[COMMON] unsigned char 
 12971 ;;  go              1    5[COMMON] unsigned char 
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      unsigned char 
 12974 ;; Registers used:
 12975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12985 ;;Total ram usage:        2 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:    4
 12988 ;; This function calls:
 12989 ;;		_DelayOffPointSelect
 12990 ;; This function is called by:
 12991 ;;		_setDimmerLights_OnOff
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           
 12996                           ;psect for function _getDelayOff_GO
 12997  1D8D                     _getDelayOff_GO:	
 12998                           
 12999                           ;incstack = 0
 13000                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13001                           ;getDelayOff_GO@sw stored from wreg
 13002  1D8D  00F4               	movwf	getDelayOff_GO@sw
 13003                           
 13004                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 13005  1D8E  0874               	movf	getDelayOff_GO@sw,w
 13006  1D8F  3190  20F7         	fcall	_DelayOffPointSelect
 13007                           
 13008                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 13009  1D91  0020               	movlb	0	; select bank0
 13010  1D92  0869               	movf	_DelayOff,w
 13011  1D93  0086               	movwf	6
 13012  1D94  3001               	movlw	1	; select bank2/3
 13013  1D95  0087               	movwf	7
 13014  1D96  3000               	movlw	0
 13015  1D97  1881               	btfsc	1,1
 13016  1D98  3001               	movlw	1
 13017  1D99  00F5               	movwf	getDelayOff_GO@go
 13018                           
 13019                           ;DelayOff_B1.c: 117: return go;
 13020  1D9A  0875               	movf	getDelayOff_GO@go,w
 13021  1D9B  0008               	return
 13022  1D9C                     __end_of_getDelayOff_GO:	
 13023                           
 13024                           	psect	text87
 13025  1E16                     __ptext87:	
 13026 ;; *************** function _getCmd_Status *****************
 13027 ;; Defined at:
 13028 ;;		line 664 in file "../src/Main_B1.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;  number          1    wreg     unsigned char 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  number          1    2[COMMON] unsigned char 
 13033 ;;  cmd             1    3[COMMON] unsigned char 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      unsigned char 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;Total ram usage:        2 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    3
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_setDimmerLights_OnOff
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           
 13058                           ;psect for function _getCmd_Status
 13059  1E16                     _getCmd_Status:	
 13060                           
 13061                           ;incstack = 0
 13062                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 13063                           ;getCmd_Status@number stored from wreg
 13064  1E16  00F2               	movwf	getCmd_Status@number
 13065                           
 13066                           ;Main_B1.c: 665: char cmd = 0;
 13067  1E17  01F3               	clrf	getCmd_Status@cmd
 13068                           
 13069                           ;Main_B1.c: 666: switch (number) {
 13070  1E18  2E1F               	goto	l7155
 13071  1E19                     l7151:	
 13072                           ;Main_B1.c: 667: case 1:
 13073                           
 13074                           
 13075                           ;Main_B1.c: 668: cmd = Cmd.all_off == 1 ? 1 : 0;
 13076  1E19  3000               	movlw	0
 13077  1E1A  0020               	movlb	0	; select bank0
 13078  1E1B  1868               	btfsc	_Cmd,0
 13079  1E1C  3001               	movlw	1
 13080  1E1D  00F3               	movwf	getCmd_Status@cmd
 13081                           
 13082                           ;Main_B1.c: 670: }
 13083                           
 13084                           ;Main_B1.c: 669: break;
 13085  1E1E  2E24               	goto	l7157
 13086  1E1F                     l7155:	
 13087  1E1F  0872               	movf	getCmd_Status@number,w
 13088                           
 13089                           ; Switch size 1, requested type "space"
 13090                           ; Number of cases is 1, Range of values is 1 to 1
 13091                           ; switch strategies available:
 13092                           ; Name         Instructions Cycles
 13093                           ; simple_byte            4     3 (average)
 13094                           ; direct_byte           11     9 (fixed)
 13095                           ; jumptable            263     9 (fixed)
 13096                           ;	Chosen strategy is simple_byte
 13097  1E20  3A01               	xorlw	1	; case 1
 13098  1E21  1903               	skipnz
 13099  1E22  2E19               	goto	l7151
 13100  1E23  2E24               	goto	l7157
 13101  1E24                     l7157:	
 13102                           
 13103                           ;Main_B1.c: 671: return cmd;
 13104  1E24  0873               	movf	getCmd_Status@cmd,w
 13105  1E25  0008               	return
 13106  1E26                     __end_of_getCmd_Status:	
 13107                           
 13108                           	psect	text88
 13109  17B4                     __ptext88:	
 13110 ;; *************** function _setDimmerLights_Dimming *****************
 13111 ;; Defined at:
 13112 ;;		line 1142 in file "../src/Dimmer_B1.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  lights          1    wreg     unsigned char 
 13115 ;;  status          1   62[BANK0 ] unsigned char 
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;  lights          1   65[BANK0 ] unsigned char 
 13118 ;;  value           1   64[BANK0 ] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;		None               void
 13121 ;; Registers used:
 13122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13128 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;Total ram usage:        4 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:    6
 13135 ;; This function calls:
 13136 ;;		_getDimmerIntr_DimmingValue
 13137 ;;		_getDimmerLights_ValueToPercent
 13138 ;;		_setBuz
 13139 ;;		_setDimmerIntr_Dimming_Sw
 13140 ;;		_setDimmerIntr_MaxmumValue
 13141 ;;		_setMemory_Modify
 13142 ;;		_setProductData
 13143 ;;		_setRF_DimmerLights
 13144 ;;		_setRF_TransceiveGO
 13145 ;;		_setTxData
 13146 ;; This function is called by:
 13147 ;;		_setDimmerLights_Main
 13148 ;; This function uses a non-reentrant model
 13149 ;;
 13150                           
 13151                           
 13152                           ;psect for function _setDimmerLights_Dimming
 13153  17B4                     _setDimmerLights_Dimming:	
 13154                           
 13155                           ;incstack = 0
 13156                           ; Regs used in _setDimmerLights_Dimming: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13157                           ;setDimmerLights_Dimming@lights stored from wreg
 13158  17B4  0020               	movlb	0	; select bank0
 13159  17B5  00E1               	movwf	setDimmerLights_Dimming@lights
 13160                           
 13161                           ;Dimmer_B1.c: 1143: setDimmerIntr_Dimming_Sw(lights, status);
 13162  17B6  085E               	movf	setDimmerLights_Dimming@status,w
 13163  17B7  00DF               	movwf	??_setDimmerLights_Dimming
 13164  17B8  085F               	movf	??_setDimmerLights_Dimming,w
 13165  17B9  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 13166  17BA  0861               	movf	setDimmerLights_Dimming@lights,w
 13167  17BB  3193  23C4  3197   	fcall	_setDimmerIntr_Dimming_Sw
 13168                           
 13169                           ;Dimmer_B1.c: 1144: if (status == 1) {
 13170  17BE  0020               	movlb	0	; select bank0
 13171  17BF  085E               	movf	setDimmerLights_Dimming@status,w
 13172  17C0  3A01               	xorlw	1
 13173  17C1  1D03               	skipz
 13174  17C2  2FD0               	goto	l10983
 13175                           
 13176                           ;Dimmer_B1.c: 1146: setRF_TransceiveGO(0);
 13177  17C3  3000               	movlw	0
 13178  17C4  319E  2606  3197   	fcall	_setRF_TransceiveGO
 13179                           
 13180                           ;Dimmer_B1.c: 1148: setBuz(1, 100);
 13181  17C7  3064               	movlw	100
 13182  17C8  0020               	movlb	0	; select bank0
 13183  17C9  00A4               	movwf	setBuz@time
 13184  17CA  3000               	movlw	0
 13185  17CB  00A5               	movwf	setBuz@time+1
 13186  17CC  3001               	movlw	1
 13187  17CD  3188  2050         	fcall	_setBuz
 13188                           
 13189                           ;Dimmer_B1.c: 1149: } else if (status == 0) {
 13190  17CF  0008               	return
 13191  17D0                     l10983:	
 13192  17D0  0020               	movlb	0	; select bank0
 13193  17D1  08DE               	movf	setDimmerLights_Dimming@status,f
 13194  17D2  1D03               	skipz
 13195  17D3  0008               	return
 13196                           
 13197                           ;Dimmer_B1.c: 1155: char value = getDimmerIntr_DimmingValue(lights);
 13198  17D4  0861               	movf	setDimmerLights_Dimming@lights,w
 13199  17D5  3190  20DC  3197   	fcall	_getDimmerIntr_DimmingValue
 13200  17D8  0020               	movlb	0	; select bank0
 13201  17D9  00DF               	movwf	??_setDimmerLights_Dimming
 13202  17DA  085F               	movf	??_setDimmerLights_Dimming,w
 13203  17DB  00E0               	movwf	setDimmerLights_Dimming@value
 13204                           
 13205                           ;Dimmer_B1.c: 1156: setDimmerIntr_MaxmumValue(lights, value);
 13206  17DC  0860               	movf	setDimmerLights_Dimming@value,w
 13207  17DD  00DF               	movwf	??_setDimmerLights_Dimming
 13208  17DE  085F               	movf	??_setDimmerLights_Dimming,w
 13209  17DF  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 13210  17E0  0861               	movf	setDimmerLights_Dimming@lights,w
 13211  17E1  3192  2218  3197   	fcall	_setDimmerIntr_MaxmumValue
 13212                           
 13213                           ;Dimmer_B1.c: 1157: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 13214  17E4  0020               	movlb	0	; select bank0
 13215  17E5  0860               	movf	setDimmerLights_Dimming@value,w
 13216  17E6  3197  2724  3197   	fcall	_getDimmerLights_ValueToPercent
 13217  17E9  0020               	movlb	0	; select bank0
 13218  17EA  00DF               	movwf	??_setDimmerLights_Dimming
 13219  17EB  085F               	movf	??_setDimmerLights_Dimming,w
 13220  17EC  00D6               	movwf	setProductData@value
 13221  17ED  0861               	movf	setDimmerLights_Dimming@lights,w
 13222  17EE  3E14               	addlw	20
 13223  17EF  319D  2530  3197   	fcall	_setProductData
 13224                           
 13225                           ;Dimmer_B1.c: 1164: setMemory_Modify(1);
 13226  17F2  3001               	movlw	1
 13227  17F3  319D  25F6  3197   	fcall	_setMemory_Modify
 13228                           
 13229                           ;Dimmer_B1.c: 1168: setRF_DimmerLights(lights, 1);
 13230  17F6  0020               	movlb	0	; select bank0
 13231  17F7  01D9               	clrf	setRF_DimmerLights@on
 13232  17F8  0AD9               	incf	setRF_DimmerLights@on,f
 13233  17F9  0861               	movf	setDimmerLights_Dimming@lights,w
 13234  17FA  318A  22E3  3197   	fcall	_setRF_DimmerLights
 13235                           
 13236                           ;Dimmer_B1.c: 1169: setTxData();
 13237  17FD  319C  24D2         	fcall	_setTxData
 13238  17FF  0008               	return
 13239  1800                     __end_of_setDimmerLights_Dimming:	
 13240                           
 13241                           	psect	text89
 13242  1CD2                     __ptext89:	
 13243 ;; *************** function _setTxData *****************
 13244 ;; Defined at:
 13245 ;;		line 237 in file "../src/RF_Control_B1.c"
 13246 ;; Parameters:    Size  Location     Type
 13247 ;;		None
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;  i               1    0        unsigned char 
 13250 ;; Return value:  Size  Location     Type
 13251 ;;		None               void
 13252 ;; Registers used:
 13253 ;;		status,2
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;Total ram usage:        0 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    3
 13266 ;; This function calls:
 13267 ;;		Nothing
 13268 ;; This function is called by:
 13269 ;;		_setDimmerLights_OnOff
 13270 ;;		_setDimmerLights_Dimming
 13271 ;;		_getRxData
 13272 ;;		_setControl_Lights_Table
 13273 ;;		_setRFSW_Control
 13274 ;;		_setRFSW_AdjControl
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           
 13279                           ;psect for function _setTxData
 13280  1CD2                     _setTxData:	
 13281                           
 13282                           ;RF_Control_B1.c: 238: char i;
 13283                           ;RF_Control_B1.c: 239: if (RF1.Enable == 1) {
 13284                           
 13285                           ;incstack = 0
 13286                           ; Regs used in _setTxData: [status,2]
 13287  1CD2  0021               	movlb	1	; select bank1
 13288  1CD3  1C30               	btfss	_RF1^(0+128),0
 13289  1CD4  0008               	return
 13290                           
 13291                           ;RF_Control_B1.c: 241: RF1.TransceiveGO = 1;
 13292  1CD5  1530               	bsf	_RF1^(0+128),2
 13293                           
 13294                           ;RF_Control_B1.c: 242: RF1.Count = 0;
 13295  1CD6  01B3               	clrf	(_RF1^(0+128)+3)
 13296  1CD7  01B4               	clrf	((_RF1+1)^(0+128)+3)
 13297  1CD8  0008               	return
 13298  1CD9                     __end_of_setTxData:	
 13299                           
 13300                           	psect	text90
 13301  1E06                     __ptext90:	
 13302 ;; *************** function _setRF_TransceiveGO *****************
 13303 ;; Defined at:
 13304 ;;		line 575 in file "../src/RF_Control_B1.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;  command         1    wreg     unsigned char 
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;  command         1    3[COMMON] unsigned char 
 13309 ;; Return value:  Size  Location     Type
 13310 ;;		None               void
 13311 ;; Registers used:
 13312 ;;		wreg, status,2, status,0
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;Total ram usage:        2 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; Hardware stack levels required when called:    3
 13325 ;; This function calls:
 13326 ;;		Nothing
 13327 ;; This function is called by:
 13328 ;;		_setDimmerLights_Dimming
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           
 13333                           ;psect for function _setRF_TransceiveGO
 13334  1E06                     _setRF_TransceiveGO:	
 13335                           
 13336                           ;incstack = 0
 13337                           ; Regs used in _setRF_TransceiveGO: [wreg+status,2+status,0]
 13338                           ;setRF_TransceiveGO@command stored from wreg
 13339  1E06  00F3               	movwf	setRF_TransceiveGO@command
 13340                           
 13341                           ;RF_Control_B1.c: 576: RF1.TransceiveGO = command == 1 ? 1 : 0;
 13342  1E07  0873               	movf	setRF_TransceiveGO@command,w
 13343  1E08  3A01               	xorlw	1
 13344  1E09  3000               	movlw	0
 13345  1E0A  1903               	skipnz
 13346  1E0B  3001               	movlw	1
 13347  1E0C  00F2               	movwf	??_setRF_TransceiveGO
 13348  1E0D  0DF2               	rlf	??_setRF_TransceiveGO,f
 13349  1E0E  0DF2               	rlf	??_setRF_TransceiveGO,f
 13350  1E0F  0021               	movlb	1	; select bank1
 13351  1E10  0830               	movf	_RF1^(0+128),w
 13352  1E11  0672               	xorwf	??_setRF_TransceiveGO,w
 13353  1E12  39FB               	andlw	-5
 13354  1E13  0672               	xorwf	??_setRF_TransceiveGO,w
 13355  1E14  00B0               	movwf	_RF1^(0+128)
 13356  1E15  0008               	return
 13357  1E16                     __end_of_setRF_TransceiveGO:	
 13358                           
 13359                           	psect	text91
 13360  0AE3                     __ptext91:	
 13361 ;; *************** function _setRF_DimmerLights *****************
 13362 ;; Defined at:
 13363 ;;		line 550 in file "../src/RF_Control_B1.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;  lights          1    wreg     unsigned char 
 13366 ;;  on              1   57[BANK0 ] unsigned char 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  lights          1   61[BANK0 ] unsigned char 
 13369 ;;  status          1   60[BANK0 ] unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;		None               void
 13372 ;; Registers used:
 13373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13379 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;Total ram usage:        5 bytes
 13384 ;; Hardware stack levels used:    1
 13385 ;; Hardware stack levels required when called:    4
 13386 ;; This function calls:
 13387 ;;		_setProductData
 13388 ;; This function is called by:
 13389 ;;		_setDimmerLights_OnOff
 13390 ;;		_setDimmerLights_Dimming
 13391 ;;		_setRFSW_Control
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           
 13396                           ;psect for function _setRF_DimmerLights
 13397  0AE3                     _setRF_DimmerLights:	
 13398                           
 13399                           ;incstack = 0
 13400                           ; Regs used in _setRF_DimmerLights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13401                           ;setRF_DimmerLights@lights stored from wreg
 13402  0AE3  0020               	movlb	0	; select bank0
 13403  0AE4  00DD               	movwf	setRF_DimmerLights@lights
 13404                           
 13405                           ;RF_Control_B1.c: 551: char status = 1;
 13406  0AE5  01DC               	clrf	setRF_DimmerLights@status
 13407  0AE6  0ADC               	incf	setRF_DimmerLights@status,f
 13408                           
 13409                           ;RF_Control_B1.c: 552: switch (lights) {
 13410  0AE7  2AEE               	goto	l6715
 13411  0AE8                     l6709:	
 13412                           ;RF_Control_B1.c: 553: case 2:
 13413                           
 13414  0AE8  2AEB               	goto	L5
 13415  0AE9                     l6711:	
 13416                           ;RF_Control_B1.c: 556: case 3:
 13417                           
 13418                           ;RF_Control_B1.c: 555: break;
 13419                           
 13420                           ;RF_Control_B1.c: 554: status <<= 1;
 13421                           
 13422                           
 13423                           ;RF_Control_B1.c: 557: status <<= 2;
 13424  0AE9  1003               	clrc
 13425  0AEA  0DDC               	rlf	setRF_DimmerLights@status,f
 13426  0AEB                     L5:	
 13427  0AEB  1003               	clrc
 13428  0AEC  0DDC               	rlf	setRF_DimmerLights@status,f
 13429                           
 13430                           ;RF_Control_B1.c: 559: }
 13431                           
 13432                           ;RF_Control_B1.c: 558: break;
 13433  0AED  2AF6               	goto	l2524
 13434  0AEE                     l6715:	
 13435  0AEE  085D               	movf	setRF_DimmerLights@lights,w
 13436                           
 13437                           ; Switch size 1, requested type "space"
 13438                           ; Number of cases is 2, Range of values is 2 to 3
 13439                           ; switch strategies available:
 13440                           ; Name         Instructions Cycles
 13441                           ; simple_byte            7     4 (average)
 13442                           ; direct_byte           13     9 (fixed)
 13443                           ; jumptable            263     9 (fixed)
 13444                           ;	Chosen strategy is simple_byte
 13445  0AEF  3A02               	xorlw	2	; case 2
 13446  0AF0  1903               	skipnz
 13447  0AF1  2AE8               	goto	l6709
 13448  0AF2  3A01               	xorlw	1	; case 3
 13449  0AF3  1903               	skipnz
 13450  0AF4  2AE9               	goto	l6711
 13451  0AF5  2AF6               	goto	l2524
 13452  0AF6                     l2524:	
 13453                           
 13454                           ;RF_Control_B1.c: 560: status = ~status;
 13455  0AF6  09DC               	comf	setRF_DimmerLights@status,f
 13456                           
 13457                           ;RF_Control_B1.c: 562: setProductData(11, lights);
 13458  0AF7  085D               	movf	setRF_DimmerLights@lights,w
 13459  0AF8  00DA               	movwf	??_setRF_DimmerLights
 13460  0AF9  085A               	movf	??_setRF_DimmerLights,w
 13461  0AFA  00D6               	movwf	setProductData@value
 13462  0AFB  300B               	movlw	11
 13463  0AFC  319D  2530  318A   	fcall	_setProductData
 13464                           
 13465                           ;RF_Control_B1.c: 563: setProductData(17, product->Data[26 + lights]);
 13466  0AFF  0020               	movlb	0	; select bank0
 13467  0B00  085D               	movf	setRF_DimmerLights@lights,w
 13468  0B01  3E1A               	addlw	26
 13469  0B02  076E               	addwf	_product,w
 13470  0B03  00DA               	movwf	??_setRF_DimmerLights
 13471  0B04  085A               	movf	??_setRF_DimmerLights,w
 13472  0B05  0086               	movwf	6
 13473  0B06  3002               	movlw	2	; select bank4/5
 13474  0B07  0087               	movwf	7
 13475  0B08  0801               	movf	1,w
 13476  0B09  00DB               	movwf	??_setRF_DimmerLights+1
 13477  0B0A  085B               	movf	??_setRF_DimmerLights+1,w
 13478  0B0B  00D6               	movwf	setProductData@value
 13479  0B0C  3011               	movlw	17
 13480  0B0D  319D  2530  318A   	fcall	_setProductData
 13481                           
 13482                           ;RF_Control_B1.c: 564: if (on == 1) {
 13483  0B10  0020               	movlb	0	; select bank0
 13484  0B11  0859               	movf	setRF_DimmerLights@on,w
 13485  0B12  3A01               	xorlw	1
 13486  0B13  1D03               	skipz
 13487  0B14  2B34               	goto	l6723
 13488                           
 13489                           ;RF_Control_B1.c: 565: setProductData(9, product->Data[20 + lights]);
 13490  0B15  085D               	movf	setRF_DimmerLights@lights,w
 13491  0B16  3E14               	addlw	20
 13492  0B17  076E               	addwf	_product,w
 13493  0B18  00DA               	movwf	??_setRF_DimmerLights
 13494  0B19  085A               	movf	??_setRF_DimmerLights,w
 13495  0B1A  0086               	movwf	6
 13496  0B1B  3002               	movlw	2	; select bank4/5
 13497  0B1C  0087               	movwf	7
 13498  0B1D  0801               	movf	1,w
 13499  0B1E  00DB               	movwf	??_setRF_DimmerLights+1
 13500  0B1F  085B               	movf	??_setRF_DimmerLights+1,w
 13501  0B20  00D6               	movwf	setProductData@value
 13502  0B21  3009               	movlw	9
 13503  0B22  319D  2530  318A   	fcall	_setProductData
 13504                           
 13505                           ;RF_Control_B1.c: 566: setProductData(15, (product->Data[15] | lights));
 13506  0B25  0020               	movlb	0	; select bank0
 13507  0B26  086E               	movf	_product,w
 13508  0B27  3E0F               	addlw	15
 13509  0B28  0086               	movwf	6
 13510  0B29  3002               	movlw	2	; select bank4/5
 13511  0B2A  0087               	movwf	7
 13512  0B2B  0801               	movf	1,w
 13513  0B2C  045D               	iorwf	setRF_DimmerLights@lights,w
 13514  0B2D  00DA               	movwf	??_setRF_DimmerLights
 13515  0B2E  085A               	movf	??_setRF_DimmerLights,w
 13516  0B2F  00D6               	movwf	setProductData@value
 13517  0B30  300F               	movlw	15
 13518  0B31  319D  2530         	fcall	_setProductData
 13519                           
 13520                           ;RF_Control_B1.c: 567: } else {
 13521  0B33  0008               	return
 13522  0B34                     l6723:	
 13523                           
 13524                           ;RF_Control_B1.c: 568: setProductData(9, 0x00);
 13525  0B34  0020               	movlb	0	; select bank0
 13526  0B35  01D6               	clrf	setProductData@value
 13527  0B36  3009               	movlw	9
 13528  0B37  319D  2530  318A   	fcall	_setProductData
 13529                           
 13530                           ;RF_Control_B1.c: 569: setProductData(15, (product->Data[15] & status));
 13531  0B3A  0020               	movlb	0	; select bank0
 13532  0B3B  086E               	movf	_product,w
 13533  0B3C  3E0F               	addlw	15
 13534  0B3D  0086               	movwf	6
 13535  0B3E  3002               	movlw	2	; select bank4/5
 13536  0B3F  0087               	movwf	7
 13537  0B40  0801               	movf	1,w
 13538  0B41  055C               	andwf	setRF_DimmerLights@status,w
 13539  0B42  00DA               	movwf	??_setRF_DimmerLights
 13540  0B43  085A               	movf	??_setRF_DimmerLights,w
 13541  0B44  00D6               	movwf	setProductData@value
 13542  0B45  300F               	movlw	15
 13543  0B46  319D  2530         	fcall	_setProductData
 13544  0B48  0008               	return
 13545  0B49                     __end_of_setRF_DimmerLights:	
 13546                           
 13547                           	psect	text92
 13548  1218                     __ptext92:	
 13549 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 13550 ;; Defined at:
 13551 ;;		line 175 in file "../src/Dimmer_B1.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;  lights          1    wreg     unsigned char 
 13554 ;;  value           1   56[BANK0 ] unsigned char 
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;  lights          1   58[BANK0 ] unsigned char 
 13557 ;; Return value:  Size  Location     Type
 13558 ;;		None               void
 13559 ;; Registers used:
 13560 ;;		wreg
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13566 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;Total ram usage:        3 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:    3
 13573 ;; This function calls:
 13574 ;;		Nothing
 13575 ;; This function is called by:
 13576 ;;		_setDimmerLights_OnOff
 13577 ;;		_setDimmerLights_Dimming
 13578 ;;		_setRFSW_AdjControl
 13579 ;;		_DimmerLights_AssignationDimming
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           
 13584                           ;psect for function _setDimmerIntr_MaxmumValue
 13585  1218                     _setDimmerIntr_MaxmumValue:	
 13586                           
 13587                           ;incstack = 0
 13588                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 13589                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 13590  1218  0020               	movlb	0	; select bank0
 13591  1219  00DA               	movwf	setDimmerIntr_MaxmumValue@lights
 13592                           
 13593                           ;Dimmer_B1.c: 177: if (lights == 1) {
 13594  121A  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13595  121B  3A01               	xorlw	1
 13596  121C  1D03               	skipz
 13597  121D  2A24               	goto	l6687
 13598                           
 13599                           ;Dimmer_B1.c: 178: DimmerIntr1.MaxmumValue = value;
 13600  121E  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13601  121F  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13602  1220  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13603  1221  0021               	movlb	1	; select bank1
 13604  1222  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 13605                           
 13606                           ;Dimmer_B1.c: 179: }
 13607  1223  0008               	return
 13608  1224                     l6687:	
 13609                           
 13610                           ;Dimmer_B1.c: 182: else if (lights == 2) {
 13611  1224  0020               	movlb	0	; select bank0
 13612  1225  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13613  1226  3A02               	xorlw	2
 13614  1227  1D03               	skipz
 13615  1228  2A2F               	goto	l6691
 13616                           
 13617                           ;Dimmer_B1.c: 183: DimmerIntr2.MaxmumValue = value;
 13618  1229  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13619  122A  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13620  122B  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13621  122C  0022               	movlb	2	; select bank2
 13622  122D  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 13623                           
 13624                           ;Dimmer_B1.c: 184: }
 13625  122E  0008               	return
 13626  122F                     l6691:	
 13627                           
 13628                           ;Dimmer_B1.c: 187: else if (lights == 3) {
 13629  122F  0020               	movlb	0	; select bank0
 13630  1230  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13631  1231  3A03               	xorlw	3
 13632  1232  1D03               	skipz
 13633  1233  0008               	return
 13634                           
 13635                           ;Dimmer_B1.c: 188: DimmerIntr3.MaxmumValue = value;
 13636  1234  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13637  1235  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13638  1236  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13639  1237  0022               	movlb	2	; select bank2
 13640  1238  00D4               	movwf	(_DimmerIntr3^(0+256)+6)
 13641  1239  0008               	return
 13642  123A                     __end_of_setDimmerIntr_MaxmumValue:	
 13643                           
 13644                           	psect	text93
 13645  13C4                     __ptext93:	
 13646 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 13647 ;; Defined at:
 13648 ;;		line 251 in file "../src/Dimmer_B1.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;  lights          1    wreg     unsigned char 
 13651 ;;  command         1    2[COMMON] unsigned char 
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;  lights          1    4[COMMON] unsigned char 
 13654 ;; Return value:  Size  Location     Type
 13655 ;;		None               void
 13656 ;; Registers used:
 13657 ;;		wreg, status,2, status,0
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13667 ;;Total ram usage:        3 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; Hardware stack levels required when called:    3
 13670 ;; This function calls:
 13671 ;;		Nothing
 13672 ;; This function is called by:
 13673 ;;		_setDimmerLights_Dimming
 13674 ;;		_setDimmerLights_DimmingClose
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           
 13679                           ;psect for function _setDimmerIntr_Dimming_Sw
 13680  13C4                     _setDimmerIntr_Dimming_Sw:	
 13681                           
 13682                           ;incstack = 0
 13683                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 13684                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 13685  13C4  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 13686                           
 13687                           ;Dimmer_B1.c: 253: if (lights == 1) {
 13688  13C5  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13689  13C6  3A01               	xorlw	1
 13690  13C7  1D03               	skipz
 13691  13C8  2BD7               	goto	l6803
 13692                           
 13693                           ;Dimmer_B1.c: 254: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 13694  13C9  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13695  13CA  3A01               	xorlw	1
 13696  13CB  3000               	movlw	0
 13697  13CC  1903               	skipnz
 13698  13CD  3001               	movlw	1
 13699  13CE  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13700  13CF  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13701  13D0  0021               	movlb	1	; select bank1
 13702  13D1  0820               	movf	_DimmerIntr1^(0+128),w
 13703  13D2  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13704  13D3  39EF               	andlw	-17
 13705  13D4  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13706  13D5  00A0               	movwf	_DimmerIntr1^(0+128)
 13707                           
 13708                           ;Dimmer_B1.c: 255: }
 13709  13D6  0008               	return
 13710  13D7                     l6803:	
 13711                           
 13712                           ;Dimmer_B1.c: 258: else if (lights == 2) {
 13713  13D7  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13714  13D8  3A02               	xorlw	2
 13715  13D9  1D03               	skipz
 13716  13DA  2BE9               	goto	l6807
 13717                           
 13718                           ;Dimmer_B1.c: 259: DimmerIntr2.Dimming_Sw = command == 1 ? 1 : 0;
 13719  13DB  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13720  13DC  3A01               	xorlw	1
 13721  13DD  3000               	movlw	0
 13722  13DE  1903               	skipnz
 13723  13DF  3001               	movlw	1
 13724  13E0  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13725  13E1  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13726  13E2  0022               	movlb	2	; select bank2
 13727  13E3  083E               	movf	_DimmerIntr2^(0+256),w
 13728  13E4  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13729  13E5  39EF               	andlw	-17
 13730  13E6  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13731  13E7  00BE               	movwf	_DimmerIntr2^(0+256)
 13732                           
 13733                           ;Dimmer_B1.c: 260: }
 13734  13E8  0008               	return
 13735  13E9                     l6807:	
 13736                           
 13737                           ;Dimmer_B1.c: 263: else if (lights == 3) {
 13738  13E9  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13739  13EA  3A03               	xorlw	3
 13740  13EB  1D03               	skipz
 13741  13EC  0008               	return
 13742                           
 13743                           ;Dimmer_B1.c: 264: DimmerIntr3.Dimming_Sw = command == 1 ? 1 : 0;
 13744  13ED  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13745  13EE  3A01               	xorlw	1
 13746  13EF  3000               	movlw	0
 13747  13F0  1903               	skipnz
 13748  13F1  3001               	movlw	1
 13749  13F2  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13750  13F3  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13751  13F4  0022               	movlb	2	; select bank2
 13752  13F5  084E               	movf	_DimmerIntr3^(0+256),w
 13753  13F6  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13754  13F7  39EF               	andlw	-17
 13755  13F8  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13756  13F9  00CE               	movwf	_DimmerIntr3^(0+256)
 13757  13FA  0008               	return
 13758  13FB                     __end_of_setDimmerIntr_Dimming_Sw:	
 13759                           
 13760                           	psect	text94
 13761  10DC                     __ptext94:	
 13762 ;; *************** function _getDimmerIntr_DimmingValue *****************
 13763 ;; Defined at:
 13764 ;;		line 155 in file "../src/Dimmer_B1.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;  lights          1    wreg     unsigned char 
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;  lights          1    4[COMMON] unsigned char 
 13769 ;;  value           1    3[COMMON] unsigned char 
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  1    wreg      unsigned char 
 13772 ;; Registers used:
 13773 ;;		wreg, status,2
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;Total ram usage:        3 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    3
 13786 ;; This function calls:
 13787 ;;		Nothing
 13788 ;; This function is called by:
 13789 ;;		_setDimmerLights_Dimming
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           
 13794                           ;psect for function _getDimmerIntr_DimmingValue
 13795  10DC                     _getDimmerIntr_DimmingValue:	
 13796                           
 13797                           ;incstack = 0
 13798                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 13799                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 13800  10DC  00F4               	movwf	getDimmerIntr_DimmingValue@lights
 13801                           
 13802                           ;Dimmer_B1.c: 156: char value = 0;
 13803  10DD  01F3               	clrf	getDimmerIntr_DimmingValue@value
 13804                           
 13805                           ;Dimmer_B1.c: 158: if (lights == 1) {
 13806  10DE  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13807  10DF  3A01               	xorlw	1
 13808  10E0  1D03               	skipz
 13809  10E1  28E5               	goto	l7061
 13810                           
 13811                           ;Dimmer_B1.c: 159: value = DimmerIntr1.DimmingValue;
 13812  10E2  0021               	movlb	1	; select bank1
 13813  10E3  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 13814  10E4  28F2               	goto	L7
 13815  10E5                     l7061:	
 13816                           ;Dimmer_B1.c: 160: }
 13817                           
 13818                           
 13819                           ;Dimmer_B1.c: 163: else if (lights == 2) {
 13820  10E5  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13821  10E6  3A02               	xorlw	2
 13822  10E7  1D03               	skipz
 13823  10E8  28EC               	goto	l7065
 13824                           
 13825                           ;Dimmer_B1.c: 164: value = DimmerIntr2.DimmingValue;
 13826  10E9  0022               	movlb	2	; select bank2
 13827  10EA  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 13828  10EB  28F2               	goto	L7
 13829  10EC                     l7065:	
 13830                           ;Dimmer_B1.c: 165: }
 13831                           
 13832                           
 13833                           ;Dimmer_B1.c: 168: else if (lights == 3) {
 13834  10EC  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13835  10ED  3A03               	xorlw	3
 13836  10EE  1D03               	skipz
 13837  10EF  28F5               	goto	l809
 13838                           
 13839                           ;Dimmer_B1.c: 169: value = DimmerIntr3.DimmingValue;
 13840  10F0  0022               	movlb	2	; select bank2
 13841  10F1  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 13842  10F2                     L7:	
 13843  10F2  00F2               	movwf	??_getDimmerIntr_DimmingValue
 13844  10F3  0872               	movf	??_getDimmerIntr_DimmingValue,w
 13845  10F4  00F3               	movwf	getDimmerIntr_DimmingValue@value
 13846  10F5                     l809:	
 13847                           
 13848                           ;Dimmer_B1.c: 170: }
 13849                           ;Dimmer_B1.c: 172: return value;
 13850  10F5  0873               	movf	getDimmerIntr_DimmingValue@value,w
 13851  10F6  0008               	return
 13852  10F7                     __end_of_getDimmerIntr_DimmingValue:	
 13853                           
 13854                           	psect	text95
 13855  1614                     __ptext95:	
 13856 ;; *************** function _getDimmerLights_Allow_Condition *****************
 13857 ;; Defined at:
 13858 ;;		line 1175 in file "../src/Dimmer_B1.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;  lights          1    wreg     unsigned char 
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;  lights          1    6[COMMON] unsigned char 
 13863 ;;  allow           1    7[COMMON] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      unsigned char 
 13866 ;; Registers used:
 13867 ;;		wreg, status,2, status,0
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;Total ram usage:        6 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    3
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_setDimmerLights_Main
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _getDimmerLights_Allow_Condition
 13889  1614                     _getDimmerLights_Allow_Condition:	
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+status,0]
 13893                           ;getDimmerLights_Allow_Condition@lights stored from wreg
 13894  1614  00F6               	movwf	getDimmerLights_Allow_Condition@lights
 13895                           
 13896                           ;Dimmer_B1.c: 1176: char allow = 0;
 13897  1615  01F7               	clrf	getDimmerLights_Allow_Condition@allow
 13898                           
 13899                           ;Dimmer_B1.c: 1196: if (allow == 0) {
 13900  1616  08F7               	movf	getDimmerLights_Allow_Condition@allow,f
 13901  1617  1D03               	skipz
 13902  1618  2E55               	goto	l7393
 13903                           
 13904                           ;Dimmer_B1.c: 1197: if (lights == 1) {
 13905  1619  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 13906  161A  3A01               	xorlw	1
 13907  161B  1D03               	skipz
 13908  161C  2E2C               	goto	l7365
 13909                           
 13910                           ;Dimmer_B1.c: 1198: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 13911                           ;Dimmer_B1.c: 1199: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 13912  161D  01F3               	clrf	_getDimmerLights_Allow_Condition$2624
 13913  161E  0AF3               	incf	_getDimmerLights_Allow_Condition$2624,f
 13914  161F  0022               	movlb	2	; select bank2
 13915  1620  1E67               	btfss	_DimmerLights2^(0+256),4
 13916  1621  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 13917  1622  2E2A               	goto	l7363
 13918  1623  0023               	movlb	3	; select bank3
 13919  1624  1A35               	btfsc	_DimmerLights3^(0+384),4
 13920  1625  2E2A               	goto	l7363
 13921  1626  0022               	movlb	2	; select bank2
 13922  1627  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 13923  1628  2E2A               	goto	l7363
 13924  1629  01F3               	clrf	_getDimmerLights_Allow_Condition$2624
 13925  162A                     l7363:	
 13926  162A  0873               	movf	_getDimmerLights_Allow_Condition$2624,w
 13927  162B  2E52               	goto	L9
 13928  162C                     l7365:	
 13929                           ;Dimmer_B1.c: 1200: } else if (lights == 2) {
 13930                           
 13931  162C  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 13932  162D  3A02               	xorlw	2
 13933  162E  1D03               	skipz
 13934  162F  2E41               	goto	l7379
 13935                           
 13936                           ;Dimmer_B1.c: 1201: allow = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw 
      +                          == 1
 13937                           ;Dimmer_B1.c: 1202: || DimmerLights3.DimmingTrigger == 1 || DimmerIntr3.Dimming_Sw == 1 
      +                          ? 1 : 0;
 13938  1630  01F4               	clrf	_getDimmerLights_Allow_Condition$2625
 13939  1631  0AF4               	incf	_getDimmerLights_Allow_Condition$2625,f
 13940  1632  0022               	movlb	2	; select bank2
 13941  1633  1A5E               	btfsc	_DimmerLights1^(0+256),4
 13942  1634  2E3F               	goto	l7377
 13943  1635  0021               	movlb	1	; select bank1
 13944  1636  1A20               	btfsc	_DimmerIntr1^(0+128),4
 13945  1637  2E3F               	goto	l7377
 13946  1638  0023               	movlb	3	; select bank3
 13947  1639  1A35               	btfsc	_DimmerLights3^(0+384),4
 13948  163A  2E3F               	goto	l7377
 13949  163B  0022               	movlb	2	; select bank2
 13950  163C  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 13951  163D  2E3F               	goto	l7377
 13952  163E  01F4               	clrf	_getDimmerLights_Allow_Condition$2625
 13953  163F                     l7377:	
 13954  163F  0874               	movf	_getDimmerLights_Allow_Condition$2625,w
 13955  1640  2E52               	goto	L9
 13956  1641                     l7379:	
 13957                           ;Dimmer_B1.c: 1203: } else if (lights == 3) {
 13958                           
 13959  1641  0876               	movf	getDimmerLights_Allow_Condition@lights,w
 13960  1642  3A03               	xorlw	3
 13961  1643  1D03               	skipz
 13962  1644  2E55               	goto	l7393
 13963                           
 13964                           ;Dimmer_B1.c: 1204: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1
 13965                           ;Dimmer_B1.c: 1205: || DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw == 1 
      +                          ? 1 : 0;
 13966  1645  01F5               	clrf	_getDimmerLights_Allow_Condition$2626
 13967  1646  0AF5               	incf	_getDimmerLights_Allow_Condition$2626,f
 13968  1647  0022               	movlb	2	; select bank2
 13969  1648  1E67               	btfss	_DimmerLights2^(0+256),4
 13970  1649  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 13971  164A  2E51               	goto	l7391
 13972  164B  1A5E               	btfsc	_DimmerLights1^(0+256),4
 13973  164C  2E51               	goto	l7391
 13974  164D  0021               	movlb	1	; select bank1
 13975  164E  1A20               	btfsc	_DimmerIntr1^(0+128),4
 13976  164F  2E51               	goto	l7391
 13977  1650  01F5               	clrf	_getDimmerLights_Allow_Condition$2626
 13978  1651                     l7391:	
 13979  1651  0875               	movf	_getDimmerLights_Allow_Condition$2626,w
 13980  1652                     L9:	
 13981  1652  00F2               	movwf	??_getDimmerLights_Allow_Condition
 13982  1653  0872               	movf	??_getDimmerLights_Allow_Condition,w
 13983  1654  00F7               	movwf	getDimmerLights_Allow_Condition@allow
 13984  1655                     l7393:	
 13985                           
 13986                           ;Dimmer_B1.c: 1206: }
 13987                           ;Dimmer_B1.c: 1207: }
 13988                           ;Dimmer_B1.c: 1210: return allow;
 13989  1655  0877               	movf	getDimmerLights_Allow_Condition@allow,w
 13990  1656  0008               	return
 13991  1657                     __end_of_getDimmerLights_Allow_Condition:	
 13992                           
 13993                           	psect	text96
 13994  02C0                     __ptext96:	
 13995 ;; *************** function _DimmerLights_DimmingFunction *****************
 13996 ;; Defined at:
 13997 ;;		line 2127 in file "../src/Dimmer_B1.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;  lights          1    wreg     unsigned char 
 14000 ;; Auto vars:     Size  Location     Type
 14001 ;;  lights          1    5[COMMON] unsigned char 
 14002 ;; Return value:  Size  Location     Type
 14003 ;;		None               void
 14004 ;; Registers used:
 14005 ;;		wreg, status,2, status,0, pclath, cstack
 14006 ;; Tracked objects:
 14007 ;;		On entry : 0/0
 14008 ;;		On exit  : 0/0
 14009 ;;		Unchanged: 0/0
 14010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14015 ;;Total ram usage:        2 bytes
 14016 ;; Hardware stack levels used:    1
 14017 ;; Hardware stack levels required when called:    4
 14018 ;; This function calls:
 14019 ;;		_DimmerIntr_ValueCalculate
 14020 ;; This function is called by:
 14021 ;;		_DimmerLights_Main
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           
 14026                           ;psect for function _DimmerLights_DimmingFunction
 14027  02C0                     _DimmerLights_DimmingFunction:	
 14028                           
 14029                           ;incstack = 0
 14030                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 14031                           ;DimmerLights_DimmingFunction@lights stored from wreg
 14032  02C0  00F5               	movwf	DimmerLights_DimmingFunction@lights
 14033                           
 14034                           ;Dimmer_B1.c: 2129: if (lights == 1) {
 14035  02C1  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14036  02C2  3A01               	xorlw	1
 14037  02C3  1D03               	skipz
 14038  02C4  2B0F               	goto	l7837
 14039                           
 14040                           ;Dimmer_B1.c: 2130: if (DimmerIntr1.Tune == 1) {
 14041  02C5  0021               	movlb	1	; select bank1
 14042  02C6  1CA0               	btfss	_DimmerIntr1^(0+128),1
 14043  02C7  2B0F               	goto	l7837
 14044                           
 14045                           ;Dimmer_B1.c: 2131: DimmerIntr1.Tune = 0;
 14046  02C8  10A0               	bcf	_DimmerIntr1^(0+128),1
 14047                           
 14048                           ;Dimmer_B1.c: 2132: DimmerIntr1.TuneTime++;
 14049  02C9  3001               	movlw	1
 14050  02CA  00F4               	movwf	??_DimmerLights_DimmingFunction
 14051  02CB  0874               	movf	??_DimmerLights_DimmingFunction,w
 14052  02CC  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 14053                           
 14054                           ;Dimmer_B1.c: 2133: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 14055  02CD  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 14056  02CE  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 14057  02CF  1C03               	skipc
 14058  02D0  2B0F               	goto	l7837
 14059                           
 14060                           ;Dimmer_B1.c: 2134: DimmerIntr1.TuneTime = 0;
 14061  02D1  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 14062                           
 14063                           ;Dimmer_B1.c: 2135: DimmerIntr1.TuneGO = 1;
 14064  02D2  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 14065                           
 14066                           ;Dimmer_B1.c: 2136: if (DimmerIntr1.Dimming_Sw == 1) {
 14067  02D3  1E20               	btfss	_DimmerIntr1^(0+128),4
 14068  02D4  2AF3               	goto	l1109
 14069                           
 14070                           ;Dimmer_B1.c: 2155: if (DimmerIntr1.Dimming_Status == 0) {
 14071  02D5  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 14072  02D6  2AE4               	goto	l7819
 14073                           
 14074                           ;Dimmer_B1.c: 2156: if (DimmerIntr1.DimmingValue > ((char)((100-67)*0.55))) {
 14075  02D7  3013               	movlw	19
 14076  02D8  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14077  02D9  1C03               	skipc
 14078  02DA  2AE2               	goto	l1111
 14079                           
 14080                           ;Dimmer_B1.c: 2157: DimmerIntr1.DimmingValue--;
 14081  02DB  3001               	movlw	1
 14082  02DC  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 14083                           
 14084                           ;Dimmer_B1.c: 2158: DimmerIntr_ValueCalculate(1);
 14085  02DD  3001               	movlw	1
 14086  02DE  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14087                           
 14088                           ;Dimmer_B1.c: 2159: } else {
 14089  02E1  2B0F               	goto	l7837
 14090  02E2                     l1111:	
 14091                           
 14092                           ;Dimmer_B1.c: 2160: DimmerIntr1.Dimming_Status = 1;
 14093  02E2  16A0               	bsf	_DimmerIntr1^(0+128),5
 14094                           
 14095                           ;Dimmer_B1.c: 2161: }
 14096                           ;Dimmer_B1.c: 2162: } else {
 14097  02E3  2B0F               	goto	l7837
 14098  02E4                     l7819:	
 14099                           
 14100                           ;Dimmer_B1.c: 2163: if (DimmerIntr1.DimmingValue < ((char)((100-5)*0.55))) {
 14101  02E4  3034               	movlw	52
 14102  02E5  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14103  02E6  1803               	skipnc
 14104  02E7  2AF1               	goto	l1114
 14105                           
 14106                           ;Dimmer_B1.c: 2164: DimmerIntr1.DimmingValue++;
 14107  02E8  3001               	movlw	1
 14108  02E9  00F4               	movwf	??_DimmerLights_DimmingFunction
 14109  02EA  0874               	movf	??_DimmerLights_DimmingFunction,w
 14110  02EB  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 14111                           
 14112                           ;Dimmer_B1.c: 2165: DimmerIntr_ValueCalculate(1);
 14113  02EC  3001               	movlw	1
 14114  02ED  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14115                           
 14116                           ;Dimmer_B1.c: 2166: } else {
 14117  02F0  2B0F               	goto	l7837
 14118  02F1                     l1114:	
 14119                           
 14120                           ;Dimmer_B1.c: 2167: DimmerIntr1.Dimming_Status = 0;
 14121  02F1  12A0               	bcf	_DimmerIntr1^(0+128),5
 14122                           
 14123                           ;Dimmer_B1.c: 2168: }
 14124                           ;Dimmer_B1.c: 2169: }
 14125                           ;Dimmer_B1.c: 2171: } else if (DimmerIntr1.Dimming_RF == 1) {
 14126  02F2  2B0F               	goto	l7837
 14127  02F3                     l1109:	
 14128  02F3  1F20               	btfss	_DimmerIntr1^(0+128),6
 14129  02F4  2B0F               	goto	l7837
 14130                           
 14131                           ;Dimmer_B1.c: 2184: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 14132  02F5  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14133  02F6  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 14134  02F7  1803               	skipnc
 14135  02F8  2B00               	goto	l7831
 14136                           
 14137                           ;Dimmer_B1.c: 2185: DimmerIntr1.DimmingValue--;
 14138  02F9  3001               	movlw	1
 14139  02FA  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 14140                           
 14141                           ;Dimmer_B1.c: 2186: DimmerIntr_ValueCalculate(1);
 14142  02FB  3001               	movlw	1
 14143  02FC  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14144                           
 14145                           ;Dimmer_B1.c: 2187: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 14146  02FF  2B0F               	goto	l7837
 14147  0300                     l7831:	
 14148  0300  0021               	movlb	1	; select bank1
 14149  0301  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 14150  0302  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 14151  0303  1803               	skipnc
 14152  0304  2B0E               	goto	l1120
 14153                           
 14154                           ;Dimmer_B1.c: 2188: DimmerIntr1.DimmingValue++;
 14155  0305  3001               	movlw	1
 14156  0306  00F4               	movwf	??_DimmerLights_DimmingFunction
 14157  0307  0874               	movf	??_DimmerLights_DimmingFunction,w
 14158  0308  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 14159                           
 14160                           ;Dimmer_B1.c: 2189: DimmerIntr_ValueCalculate(1);
 14161  0309  3001               	movlw	1
 14162  030A  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14163                           
 14164                           ;Dimmer_B1.c: 2190: } else {
 14165  030D  2B0F               	goto	l7837
 14166  030E                     l1120:	
 14167                           
 14168                           ;Dimmer_B1.c: 2191: DimmerIntr1.Dimming_RF = 0;
 14169  030E  1320               	bcf	_DimmerIntr1^(0+128),6
 14170  030F                     l7837:	
 14171                           
 14172                           ;Dimmer_B1.c: 2192: }
 14173                           ;Dimmer_B1.c: 2194: }
 14174                           ;Dimmer_B1.c: 2195: }
 14175                           ;Dimmer_B1.c: 2196: }
 14176                           ;Dimmer_B1.c: 2197: }
 14177                           ;Dimmer_B1.c: 2201: if (lights == 2) {
 14178  030F  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14179  0310  3A02               	xorlw	2
 14180  0311  1D03               	skipz
 14181  0312  2B5D               	goto	l7879
 14182                           
 14183                           ;Dimmer_B1.c: 2202: if (DimmerIntr2.Tune == 1) {
 14184  0313  0022               	movlb	2	; select bank2
 14185  0314  1CBE               	btfss	_DimmerIntr2^(0+256),1
 14186  0315  2B5D               	goto	l7879
 14187                           
 14188                           ;Dimmer_B1.c: 2203: DimmerIntr2.Tune = 0;
 14189  0316  10BE               	bcf	_DimmerIntr2^(0+256),1
 14190                           
 14191                           ;Dimmer_B1.c: 2204: DimmerIntr2.TuneTime++;
 14192  0317  3001               	movlw	1
 14193  0318  00F4               	movwf	??_DimmerLights_DimmingFunction
 14194  0319  0874               	movf	??_DimmerLights_DimmingFunction,w
 14195  031A  07C1               	addwf	(_DimmerIntr2^(0+256)+3),f
 14196                           
 14197                           ;Dimmer_B1.c: 2205: if (DimmerIntr2.TuneTime >= DimmerIntr2.TuneTimeValue) {
 14198  031B  0842               	movf	(_DimmerIntr2^(0+256)+4),w
 14199  031C  0241               	subwf	(_DimmerIntr2^(0+256)+3),w
 14200  031D  1C03               	skipc
 14201  031E  2B5D               	goto	l7879
 14202                           
 14203                           ;Dimmer_B1.c: 2206: DimmerIntr2.TuneTime = 0;
 14204  031F  01C1               	clrf	(_DimmerIntr2^(0+256)+3)
 14205                           
 14206                           ;Dimmer_B1.c: 2207: DimmerIntr2.TuneGO = 1;
 14207  0320  173F               	bsf	(_DimmerIntr2^(0+256)+1),6
 14208                           
 14209                           ;Dimmer_B1.c: 2208: if (DimmerIntr2.Dimming_Sw == 1) {
 14210  0321  1E3E               	btfss	_DimmerIntr2^(0+256),4
 14211  0322  2B41               	goto	l1125
 14212                           
 14213                           ;Dimmer_B1.c: 2227: if (DimmerIntr2.Dimming_Status == 0) {
 14214  0323  1ABE               	btfsc	_DimmerIntr2^(0+256),5
 14215  0324  2B32               	goto	l7861
 14216                           
 14217                           ;Dimmer_B1.c: 2228: if (DimmerIntr2.DimmingValue > ((char)((100-67)*0.55))) {
 14218  0325  3013               	movlw	19
 14219  0326  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14220  0327  1C03               	skipc
 14221  0328  2B30               	goto	l1127
 14222                           
 14223                           ;Dimmer_B1.c: 2229: DimmerIntr2.DimmingValue--;
 14224  0329  3001               	movlw	1
 14225  032A  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 14226                           
 14227                           ;Dimmer_B1.c: 2230: DimmerIntr_ValueCalculate(2);
 14228  032B  3002               	movlw	2
 14229  032C  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14230                           
 14231                           ;Dimmer_B1.c: 2231: } else {
 14232  032F  2B5D               	goto	l7879
 14233  0330                     l1127:	
 14234                           
 14235                           ;Dimmer_B1.c: 2232: DimmerIntr2.Dimming_Status = 1;
 14236  0330  16BE               	bsf	_DimmerIntr2^(0+256),5
 14237                           
 14238                           ;Dimmer_B1.c: 2233: }
 14239                           ;Dimmer_B1.c: 2234: } else {
 14240  0331  2B5D               	goto	l7879
 14241  0332                     l7861:	
 14242                           
 14243                           ;Dimmer_B1.c: 2235: if (DimmerIntr2.DimmingValue < ((char)((100-5)*0.55))) {
 14244  0332  3034               	movlw	52
 14245  0333  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14246  0334  1803               	skipnc
 14247  0335  2B3F               	goto	l1130
 14248                           
 14249                           ;Dimmer_B1.c: 2236: DimmerIntr2.DimmingValue++;
 14250  0336  3001               	movlw	1
 14251  0337  00F4               	movwf	??_DimmerLights_DimmingFunction
 14252  0338  0874               	movf	??_DimmerLights_DimmingFunction,w
 14253  0339  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 14254                           
 14255                           ;Dimmer_B1.c: 2237: DimmerIntr_ValueCalculate(2);
 14256  033A  3002               	movlw	2
 14257  033B  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14258                           
 14259                           ;Dimmer_B1.c: 2238: } else {
 14260  033E  2B5D               	goto	l7879
 14261  033F                     l1130:	
 14262                           
 14263                           ;Dimmer_B1.c: 2239: DimmerIntr2.Dimming_Status = 0;
 14264  033F  12BE               	bcf	_DimmerIntr2^(0+256),5
 14265                           
 14266                           ;Dimmer_B1.c: 2240: }
 14267                           ;Dimmer_B1.c: 2241: }
 14268                           ;Dimmer_B1.c: 2243: } else if (DimmerIntr2.Dimming_RF == 1) {
 14269  0340  2B5D               	goto	l7879
 14270  0341                     l1125:	
 14271  0341  1F3E               	btfss	_DimmerIntr2^(0+256),6
 14272  0342  2B5D               	goto	l7879
 14273                           
 14274                           ;Dimmer_B1.c: 2256: if (DimmerIntr2.DimmingValue > DimmerIntr2.MaxmumValue) {
 14275  0343  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14276  0344  0244               	subwf	(_DimmerIntr2^(0+256)+6),w
 14277  0345  1803               	skipnc
 14278  0346  2B4E               	goto	l7873
 14279                           
 14280                           ;Dimmer_B1.c: 2257: DimmerIntr2.DimmingValue--;
 14281  0347  3001               	movlw	1
 14282  0348  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 14283                           
 14284                           ;Dimmer_B1.c: 2258: DimmerIntr_ValueCalculate(2);
 14285  0349  3002               	movlw	2
 14286  034A  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14287                           
 14288                           ;Dimmer_B1.c: 2259: } else if (DimmerIntr2.DimmingValue < DimmerIntr2.MaxmumValue) {
 14289  034D  2B5D               	goto	l7879
 14290  034E                     l7873:	
 14291  034E  0022               	movlb	2	; select bank2
 14292  034F  0844               	movf	(_DimmerIntr2^(0+256)+6),w
 14293  0350  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 14294  0351  1803               	skipnc
 14295  0352  2B5C               	goto	l1136
 14296                           
 14297                           ;Dimmer_B1.c: 2260: DimmerIntr2.DimmingValue++;
 14298  0353  3001               	movlw	1
 14299  0354  00F4               	movwf	??_DimmerLights_DimmingFunction
 14300  0355  0874               	movf	??_DimmerLights_DimmingFunction,w
 14301  0356  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 14302                           
 14303                           ;Dimmer_B1.c: 2261: DimmerIntr_ValueCalculate(2);
 14304  0357  3002               	movlw	2
 14305  0358  3193  2364  3182   	fcall	_DimmerIntr_ValueCalculate
 14306                           
 14307                           ;Dimmer_B1.c: 2262: } else {
 14308  035B  2B5D               	goto	l7879
 14309  035C                     l1136:	
 14310                           
 14311                           ;Dimmer_B1.c: 2263: DimmerIntr2.Dimming_RF = 0;
 14312  035C  133E               	bcf	_DimmerIntr2^(0+256),6
 14313  035D                     l7879:	
 14314                           
 14315                           ;Dimmer_B1.c: 2264: }
 14316                           ;Dimmer_B1.c: 2266: }
 14317                           ;Dimmer_B1.c: 2267: }
 14318                           ;Dimmer_B1.c: 2268: }
 14319                           ;Dimmer_B1.c: 2269: }
 14320                           ;Dimmer_B1.c: 2273: if (lights == 3) {
 14321  035D  0875               	movf	DimmerLights_DimmingFunction@lights,w
 14322  035E  3A03               	xorlw	3
 14323  035F  1D03               	skipz
 14324  0360  0008               	return
 14325                           
 14326                           ;Dimmer_B1.c: 2274: if (DimmerIntr3.Tune == 1) {
 14327  0361  0022               	movlb	2	; select bank2
 14328  0362  1CCE               	btfss	_DimmerIntr3^(0+256),1
 14329  0363  0008               	return
 14330                           
 14331                           ;Dimmer_B1.c: 2275: DimmerIntr3.Tune = 0;
 14332  0364  10CE               	bcf	_DimmerIntr3^(0+256),1
 14333                           
 14334                           ;Dimmer_B1.c: 2276: DimmerIntr3.TuneTime++;
 14335  0365  3001               	movlw	1
 14336  0366  00F4               	movwf	??_DimmerLights_DimmingFunction
 14337  0367  0874               	movf	??_DimmerLights_DimmingFunction,w
 14338  0368  07D1               	addwf	(_DimmerIntr3^(0+256)+3),f
 14339                           
 14340                           ;Dimmer_B1.c: 2277: if (DimmerIntr3.TuneTime >= DimmerIntr3.TuneTimeValue) {
 14341  0369  0852               	movf	(_DimmerIntr3^(0+256)+4),w
 14342  036A  0251               	subwf	(_DimmerIntr3^(0+256)+3),w
 14343  036B  1C03               	skipc
 14344  036C  0008               	return
 14345                           
 14346                           ;Dimmer_B1.c: 2278: DimmerIntr3.TuneTime = 0;
 14347  036D  01D1               	clrf	(_DimmerIntr3^(0+256)+3)
 14348                           
 14349                           ;Dimmer_B1.c: 2279: DimmerIntr3.TuneGO = 1;
 14350  036E  174F               	bsf	(_DimmerIntr3^(0+256)+1),6
 14351                           
 14352                           ;Dimmer_B1.c: 2280: if (DimmerIntr3.Dimming_Sw == 1) {
 14353  036F  1E4E               	btfss	_DimmerIntr3^(0+256),4
 14354  0370  2B8D               	goto	l1141
 14355                           
 14356                           ;Dimmer_B1.c: 2299: if (DimmerIntr3.Dimming_Status == 0) {
 14357  0371  1ACE               	btfsc	_DimmerIntr3^(0+256),5
 14358  0372  2B7F               	goto	l7903
 14359                           
 14360                           ;Dimmer_B1.c: 2300: if (DimmerIntr3.DimmingValue > ((char)((100-67)*0.55))) {
 14361  0373  3013               	movlw	19
 14362  0374  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14363  0375  1C03               	skipc
 14364  0376  2B7D               	goto	l1143
 14365                           
 14366                           ;Dimmer_B1.c: 2301: DimmerIntr3.DimmingValue--;
 14367  0377  3001               	movlw	1
 14368  0378  02D3               	subwf	(_DimmerIntr3^(0+256)+5),f
 14369                           
 14370                           ;Dimmer_B1.c: 2302: DimmerIntr_ValueCalculate(3);
 14371  0379  3003               	movlw	3
 14372  037A  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14373                           
 14374                           ;Dimmer_B1.c: 2303: } else {
 14375  037C  0008               	return
 14376  037D                     l1143:	
 14377                           
 14378                           ;Dimmer_B1.c: 2304: DimmerIntr3.Dimming_Status = 1;
 14379  037D  16CE               	bsf	_DimmerIntr3^(0+256),5
 14380                           
 14381                           ;Dimmer_B1.c: 2305: }
 14382                           ;Dimmer_B1.c: 2306: } else {
 14383  037E  0008               	return
 14384  037F                     l7903:	
 14385                           
 14386                           ;Dimmer_B1.c: 2307: if (DimmerIntr3.DimmingValue < ((char)((100-5)*0.55))) {
 14387  037F  3034               	movlw	52
 14388  0380  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14389  0381  1803               	skipnc
 14390  0382  2B8B               	goto	l1146
 14391                           
 14392                           ;Dimmer_B1.c: 2308: DimmerIntr3.DimmingValue++;
 14393  0383  3001               	movlw	1
 14394  0384  00F4               	movwf	??_DimmerLights_DimmingFunction
 14395  0385  0874               	movf	??_DimmerLights_DimmingFunction,w
 14396  0386  07D3               	addwf	(_DimmerIntr3^(0+256)+5),f
 14397                           
 14398                           ;Dimmer_B1.c: 2309: DimmerIntr_ValueCalculate(3);
 14399  0387  3003               	movlw	3
 14400  0388  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14401                           
 14402                           ;Dimmer_B1.c: 2310: } else {
 14403  038A  0008               	return
 14404  038B                     l1146:	
 14405                           
 14406                           ;Dimmer_B1.c: 2311: DimmerIntr3.Dimming_Status = 0;
 14407  038B  12CE               	bcf	_DimmerIntr3^(0+256),5
 14408                           
 14409                           ;Dimmer_B1.c: 2312: }
 14410                           ;Dimmer_B1.c: 2313: }
 14411                           ;Dimmer_B1.c: 2315: } else if (DimmerIntr3.Dimming_RF == 1) {
 14412  038C  0008               	return
 14413  038D                     l1141:	
 14414  038D  1F4E               	btfss	_DimmerIntr3^(0+256),6
 14415  038E  0008               	return
 14416                           
 14417                           ;Dimmer_B1.c: 2328: if (DimmerIntr3.DimmingValue > DimmerIntr3.MaxmumValue) {
 14418  038F  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 14419  0390  0254               	subwf	(_DimmerIntr3^(0+256)+6),w
 14420  0391  1803               	skipnc
 14421  0392  2B99               	goto	l7915
 14422                           
 14423                           ;Dimmer_B1.c: 2329: DimmerIntr3.DimmingValue--;
 14424  0393  3001               	movlw	1
 14425  0394  02D3               	subwf	(_DimmerIntr3^(0+256)+5),f
 14426                           
 14427                           ;Dimmer_B1.c: 2330: DimmerIntr_ValueCalculate(3);
 14428  0395  3003               	movlw	3
 14429  0396  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14430                           
 14431                           ;Dimmer_B1.c: 2331: } else if (DimmerIntr3.DimmingValue < DimmerIntr3.MaxmumValue) {
 14432  0398  0008               	return
 14433  0399                     l7915:	
 14434  0399  0022               	movlb	2	; select bank2
 14435  039A  0854               	movf	(_DimmerIntr3^(0+256)+6),w
 14436  039B  0253               	subwf	(_DimmerIntr3^(0+256)+5),w
 14437  039C  1803               	skipnc
 14438  039D  2BA6               	goto	l1152
 14439                           
 14440                           ;Dimmer_B1.c: 2332: DimmerIntr3.DimmingValue++;
 14441  039E  3001               	movlw	1
 14442  039F  00F4               	movwf	??_DimmerLights_DimmingFunction
 14443  03A0  0874               	movf	??_DimmerLights_DimmingFunction,w
 14444  03A1  07D3               	addwf	(_DimmerIntr3^(0+256)+5),f
 14445                           
 14446                           ;Dimmer_B1.c: 2333: DimmerIntr_ValueCalculate(3);
 14447  03A2  3003               	movlw	3
 14448  03A3  3193  2364         	fcall	_DimmerIntr_ValueCalculate
 14449                           
 14450                           ;Dimmer_B1.c: 2334: } else {
 14451  03A5  0008               	return
 14452  03A6                     l1152:	
 14453                           
 14454                           ;Dimmer_B1.c: 2335: DimmerIntr3.Dimming_RF = 0;
 14455  03A6  134E               	bcf	_DimmerIntr3^(0+256),6
 14456  03A7  0008               	return
 14457  03A8                     __end_of_DimmerLights_DimmingFunction:	
 14458                           
 14459                           	psect	text97
 14460  1364                     __ptext97:	
 14461 ;; *************** function _DimmerIntr_ValueCalculate *****************
 14462 ;; Defined at:
 14463 ;;		line 2058 in file "../src/Dimmer_B1.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;  lights          1    wreg     unsigned char 
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;  lights          1    3[COMMON] unsigned char 
 14468 ;; Return value:  Size  Location     Type
 14469 ;;		None               void
 14470 ;; Registers used:
 14471 ;;		wreg
 14472 ;; Tracked objects:
 14473 ;;		On entry : 0/0
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;Total ram usage:        2 bytes
 14482 ;; Hardware stack levels used:    1
 14483 ;; Hardware stack levels required when called:    3
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		_setDimmerLights_OnOff
 14488 ;;		_DimmerLights_DimmingFunction
 14489 ;; This function uses a non-reentrant model
 14490 ;;
 14491                           
 14492                           
 14493                           ;psect for function _DimmerIntr_ValueCalculate
 14494  1364                     _DimmerIntr_ValueCalculate:	
 14495                           
 14496                           ;incstack = 0
 14497                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg]
 14498                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 14499  1364  00F3               	movwf	DimmerIntr_ValueCalculate@lights
 14500                           
 14501                           ;Dimmer_B1.c: 2060: if (lights == 1) {
 14502  1365  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14503  1366  3A01               	xorlw	1
 14504  1367  1D03               	skipz
 14505  1368  2B73               	goto	l1100
 14506                           
 14507                           ;Dimmer_B1.c: 2062: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 14508  1369  0021               	movlb	1	; select bank1
 14509  136A  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14510  136B  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14511  136C  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14512  136D  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 14513                           
 14514                           ;Dimmer_B1.c: 2063: DimmerIntr1.TuneEnd = 55;
 14515  136E  3037               	movlw	55
 14516  136F  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14517  1370  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14518  1371  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 14519                           
 14520                           ;Dimmer_B1.c: 2064: DimmerIntr1.Calculate = 1;
 14521  1372  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 14522  1373                     l1100:	
 14523                           
 14524                           ;Dimmer_B1.c: 2078: }
 14525                           ;Dimmer_B1.c: 2083: if (lights == 2) {
 14526  1373  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14527  1374  3A02               	xorlw	2
 14528  1375  1D03               	skipz
 14529  1376  2B81               	goto	l1101
 14530                           
 14531                           ;Dimmer_B1.c: 2085: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14532  1377  0022               	movlb	2	; select bank2
 14533  1378  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14534  1379  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14535  137A  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14536  137B  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14537                           
 14538                           ;Dimmer_B1.c: 2086: DimmerIntr2.TuneEnd = 55;
 14539  137C  3037               	movlw	55
 14540  137D  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14541  137E  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14542  137F  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14543                           
 14544                           ;Dimmer_B1.c: 2087: DimmerIntr2.Calculate = 1;
 14545  1380  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14546  1381                     l1101:	
 14547                           
 14548                           ;Dimmer_B1.c: 2101: }
 14549                           ;Dimmer_B1.c: 2105: if (lights == 3) {
 14550  1381  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14551  1382  3A03               	xorlw	3
 14552  1383  1D03               	skipz
 14553  1384  0008               	return
 14554                           
 14555                           ;Dimmer_B1.c: 2107: DimmerIntr3.TuneValue2 = DimmerIntr3.DimmingValue;
 14556  1385  0022               	movlb	2	; select bank2
 14557  1386  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 14558  1387  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14559  1388  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14560  1389  00D6               	movwf	(_DimmerIntr3^(0+256)+8)
 14561                           
 14562                           ;Dimmer_B1.c: 2108: DimmerIntr3.TuneEnd = 55;
 14563  138A  3037               	movlw	55
 14564  138B  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14565  138C  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14566  138D  00D9               	movwf	(_DimmerIntr3^(0+256)+11)
 14567                           
 14568                           ;Dimmer_B1.c: 2109: DimmerIntr3.Calculate = 1;
 14569  138E  17CF               	bsf	(_DimmerIntr3^(0+256)+1),7
 14570  138F  0008               	return
 14571  1390                     __end_of_DimmerIntr_ValueCalculate:	
 14572                           
 14573                           	psect	text98
 14574  1D7E                     __ptext98:	
 14575 ;; *************** function _DimmerLights_Initialization *****************
 14576 ;; Defined at:
 14577 ;;		line 703 in file "../src/Dimmer_B1.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;		None
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;		None
 14582 ;; Return value:  Size  Location     Type
 14583 ;;		None               void
 14584 ;; Registers used:
 14585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14586 ;; Tracked objects:
 14587 ;;		On entry : 0/0
 14588 ;;		On exit  : 0/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;Total ram usage:        0 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; Hardware stack levels required when called:    7
 14598 ;; This function calls:
 14599 ;;		_DimmerIntr_Initialization
 14600 ;;		_setDimmerLights_Initialization
 14601 ;; This function is called by:
 14602 ;;		_main
 14603 ;; This function uses a non-reentrant model
 14604 ;;
 14605                           
 14606                           
 14607                           ;psect for function _DimmerLights_Initialization
 14608  1D7E                     _DimmerLights_Initialization:	
 14609                           
 14610                           ;Dimmer_B1.c: 705: setDimmerLights_Initialization(1);
 14611                           
 14612                           ;incstack = 0
 14613                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14614  1D7E  3001               	movlw	1
 14615  1D7F  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14616                           
 14617                           ;Dimmer_B1.c: 709: setDimmerLights_Initialization(2);
 14618  1D82  3002               	movlw	2
 14619  1D83  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14620                           
 14621                           ;Dimmer_B1.c: 713: setDimmerLights_Initialization(3);
 14622  1D86  3003               	movlw	3
 14623  1D87  3187  27FF  319D   	fcall	_setDimmerLights_Initialization
 14624                           
 14625                           ;Dimmer_B1.c: 715: DimmerIntr_Initialization();
 14626  1D8A  3185  25F5         	fcall	_DimmerIntr_Initialization
 14627  1D8C  0008               	return
 14628  1D8D                     __end_of_DimmerLights_Initialization:	
 14629                           
 14630                           	psect	text99
 14631  07FF                     __ptext99:	
 14632 ;; *************** function _setDimmerLights_Initialization *****************
 14633 ;; Defined at:
 14634 ;;		line 719 in file "../src/Dimmer_B1.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  lights          1    wreg     unsigned char 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  lights          1    0[COMMON] unsigned char 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;		None               void
 14641 ;; Registers used:
 14642 ;;		wreg
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14652 ;;Total ram usage:        0 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    3
 14655 ;; This function calls:
 14656 ;;		Nothing
 14657 ;; This function is called by:
 14658 ;;		_DimmerLights_Initialization
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662                           
 14663                           ;psect for function _setDimmerLights_Initialization
 14664  07FF                     _setDimmerLights_Initialization:	
 14665                           
 14666                           ;incstack = 0
 14667                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 14668  07FF  0008               	return
 14669  0800                     __end_of_setDimmerLights_Initialization:	
 14670                           
 14671                           	psect	text100
 14672  05F5                     __ptext100:	
 14673 ;; *************** function _DimmerIntr_Initialization *****************
 14674 ;; Defined at:
 14675 ;;		line 7 in file "../src/Dimmer_B1.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;		None
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;		None               void
 14682 ;; Registers used:
 14683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14693 ;;Total ram usage:        1 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    6
 14696 ;; This function calls:
 14697 ;;		_getDimmerLights_PercentToValue
 14698 ;;		_getDimmerLights_ValueToPercent
 14699 ;;		_setMemory_Modify
 14700 ;; This function is called by:
 14701 ;;		_DimmerLights_Initialization
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           
 14706                           ;psect for function _DimmerIntr_Initialization
 14707  05F5                     _DimmerIntr_Initialization:	
 14708                           
 14709                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 14710                           
 14711                           ;incstack = 0
 14712                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14713  05F5  3003               	movlw	3
 14714  05F6  0020               	movlb	0	; select bank0
 14715  05F7  00D8               	movwf	??_DimmerIntr_Initialization
 14716  05F8  0858               	movf	??_DimmerIntr_Initialization,w
 14717  05F9  0021               	movlb	1	; select bank1
 14718  05FA  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 14719                           
 14720                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-67)*0.55));
 14721  05FB  3012               	movlw	18
 14722  05FC  0020               	movlb	0	; select bank0
 14723  05FD  00D8               	movwf	??_DimmerIntr_Initialization
 14724  05FE  0858               	movf	??_DimmerIntr_Initialization,w
 14725  05FF  0021               	movlb	1	; select bank1
 14726  0600  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 14727                           
 14728                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-5)*0.55));
 14729  0601  3034               	movlw	52
 14730  0602  0020               	movlb	0	; select bank0
 14731  0603  00D8               	movwf	??_DimmerIntr_Initialization
 14732  0604  0858               	movf	??_DimmerIntr_Initialization,w
 14733  0605  0021               	movlb	1	; select bank1
 14734  0606  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 14735                           
 14736                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 14737  0607  10A0               	bcf	_DimmerIntr1^(0+128),1
 14738                           
 14739                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)((100-67)*0.
      +                          55)));
 14740  0608  3012               	movlw	18
 14741  0609  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14742  060C  0020               	movlb	0	; select bank0
 14743  060D  00D8               	movwf	??_DimmerIntr_Initialization
 14744  060E  086E               	movf	_product,w
 14745  060F  3E15               	addlw	21
 14746  0610  0086               	movwf	6
 14747  0611  3002               	movlw	2	; select bank4/5
 14748  0612  0087               	movwf	7
 14749  0613  0858               	movf	??_DimmerIntr_Initialization,w
 14750  0614  0081               	movwf	1
 14751                           
 14752                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 14753  0615  086E               	movf	_product,w
 14754  0616  3E15               	addlw	21
 14755  0617  0086               	movwf	6
 14756  0618  3002               	movlw	2	; select bank4/5
 14757  0619  0087               	movwf	7
 14758  061A  0801               	movf	1,w
 14759  061B  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 14760  061E  0020               	movlb	0	; select bank0
 14761  061F  00D8               	movwf	??_DimmerIntr_Initialization
 14762  0620  0858               	movf	??_DimmerIntr_Initialization,w
 14763  0621  0021               	movlb	1	; select bank1
 14764  0622  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 14765                           
 14766                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 14767  0623  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14768  0624  0020               	movlb	0	; select bank0
 14769  0625  00D8               	movwf	??_DimmerIntr_Initialization
 14770  0626  0858               	movf	??_DimmerIntr_Initialization,w
 14771  0627  0021               	movlb	1	; select bank1
 14772  0628  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 14773                           
 14774                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneEnd = 55;
 14775  0629  3037               	movlw	55
 14776  062A  0020               	movlb	0	; select bank0
 14777  062B  00D8               	movwf	??_DimmerIntr_Initialization
 14778  062C  0858               	movf	??_DimmerIntr_Initialization,w
 14779  062D  0021               	movlb	1	; select bank1
 14780  062E  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 14781                           
 14782                           ;Dimmer_B1.c: 32: DimmerIntr1.Calculate = 1;
 14783  062F  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 14784                           
 14785                           ;Dimmer_B1.c: 51: DimmerIntr2.TuneTimeValue = 3;
 14786  0630  3003               	movlw	3
 14787  0631  0020               	movlb	0	; select bank0
 14788  0632  00D8               	movwf	??_DimmerIntr_Initialization
 14789  0633  0858               	movf	??_DimmerIntr_Initialization,w
 14790  0634  0022               	movlb	2	; select bank2
 14791  0635  00C2               	movwf	(_DimmerIntr2^(0+256)+4)
 14792                           
 14793                           ;Dimmer_B1.c: 52: DimmerIntr2.MaxmumValue = ((char)((100-67)*0.55));
 14794  0636  3012               	movlw	18
 14795  0637  0020               	movlb	0	; select bank0
 14796  0638  00D8               	movwf	??_DimmerIntr_Initialization
 14797  0639  0858               	movf	??_DimmerIntr_Initialization,w
 14798  063A  0022               	movlb	2	; select bank2
 14799  063B  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 14800                           
 14801                           ;Dimmer_B1.c: 53: DimmerIntr2.MinimumValue = ((char)((100-5)*0.55));
 14802  063C  3034               	movlw	52
 14803  063D  0020               	movlb	0	; select bank0
 14804  063E  00D8               	movwf	??_DimmerIntr_Initialization
 14805  063F  0858               	movf	??_DimmerIntr_Initialization,w
 14806  0640  0022               	movlb	2	; select bank2
 14807  0641  00C5               	movwf	(_DimmerIntr2^(0+256)+7)
 14808                           
 14809                           ;Dimmer_B1.c: 54: DimmerIntr2.Tune = 0;
 14810  0642  10BE               	bcf	_DimmerIntr2^(0+256),1
 14811                           
 14812                           ;Dimmer_B1.c: 59: product->Data[22] = getDimmerLights_ValueToPercent(((char)((100-67)*0.
      +                          55)));
 14813  0643  3012               	movlw	18
 14814  0644  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14815  0647  0020               	movlb	0	; select bank0
 14816  0648  00D8               	movwf	??_DimmerIntr_Initialization
 14817  0649  086E               	movf	_product,w
 14818  064A  3E16               	addlw	22
 14819  064B  0086               	movwf	6
 14820  064C  3002               	movlw	2	; select bank4/5
 14821  064D  0087               	movwf	7
 14822  064E  0858               	movf	??_DimmerIntr_Initialization,w
 14823  064F  0081               	movwf	1
 14824                           
 14825                           ;Dimmer_B1.c: 62: DimmerIntr2.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[22]);
 14826  0650  086E               	movf	_product,w
 14827  0651  3E16               	addlw	22
 14828  0652  0086               	movwf	6
 14829  0653  3002               	movlw	2	; select bank4/5
 14830  0654  0087               	movwf	7
 14831  0655  0801               	movf	1,w
 14832  0656  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 14833  0659  0020               	movlb	0	; select bank0
 14834  065A  00D8               	movwf	??_DimmerIntr_Initialization
 14835  065B  0858               	movf	??_DimmerIntr_Initialization,w
 14836  065C  0022               	movlb	2	; select bank2
 14837  065D  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 14838                           
 14839                           ;Dimmer_B1.c: 71: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14840  065E  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14841  065F  0020               	movlb	0	; select bank0
 14842  0660  00D8               	movwf	??_DimmerIntr_Initialization
 14843  0661  0858               	movf	??_DimmerIntr_Initialization,w
 14844  0662  0022               	movlb	2	; select bank2
 14845  0663  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14846                           
 14847                           ;Dimmer_B1.c: 72: DimmerIntr2.TuneEnd = 55;
 14848  0664  3037               	movlw	55
 14849  0665  0020               	movlb	0	; select bank0
 14850  0666  00D8               	movwf	??_DimmerIntr_Initialization
 14851  0667  0858               	movf	??_DimmerIntr_Initialization,w
 14852  0668  0022               	movlb	2	; select bank2
 14853  0669  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14854                           
 14855                           ;Dimmer_B1.c: 73: DimmerIntr2.Calculate = 1;
 14856  066A  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14857                           
 14858                           ;Dimmer_B1.c: 90: DimmerIntr3.TuneTimeValue = 3;
 14859  066B  3003               	movlw	3
 14860  066C  0020               	movlb	0	; select bank0
 14861  066D  00D8               	movwf	??_DimmerIntr_Initialization
 14862  066E  0858               	movf	??_DimmerIntr_Initialization,w
 14863  066F  0022               	movlb	2	; select bank2
 14864  0670  00D2               	movwf	(_DimmerIntr3^(0+256)+4)
 14865                           
 14866                           ;Dimmer_B1.c: 91: DimmerIntr3.MaxmumValue = ((char)((100-67)*0.55));
 14867  0671  3012               	movlw	18
 14868  0672  0020               	movlb	0	; select bank0
 14869  0673  00D8               	movwf	??_DimmerIntr_Initialization
 14870  0674  0858               	movf	??_DimmerIntr_Initialization,w
 14871  0675  0022               	movlb	2	; select bank2
 14872  0676  00D4               	movwf	(_DimmerIntr3^(0+256)+6)
 14873                           
 14874                           ;Dimmer_B1.c: 92: DimmerIntr3.MinimumValue = ((char)((100-5)*0.55));
 14875  0677  3034               	movlw	52
 14876  0678  0020               	movlb	0	; select bank0
 14877  0679  00D8               	movwf	??_DimmerIntr_Initialization
 14878  067A  0858               	movf	??_DimmerIntr_Initialization,w
 14879  067B  0022               	movlb	2	; select bank2
 14880  067C  00D5               	movwf	(_DimmerIntr3^(0+256)+7)
 14881                           
 14882                           ;Dimmer_B1.c: 95: product->Data[23] = getDimmerLights_ValueToPercent(((char)((100-67)*0.
      +                          55)));
 14883  067D  3012               	movlw	18
 14884  067E  3197  2724  3185   	fcall	_getDimmerLights_ValueToPercent
 14885  0681  0020               	movlb	0	; select bank0
 14886  0682  00D8               	movwf	??_DimmerIntr_Initialization
 14887  0683  086E               	movf	_product,w
 14888  0684  3E17               	addlw	23
 14889  0685  0086               	movwf	6
 14890  0686  3002               	movlw	2	; select bank4/5
 14891  0687  0087               	movwf	7
 14892  0688  0858               	movf	??_DimmerIntr_Initialization,w
 14893  0689  0081               	movwf	1
 14894                           
 14895                           ;Dimmer_B1.c: 97: DimmerIntr3.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[23]);
 14896  068A  086E               	movf	_product,w
 14897  068B  3E17               	addlw	23
 14898  068C  0086               	movwf	6
 14899  068D  3002               	movlw	2	; select bank4/5
 14900  068E  0087               	movwf	7
 14901  068F  0801               	movf	1,w
 14902  0690  3188  20F7  3185   	fcall	_getDimmerLights_PercentToValue
 14903  0693  0020               	movlb	0	; select bank0
 14904  0694  00D8               	movwf	??_DimmerIntr_Initialization
 14905  0695  0858               	movf	??_DimmerIntr_Initialization,w
 14906  0696  0022               	movlb	2	; select bank2
 14907  0697  00D3               	movwf	(_DimmerIntr3^(0+256)+5)
 14908                           
 14909                           ;Dimmer_B1.c: 104: DimmerIntr3.TuneValue2 = DimmerIntr3.DimmingValue;
 14910  0698  0853               	movf	(_DimmerIntr3^(0+256)+5),w
 14911  0699  0020               	movlb	0	; select bank0
 14912  069A  00D8               	movwf	??_DimmerIntr_Initialization
 14913  069B  0858               	movf	??_DimmerIntr_Initialization,w
 14914  069C  0022               	movlb	2	; select bank2
 14915  069D  00D6               	movwf	(_DimmerIntr3^(0+256)+8)
 14916                           
 14917                           ;Dimmer_B1.c: 105: DimmerIntr3.TuneEnd = 55;
 14918  069E  3037               	movlw	55
 14919  069F  0020               	movlb	0	; select bank0
 14920  06A0  00D8               	movwf	??_DimmerIntr_Initialization
 14921  06A1  0858               	movf	??_DimmerIntr_Initialization,w
 14922  06A2  0022               	movlb	2	; select bank2
 14923  06A3  00D9               	movwf	(_DimmerIntr3^(0+256)+11)
 14924                           
 14925                           ;Dimmer_B1.c: 106: DimmerIntr3.Calculate = 1;
 14926  06A4  17CF               	bsf	(_DimmerIntr3^(0+256)+1),7
 14927                           
 14928                           ;Dimmer_B1.c: 111: if (myMain.InitDimmer == 1) {
 14929  06A5  0021               	movlb	1	; select bank1
 14930  06A6  1E49               	btfss	(_myMain^(0+128)+10),4
 14931  06A7  0008               	return
 14932                           
 14933                           ;Dimmer_B1.c: 112: myMain.InitDimmer = 0;
 14934  06A8  1249               	bcf	(_myMain^(0+128)+10),4
 14935                           
 14936                           ;Dimmer_B1.c: 113: myMain.SaveDimmer = 1;
 14937  06A9  16C9               	bsf	(_myMain^(0+128)+10),5
 14938                           
 14939                           ;Dimmer_B1.c: 114: setMemory_Modify(1);
 14940  06AA  3001               	movlw	1
 14941  06AB  319D  25F6         	fcall	_setMemory_Modify
 14942  06AD  0008               	return
 14943  06AE                     __end_of_DimmerIntr_Initialization:	
 14944                           
 14945                           	psect	text101
 14946  1DF6                     __ptext101:	
 14947 ;; *************** function _setMemory_Modify *****************
 14948 ;; Defined at:
 14949 ;;		line 1088 in file "../src/MCU_B1.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;  command         1    wreg     unsigned char 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  command         1    3[COMMON] unsigned char 
 14954 ;; Return value:  Size  Location     Type
 14955 ;;		None               void
 14956 ;; Registers used:
 14957 ;;		wreg, status,2, status,0
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;Total ram usage:        2 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    3
 14970 ;; This function calls:
 14971 ;;		Nothing
 14972 ;; This function is called by:
 14973 ;;		_DimmerIntr_Initialization
 14974 ;;		_setDimmerLights_Dimming
 14975 ;;		_setLog_Code
 14976 ;;		_setRFSW_AdjControl
 14977 ;;		_DimmerLights_AssignationDimming
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           
 14982                           ;psect for function _setMemory_Modify
 14983  1DF6                     _setMemory_Modify:	
 14984                           
 14985                           ;incstack = 0
 14986                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 14987                           ;setMemory_Modify@command stored from wreg
 14988  1DF6  00F3               	movwf	setMemory_Modify@command
 14989                           
 14990                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
 14991  1DF7  0873               	movf	setMemory_Modify@command,w
 14992  1DF8  3A01               	xorlw	1
 14993  1DF9  3000               	movlw	0
 14994  1DFA  1903               	skipnz
 14995  1DFB  3001               	movlw	1
 14996  1DFC  00F2               	movwf	??_setMemory_Modify
 14997  1DFD  0024               	movlb	4	; select bank4
 14998  1DFE  0844               	movf	(_Memory^(0+512)+36),w
 14999  1DFF  0672               	xorwf	??_setMemory_Modify,w
 15000  1E00  39FE               	andlw	-2
 15001  1E01  0672               	xorwf	??_setMemory_Modify,w
 15002  1E02  00C4               	movwf	(_Memory^(0+512)+36)
 15003                           
 15004                           ;MCU_B1.c: 1090: Memory.Time = 0;
 15005  1E03  01C2               	clrf	(_Memory^(0+512)+34)
 15006  1E04  01C3               	clrf	((_Memory+1)^(0+512)+34)
 15007  1E05  0008               	return
 15008  1E06                     __end_of_setMemory_Modify:	
 15009                           
 15010                           	psect	text102
 15011  1724                     __ptext102:	
 15012 ;; *************** function _getDimmerLights_ValueToPercent *****************
 15013 ;; Defined at:
 15014 ;;		line 1315 in file "../src/Dimmer_B1.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  value           1    wreg     unsigned char 
 15017 ;; Auto vars:     Size  Location     Type
 15018 ;;  value           1   50[BANK0 ] unsigned char 
 15019 ;;  i               3   51[BANK0 ] float 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      unsigned char 
 15022 ;; Registers used:
 15023 ;;		wreg, status,2, status,0, pclath, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;Total ram usage:        4 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:    5
 15036 ;; This function calls:
 15037 ;;		___awtoft
 15038 ;;		___ftdiv
 15039 ;;		___fttol
 15040 ;; This function is called by:
 15041 ;;		_DimmerIntr_Initialization
 15042 ;;		_setDimmerLights_Dimming
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           
 15047                           ;psect for function _getDimmerLights_ValueToPercent
 15048  1724                     _getDimmerLights_ValueToPercent:	
 15049                           
 15050                           ;incstack = 0
 15051                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 15052                           ;getDimmerLights_ValueToPercent@value stored from wreg
 15053  1724  0020               	movlb	0	; select bank0
 15054  1725  00D2               	movwf	getDimmerLights_ValueToPercent@value
 15055                           
 15056                           ;Dimmer_B1.c: 1317: float i = ((char)((100-5)*0.55)) - ((char)((100-67)*0.55));
 15057  1726  3000               	movlw	0
 15058  1727  00D3               	movwf	getDimmerLights_ValueToPercent@i
 15059  1728  3008               	movlw	8
 15060  1729  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 15061  172A  3042               	movlw	66
 15062  172B  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 15063                           
 15064                           ;Dimmer_B1.c: 1318: i /= 100;
 15065  172C  3000               	movlw	0
 15066  172D  00A7               	movwf	___ftdiv@f2
 15067  172E  30C8               	movlw	200
 15068  172F  00A8               	movwf	___ftdiv@f2+1
 15069  1730  3042               	movlw	66
 15070  1731  00A9               	movwf	___ftdiv@f2+2
 15071  1732  0853               	movf	getDimmerLights_ValueToPercent@i,w
 15072  1733  00AA               	movwf	___ftdiv@f1
 15073  1734  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 15074  1735  00AB               	movwf	___ftdiv@f1+1
 15075  1736  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 15076  1737  00AC               	movwf	___ftdiv@f1+2
 15077  1738  318E  26A3  3197   	fcall	___ftdiv
 15078  173B  0020               	movlb	0	; select bank0
 15079  173C  0827               	movf	?___ftdiv,w
 15080  173D  00D3               	movwf	getDimmerLights_ValueToPercent@i
 15081  173E  0828               	movf	?___ftdiv+1,w
 15082  173F  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 15083  1740  0829               	movf	?___ftdiv+2,w
 15084  1741  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 15085                           
 15086                           ;Dimmer_B1.c: 1319: return (100 - (char) ((value - ((char)((100-67)*0.55))) / i));
 15087  1742  0852               	movf	getDimmerLights_ValueToPercent@value,w
 15088  1743  3EEE               	addlw	238
 15089  1744  00A3               	movwf	___awtoft@c
 15090  1745  30FF               	movlw	255
 15091  1746  1803               	skipnc
 15092  1747  3000               	movlw	0
 15093  1748  00A4               	movwf	___awtoft@c+1
 15094  1749  3191  21F6  3197   	fcall	___awtoft
 15095  174C  0020               	movlb	0	; select bank0
 15096  174D  0823               	movf	?___awtoft,w
 15097  174E  00AA               	movwf	___ftdiv@f1
 15098  174F  0824               	movf	?___awtoft+1,w
 15099  1750  00AB               	movwf	___ftdiv@f1+1
 15100  1751  0825               	movf	?___awtoft+2,w
 15101  1752  00AC               	movwf	___ftdiv@f1+2
 15102  1753  0853               	movf	getDimmerLights_ValueToPercent@i,w
 15103  1754  00A7               	movwf	___ftdiv@f2
 15104  1755  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 15105  1756  00A8               	movwf	___ftdiv@f2+1
 15106  1757  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 15107  1758  00A9               	movwf	___ftdiv@f2+2
 15108  1759  318E  26A3  3197   	fcall	___ftdiv
 15109  175C  0020               	movlb	0	; select bank0
 15110  175D  0827               	movf	?___ftdiv,w
 15111  175E  00C4               	movwf	___fttol@f1
 15112  175F  0828               	movf	?___ftdiv+1,w
 15113  1760  00C5               	movwf	___fttol@f1+1
 15114  1761  0829               	movf	?___ftdiv+2,w
 15115  1762  00C6               	movwf	___fttol@f1+2
 15116  1763  318D  250C         	fcall	___fttol
 15117  1765  0020               	movlb	0	; select bank0
 15118  1766  0344               	decf	?___fttol,w
 15119  1767  3AFF               	xorlw	255
 15120  1768  3E64               	addlw	100
 15121  1769  0008               	return
 15122  176A                     __end_of_getDimmerLights_ValueToPercent:	
 15123                           
 15124                           	psect	text103
 15125  08F7                     __ptext103:	
 15126 ;; *************** function _getDimmerLights_PercentToValue *****************
 15127 ;; Defined at:
 15128 ;;		line 1299 in file "../src/Dimmer_B1.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;  value           1    wreg     unsigned char 
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  value           1   52[BANK0 ] unsigned char 
 15133 ;;  i               3   53[BANK0 ] float 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      unsigned char 
 15136 ;; Registers used:
 15137 ;;		wreg, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        6 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    5
 15150 ;; This function calls:
 15151 ;;		___awtoft
 15152 ;;		___ftadd
 15153 ;;		___ftdiv
 15154 ;;		___ftmul
 15155 ;;		___fttol
 15156 ;; This function is called by:
 15157 ;;		_DimmerIntr_Initialization
 15158 ;;		_setDimmerLights_OnOff
 15159 ;;		_setRFSW_AdjControl
 15160 ;;		_DimmerLights_AssignationDimming
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164                           
 15165                           ;psect for function _getDimmerLights_PercentToValue
 15166  08F7                     _getDimmerLights_PercentToValue:	
 15167                           
 15168                           ;incstack = 0
 15169                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 15170                           ;getDimmerLights_PercentToValue@value stored from wreg
 15171  08F7  0020               	movlb	0	; select bank0
 15172  08F8  00D4               	movwf	getDimmerLights_PercentToValue@value
 15173                           
 15174                           ;Dimmer_B1.c: 1301: float i = ((char)((100-5)*0.55)) - ((char)((100-67)*0.55));
 15175  08F9  3000               	movlw	0
 15176  08FA  00D5               	movwf	getDimmerLights_PercentToValue@i
 15177  08FB  3008               	movlw	8
 15178  08FC  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 15179  08FD  3042               	movlw	66
 15180  08FE  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 15181                           
 15182                           ;Dimmer_B1.c: 1302: i /= 100;
 15183  08FF  3000               	movlw	0
 15184  0900  00A7               	movwf	___ftdiv@f2
 15185  0901  30C8               	movlw	200
 15186  0902  00A8               	movwf	___ftdiv@f2+1
 15187  0903  3042               	movlw	66
 15188  0904  00A9               	movwf	___ftdiv@f2+2
 15189  0905  0855               	movf	getDimmerLights_PercentToValue@i,w
 15190  0906  00AA               	movwf	___ftdiv@f1
 15191  0907  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 15192  0908  00AB               	movwf	___ftdiv@f1+1
 15193  0909  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 15194  090A  00AC               	movwf	___ftdiv@f1+2
 15195  090B  318E  26A3  3188   	fcall	___ftdiv
 15196  090E  0020               	movlb	0	; select bank0
 15197  090F  0827               	movf	?___ftdiv,w
 15198  0910  00D5               	movwf	getDimmerLights_PercentToValue@i
 15199  0911  0828               	movf	?___ftdiv+1,w
 15200  0912  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 15201  0913  0829               	movf	?___ftdiv+2,w
 15202  0914  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 15203                           
 15204                           ;Dimmer_B1.c: 1303: return (char) (((100 - value) * i) + ((char)((100-67)*0.55)));
 15205  0915  0854               	movf	getDimmerLights_PercentToValue@value,w
 15206  0916  00D2               	movwf	??_getDimmerLights_PercentToValue
 15207  0917  01D3               	clrf	??_getDimmerLights_PercentToValue+1
 15208  0918  09D2               	comf	??_getDimmerLights_PercentToValue,f
 15209  0919  09D3               	comf	??_getDimmerLights_PercentToValue+1,f
 15210  091A  0AD2               	incf	??_getDimmerLights_PercentToValue,f
 15211  091B  1903               	skipnz
 15212  091C  0AD3               	incf	??_getDimmerLights_PercentToValue+1,f
 15213  091D  0852               	movf	??_getDimmerLights_PercentToValue,w
 15214  091E  3E64               	addlw	100
 15215  091F  00A3               	movwf	___awtoft@c
 15216  0920  3000               	movlw	0
 15217  0921  3D53               	addwfc	??_getDimmerLights_PercentToValue+1,w
 15218  0922  00A4               	movwf	___awtoft@c+1
 15219  0923  3191  21F6  3188   	fcall	___awtoft
 15220  0926  0020               	movlb	0	; select bank0
 15221  0927  0823               	movf	?___awtoft,w
 15222  0928  00AA               	movwf	___ftmul@f2
 15223  0929  0824               	movf	?___awtoft+1,w
 15224  092A  00AB               	movwf	___ftmul@f2+1
 15225  092B  0825               	movf	?___awtoft+2,w
 15226  092C  00AC               	movwf	___ftmul@f2+2
 15227  092D  0855               	movf	getDimmerLights_PercentToValue@i,w
 15228  092E  00A7               	movwf	___ftmul@f1
 15229  092F  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 15230  0930  00A8               	movwf	___ftmul@f1+1
 15231  0931  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 15232  0932  00A9               	movwf	___ftmul@f1+2
 15233  0933  318F  274C  3188   	fcall	___ftmul
 15234  0936  0020               	movlb	0	; select bank0
 15235  0937  0827               	movf	?___ftmul,w
 15236  0938  00BA               	movwf	___ftadd@f2
 15237  0939  0828               	movf	?___ftmul+1,w
 15238  093A  00BB               	movwf	___ftadd@f2+1
 15239  093B  0829               	movf	?___ftmul+2,w
 15240  093C  00BC               	movwf	___ftadd@f2+2
 15241  093D  3000               	movlw	0
 15242  093E  00B7               	movwf	___ftadd@f1
 15243  093F  3090               	movlw	144
 15244  0940  00B8               	movwf	___ftadd@f1+1
 15245  0941  3041               	movlw	65
 15246  0942  00B9               	movwf	___ftadd@f1+2
 15247  0943  3181  21CA  3188   	fcall	___ftadd
 15248  0946  0020               	movlb	0	; select bank0
 15249  0947  0837               	movf	?___ftadd,w
 15250  0948  00C4               	movwf	___fttol@f1
 15251  0949  0838               	movf	?___ftadd+1,w
 15252  094A  00C5               	movwf	___fttol@f1+1
 15253  094B  0839               	movf	?___ftadd+2,w
 15254  094C  00C6               	movwf	___fttol@f1+2
 15255  094D  318D  250C         	fcall	___fttol
 15256  094F  0020               	movlb	0	; select bank0
 15257  0950  0844               	movf	?___fttol,w
 15258  0951  0008               	return
 15259  0952                     __end_of_getDimmerLights_PercentToValue:	
 15260                           
 15261                           	psect	text104
 15262  0D0C                     __ptext104:	
 15263 ;; *************** function ___fttol *****************
 15264 ;; Defined at:
 15265 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;  f1              3   36[BANK0 ] float 
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;  lval            4   45[BANK0 ] unsigned long 
 15270 ;;  exp1            1   49[BANK0 ] unsigned char 
 15271 ;;  sign1           1   44[BANK0 ] unsigned char 
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  4   36[BANK0 ] long 
 15274 ;; Registers used:
 15275 ;;		wreg, status,2, status,0
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;Total ram usage:       14 bytes
 15286 ;; Hardware stack levels used:    1
 15287 ;; Hardware stack levels required when called:    3
 15288 ;; This function calls:
 15289 ;;		Nothing
 15290 ;; This function is called by:
 15291 ;;		_getDimmerLights_PercentToValue
 15292 ;;		_getDimmerLights_ValueToPercent
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           
 15297                           ;psect for function ___fttol
 15298  0D0C                     ___fttol:	
 15299                           
 15300                           ;incstack = 0
 15301                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15302  0D0C  0020               	movlb	0	; select bank0
 15303  0D0D  0844               	movf	___fttol@f1,w
 15304  0D0E  00C8               	movwf	??___fttol
 15305  0D0F  0845               	movf	___fttol@f1+1,w
 15306  0D10  00C9               	movwf	??___fttol+1
 15307  0D11  0846               	movf	___fttol@f1+2,w
 15308  0D12  00CA               	movwf	??___fttol+2
 15309  0D13  1003               	clrc
 15310  0D14  0D49               	rlf	??___fttol+1,w
 15311  0D15  0D4A               	rlf	??___fttol+2,w
 15312  0D16  00CB               	movwf	??___fttol+3
 15313  0D17  084B               	movf	??___fttol+3,w
 15314  0D18  00D1               	movwf	___fttol@exp1
 15315  0D19  08D1               	movf	___fttol@exp1,f
 15316  0D1A  1D03               	skipz
 15317  0D1B  2D25               	goto	l6485
 15318  0D1C  3000               	movlw	0
 15319  0D1D  00C7               	movwf	?___fttol+3
 15320  0D1E  3000               	movlw	0
 15321  0D1F  00C6               	movwf	?___fttol+2
 15322  0D20  3000               	movlw	0
 15323  0D21  00C5               	movwf	?___fttol+1
 15324  0D22  3000               	movlw	0
 15325  0D23  00C4               	movwf	?___fttol
 15326  0D24  0008               	return
 15327  0D25                     l6485:	
 15328  0D25  0844               	movf	___fttol@f1,w
 15329  0D26  00C8               	movwf	??___fttol
 15330  0D27  0845               	movf	___fttol@f1+1,w
 15331  0D28  00C9               	movwf	??___fttol+1
 15332  0D29  0846               	movf	___fttol@f1+2,w
 15333  0D2A  00CA               	movwf	??___fttol+2
 15334  0D2B  3017               	movlw	23
 15335  0D2C                     u5615:	
 15336  0D2C  36CA               	lsrf	??___fttol+2,f
 15337  0D2D  0CC9               	rrf	??___fttol+1,f
 15338  0D2E  0CC8               	rrf	??___fttol,f
 15339  0D2F  0B89               	decfsz	9,f
 15340  0D30  2D2C               	goto	u5615
 15341  0D31  0848               	movf	??___fttol,w
 15342  0D32  00CB               	movwf	??___fttol+3
 15343  0D33  084B               	movf	??___fttol+3,w
 15344  0D34  00CC               	movwf	___fttol@sign1
 15345  0D35  17C5               	bsf	___fttol@f1+1,7
 15346  0D36  30FF               	movlw	255
 15347  0D37  05C4               	andwf	___fttol@f1,f
 15348  0D38  30FF               	movlw	255
 15349  0D39  05C5               	andwf	___fttol@f1+1,f
 15350  0D3A  3000               	movlw	0
 15351  0D3B  05C6               	andwf	___fttol@f1+2,f
 15352  0D3C  0844               	movf	___fttol@f1,w
 15353  0D3D  00CD               	movwf	___fttol@lval
 15354  0D3E  0845               	movf	___fttol@f1+1,w
 15355  0D3F  00CE               	movwf	___fttol@lval+1
 15356  0D40  0846               	movf	___fttol@f1+2,w
 15357  0D41  00CF               	movwf	___fttol@lval+2
 15358  0D42  01D0               	clrf	___fttol@lval+3
 15359  0D43  308E               	movlw	142
 15360  0D44  02D1               	subwf	___fttol@exp1,f
 15361  0D45  1FD1               	btfss	___fttol@exp1,7
 15362  0D46  2D63               	goto	l6505
 15363  0D47  0851               	movf	___fttol@exp1,w
 15364  0D48  3A80               	xorlw	128
 15365  0D49  3E8F               	addlw	143
 15366  0D4A  1803               	skipnc
 15367  0D4B  2D55               	goto	l6503
 15368  0D4C  3000               	movlw	0
 15369  0D4D  00C7               	movwf	?___fttol+3
 15370  0D4E  3000               	movlw	0
 15371  0D4F  00C6               	movwf	?___fttol+2
 15372  0D50  3000               	movlw	0
 15373  0D51  00C5               	movwf	?___fttol+1
 15374  0D52  3000               	movlw	0
 15375  0D53  00C4               	movwf	?___fttol
 15376  0D54  0008               	return
 15377  0D55                     l6503:	
 15378  0D55  3001               	movlw	1
 15379  0D56                     u5645:	
 15380  0D56  36D0               	lsrf	___fttol@lval+3,f
 15381  0D57  0CCF               	rrf	___fttol@lval+2,f
 15382  0D58  0CCE               	rrf	___fttol@lval+1,f
 15383  0D59  0CCD               	rrf	___fttol@lval,f
 15384  0D5A  0B89               	decfsz	9,f
 15385  0D5B  2D56               	goto	u5645
 15386  0D5C  3001               	movlw	1
 15387  0D5D  00C8               	movwf	??___fttol
 15388  0D5E  0848               	movf	??___fttol,w
 15389  0D5F  07D1               	addwf	___fttol@exp1,f
 15390  0D60  1903               	btfsc	3,2
 15391  0D61  2D7C               	goto	l6515
 15392  0D62  2D55               	goto	l6503
 15393  0D63                     l6505:	
 15394  0D63  3018               	movlw	24
 15395  0D64  0251               	subwf	___fttol@exp1,w
 15396  0D65  1C03               	skipc
 15397  0D66  2D79               	goto	l6513
 15398  0D67  3000               	movlw	0
 15399  0D68  00C7               	movwf	?___fttol+3
 15400  0D69  3000               	movlw	0
 15401  0D6A  00C6               	movwf	?___fttol+2
 15402  0D6B  3000               	movlw	0
 15403  0D6C  00C5               	movwf	?___fttol+1
 15404  0D6D  3000               	movlw	0
 15405  0D6E  00C4               	movwf	?___fttol
 15406  0D6F  0008               	return
 15407  0D70                     l6511:	
 15408  0D70  3001               	movlw	1
 15409  0D71                     u5675:	
 15410  0D71  35CD               	lslf	___fttol@lval,f
 15411  0D72  0DCE               	rlf	___fttol@lval+1,f
 15412  0D73  0DCF               	rlf	___fttol@lval+2,f
 15413  0D74  0DD0               	rlf	___fttol@lval+3,f
 15414  0D75  0B89               	decfsz	9,f
 15415  0D76  2D71               	goto	u5675
 15416  0D77  3001               	movlw	1
 15417  0D78  02D1               	subwf	___fttol@exp1,f
 15418  0D79                     l6513:	
 15419  0D79  08D1               	movf	___fttol@exp1,f
 15420  0D7A  1D03               	skipz
 15421  0D7B  2D70               	goto	l6511
 15422  0D7C                     l6515:	
 15423  0D7C  084C               	movf	___fttol@sign1,w
 15424  0D7D  1903               	btfsc	3,2
 15425  0D7E  2D8A               	goto	l6519
 15426  0D7F  09CD               	comf	___fttol@lval,f
 15427  0D80  09CE               	comf	___fttol@lval+1,f
 15428  0D81  09CF               	comf	___fttol@lval+2,f
 15429  0D82  09D0               	comf	___fttol@lval+3,f
 15430  0D83  0ACD               	incf	___fttol@lval,f
 15431  0D84  1903               	skipnz
 15432  0D85  0ACE               	incf	___fttol@lval+1,f
 15433  0D86  1903               	skipnz
 15434  0D87  0ACF               	incf	___fttol@lval+2,f
 15435  0D88  1903               	skipnz
 15436  0D89  0AD0               	incf	___fttol@lval+3,f
 15437  0D8A                     l6519:	
 15438  0D8A  0850               	movf	___fttol@lval+3,w
 15439  0D8B  00C7               	movwf	?___fttol+3
 15440  0D8C  084F               	movf	___fttol@lval+2,w
 15441  0D8D  00C6               	movwf	?___fttol+2
 15442  0D8E  084E               	movf	___fttol@lval+1,w
 15443  0D8F  00C5               	movwf	?___fttol+1
 15444  0D90  084D               	movf	___fttol@lval,w
 15445  0D91  00C4               	movwf	?___fttol
 15446  0D92  0008               	return
 15447  0D93                     __end_of___fttol:	
 15448                           
 15449                           	psect	text105
 15450  0F4C                     __ptext105:	
 15451 ;; *************** function ___ftmul *****************
 15452 ;; Defined at:
 15453 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;  f1              3    7[BANK0 ] float 
 15456 ;;  f2              3   10[BANK0 ] float 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
 15459 ;;  sign            1   22[BANK0 ] unsigned char 
 15460 ;;  cntr            1   21[BANK0 ] unsigned char 
 15461 ;;  exp             1   17[BANK0 ] unsigned char 
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  3    7[BANK0 ] float 
 15464 ;; Registers used:
 15465 ;;		wreg, status,2, status,0, pclath, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15471 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;Total ram usage:       16 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    4
 15478 ;; This function calls:
 15479 ;;		___ftpack
 15480 ;; This function is called by:
 15481 ;;		_getDimmerLights_PercentToValue
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           
 15486                           ;psect for function ___ftmul
 15487  0F4C                     ___ftmul:	
 15488                           
 15489                           ;incstack = 0
 15490                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 15491  0F4C  0020               	movlb	0	; select bank0
 15492  0F4D  0827               	movf	___ftmul@f1,w
 15493  0F4E  00AD               	movwf	??___ftmul
 15494  0F4F  0828               	movf	___ftmul@f1+1,w
 15495  0F50  00AE               	movwf	??___ftmul+1
 15496  0F51  0829               	movf	___ftmul@f1+2,w
 15497  0F52  00AF               	movwf	??___ftmul+2
 15498  0F53  1003               	clrc
 15499  0F54  0D2E               	rlf	??___ftmul+1,w
 15500  0F55  0D2F               	rlf	??___ftmul+2,w
 15501  0F56  00B0               	movwf	??___ftmul+3
 15502  0F57  0830               	movf	??___ftmul+3,w
 15503  0F58  00B1               	movwf	___ftmul@exp
 15504  0F59  08B1               	movf	___ftmul@exp,f
 15505  0F5A  1D03               	skipz
 15506  0F5B  2F63               	goto	l10305
 15507  0F5C  3000               	movlw	0
 15508  0F5D  00A7               	movwf	?___ftmul
 15509  0F5E  3000               	movlw	0
 15510  0F5F  00A8               	movwf	?___ftmul+1
 15511  0F60  3000               	movlw	0
 15512  0F61  00A9               	movwf	?___ftmul+2
 15513  0F62  0008               	return
 15514  0F63                     l10305:	
 15515  0F63  082A               	movf	___ftmul@f2,w
 15516  0F64  00AD               	movwf	??___ftmul
 15517  0F65  082B               	movf	___ftmul@f2+1,w
 15518  0F66  00AE               	movwf	??___ftmul+1
 15519  0F67  082C               	movf	___ftmul@f2+2,w
 15520  0F68  00AF               	movwf	??___ftmul+2
 15521  0F69  1003               	clrc
 15522  0F6A  0D2E               	rlf	??___ftmul+1,w
 15523  0F6B  0D2F               	rlf	??___ftmul+2,w
 15524  0F6C  00B0               	movwf	??___ftmul+3
 15525  0F6D  0830               	movf	??___ftmul+3,w
 15526  0F6E  00B6               	movwf	___ftmul@sign
 15527  0F6F  08B6               	movf	___ftmul@sign,f
 15528  0F70  1D03               	skipz
 15529  0F71  2F79               	goto	l10311
 15530  0F72  3000               	movlw	0
 15531  0F73  00A7               	movwf	?___ftmul
 15532  0F74  3000               	movlw	0
 15533  0F75  00A8               	movwf	?___ftmul+1
 15534  0F76  3000               	movlw	0
 15535  0F77  00A9               	movwf	?___ftmul+2
 15536  0F78  0008               	return
 15537  0F79                     l10311:	
 15538  0F79  0836               	movf	___ftmul@sign,w
 15539  0F7A  3E7B               	addlw	123
 15540  0F7B  00AD               	movwf	??___ftmul
 15541  0F7C  082D               	movf	??___ftmul,w
 15542  0F7D  07B1               	addwf	___ftmul@exp,f
 15543  0F7E  0827               	movf	___ftmul@f1,w
 15544  0F7F  00AD               	movwf	??___ftmul
 15545  0F80  0828               	movf	___ftmul@f1+1,w
 15546  0F81  00AE               	movwf	??___ftmul+1
 15547  0F82  0829               	movf	___ftmul@f1+2,w
 15548  0F83  00AF               	movwf	??___ftmul+2
 15549  0F84  3010               	movlw	16
 15550  0F85                     u11905:	
 15551  0F85  36AF               	lsrf	??___ftmul+2,f
 15552  0F86  0CAE               	rrf	??___ftmul+1,f
 15553  0F87  0CAD               	rrf	??___ftmul,f
 15554  0F88  0B89               	decfsz	9,f
 15555  0F89  2F85               	goto	u11905
 15556  0F8A  082D               	movf	??___ftmul,w
 15557  0F8B  00B0               	movwf	??___ftmul+3
 15558  0F8C  0830               	movf	??___ftmul+3,w
 15559  0F8D  00B6               	movwf	___ftmul@sign
 15560  0F8E  082A               	movf	___ftmul@f2,w
 15561  0F8F  00AD               	movwf	??___ftmul
 15562  0F90  082B               	movf	___ftmul@f2+1,w
 15563  0F91  00AE               	movwf	??___ftmul+1
 15564  0F92  082C               	movf	___ftmul@f2+2,w
 15565  0F93  00AF               	movwf	??___ftmul+2
 15566  0F94  3010               	movlw	16
 15567  0F95                     u11915:	
 15568  0F95  36AF               	lsrf	??___ftmul+2,f
 15569  0F96  0CAE               	rrf	??___ftmul+1,f
 15570  0F97  0CAD               	rrf	??___ftmul,f
 15571  0F98  0B89               	decfsz	9,f
 15572  0F99  2F95               	goto	u11915
 15573  0F9A  082D               	movf	??___ftmul,w
 15574  0F9B  00B0               	movwf	??___ftmul+3
 15575  0F9C  0830               	movf	??___ftmul+3,w
 15576  0F9D  06B6               	xorwf	___ftmul@sign,f
 15577  0F9E  3080               	movlw	128
 15578  0F9F  00AD               	movwf	??___ftmul
 15579  0FA0  082D               	movf	??___ftmul,w
 15580  0FA1  05B6               	andwf	___ftmul@sign,f
 15581  0FA2  17A8               	bsf	___ftmul@f1+1,7
 15582  0FA3  17AB               	bsf	___ftmul@f2+1,7
 15583  0FA4  30FF               	movlw	255
 15584  0FA5  05AA               	andwf	___ftmul@f2,f
 15585  0FA6  30FF               	movlw	255
 15586  0FA7  05AB               	andwf	___ftmul@f2+1,f
 15587  0FA8  3000               	movlw	0
 15588  0FA9  05AC               	andwf	___ftmul@f2+2,f
 15589  0FAA  3000               	movlw	0
 15590  0FAB  00B2               	movwf	___ftmul@f3_as_product
 15591  0FAC  3000               	movlw	0
 15592  0FAD  00B3               	movwf	___ftmul@f3_as_product+1
 15593  0FAE  3000               	movlw	0
 15594  0FAF  00B4               	movwf	___ftmul@f3_as_product+2
 15595  0FB0  3007               	movlw	7
 15596  0FB1  00AD               	movwf	??___ftmul
 15597  0FB2  082D               	movf	??___ftmul,w
 15598  0FB3  00B5               	movwf	___ftmul@cntr
 15599  0FB4                     l10323:	
 15600  0FB4  1C27               	btfss	___ftmul@f1,0
 15601  0FB5  2FBC               	goto	l10327
 15602  0FB6  082A               	movf	___ftmul@f2,w
 15603  0FB7  07B2               	addwf	___ftmul@f3_as_product,f
 15604  0FB8  082B               	movf	___ftmul@f2+1,w
 15605  0FB9  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 15606  0FBA  082C               	movf	___ftmul@f2+2,w
 15607  0FBB  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 15608  0FBC                     l10327:	
 15609  0FBC  3001               	movlw	1
 15610  0FBD                     u11935:	
 15611  0FBD  36A9               	lsrf	___ftmul@f1+2,f
 15612  0FBE  0CA8               	rrf	___ftmul@f1+1,f
 15613  0FBF  0CA7               	rrf	___ftmul@f1,f
 15614  0FC0  0B89               	decfsz	9,f
 15615  0FC1  2FBD               	goto	u11935
 15616  0FC2  3001               	movlw	1
 15617  0FC3                     u11945:	
 15618  0FC3  35AA               	lslf	___ftmul@f2,f
 15619  0FC4  0DAB               	rlf	___ftmul@f2+1,f
 15620  0FC5  0DAC               	rlf	___ftmul@f2+2,f
 15621  0FC6  0B89               	decfsz	9,f
 15622  0FC7  2FC3               	goto	u11945
 15623  0FC8  3001               	movlw	1
 15624  0FC9  02B5               	subwf	___ftmul@cntr,f
 15625  0FCA  1D03               	btfss	3,2
 15626  0FCB  2FB4               	goto	l10323
 15627  0FCC  3009               	movlw	9
 15628  0FCD  00AD               	movwf	??___ftmul
 15629  0FCE  082D               	movf	??___ftmul,w
 15630  0FCF  00B5               	movwf	___ftmul@cntr
 15631  0FD0                     l10335:	
 15632  0FD0  1C27               	btfss	___ftmul@f1,0
 15633  0FD1  2FD8               	goto	l10339
 15634  0FD2  082A               	movf	___ftmul@f2,w
 15635  0FD3  07B2               	addwf	___ftmul@f3_as_product,f
 15636  0FD4  082B               	movf	___ftmul@f2+1,w
 15637  0FD5  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 15638  0FD6  082C               	movf	___ftmul@f2+2,w
 15639  0FD7  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 15640  0FD8                     l10339:	
 15641  0FD8  3001               	movlw	1
 15642  0FD9                     u11975:	
 15643  0FD9  36A9               	lsrf	___ftmul@f1+2,f
 15644  0FDA  0CA8               	rrf	___ftmul@f1+1,f
 15645  0FDB  0CA7               	rrf	___ftmul@f1,f
 15646  0FDC  0B89               	decfsz	9,f
 15647  0FDD  2FD9               	goto	u11975
 15648  0FDE  3001               	movlw	1
 15649  0FDF                     u11985:	
 15650  0FDF  36B4               	lsrf	___ftmul@f3_as_product+2,f
 15651  0FE0  0CB3               	rrf	___ftmul@f3_as_product+1,f
 15652  0FE1  0CB2               	rrf	___ftmul@f3_as_product,f
 15653  0FE2  0B89               	decfsz	9,f
 15654  0FE3  2FDF               	goto	u11985
 15655  0FE4  3001               	movlw	1
 15656  0FE5  02B5               	subwf	___ftmul@cntr,f
 15657  0FE6  1D03               	btfss	3,2
 15658  0FE7  2FD0               	goto	l10335
 15659  0FE8  0832               	movf	___ftmul@f3_as_product,w
 15660  0FE9  00F2               	movwf	___ftpack@arg
 15661  0FEA  0833               	movf	___ftmul@f3_as_product+1,w
 15662  0FEB  00F3               	movwf	___ftpack@arg+1
 15663  0FEC  0834               	movf	___ftmul@f3_as_product+2,w
 15664  0FED  00F4               	movwf	___ftpack@arg+2
 15665  0FEE  0831               	movf	___ftmul@exp,w
 15666  0FEF  00AD               	movwf	??___ftmul
 15667  0FF0  082D               	movf	??___ftmul,w
 15668  0FF1  00F5               	movwf	___ftpack@exp
 15669  0FF2  0836               	movf	___ftmul@sign,w
 15670  0FF3  00AE               	movwf	??___ftmul+1
 15671  0FF4  082E               	movf	??___ftmul+1,w
 15672  0FF5  00F6               	movwf	___ftpack@sign
 15673  0FF6  3189  2152         	fcall	___ftpack
 15674  0FF8  0872               	movf	?___ftpack,w
 15675  0FF9  0020               	movlb	0	; select bank0
 15676  0FFA  00A7               	movwf	?___ftmul
 15677  0FFB  0873               	movf	?___ftpack+1,w
 15678  0FFC  00A8               	movwf	?___ftmul+1
 15679  0FFD  0874               	movf	?___ftpack+2,w
 15680  0FFE  00A9               	movwf	?___ftmul+2
 15681  0FFF  0008               	return
 15682  1000                     __end_of___ftmul:	
 15683                           
 15684                           	psect	text106
 15685  0EA3                     __ptext106:	
 15686 ;; *************** function ___ftdiv *****************
 15687 ;; Defined at:
 15688 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;  f2              3    7[BANK0 ] float 
 15691 ;;  f1              3   10[BANK0 ] float 
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;  f3              3   18[BANK0 ] float 
 15694 ;;  sign            1   22[BANK0 ] unsigned char 
 15695 ;;  exp             1   21[BANK0 ] unsigned char 
 15696 ;;  cntr            1   17[BANK0 ] unsigned char 
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  3    7[BANK0 ] float 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2, status,0, pclath, cstack
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15706 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15709 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15710 ;;Total ram usage:       16 bytes
 15711 ;; Hardware stack levels used:    1
 15712 ;; Hardware stack levels required when called:    4
 15713 ;; This function calls:
 15714 ;;		___ftpack
 15715 ;; This function is called by:
 15716 ;;		_getDimmerLights_PercentToValue
 15717 ;;		_getDimmerLights_ValueToPercent
 15718 ;; This function uses a non-reentrant model
 15719 ;;
 15720                           
 15721                           
 15722                           ;psect for function ___ftdiv
 15723  0EA3                     ___ftdiv:	
 15724                           
 15725                           ;incstack = 0
 15726                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15727  0EA3  0020               	movlb	0	; select bank0
 15728  0EA4  082A               	movf	___ftdiv@f1,w
 15729  0EA5  00AD               	movwf	??___ftdiv
 15730  0EA6  082B               	movf	___ftdiv@f1+1,w
 15731  0EA7  00AE               	movwf	??___ftdiv+1
 15732  0EA8  082C               	movf	___ftdiv@f1+2,w
 15733  0EA9  00AF               	movwf	??___ftdiv+2
 15734  0EAA  1003               	clrc
 15735  0EAB  0D2E               	rlf	??___ftdiv+1,w
 15736  0EAC  0D2F               	rlf	??___ftdiv+2,w
 15737  0EAD  00B0               	movwf	??___ftdiv+3
 15738  0EAE  0830               	movf	??___ftdiv+3,w
 15739  0EAF  00B5               	movwf	___ftdiv@exp
 15740  0EB0  08B5               	movf	___ftdiv@exp,f
 15741  0EB1  1D03               	skipz
 15742  0EB2  2EBA               	goto	l10263
 15743  0EB3  3000               	movlw	0
 15744  0EB4  00A7               	movwf	?___ftdiv
 15745  0EB5  3000               	movlw	0
 15746  0EB6  00A8               	movwf	?___ftdiv+1
 15747  0EB7  3000               	movlw	0
 15748  0EB8  00A9               	movwf	?___ftdiv+2
 15749  0EB9  0008               	return
 15750  0EBA                     l10263:	
 15751  0EBA  0827               	movf	___ftdiv@f2,w
 15752  0EBB  00AD               	movwf	??___ftdiv
 15753  0EBC  0828               	movf	___ftdiv@f2+1,w
 15754  0EBD  00AE               	movwf	??___ftdiv+1
 15755  0EBE  0829               	movf	___ftdiv@f2+2,w
 15756  0EBF  00AF               	movwf	??___ftdiv+2
 15757  0EC0  1003               	clrc
 15758  0EC1  0D2E               	rlf	??___ftdiv+1,w
 15759  0EC2  0D2F               	rlf	??___ftdiv+2,w
 15760  0EC3  00B0               	movwf	??___ftdiv+3
 15761  0EC4  0830               	movf	??___ftdiv+3,w
 15762  0EC5  00B6               	movwf	___ftdiv@sign
 15763  0EC6  08B6               	movf	___ftdiv@sign,f
 15764  0EC7  1D03               	skipz
 15765  0EC8  2ED0               	goto	l10269
 15766  0EC9  3000               	movlw	0
 15767  0ECA  00A7               	movwf	?___ftdiv
 15768  0ECB  3000               	movlw	0
 15769  0ECC  00A8               	movwf	?___ftdiv+1
 15770  0ECD  3000               	movlw	0
 15771  0ECE  00A9               	movwf	?___ftdiv+2
 15772  0ECF  0008               	return
 15773  0ED0                     l10269:	
 15774  0ED0  3000               	movlw	0
 15775  0ED1  00B2               	movwf	___ftdiv@f3
 15776  0ED2  3000               	movlw	0
 15777  0ED3  00B3               	movwf	___ftdiv@f3+1
 15778  0ED4  3000               	movlw	0
 15779  0ED5  00B4               	movwf	___ftdiv@f3+2
 15780  0ED6  3089               	movlw	137
 15781  0ED7  0736               	addwf	___ftdiv@sign,w
 15782  0ED8  00AD               	movwf	??___ftdiv
 15783  0ED9  082D               	movf	??___ftdiv,w
 15784  0EDA  02B5               	subwf	___ftdiv@exp,f
 15785  0EDB  082A               	movf	___ftdiv@f1,w
 15786  0EDC  00AD               	movwf	??___ftdiv
 15787  0EDD  082B               	movf	___ftdiv@f1+1,w
 15788  0EDE  00AE               	movwf	??___ftdiv+1
 15789  0EDF  082C               	movf	___ftdiv@f1+2,w
 15790  0EE0  00AF               	movwf	??___ftdiv+2
 15791  0EE1  3010               	movlw	16
 15792  0EE2                     u11825:	
 15793  0EE2  36AF               	lsrf	??___ftdiv+2,f
 15794  0EE3  0CAE               	rrf	??___ftdiv+1,f
 15795  0EE4  0CAD               	rrf	??___ftdiv,f
 15796  0EE5  0B89               	decfsz	9,f
 15797  0EE6  2EE2               	goto	u11825
 15798  0EE7  082D               	movf	??___ftdiv,w
 15799  0EE8  00B0               	movwf	??___ftdiv+3
 15800  0EE9  0830               	movf	??___ftdiv+3,w
 15801  0EEA  00B6               	movwf	___ftdiv@sign
 15802  0EEB  0827               	movf	___ftdiv@f2,w
 15803  0EEC  00AD               	movwf	??___ftdiv
 15804  0EED  0828               	movf	___ftdiv@f2+1,w
 15805  0EEE  00AE               	movwf	??___ftdiv+1
 15806  0EEF  0829               	movf	___ftdiv@f2+2,w
 15807  0EF0  00AF               	movwf	??___ftdiv+2
 15808  0EF1  3010               	movlw	16
 15809  0EF2                     u11835:	
 15810  0EF2  36AF               	lsrf	??___ftdiv+2,f
 15811  0EF3  0CAE               	rrf	??___ftdiv+1,f
 15812  0EF4  0CAD               	rrf	??___ftdiv,f
 15813  0EF5  0B89               	decfsz	9,f
 15814  0EF6  2EF2               	goto	u11835
 15815  0EF7  082D               	movf	??___ftdiv,w
 15816  0EF8  00B0               	movwf	??___ftdiv+3
 15817  0EF9  0830               	movf	??___ftdiv+3,w
 15818  0EFA  06B6               	xorwf	___ftdiv@sign,f
 15819  0EFB  3080               	movlw	128
 15820  0EFC  00AD               	movwf	??___ftdiv
 15821  0EFD  082D               	movf	??___ftdiv,w
 15822  0EFE  05B6               	andwf	___ftdiv@sign,f
 15823  0EFF  17AB               	bsf	___ftdiv@f1+1,7
 15824  0F00  30FF               	movlw	255
 15825  0F01  05AA               	andwf	___ftdiv@f1,f
 15826  0F02  30FF               	movlw	255
 15827  0F03  05AB               	andwf	___ftdiv@f1+1,f
 15828  0F04  3000               	movlw	0
 15829  0F05  05AC               	andwf	___ftdiv@f1+2,f
 15830  0F06  17A8               	bsf	___ftdiv@f2+1,7
 15831  0F07  30FF               	movlw	255
 15832  0F08  05A7               	andwf	___ftdiv@f2,f
 15833  0F09  30FF               	movlw	255
 15834  0F0A  05A8               	andwf	___ftdiv@f2+1,f
 15835  0F0B  3000               	movlw	0
 15836  0F0C  05A9               	andwf	___ftdiv@f2+2,f
 15837  0F0D  3018               	movlw	24
 15838  0F0E  00AD               	movwf	??___ftdiv
 15839  0F0F  082D               	movf	??___ftdiv,w
 15840  0F10  00B1               	movwf	___ftdiv@cntr
 15841  0F11                     l10283:	
 15842  0F11  3001               	movlw	1
 15843  0F12                     u11845:	
 15844  0F12  35B2               	lslf	___ftdiv@f3,f
 15845  0F13  0DB3               	rlf	___ftdiv@f3+1,f
 15846  0F14  0DB4               	rlf	___ftdiv@f3+2,f
 15847  0F15  0B89               	decfsz	9,f
 15848  0F16  2F12               	goto	u11845
 15849  0F17  0829               	movf	___ftdiv@f2+2,w
 15850  0F18  022C               	subwf	___ftdiv@f1+2,w
 15851  0F19  1D03               	skipz
 15852  0F1A  2F21               	goto	u11855
 15853  0F1B  0828               	movf	___ftdiv@f2+1,w
 15854  0F1C  022B               	subwf	___ftdiv@f1+1,w
 15855  0F1D  1D03               	skipz
 15856  0F1E  2F21               	goto	u11855
 15857  0F1F  0827               	movf	___ftdiv@f2,w
 15858  0F20  022A               	subwf	___ftdiv@f1,w
 15859  0F21                     u11855:	
 15860  0F21  1C03               	skipc
 15861  0F22  2F2A               	goto	l10291
 15862  0F23  0827               	movf	___ftdiv@f2,w
 15863  0F24  02AA               	subwf	___ftdiv@f1,f
 15864  0F25  0828               	movf	___ftdiv@f2+1,w
 15865  0F26  3BAB               	subwfb	___ftdiv@f1+1,f
 15866  0F27  0829               	movf	___ftdiv@f2+2,w
 15867  0F28  3BAC               	subwfb	___ftdiv@f1+2,f
 15868  0F29  1432               	bsf	___ftdiv@f3,0
 15869  0F2A                     l10291:	
 15870  0F2A  3001               	movlw	1
 15871  0F2B                     u11865:	
 15872  0F2B  35AA               	lslf	___ftdiv@f1,f
 15873  0F2C  0DAB               	rlf	___ftdiv@f1+1,f
 15874  0F2D  0DAC               	rlf	___ftdiv@f1+2,f
 15875  0F2E  0B89               	decfsz	9,f
 15876  0F2F  2F2B               	goto	u11865
 15877  0F30  3001               	movlw	1
 15878  0F31  02B1               	subwf	___ftdiv@cntr,f
 15879  0F32  1D03               	btfss	3,2
 15880  0F33  2F11               	goto	l10283
 15881  0F34  0832               	movf	___ftdiv@f3,w
 15882  0F35  00F2               	movwf	___ftpack@arg
 15883  0F36  0833               	movf	___ftdiv@f3+1,w
 15884  0F37  00F3               	movwf	___ftpack@arg+1
 15885  0F38  0834               	movf	___ftdiv@f3+2,w
 15886  0F39  00F4               	movwf	___ftpack@arg+2
 15887  0F3A  0835               	movf	___ftdiv@exp,w
 15888  0F3B  00AD               	movwf	??___ftdiv
 15889  0F3C  082D               	movf	??___ftdiv,w
 15890  0F3D  00F5               	movwf	___ftpack@exp
 15891  0F3E  0836               	movf	___ftdiv@sign,w
 15892  0F3F  00AE               	movwf	??___ftdiv+1
 15893  0F40  082E               	movf	??___ftdiv+1,w
 15894  0F41  00F6               	movwf	___ftpack@sign
 15895  0F42  3189  2152         	fcall	___ftpack
 15896  0F44  0872               	movf	?___ftpack,w
 15897  0F45  0020               	movlb	0	; select bank0
 15898  0F46  00A7               	movwf	?___ftdiv
 15899  0F47  0873               	movf	?___ftpack+1,w
 15900  0F48  00A8               	movwf	?___ftdiv+1
 15901  0F49  0874               	movf	?___ftpack+2,w
 15902  0F4A  00A9               	movwf	?___ftdiv+2
 15903  0F4B  0008               	return
 15904  0F4C                     __end_of___ftdiv:	
 15905                           
 15906                           	psect	text107
 15907  01CA                     __ptext107:	
 15908 ;; *************** function ___ftadd *****************
 15909 ;; Defined at:
 15910 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 15911 ;; Parameters:    Size  Location     Type
 15912 ;;  f1              3   23[BANK0 ] float 
 15913 ;;  f2              3   26[BANK0 ] float 
 15914 ;; Auto vars:     Size  Location     Type
 15915 ;;  exp1            1   35[BANK0 ] unsigned char 
 15916 ;;  exp2            1   34[BANK0 ] unsigned char 
 15917 ;;  sign            1   33[BANK0 ] unsigned char 
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  3   23[BANK0 ] float 
 15920 ;; Registers used:
 15921 ;;		wreg, status,2, status,0, pclath, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;Total ram usage:       13 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; Hardware stack levels required when called:    4
 15934 ;; This function calls:
 15935 ;;		___ftpack
 15936 ;; This function is called by:
 15937 ;;		_getDimmerLights_PercentToValue
 15938 ;; This function uses a non-reentrant model
 15939 ;;
 15940                           
 15941                           
 15942                           ;psect for function ___ftadd
 15943  01CA                     ___ftadd:	
 15944                           
 15945                           ;incstack = 0
 15946                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 15947  01CA  0020               	movlb	0	; select bank0
 15948  01CB  0837               	movf	___ftadd@f1,w
 15949  01CC  00BD               	movwf	??___ftadd
 15950  01CD  0838               	movf	___ftadd@f1+1,w
 15951  01CE  00BE               	movwf	??___ftadd+1
 15952  01CF  0839               	movf	___ftadd@f1+2,w
 15953  01D0  00BF               	movwf	??___ftadd+2
 15954  01D1  1003               	clrc
 15955  01D2  0D3E               	rlf	??___ftadd+1,w
 15956  01D3  0D3F               	rlf	??___ftadd+2,w
 15957  01D4  00C0               	movwf	??___ftadd+3
 15958  01D5  0840               	movf	??___ftadd+3,w
 15959  01D6  00C3               	movwf	___ftadd@exp1
 15960  01D7  083A               	movf	___ftadd@f2,w
 15961  01D8  00BD               	movwf	??___ftadd
 15962  01D9  083B               	movf	___ftadd@f2+1,w
 15963  01DA  00BE               	movwf	??___ftadd+1
 15964  01DB  083C               	movf	___ftadd@f2+2,w
 15965  01DC  00BF               	movwf	??___ftadd+2
 15966  01DD  1003               	clrc
 15967  01DE  0D3E               	rlf	??___ftadd+1,w
 15968  01DF  0D3F               	rlf	??___ftadd+2,w
 15969  01E0  00C0               	movwf	??___ftadd+3
 15970  01E1  0840               	movf	??___ftadd+3,w
 15971  01E2  00C2               	movwf	___ftadd@exp2
 15972  01E3  0843               	movf	___ftadd@exp1,w
 15973  01E4  1903               	btfsc	3,2
 15974  01E5  29F2               	goto	l10193
 15975  01E6  0842               	movf	___ftadd@exp2,w
 15976  01E7  0243               	subwf	___ftadd@exp1,w
 15977  01E8  1803               	skipnc
 15978  01E9  29F9               	goto	l10197
 15979  01EA  0343               	decf	___ftadd@exp1,w
 15980  01EB  3AFF               	xorlw	255
 15981  01EC  0742               	addwf	___ftadd@exp2,w
 15982  01ED  00BD               	movwf	??___ftadd
 15983  01EE  3019               	movlw	25
 15984  01EF  023D               	subwf	??___ftadd,w
 15985  01F0  1C03               	skipc
 15986  01F1  29F9               	goto	l10197
 15987  01F2                     l10193:	
 15988  01F2  083A               	movf	___ftadd@f2,w
 15989  01F3  00B7               	movwf	?___ftadd
 15990  01F4  083B               	movf	___ftadd@f2+1,w
 15991  01F5  00B8               	movwf	?___ftadd+1
 15992  01F6  083C               	movf	___ftadd@f2+2,w
 15993  01F7  00B9               	movwf	?___ftadd+2
 15994  01F8  0008               	return
 15995  01F9                     l10197:	
 15996  01F9  0842               	movf	___ftadd@exp2,w
 15997  01FA  1903               	btfsc	3,2
 15998  01FB  0008               	return
 15999  01FC  0843               	movf	___ftadd@exp1,w
 16000  01FD  0242               	subwf	___ftadd@exp2,w
 16001  01FE  1803               	skipnc
 16002  01FF  2A08               	goto	l10203
 16003  0200  0342               	decf	___ftadd@exp2,w
 16004  0201  3AFF               	xorlw	255
 16005  0202  0743               	addwf	___ftadd@exp1,w
 16006  0203  00BD               	movwf	??___ftadd
 16007  0204  3019               	movlw	25
 16008  0205  023D               	subwf	??___ftadd,w
 16009  0206  1803               	btfsc	3,0
 16010  0207  0008               	return
 16011  0208                     l10203:	
 16012  0208  3006               	movlw	6
 16013  0209  00BD               	movwf	??___ftadd
 16014  020A  083D               	movf	??___ftadd,w
 16015  020B  00C1               	movwf	___ftadd@sign
 16016  020C  1BB9               	btfsc	___ftadd@f1+2,7
 16017  020D  17C1               	bsf	___ftadd@sign,7
 16018  020E  1BBC               	btfsc	___ftadd@f2+2,7
 16019  020F  1741               	bsf	___ftadd@sign,6
 16020  0210  17B8               	bsf	___ftadd@f1+1,7
 16021  0211  30FF               	movlw	255
 16022  0212  05B7               	andwf	___ftadd@f1,f
 16023  0213  30FF               	movlw	255
 16024  0214  05B8               	andwf	___ftadd@f1+1,f
 16025  0215  3000               	movlw	0
 16026  0216  05B9               	andwf	___ftadd@f1+2,f
 16027  0217  17BB               	bsf	___ftadd@f2+1,7
 16028  0218  30FF               	movlw	255
 16029  0219  05BA               	andwf	___ftadd@f2,f
 16030  021A  30FF               	movlw	255
 16031  021B  05BB               	andwf	___ftadd@f2+1,f
 16032  021C  3000               	movlw	0
 16033  021D  05BC               	andwf	___ftadd@f2+2,f
 16034  021E  0842               	movf	___ftadd@exp2,w
 16035  021F  0243               	subwf	___ftadd@exp1,w
 16036  0220  1803               	skipnc
 16037  0221  2A44               	goto	l10225
 16038  0222                     l10215:	
 16039  0222  3001               	movlw	1
 16040  0223                     u11665:	
 16041  0223  35BA               	lslf	___ftadd@f2,f
 16042  0224  0DBB               	rlf	___ftadd@f2+1,f
 16043  0225  0DBC               	rlf	___ftadd@f2+2,f
 16044  0226  0B89               	decfsz	9,f
 16045  0227  2A23               	goto	u11665
 16046  0228  3001               	movlw	1
 16047  0229  02C2               	subwf	___ftadd@exp2,f
 16048  022A  0842               	movf	___ftadd@exp2,w
 16049  022B  0643               	xorwf	___ftadd@exp1,w
 16050  022C  1903               	skipnz
 16051  022D  2A3F               	goto	l10223
 16052  022E  3001               	movlw	1
 16053  022F  02C1               	subwf	___ftadd@sign,f
 16054  0230  0841               	movf	___ftadd@sign,w
 16055  0231  3907               	andlw	7
 16056  0232  1903               	btfsc	3,2
 16057  0233  2A3F               	goto	l10223
 16058  0234  2A22               	goto	l10215
 16059  0235                     l10221:	
 16060  0235  3001               	movlw	1
 16061  0236                     u11695:	
 16062  0236  36B9               	lsrf	___ftadd@f1+2,f
 16063  0237  0CB8               	rrf	___ftadd@f1+1,f
 16064  0238  0CB7               	rrf	___ftadd@f1,f
 16065  0239  0B89               	decfsz	9,f
 16066  023A  2A36               	goto	u11695
 16067  023B  3001               	movlw	1
 16068  023C  00BD               	movwf	??___ftadd
 16069  023D  083D               	movf	??___ftadd,w
 16070  023E  07C3               	addwf	___ftadd@exp1,f
 16071  023F                     l10223:	
 16072  023F  0843               	movf	___ftadd@exp1,w
 16073  0240  0642               	xorwf	___ftadd@exp2,w
 16074  0241  1903               	btfsc	3,2
 16075  0242  2A69               	goto	l3198
 16076  0243  2A35               	goto	l10221
 16077  0244                     l10225:	
 16078  0244  0843               	movf	___ftadd@exp1,w
 16079  0245  0242               	subwf	___ftadd@exp2,w
 16080  0246  1803               	skipnc
 16081  0247  2A69               	goto	l3198
 16082  0248                     l10227:	
 16083  0248  3001               	movlw	1
 16084  0249                     u11725:	
 16085  0249  35B7               	lslf	___ftadd@f1,f
 16086  024A  0DB8               	rlf	___ftadd@f1+1,f
 16087  024B  0DB9               	rlf	___ftadd@f1+2,f
 16088  024C  0B89               	decfsz	9,f
 16089  024D  2A49               	goto	u11725
 16090  024E  3001               	movlw	1
 16091  024F  02C3               	subwf	___ftadd@exp1,f
 16092  0250  0842               	movf	___ftadd@exp2,w
 16093  0251  0643               	xorwf	___ftadd@exp1,w
 16094  0252  1903               	skipnz
 16095  0253  2A65               	goto	l10235
 16096  0254  3001               	movlw	1
 16097  0255  02C1               	subwf	___ftadd@sign,f
 16098  0256  0841               	movf	___ftadd@sign,w
 16099  0257  3907               	andlw	7
 16100  0258  1903               	btfsc	3,2
 16101  0259  2A65               	goto	l10235
 16102  025A  2A48               	goto	l10227
 16103  025B                     l10233:	
 16104  025B  3001               	movlw	1
 16105  025C                     u11755:	
 16106  025C  36BC               	lsrf	___ftadd@f2+2,f
 16107  025D  0CBB               	rrf	___ftadd@f2+1,f
 16108  025E  0CBA               	rrf	___ftadd@f2,f
 16109  025F  0B89               	decfsz	9,f
 16110  0260  2A5C               	goto	u11755
 16111  0261  3001               	movlw	1
 16112  0262  00BD               	movwf	??___ftadd
 16113  0263  083D               	movf	??___ftadd,w
 16114  0264  07C2               	addwf	___ftadd@exp2,f
 16115  0265                     l10235:	
 16116  0265  0843               	movf	___ftadd@exp1,w
 16117  0266  0642               	xorwf	___ftadd@exp2,w
 16118  0267  1D03               	skipz
 16119  0268  2A5B               	goto	l10233
 16120  0269                     l3198:	
 16121  0269  1FC1               	btfss	___ftadd@sign,7
 16122  026A  2A7B               	goto	l10239
 16123  026B  30FF               	movlw	255
 16124  026C  06B7               	xorwf	___ftadd@f1,f
 16125  026D  30FF               	movlw	255
 16126  026E  06B8               	xorwf	___ftadd@f1+1,f
 16127  026F  30FF               	movlw	255
 16128  0270  06B9               	xorwf	___ftadd@f1+2,f
 16129  0271  3001               	movlw	1
 16130  0272  07B7               	addwf	___ftadd@f1,f
 16131  0273  3000               	movlw	0
 16132  0274  1803               	skipnc
 16133  0275  3001               	movlw	1
 16134  0276  07B8               	addwf	___ftadd@f1+1,f
 16135  0277  3000               	movlw	0
 16136  0278  1803               	skipnc
 16137  0279  3001               	movlw	1
 16138  027A  07B9               	addwf	___ftadd@f1+2,f
 16139  027B                     l10239:	
 16140  027B  1F41               	btfss	___ftadd@sign,6
 16141  027C  2A8D               	goto	l10243
 16142  027D  30FF               	movlw	255
 16143  027E  06BA               	xorwf	___ftadd@f2,f
 16144  027F  30FF               	movlw	255
 16145  0280  06BB               	xorwf	___ftadd@f2+1,f
 16146  0281  30FF               	movlw	255
 16147  0282  06BC               	xorwf	___ftadd@f2+2,f
 16148  0283  3001               	movlw	1
 16149  0284  07BA               	addwf	___ftadd@f2,f
 16150  0285  3000               	movlw	0
 16151  0286  1803               	skipnc
 16152  0287  3001               	movlw	1
 16153  0288  07BB               	addwf	___ftadd@f2+1,f
 16154  0289  3000               	movlw	0
 16155  028A  1803               	skipnc
 16156  028B  3001               	movlw	1
 16157  028C  07BC               	addwf	___ftadd@f2+2,f
 16158  028D                     l10243:	
 16159  028D  01C1               	clrf	___ftadd@sign
 16160  028E  0837               	movf	___ftadd@f1,w
 16161  028F  07BA               	addwf	___ftadd@f2,f
 16162  0290  0838               	movf	___ftadd@f1+1,w
 16163  0291  3DBB               	addwfc	___ftadd@f2+1,f
 16164  0292  0839               	movf	___ftadd@f1+2,w
 16165  0293  3DBC               	addwfc	___ftadd@f2+2,f
 16166  0294  1FBC               	btfss	___ftadd@f2+2,7
 16167  0295  2AA8               	goto	l10253
 16168  0296  30FF               	movlw	255
 16169  0297  06BA               	xorwf	___ftadd@f2,f
 16170  0298  30FF               	movlw	255
 16171  0299  06BB               	xorwf	___ftadd@f2+1,f
 16172  029A  30FF               	movlw	255
 16173  029B  06BC               	xorwf	___ftadd@f2+2,f
 16174  029C  3001               	movlw	1
 16175  029D  07BA               	addwf	___ftadd@f2,f
 16176  029E  3000               	movlw	0
 16177  029F  1803               	skipnc
 16178  02A0  3001               	movlw	1
 16179  02A1  07BB               	addwf	___ftadd@f2+1,f
 16180  02A2  3000               	movlw	0
 16181  02A3  1803               	skipnc
 16182  02A4  3001               	movlw	1
 16183  02A5  07BC               	addwf	___ftadd@f2+2,f
 16184  02A6  01C1               	clrf	___ftadd@sign
 16185  02A7  0AC1               	incf	___ftadd@sign,f
 16186  02A8                     l10253:	
 16187  02A8  083A               	movf	___ftadd@f2,w
 16188  02A9  00F2               	movwf	___ftpack@arg
 16189  02AA  083B               	movf	___ftadd@f2+1,w
 16190  02AB  00F3               	movwf	___ftpack@arg+1
 16191  02AC  083C               	movf	___ftadd@f2+2,w
 16192  02AD  00F4               	movwf	___ftpack@arg+2
 16193  02AE  0843               	movf	___ftadd@exp1,w
 16194  02AF  00BD               	movwf	??___ftadd
 16195  02B0  083D               	movf	??___ftadd,w
 16196  02B1  00F5               	movwf	___ftpack@exp
 16197  02B2  0841               	movf	___ftadd@sign,w
 16198  02B3  00BE               	movwf	??___ftadd+1
 16199  02B4  083E               	movf	??___ftadd+1,w
 16200  02B5  00F6               	movwf	___ftpack@sign
 16201  02B6  3189  2152         	fcall	___ftpack
 16202  02B8  0872               	movf	?___ftpack,w
 16203  02B9  0020               	movlb	0	; select bank0
 16204  02BA  00B7               	movwf	?___ftadd
 16205  02BB  0873               	movf	?___ftpack+1,w
 16206  02BC  00B8               	movwf	?___ftadd+1
 16207  02BD  0874               	movf	?___ftpack+2,w
 16208  02BE  00B9               	movwf	?___ftadd+2
 16209  02BF  0008               	return
 16210  02C0                     __end_of___ftadd:	
 16211                           
 16212                           	psect	text108
 16213  11F6                     __ptext108:	
 16214 ;; *************** function ___awtoft *****************
 16215 ;; Defined at:
 16216 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  c               2    3[BANK0 ] int 
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;  sign            1    6[BANK0 ] unsigned char 
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  3    3[BANK0 ] float 
 16223 ;; Registers used:
 16224 ;;		wreg, status,2, status,0, pclath, cstack
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16230 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16234 ;;Total ram usage:        6 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; Hardware stack levels required when called:    4
 16237 ;; This function calls:
 16238 ;;		___ftpack
 16239 ;; This function is called by:
 16240 ;;		_getDimmerLights_PercentToValue
 16241 ;;		_getDimmerLights_ValueToPercent
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           
 16246                           ;psect for function ___awtoft
 16247  11F6                     ___awtoft:	
 16248                           
 16249                           ;incstack = 0
 16250                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 16251  11F6  0020               	movlb	0	; select bank0
 16252  11F7  01A6               	clrf	___awtoft@sign
 16253  11F8  1FA4               	btfss	___awtoft@c+1,7
 16254  11F9  2A01               	goto	l10181
 16255  11FA  09A3               	comf	___awtoft@c,f
 16256  11FB  09A4               	comf	___awtoft@c+1,f
 16257  11FC  0AA3               	incf	___awtoft@c,f
 16258  11FD  1903               	skipnz
 16259  11FE  0AA4               	incf	___awtoft@c+1,f
 16260  11FF  01A6               	clrf	___awtoft@sign
 16261  1200  0AA6               	incf	___awtoft@sign,f
 16262  1201                     l10181:	
 16263  1201  0823               	movf	___awtoft@c,w
 16264  1202  00F2               	movwf	___ftpack@arg
 16265  1203  0824               	movf	___awtoft@c+1,w
 16266  1204  00F3               	movwf	___ftpack@arg+1
 16267  1205  01F4               	clrf	___ftpack@arg+2
 16268  1206  308E               	movlw	142
 16269  1207  00F7               	movwf	??___awtoft
 16270  1208  0877               	movf	??___awtoft,w
 16271  1209  00F5               	movwf	___ftpack@exp
 16272  120A  0826               	movf	___awtoft@sign,w
 16273  120B  00F8               	movwf	??___awtoft+1
 16274  120C  0878               	movf	??___awtoft+1,w
 16275  120D  00F6               	movwf	___ftpack@sign
 16276  120E  3189  2152         	fcall	___ftpack
 16277  1210  0872               	movf	?___ftpack,w
 16278  1211  0020               	movlb	0	; select bank0
 16279  1212  00A3               	movwf	?___awtoft
 16280  1213  0873               	movf	?___ftpack+1,w
 16281  1214  00A4               	movwf	?___awtoft+1
 16282  1215  0874               	movf	?___ftpack+2,w
 16283  1216  00A5               	movwf	?___awtoft+2
 16284  1217  0008               	return
 16285  1218                     __end_of___awtoft:	
 16286                           
 16287                           	psect	text109
 16288  0952                     __ptext109:	
 16289 ;; *************** function ___ftpack *****************
 16290 ;; Defined at:
 16291 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 16292 ;; Parameters:    Size  Location     Type
 16293 ;;  arg             3    2[COMMON] unsigned um
 16294 ;;  exp             1    5[COMMON] unsigned char 
 16295 ;;  sign            1    6[COMMON] unsigned char 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  3    2[COMMON] float 
 16300 ;; Registers used:
 16301 ;;		wreg, status,2, status,0
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16307 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16311 ;;Total ram usage:        8 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    3
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		___awtoft
 16318 ;;		___ftadd
 16319 ;;		___ftdiv
 16320 ;;		___ftmul
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           
 16325                           ;psect for function ___ftpack
 16326  0952                     ___ftpack:	
 16327                           
 16328                           ;incstack = 0
 16329                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 16330  0952  0875               	movf	___ftpack@exp,w
 16331  0953  1903               	btfsc	3,2
 16332  0954  295A               	goto	l10113
 16333  0955  0874               	movf	___ftpack@arg+2,w
 16334  0956  0473               	iorwf	___ftpack@arg+1,w
 16335  0957  0472               	iorwf	___ftpack@arg,w
 16336  0958  1D03               	skipz
 16337  0959  296C               	goto	l10119
 16338  095A                     l10113:	
 16339  095A  3000               	movlw	0
 16340  095B  00F2               	movwf	?___ftpack
 16341  095C  3000               	movlw	0
 16342  095D  00F3               	movwf	?___ftpack+1
 16343  095E  3000               	movlw	0
 16344  095F  00F4               	movwf	?___ftpack+2
 16345  0960  0008               	return
 16346  0961                     l10117:	
 16347  0961  3001               	movlw	1
 16348  0962  0020               	movlb	0	; select bank0
 16349  0963  00A0               	movwf	??___ftpack
 16350  0964  0820               	movf	??___ftpack,w
 16351  0965  07F5               	addwf	___ftpack@exp,f
 16352  0966  3001               	movlw	1
 16353  0967                     u11415:	
 16354  0967  36F4               	lsrf	___ftpack@arg+2,f
 16355  0968  0CF3               	rrf	___ftpack@arg+1,f
 16356  0969  0CF2               	rrf	___ftpack@arg,f
 16357  096A  0B89               	decfsz	9,f
 16358  096B  2967               	goto	u11415
 16359  096C                     l10119:	
 16360  096C  30FE               	movlw	254
 16361  096D  0574               	andwf	___ftpack@arg+2,w
 16362  096E  1903               	btfsc	3,2
 16363  096F  2986               	goto	l3169
 16364  0970  2961               	goto	l10117
 16365  0971                     l10121:	
 16366  0971  3001               	movlw	1
 16367  0972  0020               	movlb	0	; select bank0
 16368  0973  00A0               	movwf	??___ftpack
 16369  0974  0820               	movf	??___ftpack,w
 16370  0975  07F5               	addwf	___ftpack@exp,f
 16371  0976  3001               	movlw	1
 16372  0977  07F2               	addwf	___ftpack@arg,f
 16373  0978  3000               	movlw	0
 16374  0979  1803               	skipnc
 16375  097A  3001               	movlw	1
 16376  097B  07F3               	addwf	___ftpack@arg+1,f
 16377  097C  3000               	movlw	0
 16378  097D  1803               	skipnc
 16379  097E  3001               	movlw	1
 16380  097F  07F4               	addwf	___ftpack@arg+2,f
 16381  0980  3001               	movlw	1
 16382  0981                     u11435:	
 16383  0981  36F4               	lsrf	___ftpack@arg+2,f
 16384  0982  0CF3               	rrf	___ftpack@arg+1,f
 16385  0983  0CF2               	rrf	___ftpack@arg,f
 16386  0984  0B89               	decfsz	9,f
 16387  0985  2981               	goto	u11435
 16388  0986                     l3169:	
 16389  0986  30FF               	movlw	255
 16390  0987  0574               	andwf	___ftpack@arg+2,w
 16391  0988  1903               	btfsc	3,2
 16392  0989  2993               	goto	l10129
 16393  098A  2971               	goto	l10121
 16394  098B                     l10127:	
 16395  098B  3001               	movlw	1
 16396  098C  02F5               	subwf	___ftpack@exp,f
 16397  098D  3001               	movlw	1
 16398  098E                     u11455:	
 16399  098E  35F2               	lslf	___ftpack@arg,f
 16400  098F  0DF3               	rlf	___ftpack@arg+1,f
 16401  0990  0DF4               	rlf	___ftpack@arg+2,f
 16402  0991  0B89               	decfsz	9,f
 16403  0992  298E               	goto	u11455
 16404  0993                     l10129:	
 16405  0993  1FF3               	btfss	___ftpack@arg+1,7
 16406  0994  298B               	goto	l10127
 16407  0995  1875               	btfsc	___ftpack@exp,0
 16408  0996  299D               	goto	l3175
 16409  0997  30FF               	movlw	255
 16410  0998  05F2               	andwf	___ftpack@arg,f
 16411  0999  307F               	movlw	127
 16412  099A  05F3               	andwf	___ftpack@arg+1,f
 16413  099B  30FF               	movlw	255
 16414  099C  05F4               	andwf	___ftpack@arg+2,f
 16415  099D                     l3175:	
 16416  099D  1003               	clrc
 16417  099E  0CF5               	rrf	___ftpack@exp,f
 16418  099F  0875               	movf	___ftpack@exp,w
 16419  09A0  0020               	movlb	0	; select bank0
 16420  09A1  00A0               	movwf	??___ftpack
 16421  09A2  01A1               	clrf	??___ftpack+1
 16422  09A3  01A2               	clrf	??___ftpack+2
 16423  09A4  3010               	movlw	16
 16424  09A5                     u11485:	
 16425  09A5  35A0               	lslf	??___ftpack,f
 16426  09A6  0DA1               	rlf	??___ftpack+1,f
 16427  09A7  0DA2               	rlf	??___ftpack+2,f
 16428  09A8  0B89               	decfsz	9,f
 16429  09A9  29A5               	goto	u11485
 16430  09AA  0820               	movf	??___ftpack,w
 16431  09AB  04F2               	iorwf	___ftpack@arg,f
 16432  09AC  0821               	movf	??___ftpack+1,w
 16433  09AD  04F3               	iorwf	___ftpack@arg+1,f
 16434  09AE  0822               	movf	??___ftpack+2,w
 16435  09AF  04F4               	iorwf	___ftpack@arg+2,f
 16436  09B0  0876               	movf	___ftpack@sign,w
 16437  09B1  1903               	btfsc	3,2
 16438  09B2  0008               	return
 16439  09B3  17F4               	bsf	___ftpack@arg+2,7
 16440  09B4  0008               	return
 16441  09B5                     __end_of___ftpack:	
 16442                           
 16443                           	psect	text110
 16444  1D3C                     __ptext110:	
 16445 ;; *************** function _DelayOff_Main *****************
 16446 ;; Defined at:
 16447 ;;		line 41 in file "../src/DelayOff_B1.c"
 16448 ;; Parameters:    Size  Location     Type
 16449 ;;		None
 16450 ;; Auto vars:     Size  Location     Type
 16451 ;;		None
 16452 ;; Return value:  Size  Location     Type
 16453 ;;		None               void
 16454 ;; Registers used:
 16455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16465 ;;Total ram usage:        0 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; Hardware stack levels required when called:    7
 16468 ;; This function calls:
 16469 ;;		_DlyOff_Main
 16470 ;; This function is called by:
 16471 ;;		_main
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           
 16476                           ;psect for function _DelayOff_Main
 16477  1D3C                     _DelayOff_Main:	
 16478                           
 16479                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 16480                           
 16481                           ;incstack = 0
 16482                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16483  1D3C  3001               	movlw	1
 16484  1D3D  318B  23AF  319D   	fcall	_DlyOff_Main
 16485                           
 16486                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 16487  1D40  3002               	movlw	2
 16488  1D41  318B  23AF  319D   	fcall	_DlyOff_Main
 16489                           
 16490                           ;DelayOff_B1.c: 51: DlyOff_Main(3);
 16491  1D44  3003               	movlw	3
 16492  1D45  318B  23AF         	fcall	_DlyOff_Main
 16493  1D47  0008               	return
 16494  1D48                     __end_of_DelayOff_Main:	
 16495                           
 16496                           	psect	text111
 16497  0BAF                     __ptext111:	
 16498 ;; *************** function _DlyOff_Main *****************
 16499 ;; Defined at:
 16500 ;;		line 61 in file "../src/DelayOff_B1.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  sw              1    wreg     unsigned char 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  sw              1   59[BANK0 ] unsigned char 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;		None               void
 16507 ;; Registers used:
 16508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;Total ram usage:        3 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    6
 16521 ;; This function calls:
 16522 ;;		_DelayOffPointSelect
 16523 ;;		_getDimmerLights_Status
 16524 ;;		_setDimmerLights_SwOff
 16525 ;;		_setDimmerLights_SwOn
 16526 ;;		_setProductData
 16527 ;; This function is called by:
 16528 ;;		_DelayOff_Main
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532                           
 16533                           ;psect for function _DlyOff_Main
 16534  0BAF                     _DlyOff_Main:	
 16535                           
 16536                           ;incstack = 0
 16537                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16538                           ;DlyOff_Main@sw stored from wreg
 16539  0BAF  0020               	movlb	0	; select bank0
 16540  0BB0  00DB               	movwf	DlyOff_Main@sw
 16541                           
 16542                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 16543  0BB1  085B               	movf	DlyOff_Main@sw,w
 16544  0BB2  3190  20F7  318B   	fcall	_DelayOffPointSelect
 16545                           
 16546                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 16547  0BB5  0020               	movlb	0	; select bank0
 16548  0BB6  0869               	movf	_DelayOff,w
 16549  0BB7  0086               	movwf	6
 16550  0BB8  3001               	movlw	1	; select bank2/3
 16551  0BB9  0087               	movwf	7
 16552  0BBA  1C81               	btfss	1,1
 16553  0BBB  0008               	return
 16554                           
 16555                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 16556  0BBC  0869               	movf	_DelayOff,w
 16557  0BBD  3E02               	addlw	2
 16558  0BBE  0086               	movwf	6
 16559  0BBF  3001               	movlw	1	; select bank2/3
 16560  0BC0  0087               	movwf	7
 16561  0BC1  3001               	movlw	1
 16562  0BC2  0781               	addwf	1,f
 16563  0BC3  3141               	addfsr 1,1
 16564  0BC4  1803               	skipnc
 16565  0BC5  0A81               	incf	1,f
 16566                           
 16567                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 16568  0BC6  0869               	movf	_DelayOff,w
 16569  0BC7  3E02               	addlw	2
 16570  0BC8  0086               	movwf	6
 16571  0BC9  3001               	movlw	1	; select bank2/3
 16572  0BCA  0087               	movwf	7
 16573  0BCB  3F40               	moviw [0]fsr1
 16574  0BCC  00D9               	movwf	??_DlyOff_Main
 16575  0BCD  3F41               	moviw [1]fsr1
 16576  0BCE  00DA               	movwf	??_DlyOff_Main+1
 16577  0BCF  3009               	movlw	9
 16578  0BD0  025A               	subwf	??_DlyOff_Main+1,w
 16579  0BD1  30C4               	movlw	196
 16580  0BD2  1903               	skipnz
 16581  0BD3  0259               	subwf	??_DlyOff_Main,w
 16582  0BD4  1C03               	skipc
 16583  0BD5  0008               	return
 16584                           
 16585                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 16586  0BD6  0869               	movf	_DelayOff,w
 16587  0BD7  3E02               	addlw	2
 16588  0BD8  0086               	movwf	6
 16589  0BD9  3001               	movlw	1	; select bank2/3
 16590  0BDA  0087               	movwf	7
 16591  0BDB  3000               	movlw	0
 16592  0BDC  3FC0               	movwi [0]fsr1
 16593  0BDD  3FC1               	movwi [1]fsr1
 16594                           
 16595                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 16596  0BDE  3001               	movlw	1
 16597  0BDF  00D9               	movwf	??_DlyOff_Main
 16598  0BE0  0869               	movf	_DelayOff,w
 16599  0BE1  3E04               	addlw	4
 16600  0BE2  0086               	movwf	6
 16601  0BE3  3001               	movlw	1	; select bank2/3
 16602  0BE4  0087               	movwf	7
 16603  0BE5  0859               	movf	??_DlyOff_Main,w
 16604  0BE6  0781               	addwf	1,f
 16605                           
 16606                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 16607  0BE7  0869               	movf	_DelayOff,w
 16608  0BE8  3E04               	addlw	4
 16609  0BE9  0086               	movwf	6
 16610  0BEA  3001               	movlw	1	; select bank2/3
 16611  0BEB  0087               	movwf	7
 16612  0BEC  0A69               	incf	_DelayOff,w
 16613  0BED  0084               	movwf	4
 16614  0BEE  3001               	movlw	1	; select bank2/3
 16615  0BEF  0085               	movwf	5
 16616  0BF0  0800               	movf	0,w
 16617  0BF1  0201               	subwf	1,w
 16618  0BF2  1C03               	skipc
 16619  0BF3  0008               	return
 16620                           
 16621                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 16622  0BF4  0869               	movf	_DelayOff,w
 16623  0BF5  3E04               	addlw	4
 16624  0BF6  0086               	movwf	6
 16625  0BF7  3001               	movlw	1	; select bank2/3
 16626  0BF8  0087               	movwf	7
 16627  0BF9  0181               	clrf	1
 16628                           
 16629                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 16630  0BFA  0869               	movf	_DelayOff,w
 16631  0BFB  0086               	movwf	6
 16632  0BFC  3001               	movlw	1	; select bank2/3
 16633  0BFD  0087               	movwf	7
 16634  0BFE  1081               	bcf	1,1
 16635                           
 16636                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 16637  0BFF  085B               	movf	DlyOff_Main@sw,w
 16638  0C00  319D  256F  318B   	fcall	_getDimmerLights_Status
 16639  0C03  3A01               	xorlw	1
 16640  0C04  1D03               	skipz
 16641  0C05  2C10               	goto	l615
 16642                           
 16643                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 16644  0C06  0020               	movlb	0	; select bank0
 16645  0C07  085B               	movf	DlyOff_Main@sw,w
 16646  0C08  3187  2766  318B   	fcall	_setDimmerLights_SwOn
 16647                           
 16648                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 16649  0C0B  0020               	movlb	0	; select bank0
 16650  0C0C  085B               	movf	DlyOff_Main@sw,w
 16651  0C0D  3194  2432  318B   	fcall	_setDimmerLights_SwOff
 16652  0C10                     l615:	
 16653                           
 16654                           ;DelayOff_B1.c: 78: }
 16655                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 16656  0C10  0020               	movlb	0	; select bank0
 16657  0C11  01D6               	clrf	setProductData@value
 16658  0C12  085B               	movf	DlyOff_Main@sw,w
 16659  0C13  3E1A               	addlw	26
 16660  0C14  319D  2530         	fcall	_setProductData
 16661  0C16  0008               	return
 16662  0C17                     __end_of_DlyOff_Main:	
 16663                           
 16664                           	psect	text112
 16665  1D30                     __ptext112:	
 16666 ;; *************** function _setProductData *****************
 16667 ;; Defined at:
 16668 ;;		line 650 in file "../src/Main_B1.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;  address         1    wreg     unsigned char 
 16671 ;;  value           1   54[BANK0 ] unsigned char 
 16672 ;; Auto vars:     Size  Location     Type
 16673 ;;  address         1   56[BANK0 ] unsigned char 
 16674 ;; Return value:  Size  Location     Type
 16675 ;;		None               void
 16676 ;; Registers used:
 16677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16678 ;; Tracked objects:
 16679 ;;		On entry : 0/0
 16680 ;;		On exit  : 0/0
 16681 ;;		Unchanged: 0/0
 16682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16687 ;;Total ram usage:        3 bytes
 16688 ;; Hardware stack levels used:    1
 16689 ;; Hardware stack levels required when called:    3
 16690 ;; This function calls:
 16691 ;;		Nothing
 16692 ;; This function is called by:
 16693 ;;		_DlyOff_Main
 16694 ;;		_setDelayOff_GO
 16695 ;;		_setDimmerLights_OnOff
 16696 ;;		_setDimmerLights_Dimming
 16697 ;;		_setLog_Code
 16698 ;;		_setControl_Lights_Table
 16699 ;;		_setRFSW_AdjControl
 16700 ;;		_setRF_DimmerLights
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           
 16704                           
 16705                           ;psect for function _setProductData
 16706  1D30                     _setProductData:	
 16707                           
 16708                           ;incstack = 0
 16709                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 16710                           ;setProductData@address stored from wreg
 16711  1D30  0020               	movlb	0	; select bank0
 16712  1D31  00D8               	movwf	setProductData@address
 16713                           
 16714                           ;Main_B1.c: 651: _product.Data[address] = value;
 16715  1D32  0856               	movf	setProductData@value,w
 16716  1D33  00D7               	movwf	??_setProductData
 16717  1D34  0858               	movf	setProductData@address,w
 16718  1D35  3E45               	addlw	__product& (0+255)
 16719  1D36  0086               	movwf	6
 16720  1D37  3002               	movlw	2	; select bank4/5
 16721  1D38  0087               	movwf	7
 16722  1D39  0857               	movf	??_setProductData,w
 16723  1D3A  0081               	movwf	1
 16724  1D3B  0008               	return
 16725  1D3C                     __end_of_setProductData:	
 16726                           
 16727                           	psect	text113
 16728  0766                     __ptext113:	
 16729 ;; *************** function _setDimmerLights_SwOn *****************
 16730 ;; Defined at:
 16731 ;;		line 759 in file "../src/Dimmer_B1.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  sw              1    wreg     unsigned char 
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;  sw              1   12[BANK0 ] unsigned char 
 16736 ;;  idle            1   11[BANK0 ] unsigned char 
 16737 ;;  dimmingStatu    1    7[BANK0 ] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;		None               void
 16740 ;; Registers used:
 16741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16748 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16750 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16751 ;;Total ram usage:        7 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; Hardware stack levels required when called:    5
 16754 ;; This function calls:
 16755 ;;		_DimmerLights_SelectPointer
 16756 ;;		_getDimmerIntr_Dimming_Sw
 16757 ;;		_setBuz
 16758 ;; This function is called by:
 16759 ;;		_DlyOff_Main
 16760 ;;		_setControl_Lights_Table
 16761 ;;		_setRFSW_Control
 16762 ;;		_setRFSW_AdjControl
 16763 ;;		_setSw_Main
 16764 ;; This function uses a non-reentrant model
 16765 ;;
 16766                           
 16767                           
 16768                           ;psect for function _setDimmerLights_SwOn
 16769  0766                     _setDimmerLights_SwOn:	
 16770                           
 16771                           ;incstack = 0
 16772                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16773                           ;setDimmerLights_SwOn@sw stored from wreg
 16774  0766  0020               	movlb	0	; select bank0
 16775  0767  00AC               	movwf	setDimmerLights_SwOn@sw
 16776                           
 16777                           ;Dimmer_B1.c: 760: char idle = 0;
 16778  0768  01AB               	clrf	setDimmerLights_SwOn@idle
 16779                           
 16780                           ;Dimmer_B1.c: 762: char dimmingStatus = 0;
 16781  0769  01A7               	clrf	setDimmerLights_SwOn@dimmingStatus
 16782                           
 16783                           ;Dimmer_B1.c: 763: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 16784  076A  082C               	movf	setDimmerLights_SwOn@sw,w
 16785  076B  3191  2116  3187   	fcall	_getDimmerIntr_Dimming_Sw
 16786  076E  0020               	movlb	0	; select bank0
 16787  076F  00A6               	movwf	??_setDimmerLights_SwOn
 16788  0770  0826               	movf	??_setDimmerLights_SwOn,w
 16789  0771  00A7               	movwf	setDimmerLights_SwOn@dimmingStatus
 16790                           
 16791                           ;Dimmer_B1.c: 776: if (idle == 0) {
 16792  0772  08AB               	movf	setDimmerLights_SwOn@idle,f
 16793  0773  1D03               	skipz
 16794  0774  2FB8               	goto	l10431
 16795                           
 16796                           ;Dimmer_B1.c: 777: if (sw == 1) {
 16797  0775  082C               	movf	setDimmerLights_SwOn@sw,w
 16798  0776  3A01               	xorlw	1
 16799  0777  1D03               	skipz
 16800  0778  2F8A               	goto	l10403
 16801                           
 16802                           ;Dimmer_B1.c: 778: idle = DimmerLights2.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 16803                           ;Dimmer_B1.c: 779: || DimmerIntr2.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16804  0779  01A8               	clrf	_setDimmerLights_SwOn$2561
 16805  077A  0AA8               	incf	_setDimmerLights_SwOn$2561,f
 16806  077B  0022               	movlb	2	; select bank2
 16807  077C  1A67               	btfsc	_DimmerLights2^(0+256),4
 16808  077D  2F87               	goto	l10401
 16809  077E  0023               	movlb	3	; select bank3
 16810  077F  1A35               	btfsc	_DimmerLights3^(0+384),4
 16811  0780  2F87               	goto	l10401
 16812  0781  0022               	movlb	2	; select bank2
 16813  0782  1E3E               	btfss	_DimmerIntr2^(0+256),4
 16814  0783  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 16815  0784  2F87               	goto	l10401
 16816  0785  0020               	movlb	0	; select bank0
 16817  0786  01A8               	clrf	_setDimmerLights_SwOn$2561
 16818  0787                     l10401:	
 16819  0787  0020               	movlb	0	; select bank0
 16820  0788  0828               	movf	_setDimmerLights_SwOn$2561,w
 16821  0789  2FB5               	goto	L11
 16822  078A                     l10403:	
 16823                           ;Dimmer_B1.c: 780: } else if (sw == 2) {
 16824                           
 16825  078A  082C               	movf	setDimmerLights_SwOn@sw,w
 16826  078B  3A02               	xorlw	2
 16827  078C  1D03               	skipz
 16828  078D  2FA1               	goto	l10417
 16829                           
 16830                           ;Dimmer_B1.c: 781: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights3.DimmingTrig
      +                          ger == 1
 16831                           ;Dimmer_B1.c: 782: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr3.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16832  078E  01A9               	clrf	_setDimmerLights_SwOn$2570
 16833  078F  0AA9               	incf	_setDimmerLights_SwOn$2570,f
 16834  0790  0022               	movlb	2	; select bank2
 16835  0791  1A5E               	btfsc	_DimmerLights1^(0+256),4
 16836  0792  2F9E               	goto	l10415
 16837  0793  0023               	movlb	3	; select bank3
 16838  0794  1A35               	btfsc	_DimmerLights3^(0+384),4
 16839  0795  2F9E               	goto	l10415
 16840  0796  0021               	movlb	1	; select bank1
 16841  0797  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16842  0798  2F9E               	goto	l10415
 16843  0799  0022               	movlb	2	; select bank2
 16844  079A  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 16845  079B  2F9E               	goto	l10415
 16846  079C  0020               	movlb	0	; select bank0
 16847  079D  01A9               	clrf	_setDimmerLights_SwOn$2570
 16848  079E                     l10415:	
 16849  079E  0020               	movlb	0	; select bank0
 16850  079F  0829               	movf	_setDimmerLights_SwOn$2570,w
 16851  07A0  2FB5               	goto	L11
 16852  07A1                     l10417:	
 16853                           ;Dimmer_B1.c: 783: } else if (sw == 3) {
 16854                           
 16855  07A1  082C               	movf	setDimmerLights_SwOn@sw,w
 16856  07A2  3A03               	xorlw	3
 16857  07A3  1D03               	skipz
 16858  07A4  2FB8               	goto	l10431
 16859                           
 16860                           ;Dimmer_B1.c: 784: idle = DimmerLights1.DimmingTrigger == 1 || DimmerLights2.DimmingTrig
      +                          ger == 1
 16861                           ;Dimmer_B1.c: 785: || DimmerIntr1.Dimming_Sw == 1 || DimmerIntr2.Dimming_Sw == 1 ? 1 : 0
      +                          ;
 16862  07A5  01AA               	clrf	_setDimmerLights_SwOn$2571
 16863  07A6  0AAA               	incf	_setDimmerLights_SwOn$2571,f
 16864  07A7  0022               	movlb	2	; select bank2
 16865  07A8  1E5E               	btfss	_DimmerLights1^(0+256),4
 16866  07A9  1A67               	btfsc	_DimmerLights2^(0+256),4
 16867  07AA  2FB3               	goto	l10429
 16868  07AB  0021               	movlb	1	; select bank1
 16869  07AC  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16870  07AD  2FB3               	goto	l10429
 16871  07AE  0022               	movlb	2	; select bank2
 16872  07AF  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 16873  07B0  2FB3               	goto	l10429
 16874  07B1  0020               	movlb	0	; select bank0
 16875  07B2  01AA               	clrf	_setDimmerLights_SwOn$2571
 16876  07B3                     l10429:	
 16877  07B3  0020               	movlb	0	; select bank0
 16878  07B4  082A               	movf	_setDimmerLights_SwOn$2571,w
 16879  07B5                     L11:	
 16880  07B5  00A6               	movwf	??_setDimmerLights_SwOn
 16881  07B6  0826               	movf	??_setDimmerLights_SwOn,w
 16882  07B7  00AB               	movwf	setDimmerLights_SwOn@idle
 16883  07B8                     l10431:	
 16884                           
 16885                           ;Dimmer_B1.c: 786: }
 16886                           ;Dimmer_B1.c: 787: }
 16887                           ;Dimmer_B1.c: 790: DimmerLights_SelectPointer(sw);
 16888  07B8  082C               	movf	setDimmerLights_SwOn@sw,w
 16889  07B9  3191  2193  3187   	fcall	_DimmerLights_SelectPointer
 16890                           
 16891                           ;Dimmer_B1.c: 791: if (idle == 0) {
 16892  07BC  0020               	movlb	0	; select bank0
 16893  07BD  08AB               	movf	setDimmerLights_SwOn@idle,f
 16894  07BE  1D03               	skipz
 16895  07BF  0008               	return
 16896                           
 16897                           ;Dimmer_B1.c: 793: if (dimmingStatus == 0) {
 16898  07C0  08A7               	movf	setDimmerLights_SwOn@dimmingStatus,f
 16899  07C1  1D03               	skipz
 16900  07C2  2FE4               	goto	l10443
 16901                           
 16902                           ;Dimmer_B1.c: 794: DimmerLights->SwFlag = 1;
 16903  07C3  086A               	movf	_DimmerLights,w
 16904  07C4  0086               	movwf	6
 16905  07C5  3001               	movlw	1	; select bank2/3
 16906  07C6  0087               	movwf	7
 16907  07C7  1401               	bsf	1,0
 16908                           
 16909                           ;Dimmer_B1.c: 795: if (DimmerLights->Status == 0) {
 16910  07C8  0A6A               	incf	_DimmerLights,w
 16911  07C9  0086               	movwf	6
 16912  07CA  3001               	movlw	1	; select bank2/3
 16913  07CB  0087               	movwf	7
 16914  07CC  1801               	btfsc	1,0
 16915  07CD  2FDE               	goto	l10441
 16916                           
 16917                           ;Dimmer_B1.c: 796: DimmerLights->Status = 1;
 16918  07CE  0A6A               	incf	_DimmerLights,w
 16919  07CF  0086               	movwf	6
 16920  07D0  3001               	movlw	1	; select bank2/3
 16921  07D1  0087               	movwf	7
 16922  07D2  1401               	bsf	1,0
 16923                           
 16924                           ;Dimmer_B1.c: 799: DimmerLights->Trigger = 1;
 16925  07D3  086A               	movf	_DimmerLights,w
 16926  07D4  0086               	movwf	6
 16927  07D5  3001               	movlw	1	; select bank2/3
 16928  07D6  0087               	movwf	7
 16929  07D7  1481               	bsf	1,1
 16930                           
 16931                           ;Dimmer_B1.c: 800: DimmerLights->Switch = 1;
 16932  07D8  086A               	movf	_DimmerLights,w
 16933  07D9  0086               	movwf	6
 16934  07DA  3001               	movlw	1	; select bank2/3
 16935  07DB  0087               	movwf	7
 16936  07DC  1501               	bsf	1,2
 16937                           
 16938                           ;Dimmer_B1.c: 807: } else {
 16939  07DD  2FEE               	goto	l10445
 16940  07DE                     l10441:	
 16941                           
 16942                           ;Dimmer_B1.c: 808: DimmerLights->Status = 0;
 16943  07DE  0A6A               	incf	_DimmerLights,w
 16944  07DF  0086               	movwf	6
 16945  07E0  3001               	movlw	1	; select bank2/3
 16946  07E1  0087               	movwf	7
 16947  07E2  1001               	bcf	1,0
 16948                           
 16949                           ;Dimmer_B1.c: 809: }
 16950                           ;Dimmer_B1.c: 810: } else {
 16951  07E3  2FEE               	goto	l10445
 16952  07E4                     l10443:	
 16953                           
 16954                           ;Dimmer_B1.c: 811: DimmerLights->DimmingTrigger = 1;
 16955  07E4  086A               	movf	_DimmerLights,w
 16956  07E5  0086               	movwf	6
 16957  07E6  3001               	movlw	1	; select bank2/3
 16958  07E7  0087               	movwf	7
 16959  07E8  1601               	bsf	1,4
 16960                           
 16961                           ;Dimmer_B1.c: 812: DimmerLights->DimmingSwitch = 0;
 16962  07E9  086A               	movf	_DimmerLights,w
 16963  07EA  0086               	movwf	6
 16964  07EB  3001               	movlw	1	; select bank2/3
 16965  07EC  0087               	movwf	7
 16966  07ED  1281               	bcf	1,5
 16967  07EE                     l10445:	
 16968                           
 16969                           ;Dimmer_B1.c: 813: }
 16970                           ;Dimmer_B1.c: 814: setBuz(1, 100);
 16971  07EE  3064               	movlw	100
 16972  07EF  00A4               	movwf	setBuz@time
 16973  07F0  3000               	movlw	0
 16974  07F1  00A5               	movwf	setBuz@time+1
 16975  07F2  3001               	movlw	1
 16976  07F3  3188  2050         	fcall	_setBuz
 16977  07F5  0008               	return
 16978  07F6                     __end_of_setDimmerLights_SwOn:	
 16979                           
 16980                           	psect	text114
 16981  0850                     __ptext114:	
 16982 ;; *************** function _setBuz *****************
 16983 ;; Defined at:
 16984 ;;		line 22 in file "../src/Buzzer_B1.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;  count           1    wreg     unsigned char 
 16987 ;;  time            2    4[BANK0 ] int 
 16988 ;; Auto vars:     Size  Location     Type
 16989 ;;  count           1    8[COMMON] unsigned char 
 16990 ;; Return value:  Size  Location     Type
 16991 ;;		None               void
 16992 ;; Registers used:
 16993 ;;		wreg, status,2, status,0, pclath, cstack
 16994 ;; Tracked objects:
 16995 ;;		On entry : 0/0
 16996 ;;		On exit  : 0/0
 16997 ;;		Unchanged: 0/0
 16998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17002 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17003 ;;Total ram usage:        4 bytes
 17004 ;; Hardware stack levels used:    1
 17005 ;; Hardware stack levels required when called:    4
 17006 ;; This function calls:
 17007 ;;		___awdiv
 17008 ;; This function is called by:
 17009 ;;		_setDimmerLights_SwOn
 17010 ;;		_setDimmerLights_Dimming
 17011 ;;		_my_MainTimer
 17012 ;;		_setLog_Code
 17013 ;;		_setRFSW_Control
 17014 ;;		_setRFSW_AdjControl
 17015 ;;		_setSw_Main
 17016 ;; This function uses a non-reentrant model
 17017 ;;
 17018                           
 17019                           
 17020                           ;psect for function _setBuz
 17021  0850                     _setBuz:	
 17022                           
 17023                           ;incstack = 0
 17024                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 17025                           ;setBuz@count stored from wreg
 17026  0850  00F8               	movwf	setBuz@count
 17027                           
 17028                           ;Buzzer_B1.c: 23: time /= 20;
 17029  0851  3014               	movlw	20
 17030  0852  00F2               	movwf	___awdiv@divisor
 17031  0853  3000               	movlw	0
 17032  0854  00F3               	movwf	___awdiv@divisor+1
 17033  0855  0020               	movlb	0	; select bank0
 17034  0856  0825               	movf	setBuz@time+1,w
 17035  0857  01F5               	clrf	___awdiv@dividend+1
 17036  0858  07F5               	addwf	___awdiv@dividend+1,f
 17037  0859  0824               	movf	setBuz@time,w
 17038  085A  01F4               	clrf	___awdiv@dividend
 17039  085B  07F4               	addwf	___awdiv@dividend,f
 17040  085C  3188  20A3  3188   	fcall	___awdiv
 17041  085F  0873               	movf	?___awdiv+1,w
 17042  0860  0020               	movlb	0	; select bank0
 17043  0861  01A5               	clrf	setBuz@time+1
 17044  0862  07A5               	addwf	setBuz@time+1,f
 17045  0863  0872               	movf	?___awdiv,w
 17046  0864  01A4               	clrf	setBuz@time
 17047  0865  07A4               	addwf	setBuz@time,f
 17048                           
 17049                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 17050  0866  0021               	movlb	1	; select bank1
 17051  0867  1C4C               	btfss	_Buz1^(0+128),0
 17052  0868  0008               	return
 17053                           
 17054                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 17055  0869  18CC               	btfsc	_Buz1^(0+128),1
 17056  086A  287F               	goto	l106
 17057                           
 17058                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 17059  086B  14CC               	bsf	_Buz1^(0+128),1
 17060                           
 17061                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 17062  086C  01CD               	clrf	(_Buz1^(0+128)+1)
 17063  086D  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 17064                           
 17065                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 17066  086E  0878               	movf	setBuz@count,w
 17067  086F  00F7               	movwf	??_setBuz
 17068  0870  0877               	movf	??_setBuz,w
 17069  0871  00CF               	movwf	(_Buz1^(0+128)+3)
 17070                           
 17071                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 17072  0872  0020               	movlb	0	; select bank0
 17073  0873  0825               	movf	setBuz@time+1,w
 17074  0874  0021               	movlb	1	; select bank1
 17075  0875  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17076  0876  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17077  0877  0020               	movlb	0	; select bank0
 17078  0878  0824               	movf	setBuz@time,w
 17079  0879  0021               	movlb	1	; select bank1
 17080  087A  01D2               	clrf	(_Buz1^(0+128)+6)
 17081  087B  07D2               	addwf	(_Buz1^(0+128)+6),f
 17082                           
 17083                           ;Buzzer_B1.c: 30: RB3 = 1;
 17084  087C  0020               	movlb	0	; select bank0
 17085  087D  158D               	bsf	13,3	;volatile
 17086                           
 17087                           ;Buzzer_B1.c: 31: } else {
 17088  087E  0008               	return
 17089  087F                     l106:	
 17090                           
 17091                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 17092  087F  19CC               	btfsc	_Buz1^(0+128),3
 17093  0880  2891               	goto	l108
 17094                           
 17095                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 17096  0881  15CC               	bsf	_Buz1^(0+128),3
 17097                           
 17098                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 17099  0882  0878               	movf	setBuz@count,w
 17100  0883  00F7               	movwf	??_setBuz
 17101  0884  0877               	movf	??_setBuz,w
 17102  0885  00D0               	movwf	(_Buz1^(0+128)+4)
 17103                           
 17104                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 17105  0886  0020               	movlb	0	; select bank0
 17106  0887  0825               	movf	setBuz@time+1,w
 17107  0888  0021               	movlb	1	; select bank1
 17108  0889  01D5               	clrf	((_Buz1+1)^(0+128)+8)
 17109  088A  07D5               	addwf	((_Buz1+1)^(0+128)+8),f
 17110  088B  0020               	movlb	0	; select bank0
 17111  088C  0824               	movf	setBuz@time,w
 17112  088D  0021               	movlb	1	; select bank1
 17113  088E  01D4               	clrf	(_Buz1^(0+128)+8)
 17114  088F  07D4               	addwf	(_Buz1^(0+128)+8),f
 17115                           
 17116                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 17117  0890  0008               	return
 17118  0891                     l108:	
 17119  0891  1A4C               	btfsc	_Buz1^(0+128),4
 17120  0892  0008               	return
 17121                           
 17122                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 17123  0893  164C               	bsf	_Buz1^(0+128),4
 17124                           
 17125                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 17126  0894  0878               	movf	setBuz@count,w
 17127  0895  00F7               	movwf	??_setBuz
 17128  0896  0877               	movf	??_setBuz,w
 17129  0897  00D1               	movwf	(_Buz1^(0+128)+5)
 17130                           
 17131                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 17132  0898  0020               	movlb	0	; select bank0
 17133  0899  0825               	movf	setBuz@time+1,w
 17134  089A  0021               	movlb	1	; select bank1
 17135  089B  01D7               	clrf	((_Buz1+1)^(0+128)+10)
 17136  089C  07D7               	addwf	((_Buz1+1)^(0+128)+10),f
 17137  089D  0020               	movlb	0	; select bank0
 17138  089E  0824               	movf	setBuz@time,w
 17139  089F  0021               	movlb	1	; select bank1
 17140  08A0  01D6               	clrf	(_Buz1^(0+128)+10)
 17141  08A1  07D6               	addwf	(_Buz1^(0+128)+10),f
 17142  08A2  0008               	return
 17143  08A3                     __end_of_setBuz:	
 17144                           
 17145                           	psect	text115
 17146  08A3                     __ptext115:	
 17147 ;; *************** function ___awdiv *****************
 17148 ;; Defined at:
 17149 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  divisor         2    2[COMMON] int 
 17152 ;;  dividend        2    4[COMMON] int 
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;  quotient        2    2[BANK0 ] int 
 17155 ;;  sign            1    1[BANK0 ] unsigned char 
 17156 ;;  counter         1    0[BANK0 ] unsigned char 
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  2    2[COMMON] int 
 17159 ;; Registers used:
 17160 ;;		wreg, status,2, status,0
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17169 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17170 ;;Total ram usage:        9 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    3
 17173 ;; This function calls:
 17174 ;;		Nothing
 17175 ;; This function is called by:
 17176 ;;		_setBuz
 17177 ;; This function uses a non-reentrant model
 17178 ;;
 17179                           
 17180                           
 17181                           ;psect for function ___awdiv
 17182  08A3                     ___awdiv:	
 17183                           
 17184                           ;incstack = 0
 17185                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 17186  08A3  0020               	movlb	0	; select bank0
 17187  08A4  01A1               	clrf	___awdiv@sign
 17188  08A5  1FF3               	btfss	___awdiv@divisor+1,7
 17189  08A6  28AE               	goto	l8887
 17190  08A7  09F2               	comf	___awdiv@divisor,f
 17191  08A8  09F3               	comf	___awdiv@divisor+1,f
 17192  08A9  0AF2               	incf	___awdiv@divisor,f
 17193  08AA  1903               	skipnz
 17194  08AB  0AF3               	incf	___awdiv@divisor+1,f
 17195  08AC  01A1               	clrf	___awdiv@sign
 17196  08AD  0AA1               	incf	___awdiv@sign,f
 17197  08AE                     l8887:	
 17198  08AE  1FF5               	btfss	___awdiv@dividend+1,7
 17199  08AF  28B9               	goto	l8893
 17200  08B0  09F4               	comf	___awdiv@dividend,f
 17201  08B1  09F5               	comf	___awdiv@dividend+1,f
 17202  08B2  0AF4               	incf	___awdiv@dividend,f
 17203  08B3  1903               	skipnz
 17204  08B4  0AF5               	incf	___awdiv@dividend+1,f
 17205  08B5  3001               	movlw	1
 17206  08B6  00F6               	movwf	??___awdiv
 17207  08B7  0876               	movf	??___awdiv,w
 17208  08B8  06A1               	xorwf	___awdiv@sign,f
 17209  08B9                     l8893:	
 17210  08B9  01A2               	clrf	___awdiv@quotient
 17211  08BA  01A3               	clrf	___awdiv@quotient+1
 17212  08BB  0873               	movf	___awdiv@divisor+1,w
 17213  08BC  0472               	iorwf	___awdiv@divisor,w
 17214  08BD  1903               	skipnz
 17215  08BE  28E8               	goto	l8915
 17216  08BF  01A0               	clrf	___awdiv@counter
 17217  08C0  0AA0               	incf	___awdiv@counter,f
 17218  08C1                     l8903:	
 17219  08C1  1BF3               	btfsc	___awdiv@divisor+1,7
 17220  08C2  28CD               	goto	l8905
 17221  08C3  3001               	movlw	1
 17222  08C4                     u9625:	
 17223  08C4  35F2               	lslf	___awdiv@divisor,f
 17224  08C5  0DF3               	rlf	___awdiv@divisor+1,f
 17225  08C6  0B89               	decfsz	9,f
 17226  08C7  28C4               	goto	u9625
 17227  08C8  3001               	movlw	1
 17228  08C9  00F6               	movwf	??___awdiv
 17229  08CA  0876               	movf	??___awdiv,w
 17230  08CB  07A0               	addwf	___awdiv@counter,f
 17231  08CC  28C1               	goto	l8903
 17232  08CD                     l8905:	
 17233  08CD  3001               	movlw	1
 17234  08CE                     u9645:	
 17235  08CE  35A2               	lslf	___awdiv@quotient,f
 17236  08CF  0DA3               	rlf	___awdiv@quotient+1,f
 17237  08D0  0B89               	decfsz	9,f
 17238  08D1  28CE               	goto	u9645
 17239  08D2  0873               	movf	___awdiv@divisor+1,w
 17240  08D3  0275               	subwf	___awdiv@dividend+1,w
 17241  08D4  1D03               	skipz
 17242  08D5  28D8               	goto	u9655
 17243  08D6  0872               	movf	___awdiv@divisor,w
 17244  08D7  0274               	subwf	___awdiv@dividend,w
 17245  08D8                     u9655:	
 17246  08D8  1C03               	skipc
 17247  08D9  28DF               	goto	l8911
 17248  08DA  0872               	movf	___awdiv@divisor,w
 17249  08DB  02F4               	subwf	___awdiv@dividend,f
 17250  08DC  0873               	movf	___awdiv@divisor+1,w
 17251  08DD  3BF5               	subwfb	___awdiv@dividend+1,f
 17252  08DE  1422               	bsf	___awdiv@quotient,0
 17253  08DF                     l8911:	
 17254  08DF  3001               	movlw	1
 17255  08E0                     u9665:	
 17256  08E0  36F3               	lsrf	___awdiv@divisor+1,f
 17257  08E1  0CF2               	rrf	___awdiv@divisor,f
 17258  08E2  0B89               	decfsz	9,f
 17259  08E3  28E0               	goto	u9665
 17260  08E4  3001               	movlw	1
 17261  08E5  02A0               	subwf	___awdiv@counter,f
 17262  08E6  1D03               	btfss	3,2
 17263  08E7  28CD               	goto	l8905
 17264  08E8                     l8915:	
 17265  08E8  0821               	movf	___awdiv@sign,w
 17266  08E9  1903               	btfsc	3,2
 17267  08EA  28F0               	goto	l8919
 17268  08EB  09A2               	comf	___awdiv@quotient,f
 17269  08EC  09A3               	comf	___awdiv@quotient+1,f
 17270  08ED  0AA2               	incf	___awdiv@quotient,f
 17271  08EE  1903               	skipnz
 17272  08EF  0AA3               	incf	___awdiv@quotient+1,f
 17273  08F0                     l8919:	
 17274  08F0  0823               	movf	___awdiv@quotient+1,w
 17275  08F1  01F3               	clrf	?___awdiv+1
 17276  08F2  07F3               	addwf	?___awdiv+1,f
 17277  08F3  0822               	movf	___awdiv@quotient,w
 17278  08F4  01F2               	clrf	?___awdiv
 17279  08F5  07F2               	addwf	?___awdiv,f
 17280  08F6  0008               	return
 17281  08F7                     __end_of___awdiv:	
 17282                           
 17283                           	psect	text116
 17284  1116                     __ptext116:	
 17285 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 17286 ;; Defined at:
 17287 ;;		line 269 in file "../src/Dimmer_B1.c"
 17288 ;; Parameters:    Size  Location     Type
 17289 ;;  lights          1    wreg     unsigned char 
 17290 ;; Auto vars:     Size  Location     Type
 17291 ;;  lights          1    3[COMMON] unsigned char 
 17292 ;;  status          1    2[COMMON] unsigned char 
 17293 ;; Return value:  Size  Location     Type
 17294 ;;                  1    wreg      unsigned char 
 17295 ;; Registers used:
 17296 ;;		wreg, status,2
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;Total ram usage:        2 bytes
 17307 ;; Hardware stack levels used:    1
 17308 ;; Hardware stack levels required when called:    3
 17309 ;; This function calls:
 17310 ;;		Nothing
 17311 ;; This function is called by:
 17312 ;;		_setDimmerLights_SwOn
 17313 ;;		_setRF_AdjControl
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           
 17318                           ;psect for function _getDimmerIntr_Dimming_Sw
 17319  1116                     _getDimmerIntr_Dimming_Sw:	
 17320                           
 17321                           ;incstack = 0
 17322                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 17323                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 17324  1116  00F3               	movwf	getDimmerIntr_Dimming_Sw@lights
 17325                           
 17326                           ;Dimmer_B1.c: 270: char status = 0;
 17327  1117  01F2               	clrf	getDimmerIntr_Dimming_Sw@status
 17328                           
 17329                           ;Dimmer_B1.c: 272: if (lights == 1) {
 17330  1118  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17331  1119  3A01               	xorlw	1
 17332  111A  1D03               	skipz
 17333  111B  2921               	goto	l10145
 17334                           
 17335                           ;Dimmer_B1.c: 273: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 17336  111C  3000               	movlw	0
 17337  111D  0021               	movlb	1	; select bank1
 17338  111E  1A20               	btfsc	_DimmerIntr1^(0+128),4
 17339  111F  3001               	movlw	1
 17340  1120  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17341  1121                     l10145:	
 17342                           
 17343                           ;Dimmer_B1.c: 274: }
 17344                           ;Dimmer_B1.c: 277: if (lights == 2) {
 17345  1121  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17346  1122  3A02               	xorlw	2
 17347  1123  1D03               	skipz
 17348  1124  292A               	goto	l10149
 17349                           
 17350                           ;Dimmer_B1.c: 278: status = DimmerIntr2.Dimming_Sw == 1 ? 1 : 0;
 17351  1125  3000               	movlw	0
 17352  1126  0022               	movlb	2	; select bank2
 17353  1127  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 17354  1128  3001               	movlw	1
 17355  1129  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17356  112A                     l10149:	
 17357                           
 17358                           ;Dimmer_B1.c: 279: }
 17359                           ;Dimmer_B1.c: 282: if (lights == 3) {
 17360  112A  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 17361  112B  3A03               	xorlw	3
 17362  112C  1D03               	skipz
 17363  112D  2933               	goto	l10153
 17364                           
 17365                           ;Dimmer_B1.c: 283: status = DimmerIntr3.Dimming_Sw == 1 ? 1 : 0;
 17366  112E  3000               	movlw	0
 17367  112F  0022               	movlb	2	; select bank2
 17368  1130  1A4E               	btfsc	_DimmerIntr3^(0+256),4
 17369  1131  3001               	movlw	1
 17370  1132  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 17371  1133                     l10153:	
 17372                           
 17373                           ;Dimmer_B1.c: 284: }
 17374                           ;Dimmer_B1.c: 287: return status;
 17375  1133  0872               	movf	getDimmerIntr_Dimming_Sw@status,w
 17376  1134  0008               	return
 17377  1135                     __end_of_getDimmerIntr_Dimming_Sw:	
 17378                           
 17379                           	psect	text117
 17380  1432                     __ptext117:	
 17381 ;; *************** function _setDimmerLights_SwOff *****************
 17382 ;; Defined at:
 17383 ;;		line 819 in file "../src/Dimmer_B1.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;  sw              1    wreg     unsigned char 
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;  sw              1    4[COMMON] unsigned char 
 17388 ;; Return value:  Size  Location     Type
 17389 ;;		None               void
 17390 ;; Registers used:
 17391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        1 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:    4
 17404 ;; This function calls:
 17405 ;;		_DimmerLights_SelectPointer
 17406 ;; This function is called by:
 17407 ;;		_DlyOff_Main
 17408 ;;		_setControl_Lights_Table
 17409 ;;		_setRFSW_Control
 17410 ;;		_setRFSW_AdjControl
 17411 ;;		_setSw_Main
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           
 17416                           ;psect for function _setDimmerLights_SwOff
 17417  1432                     _setDimmerLights_SwOff:	
 17418                           
 17419                           ;incstack = 0
 17420                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17421                           ;setDimmerLights_SwOff@sw stored from wreg
 17422  1432  00F4               	movwf	setDimmerLights_SwOff@sw
 17423                           
 17424                           ;Dimmer_B1.c: 821: DimmerLights_SelectPointer(sw);
 17425  1433  0874               	movf	setDimmerLights_SwOff@sw,w
 17426  1434  3191  2193  3194   	fcall	_DimmerLights_SelectPointer
 17427                           
 17428                           ;Dimmer_B1.c: 823: if (DimmerLights->SwFlag == 1) {
 17429  1437  0020               	movlb	0	; select bank0
 17430  1438  086A               	movf	_DimmerLights,w
 17431  1439  0086               	movwf	6
 17432  143A  3001               	movlw	1	; select bank2/3
 17433  143B  0087               	movwf	7
 17434  143C  1C01               	btfss	1,0
 17435  143D  0008               	return
 17436                           
 17437                           ;Dimmer_B1.c: 824: DimmerLights->SwFlag = 0;
 17438  143E  086A               	movf	_DimmerLights,w
 17439  143F  0086               	movwf	6
 17440  1440  3001               	movlw	1	; select bank2/3
 17441  1441  0087               	movwf	7
 17442  1442  1001               	bcf	1,0
 17443                           
 17444                           ;Dimmer_B1.c: 825: if (DimmerLights->Status == 1) {
 17445  1443  0A6A               	incf	_DimmerLights,w
 17446  1444  0086               	movwf	6
 17447  1445  3001               	movlw	1	; select bank2/3
 17448  1446  0087               	movwf	7
 17449  1447  1C01               	btfss	1,0
 17450  1448  2C5F               	goto	l10457
 17451                           
 17452                           ;Dimmer_B1.c: 826: if (DimmerLights->DimmingSwFlag == 1) {
 17453  1449  086A               	movf	_DimmerLights,w
 17454  144A  0086               	movwf	6
 17455  144B  3001               	movlw	1	; select bank2/3
 17456  144C  0087               	movwf	7
 17457  144D  1D81               	btfss	1,3
 17458  144E  0008               	return
 17459                           
 17460                           ;Dimmer_B1.c: 827: DimmerLights->DimmingSwFlag = 0;
 17461  144F  086A               	movf	_DimmerLights,w
 17462  1450  0086               	movwf	6
 17463  1451  3001               	movlw	1	; select bank2/3
 17464  1452  0087               	movwf	7
 17465  1453  1181               	bcf	1,3
 17466                           
 17467                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 1;
 17468  1454  086A               	movf	_DimmerLights,w
 17469  1455  0086               	movwf	6
 17470  1456  3001               	movlw	1	; select bank2/3
 17471  1457  0087               	movwf	7
 17472  1458  1601               	bsf	1,4
 17473                           
 17474                           ;Dimmer_B1.c: 830: DimmerLights->DimmingSwitch = 0;
 17475  1459  086A               	movf	_DimmerLights,w
 17476  145A  0086               	movwf	6
 17477  145B  3001               	movlw	1	; select bank2/3
 17478  145C  0087               	movwf	7
 17479  145D  1281               	bcf	1,5
 17480                           
 17481                           ;Dimmer_B1.c: 831: }
 17482                           ;Dimmer_B1.c: 832: } else {
 17483  145E  0008               	return
 17484  145F                     l10457:	
 17485                           
 17486                           ;Dimmer_B1.c: 835: DimmerLights->Trigger = 1;
 17487  145F  086A               	movf	_DimmerLights,w
 17488  1460  0086               	movwf	6
 17489  1461  3001               	movlw	1	; select bank2/3
 17490  1462  0087               	movwf	7
 17491  1463  1481               	bsf	1,1
 17492                           
 17493                           ;Dimmer_B1.c: 836: DimmerLights->Switch = 0;
 17494  1464  086A               	movf	_DimmerLights,w
 17495  1465  0086               	movwf	6
 17496  1466  3001               	movlw	1	; select bank2/3
 17497  1467  0087               	movwf	7
 17498  1468  1101               	bcf	1,2
 17499  1469  0008               	return
 17500  146A                     __end_of_setDimmerLights_SwOff:	
 17501                           
 17502                           	psect	text118
 17503  1D6F                     __ptext118:	
 17504 ;; *************** function _getDimmerLights_Status *****************
 17505 ;; Defined at:
 17506 ;;		line 1266 in file "../src/Dimmer_B1.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;  lights          1    wreg     unsigned char 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;  lights          1    4[COMMON] unsigned char 
 17511 ;;  status          1    5[COMMON] unsigned char 
 17512 ;; Return value:  Size  Location     Type
 17513 ;;                  1    wreg      unsigned char 
 17514 ;; Registers used:
 17515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17516 ;; Tracked objects:
 17517 ;;		On entry : 0/0
 17518 ;;		On exit  : 0/0
 17519 ;;		Unchanged: 0/0
 17520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;Total ram usage:        2 bytes
 17526 ;; Hardware stack levels used:    1
 17527 ;; Hardware stack levels required when called:    4
 17528 ;; This function calls:
 17529 ;;		_DimmerLights_SelectPointer
 17530 ;; This function is called by:
 17531 ;;		_DlyOff_Main
 17532 ;;		_setControl_Lights_Table
 17533 ;;		_setRFSW_Control
 17534 ;;		_setRFSW_AdjControl
 17535 ;;		_setRF_AdjControl
 17536 ;;		_DimmerLights_AssignationDimming
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540                           
 17541                           ;psect for function _getDimmerLights_Status
 17542  1D6F                     _getDimmerLights_Status:	
 17543                           
 17544                           ;incstack = 0
 17545                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17546                           ;getDimmerLights_Status@lights stored from wreg
 17547  1D6F  00F4               	movwf	getDimmerLights_Status@lights
 17548                           
 17549                           ;Dimmer_B1.c: 1267: DimmerLights_SelectPointer(lights);
 17550  1D70  0874               	movf	getDimmerLights_Status@lights,w
 17551  1D71  3191  2193         	fcall	_DimmerLights_SelectPointer
 17552                           
 17553                           ;Dimmer_B1.c: 1268: char status = DimmerLights->Status == 1 ? 1 : 0;
 17554  1D73  0020               	movlb	0	; select bank0
 17555  1D74  0A6A               	incf	_DimmerLights,w
 17556  1D75  0086               	movwf	6
 17557  1D76  3001               	movlw	1	; select bank2/3
 17558  1D77  0087               	movwf	7
 17559  1D78  3000               	movlw	0
 17560  1D79  1801               	btfsc	1,0
 17561  1D7A  3001               	movlw	1
 17562  1D7B  00F5               	movwf	getDimmerLights_Status@status
 17563                           
 17564                           ;Dimmer_B1.c: 1269: return status;
 17565  1D7C  0875               	movf	getDimmerLights_Status@status,w
 17566  1D7D  0008               	return
 17567  1D7E                     __end_of_getDimmerLights_Status:	
 17568                           
 17569                           	psect	text119
 17570  1193                     __ptext119:	
 17571 ;; *************** function _DimmerLights_SelectPointer *****************
 17572 ;; Defined at:
 17573 ;;		line 682 in file "../src/Dimmer_B1.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;  lights          1    wreg     unsigned char 
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;  lights          1    3[COMMON] unsigned char 
 17578 ;; Return value:  Size  Location     Type
 17579 ;;		None               void
 17580 ;; Registers used:
 17581 ;;		wreg
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17591 ;;Total ram usage:        2 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:    3
 17594 ;; This function calls:
 17595 ;;		Nothing
 17596 ;; This function is called by:
 17597 ;;		_setDimmerLights_SwOn
 17598 ;;		_setDimmerLights_SwOff
 17599 ;;		_setDimmerLights_DimmingOn
 17600 ;;		_setDimmerLights_Main
 17601 ;;		_getDimmerLights_Status
 17602 ;;		_setDimmerLights_DimmingRun
 17603 ;;		_setRF_AdjControl
 17604 ;;		_DimmerLights_TwoPhase_Main
 17605 ;;		_setDimmerLights_Status
 17606 ;; This function uses a non-reentrant model
 17607 ;;
 17608                           
 17609                           
 17610                           ;psect for function _DimmerLights_SelectPointer
 17611  1193                     _DimmerLights_SelectPointer:	
 17612                           
 17613                           ;incstack = 0
 17614                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 17615                           ;DimmerLights_SelectPointer@lights stored from wreg
 17616  1193  00F3               	movwf	DimmerLights_SelectPointer@lights
 17617                           
 17618                           ;Dimmer_B1.c: 684: if (lights == 1) {
 17619  1194  0873               	movf	DimmerLights_SelectPointer@lights,w
 17620  1195  3A01               	xorlw	1
 17621  1196  1D03               	skipz
 17622  1197  299E               	goto	l10161
 17623                           
 17624                           ;Dimmer_B1.c: 685: DimmerLights = &DimmerLights1;
 17625  1198  305E               	movlw	_DimmerLights1& (0+255)
 17626  1199  00F2               	movwf	??_DimmerLights_SelectPointer
 17627  119A  0872               	movf	??_DimmerLights_SelectPointer,w
 17628  119B  0020               	movlb	0	; select bank0
 17629  119C  00EA               	movwf	_DimmerLights
 17630                           
 17631                           ;Dimmer_B1.c: 686: }
 17632  119D  0008               	return
 17633  119E                     l10161:	
 17634                           
 17635                           ;Dimmer_B1.c: 689: else if (lights == 2) {
 17636  119E  0873               	movf	DimmerLights_SelectPointer@lights,w
 17637  119F  3A02               	xorlw	2
 17638  11A0  1D03               	skipz
 17639  11A1  29A8               	goto	l10165
 17640                           
 17641                           ;Dimmer_B1.c: 690: DimmerLights = &DimmerLights2;
 17642  11A2  3067               	movlw	_DimmerLights2& (0+255)
 17643  11A3  00F2               	movwf	??_DimmerLights_SelectPointer
 17644  11A4  0872               	movf	??_DimmerLights_SelectPointer,w
 17645  11A5  0020               	movlb	0	; select bank0
 17646  11A6  00EA               	movwf	_DimmerLights
 17647                           
 17648                           ;Dimmer_B1.c: 691: }
 17649  11A7  0008               	return
 17650  11A8                     l10165:	
 17651                           
 17652                           ;Dimmer_B1.c: 694: else if (lights == 3) {
 17653  11A8  0873               	movf	DimmerLights_SelectPointer@lights,w
 17654  11A9  3A03               	xorlw	3
 17655  11AA  1D03               	skipz
 17656  11AB  0008               	return
 17657                           
 17658                           ;Dimmer_B1.c: 695: DimmerLights = &DimmerLights3;
 17659  11AC  30B5               	movlw	_DimmerLights3& (0+255)
 17660  11AD  00F2               	movwf	??_DimmerLights_SelectPointer
 17661  11AE  0872               	movf	??_DimmerLights_SelectPointer,w
 17662  11AF  0020               	movlb	0	; select bank0
 17663  11B0  00EA               	movwf	_DimmerLights
 17664                           
 17665                           ;Dimmer_B1.c: 696: __nop();
 17666  11B1  0000               	nop
 17667                           
 17668                           ;Dimmer_B1.c: 697: __nop();
 17669  11B2  0000               	nop
 17670  11B3  0008               	return
 17671  11B4                     __end_of_DimmerLights_SelectPointer:	
 17672                           
 17673                           	psect	text120
 17674  1D24                     __ptext120:	
 17675 ;; *************** function _DelayOff_Initialization *****************
 17676 ;; Defined at:
 17677 ;;		line 26 in file "../src/DelayOff_B1.c"
 17678 ;; Parameters:    Size  Location     Type
 17679 ;;		None
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;		None
 17682 ;; Return value:  Size  Location     Type
 17683 ;;		None               void
 17684 ;; Registers used:
 17685 ;;		wreg, status,2, status,0, pclath, cstack
 17686 ;; Tracked objects:
 17687 ;;		On entry : 0/0
 17688 ;;		On exit  : 0/0
 17689 ;;		Unchanged: 0/0
 17690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;Total ram usage:        0 bytes
 17696 ;; Hardware stack levels used:    1
 17697 ;; Hardware stack levels required when called:    5
 17698 ;; This function calls:
 17699 ;;		_DlyOff_Initialization
 17700 ;; This function is called by:
 17701 ;;		_main
 17702 ;; This function uses a non-reentrant model
 17703 ;;
 17704                           
 17705                           
 17706                           ;psect for function _DelayOff_Initialization
 17707  1D24                     _DelayOff_Initialization:	
 17708                           
 17709                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 17710                           
 17711                           ;incstack = 0
 17712                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17713  1D24  3001               	movlw	1
 17714  1D25  319C  24BC  319D   	fcall	_DlyOff_Initialization
 17715                           
 17716                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 17717  1D28  3002               	movlw	2
 17718  1D29  319C  24BC  319D   	fcall	_DlyOff_Initialization
 17719                           
 17720                           ;DelayOff_B1.c: 36: DlyOff_Initialization(3);
 17721  1D2C  3003               	movlw	3
 17722  1D2D  319C  24BC         	fcall	_DlyOff_Initialization
 17723  1D2F  0008               	return
 17724  1D30                     __end_of_DelayOff_Initialization:	
 17725                           
 17726                           	psect	text121
 17727  1CBC                     __ptext121:	
 17728 ;; *************** function _DlyOff_Initialization *****************
 17729 ;; Defined at:
 17730 ;;		line 56 in file "../src/DelayOff_B1.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;  sw              1    wreg     unsigned char 
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;  sw              1    4[COMMON] unsigned char 
 17735 ;; Return value:  Size  Location     Type
 17736 ;;		None               void
 17737 ;; Registers used:
 17738 ;;		wreg, status,2, status,0, pclath, cstack
 17739 ;; Tracked objects:
 17740 ;;		On entry : 0/0
 17741 ;;		On exit  : 0/0
 17742 ;;		Unchanged: 0/0
 17743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17748 ;;Total ram usage:        1 bytes
 17749 ;; Hardware stack levels used:    1
 17750 ;; Hardware stack levels required when called:    4
 17751 ;; This function calls:
 17752 ;;		_DelayOffPointSelect
 17753 ;; This function is called by:
 17754 ;;		_DelayOff_Initialization
 17755 ;; This function uses a non-reentrant model
 17756 ;;
 17757                           
 17758                           
 17759                           ;psect for function _DlyOff_Initialization
 17760  1CBC                     _DlyOff_Initialization:	
 17761                           
 17762                           ;incstack = 0
 17763                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17764                           ;DlyOff_Initialization@sw stored from wreg
 17765  1CBC  00F4               	movwf	DlyOff_Initialization@sw
 17766                           
 17767                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 17768  1CBD  0874               	movf	DlyOff_Initialization@sw,w
 17769  1CBE  3190  20F7         	fcall	_DelayOffPointSelect
 17770  1CC0  0008               	return
 17771  1CC1                     __end_of_DlyOff_Initialization:	
 17772                           
 17773                           	psect	text122
 17774  10F7                     __ptext122:	
 17775 ;; *************** function _DelayOffPointSelect *****************
 17776 ;; Defined at:
 17777 ;;		line 7 in file "../src/DelayOff_B1.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  sw              1    wreg     unsigned char 
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  sw              1    3[COMMON] unsigned char 
 17782 ;; Return value:  Size  Location     Type
 17783 ;;		None               void
 17784 ;; Registers used:
 17785 ;;		wreg
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;Total ram usage:        2 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    3
 17798 ;; This function calls:
 17799 ;;		Nothing
 17800 ;; This function is called by:
 17801 ;;		_DlyOff_Initialization
 17802 ;;		_DlyOff_Main
 17803 ;;		_setDelayOff_GO
 17804 ;;		_getDelayOff_GO
 17805 ;; This function uses a non-reentrant model
 17806 ;;
 17807                           
 17808                           
 17809                           ;psect for function _DelayOffPointSelect
 17810  10F7                     _DelayOffPointSelect:	
 17811                           
 17812                           ;incstack = 0
 17813                           ; Regs used in _DelayOffPointSelect: [wreg]
 17814                           ;DelayOffPointSelect@sw stored from wreg
 17815  10F7  00F3               	movwf	DelayOffPointSelect@sw
 17816                           
 17817                           ;DelayOff_B1.c: 9: if (sw == 1) {
 17818  10F8  0873               	movf	DelayOffPointSelect@sw,w
 17819  10F9  3A01               	xorlw	1
 17820  10FA  1D03               	skipz
 17821  10FB  2902               	goto	l6243
 17822                           
 17823                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 17824  10FC  30D9               	movlw	_DlySw1& (0+255)
 17825  10FD  00F2               	movwf	??_DelayOffPointSelect
 17826  10FE  0872               	movf	??_DelayOffPointSelect,w
 17827  10FF  0020               	movlb	0	; select bank0
 17828  1100  00E9               	movwf	_DelayOff
 17829                           
 17830                           ;DelayOff_B1.c: 11: }
 17831  1101  0008               	return
 17832  1102                     l6243:	
 17833                           
 17834                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 17835  1102  0873               	movf	DelayOffPointSelect@sw,w
 17836  1103  3A02               	xorlw	2
 17837  1104  1D03               	skipz
 17838  1105  290C               	goto	l6247
 17839                           
 17840                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 17841  1106  30DE               	movlw	_DlySw2& (0+255)
 17842  1107  00F2               	movwf	??_DelayOffPointSelect
 17843  1108  0872               	movf	??_DelayOffPointSelect,w
 17844  1109  0020               	movlb	0	; select bank0
 17845  110A  00E9               	movwf	_DelayOff
 17846                           
 17847                           ;DelayOff_B1.c: 16: }
 17848  110B  0008               	return
 17849  110C                     l6247:	
 17850                           
 17851                           ;DelayOff_B1.c: 19: else if (sw == 3) {
 17852  110C  0873               	movf	DelayOffPointSelect@sw,w
 17853  110D  3A03               	xorlw	3
 17854  110E  1D03               	skipz
 17855  110F  0008               	return
 17856                           
 17857                           ;DelayOff_B1.c: 20: DelayOff = &DlySw3;
 17858  1110  30E3               	movlw	_DlySw3& (0+255)
 17859  1111  00F2               	movwf	??_DelayOffPointSelect
 17860  1112  0872               	movf	??_DelayOffPointSelect,w
 17861  1113  0020               	movlb	0	; select bank0
 17862  1114  00E9               	movwf	_DelayOff
 17863  1115  0008               	return
 17864  1116                     __end_of_DelayOffPointSelect:	
 17865                           
 17866                           	psect	text123
 17867  16DE                     __ptext123:	
 17868 ;; *************** function _Buzzer_Main *****************
 17869 ;; Defined at:
 17870 ;;		line 46 in file "../src/Buzzer_B1.c"
 17871 ;; Parameters:    Size  Location     Type
 17872 ;;		None
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;		None
 17875 ;; Return value:  Size  Location     Type
 17876 ;;		None               void
 17877 ;; Registers used:
 17878 ;;		wreg, status,2, status,0
 17879 ;; Tracked objects:
 17880 ;;		On entry : 0/0
 17881 ;;		On exit  : 0/0
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;Total ram usage:        1 bytes
 17889 ;; Hardware stack levels used:    1
 17890 ;; Hardware stack levels required when called:    3
 17891 ;; This function calls:
 17892 ;;		Nothing
 17893 ;; This function is called by:
 17894 ;;		_main
 17895 ;; This function uses a non-reentrant model
 17896 ;;
 17897                           
 17898                           
 17899                           ;psect for function _Buzzer_Main
 17900  16DE                     _Buzzer_Main:	
 17901                           
 17902                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 17903                           
 17904                           ;incstack = 0
 17905                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 17906  16DE  0021               	movlb	1	; select bank1
 17907  16DF  1CCC               	btfss	_Buz1^(0+128),1
 17908  16E0  0008               	return
 17909                           
 17910                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 17911  16E1  3001               	movlw	1
 17912  16E2  07CD               	addwf	(_Buz1^(0+128)+1),f
 17913  16E3  3000               	movlw	0
 17914  16E4  3DCE               	addwfc	((_Buz1+1)^(0+128)+1),f
 17915                           
 17916                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 17917  16E5  0853               	movf	((_Buz1+1)^(0+128)+6),w
 17918  16E6  024E               	subwf	((_Buz1+1)^(0+128)+1),w
 17919  16E7  1D03               	skipz
 17920  16E8  2EEB               	goto	u8795
 17921  16E9  0852               	movf	(_Buz1^(0+128)+6),w
 17922  16EA  024D               	subwf	(_Buz1^(0+128)+1),w
 17923  16EB                     u8795:	
 17924  16EB  1C03               	skipc
 17925  16EC  0008               	return
 17926                           
 17927                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 17928  16ED  01CD               	clrf	(_Buz1^(0+128)+1)
 17929  16EE  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 17930                           
 17931                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 17932  16EF  12CC               	bcf	_Buz1^(0+128),5
 17933  16F0  0020               	movlb	0	; select bank0
 17934  16F1  1D8D               	btfss	13,3	;volatile
 17935  16F2  2EF5               	goto	l8345
 17936  16F3  0021               	movlb	1	; select bank1
 17937  16F4  16CC               	bsf	_Buz1^(0+128),5
 17938  16F5                     l8345:	
 17939                           
 17940                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 17941  16F5  0021               	movlb	1	; select bank1
 17942  16F6  1ACC               	btfsc	_Buz1^(0+128),5
 17943  16F7  2F1D               	goto	l116
 17944                           
 17945                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 17946  16F8  08CF               	movf	(_Buz1^(0+128)+3),f
 17947  16F9  1D03               	skipz
 17948  16FA  2F19               	goto	l117
 17949                           
 17950                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 17951  16FB  1DCC               	btfss	_Buz1^(0+128),3
 17952  16FC  2F09               	goto	l118
 17953                           
 17954                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 17955  16FD  11CC               	bcf	_Buz1^(0+128),3
 17956                           
 17957                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 17958  16FE  0850               	movf	(_Buz1^(0+128)+4),w
 17959  16FF  00F2               	movwf	??_Buzzer_Main
 17960  1700  0872               	movf	??_Buzzer_Main,w
 17961  1701  00CF               	movwf	(_Buz1^(0+128)+3)
 17962                           
 17963                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 17964  1702  0855               	movf	((_Buz1+1)^(0+128)+8),w
 17965  1703  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17966  1704  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17967  1705  0854               	movf	(_Buz1^(0+128)+8),w
 17968  1706  01D2               	clrf	(_Buz1^(0+128)+6)
 17969  1707  07D2               	addwf	(_Buz1^(0+128)+6),f
 17970                           
 17971                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 17972  1708  0008               	return
 17973  1709                     l118:	
 17974  1709  1E4C               	btfss	_Buz1^(0+128),4
 17975  170A  2F17               	goto	l120
 17976                           
 17977                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 17978  170B  124C               	bcf	_Buz1^(0+128),4
 17979                           
 17980                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 17981  170C  0851               	movf	(_Buz1^(0+128)+5),w
 17982  170D  00F2               	movwf	??_Buzzer_Main
 17983  170E  0872               	movf	??_Buzzer_Main,w
 17984  170F  00CF               	movwf	(_Buz1^(0+128)+3)
 17985                           
 17986                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 17987  1710  0857               	movf	((_Buz1+1)^(0+128)+10),w
 17988  1711  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17989  1712  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17990  1713  0856               	movf	(_Buz1^(0+128)+10),w
 17991  1714  01D2               	clrf	(_Buz1^(0+128)+6)
 17992  1715  07D2               	addwf	(_Buz1^(0+128)+6),f
 17993                           
 17994                           ;Buzzer_B1.c: 62: } else {
 17995  1716  0008               	return
 17996  1717                     l120:	
 17997                           
 17998                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 17999  1717  10CC               	bcf	_Buz1^(0+128),1
 18000                           
 18001                           ;Buzzer_B1.c: 64: }
 18002                           ;Buzzer_B1.c: 65: } else {
 18003  1718  0008               	return
 18004  1719                     l117:	
 18005                           
 18006                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 18007  1719  16CC               	bsf	_Buz1^(0+128),5
 18008                           
 18009                           ;Buzzer_B1.c: 68: RB3 = 1;
 18010  171A  0020               	movlb	0	; select bank0
 18011  171B  158D               	bsf	13,3	;volatile
 18012                           
 18013                           ;Buzzer_B1.c: 69: }
 18014                           ;Buzzer_B1.c: 70: } else {
 18015  171C  0008               	return
 18016  171D                     l116:	
 18017                           
 18018                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 18019  171D  12CC               	bcf	_Buz1^(0+128),5
 18020                           
 18021                           ;Buzzer_B1.c: 73: RB3 = 0;
 18022  171E  0020               	movlb	0	; select bank0
 18023  171F  118D               	bcf	13,3	;volatile
 18024                           
 18025                           ;Buzzer_B1.c: 75: Buz1.Count--;
 18026  1720  3001               	movlw	1
 18027  1721  0021               	movlb	1	; select bank1
 18028  1722  02CF               	subwf	(_Buz1^(0+128)+3),f
 18029  1723  0008               	return
 18030  1724                     __end_of_Buzzer_Main:	
 18031                           
 18032                           	psect	text124
 18033  1C9C                     __ptext124:	
 18034 ;; *************** function _Buzzer_Initialization *****************
 18035 ;; Defined at:
 18036 ;;		line 11 in file "../src/Buzzer_B1.c"
 18037 ;; Parameters:    Size  Location     Type
 18038 ;;		None
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;		None
 18041 ;; Return value:  Size  Location     Type
 18042 ;;		None               void
 18043 ;; Registers used:
 18044 ;;		None
 18045 ;; Tracked objects:
 18046 ;;		On entry : 0/0
 18047 ;;		On exit  : 0/0
 18048 ;;		Unchanged: 0/0
 18049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18054 ;;Total ram usage:        0 bytes
 18055 ;; Hardware stack levels used:    1
 18056 ;; Hardware stack levels required when called:    3
 18057 ;; This function calls:
 18058 ;;		Nothing
 18059 ;; This function is called by:
 18060 ;;		_main
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           
 18065                           ;psect for function _Buzzer_Initialization
 18066  1C9C                     _Buzzer_Initialization:	
 18067                           
 18068                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 18069                           
 18070                           ;incstack = 0
 18071                           ; Regs used in _Buzzer_Initialization: []
 18072  1C9C  0021               	movlb	1	; select bank1
 18073  1C9D  144C               	bsf	_Buz1^(0+128),0
 18074  1C9E  0008               	return
 18075  1C9F                     __end_of_Buzzer_Initialization:	
 18076                           
 18077                           	psect	intentry
 18078  0004                     __pintentry:	
 18079 ;; *************** function _ISR *****************
 18080 ;; Defined at:
 18081 ;;		line 116 in file "../src/MCU_B1.c"
 18082 ;; Parameters:    Size  Location     Type
 18083 ;;		None
 18084 ;; Auto vars:     Size  Location     Type
 18085 ;;		None
 18086 ;; Return value:  Size  Location     Type
 18087 ;;		None               void
 18088 ;; Registers used:
 18089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18090 ;; Tracked objects:
 18091 ;;		On entry : 0/0
 18092 ;;		On exit  : 0/0
 18093 ;;		Unchanged: 0/0
 18094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18099 ;;Total ram usage:        1 bytes
 18100 ;; Hardware stack levels used:    1
 18101 ;; Hardware stack levels required when called:    2
 18102 ;; This function calls:
 18103 ;;		_IOC_ISR
 18104 ;;		_TMR1_ISR
 18105 ;; This function is called by:
 18106 ;;		Interrupt level 1
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110  0004                     _ISR:	
 18111                           
 18112                           ;incstack = 0
 18113                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18114  0004  147E               	bsf	126,0	;set compiler interrupt flag
 18115  0005  3180               	pagesel	$
 18116  0006  0020               	movlb	0	; select bank0
 18117  0007  087F               	movf	127,w
 18118  0008  00F1               	movwf	??_ISR
 18119                           
 18120                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 18121  0009  0021               	movlb	1	; select bank1
 18122  000A  1C11               	btfss	17,0	;volatile
 18123  000B  2812               	goto	i1l8787
 18124  000C  0020               	movlb	0	; select bank0
 18125  000D  1C11               	btfss	17,0	;volatile
 18126  000E  2812               	goto	i1l8787
 18127                           
 18128                           ;MCU_B1.c: 126: TMR1_ISR();
 18129  000F  3192  22A0  3180   	fcall	_TMR1_ISR
 18130  0012                     i1l8787:	
 18131                           
 18132                           ;MCU_B1.c: 127: }
 18133                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 18134  0012  198B               	btfsc	11,3	;volatile
 18135  0013  1C0B               	btfss	11,0	;volatile
 18136  0014  281A               	goto	i1l1557
 18137  0015  0027               	movlb	7	; select bank7
 18138  0016  1D16               	btfss	22,2	;volatile
 18139  0017  281A               	goto	i1l1557
 18140                           
 18141                           ;MCU_B1.c: 139: IOC_ISR();
 18142  0018  319D  2560         	fcall	_IOC_ISR
 18143  001A                     i1l1557:	
 18144                           ;MCU_B1.c: 140: }
 18145                           ;MCU_B1.c: 148: return;
 18146                           
 18147  001A  0871               	movf	??_ISR,w
 18148  001B  0020               	movlb	0	; select bank0
 18149  001C  00FF               	movwf	127
 18150  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 18151  001E  0009               	retfie
 18152  001F                     __end_of_ISR:	
 18153                           
 18154                           	psect	text126
 18155  12A0                     __ptext126:	
 18156 ;; *************** function _TMR1_ISR *****************
 18157 ;; Defined at:
 18158 ;;		line 236 in file "../src/MCU_B1.c"
 18159 ;; Parameters:    Size  Location     Type
 18160 ;;		None
 18161 ;; Auto vars:     Size  Location     Type
 18162 ;;		None
 18163 ;; Return value:  Size  Location     Type
 18164 ;;		None               void
 18165 ;; Registers used:
 18166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18167 ;; Tracked objects:
 18168 ;;		On entry : 0/0
 18169 ;;		On exit  : 0/0
 18170 ;;		Unchanged: 0/0
 18171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18176 ;;Total ram usage:        0 bytes
 18177 ;; Hardware stack levels used:    1
 18178 ;; Hardware stack levels required when called:    1
 18179 ;; This function calls:
 18180 ;;		_DimmerLights_TMR_1
 18181 ;;		_DimmerLights_TMR_2
 18182 ;;		_DimmerLights_TMR_3
 18183 ;; This function is called by:
 18184 ;;		_ISR
 18185 ;; This function uses a non-reentrant model
 18186 ;;
 18187                           
 18188                           
 18189                           ;psect for function _TMR1_ISR
 18190  12A0                     _TMR1_ISR:	
 18191                           
 18192                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 18193                           
 18194                           ;incstack = 0
 18195                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18196  12A0  3190  2074  3192   	fcall	_DimmerLights_TMR_1
 18197                           
 18198                           ;MCU_B1.c: 259: DimmerLights_TMR_2();
 18199  12A3  3190  208E  3192   	fcall	_DimmerLights_TMR_2
 18200                           
 18201                           ;MCU_B1.c: 264: DimmerLights_TMR_3();
 18202  12A6  3190  20A8  3192   	fcall	_DimmerLights_TMR_3
 18203                           
 18204                           ;MCU_B1.c: 269: Timer1.Count++;
 18205  12A9  3001               	movlw	1
 18206  12AA  0021               	movlb	1	; select bank1
 18207  12AB  07D9               	addwf	(_Timer1^(0+128)+1),f
 18208  12AC  3000               	movlw	0
 18209  12AD  3DDA               	addwfc	((_Timer1+1)^(0+128)+1),f
 18210                           
 18211                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 18212  12AE  3001               	movlw	1
 18213  12AF  3ED8               	addlw	_Timer1& (0+255)
 18214  12B0  0086               	movwf	6
 18215  12B1  0187               	clrf	7
 18216  12B2  3F40               	moviw [0]fsr1
 18217  12B3  3AC8               	xorlw	200
 18218  12B4  1D03               	skipz
 18219  12B5  2AB8               	goto	u885_25
 18220  12B6  3F41               	moviw [1]fsr1
 18221  12B7  3A00               	xorlw	0
 18222  12B8                     u885_25:	
 18223  12B8  1D03               	skipz
 18224  12B9  2ABD               	goto	i1l8399
 18225                           
 18226                           ;MCU_B1.c: 271: Timer1.Count = 0;
 18227  12BA  01D9               	clrf	(_Timer1^(0+128)+1)
 18228  12BB  01DA               	clrf	((_Timer1+1)^(0+128)+1)
 18229                           
 18230                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 18231  12BC  1458               	bsf	_Timer1^(0+128),0
 18232  12BD                     i1l8399:	
 18233                           
 18234                           ;MCU_B1.c: 273: }
 18235                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 18236  12BD  30FA               	movlw	250
 18237  12BE  0020               	movlb	0	; select bank0
 18238  12BF  0097               	movwf	23	;volatile
 18239                           
 18240                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 18241  12C0  3038               	movlw	56
 18242  12C1  0096               	movwf	22	;volatile
 18243                           
 18244                           ;MCU_B1.c: 277: TMR1IF = 0;
 18245  12C2  1011               	bcf	17,0	;volatile
 18246  12C3  0008               	return
 18247  12C4                     __end_of_TMR1_ISR:	
 18248                           
 18249                           	psect	text127
 18250  10A8                     __ptext127:	
 18251 ;; *************** function _DimmerLights_TMR_3 *****************
 18252 ;; Defined at:
 18253 ;;		line 1701 in file "../src/Dimmer_B1.c"
 18254 ;; Parameters:    Size  Location     Type
 18255 ;;		None
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;		None
 18258 ;; Return value:  Size  Location     Type
 18259 ;;		None               void
 18260 ;; Registers used:
 18261 ;;		wreg, status,2, status,0
 18262 ;; Tracked objects:
 18263 ;;		On entry : 0/0
 18264 ;;		On exit  : 0/0
 18265 ;;		Unchanged: 0/0
 18266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18271 ;;Total ram usage:        1 bytes
 18272 ;; Hardware stack levels used:    1
 18273 ;; This function calls:
 18274 ;;		Nothing
 18275 ;; This function is called by:
 18276 ;;		_TMR1_ISR
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           
 18281                           ;psect for function _DimmerLights_TMR_3
 18282  10A8                     _DimmerLights_TMR_3:	
 18283                           
 18284                           ;Dimmer_B1.c: 1702: if (DimmerIntr3.GO == 1) {
 18285                           
 18286                           ;incstack = 0
 18287                           ; Regs used in _DimmerLights_TMR_3: [wreg+status,2+status,0]
 18288  10A8  0022               	movlb	2	; select bank2
 18289  10A9  1C4E               	btfss	_DimmerIntr3^(0+256),0
 18290  10AA  0008               	return
 18291                           
 18292                           ;Dimmer_B1.c: 1703: DimmerIntr3.Count++;
 18293  10AB  3001               	movlw	1
 18294  10AC  00F0               	movwf	??_DimmerLights_TMR_3
 18295  10AD  0870               	movf	??_DimmerLights_TMR_3,w
 18296  10AE  07D0               	addwf	(_DimmerIntr3^(0+256)+2),f
 18297                           
 18298                           ;Dimmer_B1.c: 1706: if (DimmerIntr3.Count == DimmerIntr3.TuneValue2_Value) {
 18299  10AF  0850               	movf	(_DimmerIntr3^(0+256)+2),w
 18300  10B0  065A               	xorwf	(_DimmerIntr3^(0+256)+12),w
 18301  10B1  1903               	btfsc	3,2
 18302                           
 18303                           ;Dimmer_B1.c: 1707: if (DimmerIntr3.ControlStatus == 1) {
 18304  10B2  1DCE               	btfss	_DimmerIntr3^(0+256),3
 18305  10B3  28B6               	goto	i1l8019
 18306                           
 18307                           ;Dimmer_B1.c: 1708: RB1 = 1;
 18308  10B4  0020               	movlb	0	; select bank0
 18309  10B5  148D               	bsf	13,1	;volatile
 18310  10B6                     i1l8019:	
 18311                           
 18312                           ;Dimmer_B1.c: 1709: }
 18313                           ;Dimmer_B1.c: 1710: }
 18314                           ;Dimmer_B1.c: 1712: if (DimmerIntr3.Count == 55) {
 18315  10B6  0022               	movlb	2	; select bank2
 18316  10B7  0850               	movf	(_DimmerIntr3^(0+256)+2),w
 18317  10B8  3A37               	xorlw	55
 18318  10B9  1D03               	skipz
 18319  10BA  0008               	return
 18320                           
 18321                           ;Dimmer_B1.c: 1713: DimmerIntr3.GO = 0;
 18322  10BB  104E               	bcf	_DimmerIntr3^(0+256),0
 18323                           
 18324                           ;Dimmer_B1.c: 1714: DimmerIntr3.Count = 0;
 18325  10BC  01D0               	clrf	(_DimmerIntr3^(0+256)+2)
 18326                           
 18327                           ;Dimmer_B1.c: 1716: if (DimmerIntr3.ControlStatus == 1) {
 18328  10BD  1DCE               	btfss	_DimmerIntr3^(0+256),3
 18329  10BE  0008               	return
 18330                           
 18331                           ;Dimmer_B1.c: 1717: RB1 = 0;
 18332  10BF  0020               	movlb	0	; select bank0
 18333  10C0  108D               	bcf	13,1	;volatile
 18334  10C1  0008               	return
 18335  10C2                     __end_of_DimmerLights_TMR_3:	
 18336                           
 18337                           	psect	text128
 18338  108E                     __ptext128:	
 18339 ;; *************** function _DimmerLights_TMR_2 *****************
 18340 ;; Defined at:
 18341 ;;		line 1641 in file "../src/Dimmer_B1.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;		None
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;		None
 18346 ;; Return value:  Size  Location     Type
 18347 ;;		None               void
 18348 ;; Registers used:
 18349 ;;		wreg, status,2, status,0
 18350 ;; Tracked objects:
 18351 ;;		On entry : 0/0
 18352 ;;		On exit  : 0/0
 18353 ;;		Unchanged: 0/0
 18354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;Total ram usage:        1 bytes
 18360 ;; Hardware stack levels used:    1
 18361 ;; This function calls:
 18362 ;;		Nothing
 18363 ;; This function is called by:
 18364 ;;		_TMR1_ISR
 18365 ;; This function uses a non-reentrant model
 18366 ;;
 18367                           
 18368                           
 18369                           ;psect for function _DimmerLights_TMR_2
 18370  108E                     _DimmerLights_TMR_2:	
 18371                           
 18372                           ;Dimmer_B1.c: 1642: if (DimmerIntr2.GO == 1) {
 18373                           
 18374                           ;incstack = 0
 18375                           ; Regs used in _DimmerLights_TMR_2: [wreg+status,2+status,0]
 18376  108E  0022               	movlb	2	; select bank2
 18377  108F  1C3E               	btfss	_DimmerIntr2^(0+256),0
 18378  1090  0008               	return
 18379                           
 18380                           ;Dimmer_B1.c: 1643: DimmerIntr2.Count++;
 18381  1091  3001               	movlw	1
 18382  1092  00F0               	movwf	??_DimmerLights_TMR_2
 18383  1093  0870               	movf	??_DimmerLights_TMR_2,w
 18384  1094  07C0               	addwf	(_DimmerIntr2^(0+256)+2),f
 18385                           
 18386                           ;Dimmer_B1.c: 1646: if (DimmerIntr2.Count == DimmerIntr2.TuneValue2_Value) {
 18387  1095  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 18388  1096  064A               	xorwf	(_DimmerIntr2^(0+256)+12),w
 18389  1097  1903               	btfsc	3,2
 18390                           
 18391                           ;Dimmer_B1.c: 1647: if (DimmerIntr2.ControlStatus == 1) {
 18392  1098  1DBE               	btfss	_DimmerIntr2^(0+256),3
 18393  1099  289C               	goto	i1l7983
 18394                           
 18395                           ;Dimmer_B1.c: 1648: RA7 = 1;
 18396  109A  0020               	movlb	0	; select bank0
 18397  109B  178C               	bsf	12,7	;volatile
 18398  109C                     i1l7983:	
 18399                           
 18400                           ;Dimmer_B1.c: 1649: }
 18401                           ;Dimmer_B1.c: 1650: }
 18402                           ;Dimmer_B1.c: 1652: if (DimmerIntr2.Count == 55) {
 18403  109C  0022               	movlb	2	; select bank2
 18404  109D  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 18405  109E  3A37               	xorlw	55
 18406  109F  1D03               	skipz
 18407  10A0  0008               	return
 18408                           
 18409                           ;Dimmer_B1.c: 1653: DimmerIntr2.GO = 0;
 18410  10A1  103E               	bcf	_DimmerIntr2^(0+256),0
 18411                           
 18412                           ;Dimmer_B1.c: 1654: DimmerIntr2.Count = 0;
 18413  10A2  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 18414                           
 18415                           ;Dimmer_B1.c: 1656: if (DimmerIntr2.ControlStatus == 1) {
 18416  10A3  1DBE               	btfss	_DimmerIntr2^(0+256),3
 18417  10A4  0008               	return
 18418                           
 18419                           ;Dimmer_B1.c: 1657: RA7 = 0;
 18420  10A5  0020               	movlb	0	; select bank0
 18421  10A6  138C               	bcf	12,7	;volatile
 18422  10A7  0008               	return
 18423  10A8                     __end_of_DimmerLights_TMR_2:	
 18424                           
 18425                           	psect	text129
 18426  1074                     __ptext129:	
 18427 ;; *************** function _DimmerLights_TMR_1 *****************
 18428 ;; Defined at:
 18429 ;;		line 1522 in file "../src/Dimmer_B1.c"
 18430 ;; Parameters:    Size  Location     Type
 18431 ;;		None
 18432 ;; Auto vars:     Size  Location     Type
 18433 ;;		None
 18434 ;; Return value:  Size  Location     Type
 18435 ;;		None               void
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;Total ram usage:        1 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		_TMR1_ISR
 18453 ;; This function uses a non-reentrant model
 18454 ;;
 18455                           
 18456                           
 18457                           ;psect for function _DimmerLights_TMR_1
 18458  1074                     _DimmerLights_TMR_1:	
 18459                           
 18460                           ;Dimmer_B1.c: 1523: if (DimmerIntr1.GO == 1) {
 18461                           
 18462                           ;incstack = 0
 18463                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 18464  1074  0021               	movlb	1	; select bank1
 18465  1075  1C20               	btfss	_DimmerIntr1^(0+128),0
 18466  1076  0008               	return
 18467                           
 18468                           ;Dimmer_B1.c: 1524: DimmerIntr1.Count++;
 18469  1077  3001               	movlw	1
 18470  1078  00F0               	movwf	??_DimmerLights_TMR_1
 18471  1079  0870               	movf	??_DimmerLights_TMR_1,w
 18472  107A  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 18473                           
 18474                           ;Dimmer_B1.c: 1527: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 18475  107B  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 18476  107C  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 18477  107D  1903               	btfsc	3,2
 18478                           
 18479                           ;Dimmer_B1.c: 1528: if (DimmerIntr1.ControlStatus == 1) {
 18480  107E  1DA0               	btfss	_DimmerIntr1^(0+128),3
 18481  107F  2882               	goto	i1l7947
 18482                           
 18483                           ;Dimmer_B1.c: 1529: RB4 = 1;
 18484  1080  0020               	movlb	0	; select bank0
 18485  1081  160D               	bsf	13,4	;volatile
 18486  1082                     i1l7947:	
 18487                           
 18488                           ;Dimmer_B1.c: 1530: }
 18489                           ;Dimmer_B1.c: 1531: }
 18490                           ;Dimmer_B1.c: 1533: if (DimmerIntr1.Count == 55) {
 18491  1082  0021               	movlb	1	; select bank1
 18492  1083  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 18493  1084  3A37               	xorlw	55
 18494  1085  1D03               	skipz
 18495  1086  0008               	return
 18496                           
 18497                           ;Dimmer_B1.c: 1534: DimmerIntr1.GO = 0;
 18498  1087  1020               	bcf	_DimmerIntr1^(0+128),0
 18499                           
 18500                           ;Dimmer_B1.c: 1535: DimmerIntr1.Count = 0;
 18501  1088  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 18502                           
 18503                           ;Dimmer_B1.c: 1537: if (DimmerIntr1.ControlStatus == 1) {
 18504  1089  1DA0               	btfss	_DimmerIntr1^(0+128),3
 18505  108A  0008               	return
 18506                           
 18507                           ;Dimmer_B1.c: 1538: RB4 = 0;
 18508  108B  0020               	movlb	0	; select bank0
 18509  108C  120D               	bcf	13,4	;volatile
 18510  108D  0008               	return
 18511  108E                     __end_of_DimmerLights_TMR_1:	
 18512                           
 18513                           	psect	text130
 18514  1D60                     __ptext130:	
 18515 ;; *************** function _IOC_ISR *****************
 18516 ;; Defined at:
 18517 ;;		line 396 in file "../src/MCU_B1.c"
 18518 ;; Parameters:    Size  Location     Type
 18519 ;;		None
 18520 ;; Auto vars:     Size  Location     Type
 18521 ;;		None
 18522 ;; Return value:  Size  Location     Type
 18523 ;;		None               void
 18524 ;; Registers used:
 18525 ;;		wreg, status,2, status,0, pclath, cstack
 18526 ;; Tracked objects:
 18527 ;;		On entry : 0/0
 18528 ;;		On exit  : 0/0
 18529 ;;		Unchanged: 0/0
 18530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;Total ram usage:        0 bytes
 18536 ;; Hardware stack levels used:    1
 18537 ;; Hardware stack levels required when called:    1
 18538 ;; This function calls:
 18539 ;;		_DimmerLights_IOC_1
 18540 ;;		_DimmerLights_IOC_2
 18541 ;;		_DimmerLights_IOC_3
 18542 ;; This function is called by:
 18543 ;;		_ISR
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           
 18548                           ;psect for function _IOC_ISR
 18549  1D60                     _IOC_ISR:	
 18550                           
 18551                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 18552                           
 18553                           ;incstack = 0
 18554                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 18555  1D60  0021               	movlb	1	; select bank1
 18556  1D61  1C3F               	btfss	_myMain^(0+128),0
 18557  1D62  2D6B               	goto	i1l8409
 18558                           
 18559                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 18560  1D63  319F  27B2  319D   	fcall	_DimmerLights_IOC_1
 18561                           
 18562                           ;MCU_B1.c: 409: DimmerLights_IOC_2();
 18563  1D66  319F  27CC  319D   	fcall	_DimmerLights_IOC_2
 18564                           
 18565                           ;MCU_B1.c: 414: DimmerLights_IOC_3();
 18566  1D69  319F  27E6         	fcall	_DimmerLights_IOC_3
 18567  1D6B                     i1l8409:	
 18568                           
 18569                           ;MCU_B1.c: 418: }
 18570                           ;MCU_B1.c: 420: IOCBF2 = 0;
 18571  1D6B  0027               	movlb	7	; select bank7
 18572  1D6C  1116               	bcf	22,2	;volatile
 18573                           
 18574                           ;MCU_B1.c: 421: IOCIF = 0;
 18575  1D6D  100B               	bcf	11,0	;volatile
 18576  1D6E  0008               	return
 18577  1D6F                     __end_of_IOC_ISR:	
 18578                           
 18579                           	psect	text131
 18580  1FE6                     __ptext131:	
 18581 ;; *************** function _DimmerLights_IOC_3 *****************
 18582 ;; Defined at:
 18583 ;;		line 1667 in file "../src/Dimmer_B1.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;		None               void
 18590 ;; Registers used:
 18591 ;;		wreg, status,2
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18601 ;;Total ram usage:        1 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_IOC_ISR
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610                           
 18611                           ;psect for function _DimmerLights_IOC_3
 18612  1FE6                     _DimmerLights_IOC_3:	
 18613                           
 18614                           ;Dimmer_B1.c: 1668: if (DimmerIntr3.GO == 0) {
 18615                           
 18616                           ;incstack = 0
 18617                           ; Regs used in _DimmerLights_IOC_3: [wreg+status,2]
 18618  1FE6  0022               	movlb	2	; select bank2
 18619  1FE7  184E               	btfsc	_DimmerIntr3^(0+256),0
 18620  1FE8  0008               	return
 18621                           
 18622                           ;Dimmer_B1.c: 1672: DimmerIntr3.Count = 0;
 18623  1FE9  01D0               	clrf	(_DimmerIntr3^(0+256)+2)
 18624                           
 18625                           ;Dimmer_B1.c: 1673: DimmerIntr3.GO = 1;
 18626  1FEA  144E               	bsf	_DimmerIntr3^(0+256),0
 18627                           
 18628                           ;Dimmer_B1.c: 1675: if (DimmerIntr3.Dimming_Sw == 1 || DimmerIntr3.Dimming_RF == 1) {
 18629  1FEB  1E4E               	btfss	_DimmerIntr3^(0+256),4
 18630  1FEC  1B4E               	btfsc	_DimmerIntr3^(0+256),6
 18631                           
 18632                           ;Dimmer_B1.c: 1676: DimmerIntr3.Tune = 1;
 18633  1FED  14CE               	bsf	_DimmerIntr3^(0+256),1
 18634                           
 18635                           ;Dimmer_B1.c: 1677: }
 18636                           ;Dimmer_B1.c: 1679: if (DimmerIntr3.Calculate == 1) {
 18637  1FEE  1FCF               	btfss	(_DimmerIntr3^(0+256)+1),7
 18638  1FEF  2FF9               	goto	i1l8007
 18639                           
 18640                           ;Dimmer_B1.c: 1680: DimmerIntr3.Calculate = 0;
 18641  1FF0  13CF               	bcf	(_DimmerIntr3^(0+256)+1),7
 18642                           
 18643                           ;Dimmer_B1.c: 1681: DimmerIntr3.TuneEnd_Value = DimmerIntr3.TuneEnd;
 18644  1FF1  0859               	movf	(_DimmerIntr3^(0+256)+11),w
 18645  1FF2  00F0               	movwf	??_DimmerLights_IOC_3
 18646  1FF3  0870               	movf	??_DimmerLights_IOC_3,w
 18647  1FF4  00DD               	movwf	(_DimmerIntr3^(0+256)+15)
 18648                           
 18649                           ;Dimmer_B1.c: 1682: DimmerIntr3.TuneValue2_Value = DimmerIntr3.TuneValue2;
 18650  1FF5  0856               	movf	(_DimmerIntr3^(0+256)+8),w
 18651  1FF6  00F0               	movwf	??_DimmerLights_IOC_3
 18652  1FF7  0870               	movf	??_DimmerLights_IOC_3,w
 18653  1FF8  00DA               	movwf	(_DimmerIntr3^(0+256)+12)
 18654  1FF9                     i1l8007:	
 18655                           
 18656                           ;Dimmer_B1.c: 1683: }
 18657                           ;Dimmer_B1.c: 1694: DimmerIntr3.Status = RB2 == 1 ? 1 : 0;
 18658  1FF9  12CF               	bcf	(_DimmerIntr3^(0+256)+1),5
 18659  1FFA  0020               	movlb	0	; select bank0
 18660  1FFB  1D0D               	btfss	13,2	;volatile
 18661  1FFC  0008               	return
 18662  1FFD  0022               	movlb	2	; select bank2
 18663  1FFE  16CF               	bsf	(_DimmerIntr3^(0+256)+1),5
 18664  1FFF  0008               	return
 18665  2000                     __end_of_DimmerLights_IOC_3:	
 18666                           
 18667                           	psect	text132
 18668  1FCC                     __ptext132:	
 18669 ;; *************** function _DimmerLights_IOC_2 *****************
 18670 ;; Defined at:
 18671 ;;		line 1606 in file "../src/Dimmer_B1.c"
 18672 ;; Parameters:    Size  Location     Type
 18673 ;;		None
 18674 ;; Auto vars:     Size  Location     Type
 18675 ;;		None
 18676 ;; Return value:  Size  Location     Type
 18677 ;;		None               void
 18678 ;; Registers used:
 18679 ;;		wreg, status,2
 18680 ;; Tracked objects:
 18681 ;;		On entry : 0/0
 18682 ;;		On exit  : 0/0
 18683 ;;		Unchanged: 0/0
 18684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18689 ;;Total ram usage:        1 bytes
 18690 ;; Hardware stack levels used:    1
 18691 ;; This function calls:
 18692 ;;		Nothing
 18693 ;; This function is called by:
 18694 ;;		_IOC_ISR
 18695 ;; This function uses a non-reentrant model
 18696 ;;
 18697                           
 18698                           
 18699                           ;psect for function _DimmerLights_IOC_2
 18700  1FCC                     _DimmerLights_IOC_2:	
 18701                           
 18702                           ;Dimmer_B1.c: 1607: if (DimmerIntr2.GO == 0) {
 18703                           
 18704                           ;incstack = 0
 18705                           ; Regs used in _DimmerLights_IOC_2: [wreg+status,2]
 18706  1FCC  0022               	movlb	2	; select bank2
 18707  1FCD  183E               	btfsc	_DimmerIntr2^(0+256),0
 18708  1FCE  0008               	return
 18709                           
 18710                           ;Dimmer_B1.c: 1611: DimmerIntr2.Count = 0;
 18711  1FCF  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 18712                           
 18713                           ;Dimmer_B1.c: 1612: DimmerIntr2.GO = 1;
 18714  1FD0  143E               	bsf	_DimmerIntr2^(0+256),0
 18715                           
 18716                           ;Dimmer_B1.c: 1614: if (DimmerIntr2.Dimming_Sw == 1 || DimmerIntr2.Dimming_RF == 1) {
 18717  1FD1  1E3E               	btfss	_DimmerIntr2^(0+256),4
 18718  1FD2  1B3E               	btfsc	_DimmerIntr2^(0+256),6
 18719                           
 18720                           ;Dimmer_B1.c: 1615: DimmerIntr2.Tune = 1;
 18721  1FD3  14BE               	bsf	_DimmerIntr2^(0+256),1
 18722                           
 18723                           ;Dimmer_B1.c: 1616: }
 18724                           ;Dimmer_B1.c: 1618: if (DimmerIntr2.Calculate == 1) {
 18725  1FD4  1FBF               	btfss	(_DimmerIntr2^(0+256)+1),7
 18726  1FD5  2FDF               	goto	i1l7971
 18727                           
 18728                           ;Dimmer_B1.c: 1619: DimmerIntr2.Calculate = 0;
 18729  1FD6  13BF               	bcf	(_DimmerIntr2^(0+256)+1),7
 18730                           
 18731                           ;Dimmer_B1.c: 1620: DimmerIntr2.TuneEnd_Value = DimmerIntr2.TuneEnd;
 18732  1FD7  0849               	movf	(_DimmerIntr2^(0+256)+11),w
 18733  1FD8  00F0               	movwf	??_DimmerLights_IOC_2
 18734  1FD9  0870               	movf	??_DimmerLights_IOC_2,w
 18735  1FDA  00CD               	movwf	(_DimmerIntr2^(0+256)+15)
 18736                           
 18737                           ;Dimmer_B1.c: 1621: DimmerIntr2.TuneValue2_Value = DimmerIntr2.TuneValue2;
 18738  1FDB  0846               	movf	(_DimmerIntr2^(0+256)+8),w
 18739  1FDC  00F0               	movwf	??_DimmerLights_IOC_2
 18740  1FDD  0870               	movf	??_DimmerLights_IOC_2,w
 18741  1FDE  00CA               	movwf	(_DimmerIntr2^(0+256)+12)
 18742  1FDF                     i1l7971:	
 18743                           
 18744                           ;Dimmer_B1.c: 1622: }
 18745                           ;Dimmer_B1.c: 1633: DimmerIntr2.Status = RB2 == 1 ? 1 : 0;
 18746  1FDF  12BF               	bcf	(_DimmerIntr2^(0+256)+1),5
 18747  1FE0  0020               	movlb	0	; select bank0
 18748  1FE1  1D0D               	btfss	13,2	;volatile
 18749  1FE2  0008               	return
 18750  1FE3  0022               	movlb	2	; select bank2
 18751  1FE4  16BF               	bsf	(_DimmerIntr2^(0+256)+1),5
 18752  1FE5  0008               	return
 18753  1FE6                     __end_of_DimmerLights_IOC_2:	
 18754                           
 18755                           	psect	text133
 18756  1FB2                     __ptext133:	
 18757 ;; *************** function _DimmerLights_IOC_1 *****************
 18758 ;; Defined at:
 18759 ;;		line 1463 in file "../src/Dimmer_B1.c"
 18760 ;; Parameters:    Size  Location     Type
 18761 ;;		None
 18762 ;; Auto vars:     Size  Location     Type
 18763 ;;		None
 18764 ;; Return value:  Size  Location     Type
 18765 ;;		None               void
 18766 ;; Registers used:
 18767 ;;		wreg, status,2
 18768 ;; Tracked objects:
 18769 ;;		On entry : 0/0
 18770 ;;		On exit  : 0/0
 18771 ;;		Unchanged: 0/0
 18772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18777 ;;Total ram usage:        1 bytes
 18778 ;; Hardware stack levels used:    1
 18779 ;; This function calls:
 18780 ;;		Nothing
 18781 ;; This function is called by:
 18782 ;;		_IOC_ISR
 18783 ;; This function uses a non-reentrant model
 18784 ;;
 18785                           
 18786                           
 18787                           ;psect for function _DimmerLights_IOC_1
 18788  1FB2                     _DimmerLights_IOC_1:	
 18789                           
 18790                           ;Dimmer_B1.c: 1482: if (DimmerIntr1.GO == 0) {
 18791                           
 18792                           ;incstack = 0
 18793                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2]
 18794  1FB2  0021               	movlb	1	; select bank1
 18795  1FB3  1820               	btfsc	_DimmerIntr1^(0+128),0
 18796  1FB4  0008               	return
 18797                           
 18798                           ;Dimmer_B1.c: 1486: DimmerIntr1.Count = 0;
 18799  1FB5  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 18800                           
 18801                           ;Dimmer_B1.c: 1487: DimmerIntr1.GO = 1;
 18802  1FB6  1420               	bsf	_DimmerIntr1^(0+128),0
 18803                           
 18804                           ;Dimmer_B1.c: 1489: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 18805  1FB7  1E20               	btfss	_DimmerIntr1^(0+128),4
 18806  1FB8  1B20               	btfsc	_DimmerIntr1^(0+128),6
 18807                           
 18808                           ;Dimmer_B1.c: 1490: DimmerIntr1.Tune = 1;
 18809  1FB9  14A0               	bsf	_DimmerIntr1^(0+128),1
 18810                           
 18811                           ;Dimmer_B1.c: 1491: }
 18812                           ;Dimmer_B1.c: 1493: if (DimmerIntr1.Calculate == 1) {
 18813  1FBA  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 18814  1FBB  2FC5               	goto	i1l7935
 18815                           
 18816                           ;Dimmer_B1.c: 1494: DimmerIntr1.Calculate = 0;
 18817  1FBC  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 18818                           
 18819                           ;Dimmer_B1.c: 1495: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 18820  1FBD  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 18821  1FBE  00F0               	movwf	??_DimmerLights_IOC_1
 18822  1FBF  0870               	movf	??_DimmerLights_IOC_1,w
 18823  1FC0  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 18824                           
 18825                           ;Dimmer_B1.c: 1496: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 18826  1FC1  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 18827  1FC2  00F0               	movwf	??_DimmerLights_IOC_1
 18828  1FC3  0870               	movf	??_DimmerLights_IOC_1,w
 18829  1FC4  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 18830  1FC5                     i1l7935:	
 18831                           
 18832                           ;Dimmer_B1.c: 1497: }
 18833                           ;Dimmer_B1.c: 1508: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 18834  1FC5  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 18835  1FC6  0020               	movlb	0	; select bank0
 18836  1FC7  1D0D               	btfss	13,2	;volatile
 18837  1FC8  0008               	return
 18838  1FC9  0021               	movlb	1	; select bank1
 18839  1FCA  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 18840  1FCB  0008               	return
 18841  1FCC                     __end_of_DimmerLights_IOC_1:	
 18842  007E                     btemp	set	126	;btemp
 18843  007E                     pic14e$flags	set	126
 18844  007E                     wtemp	set	126
 18845  007E                     wtemp0	set	126
 18846  0080                     wtemp1	set	128
 18847  0082                     wtemp2	set	130
 18848  0084                     wtemp3	set	132
 18849  0086                     wtemp4	set	134
 18850  0088                     wtemp5	set	136
 18851  007F                     wtemp6	set	127
 18852  007E                     ttemp	set	126
 18853  007E                     ttemp0	set	126
 18854  0081                     ttemp1	set	129
 18855  0084                     ttemp2	set	132
 18856  0087                     ttemp3	set	135
 18857  007F                     ttemp4	set	127
 18858  007E                     ltemp	set	126
 18859  007E                     ltemp0	set	126
 18860  0082                     ltemp1	set	130
 18861  0086                     ltemp2	set	134
 18862  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         285
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     72      79
    BANK1            80      0      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      4      73
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw3(BANK3[9]), Sw2(BANK3[9]), Sw1(BANK3[9]), 

    LED	PTR struct LED size(2) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED3(BANK3[4]), VarLED2(BANK3[4]), 
		 -> VarLED1(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights3(BANK3[9]), DimmerLights2(BANK2[9]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK4[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw3(BANK3[5]), DlySw2(BANK3[5]), DlySw1(BANK3[5]), 


Critical Paths under _main in COMMON

    _main->_Flash_Memory_Main
    _my_MainTimer->_setBuz
    _setSw_Main->_setBuz
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _setLog_Code->_setBuz
    _setRF_AdjControl->_getDimmerLights_Status
    _setRFSW_Control->_setBuz
    _setRFSW_AdjControl->_setBuz
    _setDimmerLights_DimmingRun->_DimmerLights_SelectPointer
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _CC2500_PowerOnInitial->_CC2500_PowerRST
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setLED
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _setDimmerLights_Dimming->_setBuz
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _getDimmerLights_ValueToPercent->___awtoft
    _getDimmerLights_PercentToValue->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _TMR1_ISR->_DimmerLights_TMR_2
    _TMR1_ISR->_DimmerLights_TMR_3
    _IOC_ISR->_DimmerLights_IOC_1
    _IOC_ISR->_DimmerLights_IOC_2
    _IOC_ISR->_DimmerLights_IOC_3

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _setLog_Code->_setProductData
    _setControl_Lights_Table->_setRFSW_Control
    _setRFSW_Control->_setDelayOff_GO
    _setRFSW_AdjControl->_setDimmerIntr_MaxmumValue
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setRF_DimmerLights
    _setRF_DimmerLights->_setProductData
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  152182
                                              0 BANK4      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1601
                                              6 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4637
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4637
                                             13 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
                             _setBuz
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0     124
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1310
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1310
                                              5 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   52350
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           2     2      0   52350
                                             70 BANK0      2     2      0
              _CC2500_PowerOnInitial
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                            ___lwdiv
                          _getBuz_GO
                    _getRF_KeyStatus
                          _getRxData
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   47518
                                             68 BANK0      2     2      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0    4181
                                             57 BANK0      1     1      0
                             _setBuz
                 _setMemory_LoopSave
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setMemory_LoopSave                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0   43255
             _getDimmerLights_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
                 _setRFSW_AdjControl
                    _setRFSW_Control
                   _setRF_AdjControl
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRF_AdjControl                                     4     4      0     585
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0   11057
                                             65 BANK0      3     3      0
             _getDimmerLights_Status
                             _setBuz
                     _setDelayOff_GO
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   4     4      0   26104
                                             59 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
                             _setBuz
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
         _setDimmerLights_DimmingRun
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                   _setMemory_Modify
                     _setProductData
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setDimmerLights_DimmingRun                           3     2      1     261
                                              4 COMMON     3     2      1
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getRF_KeyStatus                                      3     3      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getBuz_GO                                            6     4      2      23
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     877
                                              2 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     330
                                              6 COMMON     2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     560
                                              6 COMMON     2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     184
                                              4 COMMON     2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CC2500_PowerOnInitial                                0     0      0    2850
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (4) _CC2500_SIDLEMode                                     0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_PowerRST                                      1     1      0     544
                                              8 COMMON     1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitSetREG                                    4     4      0     698
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitPATable                                   3     3      0     608
                                              7 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteREG                                      3     2      1     422
                                              4 COMMON     3     2      1
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_FrequencyCabr                                 0     0      0     586
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (5) _DelayTime_1us                                        6     4      2     448
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearTXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearRXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteCommand                                  2     2      0     138
                                              4 COMMON     2     2      0
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _setRF_TimeoutCleared                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RF_Timeout_Counter                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteByte                                     2     2      0      96
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     279
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     279
                                              3 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1465
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1465
                                              5 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    1480
                                              5 COMMON     1     1      0
                                              0 BANK0      4     4      0
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             2     2      0      34
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   49998
       _DimmerLights_DimmingFunction
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   49866
                                             69 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   31576
                                             65 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
                             _setLED
                     _setProductData
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1279
                                              3 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     488
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_Dimming_RF                             3     2      1     399
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     221
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     310
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _setDelayOff_GO                                       8     6      2    3563
                                             57 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _setCmd_Status                                        3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _getMain_All_LightsStatus                             1     1      0     105
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0     111
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   17612
                                             62 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
                     _setProductData
                 _setRF_DimmerLights
                 _setRF_TransceiveGO
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _setRF_TransceiveGO                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerLights                                   5     4      1    2983
                                             57 BANK0      5     4      1
                     _setProductData
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_MaxmumValue                            3     2      1     488
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     488
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      92
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      6     6      0     186
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     132
                                              4 COMMON     2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   26411
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0   26411
                                             56 BANK0      1     1      0
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (5) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       4     4      0    8712
                                             50 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_PercentToValue                       6     6      0   17677
                                             50 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     430
                                             36 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    4030
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             16    10      6    4386
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             13     7      6    4935
                                             23 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             6     3      3    3758
                                              7 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    3330
                                              2 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    5458
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    5458
                                             57 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setProductData                                       3     2      1    2536
                                             54 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 7     7      0    2364
                                              6 BANK0      7     7      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1601
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0     136
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0     124
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_Status                               2     2      0     158
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      93
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      88
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      88
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (7) _DelayOffPointSelect                                  2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0       0
                 _DimmerLights_TMR_1
                 _DimmerLights_TMR_2
                 _DimmerLights_TMR_3
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_3                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOC_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_IOC_2
                 _DimmerLights_IOC_3
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_3                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _RF_Timeout_Counter
       _setRF_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setRF_TransceiveGO
         _setTxData
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
   _Exception_Main
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_PowerOnInitial
         _CC2500_ClearRXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_ClearTXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_FrequencyCabr
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
           _DelayTime_1us
         _CC2500_InitPATable
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_InitSetREG
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_PowerRST
           _CC2500_WriteByte
           _DelayTime_1us
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_SIDLEMode
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _RF_RxDisable
       ___lwdiv
       _getBuz_GO
       _getRF_KeyStatus
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _getDimmerLights_Status
             _DimmerLights_SelectPointer
           _getMain_All_LightsStatus
           _setCmd_Status
           _setDimmerLights_SwOff
             _DimmerLights_SelectPointer
           _setDimmerLights_SwOn
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _setBuz
               ___awdiv
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
           _setRFSW_AdjControl
             _getDimmerLights_PercentToValue
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDimmerIntr_Dimming_RF
             _setDimmerIntr_MaxmumValue
               _getDimmerLights_PercentToValue (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setDimmerLights_DimmingRun
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setMemory_Modify
             _setProductData
               _getDimmerLights_ValueToPercent (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setTxData
           _setRFSW_Control
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDelayOff_GO
               _DelayOffPointSelect
               ___bmul
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setRF_DimmerLights
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
           _setRF_AdjControl
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
           _setTxData
         _setLog_Code
           _setBuz
             ___awdiv
           _setMemory_LoopSave
           _setMemory_Modify
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
       _setData
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setRF_Learn
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
     _DimmerLights_IOC_2
     _DimmerLights_IOC_3
   _TMR1_ISR
     _DimmerLights_TMR_1
     _DimmerLights_TMR_2
     _DimmerLights_TMR_3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      4      49      13       91.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     194      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     194      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Mar 30 11:46:08 2015

                    __size_of_Switch_Main 000F                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 1EE7                            ___bmul@product 0074  
                                      _RD 0CA8                   __end_of_CC2500_WriteREG 11D5  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 01A0                                        _Sw 006C  
                  __end_of_setDelayOff_GO 0D0C                              ___ftadd@exp1 0043  
                            ___ftadd@exp2 0042                    setRF_AdjControl@status 0020  
                __size_of_getRF_KeyStatus 000F                      _setDimmerLights_Main 0A19  
                            ___ftadd@sign 0041                                       l120 1717  
                                     l106 087F                                       l116 171D  
                                     l108 0891                                       l117 1719  
                                     l118 1709                      _setDimmerLights_SwOn 0766  
                                     l343 1EC8                                       l344 1EC9  
                                     l275 0B87                                       l615 0C10  
                                     l387 12C8                                       l809 10F5  
                                     l973 04EE                                       _GIE 005F  
                                     _CRC 00DF                                       _RA0 0060  
                                     _RB0 0068      __size_of_DimmerLights_Initialization 000F  
                                     _RB1 0069                                       _RA3 0063  
                                     _RC0 0070                                       _RB2 006A  
                                     _RA4 0064                                       _LED 007A  
                                     _RC1 0071                                       _RB3 006B  
                                     _RC2 0072                                       _RB4 006C  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _RC4 0074  
                                     _RC5 0075                                       _RC6 0076  
                                     _RC7 0077                                       _RF1 00B0  
                                     _ISR 0004                                       _WDT 00DD  
                                     _Cmd 0068              getDimmerLights_Status@lights 0074  
                                     _Sw1 01BE                                       _Sw2 01C7  
                                     _Sw3 01D0                ??_setDimmerIntr_Dimming_RF 0073  
              ??_setDimmerIntr_Dimming_Sw 0073           setDimmerIntr_Dimming_RF@command 0072  
                __end_of_CC2500_WriteByte 1ED2                     _Buzzer_Initialization 1C9C  
                         __end_of_ADC_Set 1CE0                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0075  
     __end_of_setDimmerIntr_ControlStatus 1556               _setDimmerIntr_ControlStatus 1519  
                       ??_getSw_KeyStatus 0072                                      ?_ISR 0070  
                            ___ftdiv@cntr 0031                           __end_of_IOC_ISR 1D6F  
                   _setDimmerLights_OnOff 0473          setDimmerLights_DimmingRun@lights 0076  
                            ___ftdiv@sign 0036                                      l1100 1373  
                                    l1101 1381                                      l1111 02E2  
                                    l1120 030E                                      l1130 033F  
                                    l1114 02F1                                      l1141 038D  
                                    l1125 0341                                      l1109 02F3  
                                    l1143 037D                                      l1127 0330  
                                    l1152 03A6                                      l1136 035C  
                                    l1146 038B                                      l1307 179E  
                                    l1308 17A5                                      l1309 17AC  
                                    l2410 05F1                                      l2414 0559  
                                    l2415 059D                                      l1608 1333  
                                    l2440 1CEC                                      l1618 0E9B  
                                    l2524 0AF6                           __end_of_IOC_Set 1D0E  
                                    l3175 099D                                      l1831 14DC  
                                    l2471 13C0                                      l1840 1EE6  
                                    l3169 0986                                      l1594 160E  
                                    l2458 0AE1                                      l2492 0765  
                                    l1781 16B8                                      l3198 0269  
                                    l2478 06C4                                      l2479 06D3  
                                    l2851 1F2D                                      l1797 1517  
                                    l6243 1102                                      l7035 152E  
                                    l7051 1251                                      l2875 01C0  
                                    l7061 10E5                                      l2877 009E  
                                    l6247 110C                                      l6511 0D70  
                                    l6503 0D55                                      l7151 1E19  
                                    l7039 1542                                      l7047 1246  
                                    l6513 0D79                                      l6505 0D63  
                                    l7065 10EC                                      l6515 0D7C  
                                    l7155 1E1F                     _setDimmerLights_SwOff 1432  
                                    l7157 1E24                                      l6293 1E7E  
                                    l6519 0D8A                                      l6711 0AE9  
                                    l9103 1F48                                      l6703 157F  
                                    l6289 1E78                                      l7363 162A  
                                    l6803 13D7                                      l6723 0B34  
                                    l6715 0AEE                                      l9107 1F50  
                                    l8243 1F38                                      l6485 0D25  
                                    l7365 162C                                      l6709 0AE8  
                                    l6653 0CC2                                      l7391 1651  
                                    l6807 13E9                                      l6663 0CF0  
                                    l8239 1F32                                      l8345 16F5  
                                    l7377 163F                                      l7393 1655  
                                    l6833 1EE1                                      l7379 1641  
                                    l6691 122F                                      l6667 0D02  
                                    l6763 1F5F                                      l6829 1ED4  
                                    l6765 1F63                                      l7573 1DD2  
                                    l7661 115F                                      l7903 037F  
                                    l7831 0300                                      l6687 1224  
                                    l6777 12D9                                      l7665 1169  
                                    l7915 0399                                      l7819 02E4  
                                    l6699 156B                                      l6779 12E4  
                                    l7683 11F4                                      l7675 11E1  
                                    l7861 0332                                      l7837 030F  
                                    l9701 1DB4                     _myMain_Initialization 1DE7  
                                    l8911 08DF                                      l8903 08C1  
                                    l7679 11EB                                      l8905 08CD  
                                    l7873 034E                                      l9545 131E  
                                    l9713 0E20                                      l8915 08E8  
                                    l8919 08F0                                      l7879 035D  
                                    l9727 0E94                                      l9719 0E34  
                                    _CFGS 0CAE                                      l8893 08B9  
                                    l9933 042A                                      l8887 08AE  
                            __CFG_WDTE$ON 0000                                      l9959 15ED  
                                    _FREE 0CAC                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u6005 0CCE                                      _PEIE 005E  
                                    u5615 0D2C                                      u6175 12CE  
                                    u5645 0D56                                      u7255 1F20  
                                    u5675 0D71                                      u9625 08C4  
                                    u9645 08CE                                      u9655 08D8  
                                    u9665 08E0                                      u8795 16EB  
                                    _LWLO 0CAD                                      _RSSI 00E2  
                                    _WREN 0CAA                                      _WPUB 020D  
      __end_of_setDimmerLights_DimmingRun 1F99                _setDimmerLights_DimmingRun 1F81  
                                    _Buz1 00CC                                      _main 169A  
                            ___ftpack@arg 0072                       __end_of_DlyOff_Main 0C17  
                         __end_of_RF_Main 1CA8                              ___ftpack@exp 0075  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_of_WDT_Set 07FF  
                                    ltemp 007E             __size_of_setRF_Initialization 000B  
                                    start 001F                                      ttemp 007E  
                                    wtemp 007E         setDimmerLights_SwOn@dimmingStatus 0027  
    __end_of_DimmerLights_DimmingFunction 03A8     __size_of_DimmerLights_DimmingFunction 00E8  
            _DimmerLights_DimmingFunction 02C0                __end_of_setRFSW_AdjControl 0E1A  
                       ___bmul@multiplier 0075                              ___ftmul@cntr 0035  
                            ___ftmul@sign 0036      _getDimmerLights_Allow_Condition$2624 0073  
    _getDimmerLights_Allow_Condition$2625 0074      _getDimmerLights_Allow_Condition$2626 0075  
                                   ??_ISR 0071                              ___fttol@exp1 0051  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004D  
       setDimmerLights_DimmingRun@command 0074   __end_of_getDimmerLights_Allow_Condition 1657  
__size_of_getDimmerLights_Allow_Condition 0043         ??_getDimmerLights_Allow_Condition 0072  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 1614  
                  _getDimmerLights_Status 1D6F                          __end_of_LED_Main 1E46  
                              _DimmerIntr 00E0                                     l10121 0971  
                                   l10113 095A                                     l10203 0208  
                                   l10117 0961                                     l10221 0235  
                                   l11021 0AB6                                     l11005 0A94  
                                   l10127 098B                                     l10119 096C  
                                   l10223 023F                                     l10215 0222  
                                   l10311 0F79                                     l10161 119E  
                                   l10153 1133                                     l10145 1121  
                                   l10401 0787                                     l10129 0993  
                                   l10233 025B                                     l10225 0244  
                                   l10305 0F63                                     l11121 0A3F  
                                   l11017 0AAD                                     l10403 078A  
                                   l10243 028D                                     l10235 0265  
                                   l10227 0248                                     l10323 0FB4  
                                   l11123 0A45                                     l11051 1422  
                                   l11043 1404                                     l10165 11A8  
                                   l10149 112A                                     l10181 1201  
                                   l10253 02A8                                     l11133 0A6B  
                                   l11045 1410                                     l10415 079E  
                                   l10431 07B8                                     l10239 027B  
                                   l10263 0EBA                                     l10335 0FD0  
                                   l10327 0FBC                                     l11135 0A71  
                                   l11055 142B                                     l11223 05D6  
                                   l10441 07DE                                     l10417 07A1  
                                   l10193 01F2                                     l10513 126D  
                                   l10601 1290                                     l11209 05AC  
                                   l11305 016D                                     l10443 07E4  
                                   l10291 0F2A                                     l10283 0F11  
                                   l10339 0FD8                                     l11235 05EA  
                                   l10445 07EE                                     l10429 07B3  
                                   l10197 01F9                                     l10269 0ED0  
                                   l10517 1275                                     l10509 1265  
                                   l11405 14C3                                     l10703 0C2B  
                                   l10711 0C37                                     l10623 167B  
                                   l10551 0DAF                                     l10535 15C6  
                                   l11271 00CB                                     l11255 0088  
                                   l10457 145F                                     l10721 0C47  
                                   l10481 1FAA                                     l10633 168B  
                                   l10625 167E                                     l11281 00FD  
                                   l10707 0C31                                     l10475 1FA1  
                                   l10491 11BC                                     l10635 168E  
                                   l10563 0E06                                     l10547 0DAA  
                                   l11195 0598                                     l10741 0C72  
                                   l10725 0C4D                                     l10717 0C41  
                                   l10477 1FA4                                     l10493 11BF  
                                   l10629 1684                                     l10813 0B61  
                                   l10639 1694                                     l10831 0B8D  
                                   l10807 0B58                                     l11295 013B  
                   ?_setDimmerLights_Main 0070                                     l10745 0C78  
                                   l10737 0C6B                                     l10729 0C53  
                                   l10497 11C5                                     l10841 0B9D  
                                   l10833 0B90                                     l10809 0B5B  
                                   l10585 1494                                     l10761 06AF  
                                   l11369 14F7                                     l10931 04C2  
                                   l10595 1287                                     l10827 0B70  
                                   l10771 06E2                                     l10749 0C7E  
                                   l10597 128A                                     l10845 0BA3  
                                   l10837 0B96                                     l10781 0724  
                                   l10773 06E8                                     l10951 04FC  
                                   l10935 04CC                                     l10863 09C7  
                                   l10839 0B9A                                     l10791 0738  
                                   l10783 0728                                     l10929 04AD  
                                   l10865 09CA                                     l10793 073C  
                                   l10785 072C                                     l10777 0703  
                                   l10699 0C25                                     l10955 0502  
                                   l10939 04D6                                     l10795 0740  
                                   l10787 0730                                     l10885 09E0  
                                   l10869 09D0                                     l10789 0734  
                                   l10983 17D0                                     l10975 0533  
                                   l10959 0506                                     l10887 09F7  
                                   l10799 0744                           ?_setDelayOff_GO 0059  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 0265  
                         __end_of___awdiv 08F7                           __end_of___ftadd 02C0  
                         __end_of___ftdiv 0F4C                           __end_of___ftmul 1000  
                                   u12005 1EF6                                     u11235 1605  
                         ___awdiv@divisor 0072                                     u11415 0967  
                                   _T1CON 0018                                     u11435 0981  
                         __end_of___fttol 0D93                                     u11455 098E  
                                   u13155 1407                                     u11485 09A5  
                                   u11725 0249                                     u13175 1411  
                                   u11665 0223                                     u11825 0EE2  
                                   u11905 0F85                                     u13185 141B  
                                   u11755 025C                                     u11835 0EF2  
                                   u11915 0F95                                     u13195 1423  
                                   u11845 0F12                                     u11695 0236  
                                   u11855 0F21                                     u11935 0FBD  
                                   u11865 0F2B                                     u11945 0FC3  
                                   u13465 0575                                     u13725 150F  
                                   _IOCBF 0396                                     u11975 0FD9  
                                   u13495 05C5                                     u11985 0FDF  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 1432                           ___awdiv@counter 0020  
           __size_of_CC2500_FrequencyCabr 000B                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                        setRF_Learn@command 0073  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 1F26  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 176A  
 __size_of_getDimmerLights_ValueToPercent 0046            _getDimmerLights_ValueToPercent 1724  
                                   _Light 00E1                          __end_of_TMR1_ISR 12C4  
                 __size_of_setProductData 000C              __size_of_CC2500_WriteCommand 0019  
                        __end_of_TMR1_Set 1D60        DimmerLights_DimmingFunction@lights 0075  
                           ___awtoft@sign 0026                             ___ftpack@sign 0076  
                         __end_of_setData 0850               __size_of_CC2500_ClearRXFIFO 0004  
                           ??_Buzzer_Main 0072                          __end_of_WDT_Main 1E76  
             __size_of_CC2500_ClearTXFIFO 0004                       CC2500_RxData@loop_f 0077  
                          __pbitbssCOMMON 03C8                            __CFG_BOREN$OFF 0000  
                      Flash_Memory_Read@i 0073                          ?_CC2500_ReadByte 0070  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 000F             __end_of_setLED_Initialization 1DC9  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                              ?_setRF_Learn 0070  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                     _getAll_Sw_KeyStatus 1DAB                        _setRF_DimmerLights 0AE3  
             __size_of_Flash_Memory_Write 002A                         ?_CC2500_SIDLEMode 0070  
              __size_of_RF_Initialization 0003          __size_of_DelayOff_Initialization 000C  
             __size_of_setRF_TransceiveGO 0010                    ??_Flash_Memory_Erasing 0072  
             ??_setDimmerLights_DimmingOn 0074                        ??_CC2500_SIDLEMode 0076  
                         __initialization 0021                          ?_CC2500_PowerRST 0070  
           ?_DimmerLights_DimmingFunction 0070                         ?_setMemory_Modify 0070  
                 __size_of_getDelayOff_GO 000F                              __end_of_main 16DE  
                     ?_setRF_DimmerLights 0059                          __end_of_Fosc_Set 1CAC  
          getMain_All_LightsStatus@status 0072                        ??_setMemory_Modify 0072  
            setDimmerLights_OnOff@command 0061                            _Exception_Main 14A3  
                        ?_CC2500_WriteREG 0074         __end_of_DimmerIntr_ValueCalculate 1390  
                               ??_ADC_Set 0072                      _setSw_Initialization 1CE0  
                                  ??_main 0079                             ___fttol@sign1 004C  
                    ?_getAll_Sw_KeyStatus 0070                              ?_setLog_Code 0070  
             ?_setDimmerIntr_DimmingValue 0058              ??_DimmerLights_SelectPointer 0072  
                 _setControl_Lights_Table 06AE                            _setMemory_Data 1CF8  
                  ?_Buzzer_Initialization 0070                   ??_DlyOff_Initialization 0074  
                              _Receive_OK 03C8        setDimmerIntr_ControlStatus@command 0072  
                 _setDimmerLights_Dimming 17B4                                 ??_IOC_ISR 0071  
                               ??_IOC_Set 0072                               _DimmerIntr1 00A0  
                             _DimmerIntr2 013E                               _DimmerIntr3 014E  
                _getMain_All_LightsStatus 1F3B                  __size_of_setRFSW_Control 0040  
                      _RF_Timeout_Counter 1EE7                   ??_Switch_Initialization 0076  
                  ?_setDimmerLights_OnOff 0061                      ??_setRF_DimmerLights 005A  
                       ??_getRF_KeyStatus 0072                    ?_setDimmerLights_SwOff 0070  
                             _DlyOff_Main 0BAF                    ?_myMain_Initialization 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
        __end_of_getDimmerIntr_Dimming_Sw 1135                                 ??_RF_Main 0079  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                                 ??_WDT_Set 0072  
                        __end_of___awtoft 1218                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 09B5                  _getMain_All_Error_Status 1C9F  
                                  _IOCBF2 1CB2                                    i1l1557 001A  
                                  i1l8007 1FF9                                    i1l8019 10B6  
                                  i1l8409 1D6B                                    i1l7935 1FC5  
                                  i1l8399 12BD                                    i1l7971 1FDF  
                                  i1l7947 1082                                    i1l7983 109C  
                                  i1l8787 0012                                    _FVRCON 0117  
    getDimmerLights_Allow_Condition@allow 0077                                    _PMADRH 0192  
                                  _PMADRL 0191                                    _PMDATH 0194  
                                  _PMDATL 0193                       ?_RF_Timeout_Counter 0070  
                                  _PMCON2 0196                                    _OSCCON 0099  
                                  _TMR1IE 0488                                    _TMR1IF 0088  
                                  _IO_Set 10C2                                    _WDTCON 0097  
    __end_of_setDimmerLights_DimmingClose 1DAB     __size_of_setDimmerLights_DimmingClose 000F  
            _setDimmerLights_DimmingClose 1D9C                                    u885_25 12B8  
                      DelayTime_1us@count 0072                        setRF_AdjControl@sw 0022  
          __size_of_CC2500_PowerOnInitial 0015               ??_setDimmerIntr_MaxmumValue 0059  
           __end_of_CC2500_PowerOnInitial 1F11                                    _Dimmer 01B0  
                                  _DlySw1 01D9                                    _DlySw2 01DE  
                                  _DlySw3 01E3                          _setRF_AdjControl 146A  
           __size_of_setRF_TimeoutCleared 0004                     __end_of_getCmd_Status 1E26  
              __end_of_Mcu_Initialization 1EAA                       __end_of_Buzzer_Main 1724  
                                  _Memory 0220                                    _Timer1 00D8  
                                  ___bmul 1E76                    __end_of_Exception_Main 14DD  
                    Exception_Main@lights 0020                                 ??___awdiv 0076  
                               ??___ftadd 003D              __size_of_DelayOffPointSelect 001F  
                               ??___ftdiv 002D                                 ??___ftmul 002D  
                               ??___fttol 0048              ?_Flash_Memory_Initialization 0070  
                               ??___lwdiv 0076                    ??_setDimmerLights_Main 0079  
                                  _r_data 00E6                      Exception_Main@status 0022  
                                  _s_data 00E7                    ??_setDimmerLights_SwOn 0026  
                                  _setLED 0C17                                    _myMain 00BF  
                    ??_RF_Timeout_Counter 0072                    __end_of_setMemory_Data 1D03  
                   ?_setSw_Initialization 0070                          ___awdiv@quotient 0022  
                                  _setBuz 0850          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 1593          __end_of_setDimmerIntr_Dimming_Sw 13FB  
                   ___ftmul@f3_as_product 0032                 _setDimmerLights_DimmingOn 12E9  
                               ??_setData 0072                  Flash_Memory_Read@address 0074  
                        ?_Timeout_Counter 0070                __end_of_setMemory_LoopSave 1E66  
             __size_of_DimmerLights_IOC_1 001A               __size_of_DimmerLights_IOC_2 001A  
             __size_of_DimmerLights_IOC_3 001A                     __end_of_SwPointSelect 1173  
             __size_of_DimmerLights_TMR_1 001A               __size_of_DimmerLights_TMR_2 001A  
             __size_of_DimmerLights_TMR_3 001A              __size_of_Flash_Memory_Modify 0089  
                 __size_of_LedPointSelect 0022           setDimmerIntr_Dimming_Sw@command 0072  
                     Flash_Memory_Write@i 0073              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 1F26               __size_of_CC2500_InitPATable 001F  
                     CC2500_TxData@loop_e 0077          __end_of_CC2500_registers_address 102F  
                 __end_of__initialization 0055           setDimmerIntr_DimmingValue@value 0058  
         getDimmerIntr_DimmingValue@value 0073                                 ?_LED_Main 0070  
                              ___ftadd@f1 0037                                ___ftadd@f2 003A  
                    _getRF_KeyStatus$5789 0074                             ?_my_MainTimer 0070  
               _setDimmerLights_SwOn$2561 0028                 _setDimmerLights_SwOn$2570 0029  
               _setDimmerLights_SwOn$2571 002A                                ___ftdiv@f1 002A  
                              ___ftdiv@f2 0027                                ___ftdiv@f3 0032  
           ?_setDimmerLights_DimmingClose 0070                                ___awtoft@c 0023  
                     ___bmul@multiplicand 0072              ?_DimmerLights_Initialization 0070  
                              ___ftmul@f1 0027                                ___ftmul@f2 002A  
              ?_DimmerIntr_Initialization 0070                                ___fttol@f1 0044  
                          __pcstackCOMMON 0070                           ?_Exception_Main 0070  
                            __pidataBANK4 1173                                 ?_TMR1_ISR 0070  
                               ?_TMR1_Set 0070                 setMemory_LoopSave@command 0073  
                      _LED_Initialization 1E26                           _getSw_KeyStatus 11D5  
               ??_setControl_Lights_Table 0079                        getRF_KeyStatus@key 0073  
                         ?_setMemory_Data 0072            ??_DimmerLights_DimmingFunction 0074  
        ??_getDimmerLights_PercentToValue 0052           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 005F             ??_Flash_Memory_Initialization 0076  
                               ?_WDT_Main 0070         setDimmerIntr_ControlStatus@lights 0074  
                      __size_of_getBuz_GO 0010                 _setDimmerIntr_MaxmumValue 1218  
              __end_of_set_TimeoutCleared 1CC6           setDimmerIntr_MaxmumValue@lights 005A  
                      __size_of_getRxData 0065                       ?_LED_Initialization 0070  
                       ?_CC2500_WriteByte 0070                            _setProductData 1D30  
                    __size_of_setLED_Main 004A                        ??_CC2500_WriteByte 0072  
                              __pbssBANK0 0068                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 16DE                         ??_setRFSW_Control 0061  
             ?_setDimmerLights_DimmingRun 0074                                   ?_IO_Set 0070  
                          ??_my_MainTimer 0026                                ??_LED_Main 0076  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 1D24  
                           ??_Switch_Main 0079                            DelayTime_1us@i 0074  
                          DelayTime_1us@j 0076                      ??_LED_Initialization 0076  
                            _DimmerLights 006A                         LedPointSelect@led 0072  
                  __size_of_DelayOff_Main 000C                      __size_of_setRF_Learn 0011  
                             setBuz@count 0078                   ?_getDimmerLights_Status 0070  
                              __pmaintext 169A                            _getDelayOff_GO 1D8D  
                     _CC2500_WriteCommand 1F99                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005B         __end_of_DimmerIntr_Initialization 06AE  
           ??_DimmerLights_Initialization 0079                                ??_TMR1_ISR 0071  
       __size_of_getDimmerIntr_Dimming_Sw 001F                                ??_TMR1_Set 0072  
                              __pintentry 0004                    ??_setSw_Initialization 0075  
               ?_getDimmerIntr_Dimming_Sw 0070                        __size_of_setTxData 0007  
             ??_DimmerIntr_ValueCalculate 0072                                   ?_setLED 0073  
                  __size_of_DelayTime_1us 0025                                   _ADC_Set 1CD9  
                                 ?_setBuz 0024                                 ?___awtoft 0023  
                               ?___ftpack 0072        __end_of_DimmerLights_SelectPointer 11B4  
              _DimmerLights_SelectPointer 1193                                ??_WDT_Main 0072  
            __end_of_setRF_Initialization 1D19                        _setRFSW_AdjControl 0D93  
                  __end_of_setProductData 1D3C             setDimmerLights_Dimming@lights 0061  
                                 _IOC_ISR 1D60                                   _IOC_Set 1D03  
                    __size_of_setLog_Code 0034             setDimmerLights_Dimming@status 005E  
   getDimmerLights_Allow_Condition@lights 0076                      ?_CC2500_WriteCommand 0070  
                       _Flash_Memory_Main 15D3                         _Flash_Memory_Read 1EAA  
                  __size_of_CC2500_RxData 0064                    __size_of_CC2500_TxData 0066  
                     ?_setRFSW_AdjControl 0070                                   _RF_Data 0120  
                                 _RF_Main 1CA5                        ?_Flash_Memory_Main 0070  
                      ?_Flash_Memory_Read 0070                                   _WDT_Set 07F6  
         __end_of_setControl_Lights_Table 0766                           setRF_Main@error 0067  
                  __size_of_setCmd_Status 0015                                ??_Fosc_Set 0072  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 1800  
                     getCmd_Status@number 0072              __end_of_CC2500_FrequencyCabr 1D24  
                         __size_of_IO_Set 001A                       setCmd_Status@number 0074  
       __size_of_setDimmerIntr_Dimming_RF 003D         __size_of_setDimmerIntr_Dimming_Sw 0037  
                       __end_of_getBuz_GO 1E56                 ?_setDimmerIntr_Dimming_RF 0072  
                     ??_Flash_Memory_Main 0078                 ?_setDimmerIntr_Dimming_Sw 0072  
                     ??_Flash_Memory_Read 0072                    __end_of_getDelayOff_GO 1D9C  
                                 _VarLED1 00EC                                   _VarLED2 01E8  
                                 _VarLED3 01EC            __end_of_getDimmerLights_Status 1D7E  
                       __end_of_getRxData 0AE3                   __end_of_getSw_KeyStatus 11F6  
                _CC2500_registers_address 1000                      ??_setRFSW_AdjControl 005B  
                         __size_of___bmul 0011                       setProductData@value 0056  
                                 ___awdiv 08A3            ??_setDimmerLights_DimmingClose 0075  
                                 ___ftadd 01CA                                   ___ftdiv 0EA3  
                                 ___ftmul 0F4C                                   ___fttol 0D0C  
                     __end_of_Switch_Main 1DE7                                   ___lwdiv 13FB  
              ??_getMain_All_LightsStatus 0072                   ??_Buzzer_Initialization 0072  
                         _getRF_KeyStatus 1DC9                                ??___awtoft 0077  
                              ??___ftpack 0020                           __size_of_setLED 0071  
                    setRFSW_AdjControl@sw 005E           DimmerIntr_ValueCalculate@lights 0073  
                         __size_of_setBuz 0053                                   __ptext1 14DD  
                                 __ptext2 1DE7                                   __ptext3 1E66  
                                 __ptext4 0002                                   __ptext5 1DD8  
                                 __ptext6 0059                                   __ptext7 1E87  
                                 __ptext8 12E9                                   __ptext9 11D5  
               __size_of_CC2500_SIDLEMode 0004                              __size_of_ISR 001B  
              ??_getMain_All_Error_Status 0072                   ??_setDimmerLights_OnOff 0062  
                         ?_setProductData 0056                 __end_of_Flash_Memory_Main 1614  
               __end_of_Flash_Memory_Read 1EBE                   ??_setDimmerLights_SwOff 0074  
                              _setRF_Main 0536                   ??_myMain_Initialization 0072  
                           _DelayOff_Main 1D3C                  __end_of_setRF_AdjControl 14A3  
                       _DimmerLights_Main 1F69                                   _setData 0800  
          __size_of_DlyOff_Initialization 0005                     ??_CC2500_WriteCommand 0074  
               __size_of_setMemory_Modify 0010             __end_of_DlyOff_Initialization 1CC1  
              __end_of_CC2500_ClearRXFIFO 1CB4                __end_of_CC2500_ClearTXFIFO 1CB8  
                            ?_DlyOff_Main 0070                        ?_DimmerLights_Main 0070  
                                 _product 006E                            _LedPointSelect 125C  
               getAll_Sw_KeyStatus@status 0073                       _DelayOffPointSelect 10F7  
                                 clrloop0 1CCD            __size_of_Switch_Initialization 000C  
               _DimmerIntr_ValueCalculate 1364             __end_of_Switch_Initialization 1074  
                    end_of_initialization 0055                 ??_DelayOff_Initialization 0075  
                       _CC2500_InitSetREG 133A                             _DelayTime_1us 12C4  
                       __end_of_setTxData 1CD9                __end_of_Flash_Memory_Write 133A  
      __size_of_setDimmerLights_DimmingOn 0027                                   init_ram 1CC6  
              __end_of_setRF_TransceiveGO 1E16                        ?_CC2500_InitSetREG 0070  
                     ??_DimmerLights_Main 0079                      Flash_Memory_Read@ret 0075  
                                 initloop 1CC7                                _setSw_Main 0059  
                   CC2500_ReadByte@loop_b 0073                    setDimmerLights_SwOn@sw 002C  
                       _CC2500_ReadStatus 127E                      Flash_Memory_Modify@i 0077  
                   _setLED_Initialization 1DBA                           ?_getDelayOff_GO 0070  
                              getBuz_GO@i 0076                        ?_CC2500_ReadStatus 0070  
                __size_of_CC2500_ReadByte 0017                             _CC2500_RxData 09B5  
                           _CC2500_TxData 0B49                       ??_CC2500_InitSetREG 0077  
           __size_of_Flash_Memory_Erasing 000C                      ?_DelayOffPointSelect 0070  
                     _Flash_Memory_Modify 0E1A                              __pstringtext 1000  
                           _setCmd_Status 1ED2                       _Flash_Memory_Unlock 1CEF  
                     ??_CC2500_ReadStatus 0074                   CC2500_InitSetREG@loop_c 0022  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0075  
                  setSw_Initialization@sw 0075                 __end_of_DimmerLights_Main 1F81  
                      _Mcu_Initialization 1E98                  __size_of_CC2500_PowerRST 0043  
            __end_of_setRF_TimeoutCleared 1CB0                      __end_of_my_MainTimer 1519  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 127E                  __size_of_CC2500_WriteREG 0021  
        setDimmerIntr_DimmingValue@lights 005A          getDimmerIntr_DimmingValue@lights 0074  
               __end_of_CC2500_InitSetREG 1364                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070               __size_of_setRF_DimmerLights 0066  
                          ?_DelayTime_1us 0072                      ?_Flash_Memory_Unlock 0070  
      __size_of_setDimmerIntr_MaxmumValue 0022                 __end_of_CC2500_ReadStatus 12A0  
                           ?_RF_RxDisable 0070            setDimmerIntr_Dimming_RF@lights 0074  
         getMain_All_Error_Status@command 0070                               ___ftdiv@exp 0035  
       __end_of_setDimmerLights_DimmingOn 1310                          ??_Exception_Main 0075  
                          __end_of_IO_Set 10DC                      _setRF_Initialization 1D0E  
                      _setMemory_LoopSave 1E56                               _Switch_Main 1DD8  
                       __size_of_LED_Main 0010                          ?_getSw_KeyStatus 0070  
                          ?_CC2500_RxData 0070                            ?_CC2500_TxData 0070  
                 __end_of_getRF_KeyStatus 1DD8                          ??_setMemory_Data 0073  
                             ___ftmul@exp 0031                     _CC2500_PowerOnInitial 1EFC  
             ??_DimmerIntr_Initialization 0058                      ??_Mcu_Initialization 0073  
             __end_of_getAll_Sw_KeyStatus 1DBA                     ??_DelayOffPointSelect 0072  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0072  
                     ?_setMemory_LoopSave 0070                            __end_of___bmul 1E87  
     __size_of_getDimmerIntr_DimmingValue 001B                      setRF_DimmerLights@on 0059  
                       getSw_KeyStatus@sw 0073               __size_of_RF_Timeout_Counter 0015  
                       __size_of_TMR1_ISR 0024          DimmerLights_SelectPointer@lights 0073  
                       __size_of_TMR1_Set 000C             __size_of_setDimmerLights_Main 0065  
                          __end_of_setLED 0C88             __size_of_setDimmerLights_SwOn 0090  
                          __end_of_setBuz 08A3                __end_of_DimmerLights_IOC_1 1FCC  
              __end_of_DimmerLights_IOC_2 1FE6                __end_of_DimmerLights_IOC_3 2000  
                    _CC2500_FrequencyCabr 1D19                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                               ?_setRF_Main 0070  
                         _setRFSW_Control 1593                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 108E                __end_of_DimmerLights_TMR_2 10A8  
              __end_of_DimmerLights_TMR_3 10C2                       start_initialization 0021  
                         ?_LedPointSelect 0070                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 0010                     ??_Flash_Memory_Modify 0076  
            ?_setDimmerIntr_ControlStatus 0072                __end_of_CC2500_InitPATable 1154  
                    ??_setMemory_LoopSave 0072                     ??_Flash_Memory_Unlock 0072  
                          ??_RF_RxDisable 0072    __end_of_getDimmerLights_PercentToValue 0952  
 __size_of_getDimmerLights_PercentToValue 005B            _getDimmerLights_PercentToValue 08F7  
                            ?_Buzzer_Main 0070       getDimmerLights_PercentToValue@value 0054  
           setRF_AdjControl@dimmingStatus 0021                        _set_TimeoutCleared 1CC1  
       __end_of_setDimmerIntr_MaxmumValue 123A                                  ??_IO_Set 0072  
                __size_of_Timeout_Counter 0015                                 _VarErrLED 00E8  
                             ?_setSw_Main 0070                    ?_setLED_Initialization 0070  
                   ?_setRF_Initialization 0070                         __size_of_Fosc_Set 0004  
               __size_of_CC2500_WriteByte 0014                       ?_set_TimeoutCleared 0070  
                          ??_WDT_Clearing 0072                                 _Rx_Length 00E3  
                   setProductData@address 0058                       Exception_Main@count 0021  
                     Exception_Main@error 0023                                  ??___bmul 0073  
                  __size_of_SwPointSelect 001F          __end_of_getMain_All_LightsStatus 1F52  
                               _Tx_Length 006D                               __pdataBANK4 0245  
                                ??_setLED 0074                                  ?_ADC_Set 0070  
                                ??_setBuz 0077                           ??_DelayOff_Main 0079  
                       ??_CC2500_ReadByte 0072               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 1CA2                          _CC2500_SIDLEMode 1CB8  
              __size_of_DimmerLights_Main 0018                        setMemory_Data@data 0072  
                   ?_CC2500_FrequencyCabr 0070            setDimmerIntr_Dimming_Sw@lights 0074  
          getDimmerIntr_Dimming_Sw@lights 0073                             ??_setLED_Main 0073  
                       __size_of___awtoft 0022                         __size_of___ftpack 0063  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007A  
                                ?_IOC_Set 0070            getDimmerIntr_Dimming_Sw@status 0072  
                               ___latbits 0003                          _setMemory_Modify 1DF6  
                           __pcstackBANK0 0020                 setRF_TransceiveGO@command 0073  
                           __pcstackBANK4 0265                      ??_set_TimeoutCleared 0072  
               _DimmerIntr_Initialization 05F5                           ??_DelayTime_1us 0074  
              __size_of_CC2500_InitSetREG 002A                             DlyOff_Main@sw 005B  
                       ??_CC2500_PowerRST 0078                                  ?_RF_Main 0070  
                                ?_WDT_Set 0070             ??_setDimmerIntr_ControlStatus 0073  
                            ??_TouchPower 0072                      __size_of_DlyOff_Main 0068  
              __size_of_CC2500_ReadStatus 0022            setDimmerIntr_MaxmumValue@value 0058  
             setDimmerLights_DimmingOn@sw 0074                         ??_CC2500_WriteREG 0075  
                           ??_setRF_Learn 0072                             _DimmerLights1 015E  
                           _DimmerLights2 0167                             _DimmerLights3 01B5  
                   CC2500_WriteREG@w_addr 0076                     setDelayOff_GO@command 0059  
                         ??_CC2500_RxData 0076                  setRFSW_AdjControl@status 005D  
                         ??_CC2500_TxData 0076                                 __pnvBANK0 006E  
                          getRxData@error 0065               __size_of_LED_Initialization 0010  
                    _setRF_TimeoutCleared 1CAC                    ?_CC2500_PowerOnInitial 0070  
      __size_of_DimmerIntr_ValueCalculate 002C                       __size_of_setRF_Main 00BF  
                        ___lwdiv@dividend 0074                     DelayOffPointSelect@sw 0073  
                           _getCmd_Status 1E16                                setBuz@time 0024  
                         ??_setCmd_Status 0073                       setDelayOff_GO@value 005A  
                ?_setControl_Lights_Table 0070                          ?_getRF_KeyStatus 0070  
                               _getBuz_GO 1E46                  ?_setDimmerLights_Dimming 005E  
     __end_of_Flash_Memory_Initialization 0473               _Flash_Memory_Initialization 03A8  
                                ?___awdiv 0072                                 __ptext100 05F5  
                               __ptext101 1DF6                                 __ptext110 1D3C  
                               __ptext102 1724                                 __ptext111 0BAF  
                               __ptext103 08F7                                 __ptext120 1D24  
                               __ptext112 1D30                                 __ptext104 0D0C  
                               __ptext121 1CBC                                 __ptext113 0766  
                               __ptext105 0F4C                                 __ptext130 1D60  
                               __ptext122 10F7                                 __ptext114 0850  
                               __ptext106 0EA3                                 __ptext131 1FE6  
                               __ptext123 16DE                                 __ptext115 08A3  
                               __ptext107 01CA                                 __ptext132 1FCC  
                               __ptext124 1C9C                                 __ptext116 1116  
                               __ptext108 11F6                                 __ptext133 1FB2  
                               __ptext117 1432                                 __ptext109 0952  
                                ?___ftadd 0037                                 __ptext126 12A0  
                               __ptext118 1D6F                                 __ptext127 10A8  
                               __ptext119 1193                                 __ptext128 108E  
                               __ptext129 1074                                 _getRxData 0A7E  
                                ?___ftdiv 0027                                  ?___ftmul 0027  
                                ?___fttol 0044                     __size_of_my_MainTimer 003C  
                                ?___lwdiv 0072                   __end_of_setRFSW_Control 15D3  
                        ??_setProductData 0057             __size_of_setSw_Initialization 0007  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 1C9F  
                           ??_setLog_Code 0059                        __end_of_TouchPower 1F3B  
                     __size_of_setSw_Main 0171              CC2500_ReadStatus@status_addr 0075  
      __end_of_getDimmerIntr_DimmingValue 10F7              ??_setDimmerIntr_DimmingValue 0059  
              _getDimmerIntr_DimmingValue 10DC                    CC2500_WriteByte@loop_a 0073  
                                ?_setData 0070            __size_of_setDimmerLights_OnOff 00C3  
                       ?_setRF_AdjControl 0070                                 _r_address 00E5  
           __end_of_setDimmerLights_OnOff 0536            __size_of_setDimmerLights_SwOff 0038  
          __size_of_myMain_Initialization 000F             __end_of_setDimmerLights_SwOff 146A  
            __end_of_CC2500_patable_vaule 1066             __end_of_myMain_Initialization 1DF6  
                        ___lwdiv@quotient 0021                        ??_setRF_AdjControl 0076  
                           _SwPointSelect 1154                       __end_of_setLED_Main 17B4  
                        ??_getDelayOff_GO 0074                    ??_setRF_Initialization 0072  
                       _CC2500_rfSettings 102F                                  _LED_Main 1E36  
                         SwPointSelect@sw 0073                                 clear_ram0 1CCC  
                CC2500_InitPATable@loop_d 0021                     ?_setRF_TimeoutCleared 0070  
                            _my_MainTimer 14DD                                 _setTxData 1CD2  
     __end_of_DimmerLights_Initialization 1D8D               _DimmerLights_Initialization 1D7E  
                      _CC2500_ClearRXFIFO 1CB0                    _Flash_Memory_Main$3562 0021  
                          ?_getCmd_Status 0070                        _CC2500_ClearTXFIFO 1CB4  
                _getDimmerIntr_Dimming_Sw 1116                  setRF_DimmerLights@lights 005D  
                                _GO_nDONE 04E9                       __end_of_setRF_Learn 1E98  
                       ??_Timeout_Counter 0072                                ?_getBuz_GO 0072  
                setRF_DimmerLights@status 005C      __size_of_setDimmerIntr_ControlStatus 003D  
             __size_of_setRFSW_AdjControl 0087       __size_of_setDimmerIntr_DimmingValue 0022  
                      _Flash_Memory_Write 1310                                ?_getRxData 0070  
                                _TMR1_ISR 12A0                    CC2500_InitSetREG@temp1 0020  
                  CC2500_InitSetREG@temp2 0021                                  _TMR1_Set 1D54  
                     ?_CC2500_ClearRXFIFO 0070                       ?_CC2500_ClearTXFIFO 0070  
                      _setRF_TransceiveGO 1E06                                  _RF_Count 00DB  
                    __end_of_RF_RxDisable 1CEF               __end_of_CC2500_WriteCommand 1FB2  
                  ??_CC2500_FrequencyCabr 0078                                  _WDT_Main 1E66  
                 DlyOff_Initialization@sw 0074                     getSw_KeyStatus@status 0072  
                        __size_of_ADC_Set 0007                       ?_Flash_Memory_Write 0070  
                     ?_setRF_TransceiveGO 0070                   __size_of_setDelayOff_GO 0084  
                                _DelayOff 0069                              setSw_Main@sw 002F  
                        __size_of_IOC_ISR 000F            getMain_All_Error_Status@status 0072  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1D54  
                          ?_SwPointSelect 0070                            setLED_Main@led 0075  
                    __end_of_WDT_Clearing 0004                       __end_of_setLog_Code 13C4  
                   _DlyOff_Initialization 1CBC         __size_of_getMain_All_LightsStatus 0017  
                    ??_CC2500_ClearRXFIFO 0076                 ?_getMain_All_LightsStatus 0070  
                    ??_CC2500_ClearTXFIFO 0076                 __end_of_CC2500_rfSettings 105E  
                        __size_of_RF_Main 0003                  _setDimmerIntr_Dimming_RF 1556  
             setDimmerLights_OnOff@lights 0064                  _setDimmerIntr_Dimming_Sw 13C4  
                                _Fosc_Set 1CA8                          __size_of_WDT_Set 0009  
                   setRFSW_Control@status 0062                     _Switch_Initialization 1068  
       __size_of_getMain_All_Error_Status 0003                      ??_Flash_Memory_Write 0072  
               ?_getMain_All_Error_Status 0070                      __size_of_Buzzer_Main 0046  
                              ?_setTxData 0070                              ?_Switch_Main 0070  
                        _CC2500_WriteByte 1EBE       __size_of_DimmerLights_SelectPointer 0021  
                    ??_setRF_TransceiveGO 0072                                  _SwDetect 00E4  
                        getCmd_Status@cmd 0073                          setCmd_Status@cmd 0072  
                       setRFSW_Control@sw 0063          ??_getDimmerLights_ValueToPercent 0079  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0074  
                        __size_of___awdiv 0054                          __size_of___ftadd 00F6  
                        ?_setRFSW_Control 0070                          __size_of___ftdiv 00A9  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                  setDimmerLights_SwOn@idle 002B  
                                ___awtoft 11F6                          ??_LedPointSelect 0072  
                                ___ftpack 0952                              ??_setRF_Main 0066  
                    CC2500_WriteREG@value 0074                               _setLED_Main 176A  
              __end_of_setRF_DimmerLights 0B49                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
                        setDelayOff_GO@sw 0060                           ___lwdiv@divisor 0072  
                        __size_of_setData 0050                           ___lwdiv@counter 0020  
                                __ptext10 1154                                  __ptext11 1F26  
                                __ptext20 1390                                  __ptext12 1CC1  
                                __ptext21 1E56                                  __ptext13 1F11  
                                __ptext30 1CE7                                  __ptext22 06AE  
                                __ptext14 1068                                  __ptext31 0B49  
                                __ptext23 146A                                  __ptext15 1CE0  
                                __ptext40 11B4                                  __ptext32 09B5  
                                __ptext24 1593                                  __ptext16 1CA5  
                                __ptext41 1D19                                  __ptext33 127E  
                                __ptext25 0D93                                  __ptext17 0536  
                                __ptext50 1D0E                                  __ptext42 12C4  
                                __ptext34 1F52                                  __ptext26 1F81  
                                __ptext18 0800                                  __ptext51 1E98  
                                __ptext43 1CB4                                  __ptext35 1EFC  
                                __ptext27 1DC9                                  __ptext19 0A7E  
                                __ptext60 1E26                                  __ptext52 07F6  
                                __ptext44 1CB0                                  __ptext36 1CB8  
                                __ptext28 1E46                                  __ptext61 1DBA  
                                __ptext53 1D54                                  __ptext45 1F99  
                                __ptext37 1657                                  __ptext29 13FB  
                                __ptext70 1EAA                                  __ptext62 15D3  
                                __ptext54 10C2                                  __ptext46 1CAC  
                                __ptext38 133A                                  __ptext71 14A3  
                                __ptext63 1DAB                                  __ptext55 1D03  
                                __ptext47 1EE7                                  __ptext39 1135  
                                __ptext80 123A                                  __ptext72 1C9F  
                                __ptext64 0E1A                                  __ptext56 1CA8  
                                __ptext48 1EBE                                  __ptext81 1519  
                                __ptext73 1F69                                  __ptext65 1D48  
                                __ptext57 1CD9                                  __ptext49 1CA2  
                                __ptext90 1E06                                  __ptext82 0C88  
                                __ptext74 0A19                                  __ptext66 03A8  
                                __ptext58 1E36                                  __ptext91 0AE3  
                                __ptext83 1E76                                  __ptext75 0473  
                                __ptext67 1CF8                                  __ptext59 176A  
                                __ptext92 1218                                  __ptext84 1ED2  
                                __ptext76 0C17                                  __ptext68 1310  
                                __ptext93 13C4                                  __ptext85 1F3B  
                                __ptext77 125C                                  __ptext69 1CEF  
                                __ptext94 10DC                                  __ptext86 1D8D  
                                __ptext78 1D9C                                  __ptext95 1614  
                                __ptext87 1E16                                  __ptext79 1556  
                                __ptext96 02C0                                  __ptext88 17B4  
                                __ptext97 1364                                  __ptext89 1CD2  
                                __ptext98 1D7E                                  __ptext99 07FF  
                                __product 0245                   ??_setLED_Initialization 0075  
                ??_getDimmerLights_Status 0074              __end_of_setDimmerLights_Main 0A7E  
                      _DimmerLights_IOC_1 1FB2                        _DimmerLights_IOC_2 1FCC  
            __end_of_setDimmerLights_SwOn 07F6                        _DimmerLights_IOC_3 1FE6  
                            ??_setSw_Main 002D                    ??_setRF_TimeoutCleared 0072  
            ??_setDimmerLights_DimmingRun 0075                             setLED@command 0073  
                           __size_of_main 0044                               _setRF_Learn 1E87  
      __size_of_DimmerIntr_Initialization 00B9                           ??_getCmd_Status 0072  
                      _DimmerLights_TMR_1 1074                        _DimmerLights_TMR_2 108E  
                      _DimmerLights_TMR_3 10A8                  __end_of_CC2500_SIDLEMode 1CBC  
              setDimmerLights_Main@lights 0065               __end_of_DelayOffPointSelect 1116  
              CC2500_WriteCommand@command 0075                           _CC2500_ReadByte 1F52  
              ?_setDimmerLights_DimmingOn 0070                        _CC2500_InitPATable 1135  
                __end_of_setMemory_Modify 1E06                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_IOC_2 0070                       ?_DimmerLights_IOC_3 0070  
                      __end_of_setRF_Main 05F5                               ??_getBuz_GO 0074  
                     ?_DimmerLights_TMR_1 0070                       ?_DimmerLights_TMR_2 0070  
                     ?_DimmerLights_TMR_3 0070               __size_of_Mcu_Initialization 0012  
                    _CC2500_patable_vaule 105E                               ??_getRxData 0064  
              __end_of_RF_Timeout_Counter 1EFC               Flash_Memory_Main@key_Status 0020  
                _getAll_Sw_KeyStatus$6885 0074                                  main@argc 0265  
                                main@argv 0267                       ?_CC2500_InitPATable 0070  
     getDimmerLights_ValueToPercent@value 0052                           _CC2500_PowerRST 1657  
                __size_of_getSw_KeyStatus 0021              setDimmerLights_Dimming@value 0060  
      __end_of_setDimmerIntr_DimmingValue 125C                _setDimmerIntr_DimmingValue 123A  
             __end_of_Flash_Memory_Modify 0EA3              __size_of_getAll_Sw_KeyStatus 000F  
                             _setLog_Code 1390               __end_of_Flash_Memory_Unlock 1CF8  
                         ??_SwPointSelect 0072                           _CC2500_WriteREG 11B4  
                      __end_of_setSw_Main 01CA                      ??_DimmerLights_IOC_1 0070  
                    ??_DimmerLights_IOC_2 0070                      ??_DimmerLights_IOC_3 0070  
         getDimmerLights_PercentToValue@i 0055       __size_of_setDimmerLights_DimmingRun 0018  
                           _Transceive_OK 03C9                    ?_DlyOff_Initialization 0070  
                    ??_DimmerLights_TMR_1 0070                      ??_DimmerLights_TMR_2 0070  
                    ??_DimmerLights_TMR_3 0070                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0072                   setDimmerLights_SwOff@sw 0074  
             __size_of_setMemory_LoopSave 0010                                  intlevel1 0000  
                    ??_CC2500_InitPATable 0077                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 005D                           setDelayOff_GO@j 005E  
                         setDelayOff_GO@k 005F                   ??_CC2500_PowerOnInitial 0079  
  __end_of_setDimmerLights_Initialization 0800   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 07FF                ?_setDimmerIntr_MaxmumValue 0058  
                             ??_setTxData 0072                    CC2500_InitPATable@temp 0020  
                   __size_of_RF_RxDisable 0008                         _RF_Initialization 1CA2  
                    _Flash_Memory_Erasing 1D48                        ?_RF_Initialization 0070  
                              _SPI0Buffer 006B                   __size_of_Exception_Main 003A  
         __end_of_DelayOff_Initialization 1D30                     __size_of_WDT_Clearing 0002  
                   __end_of_DelayOff_Main 1D48                       ??_RF_Initialization 0073  
                 __size_of_setMemory_Data 000B                            _setDelayOff_GO 0C88  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setControl_Lights_Table 00B8  
        __size_of_setDimmerLights_Dimming 004C      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 0059  
                   setMemory_Data@address 0074                     __end_of_DelayTime_1us 12E9  
              ??_getDimmerIntr_Dimming_Sw 0072                   __end_of_CC2500_ReadByte 1F69  
            __end_of_setSw_Initialization 1CE7                           _Timeout_Counter 1F11  
         __size_of_getDimmerLights_Status 000F           getDimmerLights_ValueToPercent@i 0053  
                            _RF_RxDisable 1CE7          Flash_Memory_Initialization@value 0077  
              __end_of_LED_Initialization 1E36                   setMemory_Modify@command 0073  
               __end_of_RF_Initialization 1CA5                 __size_of_setRF_AdjControl 0039  
                   __end_of_CC2500_RxData 0A19                     __end_of_CC2500_TxData 0BAF  
                 __end_of_CC2500_PowerRST 169A  
