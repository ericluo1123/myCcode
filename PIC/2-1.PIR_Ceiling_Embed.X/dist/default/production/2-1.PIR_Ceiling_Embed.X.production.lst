

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Nov 24 11:12:03 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0096                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  018C                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0096                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009F                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0186                     	;# 
   202  018C                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009F                     	;# 
   261  0108                     	;# 
   262  0109                     	;# 
   263  010C                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0186                     	;# 
   271  018C                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  000E                     	;# 
   287  000F                     	;# 
   288  0010                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001D                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  0081                     	;# 
   307  0085                     	;# 
   308  0086                     	;# 
   309  0087                     	;# 
   310  0089                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  008F                     	;# 
   315  0090                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0096                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009F                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0185                     	;# 
   339  0186                     	;# 
   340  018C                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0096                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009F                     	;# 
   399  0108                     	;# 
   400  0109                     	;# 
   401  010C                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0186                     	;# 
   409  018C                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  000E                     	;# 
   425  000F                     	;# 
   426  0010                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001D                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  0081                     	;# 
   445  0085                     	;# 
   446  0086                     	;# 
   447  0087                     	;# 
   448  0089                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0096                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009F                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0186                     	;# 
   478  018C                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0095                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0096                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009F                     	;# 
   537  0108                     	;# 
   538  0109                     	;# 
   539  010C                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  0185                     	;# 
   546  0186                     	;# 
   547  018C                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0096                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009F                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  010F                     	;# 
   614  0185                     	;# 
   615  0186                     	;# 
   616  018C                     	;# 
   617  0000                     	;# 
   618  0001                     	;# 
   619  0002                     	;# 
   620  0003                     	;# 
   621  0004                     	;# 
   622  0005                     	;# 
   623  0006                     	;# 
   624  0007                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  000E                     	;# 
   632  000F                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0015                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001B                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  0081                     	;# 
   652  0085                     	;# 
   653  0086                     	;# 
   654  0087                     	;# 
   655  0089                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0093                     	;# 
   665  0094                     	;# 
   666  0095                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0096                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009F                     	;# 
   675  0108                     	;# 
   676  0109                     	;# 
   677  010C                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0186                     	;# 
   685  018C                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0096                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009F                     	;# 
   744  0108                     	;# 
   745  0109                     	;# 
   746  010C                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0186                     	;# 
   754  018C                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000E                     	;# 
   770  000F                     	;# 
   771  0010                     	;# 
   772  0011                     	;# 
   773  0012                     	;# 
   774  0013                     	;# 
   775  0014                     	;# 
   776  0015                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  0081                     	;# 
   790  0085                     	;# 
   791  0086                     	;# 
   792  0087                     	;# 
   793  0089                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  008F                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0093                     	;# 
   803  0094                     	;# 
   804  0095                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0096                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009C                     	;# 
   811  009D                     	;# 
   812  009F                     	;# 
   813  0108                     	;# 
   814  0109                     	;# 
   815  010C                     	;# 
   816  010C                     	;# 
   817  010D                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  010F                     	;# 
   821  0185                     	;# 
   822  0186                     	;# 
   823  018C                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0009                     	;# 
   833  000A                     	;# 
   834  000B                     	;# 
   835  000C                     	;# 
   836  000D                     	;# 
   837  000E                     	;# 
   838  000E                     	;# 
   839  000F                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0014                     	;# 
   845  0015                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001B                     	;# 
   854  001C                     	;# 
   855  001D                     	;# 
   856  001E                     	;# 
   857  001F                     	;# 
   858  0081                     	;# 
   859  0085                     	;# 
   860  0086                     	;# 
   861  0087                     	;# 
   862  0089                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  008F                     	;# 
   867  0090                     	;# 
   868  0091                     	;# 
   869  0092                     	;# 
   870  0093                     	;# 
   871  0093                     	;# 
   872  0094                     	;# 
   873  0095                     	;# 
   874  0095                     	;# 
   875  0096                     	;# 
   876  0096                     	;# 
   877  0098                     	;# 
   878  0099                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009F                     	;# 
   882  0108                     	;# 
   883  0109                     	;# 
   884  010C                     	;# 
   885  010C                     	;# 
   886  010D                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  010F                     	;# 
   890  0185                     	;# 
   891  0186                     	;# 
   892  018C                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0009                     	;# 
   902  000A                     	;# 
   903  000B                     	;# 
   904  000C                     	;# 
   905  000D                     	;# 
   906  000E                     	;# 
   907  000E                     	;# 
   908  000F                     	;# 
   909  0010                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0013                     	;# 
   913  0014                     	;# 
   914  0015                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0017                     	;# 
   918  0018                     	;# 
   919  0019                     	;# 
   920  001A                     	;# 
   921  001B                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001D                     	;# 
   925  001E                     	;# 
   926  001F                     	;# 
   927  0081                     	;# 
   928  0085                     	;# 
   929  0086                     	;# 
   930  0087                     	;# 
   931  0089                     	;# 
   932  008C                     	;# 
   933  008D                     	;# 
   934  008E                     	;# 
   935  008F                     	;# 
   936  0090                     	;# 
   937  0091                     	;# 
   938  0092                     	;# 
   939  0093                     	;# 
   940  0093                     	;# 
   941  0094                     	;# 
   942  0095                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0096                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009C                     	;# 
   949  009D                     	;# 
   950  009F                     	;# 
   951  0108                     	;# 
   952  0109                     	;# 
   953  010C                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  010F                     	;# 
   959  0185                     	;# 
   960  0186                     	;# 
   961  018C                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  000E                     	;# 
   977  000F                     	;# 
   978  0010                     	;# 
   979  0011                     	;# 
   980  0012                     	;# 
   981  0013                     	;# 
   982  0014                     	;# 
   983  0015                     	;# 
   984  0015                     	;# 
   985  0016                     	;# 
   986  0017                     	;# 
   987  0018                     	;# 
   988  0019                     	;# 
   989  001A                     	;# 
   990  001B                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  001D                     	;# 
   994  001E                     	;# 
   995  001F                     	;# 
   996  0081                     	;# 
   997  0085                     	;# 
   998  0086                     	;# 
   999  0087                     	;# 
  1000  0089                     	;# 
  1001  008C                     	;# 
  1002  008D                     	;# 
  1003  008E                     	;# 
  1004  008F                     	;# 
  1005  0090                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0093                     	;# 
  1010  0094                     	;# 
  1011  0095                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0096                     	;# 
  1015  0098                     	;# 
  1016  0099                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009F                     	;# 
  1020  0108                     	;# 
  1021  0109                     	;# 
  1022  010C                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010D                     	;# 
  1026  010E                     	;# 
  1027  010F                     	;# 
  1028  0185                     	;# 
  1029  0186                     	;# 
  1030  018C                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0009                     	;# 
  1040  000A                     	;# 
  1041  000B                     	;# 
  1042  000C                     	;# 
  1043  000D                     	;# 
  1044  000E                     	;# 
  1045  000E                     	;# 
  1046  000F                     	;# 
  1047  0010                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0014                     	;# 
  1052  0015                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0017                     	;# 
  1056  0018                     	;# 
  1057  0019                     	;# 
  1058  001A                     	;# 
  1059  001B                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001D                     	;# 
  1063  001E                     	;# 
  1064  001F                     	;# 
  1065  0081                     	;# 
  1066  0085                     	;# 
  1067  0086                     	;# 
  1068  0087                     	;# 
  1069  0089                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  008F                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0096                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009C                     	;# 
  1087  009D                     	;# 
  1088  009F                     	;# 
  1089  0108                     	;# 
  1090  0109                     	;# 
  1091  010C                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0186                     	;# 
  1099  018C                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  000E                     	;# 
  1115  000F                     	;# 
  1116  0010                     	;# 
  1117  0011                     	;# 
  1118  0012                     	;# 
  1119  0013                     	;# 
  1120  0014                     	;# 
  1121  0015                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0017                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  0081                     	;# 
  1135  0085                     	;# 
  1136  0086                     	;# 
  1137  0087                     	;# 
  1138  0089                     	;# 
  1139  008C                     	;# 
  1140  008D                     	;# 
  1141  008E                     	;# 
  1142  008F                     	;# 
  1143  0090                     	;# 
  1144  0091                     	;# 
  1145  0092                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0095                     	;# 
  1151  0096                     	;# 
  1152  0096                     	;# 
  1153  0098                     	;# 
  1154  0099                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009F                     	;# 
  1158  0108                     	;# 
  1159  0109                     	;# 
  1160  010C                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010D                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0185                     	;# 
  1167  0186                     	;# 
  1168  018C                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0009                     	;# 
  1178  000A                     	;# 
  1179  000B                     	;# 
  1180  000C                     	;# 
  1181  000D                     	;# 
  1182  000E                     	;# 
  1183  000E                     	;# 
  1184  000F                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0015                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001B                     	;# 
  1199  001C                     	;# 
  1200  001D                     	;# 
  1201  001E                     	;# 
  1202  001F                     	;# 
  1203  0081                     	;# 
  1204  0085                     	;# 
  1205  0086                     	;# 
  1206  0087                     	;# 
  1207  0089                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  008F                     	;# 
  1212  0090                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0095                     	;# 
  1220  0096                     	;# 
  1221  0096                     	;# 
  1222  0098                     	;# 
  1223  0099                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009F                     	;# 
  1227  0108                     	;# 
  1228  0109                     	;# 
  1229  010C                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010D                     	;# 
  1233  010E                     	;# 
  1234  010F                     	;# 
  1235  0185                     	;# 
  1236  0186                     	;# 
  1237  018C                     	;# 
  1238  001F                     _ADCON0	set	31
  1239  001E                     _ADRES	set	30
  1240  0005                     _PORTA	set	5
  1241  0006                     _PORTB	set	6
  1242  0007                     _PORTC	set	7
  1243  0010                     _T1CON	set	16
  1244  000F                     _TMR1H	set	15
  1245  000E                     _TMR1L	set	14
  1246  005F                     _GIE	set	95
  1247  00F9                     _GO_nDONE	set	249
  1248  005E                     _PEIE	set	94
  1249  002C                     _RA4	set	44
  1250  0032                     _RB2	set	50
  1251  0033                     _RB3	set	51
  1252  0034                     _RB4	set	52
  1253  0035                     _RB5	set	53
  1254  0060                     _TMR1IF	set	96
  1255  009F                     _ADCON1	set	159
  1256  009D                     _FVRCON	set	157
  1257  0090                     _OSCCON	set	144
  1258  0085                     _TRISA	set	133
  1259  0086                     _TRISB	set	134
  1260  0087                     _TRISC	set	135
  1261  0408                     _PS0	set	1032
  1262  0409                     _PS1	set	1033
  1263  040A                     _PS2	set	1034
  1264  040B                     _PSA	set	1035
  1265  0460                     _TMR1IE	set	1120
  1266  0185                     _ANSELA	set	389
  1267  0186                     _ANSELB	set	390
  1268                           
  1269                           	psect	text0
  1270  0000                     __ptext0:	
  1271                           ; #config settings
  1272                           
  1273                           
  1274                           ;psect for function _TMR1_ISR
  1275  0000                     
  1276                           	psect	cinit
  1277  0013                     start_initialization:	
  1278  0013                     __initialization:	
  1279                           
  1280                           ; Clear objects allocated to COMMON
  1281  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1282  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1283  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1284                           
  1285                           ; Clear objects allocated to BANK0
  1286  0016  1383               	bcf	3,7	;select IRP bank0
  1287  0017  3020               	movlw	low __pbssBANK0
  1288  0018  0084               	movwf	4
  1289  0019  3056               	movlw	low (__pbssBANK0+54)
  1290  001A  158A  2700  118A   	fcall	clear_ram0
  1291                           
  1292                           ; Clear objects allocated to BANK1
  1293  001D  30A0               	movlw	low __pbssBANK1
  1294  001E  0084               	movwf	4
  1295  001F  30CF               	movlw	low (__pbssBANK1+47)
  1296  0020  158A  2700         	fcall	clear_ram0
  1297  0022                     end_of_initialization:	
  1298                           ;End of C runtime variable initialization code
  1299                           
  1300  0022                     __end_of__initialization:	
  1301  0022  0183               	clrf	3
  1302  0023  118A  2D4C         	ljmp	_main	;jump to C main() function
  1303                           
  1304                           	psect	bssCOMMON
  1305  0077                     __pbssCOMMON:	
  1306  0077                     _LED:	
  1307  0077                     	ds	1
  1308  0078                     _Lights:	
  1309  0078                     	ds	1
  1310  0079                     _SwDetect:	
  1311  0079                     	ds	1
  1312                           
  1313                           	psect	bssBANK0
  1314  0020                     __pbssBANK0:	
  1315  0020                     _myMain:	
  1316  0020                     	ds	8
  1317  0028                     __CDS:	
  1318  0028                     	ds	5
  1319  002D                     _PIRLED:	
  1320  002D                     	ds	4
  1321  0031                     _Timer1:	
  1322  0031                     	ds	3
  1323  0034                     _WDT:	
  1324  0034                     	ds	2
  1325  0036                     _LightsControl:	
  1326  0036                     	ds	1
  1327  0037                     _Temp:	
  1328  0037                     	ds	12
  1329  0043                     _Lights1:	
  1330  0043                     	ds	7
  1331  004A                     _VarErrLED:	
  1332  004A                     	ds	4
  1333  004E                     _VarLED1:	
  1334  004E                     	ds	4
  1335  0052                     _VarLED2:	
  1336  0052                     	ds	4
  1337                           
  1338                           	psect	bssBANK1
  1339  00A0                     __pbssBANK1:	
  1340  00A0                     __PIR:	
  1341  00A0                     	ds	47
  1342                           
  1343                           	psect	clrtext
  1344  0F00                     clear_ram0:	
  1345                           ;	Called with FSR containing the base address, and
  1346                           ;	W with the last address+1
  1347                           
  1348  0F00  0064               	clrwdt	;clear the watchdog before getting into this loop
  1349  0F01                     clrloop0:	
  1350  0F01  0180               	clrf	0	;clear RAM location pointed to by FSR
  1351  0F02  0A84               	incf	4,f	;increment pointer
  1352  0F03  0604               	xorwf	4,w	;XOR with final address
  1353  0F04  1903               	btfsc	3,2	;have we reached the end yet?
  1354  0F05  3400               	retlw	0	;all done for this memory range, return
  1355  0F06  0604               	xorwf	4,w	;XOR again to restore value
  1356  0F07  2F01               	goto	clrloop0	;do the next byte
  1357                           
  1358                           	psect	cstackCOMMON
  1359  0070                     __pcstackCOMMON:	
  1360  0070                     ?_setLED_Initialization:	
  1361  0070                     ?_setPIRLED_Main:	
  1362                           ; 0 bytes @ 0x0
  1363                           
  1364  0070                     ?_Fosc_Set:	
  1365                           ; 0 bytes @ 0x0
  1366                           
  1367  0070                     ?_IO_Set:	
  1368                           ; 0 bytes @ 0x0
  1369                           
  1370  0070                     ?_TMR1_Set:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ?_ADC_Set:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0070                     ?_WDT_Set:	
  1377                           ; 0 bytes @ 0x0
  1378                           
  1379  0070                     ?_TMR1_ISR:	
  1380                           ; 0 bytes @ 0x0
  1381                           
  1382  0070                     ??_TMR1_ISR:	
  1383                           ; 0 bytes @ 0x0
  1384                           
  1385  0070                     ?_Timeout_Counter:	
  1386                           ; 0 bytes @ 0x0
  1387                           
  1388  0070                     ?_set_TimeoutCleared:	
  1389                           ; 0 bytes @ 0x0
  1390                           
  1391  0070                     ?_WDT_Clearing:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0070                     ?_myMain_Initialization:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0070                     ?_Temp_Initialization:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0070                     ?_Lights_Initialization:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0070                     ?_PIR_Initialization:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0070                     ?_getTemp_AD:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0070                     ?_my_MainTimer:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0070                     ?_Temp_Main:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0070                     ?_Lights_Main:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0070                     ?_PIR_Main:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0070                     ?_setTemp_Initialization:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0070                     ?_setTemp_Main:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0070                     ?_setLights_Initialization:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0070                     ?_setLights_Main:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0070                     ?_Lights_Control:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0070                     ?_Lights_Close:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0070                     ?_setLights_Line:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0070                     ?_CDS_Initialization:	
  1443                           ; 0 bytes @ 0x0
  1444                           
  1445  0070                     ?_CDS_Main:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_LedPointSelect:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_LED_Initialization:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_LED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Mcu_Initialization:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_ISR:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ??_ISR:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_WDT_Main:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_setMain_Exception:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_LightsPointSelect:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_getAll_Lights_Line:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_getLights_Status:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_getCDS_Status:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_getMain_LightsStatus:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_getMain_All_Error_Status:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490                           
  1491                           ; 1 bytes @ 0x0
  1492  0070                     	ds	4
  1493  0074                     ??_Fosc_Set:	
  1494  0074                     ??_IO_Set:	
  1495                           ; 0 bytes @ 0x4
  1496                           
  1497  0074                     ??_TMR1_Set:	
  1498                           ; 0 bytes @ 0x4
  1499                           
  1500  0074                     ??_ADC_Set:	
  1501                           ; 0 bytes @ 0x4
  1502                           
  1503  0074                     ??_WDT_Set:	
  1504                           ; 0 bytes @ 0x4
  1505                           
  1506  0074                     ??_Timeout_Counter:	
  1507                           ; 0 bytes @ 0x4
  1508                           
  1509  0074                     ??_set_TimeoutCleared:	
  1510                           ; 0 bytes @ 0x4
  1511                           
  1512  0074                     ??_WDT_Clearing:	
  1513                           ; 0 bytes @ 0x4
  1514                           
  1515  0074                     ??_myMain_Initialization:	
  1516                           ; 0 bytes @ 0x4
  1517                           
  1518  0074                     ??_Temp_Initialization:	
  1519                           ; 0 bytes @ 0x4
  1520                           
  1521  0074                     ??_my_MainTimer:	
  1522                           ; 0 bytes @ 0x4
  1523                           
  1524  0074                     ??_setTemp_Initialization:	
  1525                           ; 0 bytes @ 0x4
  1526                           
  1527  0074                     ??_CDS_Initialization:	
  1528                           ; 0 bytes @ 0x4
  1529                           
  1530  0074                     ??_CDS_Main:	
  1531                           ; 0 bytes @ 0x4
  1532                           
  1533  0074                     ??_getCDS_Status:	
  1534                           ; 0 bytes @ 0x4
  1535                           
  1536  0074                     ??_LedPointSelect:	
  1537                           ; 0 bytes @ 0x4
  1538                           
  1539  0074                     ??_WDT_Main:	
  1540                           ; 0 bytes @ 0x4
  1541                           
  1542  0074                     ??_LightsPointSelect:	
  1543                           ; 0 bytes @ 0x4
  1544                           
  1545  0074                     ??___awdiv:	
  1546                           ; 0 bytes @ 0x4
  1547                           
  1548  0074                     ??___lwdiv:	
  1549                           ; 0 bytes @ 0x4
  1550                           
  1551  0074                     ?_getAD:	
  1552                           ; 0 bytes @ 0x4
  1553                           
  1554  0074                     getCDS_Status@status:	
  1555                           ; 1 bytes @ 0x4
  1556                           
  1557  0074                     getAD@adcon1:	
  1558                           ; 1 bytes @ 0x4
  1559                           
  1560                           
  1561                           ; 1 bytes @ 0x4
  1562  0074                     	ds	1
  1563  0075                     ??_getAD:	
  1564  0075                     ??_Mcu_Initialization:	
  1565                           ; 0 bytes @ 0x5
  1566                           
  1567  0075                     ??_getMain_All_Error_Status:	
  1568                           ; 0 bytes @ 0x5
  1569                           
  1570  0075                     LedPointSelect@led:	
  1571                           ; 0 bytes @ 0x5
  1572                           
  1573  0075                     getAD@adcon0:	
  1574                           ; 1 bytes @ 0x5
  1575                           
  1576  0075                     LightsPointSelect@lights:	
  1577                           ; 1 bytes @ 0x5
  1578                           
  1579                           
  1580                           ; 1 bytes @ 0x5
  1581  0075                     	ds	1
  1582  0076                     ?_setLED:	
  1583  0076                     ?_getPIR_AD:	
  1584                           ; 0 bytes @ 0x6
  1585                           
  1586  0076                     ??_getAll_Lights_Line:	
  1587                           ; 0 bytes @ 0x6
  1588                           
  1589  0076                     ?_setLights_Trigger:	
  1590                           ; 0 bytes @ 0x6
  1591                           
  1592  0076                     ??_getLights_Status:	
  1593                           ; 0 bytes @ 0x6
  1594                           
  1595  0076                     ??_setLights_Initialization:	
  1596                           ; 0 bytes @ 0x6
  1597                           
  1598  0076                     ??_setLights_Line:	
  1599                           ; 0 bytes @ 0x6
  1600                           
  1601  0076                     ?_getCDS_AD:	
  1602                           ; 0 bytes @ 0x6
  1603                           
  1604  0076                     ??_getMain_LightsStatus:	
  1605                           ; 0 bytes @ 0x6
  1606                           
  1607  0076                     getCDS_AD@channel2:	
  1608                           ; 0 bytes @ 0x6
  1609                           
  1610  0076                     setLED@command:	
  1611                           ; 1 bytes @ 0x6
  1612                           
  1613  0076                     getTemp_AD@channel:	
  1614                           ; 1 bytes @ 0x6
  1615                           
  1616  0076                     getPIR_AD@channel2:	
  1617                           ; 1 bytes @ 0x6
  1618                           
  1619  0076                     setLights_Initialization@lights:	
  1620                           ; 1 bytes @ 0x6
  1621                           
  1622  0076                     Lights_Control@lights:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625  0076                     setLights_Trigger@command:	
  1626                           ; 1 bytes @ 0x6
  1627                           
  1628  0076                     setLights_Line@lights:	
  1629                           ; 1 bytes @ 0x6
  1630                           
  1631  0076                     getAll_Lights_Line@line:	
  1632                           ; 1 bytes @ 0x6
  1633                           
  1634                           
  1635                           ; 1 bytes @ 0x6
  1636  0076                     	ds	1
  1637  0077                     ??_setLED_Initialization:	
  1638  0077                     ??_setLED:	
  1639                           ; 0 bytes @ 0x7
  1640                           
  1641  0077                     ??_Lights_Initialization:	
  1642                           ; 0 bytes @ 0x7
  1643                           
  1644  0077                     ??_Temp_Main:	
  1645                           ; 0 bytes @ 0x7
  1646                           
  1647  0077                     ??_Lights_Main:	
  1648                           ; 0 bytes @ 0x7
  1649                           
  1650  0077                     ??_setLights_Main:	
  1651                           ; 0 bytes @ 0x7
  1652                           
  1653  0077                     ??_LED_Initialization:	
  1654                           ; 0 bytes @ 0x7
  1655                           
  1656  0077                     ??_LED_Main:	
  1657                           ; 0 bytes @ 0x7
  1658                           
  1659                           
  1660                           	psect	cstackBANK0
  1661  0056                     __pcstackBANK0:	
  1662                           ; 0 bytes @ 0x7
  1663                           
  1664  0056                     ??_getTemp_AD:	
  1665  0056                     ??_setLights_Trigger:	
  1666                           ; 0 bytes @ 0x0
  1667                           
  1668  0056                     ??_Lights_Control:	
  1669                           ; 0 bytes @ 0x0
  1670                           
  1671  0056                     ?_setLights:	
  1672                           ; 0 bytes @ 0x0
  1673                           
  1674  0056                     ??_getCDS_AD:	
  1675                           ; 0 bytes @ 0x0
  1676                           
  1677  0056                     ?___awdiv:	
  1678                           ; 0 bytes @ 0x0
  1679                           
  1680  0056                     ?___lwdiv:	
  1681                           ; 2 bytes @ 0x0
  1682                           
  1683  0056                     setLED@led:	
  1684                           ; 2 bytes @ 0x0
  1685                           
  1686  0056                     setLights@status:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0056                     getLights_Status@lights:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0056                     _getMain_All_Error_Status$2063:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0056                     ___awdiv@divisor:	
  1696                           ; 2 bytes @ 0x0
  1697                           
  1698  0056                     ___lwdiv@divisor:	
  1699                           ; 2 bytes @ 0x0
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x0
  1703  0056                     	ds	1
  1704  0057                     ??_setPIRLED_Main:	
  1705  0057                     ??_PIR_Initialization:	
  1706                           ; 0 bytes @ 0x1
  1707                           
  1708  0057                     ??_setLights:	
  1709                           ; 0 bytes @ 0x1
  1710                           
  1711  0057                     setLED_Initialization@led:	
  1712                           ; 0 bytes @ 0x1
  1713                           
  1714  0057                     getLights_Status@status:	
  1715                           ; 1 bytes @ 0x1
  1716                           
  1717  0057                     setLights_Trigger@lights:	
  1718                           ; 1 bytes @ 0x1
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0x1
  1722  0057                     	ds	1
  1723  0058                     ??_setMain_Exception:	
  1724  0058                     getCDS_AD@i:	
  1725                           ; 0 bytes @ 0x2
  1726                           
  1727  0058                     setPIRLED_Main@count:	
  1728                           ; 1 bytes @ 0x2
  1729                           
  1730  0058                     getMain_LightsStatus@count:	
  1731                           ; 1 bytes @ 0x2
  1732                           
  1733  0058                     setLights@lights:	
  1734                           ; 1 bytes @ 0x2
  1735                           
  1736  0058                     _getMain_All_Error_Status$2065:	
  1737                           ; 1 bytes @ 0x2
  1738                           
  1739  0058                     ___awdiv@dividend:	
  1740                           ; 2 bytes @ 0x2
  1741                           
  1742  0058                     ___lwdiv@dividend:	
  1743                           ; 2 bytes @ 0x2
  1744                           
  1745                           
  1746                           ; 2 bytes @ 0x2
  1747  0058                     	ds	1
  1748  0059                     getCDS_AD@j:	
  1749  0059                     setLights_Main@lights:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752  0059                     getMain_LightsStatus@i:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755                           
  1756                           ; 2 bytes @ 0x3
  1757  0059                     	ds	1
  1758  005A                     getCDS_AD@channel1:	
  1759  005A                     setMain_Exception@buz:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  005A                     getMain_All_Error_Status@command:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  005A                     ___awdiv@counter:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  005A                     ___lwdiv@counter:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771                           
  1772                           ; 1 bytes @ 0x4
  1773  005A                     	ds	1
  1774  005B                     setMain_Exception@status:	
  1775  005B                     getMain_LightsStatus@status:	
  1776                           ; 1 bytes @ 0x5
  1777                           
  1778  005B                     getMain_All_Error_Status@status:	
  1779                           ; 1 bytes @ 0x5
  1780                           
  1781  005B                     ___awdiv@sign:	
  1782                           ; 1 bytes @ 0x5
  1783                           
  1784  005B                     ___lwdiv@quotient:	
  1785                           ; 1 bytes @ 0x5
  1786                           
  1787                           
  1788                           ; 2 bytes @ 0x5
  1789  005B                     	ds	1
  1790  005C                     ??_Lights_Close:	
  1791  005C                     _setMain_Exception$2047:	
  1792                           ; 0 bytes @ 0x6
  1793                           
  1794  005C                     ___awdiv@quotient:	
  1795                           ; 2 bytes @ 0x6
  1796                           
  1797                           
  1798                           ; 2 bytes @ 0x6
  1799  005C                     	ds	2
  1800  005E                     ??_getPIR_AD:	
  1801  005E                     ??_setTemp_Main:	
  1802                           ; 0 bytes @ 0x8
  1803                           
  1804  005E                     setMain_Exception@command:	
  1805                           ; 0 bytes @ 0x8
  1806                           
  1807                           
  1808                           ; 1 bytes @ 0x8
  1809  005E                     	ds	1
  1810  005F                     ??_PIR_Main:	
  1811                           
  1812                           ; 0 bytes @ 0x9
  1813  005F                     	ds	2
  1814  0061                     getPIR_AD@j:	
  1815                           
  1816                           ; 1 bytes @ 0xB
  1817  0061                     	ds	1
  1818  0062                     getPIR_AD@channel1:	
  1819                           
  1820                           ; 1 bytes @ 0xC
  1821  0062                     	ds	1
  1822  0063                     getPIR_AD@i:	
  1823                           
  1824                           ; 1 bytes @ 0xD
  1825  0063                     	ds	1
  1826  0064                     _PIR_Main$2715:	
  1827                           
  1828                           ; 2 bytes @ 0xE
  1829  0064                     	ds	2
  1830  0066                     PIR_Main@error:	
  1831                           
  1832                           ; 1 bytes @ 0x10
  1833  0066                     	ds	1
  1834  0067                     ?_main:	
  1835  0067                     main@argc:	
  1836                           ; 2 bytes @ 0x11
  1837                           
  1838                           
  1839                           ; 2 bytes @ 0x11
  1840  0067                     	ds	2
  1841  0069                     main@argv:	
  1842                           
  1843                           ; 2 bytes @ 0x13
  1844  0069                     	ds	2
  1845  006B                     ??_main:	
  1846                           
  1847                           ; 0 bytes @ 0x15
  1848  006B                     	ds	1
  1849                           
  1850                           	psect	maintext
  1851  054C                     __pmaintext:	
  1852 ;;
  1853 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1854 ;;
  1855 ;; *************** function _main *****************
  1856 ;; Defined at:
  1857 ;;		line 7 in file "../src/Main_B1.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  argc            2   17[BANK0 ] int 
  1860 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   17[BANK0 ] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 17F/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1872 ;;      Params:         0       4       0       0
  1873 ;;      Locals:         0       0       0       0
  1874 ;;      Temps:          0       1       0       0
  1875 ;;      Totals:         0       5       0       0
  1876 ;;Total ram usage:        5 bytes
  1877 ;; Hardware stack levels required when called:    7
  1878 ;; This function calls:
  1879 ;;		_CDS_Initialization
  1880 ;;		_CDS_Main
  1881 ;;		_LED_Initialization
  1882 ;;		_LED_Main
  1883 ;;		_Lights_Initialization
  1884 ;;		_Lights_Main
  1885 ;;		_Mcu_Initialization
  1886 ;;		_PIR_Initialization
  1887 ;;		_PIR_Main
  1888 ;;		_Temp_Initialization
  1889 ;;		_Temp_Main
  1890 ;;		_WDT_Main
  1891 ;;		_getCDS_AD
  1892 ;;		_getPIR_AD
  1893 ;;		_getTemp_AD
  1894 ;;		_myMain_Initialization
  1895 ;;		_my_MainTimer
  1896 ;; This function is called by:
  1897 ;;		Startup code after reset
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _main
  1903  054C                     _main:	
  1904                           
  1905                           ;Main_B1.c: 8: myMain_Initialization();
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1909  054C  158A  26CF  118A   	fcall	_myMain_Initialization
  1910                           
  1911                           ;Main_B1.c: 9: Mcu_Initialization();
  1912  054F  158A  275E  118A   	fcall	_Mcu_Initialization
  1913                           
  1914                           ;Main_B1.c: 10: ;;
  1915                           ;Main_B1.c: 11: LED_Initialization();
  1916  0552  158A  271D  118A   	fcall	_LED_Initialization
  1917                           
  1918                           ;Main_B1.c: 12: ;;
  1919                           ;Main_B1.c: 14: ;;
  1920                           ;Main_B1.c: 15: Temp_Initialization();
  1921  0555  158A  26D3  118A   	fcall	_Temp_Initialization
  1922                           
  1923                           ;Main_B1.c: 16: ;;
  1924                           ;Main_B1.c: 17: ;;
  1925                           ;Main_B1.c: 18: ;;
  1926                           ;Main_B1.c: 20: ;;
  1927                           ;Main_B1.c: 21: Lights_Initialization();
  1928  0558  158A  26DD  118A   	fcall	_Lights_Initialization
  1929                           
  1930                           ;Main_B1.c: 22: CDS_Initialization();
  1931  055B  158A  26D9  118A   	fcall	_CDS_Initialization
  1932                           
  1933                           ;Main_B1.c: 23: PIR_Initialization();
  1934  055E  158A  27B1  118A   	fcall	_PIR_Initialization
  1935                           
  1936                           ;Main_B1.c: 24: ;;
  1937                           ;Main_B1.c: 25: ;;
  1938                           ;Main_B1.c: 26: __nop();
  1939  0561  0000               	nop
  1940  0562                     l3965:	
  1941                           ;Main_B1.c: 27: ;;
  1942                           ;Main_B1.c: 29: while (1) {
  1943                           
  1944                           
  1945                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  1946  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0564  1C20               	btfss	_myMain,0
  1949  0565  2D7E               	goto	l3971
  1950                           
  1951                           ;Main_B1.c: 41: getTemp_AD(0x11);
  1952  0566  3011               	movlw	17
  1953  0567  118A  2759  118A   	fcall	_getTemp_AD
  1954                           
  1955                           ;Main_B1.c: 49: getCDS_AD(0x09, 0x31);
  1956  056A  3031               	movlw	49
  1957  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1958  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1959  056D  00EB               	movwf	??_main
  1960  056E  086B               	movf	??_main,w
  1961  056F  00F6               	movwf	getCDS_AD@channel2
  1962  0570  3009               	movlw	9
  1963  0571  118A  2707  118A   	fcall	_getCDS_AD
  1964                           
  1965                           ;Main_B1.c: 53: getPIR_AD(0x05, 0x0d);
  1966  0574  300D               	movlw	13
  1967  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0577  00EB               	movwf	??_main
  1970  0578  086B               	movf	??_main,w
  1971  0579  00F6               	movwf	getPIR_AD@channel2
  1972  057A  3005               	movlw	5
  1973  057B  118A  21F4  118A   	fcall	_getPIR_AD
  1974  057E                     l3971:	
  1975                           
  1976                           ;Main_B1.c: 56: }
  1977                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  1978  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1979  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0580  1C31               	btfss	_Timer1,0
  1981  0581  2D62               	goto	l3965
  1982                           
  1983                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  1984  0582  1031               	bcf	_Timer1,0
  1985                           
  1986                           ;Main_B1.c: 94: my_MainTimer();
  1987  0583  158A  27D7  118A   	fcall	_my_MainTimer
  1988                           
  1989                           ;Main_B1.c: 95: WDT_Main();
  1990  0586  158A  278E  118A   	fcall	_WDT_Main
  1991                           
  1992                           ;Main_B1.c: 96: ;;
  1993                           ;Main_B1.c: 97: ;;
  1994                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  1995  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1996  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1997  058B  1C20               	btfss	_myMain,0
  1998  058C  2D62               	goto	l3965
  1999                           
  2000                           ;Main_B1.c: 99: ;;
  2001                           ;Main_B1.c: 101: LED_Main();
  2002  058D  158A  26D0  118A   	fcall	_LED_Main
  2003                           
  2004                           ;Main_B1.c: 102: ;;
  2005                           ;Main_B1.c: 104: ;;
  2006                           ;Main_B1.c: 105: Temp_Main();
  2007  0590  158A  26D6  118A   	fcall	_Temp_Main
  2008                           
  2009                           ;Main_B1.c: 106: ;;
  2010                           ;Main_B1.c: 107: ;;
  2011                           ;Main_B1.c: 109: Lights_Main();
  2012  0593  158A  2712  118A   	fcall	_Lights_Main
  2013                           
  2014                           ;Main_B1.c: 110: ;;
  2015                           ;Main_B1.c: 111: ;;
  2016                           ;Main_B1.c: 112: CDS_Main();
  2017  0596  118A  26A3  118A   	fcall	_CDS_Main
  2018                           
  2019                           ;Main_B1.c: 113: PIR_Main();
  2020  0599  118A  2025  118A   	fcall	_PIR_Main
  2021                           
  2022                           ;Main_B1.c: 115: ;;
  2023                           ;Main_B1.c: 116: ;;
  2024                           ;Main_B1.c: 117: ;;
  2025  059C  2D62               	goto	l3965
  2026  059D                     __end_of_main:	
  2027                           ;Main_B1.c: 125: }
  2028                           ;Main_B1.c: 126: }
  2029                           ;Main_B1.c: 160: }
  2030                           ;Main_B1.c: 161: return (0);
  2031                           ;	Return value of _main is never used
  2032                           
  2033                           
  2034                           	psect	text1
  2035  0FD7                     __ptext1:	
  2036 ;; *************** function _my_MainTimer *****************
  2037 ;; Defined at:
  2038 ;;		line 180 in file "../src/Main_B1.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, status,2
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2052 ;;      Params:         0       0       0       0
  2053 ;;      Locals:         0       0       0       0
  2054 ;;      Temps:          0       0       0       0
  2055 ;;      Totals:         0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    2
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _my_MainTimer
  2068  0FD7                     _my_MainTimer:	
  2069                           
  2070                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _my_MainTimer: [wreg+status,2]
  2074  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0FD9  1820               	btfsc	_myMain,0
  2077  0FDA  0008               	return
  2078                           
  2079                           ;Main_B1.c: 183: myMain.PowerCount++;
  2080  0FDB  3001               	movlw	1
  2081  0FDC  07A2               	addwf	_myMain+2,f
  2082  0FDD  1803               	skipnc
  2083  0FDE  0AA3               	incf	_myMain+3,f
  2084  0FDF  3000               	movlw	0
  2085  0FE0  07A3               	addwf	_myMain+3,f
  2086                           
  2087                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  2088  0FE1  3096               	movlw	150
  2089  0FE2  0622               	xorwf	_myMain+2,w
  2090  0FE3  0423               	iorwf	_myMain+3,w
  2091  0FE4  1D03               	skipz
  2092  0FE5  0008               	return
  2093                           
  2094                           ;Main_B1.c: 185: {
  2095                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  2096  0FE6  01A2               	clrf	_myMain+2
  2097  0FE7  01A3               	clrf	_myMain+3
  2098                           
  2099                           ;Main_B1.c: 187: myMain.PowerON = 1;
  2100  0FE8  1420               	bsf	_myMain,0
  2101                           
  2102                           ;Main_B1.c: 193: ;;
  2103                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2104  0FE9  1620               	bsf	_myMain,4
  2105                           
  2106                           ;Main_B1.c: 203: }
  2107                           ;Main_B1.c: 204: } else {
  2108  0FEA  0008               	return
  2109  0FEB                     __end_of_my_MainTimer:	
  2110                           
  2111                           	psect	text2
  2112  0ECF                     __ptext2:	
  2113 ;; *************** function _myMain_Initialization *****************
  2114 ;; Defined at:
  2115 ;;		line 167 in file "../src/Main_B1.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;		None               void
  2122 ;; Registers used:
  2123 ;;		None
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2129 ;;      Params:         0       0       0       0
  2130 ;;      Locals:         0       0       0       0
  2131 ;;      Temps:          0       0       0       0
  2132 ;;      Totals:         0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _myMain_Initialization
  2145  0ECF                     _myMain_Initialization:	
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _myMain_Initialization: []
  2149  0ECF  0008               	return
  2150  0ED0                     __end_of_myMain_Initialization:	
  2151                           
  2152                           	psect	text3
  2153  0759                     __ptext3:	
  2154 ;; *************** function _getTemp_AD *****************
  2155 ;; Defined at:
  2156 ;;		line 16 in file "../src/OverTemperature_B1.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  channel         1    wreg     unsigned char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  channel         1    6[COMMON] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;		None               void
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, pclath, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2170 ;;      Params:         0       0       0       0
  2171 ;;      Locals:         1       0       0       0
  2172 ;;      Temps:          0       2       0       0
  2173 ;;      Totals:         1       2       0       0
  2174 ;;Total ram usage:        3 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		_getAD
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _getTemp_AD
  2186  0759                     _getTemp_AD:	
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2190                           ;getTemp_AD@channel stored from wreg
  2191  0759  00F6               	movwf	getTemp_AD@channel
  2192                           
  2193                           ;OverTemperature_B1.c: 33: if (Temp.ADtoGO == 1) {
  2194  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2195  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2196  075C  1D37               	btfss	_Temp,2
  2197  075D  0008               	return
  2198                           
  2199                           ;OverTemperature_B1.c: 34: Temp.GO = 1;
  2200  075E  1637               	bsf	_Temp,4
  2201                           
  2202                           ;OverTemperature_B1.c: 35: Temp.ADRES = getAD(channel, 0x70);
  2203  075F  3070               	movlw	112
  2204  0760  00D6               	movwf	??_getTemp_AD
  2205  0761  0856               	movf	??_getTemp_AD,w
  2206  0762  00F4               	movwf	getAD@adcon1
  2207  0763  0876               	movf	getTemp_AD@channel,w
  2208  0764  118A  277E  118A   	fcall	_getAD
  2209  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0769  00D7               	movwf	??_getTemp_AD+1
  2212  076A  0857               	movf	??_getTemp_AD+1,w
  2213  076B  00C0               	movwf	_Temp+9
  2214                           
  2215                           ;OverTemperature_B1.c: 36: if (Temp.ADH[0] < Temp.ADRES) {
  2216  076C  0840               	movf	_Temp+9,w
  2217  076D  023E               	subwf	_Temp+7,w
  2218  076E  1803               	skipnc
  2219  076F  2F75               	goto	l3691
  2220                           
  2221                           ;OverTemperature_B1.c: 37: Temp.ADH[0] = Temp.ADRES;
  2222  0770  0840               	movf	_Temp+9,w
  2223  0771  00D6               	movwf	??_getTemp_AD
  2224  0772  0856               	movf	??_getTemp_AD,w
  2225  0773  00BE               	movwf	_Temp+7
  2226                           
  2227                           ;OverTemperature_B1.c: 38: } else if (Temp.ADH[1] < Temp.ADRES) {
  2228  0774  0008               	return
  2229  0775                     l3691:	
  2230  0775  0840               	movf	_Temp+9,w
  2231  0776  023F               	subwf	_Temp+8,w
  2232  0777  1803               	skipnc
  2233  0778  0008               	return
  2234                           
  2235                           ;OverTemperature_B1.c: 39: Temp.ADH[1] = Temp.ADRES;
  2236  0779  0840               	movf	_Temp+9,w
  2237  077A  00D6               	movwf	??_getTemp_AD
  2238  077B  0856               	movf	??_getTemp_AD,w
  2239  077C  00BF               	movwf	_Temp+8
  2240  077D  0008               	return
  2241  077E                     __end_of_getTemp_AD:	
  2242                           
  2243                           	psect	text4
  2244  01F4                     __ptext4:	
  2245 ;; *************** function _getPIR_AD *****************
  2246 ;; Defined at:
  2247 ;;		line 167 in file "../src/PIR_B1.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  channel1        1    wreg     unsigned char 
  2250 ;;  channel2        1    6[COMMON] unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  channel1        1   12[BANK0 ] unsigned char 
  2253 ;;  i               1   13[BANK0 ] unsigned char 
  2254 ;;  j               1   11[BANK0 ] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2264 ;;      Params:         1       0       0       0
  2265 ;;      Locals:         0       3       0       0
  2266 ;;      Temps:          0       3       0       0
  2267 ;;      Totals:         1       6       0       0
  2268 ;;Total ram usage:        7 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    4
  2271 ;; This function calls:
  2272 ;;		___awdiv
  2273 ;;		___lwdiv
  2274 ;;		_getAD
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _getPIR_AD
  2282  01F4                     _getPIR_AD:	
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2286                           ;getPIR_AD@channel1 stored from wreg
  2287  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2288  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2289  01F6  00E2               	movwf	getPIR_AD@channel1
  2290                           
  2291                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2292  01F7  01E3               	clrf	getPIR_AD@i
  2293  01F8  01E1               	clrf	getPIR_AD@j
  2294                           
  2295                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2296  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2297  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2298  01FB  1CA0               	btfss	__PIR^(0+128),1
  2299  01FC  0008               	return
  2300                           
  2301                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2302  01FD  1520               	bsf	__PIR^(0+128),2
  2303                           
  2304                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2305  01FE  3070               	movlw	112
  2306  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0201  00DE               	movwf	??_getPIR_AD
  2309  0202  085E               	movf	??_getPIR_AD,w
  2310  0203  00F4               	movwf	getAD@adcon1
  2311  0204  0862               	movf	getPIR_AD@channel1,w
  2312  0205  118A  277E  118A   	fcall	_getAD
  2313  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2315  020A  00DF               	movwf	??_getPIR_AD+1
  2316  020B  085F               	movf	??_getPIR_AD+1,w
  2317  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2318  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2319  020E  00A2               	movwf	(__PIR^(0+128)+2)
  2320                           
  2321                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2322  020F  3033               	movlw	51
  2323  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0212  00D6               	movwf	___awdiv@divisor
  2326  0213  3000               	movlw	0
  2327  0214  00D7               	movwf	___awdiv@divisor+1
  2328  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2330  0217  0822               	movf	(__PIR^(0+128)+2),w
  2331  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2333  021A  00DE               	movwf	??_getPIR_AD
  2334  021B  01DF               	clrf	??_getPIR_AD+1
  2335  021C  085E               	movf	??_getPIR_AD,w
  2336  021D  00D8               	movwf	___awdiv@dividend
  2337  021E  085F               	movf	??_getPIR_AD+1,w
  2338  021F  00D9               	movwf	___awdiv@dividend+1
  2339  0220  118A  2498  118A   	fcall	___awdiv
  2340  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0225  0856               	movf	?___awdiv,w
  2343  0226  00E0               	movwf	??_getPIR_AD+2
  2344  0227  0860               	movf	??_getPIR_AD+2,w
  2345  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2347  022A  00A3               	movwf	(__PIR^(0+128)+3)
  2348                           
  2349                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2350  022B  0822               	movf	(__PIR^(0+128)+2),w
  2351  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2352  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2353  022E  00DE               	movwf	??_getPIR_AD
  2354  022F  085E               	movf	??_getPIR_AD,w
  2355  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0232  00A4               	movwf	(__PIR^(0+128)+4)
  2358                           
  2359                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2360  0233  3070               	movlw	112
  2361  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0236  00DE               	movwf	??_getPIR_AD
  2364  0237  085E               	movf	??_getPIR_AD,w
  2365  0238  00F4               	movwf	getAD@adcon1
  2366  0239  0876               	movf	getPIR_AD@channel2,w
  2367  023A  118A  277E  118A   	fcall	_getAD
  2368  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2369  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2370  023F  00DF               	movwf	??_getPIR_AD+1
  2371  0240  085F               	movf	??_getPIR_AD+1,w
  2372  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0243  00A2               	movwf	(__PIR^(0+128)+2)
  2375                           
  2376                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2377  0244  0822               	movf	(__PIR^(0+128)+2),w
  2378  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0247  00DE               	movwf	??_getPIR_AD
  2381  0248  085E               	movf	??_getPIR_AD,w
  2382  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2383  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2384  024B  00A1               	movwf	(__PIR^(0+128)+1)
  2385                           
  2386                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2387  024C  2A68               	goto	l3723
  2388  024D                     l3707:	
  2389                           ;PIR_B1.c: 179: case 0:
  2390                           
  2391                           
  2392                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2393  024D  300A               	movlw	10
  2394  024E  0224               	subwf	(__PIR^(0+128)+4),w
  2395  024F  1803               	skipnc
  2396  0250  2A53               	goto	l3711
  2397                           
  2398                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2399  0251  3005               	movlw	5
  2400  0252  2A54               	goto	L1
  2401  0253                     l3711:	
  2402                           ;PIR_B1.c: 182: } else {
  2403                           
  2404                           
  2405                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2406  0253  303C               	movlw	60
  2407  0254                     L1:	
  2408  0254  00C7               	movwf	(__PIR^(0+128)+39)
  2409  0255  3000               	movlw	0
  2410  0256  2A66               	goto	L5
  2411  0257                     l3713:	
  2412                           ;PIR_B1.c: 186: case 1:
  2413                           
  2414                           ;PIR_B1.c: 184: }
  2415                           ;PIR_B1.c: 185: break;
  2416                           
  2417                           
  2418                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2419  0257  302C               	movlw	44
  2420  0258  00C7               	movwf	(__PIR^(0+128)+39)
  2421  0259  3001               	movlw	1
  2422  025A  2A66               	goto	L5
  2423  025B                     l3715:	
  2424                           ;PIR_B1.c: 189: case 2:
  2425                           
  2426                           ;PIR_B1.c: 188: break;
  2427                           
  2428                           
  2429                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2430  025B  3058               	movlw	88
  2431  025C  00C7               	movwf	(__PIR^(0+128)+39)
  2432  025D  3002               	movlw	2
  2433  025E  2A66               	goto	L5
  2434  025F                     l3717:	
  2435                           ;PIR_B1.c: 192: case 3:
  2436                           
  2437                           ;PIR_B1.c: 191: break;
  2438                           
  2439                           
  2440                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2441  025F  3084               	movlw	132
  2442  0260  00C7               	movwf	(__PIR^(0+128)+39)
  2443  0261  3003               	movlw	3
  2444  0262  2A66               	goto	L5
  2445  0263                     l3719:	
  2446                           ;PIR_B1.c: 195: case 4:
  2447                           
  2448                           ;PIR_B1.c: 194: break;
  2449                           
  2450                           
  2451                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2452  0263  30B0               	movlw	176
  2453  0264  00C7               	movwf	(__PIR^(0+128)+39)
  2454  0265  3004               	movlw	4
  2455  0266                     L5:	
  2456  0266  00C8               	movwf	(__PIR^(0+128)+40)
  2457                           
  2458                           ;PIR_B1.c: 198: }
  2459                           
  2460                           ;PIR_B1.c: 197: break;
  2461  0267  2A79               	goto	l3725
  2462  0268                     l3723:	
  2463  0268  0823               	movf	(__PIR^(0+128)+3),w
  2464                           
  2465                           ; Switch size 1, requested type "space"
  2466                           ; Number of cases is 5, Range of values is 0 to 4
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte           16     9 (average)
  2470                           ; direct_byte           17     7 (fixed)
  2471                           ; jumptable            260     6 (fixed)
  2472                           ;	Chosen strategy is simple_byte
  2473  0269  3A00               	xorlw	0	; case 0
  2474  026A  1903               	skipnz
  2475  026B  2A4D               	goto	l3707
  2476  026C  3A01               	xorlw	1	; case 1
  2477  026D  1903               	skipnz
  2478  026E  2A57               	goto	l3713
  2479  026F  3A03               	xorlw	3	; case 2
  2480  0270  1903               	skipnz
  2481  0271  2A5B               	goto	l3715
  2482  0272  3A01               	xorlw	1	; case 3
  2483  0273  1903               	skipnz
  2484  0274  2A5F               	goto	l3717
  2485  0275  3A07               	xorlw	7	; case 4
  2486  0276  1903               	skipnz
  2487  0277  2A63               	goto	l3719
  2488  0278  2A79               	goto	l3725
  2489  0279                     l3725:	
  2490                           
  2491                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2492  0279  0821               	movf	(__PIR^(0+128)+1),w
  2493  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2494  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2495  027C  00DE               	movwf	??_getPIR_AD
  2496  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2497  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2498  027F  0827               	movf	(__PIR^(0+128)+7),w
  2499  0280  3EA8               	addlw	(__PIR+8)& (0+255)
  2500  0281  0084               	movwf	4
  2501  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0284  085E               	movf	??_getPIR_AD,w
  2504  0285  1383               	bcf	3,7	;select IRP bank1
  2505  0286  0080               	movwf	0
  2506                           
  2507                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2508  0287  01E3               	clrf	getPIR_AD@i
  2509  0288  300A               	movlw	10
  2510  0289  0263               	subwf	getPIR_AD@i,w
  2511  028A  1803               	btfsc	3,0
  2512  028B  2AA8               	goto	l3739
  2513  028C                     l3733:	
  2514                           
  2515                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2516  028C  0863               	movf	getPIR_AD@i,w
  2517  028D  3EA8               	addlw	(__PIR+8)& (0+255)
  2518  028E  0084               	movwf	4
  2519  028F  0800               	movf	0,w
  2520  0290  00DE               	movwf	??_getPIR_AD
  2521  0291  01DF               	clrf	??_getPIR_AD+1
  2522  0292  085E               	movf	??_getPIR_AD,w
  2523  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0295  07B2               	addwf	(__PIR^(0+128)+18),f
  2526  0296  1803               	skipnc
  2527  0297  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2528  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2530  029A  085F               	movf	??_getPIR_AD+1,w
  2531  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2532  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2533  029D  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2534  029E  3001               	movlw	1
  2535  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2536  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2537  02A1  00DE               	movwf	??_getPIR_AD
  2538  02A2  085E               	movf	??_getPIR_AD,w
  2539  02A3  07E3               	addwf	getPIR_AD@i,f
  2540  02A4  300A               	movlw	10
  2541  02A5  0263               	subwf	getPIR_AD@i,w
  2542  02A6  1C03               	skipc
  2543  02A7  2A8C               	goto	l3733
  2544  02A8                     l3739:	
  2545                           
  2546                           ;PIR_B1.c: 204: }
  2547                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2548  02A8  300A               	movlw	10
  2549  02A9  00D6               	movwf	___lwdiv@divisor
  2550  02AA  3000               	movlw	0
  2551  02AB  00D7               	movwf	___lwdiv@divisor+1
  2552  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2553  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2554  02AE  0833               	movf	((__PIR+1)^(0+128)+18),w
  2555  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2556  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2557  02B1  01D9               	clrf	___lwdiv@dividend+1
  2558  02B2  07D9               	addwf	___lwdiv@dividend+1,f
  2559  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2560  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2561  02B5  0832               	movf	(__PIR^(0+128)+18),w
  2562  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2563  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2564  02B8  01D8               	clrf	___lwdiv@dividend
  2565  02B9  07D8               	addwf	___lwdiv@dividend,f
  2566  02BA  118A  25EE  118A   	fcall	___lwdiv
  2567  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2568  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2569  02BF  0856               	movf	?___lwdiv,w
  2570  02C0  00DE               	movwf	??_getPIR_AD
  2571  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2572  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2573  02C3  0834               	movf	(__PIR^(0+128)+20),w
  2574  02C4  3EB5               	addlw	(__PIR+21)& (0+255)
  2575  02C5  0084               	movwf	4
  2576  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2577  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2578  02C8  085E               	movf	??_getPIR_AD,w
  2579  02C9  1383               	bcf	3,7	;select IRP bank1
  2580  02CA  0080               	movwf	0
  2581                           
  2582                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2583  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2584  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2585  02CD  01B2               	clrf	(__PIR^(0+128)+18)
  2586  02CE  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2587                           
  2588                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2589  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2590  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2591  02D1  01E3               	clrf	getPIR_AD@i
  2592  02D2  300A               	movlw	10
  2593  02D3  0263               	subwf	getPIR_AD@i,w
  2594  02D4  1803               	btfsc	3,0
  2595  02D5  2AF2               	goto	l3755
  2596  02D6                     l3749:	
  2597                           
  2598                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2599  02D6  0863               	movf	getPIR_AD@i,w
  2600  02D7  3EB5               	addlw	(__PIR+21)& (0+255)
  2601  02D8  0084               	movwf	4
  2602  02D9  0800               	movf	0,w
  2603  02DA  00DE               	movwf	??_getPIR_AD
  2604  02DB  01DF               	clrf	??_getPIR_AD+1
  2605  02DC  085E               	movf	??_getPIR_AD,w
  2606  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2607  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2608  02DF  07BF               	addwf	(__PIR^(0+128)+31),f
  2609  02E0  1803               	skipnc
  2610  02E1  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2611  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2612  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2613  02E4  085F               	movf	??_getPIR_AD+1,w
  2614  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2615  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2616  02E7  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2617  02E8  3001               	movlw	1
  2618  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2619  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2620  02EB  00DE               	movwf	??_getPIR_AD
  2621  02EC  085E               	movf	??_getPIR_AD,w
  2622  02ED  07E3               	addwf	getPIR_AD@i,f
  2623  02EE  300A               	movlw	10
  2624  02EF  0263               	subwf	getPIR_AD@i,w
  2625  02F0  1C03               	skipc
  2626  02F1  2AD6               	goto	l3749
  2627  02F2                     l3755:	
  2628                           
  2629                           ;PIR_B1.c: 210: }
  2630                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2631  02F2  300A               	movlw	10
  2632  02F3  00D6               	movwf	___lwdiv@divisor
  2633  02F4  3000               	movlw	0
  2634  02F5  00D7               	movwf	___lwdiv@divisor+1
  2635  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2636  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2637  02F8  0840               	movf	((__PIR+1)^(0+128)+31),w
  2638  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2639  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2640  02FB  01D9               	clrf	___lwdiv@dividend+1
  2641  02FC  07D9               	addwf	___lwdiv@dividend+1,f
  2642  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2643  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2644  02FF  083F               	movf	(__PIR^(0+128)+31),w
  2645  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0302  01D8               	clrf	___lwdiv@dividend
  2648  0303  07D8               	addwf	___lwdiv@dividend,f
  2649  0304  118A  25EE  118A   	fcall	___lwdiv
  2650  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0309  0856               	movf	?___lwdiv,w
  2653  030A  00DE               	movwf	??_getPIR_AD
  2654  030B  085E               	movf	??_getPIR_AD,w
  2655  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2656  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2657  030E  00A6               	movwf	(__PIR^(0+128)+6)
  2658                           
  2659                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2660  030F  01BF               	clrf	(__PIR^(0+128)+31)
  2661  0310  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2662                           
  2663                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2664  0311  300A               	movlw	10
  2665  0312  0227               	subwf	(__PIR^(0+128)+7),w
  2666  0313  1803               	skipnc
  2667  0314  2B1E               	goto	l3763
  2668                           
  2669                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2670  0315  3001               	movlw	1
  2671  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0318  00DE               	movwf	??_getPIR_AD
  2674  0319  085E               	movf	??_getPIR_AD,w
  2675  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2676  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2677  031C  07A7               	addwf	(__PIR^(0+128)+7),f
  2678                           
  2679                           ;PIR_B1.c: 216: } else {
  2680  031D  0008               	return
  2681  031E                     l3763:	
  2682                           
  2683                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2684  031E  01A7               	clrf	(__PIR^(0+128)+7)
  2685                           
  2686                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2687  031F  300A               	movlw	10
  2688  0320  0234               	subwf	(__PIR^(0+128)+20),w
  2689  0321  1803               	skipnc
  2690  0322  2B2C               	goto	l3769
  2691                           
  2692                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2693  0323  3001               	movlw	1
  2694  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0326  00DE               	movwf	??_getPIR_AD
  2697  0327  085E               	movf	??_getPIR_AD,w
  2698  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2700  032A  07B4               	addwf	(__PIR^(0+128)+20),f
  2701  032B  0008               	return
  2702  032C                     l3769:	
  2703                           
  2704                           ;PIR_B1.c: 220: else
  2705                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  2706  032C  01B4               	clrf	(__PIR^(0+128)+20)
  2707  032D  0008               	return
  2708  032E                     __end_of_getPIR_AD:	
  2709                           
  2710                           	psect	text5
  2711  05EE                     __ptext5:	
  2712 ;; *************** function ___lwdiv *****************
  2713 ;; Defined at:
  2714 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  divisor         2    0[BANK0 ] unsigned int 
  2717 ;;  dividend        2    2[BANK0 ] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  quotient        2    5[BANK0 ] unsigned int 
  2720 ;;  counter         1    4[BANK0 ] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[BANK0 ] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2730 ;;      Params:         0       4       0       0
  2731 ;;      Locals:         0       3       0       0
  2732 ;;      Temps:          1       0       0       0
  2733 ;;      Totals:         1       7       0       0
  2734 ;;Total ram usage:        8 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    2
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_getPIR_AD
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function ___lwdiv
  2746  05EE                     ___lwdiv:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2750  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2751  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2752  05F0  01DB               	clrf	___lwdiv@quotient
  2753  05F1  01DC               	clrf	___lwdiv@quotient+1
  2754  05F2  0857               	movf	___lwdiv@divisor+1,w
  2755  05F3  0456               	iorwf	___lwdiv@divisor,w
  2756  05F4  1903               	skipnz
  2757  05F5  2E27               	goto	l3653
  2758  05F6  01DA               	clrf	___lwdiv@counter
  2759  05F7  0ADA               	incf	___lwdiv@counter,f
  2760  05F8                     l3641:	
  2761  05F8  1BD7               	btfsc	___lwdiv@divisor+1,7
  2762  05F9  2E06               	goto	l3643
  2763  05FA  3001               	movlw	1
  2764  05FB                     u4085:	
  2765  05FB  1003               	clrc
  2766  05FC  0DD6               	rlf	___lwdiv@divisor,f
  2767  05FD  0DD7               	rlf	___lwdiv@divisor+1,f
  2768  05FE  3EFF               	addlw	-1
  2769  05FF  1D03               	skipz
  2770  0600  2DFB               	goto	u4085
  2771  0601  3001               	movlw	1
  2772  0602  00F4               	movwf	??___lwdiv
  2773  0603  0874               	movf	??___lwdiv,w
  2774  0604  07DA               	addwf	___lwdiv@counter,f
  2775  0605  2DF8               	goto	l3641
  2776  0606                     l3643:	
  2777  0606  3001               	movlw	1
  2778  0607                     u4105:	
  2779  0607  1003               	clrc
  2780  0608  0DDB               	rlf	___lwdiv@quotient,f
  2781  0609  0DDC               	rlf	___lwdiv@quotient+1,f
  2782  060A  3EFF               	addlw	-1
  2783  060B  1D03               	skipz
  2784  060C  2E07               	goto	u4105
  2785  060D  0857               	movf	___lwdiv@divisor+1,w
  2786  060E  0259               	subwf	___lwdiv@dividend+1,w
  2787  060F  1D03               	skipz
  2788  0610  2E13               	goto	u4115
  2789  0611  0856               	movf	___lwdiv@divisor,w
  2790  0612  0258               	subwf	___lwdiv@dividend,w
  2791  0613                     u4115:	
  2792  0613  1C03               	skipc
  2793  0614  2E1C               	goto	l3649
  2794  0615  0856               	movf	___lwdiv@divisor,w
  2795  0616  02D8               	subwf	___lwdiv@dividend,f
  2796  0617  0857               	movf	___lwdiv@divisor+1,w
  2797  0618  1C03               	skipc
  2798  0619  03D9               	decf	___lwdiv@dividend+1,f
  2799  061A  02D9               	subwf	___lwdiv@dividend+1,f
  2800  061B  145B               	bsf	___lwdiv@quotient,0
  2801  061C                     l3649:	
  2802  061C  3001               	movlw	1
  2803  061D                     u4125:	
  2804  061D  1003               	clrc
  2805  061E  0CD7               	rrf	___lwdiv@divisor+1,f
  2806  061F  0CD6               	rrf	___lwdiv@divisor,f
  2807  0620  3EFF               	addlw	-1
  2808  0621  1D03               	skipz
  2809  0622  2E1D               	goto	u4125
  2810  0623  3001               	movlw	1
  2811  0624  02DA               	subwf	___lwdiv@counter,f
  2812  0625  1D03               	btfss	3,2
  2813  0626  2E06               	goto	l3643
  2814  0627                     l3653:	
  2815  0627  085C               	movf	___lwdiv@quotient+1,w
  2816  0628  01D7               	clrf	?___lwdiv+1
  2817  0629  07D7               	addwf	?___lwdiv+1,f
  2818  062A  085B               	movf	___lwdiv@quotient,w
  2819  062B  01D6               	clrf	?___lwdiv
  2820  062C  07D6               	addwf	?___lwdiv,f
  2821  062D  0008               	return
  2822  062E                     __end_of___lwdiv:	
  2823                           
  2824                           	psect	text6
  2825  0707                     __ptext6:	
  2826 ;; *************** function _getCDS_AD *****************
  2827 ;; Defined at:
  2828 ;;		line 45 in file "../src/CDS_B1.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  channel1        1    wreg     unsigned char 
  2831 ;;  channel2        1    6[COMMON] unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  channel1        1    4[BANK0 ] unsigned char 
  2834 ;;  j               1    3[BANK0 ] unsigned char 
  2835 ;;  i               1    2[BANK0 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;		None               void
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2845 ;;      Params:         1       0       0       0
  2846 ;;      Locals:         0       3       0       0
  2847 ;;      Temps:          0       2       0       0
  2848 ;;      Totals:         1       5       0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    4
  2852 ;; This function calls:
  2853 ;;		_getAD
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _getCDS_AD
  2861  0707                     _getCDS_AD:	
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;getCDS_AD@channel1 stored from wreg
  2866  0707  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0708  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0709  00DA               	movwf	getCDS_AD@channel1
  2869                           
  2870                           ;CDS_B1.c: 46: char i = 0, j = 0;
  2871  070A  01D8               	clrf	getCDS_AD@i
  2872  070B  01D9               	clrf	getCDS_AD@j
  2873                           
  2874                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  2875  070C  1DA8               	btfss	__CDS,3
  2876  070D  0008               	return
  2877                           
  2878                           ;CDS_B1.c: 48: _CDS.GO = 1;
  2879  070E  14A8               	bsf	__CDS,1
  2880                           
  2881                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  2882  070F  3070               	movlw	112
  2883  0710  00D6               	movwf	??_getCDS_AD
  2884  0711  0856               	movf	??_getCDS_AD,w
  2885  0712  00F4               	movwf	getAD@adcon1
  2886  0713  085A               	movf	getCDS_AD@channel1,w
  2887  0714  118A  277E  118A   	fcall	_getAD
  2888  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0719  00D7               	movwf	??_getCDS_AD+1
  2891  071A  0857               	movf	??_getCDS_AD+1,w
  2892  071B  00AC               	movwf	__CDS+4
  2893                           
  2894                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  2895  071C  082C               	movf	__CDS+4,w
  2896  071D  00D6               	movwf	??_getCDS_AD
  2897  071E  0856               	movf	??_getCDS_AD,w
  2898  071F  00AA               	movwf	__CDS+2
  2899                           
  2900                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  2901  0720  3070               	movlw	112
  2902  0721  00D6               	movwf	??_getCDS_AD
  2903  0722  0856               	movf	??_getCDS_AD,w
  2904  0723  00F4               	movwf	getAD@adcon1
  2905  0724  0876               	movf	getCDS_AD@channel2,w
  2906  0725  118A  277E         	fcall	_getAD
  2907  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0729  00D7               	movwf	??_getCDS_AD+1
  2910  072A  0857               	movf	??_getCDS_AD+1,w
  2911  072B  00AC               	movwf	__CDS+4
  2912                           
  2913                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  2914  072C  082C               	movf	__CDS+4,w
  2915  072D  00D6               	movwf	??_getCDS_AD
  2916  072E  0856               	movf	??_getCDS_AD,w
  2917  072F  00AB               	movwf	__CDS+3
  2918  0730  0008               	return
  2919  0731                     __end_of_getCDS_AD:	
  2920                           
  2921                           	psect	text7
  2922  077E                     __ptext7:	
  2923 ;; *************** function _getAD *****************
  2924 ;; Defined at:
  2925 ;;		line 427 in file "../src/MCU_B1.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  adcon0          1    wreg     unsigned char 
  2928 ;;  adcon1          1    4[COMMON] unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  adcon0          1    5[COMMON] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      unsigned char 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         1       0       0       0
  2941 ;;      Locals:         1       0       0       0
  2942 ;;      Temps:          0       0       0       0
  2943 ;;      Totals:         2       0       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		_Timeout_Counter
  2949 ;;		_set_TimeoutCleared
  2950 ;; This function is called by:
  2951 ;;		_getCDS_AD
  2952 ;;		_getTemp_AD
  2953 ;;		_getPIR_AD
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function _getAD
  2959  077E                     _getAD:	
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2963                           ;getAD@adcon0 stored from wreg
  2964  077E  00F5               	movwf	getAD@adcon0
  2965                           
  2966                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  2967  077F  0875               	movf	getAD@adcon0,w
  2968  0780  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0781  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0782  009F               	movwf	31	;volatile
  2971                           
  2972                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  2973  0783  0874               	movf	getAD@adcon1,w
  2974  0784  1683               	bsf	3,5	;RP0=1, select bank1
  2975  0785  1303               	bcf	3,6	;RP1=0, select bank1
  2976  0786  009F               	movwf	31	;volatile
  2977                           
  2978                           ;MCU_B1.c: 430: GO_nDONE = 1;
  2979  0787  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0788  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0789  149F               	bsf	31,1	;volatile
  2982                           
  2983                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2984  078A  2F8E               	goto	l2593
  2985  078B                     l2591:	
  2986                           
  2987                           ;MCU_B1.c: 432: Timeout_Counter();
  2988  078B  158A  27C3  118A   	fcall	_Timeout_Counter
  2989  078E                     l2593:	
  2990  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2991  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0790  1C9F               	btfss	31,1	;volatile
  2993  0791  2F94               	goto	l2597
  2994  0792  1D25               	btfss	_myMain+5,2
  2995  0793  2F8B               	goto	l2591
  2996  0794                     l2597:	
  2997                           
  2998                           ;MCU_B1.c: 433: };
  2999                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3000  0794  158A  26EB         	fcall	_set_TimeoutCleared
  3001                           
  3002                           ;MCU_B1.c: 435: return ADRES;
  3003  0796  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0797  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0798  081E               	movf	30,w	;volatile
  3006  0799  0008               	return
  3007  079A                     __end_of_getAD:	
  3008                           
  3009                           	psect	text8
  3010  0EEB                     __ptext8:	
  3011 ;; *************** function _set_TimeoutCleared *****************
  3012 ;; Defined at:
  3013 ;;		line 272 in file "../src/Main_B1.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3027 ;;      Params:         0       0       0       0
  3028 ;;      Locals:         0       0       0       0
  3029 ;;      Temps:          0       0       0       0
  3030 ;;      Totals:         0       0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    2
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_getAD
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _set_TimeoutCleared
  3043  0EEB                     _set_TimeoutCleared:	
  3044                           
  3045                           ;Main_B1.c: 273: myMain.Timeout = 0;
  3046                           
  3047                           ;incstack = 0
  3048                           ; Regs used in _set_TimeoutCleared: [status,2]
  3049  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0EED  1125               	bcf	_myMain+5,2
  3052                           
  3053                           ;Main_B1.c: 274: myMain.Timeout_Counter = 0;
  3054  0EEE  01A6               	clrf	_myMain+6
  3055  0EEF  01A7               	clrf	_myMain+7
  3056  0EF0  0008               	return
  3057  0EF1                     __end_of_set_TimeoutCleared:	
  3058                           
  3059                           	psect	text9
  3060  0FC3                     __ptext9:	
  3061 ;; *************** function _Timeout_Counter *****************
  3062 ;; Defined at:
  3063 ;;		line 263 in file "../src/Main_B1.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		wreg, status,2
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3077 ;;      Params:         0       0       0       0
  3078 ;;      Locals:         0       0       0       0
  3079 ;;      Temps:          0       0       0       0
  3080 ;;      Totals:         0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_getAD
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _Timeout_Counter
  3093  0FC3                     _Timeout_Counter:	
  3094                           
  3095                           ;Main_B1.c: 264: myMain.Timeout_Counter++;
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3099  0FC3  3001               	movlw	1
  3100  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0FC6  07A6               	addwf	_myMain+6,f
  3103  0FC7  1803               	skipnc
  3104  0FC8  0AA7               	incf	_myMain+7,f
  3105  0FC9  3000               	movlw	0
  3106  0FCA  07A7               	addwf	_myMain+7,f
  3107                           
  3108                           ;Main_B1.c: 265: if (myMain.Timeout_Counter == 10000) {
  3109  0FCB  3027               	movlw	39
  3110  0FCC  0627               	xorwf	_myMain+7,w
  3111  0FCD  1D03               	skipz
  3112  0FCE  2FD1               	goto	u1865
  3113  0FCF  3010               	movlw	16
  3114  0FD0  0626               	xorwf	_myMain+6,w
  3115  0FD1                     u1865:	
  3116  0FD1  1D03               	skipz
  3117  0FD2  0008               	return
  3118                           
  3119                           ;Main_B1.c: 266: myMain.Timeout_Counter = 0;
  3120  0FD3  01A6               	clrf	_myMain+6
  3121  0FD4  01A7               	clrf	_myMain+7
  3122                           
  3123                           ;Main_B1.c: 267: myMain.Timeout = 1;
  3124  0FD5  1525               	bsf	_myMain+5,2
  3125  0FD6  0008               	return
  3126  0FD7                     __end_of_Timeout_Counter:	
  3127                           
  3128                           	psect	text10
  3129  0F8E                     __ptext10:	
  3130 ;; *************** function _WDT_Main *****************
  3131 ;; Defined at:
  3132 ;;		line 1033 in file "../src/MCU_B1.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3146 ;;      Params:         0       0       0       0
  3147 ;;      Locals:         0       0       0       0
  3148 ;;      Temps:          1       0       0       0
  3149 ;;      Totals:         1       0       0       0
  3150 ;;Total ram usage:        1 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    3
  3153 ;; This function calls:
  3154 ;;		_WDT_Clearing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _WDT_Main
  3162  0F8E                     _WDT_Main:	
  3163                           
  3164                           ;MCU_B1.c: 1034: if (WDT.Enable == 1) {
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3168  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0F90  1C34               	btfss	_WDT,0
  3171  0F91  0008               	return
  3172                           
  3173                           ;MCU_B1.c: 1035: if (WDT.Timer-- > 0) {
  3174  0F92  3001               	movlw	1
  3175  0F93  02B5               	subwf	_WDT+1,f
  3176  0F94  0835               	movf	_WDT+1,w
  3177  0F95  3AFF               	xorlw	255
  3178  0F96  1903               	skipnz
  3179  0F97  0008               	return
  3180                           
  3181                           ;MCU_B1.c: 1036: WDT.Timer = 100;
  3182  0F98  3064               	movlw	100
  3183  0F99  00F4               	movwf	??_WDT_Main
  3184  0F9A  0874               	movf	??_WDT_Main,w
  3185  0F9B  00B5               	movwf	_WDT+1
  3186                           
  3187                           ;MCU_B1.c: 1037: WDT_Clearing();
  3188  0F9C  118A  2002         	fcall	_WDT_Clearing
  3189  0F9E  0008               	return
  3190  0F9F                     __end_of_WDT_Main:	
  3191                           
  3192                           	psect	text11
  3193  0002                     __ptext11:	
  3194 ;; *************** function _WDT_Clearing *****************
  3195 ;; Defined at:
  3196 ;;		line 1043 in file "../src/MCU_B1.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;		None               void
  3203 ;; Registers used:
  3204 ;;		None
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3210 ;;      Params:         0       0       0       0
  3211 ;;      Locals:         0       0       0       0
  3212 ;;      Temps:          0       0       0       0
  3213 ;;      Totals:         0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    2
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_WDT_Main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _WDT_Clearing
  3226  0002                     _WDT_Clearing:	
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _WDT_Clearing: []
  3230  0002  0064               	clrwdt	;# 
  3231  0003  0008               	return
  3232  0004                     __end_of_WDT_Clearing:	
  3233                           
  3234                           	psect	text12
  3235  0ED6                     __ptext12:	
  3236 ;; *************** function _Temp_Main *****************
  3237 ;; Defined at:
  3238 ;;		line 51 in file "../src/OverTemperature_B1.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;		None               void
  3245 ;; Registers used:
  3246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3252 ;;      Params:         0       0       0       0
  3253 ;;      Locals:         0       0       0       0
  3254 ;;      Temps:          0       0       0       0
  3255 ;;      Totals:         0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    6
  3259 ;; This function calls:
  3260 ;;		_setTemp_Main
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function _Temp_Main
  3268  0ED6                     _Temp_Main:	
  3269                           
  3270                           ;OverTemperature_B1.c: 53: setTemp_Main();
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3274  0ED6  118A  232E         	fcall	_setTemp_Main
  3275  0ED8  0008               	return
  3276  0ED9                     __end_of_Temp_Main:	
  3277                           
  3278                           	psect	text13
  3279  032E                     __ptext13:	
  3280 ;; *************** function _setTemp_Main *****************
  3281 ;; Defined at:
  3282 ;;		line 58 in file "../src/OverTemperature_B1.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3296 ;;      Params:         0       0       0       0
  3297 ;;      Locals:         0       0       0       0
  3298 ;;      Temps:          0       1       0       0
  3299 ;;      Totals:         0       1       0       0
  3300 ;;Total ram usage:        1 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    5
  3303 ;; This function calls:
  3304 ;;		___awdiv
  3305 ;;		_getMain_All_Error_Status
  3306 ;;		_getMain_LightsStatus
  3307 ;; This function is called by:
  3308 ;;		_Temp_Main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _setTemp_Main
  3314  032E                     _setTemp_Main:	
  3315                           
  3316                           ;OverTemperature_B1.c: 59: if (Temp.Enable == 1) {
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3320  032E  1283               	bcf	3,5	;RP0=0, select bank0
  3321  032F  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0330  1C37               	btfss	_Temp,0
  3323  0331  2BAE               	goto	l654
  3324                           
  3325                           ;OverTemperature_B1.c: 60: if (Temp.ADtoGO == 0) {
  3326  0332  1937               	btfsc	_Temp,2
  3327  0333  2B45               	goto	l3535
  3328                           
  3329                           ;OverTemperature_B1.c: 61: Temp.Time++;
  3330  0334  3001               	movlw	1
  3331  0335  07B8               	addwf	_Temp+1,f
  3332  0336  1803               	skipnc
  3333  0337  0AB9               	incf	_Temp+2,f
  3334  0338  3000               	movlw	0
  3335  0339  07B9               	addwf	_Temp+2,f
  3336                           
  3337                           ;OverTemperature_B1.c: 62: if (Temp.Time >= 500) {
  3338  033A  3001               	movlw	1
  3339  033B  0239               	subwf	_Temp+2,w
  3340  033C  30F4               	movlw	244
  3341  033D  1903               	skipnz
  3342  033E  0238               	subwf	_Temp+1,w
  3343  033F  1C03               	skipc
  3344  0340  0008               	return
  3345                           
  3346                           ;OverTemperature_B1.c: 63: Temp.Time = 0;
  3347  0341  01B8               	clrf	_Temp+1
  3348  0342  01B9               	clrf	_Temp+2
  3349                           
  3350                           ;OverTemperature_B1.c: 64: Temp.ADtoGO = 1;
  3351  0343  1537               	bsf	_Temp,2
  3352                           
  3353                           ;OverTemperature_B1.c: 65: }
  3354                           ;OverTemperature_B1.c: 66: } else {
  3355  0344  0008               	return
  3356  0345                     l3535:	
  3357                           
  3358                           ;OverTemperature_B1.c: 67: if (getMain_All_Error_Status(2) == 0) {
  3359  0345  3002               	movlw	2
  3360  0346  118A  266D  118A   	fcall	_getMain_All_Error_Status
  3361  0349  3800               	iorlw	0
  3362  034A  1D03               	skipz
  3363  034B  0008               	return
  3364                           
  3365                           ;OverTemperature_B1.c: 68: Temp.Time++;
  3366  034C  3001               	movlw	1
  3367  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3368  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3369  034F  07B8               	addwf	_Temp+1,f
  3370  0350  1803               	skipnc
  3371  0351  0AB9               	incf	_Temp+2,f
  3372  0352  3000               	movlw	0
  3373  0353  07B9               	addwf	_Temp+2,f
  3374                           
  3375                           ;OverTemperature_B1.c: 69: if (Temp.Time >= 5) {
  3376  0354  3000               	movlw	0
  3377  0355  0239               	subwf	_Temp+2,w
  3378  0356  3005               	movlw	5
  3379  0357  1903               	skipnz
  3380  0358  0238               	subwf	_Temp+1,w
  3381  0359  1C03               	skipc
  3382  035A  0008               	return
  3383                           
  3384                           ;OverTemperature_B1.c: 70: Temp.Time = 0;
  3385  035B  01B8               	clrf	_Temp+1
  3386  035C  01B9               	clrf	_Temp+2
  3387                           
  3388                           ;OverTemperature_B1.c: 71: if (Temp.GO == 1) {
  3389  035D  1E37               	btfss	_Temp,4
  3390  035E  0008               	return
  3391                           
  3392                           ;OverTemperature_B1.c: 72: Temp.ADtoGO = 0;
  3393  035F  1137               	bcf	_Temp,2
  3394                           
  3395                           ;OverTemperature_B1.c: 73: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3396  0360  3002               	movlw	2
  3397  0361  00D6               	movwf	___awdiv@divisor
  3398  0362  3000               	movlw	0
  3399  0363  00D7               	movwf	___awdiv@divisor+1
  3400  0364  083E               	movf	_Temp+7,w
  3401  0365  073F               	addwf	_Temp+8,w
  3402  0366  00D8               	movwf	___awdiv@dividend
  3403  0367  01D9               	clrf	___awdiv@dividend+1
  3404  0368  0DD9               	rlf	___awdiv@dividend+1,f
  3405  0369  118A  2498  118A   	fcall	___awdiv
  3406  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3407  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3408  036E  0856               	movf	?___awdiv,w
  3409  036F  00DE               	movwf	??_setTemp_Main
  3410  0370  085E               	movf	??_setTemp_Main,w
  3411  0371  00BD               	movwf	_Temp+6
  3412                           
  3413                           ;OverTemperature_B1.c: 75: if (getMain_LightsStatus() == 1) {
  3414  0372  118A  26D7  118A   	fcall	_getMain_LightsStatus
  3415  0375  3A01               	xorlw	1
  3416  0376  1D03               	skipz
  3417  0377  2B80               	goto	l3551
  3418                           
  3419                           ;OverTemperature_B1.c: 76: Temp.SafeValue = 140;
  3420  0378  308C               	movlw	140
  3421  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3422  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3423  037B  00DE               	movwf	??_setTemp_Main
  3424  037C  085E               	movf	??_setTemp_Main,w
  3425  037D  00C1               	movwf	_Temp+10
  3426                           
  3427                           ;OverTemperature_B1.c: 77: Temp.DangerValue = 100;
  3428  037E  3064               	movlw	100
  3429  037F  2B87               	goto	L6
  3430  0380                     l3551:	
  3431                           ;OverTemperature_B1.c: 78: } else {
  3432                           
  3433                           
  3434                           ;OverTemperature_B1.c: 79: Temp.SafeValue = 100;
  3435  0380  3064               	movlw	100
  3436  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0383  00DE               	movwf	??_setTemp_Main
  3439  0384  085E               	movf	??_setTemp_Main,w
  3440  0385  00C1               	movwf	_Temp+10
  3441                           
  3442                           ;OverTemperature_B1.c: 80: Temp.DangerValue = 70;
  3443  0386  3046               	movlw	70
  3444  0387                     L6:	
  3445  0387  00DE               	movwf	??_setTemp_Main
  3446  0388  085E               	movf	??_setTemp_Main,w
  3447  0389  00C2               	movwf	_Temp+11
  3448                           
  3449                           ;OverTemperature_B1.c: 81: }
  3450                           ;OverTemperature_B1.c: 90: if (Temp.ERROR == 1) {
  3451  038A  1CB7               	btfss	_Temp,1
  3452  038B  2B9B               	goto	l3567
  3453                           
  3454                           ;OverTemperature_B1.c: 91: if (Temp.AD >= Temp.SafeValue) {
  3455  038C  0841               	movf	_Temp+10,w
  3456  038D  023D               	subwf	_Temp+6,w
  3457  038E  1C03               	skipc
  3458  038F  2BAA               	goto	l3577
  3459                           
  3460                           ;OverTemperature_B1.c: 92: Temp.Count++;
  3461  0390  3001               	movlw	1
  3462  0391  00DE               	movwf	??_setTemp_Main
  3463  0392  085E               	movf	??_setTemp_Main,w
  3464  0393  07BA               	addwf	_Temp+3,f
  3465                           
  3466                           ;OverTemperature_B1.c: 93: if (Temp.Count >= 3) {
  3467  0394  3003               	movlw	3
  3468  0395  023A               	subwf	_Temp+3,w
  3469  0396  1C03               	skipc
  3470  0397  2BAB               	goto	l667
  3471                           
  3472                           ;OverTemperature_B1.c: 94: Temp.Count = 0;
  3473  0398  01BA               	clrf	_Temp+3
  3474                           
  3475                           ;OverTemperature_B1.c: 95: Temp.ERROR = 0;
  3476  0399  10B7               	bcf	_Temp,1
  3477                           
  3478                           ;OverTemperature_B1.c: 97: }
  3479                           ;OverTemperature_B1.c: 98: } else {
  3480                           
  3481                           ;OverTemperature_B1.c: 96: ;;
  3482  039A  2BAB               	goto	l667
  3483  039B                     l3567:	
  3484                           ;OverTemperature_B1.c: 100: }
  3485                           ;OverTemperature_B1.c: 101: } else {
  3486                           
  3487                           ;OverTemperature_B1.c: 99: Temp.Count = 0;
  3488                           
  3489                           
  3490                           ;OverTemperature_B1.c: 102: if (Temp.AD <= Temp.DangerValue) {
  3491  039B  083D               	movf	_Temp+6,w
  3492  039C  0242               	subwf	_Temp+11,w
  3493  039D  1C03               	skipc
  3494  039E  2BAA               	goto	l3577
  3495                           
  3496                           ;OverTemperature_B1.c: 103: Temp.Count++;
  3497  039F  3001               	movlw	1
  3498  03A0  00DE               	movwf	??_setTemp_Main
  3499  03A1  085E               	movf	??_setTemp_Main,w
  3500  03A2  07BA               	addwf	_Temp+3,f
  3501                           
  3502                           ;OverTemperature_B1.c: 104: if (Temp.Count >= 3) {
  3503  03A3  3003               	movlw	3
  3504  03A4  023A               	subwf	_Temp+3,w
  3505  03A5  1C03               	skipc
  3506  03A6  2BAB               	goto	l667
  3507                           
  3508                           ;OverTemperature_B1.c: 105: Temp.Count = 0;
  3509  03A7  01BA               	clrf	_Temp+3
  3510                           
  3511                           ;OverTemperature_B1.c: 106: Temp.ERROR = 1;
  3512  03A8  14B7               	bsf	_Temp,1
  3513                           
  3514                           ;OverTemperature_B1.c: 107: }
  3515                           ;OverTemperature_B1.c: 108: } else {
  3516  03A9  2BAB               	goto	l667
  3517  03AA                     l3577:	
  3518                           
  3519                           ;OverTemperature_B1.c: 109: Temp.Count = 0;
  3520  03AA  01BA               	clrf	_Temp+3
  3521  03AB                     l667:	
  3522                           
  3523                           ;OverTemperature_B1.c: 110: }
  3524                           ;OverTemperature_B1.c: 111: }
  3525                           ;OverTemperature_B1.c: 112: ;;
  3526                           ;OverTemperature_B1.c: 113: ;;
  3527                           ;OverTemperature_B1.c: 116: ;;
  3528                           ;OverTemperature_B1.c: 117: ;;
  3529                           ;OverTemperature_B1.c: 119: Temp.ADH[0] = 0;
  3530  03AB  01BE               	clrf	_Temp+7
  3531                           
  3532                           ;OverTemperature_B1.c: 120: Temp.ADH[1] = 0;
  3533  03AC  01BF               	clrf	_Temp+8
  3534                           
  3535                           ;OverTemperature_B1.c: 121: }
  3536                           ;OverTemperature_B1.c: 122: }
  3537                           ;OverTemperature_B1.c: 123: }
  3538                           ;OverTemperature_B1.c: 124: }
  3539                           ;OverTemperature_B1.c: 125: } else {
  3540  03AD  0008               	return
  3541  03AE                     l654:	
  3542                           
  3543                           ;OverTemperature_B1.c: 126: if (myMain.PowerON == 1) {
  3544  03AE  1C20               	btfss	_myMain,0
  3545  03AF  0008               	return
  3546                           
  3547                           ;OverTemperature_B1.c: 127: Temp.Enable = 1;
  3548  03B0  1437               	bsf	_Temp,0
  3549  03B1  0008               	return
  3550  03B2                     __end_of_setTemp_Main:	
  3551                           
  3552                           	psect	text14
  3553  0498                     __ptext14:	
  3554 ;; *************** function ___awdiv *****************
  3555 ;; Defined at:
  3556 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  divisor         2    0[BANK0 ] int 
  3559 ;;  dividend        2    2[BANK0 ] int 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  quotient        2    6[BANK0 ] int 
  3562 ;;  sign            1    5[BANK0 ] unsigned char 
  3563 ;;  counter         1    4[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2    0[BANK0 ] int 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3573 ;;      Params:         0       4       0       0
  3574 ;;      Locals:         0       4       0       0
  3575 ;;      Temps:          1       0       0       0
  3576 ;;      Totals:         1       8       0       0
  3577 ;;Total ram usage:        9 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_setTemp_Main
  3584 ;;		_getPIR_AD
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function ___awdiv
  3590  0498                     ___awdiv:	
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3594  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3596  049A  01DB               	clrf	___awdiv@sign
  3597  049B  1FD7               	btfss	___awdiv@divisor+1,7
  3598  049C  2CA4               	goto	l3419
  3599  049D  09D6               	comf	___awdiv@divisor,f
  3600  049E  09D7               	comf	___awdiv@divisor+1,f
  3601  049F  0AD6               	incf	___awdiv@divisor,f
  3602  04A0  1903               	skipnz
  3603  04A1  0AD7               	incf	___awdiv@divisor+1,f
  3604  04A2  01DB               	clrf	___awdiv@sign
  3605  04A3  0ADB               	incf	___awdiv@sign,f
  3606  04A4                     l3419:	
  3607  04A4  1FD9               	btfss	___awdiv@dividend+1,7
  3608  04A5  2CAF               	goto	l3425
  3609  04A6  09D8               	comf	___awdiv@dividend,f
  3610  04A7  09D9               	comf	___awdiv@dividend+1,f
  3611  04A8  0AD8               	incf	___awdiv@dividend,f
  3612  04A9  1903               	skipnz
  3613  04AA  0AD9               	incf	___awdiv@dividend+1,f
  3614  04AB  3001               	movlw	1
  3615  04AC  00F4               	movwf	??___awdiv
  3616  04AD  0874               	movf	??___awdiv,w
  3617  04AE  06DB               	xorwf	___awdiv@sign,f
  3618  04AF                     l3425:	
  3619  04AF  01DC               	clrf	___awdiv@quotient
  3620  04B0  01DD               	clrf	___awdiv@quotient+1
  3621  04B1  0857               	movf	___awdiv@divisor+1,w
  3622  04B2  0456               	iorwf	___awdiv@divisor,w
  3623  04B3  1903               	skipnz
  3624  04B4  2CE6               	goto	l3447
  3625  04B5  01DA               	clrf	___awdiv@counter
  3626  04B6  0ADA               	incf	___awdiv@counter,f
  3627  04B7                     l3435:	
  3628  04B7  1BD7               	btfsc	___awdiv@divisor+1,7
  3629  04B8  2CC5               	goto	l3437
  3630  04B9  3001               	movlw	1
  3631  04BA                     u3585:	
  3632  04BA  1003               	clrc
  3633  04BB  0DD6               	rlf	___awdiv@divisor,f
  3634  04BC  0DD7               	rlf	___awdiv@divisor+1,f
  3635  04BD  3EFF               	addlw	-1
  3636  04BE  1D03               	skipz
  3637  04BF  2CBA               	goto	u3585
  3638  04C0  3001               	movlw	1
  3639  04C1  00F4               	movwf	??___awdiv
  3640  04C2  0874               	movf	??___awdiv,w
  3641  04C3  07DA               	addwf	___awdiv@counter,f
  3642  04C4  2CB7               	goto	l3435
  3643  04C5                     l3437:	
  3644  04C5  3001               	movlw	1
  3645  04C6                     u3605:	
  3646  04C6  1003               	clrc
  3647  04C7  0DDC               	rlf	___awdiv@quotient,f
  3648  04C8  0DDD               	rlf	___awdiv@quotient+1,f
  3649  04C9  3EFF               	addlw	-1
  3650  04CA  1D03               	skipz
  3651  04CB  2CC6               	goto	u3605
  3652  04CC  0857               	movf	___awdiv@divisor+1,w
  3653  04CD  0259               	subwf	___awdiv@dividend+1,w
  3654  04CE  1D03               	skipz
  3655  04CF  2CD2               	goto	u3615
  3656  04D0  0856               	movf	___awdiv@divisor,w
  3657  04D1  0258               	subwf	___awdiv@dividend,w
  3658  04D2                     u3615:	
  3659  04D2  1C03               	skipc
  3660  04D3  2CDB               	goto	l3443
  3661  04D4  0856               	movf	___awdiv@divisor,w
  3662  04D5  02D8               	subwf	___awdiv@dividend,f
  3663  04D6  0857               	movf	___awdiv@divisor+1,w
  3664  04D7  1C03               	skipc
  3665  04D8  03D9               	decf	___awdiv@dividend+1,f
  3666  04D9  02D9               	subwf	___awdiv@dividend+1,f
  3667  04DA  145C               	bsf	___awdiv@quotient,0
  3668  04DB                     l3443:	
  3669  04DB  3001               	movlw	1
  3670  04DC                     u3625:	
  3671  04DC  1003               	clrc
  3672  04DD  0CD7               	rrf	___awdiv@divisor+1,f
  3673  04DE  0CD6               	rrf	___awdiv@divisor,f
  3674  04DF  3EFF               	addlw	-1
  3675  04E0  1D03               	skipz
  3676  04E1  2CDC               	goto	u3625
  3677  04E2  3001               	movlw	1
  3678  04E3  02DA               	subwf	___awdiv@counter,f
  3679  04E4  1D03               	btfss	3,2
  3680  04E5  2CC5               	goto	l3437
  3681  04E6                     l3447:	
  3682  04E6  085B               	movf	___awdiv@sign,w
  3683  04E7  1903               	btfsc	3,2
  3684  04E8  2CEE               	goto	l3451
  3685  04E9  09DC               	comf	___awdiv@quotient,f
  3686  04EA  09DD               	comf	___awdiv@quotient+1,f
  3687  04EB  0ADC               	incf	___awdiv@quotient,f
  3688  04EC  1903               	skipnz
  3689  04ED  0ADD               	incf	___awdiv@quotient+1,f
  3690  04EE                     l3451:	
  3691  04EE  085D               	movf	___awdiv@quotient+1,w
  3692  04EF  01D7               	clrf	?___awdiv+1
  3693  04F0  07D7               	addwf	?___awdiv+1,f
  3694  04F1  085C               	movf	___awdiv@quotient,w
  3695  04F2  01D6               	clrf	?___awdiv
  3696  04F3  07D6               	addwf	?___awdiv,f
  3697  04F4  0008               	return
  3698  04F5                     __end_of___awdiv:	
  3699                           
  3700                           	psect	text15
  3701  0ED3                     __ptext15:	
  3702 ;; *************** function _Temp_Initialization *****************
  3703 ;; Defined at:
  3704 ;;		line 9 in file "../src/OverTemperature_B1.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;		None               void
  3711 ;; Registers used:
  3712 ;;		status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3718 ;;      Params:         0       0       0       0
  3719 ;;      Locals:         0       0       0       0
  3720 ;;      Temps:          0       0       0       0
  3721 ;;      Totals:         0       0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    3
  3725 ;; This function calls:
  3726 ;;		_setTemp_Initialization
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _Temp_Initialization
  3734  0ED3                     _Temp_Initialization:	
  3735                           
  3736                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3740  0ED3  158A  26CE         	fcall	_setTemp_Initialization
  3741  0ED5  0008               	return
  3742  0ED6                     __end_of_Temp_Initialization:	
  3743                           
  3744                           	psect	text16
  3745  0ECE                     __ptext16:	
  3746 ;; *************** function _setTemp_Initialization *****************
  3747 ;; Defined at:
  3748 ;;		line 46 in file "../src/OverTemperature_B1.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;		None               void
  3755 ;; Registers used:
  3756 ;;		None
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3762 ;;      Params:         0       0       0       0
  3763 ;;      Locals:         0       0       0       0
  3764 ;;      Temps:          0       0       0       0
  3765 ;;      Totals:         0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    2
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_Temp_Initialization
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _setTemp_Initialization
  3778  0ECE                     _setTemp_Initialization:	
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _setTemp_Initialization: []
  3782  0ECE  0008               	return
  3783  0ECF                     __end_of_setTemp_Initialization:	
  3784                           
  3785                           	psect	text17
  3786  0025                     __ptext17:	
  3787 ;; *************** function _PIR_Main *****************
  3788 ;; Defined at:
  3789 ;;		line 14 in file "../src/PIR_B1.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  error           1   16[BANK0 ] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;		None               void
  3796 ;; Registers used:
  3797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3803 ;;      Params:         0       0       0       0
  3804 ;;      Locals:         0       3       0       0
  3805 ;;      Temps:          0       5       0       0
  3806 ;;      Totals:         0       8       0       0
  3807 ;;Total ram usage:        8 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    5
  3810 ;; This function calls:
  3811 ;;		_getLights_Status
  3812 ;;		_getMain_All_Error_Status
  3813 ;;		_setLED
  3814 ;;		_setLights_Trigger
  3815 ;;		_setMain_Exception
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _PIR_Main
  3823  0025                     _PIR_Main:	
  3824                           
  3825                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3829  0025  3000               	movlw	0
  3830  0026  118A  266D  118A   	fcall	_getMain_All_Error_Status
  3831  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3832  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3833  002B  00DF               	movwf	??_PIR_Main
  3834  002C  085F               	movf	??_PIR_Main,w
  3835  002D  00E6               	movwf	PIR_Main@error
  3836                           
  3837                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3838  002E  1683               	bsf	3,5	;RP0=1, select bank1
  3839  002F  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0030  1C20               	btfss	__PIR^(0+128),0
  3841  0031  29EC               	goto	l721
  3842                           
  3843                           ;PIR_B1.c: 17: if (error == 0) {
  3844  0032  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0033  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0034  08E6               	movf	PIR_Main@error,f
  3847  0035  1D03               	skipz
  3848  0036  284D               	goto	l722
  3849                           
  3850                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  3851  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3852  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3853  0039  1A20               	btfsc	__PIR^(0+128),4
  3854  003A  287B               	goto	l3815
  3855                           
  3856                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  3857  003B  1620               	bsf	__PIR^(0+128),4
  3858                           
  3859                           ;PIR_B1.c: 20: _PIR.Available = 1;
  3860  003C  17A0               	bsf	__PIR^(0+128),7
  3861                           
  3862                           ;PIR_B1.c: 21: setLED(1, 0);
  3863  003D  01F6               	clrf	setLED@command
  3864  003E  3001               	movlw	1
  3865  003F  118A  23B2  118A   	fcall	_setLED
  3866                           
  3867                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  3868  0042  1683               	bsf	3,5	;RP0=1, select bank1
  3869  0043  1303               	bcf	3,6	;RP1=0, select bank1
  3870  0044  19A0               	btfsc	__PIR^(0+128),3
  3871  0045  287B               	goto	l3815
  3872                           
  3873                           ;PIR_B1.c: 23: setLED(2, 1);
  3874  0046  01F6               	clrf	setLED@command
  3875  0047  0AF6               	incf	setLED@command,f
  3876  0048  3002               	movlw	2
  3877  0049  118A  23B2  118A   	fcall	_setLED
  3878                           
  3879                           ;PIR_B1.c: 31: }
  3880                           ;PIR_B1.c: 32: }
  3881                           ;PIR_B1.c: 33: } else {
  3882  004C  287B               	goto	l3815
  3883  004D                     l722:	
  3884                           
  3885                           ;PIR_B1.c: 34: if (_PIR.Detect == 1) {
  3886  004D  1683               	bsf	3,5	;RP0=1, select bank1
  3887  004E  1303               	bcf	3,6	;RP1=0, select bank1
  3888  004F  1E20               	btfss	__PIR^(0+128),4
  3889  0050  287B               	goto	l3815
  3890                           
  3891                           ;PIR_B1.c: 35: setMain_Exception(error);
  3892  0051  1283               	bcf	3,5	;RP0=0, select bank0
  3893  0052  1303               	bcf	3,6	;RP1=0, select bank0
  3894  0053  0866               	movf	PIR_Main@error,w
  3895  0054  118A  262E  118A   	fcall	_setMain_Exception
  3896                           
  3897                           ;PIR_B1.c: 37: _PIR.Detect = 0;
  3898  0057  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0058  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0059  1220               	bcf	__PIR^(0+128),4
  3901                           
  3902                           ;PIR_B1.c: 38: _PIR.Available = 0;
  3903  005A  13A0               	bcf	__PIR^(0+128),7
  3904                           
  3905                           ;PIR_B1.c: 39: _PIR.Status = 0;
  3906  005B  1320               	bcf	__PIR^(0+128),6
  3907                           
  3908                           ;PIR_B1.c: 42: _PIR.Time = 0;
  3909  005C  01A5               	clrf	(__PIR^(0+128)+5)
  3910                           
  3911                           ;PIR_B1.c: 43: _PIR.RangeTime1 = 0;
  3912  005D  01CA               	clrf	(__PIR^(0+128)+42)
  3913                           
  3914                           ;PIR_B1.c: 44: _PIR.RangeValue = 15;
  3915  005E  300F               	movlw	15
  3916  005F  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0060  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0061  00DF               	movwf	??_PIR_Main
  3919  0062  085F               	movf	??_PIR_Main,w
  3920  0063  1683               	bsf	3,5	;RP0=1, select bank1
  3921  0064  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0065  00CC               	movwf	(__PIR^(0+128)+44)
  3923                           
  3924                           ;PIR_B1.c: 45: _PIR.RangeCount = 0;
  3925  0066  01CB               	clrf	(__PIR^(0+128)+43)
  3926                           
  3927                           ;PIR_B1.c: 47: setLED(1, 1);
  3928  0067  01F6               	clrf	setLED@command
  3929  0068  0AF6               	incf	setLED@command,f
  3930  0069  3001               	movlw	1
  3931  006A  118A  23B2  118A   	fcall	_setLED
  3932                           
  3933                           ;PIR_B1.c: 48: setLED(2, 0);
  3934  006D  01F6               	clrf	setLED@command
  3935  006E  3002               	movlw	2
  3936  006F  118A  23B2  118A   	fcall	_setLED
  3937                           
  3938                           ;PIR_B1.c: 50: if (_PIR.OK == 1) {
  3939  0072  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0073  1303               	bcf	3,6	;RP1=0, select bank1
  3941  0074  1DA0               	btfss	__PIR^(0+128),3
  3942  0075  2878               	goto	l727
  3943                           
  3944                           ;PIR_B1.c: 51: _PIR.Count = 0;
  3945  0076  01C1               	clrf	(__PIR^(0+128)+33)
  3946  0077  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3947  0078                     l727:	
  3948                           
  3949                           ;PIR_B1.c: 52: }
  3950                           ;PIR_B1.c: 53: _PIR.CloseTimeSeconds = 0;
  3951  0078  01C6               	clrf	(__PIR^(0+128)+38)
  3952                           
  3953                           ;PIR_B1.c: 54: _PIR.CloseTimeMinutes = 0;
  3954  0079  01C4               	clrf	(__PIR^(0+128)+36)
  3955  007A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3956  007B                     l3815:	
  3957                           
  3958                           ;PIR_B1.c: 55: }
  3959                           ;PIR_B1.c: 56: }
  3960                           ;PIR_B1.c: 58: if (_PIR.ADtoGO == 0) {
  3961  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3962  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3963  007D  18A0               	btfsc	__PIR^(0+128),1
  3964  007E  288E               	goto	l728
  3965                           
  3966                           ;PIR_B1.c: 59: _PIR.Time++;
  3967  007F  3001               	movlw	1
  3968  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0081  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0082  00DF               	movwf	??_PIR_Main
  3971  0083  085F               	movf	??_PIR_Main,w
  3972  0084  1683               	bsf	3,5	;RP0=1, select bank1
  3973  0085  1303               	bcf	3,6	;RP1=0, select bank1
  3974  0086  07A5               	addwf	(__PIR^(0+128)+5),f
  3975                           
  3976                           ;PIR_B1.c: 60: if (_PIR.Time == 10) {
  3977  0087  0825               	movf	(__PIR^(0+128)+5),w
  3978  0088  3A0A               	xorlw	10
  3979  0089  1D03               	skipz
  3980  008A  29A4               	goto	l3899
  3981                           
  3982                           ;PIR_B1.c: 61: _PIR.Time = 0;
  3983  008B  01A5               	clrf	(__PIR^(0+128)+5)
  3984                           
  3985                           ;PIR_B1.c: 62: _PIR.ADtoGO = 1;
  3986  008C  14A0               	bsf	__PIR^(0+128),1
  3987                           
  3988                           ;PIR_B1.c: 63: }
  3989                           ;PIR_B1.c: 64: } else {
  3990  008D  29A4               	goto	l3899
  3991  008E                     l728:	
  3992                           
  3993                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  3994  008E  1D20               	btfss	__PIR^(0+128),2
  3995  008F  29A4               	goto	l3899
  3996                           
  3997                           ;PIR_B1.c: 66: _PIR.GO = 0;
  3998  0090  1120               	bcf	__PIR^(0+128),2
  3999                           
  4000                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  4001  0091  1BA0               	btfsc	__PIR^(0+128),7
  4002                           
  4003                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  4004  0092  1DA0               	btfss	__PIR^(0+128),3
  4005  0093  29A4               	goto	l3899
  4006                           
  4007                           ;PIR_B1.c: 70: _PIR.Time++;
  4008  0094  3001               	movlw	1
  4009  0095  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0096  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0097  00DF               	movwf	??_PIR_Main
  4012  0098  085F               	movf	??_PIR_Main,w
  4013  0099  1683               	bsf	3,5	;RP0=1, select bank1
  4014  009A  1303               	bcf	3,6	;RP1=0, select bank1
  4015  009B  07A5               	addwf	(__PIR^(0+128)+5),f
  4016                           
  4017                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  4018  009C  0825               	movf	(__PIR^(0+128)+5),w
  4019  009D  3A3C               	xorlw	60
  4020  009E  1D03               	skipz
  4021  009F  28D4               	goto	l3865
  4022                           
  4023                           ;PIR_B1.c: 72: _PIR.Time = 0;
  4024  00A0  01A5               	clrf	(__PIR^(0+128)+5)
  4025                           
  4026                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  4027  00A1  305A               	movlw	90
  4028  00A2  024B               	subwf	(__PIR^(0+128)+43),w
  4029  00A3  1C03               	skipc
  4030  00A4  28B0               	goto	l3847
  4031                           
  4032                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  4033  00A5  01CA               	clrf	(__PIR^(0+128)+42)
  4034                           
  4035                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 15) {
  4036  00A6  084C               	movf	(__PIR^(0+128)+44),w
  4037  00A7  3A0F               	xorlw	15
  4038  00A8  1903               	btfsc	3,2
  4039  00A9  28C5               	goto	L13
  4040                           
  4041                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  4042                           
  4043                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  4044  00AA  084C               	movf	(__PIR^(0+128)+44),w
  4045  00AB  3A19               	xorlw	25
  4046  00AC  1D03               	skipz
  4047  00AD  28D3               	goto	l3863
  4048                           
  4049                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  4050  00AE  3023               	movlw	35
  4051  00AF  28CC               	goto	L9
  4052  00B0                     l3847:	
  4053                           ;PIR_B1.c: 80: }
  4054                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  4055                           
  4056  00B0  300B               	movlw	11
  4057  00B1  024B               	subwf	(__PIR^(0+128)+43),w
  4058  00B2  1803               	skipnc
  4059  00B3  28D3               	goto	l3863
  4060                           
  4061                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  4062  00B4  3001               	movlw	1
  4063  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  4064  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  4065  00B7  00DF               	movwf	??_PIR_Main
  4066  00B8  085F               	movf	??_PIR_Main,w
  4067  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  4068  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  4069  00BB  07CA               	addwf	(__PIR^(0+128)+42),f
  4070                           
  4071                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  4072  00BC  084A               	movf	(__PIR^(0+128)+42),w
  4073  00BD  3A02               	xorlw	2
  4074  00BE  1D03               	skipz
  4075  00BF  28D3               	goto	l3863
  4076                           
  4077                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  4078  00C0  01CA               	clrf	(__PIR^(0+128)+42)
  4079                           
  4080                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  4081  00C1  084C               	movf	(__PIR^(0+128)+44),w
  4082  00C2  3A23               	xorlw	35
  4083  00C3  1D03               	skipz
  4084  00C4  28C7               	goto	l3859
  4085  00C5                     L13:	
  4086                           
  4087                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  4088  00C5  3019               	movlw	25
  4089  00C6  28CC               	goto	L9
  4090  00C7                     l3859:	
  4091                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  4092                           
  4093  00C7  084C               	movf	(__PIR^(0+128)+44),w
  4094  00C8  3A19               	xorlw	25
  4095  00C9  1D03               	skipz
  4096  00CA  28D3               	goto	l3863
  4097                           
  4098                           ;PIR_B1.c: 89: _PIR.RangeValue = 15;
  4099  00CB  300F               	movlw	15
  4100  00CC                     L9:	
  4101  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4102  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4103  00CE  00DF               	movwf	??_PIR_Main
  4104  00CF  085F               	movf	??_PIR_Main,w
  4105  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4106  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4107  00D2  00CC               	movwf	(__PIR^(0+128)+44)
  4108  00D3                     l3863:	
  4109                           
  4110                           ;PIR_B1.c: 90: }
  4111                           ;PIR_B1.c: 91: }
  4112                           ;PIR_B1.c: 92: }
  4113                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  4114  00D3  01CB               	clrf	(__PIR^(0+128)+43)
  4115  00D4                     l3865:	
  4116                           
  4117                           ;PIR_B1.c: 94: }
  4118                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4119                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4120  00D4  084C               	movf	(__PIR^(0+128)+44),w
  4121  00D5  074E               	addwf	(__PIR^(0+128)+46),w
  4122  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4123  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4124  00D8  00DF               	movwf	??_PIR_Main
  4125  00D9  01E0               	clrf	??_PIR_Main+1
  4126  00DA  0DE0               	rlf	??_PIR_Main+1,f
  4127  00DB  09DF               	comf	??_PIR_Main,f
  4128  00DC  09E0               	comf	??_PIR_Main+1,f
  4129  00DD  0ADF               	incf	??_PIR_Main,f
  4130  00DE  1903               	skipnz
  4131  00DF  0AE0               	incf	??_PIR_Main+1,f
  4132  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  4133  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  4134  00E2  0826               	movf	(__PIR^(0+128)+6),w
  4135  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4136  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4137  00E5  075F               	addwf	??_PIR_Main,w
  4138  00E6  00E1               	movwf	??_PIR_Main+2
  4139  00E7  0860               	movf	??_PIR_Main+1,w
  4140  00E8  1803               	skipnc
  4141  00E9  0A60               	incf	??_PIR_Main+1,w
  4142  00EA  00E2               	movwf	??_PIR_Main+3
  4143  00EB  0862               	movf	??_PIR_Main+3,w
  4144  00EC  3A80               	xorlw	128
  4145  00ED  3C80               	sublw	128
  4146  00EE  1D03               	skipz
  4147  00EF  28F4               	goto	u4455
  4148  00F0  0861               	movf	??_PIR_Main+2,w
  4149  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  4150  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  4151  00F3  0221               	subwf	(__PIR^(0+128)+1),w
  4152  00F4                     u4455:	
  4153  00F4  1C03               	skipc
  4154  00F5  2920               	goto	l3875
  4155  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  4156  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  4157  00F8  084C               	movf	(__PIR^(0+128)+44),w
  4158  00F9  074E               	addwf	(__PIR^(0+128)+46),w
  4159  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4160  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4161  00FC  00DF               	movwf	??_PIR_Main
  4162  00FD  01E0               	clrf	??_PIR_Main+1
  4163  00FE  0DE0               	rlf	??_PIR_Main+1,f
  4164  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  4165  0100  1303               	bcf	3,6	;RP1=0, select bank1
  4166  0101  0826               	movf	(__PIR^(0+128)+6),w
  4167  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0104  075F               	addwf	??_PIR_Main,w
  4170  0105  00E1               	movwf	??_PIR_Main+2
  4171  0106  3000               	movlw	0
  4172  0107  1803               	skipnc
  4173  0108  3001               	movlw	1
  4174  0109  0760               	addwf	??_PIR_Main+1,w
  4175  010A  00E2               	movwf	??_PIR_Main+3
  4176  010B  0862               	movf	??_PIR_Main+3,w
  4177  010C  3A80               	xorlw	128
  4178  010D  00E3               	movwf	??_PIR_Main+4
  4179  010E  3080               	movlw	128
  4180  010F  0263               	subwf	??_PIR_Main+4,w
  4181  0110  1D03               	skipz
  4182  0111  2918               	goto	u4465
  4183  0112  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0113  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0114  0821               	movf	(__PIR^(0+128)+1),w
  4186  0115  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0116  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0117  0261               	subwf	??_PIR_Main+2,w
  4189  0118                     u4465:	
  4190  0118  1C03               	skipc
  4191  0119  2920               	goto	l3875
  4192                           
  4193                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4194  011A  1683               	bsf	3,5	;RP0=1, select bank1
  4195  011B  1303               	bcf	3,6	;RP1=0, select bank1
  4196  011C  01C1               	clrf	(__PIR^(0+128)+33)
  4197  011D  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4198                           
  4199                           ;PIR_B1.c: 100: setLED(1, 0);
  4200  011E  01F6               	clrf	setLED@command
  4201  011F  2993               	goto	L14
  4202  0120                     l3875:	
  4203                           ;PIR_B1.c: 102: } else {
  4204                           
  4205                           ;PIR_B1.c: 101: setLED(2, 0);
  4206                           
  4207                           
  4208                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  4209  0120  3001               	movlw	1
  4210  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0122  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0123  00DF               	movwf	??_PIR_Main
  4213  0124  085F               	movf	??_PIR_Main,w
  4214  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4215  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4216  0127  07CB               	addwf	(__PIR^(0+128)+43),f
  4217                           
  4218                           ;PIR_B1.c: 104: _PIR.Count++;
  4219  0128  3001               	movlw	1
  4220  0129  07C1               	addwf	(__PIR^(0+128)+33),f
  4221  012A  1803               	skipnc
  4222  012B  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4223  012C  3000               	movlw	0
  4224  012D  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4225                           
  4226                           ;PIR_B1.c: 106: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4227  012E  1B20               	btfsc	__PIR^(0+128),6
  4228  012F  2934               	goto	l3883
  4229  0130  3002               	movlw	2
  4230  0131  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0132  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0133  2936               	goto	L10
  4233  0134                     l3883:	
  4234  0134  3003               	movlw	3
  4235  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0136                     L10:	
  4237  0136  00E4               	movwf	_PIR_Main$2715
  4238  0137  3000               	movlw	0
  4239  0138  00E5               	movwf	_PIR_Main$2715+1
  4240  0139  0864               	movf	_PIR_Main$2715,w
  4241  013A  00DF               	movwf	??_PIR_Main
  4242  013B  085F               	movf	??_PIR_Main,w
  4243  013C  1683               	bsf	3,5	;RP0=1, select bank1
  4244  013D  1303               	bcf	3,6	;RP1=0, select bank1
  4245  013E  00C3               	movwf	(__PIR^(0+128)+35)
  4246                           
  4247                           ;PIR_B1.c: 108: if (_PIR.Count == _PIR.TriggerValue) {
  4248  013F  0843               	movf	(__PIR^(0+128)+35),w
  4249  0140  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0141  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0142  00DF               	movwf	??_PIR_Main
  4252  0143  01E0               	clrf	??_PIR_Main+1
  4253  0144  1683               	bsf	3,5	;RP0=1, select bank1
  4254  0145  1303               	bcf	3,6	;RP1=0, select bank1
  4255  0146  0842               	movf	((__PIR+1)^(0+128)+33),w
  4256  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4258  0149  0660               	xorwf	??_PIR_Main+1,w
  4259  014A  1D03               	skipz
  4260  014B  2952               	goto	u4485
  4261  014C  1683               	bsf	3,5	;RP0=1, select bank1
  4262  014D  1303               	bcf	3,6	;RP1=0, select bank1
  4263  014E  0841               	movf	(__PIR^(0+128)+33),w
  4264  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0151  065F               	xorwf	??_PIR_Main,w
  4267  0152                     u4485:	
  4268  0152  1D03               	skipz
  4269  0153  29A4               	goto	l3899
  4270                           
  4271                           ;PIR_B1.c: 109: _PIR.Count = 0;
  4272  0154  1683               	bsf	3,5	;RP0=1, select bank1
  4273  0155  1303               	bcf	3,6	;RP1=0, select bank1
  4274  0156  01C1               	clrf	(__PIR^(0+128)+33)
  4275  0157  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4276                           
  4277                           ;PIR_B1.c: 110: _PIR.CloseTimeSeconds = 0;
  4278  0158  01C6               	clrf	(__PIR^(0+128)+38)
  4279                           
  4280                           ;PIR_B1.c: 111: _PIR.CloseTimeMinutes = 0;
  4281  0159  01C4               	clrf	(__PIR^(0+128)+36)
  4282  015A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4283                           
  4284                           ;PIR_B1.c: 112: _PIR.Status = 1;
  4285  015B  1720               	bsf	__PIR^(0+128),6
  4286                           
  4287                           ;PIR_B1.c: 115: if (getLights_Status(1) == 0) {
  4288  015C  3001               	movlw	1
  4289  015D  158A  277D  118A   	fcall	_getLights_Status
  4290  0160  3800               	iorlw	0
  4291  0161  1D03               	skipz
  4292  0162  2969               	goto	l3893
  4293                           
  4294                           ;PIR_B1.c: 116: setLights_Trigger(1, 1);
  4295  0163  01F6               	clrf	setLights_Trigger@command
  4296  0164  0AF6               	incf	setLights_Trigger@command,f
  4297  0165  3001               	movlw	1
  4298  0166  118A  27B6  118A   	fcall	_setLights_Trigger
  4299  0169                     l3893:	
  4300                           
  4301                           ;PIR_B1.c: 117: }
  4302                           ;PIR_B1.c: 120: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4303  0169  1683               	bsf	3,5	;RP0=1, select bank1
  4304  016A  1303               	bcf	3,6	;RP1=0, select bank1
  4305  016B  084C               	movf	(__PIR^(0+128)+44),w
  4306  016C  074E               	addwf	(__PIR^(0+128)+46),w
  4307  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4308  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4309  016F  00DF               	movwf	??_PIR_Main
  4310  0170  01E0               	clrf	??_PIR_Main+1
  4311  0171  0DE0               	rlf	??_PIR_Main+1,f
  4312  0172  09DF               	comf	??_PIR_Main,f
  4313  0173  09E0               	comf	??_PIR_Main+1,f
  4314  0174  0ADF               	incf	??_PIR_Main,f
  4315  0175  1903               	skipnz
  4316  0176  0AE0               	incf	??_PIR_Main+1,f
  4317  0177  1683               	bsf	3,5	;RP0=1, select bank1
  4318  0178  1303               	bcf	3,6	;RP1=0, select bank1
  4319  0179  0826               	movf	(__PIR^(0+128)+6),w
  4320  017A  1283               	bcf	3,5	;RP0=0, select bank0
  4321  017B  1303               	bcf	3,6	;RP1=0, select bank0
  4322  017C  075F               	addwf	??_PIR_Main,w
  4323  017D  00E1               	movwf	??_PIR_Main+2
  4324  017E  0860               	movf	??_PIR_Main+1,w
  4325  017F  1803               	skipnc
  4326  0180  0A60               	incf	??_PIR_Main+1,w
  4327  0181  00E2               	movwf	??_PIR_Main+3
  4328  0182  0862               	movf	??_PIR_Main+3,w
  4329  0183  3A80               	xorlw	128
  4330  0184  00E3               	movwf	??_PIR_Main+4
  4331  0185  3080               	movlw	128
  4332  0186  0263               	subwf	??_PIR_Main+4,w
  4333  0187  1D03               	skipz
  4334  0188  298F               	goto	u4505
  4335  0189  1683               	bsf	3,5	;RP0=1, select bank1
  4336  018A  1303               	bcf	3,6	;RP1=0, select bank1
  4337  018B  0821               	movf	(__PIR^(0+128)+1),w
  4338  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4339  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4340  018E  0261               	subwf	??_PIR_Main+2,w
  4341  018F                     u4505:	
  4342  018F  1C03               	skipc
  4343  0190  2999               	goto	l3897
  4344                           
  4345                           ;PIR_B1.c: 121: setLED(1, 1);
  4346  0191  01F6               	clrf	setLED@command
  4347  0192  0AF6               	incf	setLED@command,f
  4348  0193                     L14:	
  4349  0193  3001               	movlw	1
  4350  0194  118A  23B2  118A   	fcall	_setLED
  4351                           
  4352                           ;PIR_B1.c: 122: setLED(2, 0);
  4353  0197  01F6               	clrf	setLED@command
  4354  0198  29A0               	goto	L11
  4355  0199                     l3897:	
  4356                           ;PIR_B1.c: 123: } else {
  4357                           
  4358                           
  4359                           ;PIR_B1.c: 124: setLED(1, 0);
  4360  0199  01F6               	clrf	setLED@command
  4361  019A  3001               	movlw	1
  4362  019B  118A  23B2  118A   	fcall	_setLED
  4363                           
  4364                           ;PIR_B1.c: 125: setLED(2, 1);
  4365  019E  01F6               	clrf	setLED@command
  4366  019F  0AF6               	incf	setLED@command,f
  4367  01A0                     L11:	
  4368  01A0  3002               	movlw	2
  4369  01A1  118A  23B2  118A   	fcall	_setLED
  4370  01A4                     l3899:	
  4371                           
  4372                           ;PIR_B1.c: 126: }
  4373                           ;PIR_B1.c: 127: }
  4374                           ;PIR_B1.c: 128: }
  4375                           ;PIR_B1.c: 129: }
  4376                           ;PIR_B1.c: 130: }
  4377                           ;PIR_B1.c: 131: }
  4378                           ;PIR_B1.c: 132: }
  4379                           ;PIR_B1.c: 133: if (_PIR.OK == 0) {
  4380  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4381  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4382  01A6  19A0               	btfsc	__PIR^(0+128),3
  4383  01A7  29BE               	goto	l3909
  4384                           
  4385                           ;PIR_B1.c: 134: _PIR.Count++;
  4386  01A8  3001               	movlw	1
  4387  01A9  07C1               	addwf	(__PIR^(0+128)+33),f
  4388  01AA  1803               	skipnc
  4389  01AB  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4390  01AC  3000               	movlw	0
  4391  01AD  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4392                           
  4393                           ;PIR_B1.c: 135: if (_PIR.Count == 3000) {
  4394  01AE  300B               	movlw	11
  4395  01AF  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4396  01B0  1D03               	skipz
  4397  01B1  29B4               	goto	u4525
  4398  01B2  30B8               	movlw	184
  4399  01B3  0641               	xorwf	(__PIR^(0+128)+33),w
  4400  01B4                     u4525:	
  4401  01B4  1D03               	skipz
  4402  01B5  29BE               	goto	l3909
  4403                           
  4404                           ;PIR_B1.c: 136: _PIR.Count = 0;
  4405  01B6  01C1               	clrf	(__PIR^(0+128)+33)
  4406  01B7  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4407                           
  4408                           ;PIR_B1.c: 137: _PIR.OK = 1;
  4409  01B8  15A0               	bsf	__PIR^(0+128),3
  4410                           
  4411                           ;PIR_B1.c: 138: setLED(2, 0);
  4412  01B9  01F6               	clrf	setLED@command
  4413  01BA  3002               	movlw	2
  4414  01BB  118A  23B2  118A   	fcall	_setLED
  4415  01BE                     l3909:	
  4416                           
  4417                           ;PIR_B1.c: 139: }
  4418                           ;PIR_B1.c: 140: }
  4419                           ;PIR_B1.c: 141: if (_PIR.Status == 1) {
  4420  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  4421  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  4422  01C0  1F20               	btfss	__PIR^(0+128),6
  4423  01C1  0008               	return
  4424                           
  4425                           ;PIR_B1.c: 142: _PIR.CloseTimeSeconds++;
  4426  01C2  3001               	movlw	1
  4427  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4428  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4429  01C5  00DF               	movwf	??_PIR_Main
  4430  01C6  085F               	movf	??_PIR_Main,w
  4431  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  4432  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  4433  01C9  07C6               	addwf	(__PIR^(0+128)+38),f
  4434                           
  4435                           ;PIR_B1.c: 143: if (_PIR.CloseTimeSeconds == 100) {
  4436  01CA  0846               	movf	(__PIR^(0+128)+38),w
  4437  01CB  3A64               	xorlw	100
  4438  01CC  1D03               	skipz
  4439  01CD  0008               	return
  4440                           
  4441                           ;PIR_B1.c: 144: _PIR.CloseTimeSeconds = 0;
  4442  01CE  01C6               	clrf	(__PIR^(0+128)+38)
  4443                           
  4444                           ;PIR_B1.c: 145: _PIR.CloseTimeMinutes++;
  4445  01CF  3001               	movlw	1
  4446  01D0  07C4               	addwf	(__PIR^(0+128)+36),f
  4447  01D1  1803               	skipnc
  4448  01D2  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4449  01D3  3000               	movlw	0
  4450  01D4  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4451                           
  4452                           ;PIR_B1.c: 146: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4453  01D5  0848               	movf	((__PIR+1)^(0+128)+39),w
  4454  01D6  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4455  01D7  1D03               	skipz
  4456  01D8  29DB               	goto	u4555
  4457  01D9  0847               	movf	(__PIR^(0+128)+39),w
  4458  01DA  0644               	xorwf	(__PIR^(0+128)+36),w
  4459  01DB                     u4555:	
  4460  01DB  1D03               	skipz
  4461  01DC  0008               	return
  4462                           
  4463                           ;PIR_B1.c: 147: _PIR.CloseTimeMinutes = 0;
  4464  01DD  01C4               	clrf	(__PIR^(0+128)+36)
  4465  01DE  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4466                           
  4467                           ;PIR_B1.c: 148: _PIR.Status = 0;
  4468  01DF  1320               	bcf	__PIR^(0+128),6
  4469                           
  4470                           ;PIR_B1.c: 151: if (getLights_Status(1) == 1) {
  4471  01E0  3001               	movlw	1
  4472  01E1  158A  277D  118A   	fcall	_getLights_Status
  4473  01E4  3A01               	xorlw	1
  4474  01E5  1D03               	skipz
  4475  01E6  0008               	return
  4476                           
  4477                           ;PIR_B1.c: 152: setLights_Trigger(1, 0);
  4478  01E7  01F6               	clrf	setLights_Trigger@command
  4479  01E8  3001               	movlw	1
  4480  01E9  118A  27B6         	fcall	_setLights_Trigger
  4481                           
  4482                           ;PIR_B1.c: 153: }
  4483                           ;PIR_B1.c: 156: }
  4484                           ;PIR_B1.c: 157: }
  4485                           ;PIR_B1.c: 158: }
  4486                           ;PIR_B1.c: 159: } else {
  4487  01EB  0008               	return
  4488  01EC                     l721:	
  4489                           
  4490                           ;PIR_B1.c: 160: if (myMain.PowerON == 1) {
  4491  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  4492  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  4493  01EE  1C20               	btfss	_myMain,0
  4494  01EF  0008               	return
  4495                           
  4496                           ;PIR_B1.c: 161: _PIR.Enable = 1;
  4497  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  4498  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  4499  01F2  1420               	bsf	__PIR^(0+128),0
  4500  01F3  0008               	return
  4501  01F4                     __end_of_PIR_Main:	
  4502                           
  4503                           	psect	text18
  4504  062E                     __ptext18:	
  4505 ;; *************** function _setMain_Exception *****************
  4506 ;; Defined at:
  4507 ;;		line 278 in file "../src/Main_B1.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  command         1    wreg     unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  command         1    8[BANK0 ] unsigned char 
  4512 ;;  status          1    5[BANK0 ] unsigned char 
  4513 ;;  buz             1    4[BANK0 ] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;		None               void
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4523 ;;      Params:         0       0       0       0
  4524 ;;      Locals:         0       5       0       0
  4525 ;;      Temps:          0       2       0       0
  4526 ;;      Totals:         0       7       0       0
  4527 ;;Total ram usage:        7 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    4
  4530 ;; This function calls:
  4531 ;;		_getAll_Lights_Line
  4532 ;;		_setLED
  4533 ;;		_setLights_Trigger
  4534 ;; This function is called by:
  4535 ;;		_PIR_Main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _setMain_Exception
  4541  062E                     _setMain_Exception:	
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4545                           ;setMain_Exception@command stored from wreg
  4546  062E  1283               	bcf	3,5	;RP0=0, select bank0
  4547  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0630  00DE               	movwf	setMain_Exception@command
  4549                           
  4550                           ;Main_B1.c: 279: char status = 0, buz = 0;
  4551  0631  01DB               	clrf	setMain_Exception@status
  4552  0632  01DA               	clrf	setMain_Exception@buz
  4553                           
  4554                           ;Main_B1.c: 281: status = command == 3 ? getAll_Lights_Line() : 255;
  4555  0633  085E               	movf	setMain_Exception@command,w
  4556  0634  3A03               	xorlw	3
  4557  0635  1903               	skipnz
  4558  0636  2E3B               	goto	l3507
  4559  0637  30FF               	movlw	255
  4560  0638  00DC               	movwf	_setMain_Exception$2047
  4561  0639  3000               	movlw	0
  4562  063A  2E45               	goto	L15
  4563  063B                     l3507:	
  4564  063B  158A  2735  118A   	fcall	_getAll_Lights_Line
  4565  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4566  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0640  00D8               	movwf	??_setMain_Exception
  4568  0641  01D9               	clrf	??_setMain_Exception+1
  4569  0642  0858               	movf	??_setMain_Exception,w
  4570  0643  00DC               	movwf	_setMain_Exception$2047
  4571  0644  0859               	movf	??_setMain_Exception+1,w
  4572  0645                     L15:	
  4573  0645  00DD               	movwf	_setMain_Exception$2047+1
  4574  0646  085C               	movf	_setMain_Exception$2047,w
  4575  0647  00D8               	movwf	??_setMain_Exception
  4576  0648  0858               	movf	??_setMain_Exception,w
  4577  0649  00DB               	movwf	setMain_Exception@status
  4578                           
  4579                           ;Main_B1.c: 283: if (command == 0) {
  4580  064A  08DE               	movf	setMain_Exception@command,f
  4581  064B  1D03               	skipz
  4582  064C  2E4F               	goto	l3515
  4583                           
  4584                           ;Main_B1.c: 284: setLED(command, 110);
  4585  064D  306E               	movlw	110
  4586  064E  2E5A               	goto	L16
  4587  064F                     l3515:	
  4588                           ;Main_B1.c: 285: } else if (command == 5) {
  4589                           
  4590  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0651  085E               	movf	setMain_Exception@command,w
  4593  0652  3A05               	xorlw	5
  4594  0653  1D03               	skipz
  4595  0654  2E57               	goto	l3519
  4596                           
  4597                           ;Main_B1.c: 286: __nop();
  4598  0655  0000               	nop
  4599                           
  4600                           ;Main_B1.c: 287: } else {
  4601  0656  2E61               	goto	l3521
  4602  0657                     l3519:	
  4603                           
  4604                           ;Main_B1.c: 288: setLED(command, 111);
  4605  0657  306F               	movlw	111
  4606  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4608  065A                     L16:	
  4609  065A  00D8               	movwf	??_setMain_Exception
  4610  065B  0858               	movf	??_setMain_Exception,w
  4611  065C  00F6               	movwf	setLED@command
  4612  065D  085E               	movf	setMain_Exception@command,w
  4613  065E  118A  23B2  118A   	fcall	_setLED
  4614  0661                     l3521:	
  4615                           
  4616                           ;Main_B1.c: 289: }
  4617                           ;Main_B1.c: 291: if (command != 0) {
  4618  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0662  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0663  085E               	movf	setMain_Exception@command,w
  4621  0664  1903               	btfsc	3,2
  4622  0665  0008               	return
  4623                           
  4624                           ;Main_B1.c: 292: setLights_Trigger(1, 0);
  4625  0666  01F6               	clrf	setLights_Trigger@command
  4626  0667  3001               	movlw	1
  4627  0668  118A  27B6         	fcall	_setLights_Trigger
  4628  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4629  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4630  066C  0008               	return
  4631  066D                     __end_of_setMain_Exception:	
  4632                           
  4633                           	psect	text19
  4634  07B6                     __ptext19:	
  4635 ;; *************** function _setLights_Trigger *****************
  4636 ;; Defined at:
  4637 ;;		line 214 in file "../src/TriacRelay_B1.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  lights          1    wreg     unsigned char 
  4640 ;;  command         1    6[COMMON] unsigned char 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  lights          1    1[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4652 ;;      Params:         1       0       0       0
  4653 ;;      Locals:         0       1       0       0
  4654 ;;      Temps:          0       1       0       0
  4655 ;;      Totals:         1       2       0       0
  4656 ;;Total ram usage:        3 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    3
  4659 ;; This function calls:
  4660 ;;		_LightsPointSelect
  4661 ;; This function is called by:
  4662 ;;		_setMain_Exception
  4663 ;;		_PIR_Main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _setLights_Trigger
  4669  07B6                     _setLights_Trigger:	
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4673                           ;setLights_Trigger@lights stored from wreg
  4674  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4675  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4676  07B8  00D7               	movwf	setLights_Trigger@lights
  4677                           
  4678                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  4679  07B9  0857               	movf	setLights_Trigger@lights,w
  4680  07BA  158A  2708         	fcall	_LightsPointSelect
  4681                           
  4682                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  4683  07BC  0878               	movf	_Lights,w
  4684  07BD  0084               	movwf	4
  4685  07BE  1383               	bcf	3,7	;select IRP bank0
  4686  07BF  1580               	bsf	0,3
  4687                           
  4688                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  4689  07C0  0876               	movf	setLights_Trigger@command,w
  4690  07C1  3A01               	xorlw	1
  4691  07C2  3000               	movlw	0
  4692  07C3  1903               	skipnz
  4693  07C4  3001               	movlw	1
  4694  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4695  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4696  07C7  00D6               	movwf	??_setLights_Trigger
  4697  07C8  0878               	movf	_Lights,w
  4698  07C9  0084               	movwf	4
  4699  07CA  0ED6               	swapf	??_setLights_Trigger,f
  4700  07CB  0800               	movf	0,w
  4701  07CC  0656               	xorwf	??_setLights_Trigger,w
  4702  07CD  39EF               	andlw	-17
  4703  07CE  0656               	xorwf	??_setLights_Trigger,w
  4704  07CF  0080               	movwf	0
  4705  07D0  0008               	return
  4706  07D1                     __end_of_setLights_Trigger:	
  4707                           
  4708                           	psect	text20
  4709  0F35                     __ptext20:	
  4710 ;; *************** function _getAll_Lights_Line *****************
  4711 ;; Defined at:
  4712 ;;		line 236 in file "../src/TriacRelay_B1.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  line            1    6[COMMON] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      unsigned char 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4726 ;;      Params:         0       0       0       0
  4727 ;;      Locals:         1       0       0       0
  4728 ;;      Temps:          0       0       0       0
  4729 ;;      Totals:         1       0       0       0
  4730 ;;Total ram usage:        1 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    3
  4733 ;; This function calls:
  4734 ;;		_LightsPointSelect
  4735 ;; This function is called by:
  4736 ;;		_setMain_Exception
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function _getAll_Lights_Line
  4742  0F35                     _getAll_Lights_Line:	
  4743                           
  4744                           ;TriacRelay_B1.c: 237: char line = 0;
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4748  0F35  01F6               	clrf	getAll_Lights_Line@line
  4749                           
  4750                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  4751  0F36  3001               	movlw	1
  4752  0F37  158A  2708         	fcall	_LightsPointSelect
  4753                           
  4754                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  4755  0F39  0A78               	incf	_Lights,w
  4756  0F3A  0084               	movwf	4
  4757  0F3B  3000               	movlw	0
  4758  0F3C  1383               	bcf	3,7	;select IRP bank0
  4759  0F3D  1800               	btfsc	0,0
  4760  0F3E  3001               	movlw	1
  4761  0F3F  00F6               	movwf	getAll_Lights_Line@line
  4762                           
  4763                           ;TriacRelay_B1.c: 250: return line;
  4764  0F40  0876               	movf	getAll_Lights_Line@line,w
  4765  0F41  0008               	return
  4766  0F42                     __end_of_getAll_Lights_Line:	
  4767                           
  4768                           	psect	text21
  4769  066D                     __ptext21:	
  4770 ;; *************** function _getMain_All_Error_Status *****************
  4771 ;; Defined at:
  4772 ;;		line 365 in file "../src/Main_B1.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  command         1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  command         1    4[BANK0 ] unsigned char 
  4777 ;;  status          1    5[BANK0 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      unsigned char 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0, pclath, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4787 ;;      Params:         0       0       0       0
  4788 ;;      Locals:         0       6       0       0
  4789 ;;      Temps:          1       0       0       0
  4790 ;;      Totals:         1       6       0       0
  4791 ;;Total ram usage:        7 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    3
  4794 ;; This function calls:
  4795 ;;		_getCDS_Status
  4796 ;; This function is called by:
  4797 ;;		_setTemp_Main
  4798 ;;		_PIR_Main
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _getMain_All_Error_Status
  4804  066D                     _getMain_All_Error_Status:	
  4805                           
  4806                           ;incstack = 0
  4807                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  4808                           ;getMain_All_Error_Status@command stored from wreg
  4809  066D  1283               	bcf	3,5	;RP0=0, select bank0
  4810  066E  1303               	bcf	3,6	;RP1=0, select bank0
  4811  066F  00DA               	movwf	getMain_All_Error_Status@command
  4812                           
  4813                           ;Main_B1.c: 366: char status = 0;
  4814  0670  01DB               	clrf	getMain_All_Error_Status@status
  4815                           
  4816                           ;Main_B1.c: 377: if (status == 0 && command != 2) {
  4817  0671  08DB               	movf	getMain_All_Error_Status@status,f
  4818  0672  1D03               	skipz
  4819  0673  2E85               	goto	l2511
  4820  0674  085A               	movf	getMain_All_Error_Status@command,w
  4821  0675  3A02               	xorlw	2
  4822  0676  1903               	skipnz
  4823  0677  2E85               	goto	l2511
  4824                           
  4825                           ;Main_B1.c: 378: status = Temp.ERROR == 1 ? 2 : 0;
  4826  0678  18B7               	btfsc	_Temp,1
  4827  0679  2E7D               	goto	l2509
  4828  067A  01D6               	clrf	_getMain_All_Error_Status$2063
  4829  067B  01D7               	clrf	_getMain_All_Error_Status$2063+1
  4830  067C  2E81               	goto	l553
  4831  067D                     l2509:	
  4832  067D  3002               	movlw	2
  4833  067E  00D6               	movwf	_getMain_All_Error_Status$2063
  4834  067F  3000               	movlw	0
  4835  0680  00D7               	movwf	_getMain_All_Error_Status$2063+1
  4836  0681                     l553:	
  4837  0681  0856               	movf	_getMain_All_Error_Status$2063,w
  4838  0682  00F5               	movwf	??_getMain_All_Error_Status
  4839  0683  0875               	movf	??_getMain_All_Error_Status,w
  4840  0684  00DB               	movwf	getMain_All_Error_Status@status
  4841  0685                     l2511:	
  4842                           
  4843                           ;Main_B1.c: 379: }
  4844                           ;Main_B1.c: 398: if (status == 0 && command != 5) {
  4845  0685  08DB               	movf	getMain_All_Error_Status@status,f
  4846  0686  1D03               	skipz
  4847  0687  2EA1               	goto	l554
  4848  0688  085A               	movf	getMain_All_Error_Status@command,w
  4849  0689  3A05               	xorlw	5
  4850  068A  1903               	skipnz
  4851  068B  2EA1               	goto	l554
  4852                           
  4853                           ;Main_B1.c: 399: status = getCDS_Status() == 0 ? 5 : 0;
  4854  068C  158A  26F8  118A   	fcall	_getCDS_Status
  4855  068F  3A00               	xorlw	0
  4856  0690  1903               	skipnz
  4857  0691  2E97               	goto	l2519
  4858  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0694  01D8               	clrf	_getMain_All_Error_Status$2065
  4861  0695  01D9               	clrf	_getMain_All_Error_Status$2065+1
  4862  0696  2E9D               	goto	l558
  4863  0697                     l2519:	
  4864  0697  3005               	movlw	5
  4865  0698  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0699  1303               	bcf	3,6	;RP1=0, select bank0
  4867  069A  00D8               	movwf	_getMain_All_Error_Status$2065
  4868  069B  3000               	movlw	0
  4869  069C  00D9               	movwf	_getMain_All_Error_Status$2065+1
  4870  069D                     l558:	
  4871  069D  0858               	movf	_getMain_All_Error_Status$2065,w
  4872  069E  00F5               	movwf	??_getMain_All_Error_Status
  4873  069F  0875               	movf	??_getMain_All_Error_Status,w
  4874  06A0  00DB               	movwf	getMain_All_Error_Status@status
  4875  06A1                     l554:	
  4876                           
  4877                           ;Main_B1.c: 400: }
  4878                           ;Main_B1.c: 402: return status;
  4879  06A1  085B               	movf	getMain_All_Error_Status@status,w
  4880  06A2  0008               	return
  4881  06A3                     __end_of_getMain_All_Error_Status:	
  4882                           
  4883                           	psect	text22
  4884  0EF8                     __ptext22:	
  4885 ;; *************** function _getCDS_Status *****************
  4886 ;; Defined at:
  4887 ;;		line 40 in file "../src/CDS_B1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  status          1    4[COMMON] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      unsigned char 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4901 ;;      Params:         0       0       0       0
  4902 ;;      Locals:         1       0       0       0
  4903 ;;      Temps:          0       0       0       0
  4904 ;;      Totals:         1       0       0       0
  4905 ;;Total ram usage:        1 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    2
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_getMain_All_Error_Status
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _getCDS_Status
  4917  0EF8                     _getCDS_Status:	
  4918                           
  4919                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4923  0EF8  3000               	movlw	0
  4924  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0EFB  1A28               	btfsc	__CDS,4
  4927  0EFC  3001               	movlw	1
  4928  0EFD  00F4               	movwf	getCDS_Status@status
  4929                           
  4930                           ;CDS_B1.c: 42: return status;
  4931  0EFE  0874               	movf	getCDS_Status@status,w
  4932  0EFF  0008               	return
  4933  0F00                     __end_of_getCDS_Status:	
  4934                           
  4935                           	psect	text23
  4936  0FB1                     __ptext23:	
  4937 ;; *************** function _PIR_Initialization *****************
  4938 ;; Defined at:
  4939 ;;		line 7 in file "../src/PIR_B1.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;		None               void
  4946 ;; Registers used:
  4947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4953 ;;      Params:         0       0       0       0
  4954 ;;      Locals:         0       0       0       0
  4955 ;;      Temps:          0       1       0       0
  4956 ;;      Totals:         0       1       0       0
  4957 ;;Total ram usage:        1 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    4
  4960 ;; This function calls:
  4961 ;;		_setLED
  4962 ;; This function is called by:
  4963 ;;		_main
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           
  4968                           ;psect for function _PIR_Initialization
  4969  0FB1                     _PIR_Initialization:	
  4970                           
  4971                           ;PIR_B1.c: 8: setLED(1, 1);
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4975  0FB1  01F6               	clrf	setLED@command
  4976  0FB2  0AF6               	incf	setLED@command,f
  4977  0FB3  3001               	movlw	1
  4978  0FB4  118A  23B2         	fcall	_setLED
  4979                           
  4980                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  4981  0FB6  300F               	movlw	15
  4982  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  4983  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  4984  0FB9  00D7               	movwf	??_PIR_Initialization
  4985  0FBA  0857               	movf	??_PIR_Initialization,w
  4986  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  4988  0FBD  00CC               	movwf	(__PIR^(0+128)+44)
  4989                           
  4990                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  4991  0FBE  3005               	movlw	5
  4992  0FBF  00C7               	movwf	(__PIR^(0+128)+39)
  4993  0FC0  3000               	movlw	0
  4994  0FC1  00C8               	movwf	(__PIR^(0+128)+40)
  4995  0FC2  0008               	return
  4996  0FC3                     __end_of_PIR_Initialization:	
  4997                           
  4998                           	psect	text24
  4999  0F5E                     __ptext24:	
  5000 ;; *************** function _Mcu_Initialization *****************
  5001 ;; Defined at:
  5002 ;;		line 30 in file "../src/MCU_B1.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5016 ;;      Params:         0       0       0       0
  5017 ;;      Locals:         0       0       0       0
  5018 ;;      Temps:          0       0       0       0
  5019 ;;      Totals:         0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    3
  5023 ;; This function calls:
  5024 ;;		_ADC_Set
  5025 ;;		_Fosc_Set
  5026 ;;		_IO_Set
  5027 ;;		_TMR1_Set
  5028 ;;		_WDT_Set
  5029 ;; This function is called by:
  5030 ;;		_main
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _Mcu_Initialization
  5036  0F5E                     _Mcu_Initialization:	
  5037                           
  5038                           ;MCU_B1.c: 32: Fosc_Set();
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5042  0F5E  158A  26E6  158A   	fcall	_Fosc_Set
  5043                           
  5044                           ;MCU_B1.c: 34: IO_Set();
  5045  0F61  118A  27EB  158A   	fcall	_IO_Set
  5046                           
  5047                           ;MCU_B1.c: 36: ;;
  5048                           ;MCU_B1.c: 38: TMR1_Set();
  5049  0F64  158A  2742  158A   	fcall	_TMR1_Set
  5050                           
  5051                           ;MCU_B1.c: 40: ADC_Set();
  5052  0F67  158A  26F1  158A   	fcall	_ADC_Set
  5053                           
  5054                           ;MCU_B1.c: 42: ;;
  5055                           ;MCU_B1.c: 44: ;;
  5056                           ;MCU_B1.c: 46: ;;
  5057                           ;MCU_B1.c: 48: ;;
  5058                           ;MCU_B1.c: 50: ;;
  5059                           ;MCU_B1.c: 52: WDT_Set();
  5060  0F6A  158A  2750         	fcall	_WDT_Set
  5061  0F6C  0008               	return
  5062  0F6D                     __end_of_Mcu_Initialization:	
  5063                           
  5064                           	psect	text25
  5065  0F50                     __ptext25:	
  5066 ;; *************** function _WDT_Set *****************
  5067 ;; Defined at:
  5068 ;;		line 1019 in file "../src/MCU_B1.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;		None               void
  5075 ;; Registers used:
  5076 ;;		wreg
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5082 ;;      Params:         0       0       0       0
  5083 ;;      Locals:         0       0       0       0
  5084 ;;      Temps:          1       0       0       0
  5085 ;;      Totals:         1       0       0       0
  5086 ;;Total ram usage:        1 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    2
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_Mcu_Initialization
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _WDT_Set
  5098  0F50                     _WDT_Set:	
  5099                           
  5100                           ;MCU_B1.c: 1021: PSA = 1;
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _WDT_Set: [wreg]
  5104  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  5105  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  5106  0F52  1581               	bsf	1,3	;volatile
  5107                           
  5108                           ;MCU_B1.c: 1022: PS0 = 1;
  5109  0F53  1401               	bsf	1,0	;volatile
  5110                           
  5111                           ;MCU_B1.c: 1023: PS1 = 1;
  5112  0F54  1481               	bsf	1,1	;volatile
  5113                           
  5114                           ;MCU_B1.c: 1024: PS2 = 1;
  5115  0F55  1501               	bsf	1,2	;volatile
  5116                           
  5117                           ;MCU_B1.c: 1028: WDT.Enable = 1;
  5118  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0F58  1434               	bsf	_WDT,0
  5121                           
  5122                           ;MCU_B1.c: 1029: WDT.Timer = 10;
  5123  0F59  300A               	movlw	10
  5124  0F5A  00F4               	movwf	??_WDT_Set
  5125  0F5B  0874               	movf	??_WDT_Set,w
  5126  0F5C  00B5               	movwf	_WDT+1
  5127  0F5D  0008               	return
  5128  0F5E                     __end_of_WDT_Set:	
  5129                           
  5130                           	psect	text26
  5131  0F42                     __ptext26:	
  5132 ;; *************** function _TMR1_Set *****************
  5133 ;; Defined at:
  5134 ;;		line 199 in file "../src/MCU_B1.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;		None               void
  5141 ;; Registers used:
  5142 ;;		wreg
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5148 ;;      Params:         0       0       0       0
  5149 ;;      Locals:         0       0       0       0
  5150 ;;      Temps:          0       0       0       0
  5151 ;;      Totals:         0       0       0       0
  5152 ;;Total ram usage:        0 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    2
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_Mcu_Initialization
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           
  5163                           ;psect for function _TMR1_Set
  5164  0F42                     _TMR1_Set:	
  5165                           
  5166                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5167                           
  5168                           ;incstack = 0
  5169                           ; Regs used in _TMR1_Set: [wreg]
  5170  0F42  3041               	movlw	65
  5171  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0F45  0090               	movwf	16	;volatile
  5174                           
  5175                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5176  0F46  30FA               	movlw	250
  5177  0F47  008F               	movwf	15	;volatile
  5178                           
  5179                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5180  0F48  3038               	movlw	56
  5181  0F49  008E               	movwf	14	;volatile
  5182                           
  5183                           ;MCU_B1.c: 203: TMR1IE = 1;
  5184  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  5185  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  5186  0F4C  140C               	bsf	12,0	;volatile
  5187                           
  5188                           ;MCU_B1.c: 204: PEIE = 1;
  5189  0F4D  170B               	bsf	11,6	;volatile
  5190                           
  5191                           ;MCU_B1.c: 205: GIE = 1;
  5192  0F4E  178B               	bsf	11,7	;volatile
  5193  0F4F  0008               	return
  5194  0F50                     __end_of_TMR1_Set:	
  5195                           
  5196                           	psect	text27
  5197  07EB                     __ptext27:	
  5198 ;; *************** function _IO_Set *****************
  5199 ;; Defined at:
  5200 ;;		line 60 in file "../src/MCU_B1.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;		None               void
  5207 ;; Registers used:
  5208 ;;		wreg, status,2
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5214 ;;      Params:         0       0       0       0
  5215 ;;      Locals:         0       0       0       0
  5216 ;;      Temps:          0       0       0       0
  5217 ;;      Totals:         0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    2
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_Mcu_Initialization
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _IO_Set
  5230  07EB                     _IO_Set:	
  5231                           
  5232                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _IO_Set: [wreg+status,2]
  5236  07EB  302F               	movlw	47
  5237  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  5238  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  5239  07EE  0085               	movwf	5	;volatile
  5240                           
  5241                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5242  07EF  3001               	movlw	1
  5243  07F0  0086               	movwf	6	;volatile
  5244                           
  5245                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5246  07F1  0187               	clrf	7	;volatile
  5247                           
  5248                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5249  07F2  3007               	movlw	7
  5250  07F3  1683               	bsf	3,5	;RP0=1, select bank3
  5251  07F4  1703               	bsf	3,6	;RP1=1, select bank3
  5252  07F5  0085               	movwf	5	;volatile
  5253                           
  5254                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5255  07F6  3001               	movlw	1
  5256  07F7  0086               	movwf	6	;volatile
  5257                           
  5258                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5259  07F8  30AF               	movlw	175
  5260  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  5261  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  5262  07FB  0085               	movwf	5	;volatile
  5263                           
  5264                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5265  07FC  3001               	movlw	1
  5266  07FD  0086               	movwf	6	;volatile
  5267                           
  5268                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5269  07FE  0187               	clrf	7	;volatile
  5270  07FF  0008               	return
  5271  0800                     __end_of_IO_Set:	
  5272                           
  5273                           	psect	text28
  5274  0EE6                     __ptext28:	
  5275 ;; *************** function _Fosc_Set *****************
  5276 ;; Defined at:
  5277 ;;		line 56 in file "../src/MCU_B1.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;		None               void
  5284 ;; Registers used:
  5285 ;;		wreg
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5291 ;;      Params:         0       0       0       0
  5292 ;;      Locals:         0       0       0       0
  5293 ;;      Temps:          0       0       0       0
  5294 ;;      Totals:         0       0       0       0
  5295 ;;Total ram usage:        0 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    2
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_Mcu_Initialization
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _Fosc_Set
  5307  0EE6                     _Fosc_Set:	
  5308                           
  5309                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in _Fosc_Set: [wreg]
  5313  0EE6  303C               	movlw	60
  5314  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  5315  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  5316  0EE9  0090               	movwf	16	;volatile
  5317  0EEA  0008               	return
  5318  0EEB                     __end_of_Fosc_Set:	
  5319                           
  5320                           	psect	text29
  5321  0EF1                     __ptext29:	
  5322 ;; *************** function _ADC_Set *****************
  5323 ;; Defined at:
  5324 ;;		line 420 in file "../src/MCU_B1.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;		None               void
  5331 ;; Registers used:
  5332 ;;		wreg
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5338 ;;      Params:         0       0       0       0
  5339 ;;      Locals:         0       0       0       0
  5340 ;;      Temps:          0       0       0       0
  5341 ;;      Totals:         0       0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_Mcu_Initialization
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _ADC_Set
  5354  0EF1                     _ADC_Set:	
  5355                           
  5356                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _ADC_Set: [wreg]
  5360  0EF1  3073               	movlw	115
  5361  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  5362  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  5363  0EF4  009F               	movwf	31	;volatile
  5364                           
  5365                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5366  0EF5  30C1               	movlw	193
  5367  0EF6  009D               	movwf	29	;volatile
  5368  0EF7  0008               	return
  5369  0EF8                     __end_of_ADC_Set:	
  5370                           
  5371                           	psect	text30
  5372  0F12                     __ptext30:	
  5373 ;; *************** function _Lights_Main *****************
  5374 ;; Defined at:
  5375 ;;		line 54 in file "../src/TriacRelay_B1.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5389 ;;      Params:         0       0       0       0
  5390 ;;      Locals:         0       0       0       0
  5391 ;;      Temps:          0       0       0       0
  5392 ;;      Totals:         0       0       0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    6
  5396 ;; This function calls:
  5397 ;;		_Lights_Close
  5398 ;;		_Lights_Control
  5399 ;;		_setLights_Main
  5400 ;; This function is called by:
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _Lights_Main
  5407  0F12                     _Lights_Main:	
  5408                           
  5409                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5413  0F12  3001               	movlw	1
  5414  0F13  118A  2731  158A   	fcall	_setLights_Main
  5415                           
  5416                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  5417  0F16  3001               	movlw	1
  5418  0F17  118A  24F5  158A   	fcall	_Lights_Control
  5419                           
  5420                           ;TriacRelay_B1.c: 81: Lights_Close();
  5421  0F1A  158A  27EB         	fcall	_Lights_Close
  5422  0F1C  0008               	return
  5423  0F1D                     __end_of_Lights_Main:	
  5424                           
  5425                           	psect	text31
  5426  0731                     __ptext31:	
  5427 ;; *************** function _setLights_Main *****************
  5428 ;; Defined at:
  5429 ;;		line 93 in file "../src/TriacRelay_B1.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  lights          1    wreg     unsigned char 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  lights          1    3[BANK0 ] unsigned char 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;		None               void
  5436 ;; Registers used:
  5437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5443 ;;      Params:         0       0       0       0
  5444 ;;      Locals:         0       1       0       0
  5445 ;;      Temps:          0       0       0       0
  5446 ;;      Totals:         0       1       0       0
  5447 ;;Total ram usage:        1 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    5
  5450 ;; This function calls:
  5451 ;;		_LightsPointSelect
  5452 ;;		_setLights
  5453 ;; This function is called by:
  5454 ;;		_Lights_Main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function _setLights_Main
  5460  0731                     _setLights_Main:	
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5464                           ;setLights_Main@lights stored from wreg
  5465  0731  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0732  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0733  00D9               	movwf	setLights_Main@lights
  5468                           
  5469                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  5470  0734  0859               	movf	setLights_Main@lights,w
  5471  0735  158A  2708  118A   	fcall	_LightsPointSelect
  5472                           
  5473                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  5474  0738  0878               	movf	_Lights,w
  5475  0739  0084               	movwf	4
  5476  073A  1383               	bcf	3,7	;select IRP bank0
  5477  073B  1880               	btfsc	0,1
  5478  073C  0008               	return
  5479                           
  5480                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  5481  073D  0878               	movf	_Lights,w
  5482  073E  0084               	movwf	4
  5483  073F  1D80               	btfss	0,3
  5484  0740  0008               	return
  5485                           
  5486                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  5487  0741  1283               	bcf	3,5	;RP0=0, select bank0
  5488  0742  1303               	bcf	3,6	;RP1=0, select bank0
  5489  0743  1936               	btfsc	_LightsControl,2
  5490  0744  0008               	return
  5491                           
  5492                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  5493  0745  0878               	movf	_Lights,w
  5494  0746  0084               	movwf	4
  5495  0747  1180               	bcf	0,3
  5496                           
  5497                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  5498  0748  0878               	movf	_Lights,w
  5499  0749  0084               	movwf	4
  5500  074A  1E00               	btfss	0,4
  5501  074B  2F52               	goto	l3595
  5502                           
  5503                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  5504  074C  01D6               	clrf	setLights@status
  5505  074D  0AD6               	incf	setLights@status,f
  5506  074E  0859               	movf	setLights_Main@lights,w
  5507  074F  118A  259D         	fcall	_setLights
  5508                           
  5509                           ;TriacRelay_B1.c: 102: } else {
  5510  0751  0008               	return
  5511  0752                     l3595:	
  5512                           
  5513                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  5514  0752  1283               	bcf	3,5	;RP0=0, select bank0
  5515  0753  1303               	bcf	3,6	;RP1=0, select bank0
  5516  0754  01D6               	clrf	setLights@status
  5517  0755  0859               	movf	setLights_Main@lights,w
  5518  0756  118A  259D         	fcall	_setLights
  5519  0758  0008               	return
  5520  0759                     __end_of_setLights_Main:	
  5521                           
  5522                           	psect	text32
  5523  059D                     __ptext32:	
  5524 ;; *************** function _setLights *****************
  5525 ;; Defined at:
  5526 ;;		line 111 in file "../src/TriacRelay_B1.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  lights          1    wreg     unsigned char 
  5529 ;;  status          1    0[BANK0 ] unsigned char 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  lights          1    2[BANK0 ] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;		None               void
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5541 ;;      Params:         0       1       0       0
  5542 ;;      Locals:         0       1       0       0
  5543 ;;      Temps:          0       1       0       0
  5544 ;;      Totals:         0       3       0       0
  5545 ;;Total ram usage:        3 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    4
  5548 ;; This function calls:
  5549 ;;		_LightsPointSelect
  5550 ;;		_setLights_Line
  5551 ;; This function is called by:
  5552 ;;		_setLights_Main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function _setLights
  5558  059D                     _setLights:	
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5562                           ;setLights@lights stored from wreg
  5563  059D  1283               	bcf	3,5	;RP0=0, select bank0
  5564  059E  1303               	bcf	3,6	;RP1=0, select bank0
  5565  059F  00D8               	movwf	setLights@lights
  5566                           
  5567                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  5568  05A0  0858               	movf	setLights@lights,w
  5569  05A1  158A  2708  118A   	fcall	_LightsPointSelect
  5570                           
  5571                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  5572  05A4  0878               	movf	_Lights,w
  5573  05A5  0084               	movwf	4
  5574  05A6  1383               	bcf	3,7	;select IRP bank0
  5575  05A7  1480               	bsf	0,1
  5576                           
  5577                           ;TriacRelay_B1.c: 121: if (status == 1) {
  5578  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  5579  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  5580  05AA  0856               	movf	setLights@status,w
  5581  05AB  3A01               	xorlw	1
  5582  05AC  1D03               	skipz
  5583  05AD  2DCB               	goto	l3403
  5584                           
  5585                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  5586  05AE  0878               	movf	_Lights,w
  5587  05AF  0084               	movwf	4
  5588  05B0  1900               	btfsc	0,2
  5589  05B1  2DE6               	goto	l3407
  5590                           
  5591                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  5592  05B2  0878               	movf	_Lights,w
  5593  05B3  0084               	movwf	4
  5594  05B4  1500               	bsf	0,2
  5595                           
  5596                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  5597  05B5  0A78               	incf	_Lights,w
  5598  05B6  0084               	movwf	4
  5599  05B7  1480               	bsf	0,1
  5600                           
  5601                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  5602  05B8  300A               	movlw	10
  5603  05B9  00D7               	movwf	??_setLights
  5604  05BA  0878               	movf	_Lights,w
  5605  05BB  3E06               	addlw	6
  5606  05BC  0084               	movwf	4
  5607  05BD  0857               	movf	??_setLights,w
  5608  05BE  0080               	movwf	0
  5609                           
  5610                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  5611  05BF  300D               	movlw	13
  5612  05C0  00D7               	movwf	??_setLights
  5613  05C1  0878               	movf	_Lights,w
  5614  05C2  3E04               	addlw	4
  5615  05C3  0084               	movwf	4
  5616  05C4  0857               	movf	??_setLights,w
  5617  05C5  0080               	movwf	0
  5618                           
  5619                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  5620  05C6  0858               	movf	setLights@lights,w
  5621  05C7  158A  2729  118A   	fcall	_setLights_Line
  5622                           
  5623                           ;TriacRelay_B1.c: 128: }
  5624                           ;TriacRelay_B1.c: 129: } else {
  5625  05CA  2DE6               	goto	l3407
  5626  05CB                     l3403:	
  5627                           
  5628                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  5629  05CB  0878               	movf	_Lights,w
  5630  05CC  0084               	movwf	4
  5631  05CD  1383               	bcf	3,7	;select IRP bank0
  5632  05CE  1D00               	btfss	0,2
  5633  05CF  2DE6               	goto	l3407
  5634                           
  5635                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  5636  05D0  0878               	movf	_Lights,w
  5637  05D1  0084               	movwf	4
  5638  05D2  1100               	bcf	0,2
  5639                           
  5640                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  5641  05D3  0A78               	incf	_Lights,w
  5642  05D4  0084               	movwf	4
  5643  05D5  1080               	bcf	0,1
  5644                           
  5645                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  5646  05D6  3004               	movlw	4
  5647  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  5648  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  5649  05D9  00D7               	movwf	??_setLights
  5650  05DA  0878               	movf	_Lights,w
  5651  05DB  3E06               	addlw	6
  5652  05DC  0084               	movwf	4
  5653  05DD  0857               	movf	??_setLights,w
  5654  05DE  0080               	movwf	0
  5655                           
  5656                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  5657  05DF  3007               	movlw	7
  5658  05E0  00D7               	movwf	??_setLights
  5659  05E1  0878               	movf	_Lights,w
  5660  05E2  3E04               	addlw	4
  5661  05E3  0084               	movwf	4
  5662  05E4  0857               	movf	??_setLights,w
  5663  05E5  0080               	movwf	0
  5664  05E6                     l3407:	
  5665                           
  5666                           ;TriacRelay_B1.c: 135: }
  5667                           ;TriacRelay_B1.c: 136: }
  5668                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  5669  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5670  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5671  05E8  0858               	movf	setLights@lights,w
  5672  05E9  3A01               	xorlw	1
  5673  05EA  1D03               	skipz
  5674  05EB  0008               	return
  5675                           
  5676                           ;TriacRelay_B1.c: 139: RB2 = 1;
  5677  05EC  1506               	bsf	6,2	;volatile
  5678  05ED  0008               	return
  5679  05EE                     __end_of_setLights:	
  5680                           
  5681                           	psect	text33
  5682  0F29                     __ptext33:	
  5683 ;; *************** function _setLights_Line *****************
  5684 ;; Defined at:
  5685 ;;		line 221 in file "../src/TriacRelay_B1.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  lights          1    wreg     unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  lights          1    6[COMMON] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;		None               void
  5692 ;; Registers used:
  5693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5699 ;;      Params:         0       0       0       0
  5700 ;;      Locals:         1       0       0       0
  5701 ;;      Temps:          0       0       0       0
  5702 ;;      Totals:         1       0       0       0
  5703 ;;Total ram usage:        1 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    3
  5706 ;; This function calls:
  5707 ;;		_LightsPointSelect
  5708 ;; This function is called by:
  5709 ;;		_setLights
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _setLights_Line
  5715  0F29                     _setLights_Line:	
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5719                           ;setLights_Line@lights stored from wreg
  5720  0F29  00F6               	movwf	setLights_Line@lights
  5721                           
  5722                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  5723  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5724  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  5725  0F2C  1044               	bcf	_Lights1+1,0
  5726                           
  5727                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  5728  0F2D  0876               	movf	setLights_Line@lights,w
  5729  0F2E  158A  2708         	fcall	_LightsPointSelect
  5730                           
  5731                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  5732  0F30  0A78               	incf	_Lights,w
  5733  0F31  0084               	movwf	4
  5734  0F32  1383               	bcf	3,7	;select IRP bank0
  5735  0F33  1400               	bsf	0,0
  5736  0F34  0008               	return
  5737  0F35                     __end_of_setLights_Line:	
  5738                           
  5739                           	psect	text34
  5740  04F5                     __ptext34:	
  5741 ;; *************** function _Lights_Control *****************
  5742 ;; Defined at:
  5743 ;;		line 155 in file "../src/TriacRelay_B1.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  lights          1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  lights          1    6[COMMON] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5757 ;;      Params:         0       0       0       0
  5758 ;;      Locals:         1       0       0       0
  5759 ;;      Temps:          0       2       0       0
  5760 ;;      Totals:         1       2       0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    3
  5764 ;; This function calls:
  5765 ;;		_LightsPointSelect
  5766 ;; This function is called by:
  5767 ;;		_Lights_Main
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function _Lights_Control
  5773  04F5                     _Lights_Control:	
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5777                           ;Lights_Control@lights stored from wreg
  5778  04F5  00F6               	movwf	Lights_Control@lights
  5779                           
  5780                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  5781  04F6  0876               	movf	Lights_Control@lights,w
  5782  04F7  158A  2708  118A   	fcall	_LightsPointSelect
  5783                           
  5784                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  5785  04FA  0878               	movf	_Lights,w
  5786  04FB  0084               	movwf	4
  5787  04FC  1383               	bcf	3,7	;select IRP bank0
  5788  04FD  1C80               	btfss	0,1
  5789  04FE  0008               	return
  5790                           
  5791                           ;TriacRelay_B1.c: 158: Lights->Time++;
  5792  04FF  3001               	movlw	1
  5793  0500  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0501  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0502  00D6               	movwf	??_Lights_Control
  5796  0503  0878               	movf	_Lights,w
  5797  0504  3E02               	addlw	2
  5798  0505  0084               	movwf	4
  5799  0506  0856               	movf	??_Lights_Control,w
  5800  0507  0780               	addwf	0,f
  5801                           
  5802                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5803  0508  0878               	movf	_Lights,w
  5804  0509  3E06               	addlw	6
  5805  050A  0084               	movwf	4
  5806  050B  0800               	movf	0,w
  5807  050C  00D6               	movwf	??_Lights_Control
  5808  050D  0878               	movf	_Lights,w
  5809  050E  3E02               	addlw	2
  5810  050F  0084               	movwf	4
  5811  0510  0800               	movf	0,w
  5812  0511  00D7               	movwf	??_Lights_Control+1
  5813  0512  0856               	movf	??_Lights_Control,w
  5814  0513  0257               	subwf	??_Lights_Control+1,w
  5815  0514  1C03               	skipc
  5816  0515  2D2D               	goto	l3613
  5817  0516  0878               	movf	_Lights,w
  5818  0517  0084               	movwf	4
  5819  0518  1B80               	btfsc	0,7
  5820  0519  2D2D               	goto	l3613
  5821                           
  5822                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  5823  051A  0878               	movf	_Lights,w
  5824  051B  0084               	movwf	4
  5825  051C  1780               	bsf	0,7
  5826                           
  5827                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  5828  051D  0876               	movf	Lights_Control@lights,w
  5829  051E  3A01               	xorlw	1
  5830  051F  1D03               	skipz
  5831  0520  0008               	return
  5832                           
  5833                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  5834  0521  0878               	movf	_Lights,w
  5835  0522  0084               	movwf	4
  5836  0523  1D00               	btfss	0,2
  5837  0524  2D29               	goto	u4020
  5838  0525  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0526  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0527  1605               	bsf	5,4	;volatile
  5841  0528  0008               	return
  5842  0529                     u4020:	
  5843  0529  1283               	bcf	3,5	;RP0=0, select bank0
  5844  052A  1303               	bcf	3,6	;RP1=0, select bank0
  5845  052B  1205               	bcf	5,4	;volatile
  5846                           
  5847                           ;TriacRelay_B1.c: 164: }
  5848                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  5849  052C  0008               	return
  5850  052D                     l3613:	
  5851  052D  0878               	movf	_Lights,w
  5852  052E  3E04               	addlw	4
  5853  052F  0084               	movwf	4
  5854  0530  1383               	bcf	3,7	;select IRP bank0
  5855  0531  0800               	movf	0,w
  5856  0532  00D6               	movwf	??_Lights_Control
  5857  0533  0878               	movf	_Lights,w
  5858  0534  3E02               	addlw	2
  5859  0535  0084               	movwf	4
  5860  0536  0800               	movf	0,w
  5861  0537  00D7               	movwf	??_Lights_Control+1
  5862  0538  0856               	movf	??_Lights_Control,w
  5863  0539  0257               	subwf	??_Lights_Control+1,w
  5864  053A  1C03               	skipc
  5865  053B  0008               	return
  5866                           
  5867                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  5868  053C  0878               	movf	_Lights,w
  5869  053D  3E02               	addlw	2
  5870  053E  0084               	movwf	4
  5871  053F  0180               	clrf	0
  5872                           
  5873                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  5874  0540  0878               	movf	_Lights,w
  5875  0541  0084               	movwf	4
  5876  0542  1080               	bcf	0,1
  5877                           
  5878                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  5879  0543  0878               	movf	_Lights,w
  5880  0544  0084               	movwf	4
  5881  0545  1380               	bcf	0,7
  5882                           
  5883                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  5884  0546  0876               	movf	Lights_Control@lights,w
  5885  0547  3A01               	xorlw	1
  5886  0548  1D03               	skipz
  5887  0549  0008               	return
  5888                           
  5889                           ;TriacRelay_B1.c: 188: RB2 = 0;
  5890  054A  1106               	bcf	6,2	;volatile
  5891  054B  0008               	return
  5892  054C                     __end_of_Lights_Control:	
  5893                           
  5894                           	psect	text35
  5895  0FEB                     __ptext35:	
  5896 ;; *************** function _Lights_Close *****************
  5897 ;; Defined at:
  5898 ;;		line 85 in file "../src/TriacRelay_B1.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;		None               void
  5905 ;; Registers used:
  5906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5912 ;;      Params:         0       0       0       0
  5913 ;;      Locals:         0       0       0       0
  5914 ;;      Temps:          0       1       0       0
  5915 ;;      Totals:         0       1       0       0
  5916 ;;Total ram usage:        1 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    5
  5919 ;; This function calls:
  5920 ;;		_getMain_LightsStatus
  5921 ;; This function is called by:
  5922 ;;		_Lights_Main
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function _Lights_Close
  5928  0FEB                     _Lights_Close:	
  5929                           
  5930                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  5931                           
  5932                           ;incstack = 0
  5933                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5934  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  5935  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  5936  0FED  1C36               	btfss	_LightsControl,0
  5937  0FEE  0008               	return
  5938                           
  5939                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  5940  0FEF  1036               	bcf	_LightsControl,0
  5941                           
  5942                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  5943  0FF0  118A  26D7         	fcall	_getMain_LightsStatus
  5944  0FF2  3800               	iorlw	0
  5945  0FF3  3000               	movlw	0
  5946  0FF4  1D03               	skipz
  5947  0FF5  3001               	movlw	1
  5948  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5950  0FF8  00DC               	movwf	??_Lights_Close
  5951  0FF9  0DDC               	rlf	??_Lights_Close,f
  5952  0FFA  0836               	movf	_LightsControl,w
  5953  0FFB  065C               	xorwf	??_Lights_Close,w
  5954  0FFC  39FD               	andlw	-3
  5955  0FFD  065C               	xorwf	??_Lights_Close,w
  5956  0FFE  00B6               	movwf	_LightsControl
  5957  0FFF  0008               	return
  5958  1000                     __end_of_Lights_Close:	
  5959                           
  5960                           	psect	text36
  5961  06D7                     __ptext36:	
  5962 ;; *************** function _getMain_LightsStatus *****************
  5963 ;; Defined at:
  5964 ;;		line 338 in file "../src/Main_B1.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  i               2    3[BANK0 ] int 
  5969 ;;  status          1    5[BANK0 ] unsigned char 
  5970 ;;  count           1    2[BANK0 ] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5980 ;;      Params:         0       0       0       0
  5981 ;;      Locals:         0       4       0       0
  5982 ;;      Temps:          1       0       0       0
  5983 ;;      Totals:         1       4       0       0
  5984 ;;Total ram usage:        5 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    4
  5987 ;; This function calls:
  5988 ;;		_getLights_Status
  5989 ;; This function is called by:
  5990 ;;		_setTemp_Main
  5991 ;;		_Lights_Close
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function _getMain_LightsStatus
  5997  06D7                     _getMain_LightsStatus:	
  5998                           
  5999                           ;Main_B1.c: 339: char status = 0;
  6000                           
  6001                           ;incstack = 0
  6002                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6003  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  6004  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  6005  06D9  01DB               	clrf	getMain_LightsStatus@status
  6006                           
  6007                           ;Main_B1.c: 342: char count = 1;
  6008  06DA  01D8               	clrf	getMain_LightsStatus@count
  6009  06DB  0AD8               	incf	getMain_LightsStatus@count,f
  6010                           
  6011                           ;Main_B1.c: 351: for (int i = 0; i < count; i++) {
  6012  06DC  01D9               	clrf	getMain_LightsStatus@i
  6013  06DD  01DA               	clrf	getMain_LightsStatus@i+1
  6014  06DE                     l3385:	
  6015  06DE  085A               	movf	getMain_LightsStatus@i+1,w
  6016  06DF  3A80               	xorlw	128
  6017  06E0  00F6               	movwf	??_getMain_LightsStatus
  6018  06E1  3080               	movlw	128
  6019  06E2  0276               	subwf	??_getMain_LightsStatus,w
  6020  06E3  1D03               	skipz
  6021  06E4  2EE7               	goto	u3505
  6022  06E5  0858               	movf	getMain_LightsStatus@count,w
  6023  06E6  0259               	subwf	getMain_LightsStatus@i,w
  6024  06E7                     u3505:	
  6025  06E7  1803               	btfsc	3,0
  6026  06E8  2F03               	goto	l3387
  6027                           
  6028                           ;Main_B1.c: 352: if (status == 0) {
  6029  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6030  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6031  06EB  08DB               	movf	getMain_LightsStatus@status,f
  6032  06EC  1D03               	skipz
  6033  06ED  2EFC               	goto	l3383
  6034                           
  6035                           ;Main_B1.c: 354: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  6036  06EE  0859               	movf	getMain_LightsStatus@i,w
  6037  06EF  3E01               	addlw	1
  6038  06F0  158A  277D  118A   	fcall	_getLights_Status
  6039  06F3  3A01               	xorlw	1
  6040  06F4  3000               	movlw	0
  6041  06F5  1903               	skipnz
  6042  06F6  3001               	movlw	1
  6043  06F7  00F6               	movwf	??_getMain_LightsStatus
  6044  06F8  0876               	movf	??_getMain_LightsStatus,w
  6045  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  6046  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  6047  06FB  00DB               	movwf	getMain_LightsStatus@status
  6048  06FC                     l3383:	
  6049  06FC  3001               	movlw	1
  6050  06FD  07D9               	addwf	getMain_LightsStatus@i,f
  6051  06FE  1803               	skipnc
  6052  06FF  0ADA               	incf	getMain_LightsStatus@i+1,f
  6053  0700  3000               	movlw	0
  6054  0701  07DA               	addwf	getMain_LightsStatus@i+1,f
  6055  0702  2EDE               	goto	l3385
  6056  0703                     l3387:	
  6057                           
  6058                           ;Main_B1.c: 359: }
  6059                           ;Main_B1.c: 360: }
  6060                           ;Main_B1.c: 361: return status;
  6061  0703  1283               	bcf	3,5	;RP0=0, select bank0
  6062  0704  1303               	bcf	3,6	;RP1=0, select bank0
  6063  0705  085B               	movf	getMain_LightsStatus@status,w
  6064  0706  0008               	return
  6065  0707                     __end_of_getMain_LightsStatus:	
  6066                           
  6067                           	psect	text37
  6068  0F7D                     __ptext37:	
  6069 ;; *************** function _getLights_Status *****************
  6070 ;; Defined at:
  6071 ;;		line 207 in file "../src/TriacRelay_B1.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  lights          1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  lights          1    0[BANK0 ] unsigned char 
  6076 ;;  status          1    1[BANK0 ] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      unsigned char 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6086 ;;      Params:         0       0       0       0
  6087 ;;      Locals:         0       2       0       0
  6088 ;;      Temps:          0       0       0       0
  6089 ;;      Totals:         0       2       0       0
  6090 ;;Total ram usage:        2 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    3
  6093 ;; This function calls:
  6094 ;;		_LightsPointSelect
  6095 ;; This function is called by:
  6096 ;;		_getMain_LightsStatus
  6097 ;;		_PIR_Main
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function _getLights_Status
  6103  0F7D                     _getLights_Status:	
  6104                           
  6105                           ;incstack = 0
  6106                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6107                           ;getLights_Status@lights stored from wreg
  6108  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  6109  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  6110  0F7F  00D6               	movwf	getLights_Status@lights
  6111                           
  6112                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  6113  0F80  0856               	movf	getLights_Status@lights,w
  6114  0F81  158A  2708         	fcall	_LightsPointSelect
  6115                           
  6116                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  6117  0F83  0878               	movf	_Lights,w
  6118  0F84  0084               	movwf	4
  6119  0F85  3000               	movlw	0
  6120  0F86  1383               	bcf	3,7	;select IRP bank0
  6121  0F87  1900               	btfsc	0,2
  6122  0F88  3001               	movlw	1
  6123  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0F8B  00D7               	movwf	getLights_Status@status
  6126                           
  6127                           ;TriacRelay_B1.c: 210: return status;
  6128  0F8C  0857               	movf	getLights_Status@status,w
  6129  0F8D  0008               	return
  6130  0F8E                     __end_of_getLights_Status:	
  6131                           
  6132                           	psect	text38
  6133  0EDD                     __ptext38:	
  6134 ;; *************** function _Lights_Initialization *****************
  6135 ;; Defined at:
  6136 ;;		line 34 in file "../src/TriacRelay_B1.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;		None
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;		None
  6141 ;; Return value:  Size  Location     Type
  6142 ;;		None               void
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0, pclath, cstack
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6150 ;;      Params:         0       0       0       0
  6151 ;;      Locals:         0       0       0       0
  6152 ;;      Temps:          0       0       0       0
  6153 ;;      Totals:         0       0       0       0
  6154 ;;Total ram usage:        0 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    4
  6157 ;; This function calls:
  6158 ;;		_setLights_Initialization
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           
  6165                           ;psect for function _Lights_Initialization
  6166  0EDD                     _Lights_Initialization:	
  6167                           
  6168                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  6169                           
  6170                           ;incstack = 0
  6171                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6172  0EDD  3001               	movlw	1
  6173  0EDE  158A  26E1         	fcall	_setLights_Initialization
  6174  0EE0  0008               	return
  6175  0EE1                     __end_of_Lights_Initialization:	
  6176                           
  6177                           	psect	text39
  6178  0EE1                     __ptext39:	
  6179 ;; *************** function _setLights_Initialization *****************
  6180 ;; Defined at:
  6181 ;;		line 49 in file "../src/TriacRelay_B1.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  lights          1    wreg     unsigned char 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  lights          1    6[COMMON] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;		None               void
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0, pclath, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6195 ;;      Params:         0       0       0       0
  6196 ;;      Locals:         1       0       0       0
  6197 ;;      Temps:          0       0       0       0
  6198 ;;      Totals:         1       0       0       0
  6199 ;;Total ram usage:        1 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    3
  6202 ;; This function calls:
  6203 ;;		_LightsPointSelect
  6204 ;; This function is called by:
  6205 ;;		_Lights_Initialization
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _setLights_Initialization
  6211  0EE1                     _setLights_Initialization:	
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6215                           ;setLights_Initialization@lights stored from wreg
  6216  0EE1  00F6               	movwf	setLights_Initialization@lights
  6217                           
  6218                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6219  0EE2  0876               	movf	setLights_Initialization@lights,w
  6220  0EE3  158A  2708         	fcall	_LightsPointSelect
  6221  0EE5  0008               	return
  6222  0EE6                     __end_of_setLights_Initialization:	
  6223                           
  6224                           	psect	text40
  6225  0F08                     __ptext40:	
  6226 ;; *************** function _LightsPointSelect *****************
  6227 ;; Defined at:
  6228 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  lights          1    wreg     unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  lights          1    5[COMMON] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;		None               void
  6235 ;; Registers used:
  6236 ;;		wreg
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6242 ;;      Params:         0       0       0       0
  6243 ;;      Locals:         1       0       0       0
  6244 ;;      Temps:          1       0       0       0
  6245 ;;      Totals:         2       0       0       0
  6246 ;;Total ram usage:        2 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    2
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_setLights_Initialization
  6253 ;;		_setLights_Main
  6254 ;;		_setLights
  6255 ;;		_Lights_Control
  6256 ;;		_getLights_Status
  6257 ;;		_setLights_Trigger
  6258 ;;		_setLights_Line
  6259 ;;		_getAll_Lights_Line
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _LightsPointSelect
  6265  0F08                     _LightsPointSelect:	
  6266                           
  6267                           ;incstack = 0
  6268                           ; Regs used in _LightsPointSelect: [wreg]
  6269                           ;LightsPointSelect@lights stored from wreg
  6270  0F08  00F5               	movwf	LightsPointSelect@lights
  6271                           
  6272                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6273  0F09  0875               	movf	LightsPointSelect@lights,w
  6274  0F0A  3A01               	xorlw	1
  6275  0F0B  1D03               	skipz
  6276  0F0C  0008               	return
  6277                           
  6278                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6279  0F0D  3043               	movlw	_Lights1& (0+255)
  6280  0F0E  00F4               	movwf	??_LightsPointSelect
  6281  0F0F  0874               	movf	??_LightsPointSelect,w
  6282  0F10  00F8               	movwf	_Lights
  6283  0F11  0008               	return
  6284  0F12                     __end_of_LightsPointSelect:	
  6285                           
  6286                           	psect	text41
  6287  0ED0                     __ptext41:	
  6288 ;; *************** function _LED_Main *****************
  6289 ;; Defined at:
  6290 ;;		line 47 in file "../src/LED_B1.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;		None               void
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6304 ;;      Params:         0       0       0       0
  6305 ;;      Locals:         0       0       0       0
  6306 ;;      Temps:          0       0       0       0
  6307 ;;      Totals:         0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    5
  6311 ;; This function calls:
  6312 ;;		_setPIRLED_Main
  6313 ;; This function is called by:
  6314 ;;		_main
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           
  6319                           ;psect for function _LED_Main
  6320  0ED0                     _LED_Main:	
  6321                           
  6322                           ;LED_B1.c: 50: setPIRLED_Main();
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6326  0ED0  118A  2429         	fcall	_setPIRLED_Main
  6327  0ED2  0008               	return
  6328  0ED3                     __end_of_LED_Main:	
  6329                           
  6330                           	psect	text42
  6331  0429                     __ptext42:	
  6332 ;; *************** function _setPIRLED_Main *****************
  6333 ;; Defined at:
  6334 ;;		line 253 in file "../src/LED_B1.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  count           1    2[BANK0 ] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;		None               void
  6341 ;; Registers used:
  6342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6348 ;;      Params:         0       0       0       0
  6349 ;;      Locals:         0       1       0       0
  6350 ;;      Temps:          0       1       0       0
  6351 ;;      Totals:         0       2       0       0
  6352 ;;Total ram usage:        2 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    4
  6355 ;; This function calls:
  6356 ;;		_setLED
  6357 ;; This function is called by:
  6358 ;;		_LED_Main
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function _setPIRLED_Main
  6364  0429                     _setPIRLED_Main:	
  6365                           
  6366                           ;LED_B1.c: 254: char count;
  6367                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  6368                           
  6369                           ;incstack = 0
  6370                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6371  0429  1283               	bcf	3,5	;RP0=0, select bank0
  6372  042A  1303               	bcf	3,6	;RP1=0, select bank0
  6373  042B  1C2D               	btfss	_PIRLED,0
  6374  042C  0008               	return
  6375                           
  6376                           ;LED_B1.c: 256: PIRLED.Time++;
  6377  042D  3001               	movlw	1
  6378  042E  07AF               	addwf	_PIRLED+2,f
  6379  042F  1803               	skipnc
  6380  0430  0AB0               	incf	_PIRLED+3,f
  6381  0431  3000               	movlw	0
  6382  0432  07B0               	addwf	_PIRLED+3,f
  6383                           
  6384                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  6385  0433  3000               	movlw	0
  6386  0434  0230               	subwf	_PIRLED+3,w
  6387  0435  3032               	movlw	50
  6388  0436  1903               	skipnz
  6389  0437  022F               	subwf	_PIRLED+2,w
  6390  0438  1C03               	skipc
  6391  0439  0008               	return
  6392                           
  6393                           ;LED_B1.c: 258: PIRLED.Time = 0;
  6394  043A  01AF               	clrf	_PIRLED+2
  6395  043B  01B0               	clrf	_PIRLED+3
  6396                           
  6397                           ;LED_B1.c: 259: setLED(1, 0);
  6398  043C  01F6               	clrf	setLED@command
  6399  043D  3001               	movlw	1
  6400  043E  118A  23B2  118A   	fcall	_setLED
  6401                           
  6402                           ;LED_B1.c: 260: setLED(2, 0);
  6403  0441  01F6               	clrf	setLED@command
  6404  0442  3002               	movlw	2
  6405  0443  118A  23B2  118A   	fcall	_setLED
  6406                           
  6407                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  6408  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6409  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6410  0448  1CAD               	btfss	_PIRLED,1
  6411  0449  2C4E               	goto	l3475
  6412                           
  6413                           ;LED_B1.c: 262: count = 4;
  6414  044A  3004               	movlw	4
  6415  044B  00D7               	movwf	??_setPIRLED_Main
  6416  044C  0857               	movf	??_setPIRLED_Main,w
  6417  044D  00D8               	movwf	setPIRLED_Main@count
  6418  044E                     l3475:	
  6419                           
  6420                           ;LED_B1.c: 263: }
  6421                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  6422  044E  1D2D               	btfss	_PIRLED,2
  6423  044F  2C54               	goto	l3479
  6424                           
  6425                           ;LED_B1.c: 265: count = 6;
  6426  0450  3006               	movlw	6
  6427  0451  00D7               	movwf	??_setPIRLED_Main
  6428  0452  0857               	movf	??_setPIRLED_Main,w
  6429  0453  00D8               	movwf	setPIRLED_Main@count
  6430  0454                     l3479:	
  6431                           
  6432                           ;LED_B1.c: 266: }
  6433                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  6434  0454  1DAD               	btfss	_PIRLED,3
  6435  0455  2C5A               	goto	l3483
  6436                           
  6437                           ;LED_B1.c: 268: count = 8;
  6438  0456  3008               	movlw	8
  6439  0457  00D7               	movwf	??_setPIRLED_Main
  6440  0458  0857               	movf	??_setPIRLED_Main,w
  6441  0459  00D8               	movwf	setPIRLED_Main@count
  6442  045A                     l3483:	
  6443                           
  6444                           ;LED_B1.c: 269: }
  6445                           ;LED_B1.c: 270: PIRLED.Count++;
  6446  045A  3001               	movlw	1
  6447  045B  00D7               	movwf	??_setPIRLED_Main
  6448  045C  0857               	movf	??_setPIRLED_Main,w
  6449  045D  07AE               	addwf	_PIRLED+1,f
  6450                           
  6451                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  6452  045E  082E               	movf	_PIRLED+1,w
  6453  045F  3A01               	xorlw	1
  6454  0460  1903               	skipnz
  6455  0461  2C66               	goto	l3489
  6456  0462  082E               	movf	_PIRLED+1,w
  6457  0463  3A02               	xorlw	2
  6458  0464  1D03               	skipz
  6459  0465  2C7A               	goto	l3493
  6460  0466                     l3489:	
  6461                           
  6462                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6463  0466  1003               	clrc
  6464  0467  1E2D               	btfss	_PIRLED,4
  6465  0468  1403               	setc
  6466  0469  1C03               	btfss	3,0
  6467  046A  2C6F               	goto	u3720
  6468  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6469  046C  1303               	bcf	3,6	;RP1=0, select bank0
  6470  046D  162D               	bsf	_PIRLED,4
  6471  046E  2C72               	goto	l3491
  6472  046F                     u3720:	
  6473  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0470  1303               	bcf	3,6	;RP1=0, select bank0
  6475  0471  122D               	bcf	_PIRLED,4
  6476  0472                     l3491:	
  6477                           
  6478                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  6479  0472  3000               	movlw	0
  6480  0473  1A2D               	btfsc	_PIRLED,4
  6481  0474  3001               	movlw	1
  6482  0475  00F6               	movwf	setLED@command
  6483  0476  3002               	movlw	2
  6484  0477  118A  23B2         	fcall	_setLED
  6485                           
  6486                           ;LED_B1.c: 274: } else {
  6487  0479  0008               	return
  6488  047A                     l3493:	
  6489                           
  6490                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6491  047A  1003               	clrc
  6492  047B  1283               	bcf	3,5	;RP0=0, select bank0
  6493  047C  1303               	bcf	3,6	;RP1=0, select bank0
  6494  047D  1E2D               	btfss	_PIRLED,4
  6495  047E  1403               	setc
  6496  047F  1C03               	btfss	3,0
  6497  0480  2C85               	goto	u3740
  6498  0481  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0482  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0483  162D               	bsf	_PIRLED,4
  6501  0484  2C88               	goto	l3495
  6502  0485                     u3740:	
  6503  0485  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0486  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0487  122D               	bcf	_PIRLED,4
  6506  0488                     l3495:	
  6507                           
  6508                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  6509  0488  3000               	movlw	0
  6510  0489  1A2D               	btfsc	_PIRLED,4
  6511  048A  3001               	movlw	1
  6512  048B  00F6               	movwf	setLED@command
  6513  048C  3001               	movlw	1
  6514  048D  118A  23B2  118A   	fcall	_setLED
  6515                           
  6516                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  6517  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6518  0491  1303               	bcf	3,6	;RP1=0, select bank0
  6519  0492  082E               	movf	_PIRLED+1,w
  6520  0493  0658               	xorwf	setPIRLED_Main@count,w
  6521  0494  1D03               	skipz
  6522  0495  0008               	return
  6523                           
  6524                           ;LED_B1.c: 278: PIRLED.Count = 0;
  6525  0496  01AE               	clrf	_PIRLED+1
  6526  0497  0008               	return
  6527  0498                     __end_of_setPIRLED_Main:	
  6528                           
  6529                           	psect	text43
  6530  0F1D                     __ptext43:	
  6531 ;; *************** function _LED_Initialization *****************
  6532 ;; Defined at:
  6533 ;;		line 31 in file "../src/LED_B1.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6547 ;;      Params:         0       0       0       0
  6548 ;;      Locals:         0       0       0       0
  6549 ;;      Temps:          0       0       0       0
  6550 ;;      Totals:         0       0       0       0
  6551 ;;Total ram usage:        0 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    5
  6554 ;; This function calls:
  6555 ;;		_setLED_Initialization
  6556 ;; This function is called by:
  6557 ;;		_main
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _LED_Initialization
  6563  0F1D                     _LED_Initialization:	
  6564                           
  6565                           ;LED_B1.c: 33: setLED_Initialization(1);
  6566                           
  6567                           ;incstack = 0
  6568                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6569  0F1D  3001               	movlw	1
  6570  0F1E  158A  279F  158A   	fcall	_setLED_Initialization
  6571                           
  6572                           ;LED_B1.c: 36: setLED_Initialization(2);
  6573  0F21  3002               	movlw	2
  6574  0F22  158A  279F  158A   	fcall	_setLED_Initialization
  6575                           
  6576                           ;LED_B1.c: 42: setLED_Initialization(99);
  6577  0F25  3063               	movlw	99
  6578  0F26  158A  279F         	fcall	_setLED_Initialization
  6579  0F28  0008               	return
  6580  0F29                     __end_of_LED_Initialization:	
  6581                           
  6582                           	psect	text44
  6583  0F9F                     __ptext44:	
  6584 ;; *************** function _setLED_Initialization *****************
  6585 ;; Defined at:
  6586 ;;		line 69 in file "../src/LED_B1.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  led             1    wreg     unsigned char 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  led             1    1[BANK0 ] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;		None               void
  6593 ;; Registers used:
  6594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6600 ;;      Params:         0       0       0       0
  6601 ;;      Locals:         0       1       0       0
  6602 ;;      Temps:          0       0       0       0
  6603 ;;      Totals:         0       1       0       0
  6604 ;;Total ram usage:        1 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    4
  6607 ;; This function calls:
  6608 ;;		_LedPointSelect
  6609 ;;		_setLED
  6610 ;; This function is called by:
  6611 ;;		_LED_Initialization
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           
  6616                           ;psect for function _setLED_Initialization
  6617  0F9F                     _setLED_Initialization:	
  6618                           
  6619                           ;incstack = 0
  6620                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6621                           ;setLED_Initialization@led stored from wreg
  6622  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  6623  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  6624  0FA1  00D7               	movwf	setLED_Initialization@led
  6625                           
  6626                           ;LED_B1.c: 70: LedPointSelect(led);
  6627  0FA2  0857               	movf	setLED_Initialization@led,w
  6628  0FA3  118A  27D1  158A   	fcall	_LedPointSelect
  6629                           
  6630                           ;LED_B1.c: 71: LED->Enable = 1;
  6631  0FA6  0877               	movf	_LED,w
  6632  0FA7  0084               	movwf	4
  6633  0FA8  1383               	bcf	3,7	;select IRP bank0
  6634  0FA9  1400               	bsf	0,0
  6635                           
  6636                           ;LED_B1.c: 72: setLED(led, 0);
  6637  0FAA  01F6               	clrf	setLED@command
  6638  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  6639  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  6640  0FAD  0857               	movf	setLED_Initialization@led,w
  6641  0FAE  118A  23B2         	fcall	_setLED
  6642  0FB0  0008               	return
  6643  0FB1                     __end_of_setLED_Initialization:	
  6644                           
  6645                           	psect	text45
  6646  03B2                     __ptext45:	
  6647 ;; *************** function _setLED *****************
  6648 ;; Defined at:
  6649 ;;		line 76 in file "../src/LED_B1.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  led             1    wreg     unsigned char 
  6652 ;;  command         1    6[COMMON] unsigned char 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  led             1    0[BANK0 ] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6664 ;;      Params:         1       0       0       0
  6665 ;;      Locals:         0       1       0       0
  6666 ;;      Temps:          0       0       0       0
  6667 ;;      Totals:         1       1       0       0
  6668 ;;Total ram usage:        2 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    3
  6671 ;; This function calls:
  6672 ;;		_LedPointSelect
  6673 ;; This function is called by:
  6674 ;;		_setLED_Initialization
  6675 ;;		_setPIRLED_Main
  6676 ;;		_setMain_Exception
  6677 ;;		_PIR_Initialization
  6678 ;;		_PIR_Main
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _setLED
  6684  03B2                     _setLED:	
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6688                           ;setLED@led stored from wreg
  6689  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  6690  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  6691  03B4  00D6               	movwf	setLED@led
  6692                           
  6693                           ;LED_B1.c: 77: LedPointSelect(led);
  6694  03B5  0856               	movf	setLED@led,w
  6695  03B6  118A  27D1  118A   	fcall	_LedPointSelect
  6696                           
  6697                           ;LED_B1.c: 78: if (command == 0) {
  6698  03B9  08F6               	movf	setLED@command,f
  6699  03BA  1D03               	skipz
  6700  03BB  2BCA               	goto	l3293
  6701                           
  6702                           ;LED_B1.c: 80: if (led == 1) {
  6703  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6704  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6705  03BE  0856               	movf	setLED@led,w
  6706  03BF  3A01               	xorlw	1
  6707  03C0  1903               	btfsc	3,2
  6708                           
  6709                           ;LED_B1.c: 84: RB4 = 1;
  6710  03C1  1606               	bsf	6,4	;volatile
  6711                           
  6712                           ;LED_B1.c: 86: }
  6713                           ;LED_B1.c: 89: if (led == 2) {
  6714  03C2  0856               	movf	setLED@led,w
  6715  03C3  3A02               	xorlw	2
  6716  03C4  1903               	btfsc	3,2
  6717                           
  6718                           ;LED_B1.c: 93: RB5 = 1;
  6719  03C5  1686               	bsf	6,5	;volatile
  6720                           
  6721                           ;LED_B1.c: 95: }
  6722                           ;LED_B1.c: 107: if (led == 99) {
  6723  03C6  0856               	movf	setLED@led,w
  6724  03C7  3A63               	xorlw	99
  6725  03C8  1903               	btfsc	3,2
  6726                           
  6727                           ;LED_B1.c: 111: RB3 = 1;
  6728  03C9  1586               	bsf	6,3	;volatile
  6729  03CA                     l3293:	
  6730                           
  6731                           ;LED_B1.c: 113: }
  6732                           ;LED_B1.c: 115: }
  6733                           ;LED_B1.c: 116: if (command == 1) {
  6734  03CA  0876               	movf	setLED@command,w
  6735  03CB  3A01               	xorlw	1
  6736  03CC  1D03               	skipz
  6737  03CD  2BDC               	goto	l3307
  6738                           
  6739                           ;LED_B1.c: 118: if (led == 1) {
  6740  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6741  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6742  03D0  0856               	movf	setLED@led,w
  6743  03D1  3A01               	xorlw	1
  6744  03D2  1903               	btfsc	3,2
  6745                           
  6746                           ;LED_B1.c: 122: RB4 = 0;
  6747  03D3  1206               	bcf	6,4	;volatile
  6748                           
  6749                           ;LED_B1.c: 124: }
  6750                           ;LED_B1.c: 127: if (led == 2) {
  6751  03D4  0856               	movf	setLED@led,w
  6752  03D5  3A02               	xorlw	2
  6753  03D6  1903               	btfsc	3,2
  6754                           
  6755                           ;LED_B1.c: 131: RB5 = 0;
  6756  03D7  1286               	bcf	6,5	;volatile
  6757                           
  6758                           ;LED_B1.c: 133: }
  6759                           ;LED_B1.c: 145: if (led == 99) {
  6760  03D8  0856               	movf	setLED@led,w
  6761  03D9  3A63               	xorlw	99
  6762  03DA  1903               	btfsc	3,2
  6763                           
  6764                           ;LED_B1.c: 149: RB3 = 0;
  6765  03DB  1186               	bcf	6,3	;volatile
  6766  03DC                     l3307:	
  6767                           
  6768                           ;LED_B1.c: 151: }
  6769                           ;LED_B1.c: 153: }
  6770                           ;LED_B1.c: 154: if (command == 10) {
  6771  03DC  0876               	movf	setLED@command,w
  6772  03DD  3A0A               	xorlw	10
  6773  03DE  1D03               	skipz
  6774  03DF  2BF9               	goto	l3325
  6775                           
  6776                           ;LED_B1.c: 155: LED->GO = 0;
  6777  03E0  0877               	movf	_LED,w
  6778  03E1  0084               	movwf	4
  6779  03E2  1383               	bcf	3,7	;select IRP bank0
  6780  03E3  1080               	bcf	0,1
  6781                           
  6782                           ;LED_B1.c: 156: LED->Time = 0;
  6783  03E4  0A77               	incf	_LED,w
  6784  03E5  0084               	movwf	4
  6785  03E6  0180               	clrf	0
  6786  03E7  0A84               	incf	4,f
  6787  03E8  0180               	clrf	0
  6788                           
  6789                           ;LED_B1.c: 158: if (led == 1) {
  6790  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  6791  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  6792  03EB  0856               	movf	setLED@led,w
  6793  03EC  3A01               	xorlw	1
  6794  03ED  1D03               	skipz
  6795  03EE  2BF1               	goto	l3317
  6796                           
  6797                           ;LED_B1.c: 162: RB4 = 1;
  6798  03EF  1606               	bsf	6,4	;volatile
  6799                           
  6800                           ;LED_B1.c: 164: }
  6801  03F0  2BF5               	goto	l3321
  6802  03F1                     l3317:	
  6803                           
  6804                           ;LED_B1.c: 167: else if (led == 2) {
  6805  03F1  0856               	movf	setLED@led,w
  6806  03F2  3A02               	xorlw	2
  6807  03F3  1903               	btfsc	3,2
  6808                           
  6809                           ;LED_B1.c: 171: RB5 = 1;
  6810  03F4  1686               	bsf	6,5	;volatile
  6811  03F5                     l3321:	
  6812                           
  6813                           ;LED_B1.c: 173: }
  6814                           ;LED_B1.c: 185: if (led == 99) {
  6815  03F5  0856               	movf	setLED@led,w
  6816  03F6  3A63               	xorlw	99
  6817  03F7  1903               	btfsc	3,2
  6818                           
  6819                           ;LED_B1.c: 189: RB3 = 1;
  6820  03F8  1586               	bsf	6,3	;volatile
  6821  03F9                     l3325:	
  6822                           
  6823                           ;LED_B1.c: 191: }
  6824                           ;LED_B1.c: 193: }
  6825                           ;LED_B1.c: 194: if (command == 11) {
  6826  03F9  0876               	movf	setLED@command,w
  6827  03FA  3A0B               	xorlw	11
  6828  03FB  1D03               	skipz
  6829  03FC  2C01               	goto	l3329
  6830                           
  6831                           ;LED_B1.c: 195: LED->GO = 1;
  6832  03FD  0877               	movf	_LED,w
  6833  03FE  0084               	movwf	4
  6834  03FF  1383               	bcf	3,7	;select IRP bank0
  6835  0400  1480               	bsf	0,1
  6836  0401                     l3329:	
  6837                           
  6838                           ;LED_B1.c: 196: }
  6839                           ;LED_B1.c: 198: if (command == 111) {
  6840  0401  0876               	movf	setLED@command,w
  6841  0402  3A6F               	xorlw	111
  6842  0403  1D03               	skipz
  6843  0404  2C21               	goto	l3355
  6844                           
  6845                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6846  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0407  01AE               	clrf	_PIRLED+1
  6849                           
  6850                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6851  0408  01AF               	clrf	_PIRLED+2
  6852  0409  01B0               	clrf	_PIRLED+3
  6853                           
  6854                           ;LED_B1.c: 201: PIRLED.status = 0;
  6855  040A  122D               	bcf	_PIRLED,4
  6856                           
  6857                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6858  040B  142D               	bsf	_PIRLED,0
  6859                           
  6860                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6861  040C  10AD               	bcf	_PIRLED,1
  6862                           
  6863                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6864  040D  112D               	bcf	_PIRLED,2
  6865                           
  6866                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6867  040E  11AD               	bcf	_PIRLED,3
  6868                           
  6869                           ;LED_B1.c: 206: if (led == 1) {
  6870  040F  0856               	movf	setLED@led,w
  6871  0410  3A01               	xorlw	1
  6872  0411  1D03               	skipz
  6873  0412  2C15               	goto	l3347
  6874                           
  6875                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6876  0413  14AD               	bsf	_PIRLED,1
  6877                           
  6878                           ;LED_B1.c: 208: } else if (led == 2) {
  6879  0414  0008               	return
  6880  0415                     l3347:	
  6881  0415  0856               	movf	setLED@led,w
  6882  0416  3A02               	xorlw	2
  6883  0417  1D03               	skipz
  6884  0418  2C1B               	goto	l3351
  6885                           
  6886                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6887  0419  152D               	bsf	_PIRLED,2
  6888                           
  6889                           ;LED_B1.c: 210: } else if (led == 3) {
  6890  041A  0008               	return
  6891  041B                     l3351:	
  6892  041B  0856               	movf	setLED@led,w
  6893  041C  3A03               	xorlw	3
  6894  041D  1D03               	skipz
  6895  041E  0008               	return
  6896                           
  6897                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6898  041F  15AD               	bsf	_PIRLED,3
  6899                           
  6900                           ;LED_B1.c: 212: }
  6901                           ;LED_B1.c: 213: } else if (command == 110) {
  6902  0420  0008               	return
  6903  0421                     l3355:	
  6904  0421  0876               	movf	setLED@command,w
  6905  0422  3A6E               	xorlw	110
  6906  0423  1D03               	skipz
  6907  0424  0008               	return
  6908                           
  6909                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6910  0425  1283               	bcf	3,5	;RP0=0, select bank0
  6911  0426  1303               	bcf	3,6	;RP1=0, select bank0
  6912  0427  102D               	bcf	_PIRLED,0
  6913  0428  0008               	return
  6914  0429                     __end_of_setLED:	
  6915                           
  6916                           	psect	text46
  6917  07D1                     __ptext46:	
  6918 ;; *************** function _LedPointSelect *****************
  6919 ;; Defined at:
  6920 ;;		line 7 in file "../src/LED_B1.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  led             1    wreg     unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  led             1    5[COMMON] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;		None               void
  6927 ;; Registers used:
  6928 ;;		wreg
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6934 ;;      Params:         0       0       0       0
  6935 ;;      Locals:         1       0       0       0
  6936 ;;      Temps:          1       0       0       0
  6937 ;;      Totals:         2       0       0       0
  6938 ;;Total ram usage:        2 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    2
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_setLED_Initialization
  6945 ;;		_setLED
  6946 ;;		_setLED_Main
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function _LedPointSelect
  6952  07D1                     _LedPointSelect:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _LedPointSelect: [wreg]
  6956                           ;LedPointSelect@led stored from wreg
  6957  07D1  00F5               	movwf	LedPointSelect@led
  6958                           
  6959                           ;LED_B1.c: 9: if (led == 1) {
  6960  07D2  0875               	movf	LedPointSelect@led,w
  6961  07D3  3A01               	xorlw	1
  6962  07D4  1D03               	skipz
  6963  07D5  2FDA               	goto	l220
  6964                           
  6965                           ;LED_B1.c: 10: LED = &VarLED1;
  6966  07D6  304E               	movlw	_VarLED1& (0+255)
  6967  07D7  00F4               	movwf	??_LedPointSelect
  6968  07D8  0874               	movf	??_LedPointSelect,w
  6969  07D9  00F7               	movwf	_LED
  6970  07DA                     l220:	
  6971                           
  6972                           ;LED_B1.c: 11: }
  6973                           ;LED_B1.c: 14: if (led == 2) {
  6974  07DA  0875               	movf	LedPointSelect@led,w
  6975  07DB  3A02               	xorlw	2
  6976  07DC  1D03               	skipz
  6977  07DD  2FE2               	goto	l221
  6978                           
  6979                           ;LED_B1.c: 15: LED = &VarLED2;
  6980  07DE  3052               	movlw	_VarLED2& (0+255)
  6981  07DF  00F4               	movwf	??_LedPointSelect
  6982  07E0  0874               	movf	??_LedPointSelect,w
  6983  07E1  00F7               	movwf	_LED
  6984  07E2                     l221:	
  6985                           
  6986                           ;LED_B1.c: 16: }
  6987                           ;LED_B1.c: 24: if (led == 99) {
  6988  07E2  0875               	movf	LedPointSelect@led,w
  6989  07E3  3A63               	xorlw	99
  6990  07E4  1D03               	skipz
  6991  07E5  0008               	return
  6992                           
  6993                           ;LED_B1.c: 25: LED = &VarErrLED;
  6994  07E6  304A               	movlw	_VarErrLED& (0+255)
  6995  07E7  00F4               	movwf	??_LedPointSelect
  6996  07E8  0874               	movf	??_LedPointSelect,w
  6997  07E9  00F7               	movwf	_LED
  6998  07EA  0008               	return
  6999  07EB                     __end_of_LedPointSelect:	
  7000                           
  7001                           	psect	text47
  7002  06A3                     __ptext47:	
  7003 ;; *************** function _CDS_Main *****************
  7004 ;; Defined at:
  7005 ;;		line 11 in file "../src/CDS_B1.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;		None               void
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7019 ;;      Params:         0       0       0       0
  7020 ;;      Locals:         0       0       0       0
  7021 ;;      Temps:          3       0       0       0
  7022 ;;      Totals:         3       0       0       0
  7023 ;;Total ram usage:        3 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    2
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _CDS_Main
  7035  06A3                     _CDS_Main:	
  7036                           
  7037                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7041  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  7042  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  7043  06A5  1C28               	btfss	__CDS,0
  7044  06A6  0008               	return
  7045                           
  7046                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7047  06A7  18A8               	btfsc	__CDS,1
  7048  06A8  2EB6               	goto	l99
  7049                           
  7050                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7051  06A9  19A8               	btfsc	__CDS,3
  7052  06AA  0008               	return
  7053                           
  7054                           ;CDS_B1.c: 16: _CDS.Time++;
  7055  06AB  3001               	movlw	1
  7056  06AC  00F4               	movwf	??_CDS_Main
  7057  06AD  0874               	movf	??_CDS_Main,w
  7058  06AE  07A9               	addwf	__CDS+1,f
  7059                           
  7060                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  7061  06AF  300A               	movlw	10
  7062  06B0  0229               	subwf	__CDS+1,w
  7063  06B1  1C03               	skipc
  7064  06B2  0008               	return
  7065                           
  7066                           ;CDS_B1.c: 18: {
  7067                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7068  06B3  01A9               	clrf	__CDS+1
  7069                           
  7070                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7071  06B4  15A8               	bsf	__CDS,3
  7072                           
  7073                           ;CDS_B1.c: 21: }
  7074                           ;CDS_B1.c: 22: }
  7075                           ;CDS_B1.c: 23: } else {
  7076  06B5  0008               	return
  7077  06B6                     l99:	
  7078                           
  7079                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7080  06B6  1CA8               	btfss	__CDS,1
  7081  06B7  0008               	return
  7082                           
  7083                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7084  06B8  10A8               	bcf	__CDS,1
  7085                           
  7086                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7087  06B9  1A28               	btfsc	__CDS,4
  7088  06BA  2EC1               	goto	l2859
  7089                           
  7090                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7091  06BB  082A               	movf	__CDS+2,w
  7092  06BC  022B               	subwf	__CDS+3,w
  7093  06BD  1C03               	skipc
  7094  06BE  0008               	return
  7095                           
  7096                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7097  06BF  1628               	bsf	__CDS,4
  7098                           
  7099                           ;CDS_B1.c: 29: }
  7100                           ;CDS_B1.c: 30: } else {
  7101  06C0  0008               	return
  7102  06C1                     l2859:	
  7103                           
  7104                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7105  06C1  082A               	movf	__CDS+2,w
  7106  06C2  3E9C               	addlw	156
  7107  06C3  00F4               	movwf	??_CDS_Main
  7108  06C4  30FF               	movlw	255
  7109  06C5  1803               	skipnc
  7110  06C6  3000               	movlw	0
  7111  06C7  00F5               	movwf	??_CDS_Main+1
  7112  06C8  0875               	movf	??_CDS_Main+1,w
  7113  06C9  3A80               	xorlw	128
  7114  06CA  00F6               	movwf	??_CDS_Main+2
  7115  06CB  3080               	movlw	128
  7116  06CC  0276               	subwf	??_CDS_Main+2,w
  7117  06CD  1D03               	skipz
  7118  06CE  2ED1               	goto	u2675
  7119  06CF  082B               	movf	__CDS+3,w
  7120  06D0  0274               	subwf	??_CDS_Main,w
  7121  06D1                     u2675:	
  7122  06D1  1C03               	skipc
  7123  06D2  0008               	return
  7124                           
  7125                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7126  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  7127  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  7128  06D5  1228               	bcf	__CDS,4
  7129  06D6  0008               	return
  7130  06D7                     __end_of_CDS_Main:	
  7131                           
  7132                           	psect	text48
  7133  0ED9                     __ptext48:	
  7134 ;; *************** function _CDS_Initialization *****************
  7135 ;; Defined at:
  7136 ;;		line 7 in file "../src/CDS_B1.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;		None               void
  7143 ;; Registers used:
  7144 ;;		None
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7150 ;;      Params:         0       0       0       0
  7151 ;;      Locals:         0       0       0       0
  7152 ;;      Temps:          0       0       0       0
  7153 ;;      Totals:         0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    2
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_main
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _CDS_Initialization
  7166  0ED9                     _CDS_Initialization:	
  7167                           
  7168                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _CDS_Initialization: []
  7172  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  7173  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  7174  0EDB  1428               	bsf	__CDS,0
  7175  0EDC  0008               	return
  7176  0EDD                     __end_of_CDS_Initialization:	
  7177                           
  7178                           	psect	text49
  7179  0F6D                     __ptext49:	
  7180 ;; *************** function _ISR *****************
  7181 ;; Defined at:
  7182 ;;		line 107 in file "../src/MCU_B1.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;		None               void
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7196 ;;      Params:         0       0       0       0
  7197 ;;      Locals:         0       0       0       0
  7198 ;;      Temps:          4       0       0       0
  7199 ;;      Totals:         4       0       0       0
  7200 ;;Total ram usage:        4 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    1
  7203 ;; This function calls:
  7204 ;;		_TMR1_ISR
  7205 ;; This function is called by:
  7206 ;;		Interrupt level 1
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _ISR
  7212  0F6D                     _ISR:	
  7213                           
  7214                           ;MCU_B1.c: 109: ;;
  7215                           ;MCU_B1.c: 111: ;;
  7216                           ;MCU_B1.c: 113: TMR1_ISR();
  7217  0F6D  118A  279A  158A   	fcall	_TMR1_ISR
  7218  0F70  0873               	movf	??_ISR+3,w
  7219  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  7221  0F73  00FF               	movwf	127
  7222  0F74  0872               	movf	??_ISR+2,w
  7223  0F75  008A               	movwf	10
  7224  0F76  0871               	movf	??_ISR+1,w
  7225  0F77  0084               	movwf	4
  7226  0F78  0E70               	swapf	??_ISR^(0+-128),w
  7227  0F79  0083               	movwf	3
  7228  0F7A  0EFE               	swapf	126,f
  7229  0F7B  0E7E               	swapf	126,w
  7230  0F7C  0009               	retfie
  7231  0F7D                     __end_of_ISR:	
  7232                           
  7233                           	psect	intentry
  7234  0004                     __pintentry:	
  7235                           ;incstack = 0
  7236                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7237                           
  7238  0004                     interrupt_function:	
  7239  007E                     saved_w	set	btemp
  7240  0004  00FE               	movwf	btemp
  7241  0005  0E03               	swapf	3,w
  7242  0006  00F0               	movwf	??_ISR
  7243  0007  0804               	movf	4,w
  7244  0008  00F1               	movwf	??_ISR+1
  7245  0009  080A               	movf	10,w
  7246  000A  00F2               	movwf	??_ISR+2
  7247  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7248  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7249  000D  087F               	movf	btemp+1,w
  7250  000E  00F3               	movwf	??_ISR+3
  7251  000F  158A  2F6D         	ljmp	_ISR
  7252                           
  7253                           	psect	text50
  7254  079A                     __ptext50:	
  7255 ;; *************** function _TMR1_ISR *****************
  7256 ;; Defined at:
  7257 ;;		line 209 in file "../src/MCU_B1.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;		None               void
  7264 ;; Registers used:
  7265 ;;		wreg, status,2
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7271 ;;      Params:         0       0       0       0
  7272 ;;      Locals:         0       0       0       0
  7273 ;;      Temps:          0       0       0       0
  7274 ;;      Totals:         0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_ISR
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _TMR1_ISR
  7286  079A                     _TMR1_ISR:	
  7287                           
  7288                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  7289                           
  7290                           ;incstack = 0
  7291                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7292  079A  1683               	bsf	3,5	;RP0=1, select bank1
  7293  079B  1303               	bcf	3,6	;RP1=0, select bank1
  7294  079C  1C0C               	btfss	12,0	;volatile
  7295  079D  0008               	return
  7296  079E  1283               	bcf	3,5	;RP0=0, select bank0
  7297  079F  1303               	bcf	3,6	;RP1=0, select bank0
  7298  07A0  1C0C               	btfss	12,0	;volatile
  7299  07A1  0008               	return
  7300                           
  7301                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  7302  07A2  30FA               	movlw	250
  7303  07A3  008F               	movwf	15	;volatile
  7304                           
  7305                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  7306  07A4  3038               	movlw	56
  7307  07A5  008E               	movwf	14	;volatile
  7308                           
  7309                           ;MCU_B1.c: 214: TMR1IF = 0;
  7310  07A6  100C               	bcf	12,0	;volatile
  7311                           
  7312                           ;MCU_B1.c: 234: Timer1.Count++;
  7313  07A7  3001               	movlw	1
  7314  07A8  07B2               	addwf	_Timer1+1,f
  7315  07A9  1803               	skipnc
  7316  07AA  0AB3               	incf	_Timer1+2,f
  7317  07AB  3000               	movlw	0
  7318  07AC  07B3               	addwf	_Timer1+2,f
  7319                           
  7320                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  7321  07AD  3064               	movlw	100
  7322  07AE  0632               	xorwf	_Timer1+1,w
  7323  07AF  0433               	iorwf	_Timer1+2,w
  7324  07B0  1D03               	skipz
  7325  07B1  0008               	return
  7326                           
  7327                           ;MCU_B1.c: 236: {
  7328                           ;MCU_B1.c: 237: Timer1.Count = 0;
  7329  07B2  01B2               	clrf	_Timer1+1
  7330  07B3  01B3               	clrf	_Timer1+2
  7331                           
  7332                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  7333  07B4  1431               	bsf	_Timer1,0
  7334  07B5  0008               	return
  7335  07B6                     __end_of_TMR1_ISR:	
  7336  007E                     btemp	set	126	;btemp
  7337  007E                     wtemp	set	126
  7338  007E                     wtemp0	set	126
  7339  0080                     wtemp1	set	128
  7340  0082                     wtemp2	set	130
  7341  0084                     wtemp3	set	132
  7342  0086                     wtemp4	set	134
  7343  0088                     wtemp5	set	136
  7344  007F                     wtemp6	set	127
  7345  007E                     ttemp	set	126
  7346  007E                     ttemp0	set	126
  7347  0081                     ttemp1	set	129
  7348  0084                     ttemp2	set	132
  7349  0087                     ttemp3	set	135
  7350  007F                     ttemp4	set	127
  7351  007E                     ltemp	set	126
  7352  007E                     ltemp0	set	126
  7353  0082                     ltemp1	set	130
  7354  0086                     ltemp2	set	134
  7355  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     22      76
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setTemp_Main->_getMain_LightsStatus
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Trigger
    _setMain_Exception->_getAll_Lights_Line
    _setMain_Exception->_setLED
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Control
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _setPIRLED_Main->_setLED
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _PIR_Initialization->_setLED
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   20847
                                             17 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     520
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2377
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     661
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     489
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1311
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1311
                                              8 BANK0      1     1      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    6808
                                              9 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3363
                                              2 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      68
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     184
                                              5 COMMON     1     1      0
                                              0 BANK0      6     6      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2658
                                              1 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     939
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     549
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     425
                                              0 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     266
                                              6 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     266
                                              6 COMMON     1     1      0
                                              2 BANK0      4     4      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2698
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2698
                                              1 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2813
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2813
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2658
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      85       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      85      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Nov 24 11:12:03 2014

                     _WDT_Clearing 0002                                 l99 06B6  
                     ___awdiv@sign 005B                                 fsr 0004  
                              l220 07DA                                l221 07E2  
                              l553 0681                                l721 01EC  
                              l554 06A1                                l722 004D  
                              l558 069D                                l654 03AE  
                              l727 0078                                l728 008E  
                              l667 03AB                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0077                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0F6D  
                              _PSA 040B                                _WDT 0034  
           getAll_Lights_Line@line 0076                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0EF8  
        __end_of_LightsPointSelect 0F12             _setMain_Exception$2047 005C  
                 _getLights_Status 0F7D            __size_of_Lights_Control 0057  
                             ?_ISR 0070                               l2511 0685  
                             l3321 03F5                               l3307 03DC  
                             l3403 05CB                               l3317 03F1  
                             l3325 03F9                               l2509 067D  
                             l3351 041B                               l3407 05E6  
                             l2519 0697                               l3329 0401  
                             l3521 0661                               l3425 04AF  
                             l3347 0415                               l3355 0421  
                             l3515 064F                               l3507 063B  
                             l3451 04EE                               l3443 04DB  
                             l3435 04B7                               l3419 04A4  
                             l3293 03CA                               l3613 052D  
                             l3437 04C5                               l3383 06FC  
                             l3519 0657                               l3447 04E6  
                             l3551 0380                               l3535 0345  
                             l2591 078B                               l3711 0253  
                             l3385 06DE                               l2593 078E  
                             l3641 05F8                               l3713 0257  
                             l3491 0472                               l3483 045A  
                             l3475 044E                               l3387 0703  
                             l3643 0606                               l3715 025B  
                             l3707 024D                               l3723 0268  
                             l3493 047A                               l2597 0794  
                             l3653 0627                               l3733 028C  
                             l3717 025F                               l3725 0279  
                             l3495 0488                               l3479 0454  
                             l3815 007B                               l3567 039B  
                             l3719 0263                               l3489 0466  
                             l3577 03AA                               l3649 061C  
                             l2859 06C1                               l3595 0752  
                             l3763 031E                               l3755 02F2  
                             l3739 02A8                               l3691 0775  
                             l3909 01BE                               l3749 02D6  
                             l3863 00D3                               l3847 00B0  
                             l3865 00D4                               l3769 032C  
                             l3883 0134                               l3875 0120  
                             l3859 00C7                               l3971 057E  
                             l3893 0169                               l3965 0562  
                             l3897 0199                               l3899 01A4  
            _myMain_Initialization 0ECF                       __CFG_WDTE$ON 0000  
                             u4020 0529                               u4105 0607  
                             u4115 0613                               u4125 061D  
                             u3505 06E7                               u3605 04C6  
                             u4085 05FB                               u3615 04D2  
                             u3720 046F                               u4505 018F  
                             u3625 04DC                               u1865 0FD1  
                             u2675 06D1                               _PEIE 005E  
                             u3740 0485                               u4525 01B4  
                             u4455 00F4                               u4465 0118  
                             u3585 04BA                               u4555 01DB  
                             u4485 0152                               __CDS 0028  
                             __PIR 00A0                               _Temp 0037  
                             _main 054C                               btemp 007E  
                  __end_of_WDT_Set 0F5E                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 06D7  
     __size_of_Temp_Initialization 0003                              ??_ISR 0070  
                _setLights_Trigger 07B6                      ??_Lights_Main 0077  
                    __CFG_PLLEN$ON 0000                   __end_of_LED_Main 0ED3  
               ?_setLights_Trigger 0076                   ??_setPIRLED_Main 0057  
                            ?_main 0067                    __end_of___awdiv 04F5  
                            _ADRES 001E                    ___awdiv@divisor 0056  
                            _T1CON 0010                    __end_of___lwdiv 062E  
                    ?_Lights_Close 0070                    ___awdiv@counter 005A  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
             setMain_Exception@buz 005A            __end_of_Timeout_Counter 0FD7  
              ??_setLights_Trigger 0056                   __end_of_PIR_Main 01F4  
                 __end_of_TMR1_ISR 07B6                   __end_of_TMR1_Set 0F50  
                            _getAD 077E                   __end_of_WDT_Main 0F9F  
                    _LightsControl 0036                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080     __size_of_setLED_Initialization 0012  
     __end_of_getMain_LightsStatus 0707      __end_of_setLED_Initialization 0FB1  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                  getPIR_AD@channel1 0062  
                getPIR_AD@channel2 0076                     _setLights_Main 0731  
                   _setLights_Line 0F29                    __initialization 0013  
        __end_of_setLights_Trigger 07D1                       __end_of_main 059D  
                 __end_of_Fosc_Set 0EEB                          ??_ADC_Set 0074  
                           ??_main 006B                     ??_Lights_Close 005C  
              __end_of_Lights_Main 0F1D         __size_of_LightsPointSelect 000A  
                           ?_getAD 0074             ?_myMain_Initialization 0070  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 0058                          ??_WDT_Set 0074  
                           _ANSELA 0185                             _ANSELB 0186  
         _getMain_All_Error_Status 066D                             _FVRCON 009D  
           getLights_Status@lights 0056                             _PIRLED 002D  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 07EB  
           getLights_Status@status 0057             __end_of_setLights_Main 0759  
           __end_of_setLights_Line 0F35         __end_of_Mcu_Initialization 0F6D  
                           _Lights 0078                             _Timer1 0031  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0077  
                        ??___awdiv 0074                          ??___lwdiv 0074  
                           _setLED 03B2                             _myMain 0020  
                 ___awdiv@quotient 005C                 __size_of_Temp_Main 0003  
                           saved_w 007E                   ?_Timeout_Counter 0070  
                   _Lights_Control 04F5            __size_of_LedPointSelect 001A  
                        ?_CDS_Main 0070        __size_of_PIR_Initialization 0012  
       getMain_LightsStatus@status 005B            __end_of__initialization 0022  
                        ?_LED_Main 0070                      ?_my_MainTimer 0070  
                  ?_setLights_Main 0070                    ?_setLights_Line 0070  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 002A           __end_of_getLights_Status 0F8E  
                    __end_of_getAD 079A                          ?_PIR_Main 0070  
                        ?_TMR1_ISR 0070                          ?_TMR1_Set 0070  
               _LED_Initialization 0F1D                 __size_of_getPIR_AD 013A  
                      _Lights_Main 0F12           _setLights_Initialization 0EE1  
                        ?_WDT_Main 0070               _getMain_LightsStatus 06D7  
       __end_of_set_TimeoutCleared 0EF1                ?_LED_Initialization 0070  
           __end_of_Lights_Control 054C              getMain_LightsStatus@i 0059  
                          ??_getAD 0075                _Temp_Initialization 0ED3  
                       ??_CDS_Main 0074                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0070  
      __size_of_getAll_Lights_Line 000D                  __end_of_Temp_Main 0ED9  
                          ?_IO_Set 0070                    __CFG_VCAPEN$DIS 0000  
                   ??_my_MainTimer 0074                         ??_LED_Main 0077  
             __end_of_Lights_Close 1000          getMain_LightsStatus@count 0058  
             ??_LED_Initialization 0077                  LedPointSelect@led 0075  
                       __pmaintext 054C               ?_Temp_Initialization 0070  
                       ??_PIR_Main 005F                         ??_TMR1_ISR 0070  
                    ?_setTemp_Main 0070                 __size_of_setLights 0051  
                       ??_TMR1_Set 0074                         __pintentry 0004  
                          ?_setLED 0076            setLights_Trigger@lights 0057  
                          _ADC_Set 0EF1                         _getTemp_AD 0759  
                       ??_WDT_Main 0074              ?_getMain_LightsStatus 0070  
           __size_of_getCDS_Status 0008                    ?_Lights_Control 0070  
                __end_of_getCDS_AD 0731                            _WDT_Set 0F50  
                       ??_Fosc_Set 0074                  __end_of_getPIR_AD 032E  
                  __size_of_IO_Set 0015                         getCDS_AD@i 0058  
                       getCDS_AD@j 0059                            _Lights1 0043  
                          _VarLED1 004E                            _VarLED2 0052  
            ??_Temp_Initialization 0074                     ??_setTemp_Main 005E  
                          ___awdiv 0498                            ___lwdiv 05EE  
                  __size_of_setLED 0077                            __ptext0 0000  
                          __ptext1 0FD7                            __ptext2 0ECF  
                          __ptext3 0759                            __ptext4 01F4  
                          __ptext5 05EE                            __ptext6 0707  
                          __ptext7 077E                            __ptext8 0EEB  
                          __ptext9 0FC3                         getPIR_AD@i 0063  
                       getPIR_AD@j 0061                       __size_of_ISR 0010  
       ??_getMain_All_Error_Status 0075            ??_myMain_Initialization 0074  
         ??_setTemp_Initialization 0074                     _LedPointSelect 07D1  
                          clrloop0 0F01                  __end_of_setLights 05EE  
             end_of_initialization 0022                      _getCDS_Status 0EF8  
            _setLED_Initialization 0F9F     __size_of_Lights_Initialization 0004  
    __end_of_Lights_Initialization 0EE1             ??_getMain_LightsStatus 0076  
                      ?_getTemp_AD 0070           setLED_Initialization@led 0057  
               _Mcu_Initialization 0F5E               __end_of_my_MainTimer 0FEB  
           __end_of_LedPointSelect 07EB                setPIRLED_Main@count 0058  
              ?_Mcu_Initialization 0070              __size_of_Lights_Close 0015  
          __size_of_setPIRLED_Main 006F                   ??_setLights_Main 0077  
                 ??_setLights_Line 0076               setLights_Main@lights 0059  
  getMain_All_Error_Status@command 005A                  __size_of_CDS_Main 0034  
                   ?_getCDS_Status 0070                     __end_of_IO_Set 0800  
       __end_of_CDS_Initialization 0EDD         ??_setLights_Initialization 0076  
                __size_of_LED_Main 0003                  _setMain_Exception 062E  
             ??_Mcu_Initialization 0075                      ?_WDT_Clearing 0070  
               ?_setMain_Exception 0070                  ?_getLights_Status 0070  
         setMain_Exception@command 005E                       ?_Lights_Main 0070  
                __size_of_PIR_Main 01CF                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0076                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 0429                ??_setMain_Exception 0058  
                     _Lights_Close 0FEB                  __size_of_WDT_Main 0011  
              start_initialization 0013                    ?_LedPointSelect 0070  
             setLights_Line@lights 0076                        __end_of_ISR 0F7D  
       __end_of_PIR_Initialization 0FC3    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0074               __end_of_setTemp_Main 03B2  
               _set_TimeoutCleared 0EEB                           ??_IO_Set 0074  
         __size_of_Timeout_Counter 0014                          _VarErrLED 004A  
              __size_of_getTemp_AD 0025             ?_setLED_Initialization 0070  
                __size_of_Fosc_Set 0005          __end_of_setMain_Exception 066D  
                        _Temp_Main 0ED6                    setLights@lights 0058  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0074  
                  setLights@status 0056                           ??_setLED 0077  
                         ?_ADC_Set 0070                   ??_Lights_Control 0056  
 __end_of_getMain_All_Error_Status 06A3                        __pbssCOMMON 0077  
                        ___latbits 0001                      __pcstackBANK0 0056  
             ??_set_TimeoutCleared 0074         __end_of_getAll_Lights_Line 0F42  
                         ?_WDT_Set 0070                    ??_getCDS_Status 0074  
                    PIR_Main@error 0066                          _getCDS_AD 0707  
                        _getPIR_AD 01F4        __size_of_LED_Initialization 000C  
                       ?_Temp_Main 0070                   ___lwdiv@dividend 0058  
           _setTemp_Initialization 0ECE                      _PIR_Main$2715 0064  
                         ?___awdiv 0056              __size_of_my_MainTimer 0014  
                         ?___lwdiv 0056           setLights_Trigger@command 0076  
   __size_of_myMain_Initialization 0001      __end_of_myMain_Initialization 0ED0  
                   __size_of_getAD 001C                   ___lwdiv@quotient 005B  
                   _setPIRLED_Main 0429                           _CDS_Main 06A3  
      __end_of_Temp_Initialization 0ED6                  interrupt_function 0004  
                       ?_getCDS_AD 0076                           _LED_Main 0ED0  
                        _setLights 059D                          clear_ram0 0F00  
 __end_of_setLights_Initialization 0EE6         __size_of_setMain_Exception 003F  
                     _my_MainTimer 0FD7                         ?_getPIR_AD 0076  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0074  
                         _PIR_Main 0025                           _TMR1_ISR 079A  
                         _TMR1_Set 0F42                       ??_getTemp_AD 0056  
                         _WDT_Main 0F8E                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 000B              __size_of_setTemp_Main 0084  
           __end_of_setPIRLED_Main 0498     getMain_All_Error_Status@status 005B  
                      getAD@adcon0 0075                        getAD@adcon1 0074  
             __end_of_WDT_Clearing 0004                           _Fosc_Set 0EE6  
                 __size_of_WDT_Set 000E            setMain_Exception@status 005B  
__size_of_getMain_All_Error_Status 0036          ?_getMain_All_Error_Status 0070  
                       ?_setLights 0056                 __end_of_getTemp_AD 077E  
                         _SwDetect 0079                        ??_Temp_Main 0077  
    _getMain_All_Error_Status$2063 0056      _getMain_All_Error_Status$2065 0058  
                        setLED@led 0056                       _setTemp_Main 032E  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0074                 _CDS_Initialization 0ED9  
            _Lights_Initialization 0EDD      __size_of_getMain_LightsStatus 0030  
                getTemp_AD@channel 0076                    ?_setPIRLED_Main 0070  
                  ___lwdiv@divisor 0056                ?_CDS_Initialization 0070  
                  ___lwdiv@counter 005A                           __ptext10 0F8E  
                         __ptext11 0002                           __ptext20 0F35  
                         __ptext12 0ED6                           __ptext21 066D  
                         __ptext13 032E                           __ptext30 0F12  
                         __ptext22 0EF8                           __ptext14 0498  
                         __ptext31 0731                           __ptext23 0FB1  
                         __ptext15 0ED3                           __ptext40 0F08  
                         __ptext32 059D                           __ptext24 0F5E  
                         __ptext16 0ECE                           __ptext41 0ED0  
                         __ptext33 0F29                           __ptext25 0F50  
                         __ptext17 0025                           __ptext50 079A  
                         __ptext42 0429                           __ptext34 04F5  
                         __ptext26 0F42                           __ptext18 062E  
                         __ptext43 0F1D                           __ptext35 0FEB  
                         __ptext27 07EB                           __ptext19 07B6  
                         __ptext44 0F9F                           __ptext36 06D7  
                         __ptext28 0EE6                           __ptext45 03B2  
                         __ptext37 0F7D                           __ptext29 0EF1  
                         __ptext46 07D1                           __ptext38 0EDD  
                         __ptext47 06A3                           __ptext39 0EE1  
                         __ptext48 0ED9                           __ptext49 0F6D  
        __size_of_getLights_Status 0011            ??_setLED_Initialization 0077  
                      ??_getCDS_AD 0056                      setLED@command 0076  
                    __size_of_main 0051                        ??_getPIR_AD 005E  
               _PIR_Initialization 0FB1               ??_CDS_Initialization 0074  
      __size_of_Mcu_Initialization 000F                ?_PIR_Initialization 0070  
                         main@argc 0067                           main@argv 0069  
__size_of_setLights_Initialization 0005          ?_setLights_Initialization 0070  
             Lights_Control@lights 0076               ??_PIR_Initialization 0057  
                         intlevel1 0000                        ??_setLights 0057  
          ?_setTemp_Initialization 0070            LightsPointSelect@lights 0075  
               _getAll_Lights_Line 0F35            __size_of_setLights_Main 0028  
          __size_of_setLights_Line 000C                ?_getAll_Lights_Line 0070  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0076        __size_of_set_TimeoutCleared 0006  
                _LightsPointSelect 0F08               ??_getAll_Lights_Line 0076  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 0FC3         __end_of_LED_Initialization 0F29  
            __end_of_getCDS_Status 0F00     __end_of_setTemp_Initialization 0ECF  
                getCDS_AD@channel1 005A                  getCDS_AD@channel2 0076  
              ??_LightsPointSelect 0074  
