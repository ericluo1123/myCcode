

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Oct 27 17:32:10 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000D                     	;# 
    50  000E                     	;# 
    51  000E                     	;# 
    52  000F                     	;# 
    53  0010                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0014                     	;# 
    58  0015                     	;# 
    59  0015                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001B                     	;# 
    67  001C                     	;# 
    68  001D                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  0087                     	;# 
    75  0089                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0096                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009F                     	;# 
    95  0108                     	;# 
    96  0109                     	;# 
    97  010C                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  0185                     	;# 
   104  0186                     	;# 
   105  018C                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0096                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009F                     	;# 
   164  0108                     	;# 
   165  0109                     	;# 
   166  010C                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  0185                     	;# 
   173  0186                     	;# 
   174  018C                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0096                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009F                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0186                     	;# 
   243  018C                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0096                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009F                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0186                     	;# 
   312  018C                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0096                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009F                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0186                     	;# 
   381  018C                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0096                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009F                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0186                     	;# 
   450  018C                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0089                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  008F                     	;# 
   494  0090                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0095                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0096                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009F                     	;# 
   509  0108                     	;# 
   510  0109                     	;# 
   511  010C                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0186                     	;# 
   519  018C                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0009                     	;# 
   529  000A                     	;# 
   530  000B                     	;# 
   531  000C                     	;# 
   532  000D                     	;# 
   533  000E                     	;# 
   534  000E                     	;# 
   535  000F                     	;# 
   536  0010                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0014                     	;# 
   541  0015                     	;# 
   542  0015                     	;# 
   543  0016                     	;# 
   544  0017                     	;# 
   545  0018                     	;# 
   546  0019                     	;# 
   547  001A                     	;# 
   548  001B                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  001D                     	;# 
   552  001E                     	;# 
   553  001F                     	;# 
   554  0081                     	;# 
   555  0085                     	;# 
   556  0086                     	;# 
   557  0087                     	;# 
   558  0089                     	;# 
   559  008C                     	;# 
   560  008D                     	;# 
   561  008E                     	;# 
   562  008F                     	;# 
   563  0090                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0093                     	;# 
   568  0094                     	;# 
   569  0095                     	;# 
   570  0095                     	;# 
   571  0096                     	;# 
   572  0096                     	;# 
   573  0098                     	;# 
   574  0099                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009F                     	;# 
   578  0108                     	;# 
   579  0109                     	;# 
   580  010C                     	;# 
   581  010C                     	;# 
   582  010D                     	;# 
   583  010D                     	;# 
   584  010E                     	;# 
   585  010F                     	;# 
   586  0185                     	;# 
   587  0186                     	;# 
   588  018C                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  000E                     	;# 
   603  000E                     	;# 
   604  000F                     	;# 
   605  0010                     	;# 
   606  0011                     	;# 
   607  0012                     	;# 
   608  0013                     	;# 
   609  0014                     	;# 
   610  0015                     	;# 
   611  0015                     	;# 
   612  0016                     	;# 
   613  0017                     	;# 
   614  0018                     	;# 
   615  0019                     	;# 
   616  001A                     	;# 
   617  001B                     	;# 
   618  001B                     	;# 
   619  001C                     	;# 
   620  001D                     	;# 
   621  001E                     	;# 
   622  001F                     	;# 
   623  0081                     	;# 
   624  0085                     	;# 
   625  0086                     	;# 
   626  0087                     	;# 
   627  0089                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  008F                     	;# 
   632  0090                     	;# 
   633  0091                     	;# 
   634  0092                     	;# 
   635  0093                     	;# 
   636  0093                     	;# 
   637  0094                     	;# 
   638  0095                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0096                     	;# 
   642  0098                     	;# 
   643  0099                     	;# 
   644  009C                     	;# 
   645  009D                     	;# 
   646  009F                     	;# 
   647  0108                     	;# 
   648  0109                     	;# 
   649  010C                     	;# 
   650  010C                     	;# 
   651  010D                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  010F                     	;# 
   655  0185                     	;# 
   656  0186                     	;# 
   657  018C                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  000E                     	;# 
   673  000F                     	;# 
   674  0010                     	;# 
   675  0011                     	;# 
   676  0012                     	;# 
   677  0013                     	;# 
   678  0014                     	;# 
   679  0015                     	;# 
   680  0015                     	;# 
   681  0016                     	;# 
   682  0017                     	;# 
   683  0018                     	;# 
   684  0019                     	;# 
   685  001A                     	;# 
   686  001B                     	;# 
   687  001B                     	;# 
   688  001C                     	;# 
   689  001D                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  0081                     	;# 
   693  0085                     	;# 
   694  0086                     	;# 
   695  0087                     	;# 
   696  0089                     	;# 
   697  008C                     	;# 
   698  008D                     	;# 
   699  008E                     	;# 
   700  008F                     	;# 
   701  0090                     	;# 
   702  0091                     	;# 
   703  0092                     	;# 
   704  0093                     	;# 
   705  0093                     	;# 
   706  0094                     	;# 
   707  0095                     	;# 
   708  0095                     	;# 
   709  0096                     	;# 
   710  0096                     	;# 
   711  0098                     	;# 
   712  0099                     	;# 
   713  009C                     	;# 
   714  009D                     	;# 
   715  009F                     	;# 
   716  0108                     	;# 
   717  0109                     	;# 
   718  010C                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010D                     	;# 
   722  010E                     	;# 
   723  010F                     	;# 
   724  0185                     	;# 
   725  0186                     	;# 
   726  018C                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  000E                     	;# 
   741  000E                     	;# 
   742  000F                     	;# 
   743  0010                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0013                     	;# 
   747  0014                     	;# 
   748  0015                     	;# 
   749  0015                     	;# 
   750  0016                     	;# 
   751  0017                     	;# 
   752  0018                     	;# 
   753  0019                     	;# 
   754  001A                     	;# 
   755  001B                     	;# 
   756  001B                     	;# 
   757  001C                     	;# 
   758  001D                     	;# 
   759  001E                     	;# 
   760  001F                     	;# 
   761  0081                     	;# 
   762  0085                     	;# 
   763  0086                     	;# 
   764  0087                     	;# 
   765  0089                     	;# 
   766  008C                     	;# 
   767  008D                     	;# 
   768  008E                     	;# 
   769  008F                     	;# 
   770  0090                     	;# 
   771  0091                     	;# 
   772  0092                     	;# 
   773  0093                     	;# 
   774  0093                     	;# 
   775  0094                     	;# 
   776  0095                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0096                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009F                     	;# 
   785  0108                     	;# 
   786  0109                     	;# 
   787  010C                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  010D                     	;# 
   791  010E                     	;# 
   792  010F                     	;# 
   793  0185                     	;# 
   794  0186                     	;# 
   795  018C                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  000E                     	;# 
   811  000F                     	;# 
   812  0010                     	;# 
   813  0011                     	;# 
   814  0012                     	;# 
   815  0013                     	;# 
   816  0014                     	;# 
   817  0015                     	;# 
   818  0015                     	;# 
   819  0016                     	;# 
   820  0017                     	;# 
   821  0018                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001B                     	;# 
   826  001C                     	;# 
   827  001D                     	;# 
   828  001E                     	;# 
   829  001F                     	;# 
   830  0081                     	;# 
   831  0085                     	;# 
   832  0086                     	;# 
   833  0087                     	;# 
   834  0089                     	;# 
   835  008C                     	;# 
   836  008D                     	;# 
   837  008E                     	;# 
   838  008F                     	;# 
   839  0090                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0096                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009F                     	;# 
   854  0108                     	;# 
   855  0109                     	;# 
   856  010C                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  0185                     	;# 
   863  0186                     	;# 
   864  018C                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  000E                     	;# 
   880  000F                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  001D                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  0081                     	;# 
   900  0085                     	;# 
   901  0086                     	;# 
   902  0087                     	;# 
   903  0089                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  008E                     	;# 
   907  008F                     	;# 
   908  0090                     	;# 
   909  0091                     	;# 
   910  0092                     	;# 
   911  0093                     	;# 
   912  0093                     	;# 
   913  0094                     	;# 
   914  0095                     	;# 
   915  0095                     	;# 
   916  0096                     	;# 
   917  0096                     	;# 
   918  0098                     	;# 
   919  0099                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009F                     	;# 
   923  0108                     	;# 
   924  0109                     	;# 
   925  010C                     	;# 
   926  010C                     	;# 
   927  010D                     	;# 
   928  010D                     	;# 
   929  010E                     	;# 
   930  010F                     	;# 
   931  0185                     	;# 
   932  0186                     	;# 
   933  018C                     	;# 
   934  0000                     	;# 
   935  0001                     	;# 
   936  0002                     	;# 
   937  0003                     	;# 
   938  0004                     	;# 
   939  0005                     	;# 
   940  0006                     	;# 
   941  0007                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  000E                     	;# 
   949  000F                     	;# 
   950  0010                     	;# 
   951  0011                     	;# 
   952  0012                     	;# 
   953  0013                     	;# 
   954  0014                     	;# 
   955  0015                     	;# 
   956  0015                     	;# 
   957  0016                     	;# 
   958  0017                     	;# 
   959  0018                     	;# 
   960  0019                     	;# 
   961  001A                     	;# 
   962  001B                     	;# 
   963  001B                     	;# 
   964  001C                     	;# 
   965  001D                     	;# 
   966  001E                     	;# 
   967  001F                     	;# 
   968  0081                     	;# 
   969  0085                     	;# 
   970  0086                     	;# 
   971  0087                     	;# 
   972  0089                     	;# 
   973  008C                     	;# 
   974  008D                     	;# 
   975  008E                     	;# 
   976  008F                     	;# 
   977  0090                     	;# 
   978  0091                     	;# 
   979  0092                     	;# 
   980  0093                     	;# 
   981  0093                     	;# 
   982  0094                     	;# 
   983  0095                     	;# 
   984  0095                     	;# 
   985  0096                     	;# 
   986  0096                     	;# 
   987  0098                     	;# 
   988  0099                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009F                     	;# 
   992  0108                     	;# 
   993  0109                     	;# 
   994  010C                     	;# 
   995  010C                     	;# 
   996  010D                     	;# 
   997  010D                     	;# 
   998  010E                     	;# 
   999  010F                     	;# 
  1000  0185                     	;# 
  1001  0186                     	;# 
  1002  018C                     	;# 
  1003  0000                     	;# 
  1004  0001                     	;# 
  1005  0002                     	;# 
  1006  0003                     	;# 
  1007  0004                     	;# 
  1008  0005                     	;# 
  1009  0006                     	;# 
  1010  0007                     	;# 
  1011  0009                     	;# 
  1012  000A                     	;# 
  1013  000B                     	;# 
  1014  000C                     	;# 
  1015  000D                     	;# 
  1016  000E                     	;# 
  1017  000E                     	;# 
  1018  000F                     	;# 
  1019  0010                     	;# 
  1020  0011                     	;# 
  1021  0012                     	;# 
  1022  0013                     	;# 
  1023  0014                     	;# 
  1024  0015                     	;# 
  1025  0015                     	;# 
  1026  0016                     	;# 
  1027  0017                     	;# 
  1028  0018                     	;# 
  1029  0019                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001B                     	;# 
  1033  001C                     	;# 
  1034  001D                     	;# 
  1035  001E                     	;# 
  1036  001F                     	;# 
  1037  0081                     	;# 
  1038  0085                     	;# 
  1039  0086                     	;# 
  1040  0087                     	;# 
  1041  0089                     	;# 
  1042  008C                     	;# 
  1043  008D                     	;# 
  1044  008E                     	;# 
  1045  008F                     	;# 
  1046  0090                     	;# 
  1047  0091                     	;# 
  1048  0092                     	;# 
  1049  0093                     	;# 
  1050  0093                     	;# 
  1051  0094                     	;# 
  1052  0095                     	;# 
  1053  0095                     	;# 
  1054  0096                     	;# 
  1055  0096                     	;# 
  1056  0098                     	;# 
  1057  0099                     	;# 
  1058  009C                     	;# 
  1059  009D                     	;# 
  1060  009F                     	;# 
  1061  0108                     	;# 
  1062  0109                     	;# 
  1063  010C                     	;# 
  1064  010C                     	;# 
  1065  010D                     	;# 
  1066  010D                     	;# 
  1067  010E                     	;# 
  1068  010F                     	;# 
  1069  0185                     	;# 
  1070  0186                     	;# 
  1071  018C                     	;# 
  1072  0000                     	;# 
  1073  0001                     	;# 
  1074  0002                     	;# 
  1075  0003                     	;# 
  1076  0004                     	;# 
  1077  0005                     	;# 
  1078  0006                     	;# 
  1079  0007                     	;# 
  1080  0009                     	;# 
  1081  000A                     	;# 
  1082  000B                     	;# 
  1083  000C                     	;# 
  1084  000D                     	;# 
  1085  000E                     	;# 
  1086  000E                     	;# 
  1087  000F                     	;# 
  1088  0010                     	;# 
  1089  0011                     	;# 
  1090  0012                     	;# 
  1091  0013                     	;# 
  1092  0014                     	;# 
  1093  0015                     	;# 
  1094  0015                     	;# 
  1095  0016                     	;# 
  1096  0017                     	;# 
  1097  0018                     	;# 
  1098  0019                     	;# 
  1099  001A                     	;# 
  1100  001B                     	;# 
  1101  001B                     	;# 
  1102  001C                     	;# 
  1103  001D                     	;# 
  1104  001E                     	;# 
  1105  001F                     	;# 
  1106  0081                     	;# 
  1107  0085                     	;# 
  1108  0086                     	;# 
  1109  0087                     	;# 
  1110  0089                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  008F                     	;# 
  1115  0090                     	;# 
  1116  0091                     	;# 
  1117  0092                     	;# 
  1118  0093                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0095                     	;# 
  1122  0095                     	;# 
  1123  0096                     	;# 
  1124  0096                     	;# 
  1125  0098                     	;# 
  1126  0099                     	;# 
  1127  009C                     	;# 
  1128  009D                     	;# 
  1129  009F                     	;# 
  1130  0108                     	;# 
  1131  0109                     	;# 
  1132  010C                     	;# 
  1133  010C                     	;# 
  1134  010D                     	;# 
  1135  010D                     	;# 
  1136  010E                     	;# 
  1137  010F                     	;# 
  1138  0185                     	;# 
  1139  0186                     	;# 
  1140  018C                     	;# 
  1141  0000                     	;# 
  1142  0001                     	;# 
  1143  0002                     	;# 
  1144  0003                     	;# 
  1145  0004                     	;# 
  1146  0005                     	;# 
  1147  0006                     	;# 
  1148  0007                     	;# 
  1149  0009                     	;# 
  1150  000A                     	;# 
  1151  000B                     	;# 
  1152  000C                     	;# 
  1153  000D                     	;# 
  1154  000E                     	;# 
  1155  000E                     	;# 
  1156  000F                     	;# 
  1157  0010                     	;# 
  1158  0011                     	;# 
  1159  0012                     	;# 
  1160  0013                     	;# 
  1161  0014                     	;# 
  1162  0015                     	;# 
  1163  0015                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  0019                     	;# 
  1168  001A                     	;# 
  1169  001B                     	;# 
  1170  001B                     	;# 
  1171  001C                     	;# 
  1172  001D                     	;# 
  1173  001E                     	;# 
  1174  001F                     	;# 
  1175  0081                     	;# 
  1176  0085                     	;# 
  1177  0086                     	;# 
  1178  0087                     	;# 
  1179  0089                     	;# 
  1180  008C                     	;# 
  1181  008D                     	;# 
  1182  008E                     	;# 
  1183  008F                     	;# 
  1184  0090                     	;# 
  1185  0091                     	;# 
  1186  0092                     	;# 
  1187  0093                     	;# 
  1188  0093                     	;# 
  1189  0094                     	;# 
  1190  0095                     	;# 
  1191  0095                     	;# 
  1192  0096                     	;# 
  1193  0096                     	;# 
  1194  0098                     	;# 
  1195  0099                     	;# 
  1196  009C                     	;# 
  1197  009D                     	;# 
  1198  009F                     	;# 
  1199  0108                     	;# 
  1200  0109                     	;# 
  1201  010C                     	;# 
  1202  010C                     	;# 
  1203  010D                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  010F                     	;# 
  1207  0185                     	;# 
  1208  0186                     	;# 
  1209  018C                     	;# 
  1210  001F                     _ADCON0	set	31
  1211  001E                     _ADRES	set	30
  1212  0005                     _PORTA	set	5
  1213  0006                     _PORTB	set	6
  1214  0007                     _PORTC	set	7
  1215  0012                     _T2CON	set	18
  1216  0011                     _TMR2	set	17
  1217  005F                     _GIE	set	95
  1218  00F9                     _GO_nDONE	set	249
  1219  005E                     _PEIE	set	94
  1220  0033                     _RB3	set	51
  1221  0034                     _RB4	set	52
  1222  0035                     _RB5	set	53
  1223  0061                     _TMR2IF	set	97
  1224  009F                     _ADCON1	set	159
  1225  009D                     _FVRCON	set	157
  1226  0090                     _OSCCON	set	144
  1227  0092                     _PR2	set	146
  1228  0085                     _TRISA	set	133
  1229  0086                     _TRISB	set	134
  1230  0087                     _TRISC	set	135
  1231  0461                     _TMR2IE	set	1121
  1232  0185                     _ANSELA	set	389
  1233  0186                     _ANSELB	set	390
  1234                           
  1235                           	psect	text0
  1236  0000                     __ptext0:	
  1237                           ; #config settings
  1238                           
  1239                           
  1240                           ;psect for function _TMR2_ISR
  1241  0000                     
  1242                           	psect	cinit
  1243  0013                     start_initialization:	
  1244  0013                     __initialization:	
  1245                           
  1246                           ; Clear objects allocated to COMMON
  1247  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1248  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1249  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1250  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1251                           
  1252                           ; Clear objects allocated to BANK0
  1253  0017  1383               	bcf	3,7	;select IRP bank0
  1254  0018  3020               	movlw	low __pbssBANK0
  1255  0019  0084               	movwf	4
  1256  001A  3060               	movlw	low (__pbssBANK0+64)
  1257  001B  118A  2335  118A   	fcall	clear_ram0
  1258                           
  1259                           ; Clear objects allocated to BANK1
  1260  001E  30A0               	movlw	low __pbssBANK1
  1261  001F  0084               	movwf	4
  1262  0020  30B2               	movlw	low (__pbssBANK1+18)
  1263  0021  118A  2335         	fcall	clear_ram0
  1264  0023                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267  0023                     __end_of__initialization:	
  1268  0023  0183               	clrf	3
  1269  0024  118A  2A31         	ljmp	_main	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMMON
  1272  0076                     __pbssCOMMON:	
  1273  0076                     _Timer2:	
  1274  0076                     	ds	3
  1275  0079                     _LED:	
  1276  0079                     	ds	1
  1277                           
  1278                           	psect	bssBANK0
  1279  0020                     __pbssBANK0:	
  1280  0020                     __CDS:	
  1281  0020                     	ds	5
  1282  0025                     __PIR:	
  1283  0025                     	ds	47
  1284  0054                     _VarErrLED:	
  1285  0054                     	ds	4
  1286  0058                     _VarLED1:	
  1287  0058                     	ds	4
  1288  005C                     _VarLED2:	
  1289  005C                     	ds	4
  1290                           
  1291                           	psect	bssBANK1
  1292  00A0                     __pbssBANK1:	
  1293  00A0                     _myMain:	
  1294  00A0                     	ds	18
  1295                           
  1296                           	psect	clrtext
  1297  0335                     clear_ram0:	
  1298                           ;	Called with FSR containing the base address, and
  1299                           ;	W with the last address+1
  1300                           
  1301  0335  0064               	clrwdt	;clear the watchdog before getting into this loop
  1302  0336                     clrloop0:	
  1303  0336  0180               	clrf	0	;clear RAM location pointed to by FSR
  1304  0337  0A84               	incf	4,f	;increment pointer
  1305  0338  0604               	xorwf	4,w	;XOR with final address
  1306  0339  1903               	btfsc	3,2	;have we reached the end yet?
  1307  033A  3400               	retlw	0	;all done for this memory range, return
  1308  033B  0604               	xorwf	4,w	;XOR again to restore value
  1309  033C  2B36               	goto	clrloop0	;do the next byte
  1310                           
  1311                           	psect	cstackBANK1
  1312  00B2                     __pcstackBANK1:	
  1313  00B2                     ?_main:	
  1314  00B2                     main@argc:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x0
  1319  00B2                     	ds	2
  1320  00B4                     main@argv:	
  1321                           
  1322                           ; 2 bytes @ 0x2
  1323  00B4                     	ds	2
  1324                           
  1325                           	psect	cstackCOMMON
  1326  0070                     __pcstackCOMMON:	
  1327  0070                     ?_setLED_Initialization:	
  1328  0070                     ?_Fosc_Set:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?_IO_Set:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_ADC_Set:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_TMR2_Set:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_TMR2_ISR:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ??_TMR2_ISR:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_Timeout_Counter:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ?_set_TimeoutCleared:	
  1350                           ; 0 bytes @ 0x0
  1351                           
  1352  0070                     ?_myMain_Initialization:	
  1353                           ; 0 bytes @ 0x0
  1354                           
  1355  0070                     ?_PIR_Initialization:	
  1356                           ; 0 bytes @ 0x0
  1357                           
  1358  0070                     ?_CDS_Initialization:	
  1359                           ; 0 bytes @ 0x0
  1360                           
  1361  0070                     ?_LedPointSelect:	
  1362                           ; 0 bytes @ 0x0
  1363                           
  1364  0070                     ?_LED_Initialization:	
  1365                           ; 0 bytes @ 0x0
  1366                           
  1367  0070                     ?_Mcu_Initialization:	
  1368                           ; 0 bytes @ 0x0
  1369                           
  1370  0070                     ?_ISR:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ??_ISR:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376                           
  1377                           ; 0 bytes @ 0x0
  1378  0070                     	ds	4
  1379  0074                     ??_Fosc_Set:	
  1380  0074                     ??_IO_Set:	
  1381                           ; 0 bytes @ 0x4
  1382                           
  1383  0074                     ??_ADC_Set:	
  1384                           ; 0 bytes @ 0x4
  1385                           
  1386  0074                     ??_TMR2_Set:	
  1387                           ; 0 bytes @ 0x4
  1388                           
  1389  0074                     ??_Timeout_Counter:	
  1390                           ; 0 bytes @ 0x4
  1391                           
  1392  0074                     ??_set_TimeoutCleared:	
  1393                           ; 0 bytes @ 0x4
  1394                           
  1395  0074                     ??_myMain_Initialization:	
  1396                           ; 0 bytes @ 0x4
  1397                           
  1398  0074                     ??_CDS_Initialization:	
  1399                           ; 0 bytes @ 0x4
  1400                           
  1401  0074                     ??_LedPointSelect:	
  1402                           ; 0 bytes @ 0x4
  1403                           
  1404  0074                     ??_Mcu_Initialization:	
  1405                           ; 0 bytes @ 0x4
  1406                           
  1407  0074                     ??___awdiv:	
  1408                           ; 0 bytes @ 0x4
  1409                           
  1410  0074                     ??___lwdiv:	
  1411                           ; 0 bytes @ 0x4
  1412                           
  1413  0074                     ?_getAD:	
  1414                           ; 0 bytes @ 0x4
  1415                           
  1416  0074                     getAD@adcon1:	
  1417                           ; 1 bytes @ 0x4
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x4
  1421  0074                     	ds	1
  1422  0075                     ??_getAD:	
  1423  0075                     LedPointSelect@led:	
  1424                           ; 0 bytes @ 0x5
  1425                           
  1426  0075                     getAD@adcon0:	
  1427                           ; 1 bytes @ 0x5
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x5
  1431  0075                     	ds	1
  1432  0076                     ??_setLED_Initialization:	
  1433  0076                     ??_setLED:	
  1434                           ; 0 bytes @ 0x6
  1435                           
  1436  0076                     ??_LED_Initialization:	
  1437                           ; 0 bytes @ 0x6
  1438                           
  1439                           
  1440                           	psect	cstackBANK0
  1441  0060                     __pcstackBANK0:	
  1442                           ; 0 bytes @ 0x6
  1443                           
  1444  0060                     ?_setLED:	
  1445  0060                     ?_getCDS_AD:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0060                     ?___awdiv:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0060                     ?___lwdiv:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0060                     getCDS_AD@channel2:	
  1455                           ; 2 bytes @ 0x0
  1456                           
  1457  0060                     setLED@command:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0060                     ___awdiv@divisor:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0060                     ___lwdiv@divisor:	
  1464                           ; 2 bytes @ 0x0
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x0
  1468  0060                     	ds	1
  1469  0061                     ??_getCDS_AD:	
  1470  0061                     setLED@led:	
  1471                           ; 0 bytes @ 0x1
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x1
  1475  0061                     	ds	1
  1476  0062                     ??_PIR_Initialization:	
  1477  0062                     setLED_Initialization@led:	
  1478                           ; 0 bytes @ 0x2
  1479                           
  1480  0062                     ___awdiv@dividend:	
  1481                           ; 1 bytes @ 0x2
  1482                           
  1483  0062                     ___lwdiv@dividend:	
  1484                           ; 2 bytes @ 0x2
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0x2
  1488  0062                     	ds	1
  1489  0063                     getCDS_AD@i:	
  1490                           
  1491                           ; 1 bytes @ 0x3
  1492  0063                     	ds	1
  1493  0064                     getCDS_AD@j:	
  1494  0064                     ___awdiv@counter:	
  1495                           ; 1 bytes @ 0x4
  1496                           
  1497  0064                     ___lwdiv@counter:	
  1498                           ; 1 bytes @ 0x4
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0x4
  1502  0064                     	ds	1
  1503  0065                     getCDS_AD@channel1:	
  1504  0065                     ___awdiv@sign:	
  1505                           ; 1 bytes @ 0x5
  1506                           
  1507  0065                     ___lwdiv@quotient:	
  1508                           ; 1 bytes @ 0x5
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x5
  1512  0065                     	ds	1
  1513  0066                     ___awdiv@quotient:	
  1514                           
  1515                           ; 2 bytes @ 0x6
  1516  0066                     	ds	2
  1517  0068                     ?_getPIR_AD:	
  1518  0068                     getPIR_AD@channel2:	
  1519                           ; 0 bytes @ 0x8
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0x8
  1523  0068                     	ds	1
  1524  0069                     ??_getPIR_AD:	
  1525                           
  1526                           ; 0 bytes @ 0x9
  1527  0069                     	ds	3
  1528  006C                     getPIR_AD@j:	
  1529                           
  1530                           ; 1 bytes @ 0xC
  1531  006C                     	ds	1
  1532  006D                     getPIR_AD@channel1:	
  1533                           
  1534                           ; 1 bytes @ 0xD
  1535  006D                     	ds	1
  1536  006E                     getPIR_AD@i:	
  1537                           
  1538                           ; 1 bytes @ 0xE
  1539  006E                     	ds	1
  1540  006F                     ??_main:	
  1541                           
  1542                           ; 0 bytes @ 0xF
  1543  006F                     	ds	1
  1544                           
  1545                           	psect	maintext
  1546  0231                     __pmaintext:	
  1547 ;;
  1548 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1549 ;;
  1550 ;; *************** function _main *****************
  1551 ;; Defined at:
  1552 ;;		line 7 in file "../src/Main_B1.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  argc            2    0[BANK1 ] int 
  1555 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2    0[BANK1 ] int 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 17F/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1567 ;;      Params:         0       0       4       0
  1568 ;;      Locals:         0       0       0       0
  1569 ;;      Temps:          0       1       0       0
  1570 ;;      Totals:         0       1       4       0
  1571 ;;Total ram usage:        5 bytes
  1572 ;; Hardware stack levels required when called:    6
  1573 ;; This function calls:
  1574 ;;		_CDS_Initialization
  1575 ;;		_LED_Initialization
  1576 ;;		_Mcu_Initialization
  1577 ;;		_PIR_Initialization
  1578 ;;		_getCDS_AD
  1579 ;;		_getPIR_AD
  1580 ;;		_myMain_Initialization
  1581 ;; This function is called by:
  1582 ;;		Startup code after reset
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _main
  1588  0231                     _main:	
  1589                           
  1590                           ;Main_B1.c: 8: myMain_Initialization();
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1594  0231  118A  2353  118A   	fcall	_myMain_Initialization
  1595                           
  1596                           ;Main_B1.c: 9: Mcu_Initialization();
  1597  0234  118A  231D  118A   	fcall	_Mcu_Initialization
  1598                           
  1599                           ;Main_B1.c: 10: ;;
  1600                           ;Main_B1.c: 11: LED_Initialization();
  1601  0237  118A  2329  118A   	fcall	_LED_Initialization
  1602                           
  1603                           ;Main_B1.c: 12: ;;
  1604                           ;Main_B1.c: 14: ;;
  1605                           ;Main_B1.c: 15: ;;
  1606                           ;Main_B1.c: 16: ;;
  1607                           ;Main_B1.c: 17: ;;
  1608                           ;Main_B1.c: 18: ;;
  1609                           ;Main_B1.c: 20: ;;
  1610                           ;Main_B1.c: 21: ;;
  1611                           ;Main_B1.c: 22: CDS_Initialization();
  1612  023A  118A  234F  118A   	fcall	_CDS_Initialization
  1613                           
  1614                           ;Main_B1.c: 23: PIR_Initialization();
  1615  023D  118A  22B0  118A   	fcall	_PIR_Initialization
  1616                           
  1617                           ;Main_B1.c: 24: ;;
  1618                           ;Main_B1.c: 25: ;;
  1619                           ;Main_B1.c: 26: __nop();
  1620  0240  0000               	nop
  1621  0241                     l2282:	
  1622                           ;Main_B1.c: 27: ;;
  1623                           ;Main_B1.c: 30: while (1) {
  1624                           
  1625                           
  1626                           ;Main_B1.c: 32: if (myMain.PowerON) {
  1627  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0243  1C20               	btfss	_myMain^(0+128),0
  1630  0244  2A41               	goto	l2282
  1631                           
  1632                           ;Main_B1.c: 34: ;;
  1633                           ;Main_B1.c: 42: ;;
  1634                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  1635  0245  3031               	movlw	49
  1636  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0248  00EF               	movwf	??_main
  1639  0249  086F               	movf	??_main,w
  1640  024A  00E0               	movwf	getCDS_AD@channel2
  1641  024B  3009               	movlw	9
  1642  024C  118A  2207  118A   	fcall	_getCDS_AD
  1643                           
  1644                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  1645  024F  300D               	movlw	13
  1646  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0252  00EF               	movwf	??_main
  1649  0253  086F               	movf	??_main,w
  1650  0254  00E8               	movwf	getPIR_AD@channel2
  1651  0255  3005               	movlw	5
  1652  0256  118A  2026  118A   	fcall	_getPIR_AD
  1653  0259  2A41               	goto	l2282
  1654  025A                     __end_of_main:	
  1655                           ;Main_B1.c: 61: }
  1656                           ;Main_B1.c: 109: }
  1657                           ;Main_B1.c: 110: return (0);
  1658                           ;	Return value of _main is never used
  1659                           
  1660                           
  1661                           	psect	text1
  1662  0353                     __ptext1:	
  1663 ;; *************** function _myMain_Initialization *****************
  1664 ;; Defined at:
  1665 ;;		line 115 in file "../src/Main_B1.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		None
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1679 ;;      Params:         0       0       0       0
  1680 ;;      Locals:         0       0       0       0
  1681 ;;      Temps:          0       0       0       0
  1682 ;;      Totals:         0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _myMain_Initialization
  1695  0353                     _myMain_Initialization:	
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _myMain_Initialization: []
  1699  0353  0008               	return
  1700  0354                     __end_of_myMain_Initialization:	
  1701                           
  1702                           	psect	text2
  1703  0026                     __ptext2:	
  1704 ;; *************** function _getPIR_AD *****************
  1705 ;; Defined at:
  1706 ;;		line 138 in file "../src/PIR_B1.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  channel1        1    wreg     unsigned char 
  1709 ;;  channel2        1    8[BANK0 ] unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  channel1        1   13[BANK0 ] unsigned char 
  1712 ;;  i               1   14[BANK0 ] unsigned char 
  1713 ;;  j               1   12[BANK0 ] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1723 ;;      Params:         0       1       0       0
  1724 ;;      Locals:         0       3       0       0
  1725 ;;      Temps:          0       3       0       0
  1726 ;;      Totals:         0       7       0       0
  1727 ;;Total ram usage:        7 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    4
  1730 ;; This function calls:
  1731 ;;		___awdiv
  1732 ;;		___lwdiv
  1733 ;;		_getAD
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _getPIR_AD
  1741  0026                     _getPIR_AD:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1745                           ;getPIR_AD@channel1 stored from wreg
  1746  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0028  00ED               	movwf	getPIR_AD@channel1
  1749                           
  1750                           ;PIR_B1.c: 139: char i = 0, j = 0;
  1751  0029  01EE               	clrf	getPIR_AD@i
  1752  002A  01EC               	clrf	getPIR_AD@j
  1753                           
  1754                           ;PIR_B1.c: 141: if (_PIR.ADtoGO == 1) {
  1755  002B  1CA5               	btfss	__PIR,1
  1756  002C  0008               	return
  1757                           
  1758                           ;PIR_B1.c: 142: _PIR.GO = 1;
  1759  002D  1525               	bsf	__PIR,2
  1760                           
  1761                           ;PIR_B1.c: 143: _PIR.ADRES = getAD(channel1, 0x70);
  1762  002E  3070               	movlw	112
  1763  002F  00E9               	movwf	??_getPIR_AD
  1764  0030  0869               	movf	??_getPIR_AD,w
  1765  0031  00F4               	movwf	getAD@adcon1
  1766  0032  086D               	movf	getPIR_AD@channel1,w
  1767  0033  118A  225A  118A   	fcall	_getAD
  1768  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0038  00EA               	movwf	??_getPIR_AD+1
  1771  0039  086A               	movf	??_getPIR_AD+1,w
  1772  003A  00A7               	movwf	__PIR+2
  1773                           
  1774                           ;PIR_B1.c: 144: _PIR.VRAD = _PIR.ADRES / 51;
  1775  003B  3033               	movlw	51
  1776  003C  00E0               	movwf	___awdiv@divisor
  1777  003D  3000               	movlw	0
  1778  003E  00E1               	movwf	___awdiv@divisor+1
  1779  003F  0827               	movf	__PIR+2,w
  1780  0040  00E9               	movwf	??_getPIR_AD
  1781  0041  01EA               	clrf	??_getPIR_AD+1
  1782  0042  0869               	movf	??_getPIR_AD,w
  1783  0043  00E2               	movwf	___awdiv@dividend
  1784  0044  086A               	movf	??_getPIR_AD+1,w
  1785  0045  00E3               	movwf	___awdiv@dividend+1
  1786  0046  118A  210E  118A   	fcall	___awdiv
  1787  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1788  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1789  004B  0860               	movf	?___awdiv,w
  1790  004C  00EB               	movwf	??_getPIR_AD+2
  1791  004D  086B               	movf	??_getPIR_AD+2,w
  1792  004E  00A8               	movwf	__PIR+3
  1793                           
  1794                           ;PIR_B1.c: 145: _PIR.VRAD1 = _PIR.ADRES;
  1795  004F  0827               	movf	__PIR+2,w
  1796  0050  00E9               	movwf	??_getPIR_AD
  1797  0051  0869               	movf	??_getPIR_AD,w
  1798  0052  00A9               	movwf	__PIR+4
  1799                           
  1800                           ;PIR_B1.c: 146: _PIR.ADRES = getAD(channel2, 0x70);
  1801  0053  3070               	movlw	112
  1802  0054  00E9               	movwf	??_getPIR_AD
  1803  0055  0869               	movf	??_getPIR_AD,w
  1804  0056  00F4               	movwf	getAD@adcon1
  1805  0057  0868               	movf	getPIR_AD@channel2,w
  1806  0058  118A  225A  118A   	fcall	_getAD
  1807  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1808  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1809  005D  00EA               	movwf	??_getPIR_AD+1
  1810  005E  086A               	movf	??_getPIR_AD+1,w
  1811  005F  00A7               	movwf	__PIR+2
  1812                           
  1813                           ;PIR_B1.c: 147: _PIR.SignalAD = _PIR.ADRES;
  1814  0060  0827               	movf	__PIR+2,w
  1815  0061  00E9               	movwf	??_getPIR_AD
  1816  0062  0869               	movf	??_getPIR_AD,w
  1817  0063  00A6               	movwf	__PIR+1
  1818                           
  1819                           ;PIR_B1.c: 149: switch (_PIR.VRAD) {
  1820  0064  2880               	goto	l2198
  1821  0065                     l2182:	
  1822                           ;PIR_B1.c: 150: case 0:
  1823                           
  1824                           
  1825                           ;PIR_B1.c: 151: if (_PIR.VRAD1 < 10) {
  1826  0065  300A               	movlw	10
  1827  0066  0229               	subwf	__PIR+4,w
  1828  0067  1803               	skipnc
  1829  0068  286B               	goto	l2186
  1830                           
  1831                           ;PIR_B1.c: 152: _PIR.CloseTimeValue = 5;
  1832  0069  3005               	movlw	5
  1833  006A  286C               	goto	L1
  1834  006B                     l2186:	
  1835                           ;PIR_B1.c: 153: } else {
  1836                           
  1837                           
  1838                           ;PIR_B1.c: 154: _PIR.CloseTimeValue = 60;
  1839  006B  303C               	movlw	60
  1840  006C                     L1:	
  1841  006C  00CC               	movwf	__PIR+39
  1842  006D  3000               	movlw	0
  1843  006E  287E               	goto	L5
  1844  006F                     l2188:	
  1845                           ;PIR_B1.c: 157: case 1:
  1846                           
  1847                           ;PIR_B1.c: 155: }
  1848                           ;PIR_B1.c: 156: break;
  1849                           
  1850                           
  1851                           ;PIR_B1.c: 158: _PIR.CloseTimeValue = 300;
  1852  006F  302C               	movlw	44
  1853  0070  00CC               	movwf	__PIR+39
  1854  0071  3001               	movlw	1
  1855  0072  287E               	goto	L5
  1856  0073                     l2190:	
  1857                           ;PIR_B1.c: 160: case 2:
  1858                           
  1859                           ;PIR_B1.c: 159: break;
  1860                           
  1861                           
  1862                           ;PIR_B1.c: 161: _PIR.CloseTimeValue = 600;
  1863  0073  3058               	movlw	88
  1864  0074  00CC               	movwf	__PIR+39
  1865  0075  3002               	movlw	2
  1866  0076  287E               	goto	L5
  1867  0077                     l2192:	
  1868                           ;PIR_B1.c: 163: case 3:
  1869                           
  1870                           ;PIR_B1.c: 162: break;
  1871                           
  1872                           
  1873                           ;PIR_B1.c: 164: _PIR.CloseTimeValue = 900;
  1874  0077  3084               	movlw	132
  1875  0078  00CC               	movwf	__PIR+39
  1876  0079  3003               	movlw	3
  1877  007A  287E               	goto	L5
  1878  007B                     l2194:	
  1879                           ;PIR_B1.c: 166: case 4:
  1880                           
  1881                           ;PIR_B1.c: 165: break;
  1882                           
  1883                           
  1884                           ;PIR_B1.c: 167: _PIR.CloseTimeValue = 1200;
  1885  007B  30B0               	movlw	176
  1886  007C  00CC               	movwf	__PIR+39
  1887  007D  3004               	movlw	4
  1888  007E                     L5:	
  1889  007E  00CD               	movwf	__PIR+40
  1890                           
  1891                           ;PIR_B1.c: 169: }
  1892                           
  1893                           ;PIR_B1.c: 168: break;
  1894  007F  2891               	goto	l2200
  1895  0080                     l2198:	
  1896  0080  0828               	movf	__PIR+3,w
  1897                           
  1898                           ; Switch size 1, requested type "space"
  1899                           ; Number of cases is 5, Range of values is 0 to 4
  1900                           ; switch strategies available:
  1901                           ; Name         Instructions Cycles
  1902                           ; simple_byte           16     9 (average)
  1903                           ; direct_byte           17     7 (fixed)
  1904                           ; jumptable            260     6 (fixed)
  1905                           ;	Chosen strategy is simple_byte
  1906  0081  3A00               	xorlw	0	; case 0
  1907  0082  1903               	skipnz
  1908  0083  2865               	goto	l2182
  1909  0084  3A01               	xorlw	1	; case 1
  1910  0085  1903               	skipnz
  1911  0086  286F               	goto	l2188
  1912  0087  3A03               	xorlw	3	; case 2
  1913  0088  1903               	skipnz
  1914  0089  2873               	goto	l2190
  1915  008A  3A01               	xorlw	1	; case 3
  1916  008B  1903               	skipnz
  1917  008C  2877               	goto	l2192
  1918  008D  3A07               	xorlw	7	; case 4
  1919  008E  1903               	skipnz
  1920  008F  287B               	goto	l2194
  1921  0090  2891               	goto	l2200
  1922  0091                     l2200:	
  1923                           
  1924                           ;PIR_B1.c: 171: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  1925  0091  0826               	movf	__PIR+1,w
  1926  0092  00E9               	movwf	??_getPIR_AD
  1927  0093  082B               	movf	__PIR+6,w
  1928  0094  3E2E               	addlw	(__PIR+9)& (0+255)
  1929  0095  0084               	movwf	4
  1930  0096  0869               	movf	??_getPIR_AD,w
  1931  0097  1383               	bcf	3,7	;select IRP bank0
  1932  0098  0080               	movwf	0
  1933                           
  1934                           ;PIR_B1.c: 172: for (i = 0; i < 10; i++) {
  1935  0099  01EE               	clrf	getPIR_AD@i
  1936  009A  300A               	movlw	10
  1937  009B  026E               	subwf	getPIR_AD@i,w
  1938  009C  1803               	btfsc	3,0
  1939  009D  28B2               	goto	l2214
  1940  009E                     l2208:	
  1941                           
  1942                           ;PIR_B1.c: 173: _PIR.TenAverageValue += _PIR.TenAverage[i];
  1943  009E  086E               	movf	getPIR_AD@i,w
  1944  009F  3E2E               	addlw	(__PIR+9)& (0+255)
  1945  00A0  0084               	movwf	4
  1946  00A1  0800               	movf	0,w
  1947  00A2  00E9               	movwf	??_getPIR_AD
  1948  00A3  01EA               	clrf	??_getPIR_AD+1
  1949  00A4  0869               	movf	??_getPIR_AD,w
  1950  00A5  07B8               	addwf	__PIR+19,f
  1951  00A6  1803               	skipnc
  1952  00A7  0AB9               	incf	__PIR+20,f
  1953  00A8  086A               	movf	??_getPIR_AD+1,w
  1954  00A9  07B9               	addwf	__PIR+20,f
  1955  00AA  3001               	movlw	1
  1956  00AB  00E9               	movwf	??_getPIR_AD
  1957  00AC  0869               	movf	??_getPIR_AD,w
  1958  00AD  07EE               	addwf	getPIR_AD@i,f
  1959  00AE  300A               	movlw	10
  1960  00AF  026E               	subwf	getPIR_AD@i,w
  1961  00B0  1C03               	skipc
  1962  00B1  289E               	goto	l2208
  1963  00B2                     l2214:	
  1964                           
  1965                           ;PIR_B1.c: 174: }
  1966                           ;PIR_B1.c: 175: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  1967  00B2  300A               	movlw	10
  1968  00B3  00E0               	movwf	___lwdiv@divisor
  1969  00B4  3000               	movlw	0
  1970  00B5  00E1               	movwf	___lwdiv@divisor+1
  1971  00B6  0839               	movf	__PIR+20,w
  1972  00B7  01E3               	clrf	___lwdiv@dividend+1
  1973  00B8  07E3               	addwf	___lwdiv@dividend+1,f
  1974  00B9  0838               	movf	__PIR+19,w
  1975  00BA  01E2               	clrf	___lwdiv@dividend
  1976  00BB  07E2               	addwf	___lwdiv@dividend,f
  1977  00BC  118A  21C7  118A   	fcall	___lwdiv
  1978  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1979  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1980  00C1  0860               	movf	?___lwdiv,w
  1981  00C2  00E9               	movwf	??_getPIR_AD
  1982  00C3  082C               	movf	__PIR+7,w
  1983  00C4  3E3A               	addlw	(__PIR+21)& (0+255)
  1984  00C5  0084               	movwf	4
  1985  00C6  0869               	movf	??_getPIR_AD,w
  1986  00C7  1383               	bcf	3,7	;select IRP bank0
  1987  00C8  0080               	movwf	0
  1988                           
  1989                           ;PIR_B1.c: 176: _PIR.TenAverageValue = 0;
  1990  00C9  01B8               	clrf	__PIR+19
  1991  00CA  01B9               	clrf	__PIR+20
  1992                           
  1993                           ;PIR_B1.c: 178: for (i = 0; i <= 9; i++) {
  1994  00CB  01EE               	clrf	getPIR_AD@i
  1995  00CC  300A               	movlw	10
  1996  00CD  026E               	subwf	getPIR_AD@i,w
  1997  00CE  1803               	btfsc	3,0
  1998  00CF  28E4               	goto	l2230
  1999  00D0                     l2224:	
  2000                           
  2001                           ;PIR_B1.c: 179: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2002  00D0  086E               	movf	getPIR_AD@i,w
  2003  00D1  3E3A               	addlw	(__PIR+21)& (0+255)
  2004  00D2  0084               	movwf	4
  2005  00D3  0800               	movf	0,w
  2006  00D4  00E9               	movwf	??_getPIR_AD
  2007  00D5  01EA               	clrf	??_getPIR_AD+1
  2008  00D6  0869               	movf	??_getPIR_AD,w
  2009  00D7  07C4               	addwf	__PIR+31,f
  2010  00D8  1803               	skipnc
  2011  00D9  0AC5               	incf	__PIR+32,f
  2012  00DA  086A               	movf	??_getPIR_AD+1,w
  2013  00DB  07C5               	addwf	__PIR+32,f
  2014  00DC  3001               	movlw	1
  2015  00DD  00E9               	movwf	??_getPIR_AD
  2016  00DE  0869               	movf	??_getPIR_AD,w
  2017  00DF  07EE               	addwf	getPIR_AD@i,f
  2018  00E0  300A               	movlw	10
  2019  00E1  026E               	subwf	getPIR_AD@i,w
  2020  00E2  1C03               	skipc
  2021  00E3  28D0               	goto	l2224
  2022  00E4                     l2230:	
  2023                           
  2024                           ;PIR_B1.c: 180: }
  2025                           ;PIR_B1.c: 181: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2026  00E4  300A               	movlw	10
  2027  00E5  00E0               	movwf	___lwdiv@divisor
  2028  00E6  3000               	movlw	0
  2029  00E7  00E1               	movwf	___lwdiv@divisor+1
  2030  00E8  0845               	movf	__PIR+32,w
  2031  00E9  01E3               	clrf	___lwdiv@dividend+1
  2032  00EA  07E3               	addwf	___lwdiv@dividend+1,f
  2033  00EB  0844               	movf	__PIR+31,w
  2034  00EC  01E2               	clrf	___lwdiv@dividend
  2035  00ED  07E2               	addwf	___lwdiv@dividend,f
  2036  00EE  118A  21C7  118A   	fcall	___lwdiv
  2037  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2038  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2039  00F3  0860               	movf	?___lwdiv,w
  2040  00F4  00E9               	movwf	??_getPIR_AD
  2041  00F5  0869               	movf	??_getPIR_AD,w
  2042  00F6  00AD               	movwf	__PIR+8
  2043                           
  2044                           ;PIR_B1.c: 182: _PIR.HundredAverageValue = 0;
  2045  00F7  01C4               	clrf	__PIR+31
  2046  00F8  01C5               	clrf	__PIR+32
  2047                           
  2048                           ;PIR_B1.c: 184: if (_PIR.TenCount < 10) {
  2049  00F9  300A               	movlw	10
  2050  00FA  022B               	subwf	__PIR+6,w
  2051  00FB  1803               	skipnc
  2052  00FC  2902               	goto	l2238
  2053                           
  2054                           ;PIR_B1.c: 185: _PIR.TenCount++;
  2055  00FD  3001               	movlw	1
  2056  00FE  00E9               	movwf	??_getPIR_AD
  2057  00FF  0869               	movf	??_getPIR_AD,w
  2058  0100  07AB               	addwf	__PIR+6,f
  2059                           
  2060                           ;PIR_B1.c: 186: } else {
  2061  0101  0008               	return
  2062  0102                     l2238:	
  2063                           
  2064                           ;PIR_B1.c: 187: _PIR.TenCount = 0;
  2065  0102  01AB               	clrf	__PIR+6
  2066                           
  2067                           ;PIR_B1.c: 188: if (_PIR.HundreCount < 10)
  2068  0103  300A               	movlw	10
  2069  0104  022C               	subwf	__PIR+7,w
  2070  0105  1803               	skipnc
  2071  0106  290C               	goto	l2244
  2072                           
  2073                           ;PIR_B1.c: 189: _PIR.HundreCount++;
  2074  0107  3001               	movlw	1
  2075  0108  00E9               	movwf	??_getPIR_AD
  2076  0109  0869               	movf	??_getPIR_AD,w
  2077  010A  07AC               	addwf	__PIR+7,f
  2078  010B  0008               	return
  2079  010C                     l2244:	
  2080                           
  2081                           ;PIR_B1.c: 190: else
  2082                           ;PIR_B1.c: 191: _PIR.HundreCount = 0;
  2083  010C  01AC               	clrf	__PIR+7
  2084  010D  0008               	return
  2085  010E                     __end_of_getPIR_AD:	
  2086                           
  2087                           	psect	text3
  2088  01C7                     __ptext3:	
  2089 ;; *************** function ___lwdiv *****************
  2090 ;; Defined at:
  2091 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  divisor         2    0[BANK0 ] unsigned int 
  2094 ;;  dividend        2    2[BANK0 ] unsigned int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  quotient        2    5[BANK0 ] unsigned int 
  2097 ;;  counter         1    4[BANK0 ] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[BANK0 ] unsigned int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2107 ;;      Params:         0       4       0       0
  2108 ;;      Locals:         0       3       0       0
  2109 ;;      Temps:          1       0       0       0
  2110 ;;      Totals:         1       7       0       0
  2111 ;;Total ram usage:        8 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_getPIR_AD
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function ___lwdiv
  2123  01C7                     ___lwdiv:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2127  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2128  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2129  01C9  01E5               	clrf	___lwdiv@quotient
  2130  01CA  01E6               	clrf	___lwdiv@quotient+1
  2131  01CB  0861               	movf	___lwdiv@divisor+1,w
  2132  01CC  0460               	iorwf	___lwdiv@divisor,w
  2133  01CD  1903               	skipnz
  2134  01CE  2A00               	goto	l2146
  2135  01CF  01E4               	clrf	___lwdiv@counter
  2136  01D0  0AE4               	incf	___lwdiv@counter,f
  2137  01D1                     l2134:	
  2138  01D1  1BE1               	btfsc	___lwdiv@divisor+1,7
  2139  01D2  29DF               	goto	l2136
  2140  01D3  3001               	movlw	1
  2141  01D4                     u2145:	
  2142  01D4  1003               	clrc
  2143  01D5  0DE0               	rlf	___lwdiv@divisor,f
  2144  01D6  0DE1               	rlf	___lwdiv@divisor+1,f
  2145  01D7  3EFF               	addlw	-1
  2146  01D8  1D03               	skipz
  2147  01D9  29D4               	goto	u2145
  2148  01DA  3001               	movlw	1
  2149  01DB  00F4               	movwf	??___lwdiv
  2150  01DC  0874               	movf	??___lwdiv,w
  2151  01DD  07E4               	addwf	___lwdiv@counter,f
  2152  01DE  29D1               	goto	l2134
  2153  01DF                     l2136:	
  2154  01DF  3001               	movlw	1
  2155  01E0                     u2165:	
  2156  01E0  1003               	clrc
  2157  01E1  0DE5               	rlf	___lwdiv@quotient,f
  2158  01E2  0DE6               	rlf	___lwdiv@quotient+1,f
  2159  01E3  3EFF               	addlw	-1
  2160  01E4  1D03               	skipz
  2161  01E5  29E0               	goto	u2165
  2162  01E6  0861               	movf	___lwdiv@divisor+1,w
  2163  01E7  0263               	subwf	___lwdiv@dividend+1,w
  2164  01E8  1D03               	skipz
  2165  01E9  29EC               	goto	u2175
  2166  01EA  0860               	movf	___lwdiv@divisor,w
  2167  01EB  0262               	subwf	___lwdiv@dividend,w
  2168  01EC                     u2175:	
  2169  01EC  1C03               	skipc
  2170  01ED  29F5               	goto	l2142
  2171  01EE  0860               	movf	___lwdiv@divisor,w
  2172  01EF  02E2               	subwf	___lwdiv@dividend,f
  2173  01F0  0861               	movf	___lwdiv@divisor+1,w
  2174  01F1  1C03               	skipc
  2175  01F2  03E3               	decf	___lwdiv@dividend+1,f
  2176  01F3  02E3               	subwf	___lwdiv@dividend+1,f
  2177  01F4  1465               	bsf	___lwdiv@quotient,0
  2178  01F5                     l2142:	
  2179  01F5  3001               	movlw	1
  2180  01F6                     u2185:	
  2181  01F6  1003               	clrc
  2182  01F7  0CE1               	rrf	___lwdiv@divisor+1,f
  2183  01F8  0CE0               	rrf	___lwdiv@divisor,f
  2184  01F9  3EFF               	addlw	-1
  2185  01FA  1D03               	skipz
  2186  01FB  29F6               	goto	u2185
  2187  01FC  3001               	movlw	1
  2188  01FD  02E4               	subwf	___lwdiv@counter,f
  2189  01FE  1D03               	btfss	3,2
  2190  01FF  29DF               	goto	l2136
  2191  0200                     l2146:	
  2192  0200  0866               	movf	___lwdiv@quotient+1,w
  2193  0201  01E1               	clrf	?___lwdiv+1
  2194  0202  07E1               	addwf	?___lwdiv+1,f
  2195  0203  0865               	movf	___lwdiv@quotient,w
  2196  0204  01E0               	clrf	?___lwdiv
  2197  0205  07E0               	addwf	?___lwdiv,f
  2198  0206  0008               	return
  2199  0207                     __end_of___lwdiv:	
  2200                           
  2201                           	psect	text4
  2202  010E                     __ptext4:	
  2203 ;; *************** function ___awdiv *****************
  2204 ;; Defined at:
  2205 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  divisor         2    0[BANK0 ] int 
  2208 ;;  dividend        2    2[BANK0 ] int 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  quotient        2    6[BANK0 ] int 
  2211 ;;  sign            1    5[BANK0 ] unsigned char 
  2212 ;;  counter         1    4[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    0[BANK0 ] int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2222 ;;      Params:         0       4       0       0
  2223 ;;      Locals:         0       4       0       0
  2224 ;;      Temps:          1       0       0       0
  2225 ;;      Totals:         1       8       0       0
  2226 ;;Total ram usage:        9 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    2
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_getPIR_AD
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function ___awdiv
  2238  010E                     ___awdiv:	
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2242  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2243  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0110  01E5               	clrf	___awdiv@sign
  2245  0111  1FE1               	btfss	___awdiv@divisor+1,7
  2246  0112  291A               	goto	l2088
  2247  0113  09E0               	comf	___awdiv@divisor,f
  2248  0114  09E1               	comf	___awdiv@divisor+1,f
  2249  0115  0AE0               	incf	___awdiv@divisor,f
  2250  0116  1903               	skipnz
  2251  0117  0AE1               	incf	___awdiv@divisor+1,f
  2252  0118  01E5               	clrf	___awdiv@sign
  2253  0119  0AE5               	incf	___awdiv@sign,f
  2254  011A                     l2088:	
  2255  011A  1FE3               	btfss	___awdiv@dividend+1,7
  2256  011B  2925               	goto	l2094
  2257  011C  09E2               	comf	___awdiv@dividend,f
  2258  011D  09E3               	comf	___awdiv@dividend+1,f
  2259  011E  0AE2               	incf	___awdiv@dividend,f
  2260  011F  1903               	skipnz
  2261  0120  0AE3               	incf	___awdiv@dividend+1,f
  2262  0121  3001               	movlw	1
  2263  0122  00F4               	movwf	??___awdiv
  2264  0123  0874               	movf	??___awdiv,w
  2265  0124  06E5               	xorwf	___awdiv@sign,f
  2266  0125                     l2094:	
  2267  0125  01E6               	clrf	___awdiv@quotient
  2268  0126  01E7               	clrf	___awdiv@quotient+1
  2269  0127  0861               	movf	___awdiv@divisor+1,w
  2270  0128  0460               	iorwf	___awdiv@divisor,w
  2271  0129  1903               	skipnz
  2272  012A  295C               	goto	l2116
  2273  012B  01E4               	clrf	___awdiv@counter
  2274  012C  0AE4               	incf	___awdiv@counter,f
  2275  012D                     l2104:	
  2276  012D  1BE1               	btfsc	___awdiv@divisor+1,7
  2277  012E  293B               	goto	l2106
  2278  012F  3001               	movlw	1
  2279  0130                     u2065:	
  2280  0130  1003               	clrc
  2281  0131  0DE0               	rlf	___awdiv@divisor,f
  2282  0132  0DE1               	rlf	___awdiv@divisor+1,f
  2283  0133  3EFF               	addlw	-1
  2284  0134  1D03               	skipz
  2285  0135  2930               	goto	u2065
  2286  0136  3001               	movlw	1
  2287  0137  00F4               	movwf	??___awdiv
  2288  0138  0874               	movf	??___awdiv,w
  2289  0139  07E4               	addwf	___awdiv@counter,f
  2290  013A  292D               	goto	l2104
  2291  013B                     l2106:	
  2292  013B  3001               	movlw	1
  2293  013C                     u2085:	
  2294  013C  1003               	clrc
  2295  013D  0DE6               	rlf	___awdiv@quotient,f
  2296  013E  0DE7               	rlf	___awdiv@quotient+1,f
  2297  013F  3EFF               	addlw	-1
  2298  0140  1D03               	skipz
  2299  0141  293C               	goto	u2085
  2300  0142  0861               	movf	___awdiv@divisor+1,w
  2301  0143  0263               	subwf	___awdiv@dividend+1,w
  2302  0144  1D03               	skipz
  2303  0145  2948               	goto	u2095
  2304  0146  0860               	movf	___awdiv@divisor,w
  2305  0147  0262               	subwf	___awdiv@dividend,w
  2306  0148                     u2095:	
  2307  0148  1C03               	skipc
  2308  0149  2951               	goto	l2112
  2309  014A  0860               	movf	___awdiv@divisor,w
  2310  014B  02E2               	subwf	___awdiv@dividend,f
  2311  014C  0861               	movf	___awdiv@divisor+1,w
  2312  014D  1C03               	skipc
  2313  014E  03E3               	decf	___awdiv@dividend+1,f
  2314  014F  02E3               	subwf	___awdiv@dividend+1,f
  2315  0150  1466               	bsf	___awdiv@quotient,0
  2316  0151                     l2112:	
  2317  0151  3001               	movlw	1
  2318  0152                     u2105:	
  2319  0152  1003               	clrc
  2320  0153  0CE1               	rrf	___awdiv@divisor+1,f
  2321  0154  0CE0               	rrf	___awdiv@divisor,f
  2322  0155  3EFF               	addlw	-1
  2323  0156  1D03               	skipz
  2324  0157  2952               	goto	u2105
  2325  0158  3001               	movlw	1
  2326  0159  02E4               	subwf	___awdiv@counter,f
  2327  015A  1D03               	btfss	3,2
  2328  015B  293B               	goto	l2106
  2329  015C                     l2116:	
  2330  015C  0865               	movf	___awdiv@sign,w
  2331  015D  1903               	btfsc	3,2
  2332  015E  2964               	goto	l2120
  2333  015F  09E6               	comf	___awdiv@quotient,f
  2334  0160  09E7               	comf	___awdiv@quotient+1,f
  2335  0161  0AE6               	incf	___awdiv@quotient,f
  2336  0162  1903               	skipnz
  2337  0163  0AE7               	incf	___awdiv@quotient+1,f
  2338  0164                     l2120:	
  2339  0164  0867               	movf	___awdiv@quotient+1,w
  2340  0165  01E1               	clrf	?___awdiv+1
  2341  0166  07E1               	addwf	?___awdiv+1,f
  2342  0167  0866               	movf	___awdiv@quotient,w
  2343  0168  01E0               	clrf	?___awdiv
  2344  0169  07E0               	addwf	?___awdiv,f
  2345  016A  0008               	return
  2346  016B                     __end_of___awdiv:	
  2347                           
  2348                           	psect	text5
  2349  0207                     __ptext5:	
  2350 ;; *************** function _getCDS_AD *****************
  2351 ;; Defined at:
  2352 ;;		line 45 in file "../src/CDS_B1.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  channel1        1    wreg     unsigned char 
  2355 ;;  channel2        1    0[BANK0 ] unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  channel1        1    5[BANK0 ] unsigned char 
  2358 ;;  j               1    4[BANK0 ] unsigned char 
  2359 ;;  i               1    3[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2369 ;;      Params:         0       1       0       0
  2370 ;;      Locals:         0       3       0       0
  2371 ;;      Temps:          0       2       0       0
  2372 ;;      Totals:         0       6       0       0
  2373 ;;Total ram usage:        6 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    4
  2376 ;; This function calls:
  2377 ;;		_getAD
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _getCDS_AD
  2385  0207                     _getCDS_AD:	
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2389                           ;getCDS_AD@channel1 stored from wreg
  2390  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0209  00E5               	movwf	getCDS_AD@channel1
  2393                           
  2394                           ;CDS_B1.c: 46: char i = 0, j = 0;
  2395  020A  01E3               	clrf	getCDS_AD@i
  2396  020B  01E4               	clrf	getCDS_AD@j
  2397                           
  2398                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  2399  020C  1DA0               	btfss	__CDS,3
  2400  020D  0008               	return
  2401                           
  2402                           ;CDS_B1.c: 48: _CDS.GO = 1;
  2403  020E  14A0               	bsf	__CDS,1
  2404                           
  2405                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  2406  020F  3070               	movlw	112
  2407  0210  00E1               	movwf	??_getCDS_AD
  2408  0211  0861               	movf	??_getCDS_AD,w
  2409  0212  00F4               	movwf	getAD@adcon1
  2410  0213  0865               	movf	getCDS_AD@channel1,w
  2411  0214  118A  225A  118A   	fcall	_getAD
  2412  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0219  00E2               	movwf	??_getCDS_AD+1
  2415  021A  0862               	movf	??_getCDS_AD+1,w
  2416  021B  00A4               	movwf	__CDS+4
  2417                           
  2418                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  2419  021C  0824               	movf	__CDS+4,w
  2420  021D  00E1               	movwf	??_getCDS_AD
  2421  021E  0861               	movf	??_getCDS_AD,w
  2422  021F  00A2               	movwf	__CDS+2
  2423                           
  2424                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  2425  0220  3070               	movlw	112
  2426  0221  00E1               	movwf	??_getCDS_AD
  2427  0222  0861               	movf	??_getCDS_AD,w
  2428  0223  00F4               	movwf	getAD@adcon1
  2429  0224  0860               	movf	getCDS_AD@channel2,w
  2430  0225  118A  225A         	fcall	_getAD
  2431  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0229  00E2               	movwf	??_getCDS_AD+1
  2434  022A  0862               	movf	??_getCDS_AD+1,w
  2435  022B  00A4               	movwf	__CDS+4
  2436                           
  2437                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  2438  022C  0824               	movf	__CDS+4,w
  2439  022D  00E1               	movwf	??_getCDS_AD
  2440  022E  0861               	movf	??_getCDS_AD,w
  2441  022F  00A3               	movwf	__CDS+3
  2442  0230  0008               	return
  2443  0231                     __end_of_getCDS_AD:	
  2444                           
  2445                           	psect	text6
  2446  025A                     __ptext6:	
  2447 ;; *************** function _getAD *****************
  2448 ;; Defined at:
  2449 ;;		line 392 in file "../src/MCU_B1.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  adcon0          1    wreg     unsigned char 
  2452 ;;  adcon1          1    4[COMMON] unsigned char 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  adcon0          1    5[COMMON] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      unsigned char 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2464 ;;      Params:         1       0       0       0
  2465 ;;      Locals:         1       0       0       0
  2466 ;;      Temps:          0       0       0       0
  2467 ;;      Totals:         2       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    3
  2471 ;; This function calls:
  2472 ;;		_Timeout_Counter
  2473 ;;		_set_TimeoutCleared
  2474 ;; This function is called by:
  2475 ;;		_getCDS_AD
  2476 ;;		_getPIR_AD
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _getAD
  2482  025A                     _getAD:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2486                           ;getAD@adcon0 stored from wreg
  2487  025A  00F5               	movwf	getAD@adcon0
  2488                           
  2489                           ;MCU_B1.c: 393: ADCON0 = adcon0;
  2490  025B  0875               	movf	getAD@adcon0,w
  2491  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2492  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2493  025E  009F               	movwf	31	;volatile
  2494                           
  2495                           ;MCU_B1.c: 394: ADCON1 = adcon1;
  2496  025F  0874               	movf	getAD@adcon1,w
  2497  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0262  009F               	movwf	31	;volatile
  2500                           
  2501                           ;MCU_B1.c: 395: GO_nDONE = 1;
  2502  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0265  149F               	bsf	31,1	;volatile
  2505                           
  2506                           ;MCU_B1.c: 396: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2507  0266  2A6A               	goto	l1560
  2508  0267                     l1558:	
  2509                           
  2510                           ;MCU_B1.c: 397: Timeout_Counter();
  2511  0267  118A  22DA  118A   	fcall	_Timeout_Counter
  2512  026A                     l1560:	
  2513  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2514  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2515  026C  1C9F               	btfss	31,1	;volatile
  2516  026D  2A72               	goto	l1564
  2517  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2518  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0270  1D2F               	btfss	(_myMain^(0+128)+15),2
  2520  0271  2A67               	goto	l1558
  2521  0272                     l1564:	
  2522                           
  2523                           ;MCU_B1.c: 398: };
  2524                           ;MCU_B1.c: 399: set_TimeoutCleared();
  2525  0272  118A  2344         	fcall	_set_TimeoutCleared
  2526                           
  2527                           ;MCU_B1.c: 400: return ADRES;
  2528  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0276  081E               	movf	30,w	;volatile
  2531  0277  0008               	return
  2532  0278                     __end_of_getAD:	
  2533                           
  2534                           	psect	text7
  2535  0344                     __ptext7:	
  2536 ;; *************** function _set_TimeoutCleared *****************
  2537 ;; Defined at:
  2538 ;;		line 217 in file "../src/Main_B1.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;		None               void
  2545 ;; Registers used:
  2546 ;;		status,2
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2552 ;;      Params:         0       0       0       0
  2553 ;;      Locals:         0       0       0       0
  2554 ;;      Temps:          0       0       0       0
  2555 ;;      Totals:         0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    2
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_getAD
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _set_TimeoutCleared
  2568  0344                     _set_TimeoutCleared:	
  2569                           
  2570                           ;Main_B1.c: 218: myMain.Timeout = 0;
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _set_TimeoutCleared: [status,2]
  2574  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0346  112F               	bcf	(_myMain^(0+128)+15),2
  2577                           
  2578                           ;Main_B1.c: 219: myMain.Timeout_Counter = 0;
  2579  0347  01B0               	clrf	(_myMain^(0+128)+16)
  2580  0348  01B1               	clrf	((_myMain+1)^(0+128)+16)
  2581  0349  0008               	return
  2582  034A                     __end_of_set_TimeoutCleared:	
  2583                           
  2584                           	psect	text8
  2585  02DA                     __ptext8:	
  2586 ;; *************** function _Timeout_Counter *****************
  2587 ;; Defined at:
  2588 ;;		line 208 in file "../src/Main_B1.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2602 ;;      Params:         0       0       0       0
  2603 ;;      Locals:         0       0       0       0
  2604 ;;      Temps:          0       0       0       0
  2605 ;;      Totals:         0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    2
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_getAD
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _Timeout_Counter
  2618  02DA                     _Timeout_Counter:	
  2619                           
  2620                           ;Main_B1.c: 209: myMain.Timeout_Counter++;
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  2624  02DA  3001               	movlw	1
  2625  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2626  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2627  02DD  07B0               	addwf	(_myMain^(0+128)+16),f
  2628  02DE  1803               	skipnc
  2629  02DF  0AB1               	incf	((_myMain+1)^(0+128)+16),f
  2630  02E0  3000               	movlw	0
  2631  02E1  07B1               	addwf	((_myMain+1)^(0+128)+16),f
  2632                           
  2633                           ;Main_B1.c: 210: if (myMain.Timeout_Counter == 10000) {
  2634  02E2  3027               	movlw	39
  2635  02E3  0631               	xorwf	((_myMain+1)^(0+128)+16),w
  2636  02E4  1D03               	skipz
  2637  02E5  2AE8               	goto	u1105
  2638  02E6  3010               	movlw	16
  2639  02E7  0630               	xorwf	(_myMain^(0+128)+16),w
  2640  02E8                     u1105:	
  2641  02E8  1D03               	skipz
  2642  02E9  0008               	return
  2643                           
  2644                           ;Main_B1.c: 211: myMain.Timeout_Counter = 0;
  2645  02EA  01B0               	clrf	(_myMain^(0+128)+16)
  2646  02EB  01B1               	clrf	((_myMain+1)^(0+128)+16)
  2647                           
  2648                           ;Main_B1.c: 212: myMain.Timeout = 1;
  2649  02EC  152F               	bsf	(_myMain^(0+128)+15),2
  2650  02ED  0008               	return
  2651  02EE                     __end_of_Timeout_Counter:	
  2652                           
  2653                           	psect	text9
  2654  02B0                     __ptext9:	
  2655 ;; *************** function _PIR_Initialization *****************
  2656 ;; Defined at:
  2657 ;;		line 7 in file "../src/PIR_B1.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2671 ;;      Params:         0       0       0       0
  2672 ;;      Locals:         0       0       0       0
  2673 ;;      Temps:          0       1       0       0
  2674 ;;      Totals:         0       1       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		_setLED
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _PIR_Initialization
  2687  02B0                     _PIR_Initialization:	
  2688                           
  2689                           ;PIR_B1.c: 8: _PIR.Enable = 1;
  2690                           
  2691                           ;incstack = 0
  2692                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2693  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2694  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2695  02B2  1425               	bsf	__PIR,0
  2696                           
  2697                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  2698  02B3  300F               	movlw	15
  2699  02B4  00E2               	movwf	??_PIR_Initialization
  2700  02B5  0862               	movf	??_PIR_Initialization,w
  2701  02B6  00D1               	movwf	__PIR+44
  2702                           
  2703                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 150;
  2704  02B7  3096               	movlw	150
  2705  02B8  00CC               	movwf	__PIR+39
  2706  02B9  3000               	movlw	0
  2707  02BA  00CD               	movwf	__PIR+40
  2708                           
  2709                           ;PIR_B1.c: 11: _PIR.TriggerValue = 2;
  2710  02BB  3002               	movlw	2
  2711  02BC  00E2               	movwf	??_PIR_Initialization
  2712  02BD  0862               	movf	??_PIR_Initialization,w
  2713  02BE  00C8               	movwf	__PIR+35
  2714                           
  2715                           ;PIR_B1.c: 12: setLED(2, 1);
  2716  02BF  01E0               	clrf	setLED@command
  2717  02C0  0AE0               	incf	setLED@command,f
  2718  02C1  3002               	movlw	2
  2719  02C2  118A  216B         	fcall	_setLED
  2720  02C4  0008               	return
  2721  02C5                     __end_of_PIR_Initialization:	
  2722                           
  2723                           	psect	text10
  2724  031D                     __ptext10:	
  2725 ;; *************** function _Mcu_Initialization *****************
  2726 ;; Defined at:
  2727 ;;		line 30 in file "../src/MCU_B1.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2741 ;;      Params:         0       0       0       0
  2742 ;;      Locals:         0       0       0       0
  2743 ;;      Temps:          0       0       0       0
  2744 ;;      Totals:         0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		_ADC_Set
  2750 ;;		_Fosc_Set
  2751 ;;		_IO_Set
  2752 ;;		_TMR2_Set
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _Mcu_Initialization
  2760  031D                     _Mcu_Initialization:	
  2761                           
  2762                           ;MCU_B1.c: 32: Fosc_Set();
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2766  031D  118A  234A  118A   	fcall	_Fosc_Set
  2767                           
  2768                           ;MCU_B1.c: 34: IO_Set();
  2769  0320  118A  22C5  118A   	fcall	_IO_Set
  2770                           
  2771                           ;MCU_B1.c: 36: ;;
  2772                           ;MCU_B1.c: 38: ;;
  2773                           ;MCU_B1.c: 40: ADC_Set();
  2774  0323  118A  233D  118A   	fcall	_ADC_Set
  2775                           
  2776                           ;MCU_B1.c: 42: TMR2_Set();
  2777  0326  118A  2310         	fcall	_TMR2_Set
  2778  0328  0008               	return
  2779  0329                     __end_of_Mcu_Initialization:	
  2780                           
  2781                           	psect	text11
  2782  0310                     __ptext11:	
  2783 ;; *************** function _TMR2_Set *****************
  2784 ;; Defined at:
  2785 ;;		line 234 in file "../src/MCU_B1.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, status,2
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2799 ;;      Params:         0       0       0       0
  2800 ;;      Locals:         0       0       0       0
  2801 ;;      Temps:          0       0       0       0
  2802 ;;      Totals:         0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    2
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_Mcu_Initialization
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _TMR2_Set
  2815  0310                     _TMR2_Set:	
  2816                           
  2817                           ;MCU_B1.c: 235: T2CON = (0x10 | 0x00 | 1);
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _TMR2_Set: [wreg+status,2]
  2821  0310  3011               	movlw	17
  2822  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0313  0092               	movwf	18	;volatile
  2825                           
  2826                           ;MCU_B1.c: 236: TMR2 = 155;
  2827  0314  309B               	movlw	155
  2828  0315  0091               	movwf	17	;volatile
  2829                           
  2830                           ;MCU_B1.c: 237: PR2 = 0;
  2831  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2832  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2833  0318  0192               	clrf	18	;volatile
  2834                           
  2835                           ;MCU_B1.c: 238: TMR2IE = 1;
  2836  0319  148C               	bsf	12,1	;volatile
  2837                           
  2838                           ;MCU_B1.c: 239: PEIE = 1;
  2839  031A  170B               	bsf	11,6	;volatile
  2840                           
  2841                           ;MCU_B1.c: 240: GIE = 1;
  2842  031B  178B               	bsf	11,7	;volatile
  2843  031C  0008               	return
  2844  031D                     __end_of_TMR2_Set:	
  2845                           
  2846                           	psect	text12
  2847  02C5                     __ptext12:	
  2848 ;; *************** function _IO_Set *****************
  2849 ;; Defined at:
  2850 ;;		line 60 in file "../src/MCU_B1.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, status,2
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2864 ;;      Params:         0       0       0       0
  2865 ;;      Locals:         0       0       0       0
  2866 ;;      Temps:          0       0       0       0
  2867 ;;      Totals:         0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    2
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_Mcu_Initialization
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _IO_Set
  2880  02C5                     _IO_Set:	
  2881                           
  2882                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _IO_Set: [wreg+status,2]
  2886  02C5  302F               	movlw	47
  2887  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2888  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2889  02C8  0085               	movwf	5	;volatile
  2890                           
  2891                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  2892  02C9  3001               	movlw	1
  2893  02CA  0086               	movwf	6	;volatile
  2894                           
  2895                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  2896  02CB  0187               	clrf	7	;volatile
  2897                           
  2898                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  2899  02CC  3007               	movlw	7
  2900  02CD  1683               	bsf	3,5	;RP0=1, select bank3
  2901  02CE  1703               	bsf	3,6	;RP1=1, select bank3
  2902  02CF  0085               	movwf	5	;volatile
  2903                           
  2904                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  2905  02D0  3001               	movlw	1
  2906  02D1  0086               	movwf	6	;volatile
  2907                           
  2908                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  2909  02D2  30AF               	movlw	175
  2910  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2911  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2912  02D5  0085               	movwf	5	;volatile
  2913                           
  2914                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  2915  02D6  3001               	movlw	1
  2916  02D7  0086               	movwf	6	;volatile
  2917                           
  2918                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  2919  02D8  0187               	clrf	7	;volatile
  2920  02D9  0008               	return
  2921  02DA                     __end_of_IO_Set:	
  2922                           
  2923                           	psect	text13
  2924  034A                     __ptext13:	
  2925 ;; *************** function _Fosc_Set *****************
  2926 ;; Defined at:
  2927 ;;		line 56 in file "../src/MCU_B1.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;		None               void
  2934 ;; Registers used:
  2935 ;;		wreg
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2941 ;;      Params:         0       0       0       0
  2942 ;;      Locals:         0       0       0       0
  2943 ;;      Temps:          0       0       0       0
  2944 ;;      Totals:         0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_Mcu_Initialization
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _Fosc_Set
  2957  034A                     _Fosc_Set:	
  2958                           
  2959                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _Fosc_Set: [wreg]
  2963  034A  303C               	movlw	60
  2964  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2965  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2966  034D  0090               	movwf	16	;volatile
  2967  034E  0008               	return
  2968  034F                     __end_of_Fosc_Set:	
  2969                           
  2970                           	psect	text14
  2971  033D                     __ptext14:	
  2972 ;; *************** function _ADC_Set *****************
  2973 ;; Defined at:
  2974 ;;		line 385 in file "../src/MCU_B1.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;		None               void
  2981 ;; Registers used:
  2982 ;;		wreg
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2988 ;;      Params:         0       0       0       0
  2989 ;;      Locals:         0       0       0       0
  2990 ;;      Temps:          0       0       0       0
  2991 ;;      Totals:         0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    2
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_Mcu_Initialization
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _ADC_Set
  3004  033D                     _ADC_Set:	
  3005                           
  3006                           ;MCU_B1.c: 386: ADCON1 = 0x72;
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _ADC_Set: [wreg]
  3010  033D  3072               	movlw	114
  3011  033E  1683               	bsf	3,5	;RP0=1, select bank1
  3012  033F  1303               	bcf	3,6	;RP1=0, select bank1
  3013  0340  009F               	movwf	31	;volatile
  3014                           
  3015                           ;MCU_B1.c: 387: FVRCON = 0xc1;
  3016  0341  30C1               	movlw	193
  3017  0342  009D               	movwf	29	;volatile
  3018  0343  0008               	return
  3019  0344                     __end_of_ADC_Set:	
  3020                           
  3021                           	psect	text15
  3022  0329                     __ptext15:	
  3023 ;; *************** function _LED_Initialization *****************
  3024 ;; Defined at:
  3025 ;;		line 31 in file "../src/LED_B1.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       0       0       0
  3040 ;;      Locals:         0       0       0       0
  3041 ;;      Temps:          0       0       0       0
  3042 ;;      Totals:         0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		_setLED_Initialization
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _LED_Initialization
  3055  0329                     _LED_Initialization:	
  3056                           
  3057                           ;LED_B1.c: 33: setLED_Initialization(1);
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3061  0329  3001               	movlw	1
  3062  032A  118A  22EE  118A   	fcall	_setLED_Initialization
  3063                           
  3064                           ;LED_B1.c: 36: setLED_Initialization(2);
  3065  032D  3002               	movlw	2
  3066  032E  118A  22EE  118A   	fcall	_setLED_Initialization
  3067                           
  3068                           ;LED_B1.c: 42: setLED_Initialization(99);
  3069  0331  3063               	movlw	99
  3070  0332  118A  22EE         	fcall	_setLED_Initialization
  3071  0334  0008               	return
  3072  0335                     __end_of_LED_Initialization:	
  3073                           
  3074                           	psect	text16
  3075  02EE                     __ptext16:	
  3076 ;; *************** function _setLED_Initialization *****************
  3077 ;; Defined at:
  3078 ;;		line 63 in file "../src/LED_B1.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  led             1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  led             1    2[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;		None               void
  3085 ;; Registers used:
  3086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3092 ;;      Params:         0       0       0       0
  3093 ;;      Locals:         0       1       0       0
  3094 ;;      Temps:          0       0       0       0
  3095 ;;      Totals:         0       1       0       0
  3096 ;;Total ram usage:        1 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    4
  3099 ;; This function calls:
  3100 ;;		_LedPointSelect
  3101 ;;		_setLED
  3102 ;; This function is called by:
  3103 ;;		_LED_Initialization
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _setLED_Initialization
  3109  02EE                     _setLED_Initialization:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3113                           ;setLED_Initialization@led stored from wreg
  3114  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3115  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3116  02F0  00E2               	movwf	setLED_Initialization@led
  3117                           
  3118                           ;LED_B1.c: 64: LedPointSelect(led);
  3119  02F1  0862               	movf	setLED_Initialization@led,w
  3120  02F2  118A  2278  118A   	fcall	_LedPointSelect
  3121                           
  3122                           ;LED_B1.c: 65: LED->Enable = 1;
  3123  02F5  0879               	movf	_LED,w
  3124  02F6  0084               	movwf	4
  3125  02F7  1383               	bcf	3,7	;select IRP bank0
  3126  02F8  1400               	bsf	0,0
  3127                           
  3128                           ;LED_B1.c: 66: setLED(led, 0);
  3129  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3130  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3131  02FB  01E0               	clrf	setLED@command
  3132  02FC  0862               	movf	setLED_Initialization@led,w
  3133  02FD  118A  216B         	fcall	_setLED
  3134  02FF  0008               	return
  3135  0300                     __end_of_setLED_Initialization:	
  3136                           
  3137                           	psect	text17
  3138  016B                     __ptext17:	
  3139 ;; *************** function _setLED *****************
  3140 ;; Defined at:
  3141 ;;		line 70 in file "../src/LED_B1.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  led             1    wreg     unsigned char 
  3144 ;;  command         1    0[BANK0 ] unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  led             1    1[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3156 ;;      Params:         0       1       0       0
  3157 ;;      Locals:         0       1       0       0
  3158 ;;      Temps:          0       0       0       0
  3159 ;;      Totals:         0       2       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    3
  3163 ;; This function calls:
  3164 ;;		_LedPointSelect
  3165 ;; This function is called by:
  3166 ;;		_setLED_Initialization
  3167 ;;		_PIR_Initialization
  3168 ;;		_PIR_Main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _setLED
  3174  016B                     _setLED:	
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3178                           ;setLED@led stored from wreg
  3179  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3180  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3181  016D  00E1               	movwf	setLED@led
  3182                           
  3183                           ;LED_B1.c: 71: LedPointSelect(led);
  3184  016E  0861               	movf	setLED@led,w
  3185  016F  118A  2278  118A   	fcall	_LedPointSelect
  3186                           
  3187                           ;LED_B1.c: 72: if (command == 0) {
  3188  0172  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0173  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0174  08E0               	movf	setLED@command,f
  3191  0175  1D03               	skipz
  3192  0176  2989               	goto	l2038
  3193                           
  3194                           ;LED_B1.c: 74: if (led == 1) {
  3195  0177  0861               	movf	setLED@led,w
  3196  0178  3A01               	xorlw	1
  3197  0179  1D03               	skipz
  3198  017A  297D               	goto	l2030
  3199                           
  3200                           ;LED_B1.c: 78: RB4 = 1;
  3201  017B  1606               	bsf	6,4	;volatile
  3202                           
  3203                           ;LED_B1.c: 80: }
  3204  017C  0008               	return
  3205  017D                     l2030:	
  3206                           
  3207                           ;LED_B1.c: 83: else if (led == 2) {
  3208  017D  0861               	movf	setLED@led,w
  3209  017E  3A02               	xorlw	2
  3210  017F  1D03               	skipz
  3211  0180  2983               	goto	l2034
  3212                           
  3213                           ;LED_B1.c: 87: RB5 = 1;
  3214  0181  1686               	bsf	6,5	;volatile
  3215                           
  3216                           ;LED_B1.c: 89: }
  3217  0182  0008               	return
  3218  0183                     l2034:	
  3219                           
  3220                           ;LED_B1.c: 101: else if (led == 99) {
  3221  0183  0861               	movf	setLED@led,w
  3222  0184  3A63               	xorlw	99
  3223  0185  1D03               	skipz
  3224  0186  0008               	return
  3225                           
  3226                           ;LED_B1.c: 105: RB3 = 1;
  3227  0187  1586               	bsf	6,3	;volatile
  3228                           
  3229                           ;LED_B1.c: 107: }
  3230                           ;LED_B1.c: 109: } else if (command == 1) {
  3231  0188  0008               	return
  3232  0189                     l2038:	
  3233  0189  0860               	movf	setLED@command,w
  3234  018A  3A01               	xorlw	1
  3235  018B  1D03               	skipz
  3236  018C  299F               	goto	l2052
  3237                           
  3238                           ;LED_B1.c: 111: if (led == 1) {
  3239  018D  0861               	movf	setLED@led,w
  3240  018E  3A01               	xorlw	1
  3241  018F  1D03               	skipz
  3242  0190  2993               	goto	l2044
  3243                           
  3244                           ;LED_B1.c: 115: RB4 = 0;
  3245  0191  1206               	bcf	6,4	;volatile
  3246                           
  3247                           ;LED_B1.c: 117: }
  3248  0192  0008               	return
  3249  0193                     l2044:	
  3250                           
  3251                           ;LED_B1.c: 120: else if (led == 2) {
  3252  0193  0861               	movf	setLED@led,w
  3253  0194  3A02               	xorlw	2
  3254  0195  1D03               	skipz
  3255  0196  2999               	goto	l2048
  3256                           
  3257                           ;LED_B1.c: 124: RB5 = 0;
  3258  0197  1286               	bcf	6,5	;volatile
  3259                           
  3260                           ;LED_B1.c: 126: }
  3261  0198  0008               	return
  3262  0199                     l2048:	
  3263                           
  3264                           ;LED_B1.c: 138: else if (led == 99) {
  3265  0199  0861               	movf	setLED@led,w
  3266  019A  3A63               	xorlw	99
  3267  019B  1D03               	skipz
  3268  019C  0008               	return
  3269                           
  3270                           ;LED_B1.c: 142: RB3 = 0;
  3271  019D  1186               	bcf	6,3	;volatile
  3272                           
  3273                           ;LED_B1.c: 144: }
  3274                           ;LED_B1.c: 146: } else if (command == 10) {
  3275  019E  0008               	return
  3276  019F                     l2052:	
  3277  019F  0860               	movf	setLED@command,w
  3278  01A0  3A0A               	xorlw	10
  3279  01A1  1D03               	skipz
  3280  01A2  29BE               	goto	l2070
  3281                           
  3282                           ;LED_B1.c: 147: LED->GO = 0;
  3283  01A3  0879               	movf	_LED,w
  3284  01A4  0084               	movwf	4
  3285  01A5  1383               	bcf	3,7	;select IRP bank0
  3286  01A6  1080               	bcf	0,1
  3287                           
  3288                           ;LED_B1.c: 148: LED->Time = 0;
  3289  01A7  0A79               	incf	_LED,w
  3290  01A8  0084               	movwf	4
  3291  01A9  0180               	clrf	0
  3292  01AA  0A84               	incf	4,f
  3293  01AB  0180               	clrf	0
  3294                           
  3295                           ;LED_B1.c: 150: if (led == 1) {
  3296  01AC  0861               	movf	setLED@led,w
  3297  01AD  3A01               	xorlw	1
  3298  01AE  1D03               	skipz
  3299  01AF  29B2               	goto	l2062
  3300                           
  3301                           ;LED_B1.c: 154: RB4 = 1;
  3302  01B0  1606               	bsf	6,4	;volatile
  3303                           
  3304                           ;LED_B1.c: 156: }
  3305  01B1  0008               	return
  3306  01B2                     l2062:	
  3307                           
  3308                           ;LED_B1.c: 159: else if (led == 2) {
  3309  01B2  0861               	movf	setLED@led,w
  3310  01B3  3A02               	xorlw	2
  3311  01B4  1D03               	skipz
  3312  01B5  29B8               	goto	l2066
  3313                           
  3314                           ;LED_B1.c: 163: RB5 = 1;
  3315  01B6  1686               	bsf	6,5	;volatile
  3316                           
  3317                           ;LED_B1.c: 165: }
  3318  01B7  0008               	return
  3319  01B8                     l2066:	
  3320                           
  3321                           ;LED_B1.c: 177: else if (led == 99) {
  3322  01B8  0861               	movf	setLED@led,w
  3323  01B9  3A63               	xorlw	99
  3324  01BA  1D03               	skipz
  3325  01BB  0008               	return
  3326                           
  3327                           ;LED_B1.c: 181: RB3 = 1;
  3328  01BC  1586               	bsf	6,3	;volatile
  3329                           
  3330                           ;LED_B1.c: 183: }
  3331                           ;LED_B1.c: 185: } else if (command == 11) {
  3332  01BD  0008               	return
  3333  01BE                     l2070:	
  3334  01BE  0860               	movf	setLED@command,w
  3335  01BF  3A0B               	xorlw	11
  3336  01C0  1D03               	skipz
  3337  01C1  0008               	return
  3338                           
  3339                           ;LED_B1.c: 186: LED->GO = 1;
  3340  01C2  0879               	movf	_LED,w
  3341  01C3  0084               	movwf	4
  3342  01C4  1383               	bcf	3,7	;select IRP bank0
  3343  01C5  1480               	bsf	0,1
  3344  01C6  0008               	return
  3345  01C7                     __end_of_setLED:	
  3346                           
  3347                           	psect	text18
  3348  0278                     __ptext18:	
  3349 ;; *************** function _LedPointSelect *****************
  3350 ;; Defined at:
  3351 ;;		line 7 in file "../src/LED_B1.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  led             1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  led             1    5[COMMON] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       0       0       0
  3366 ;;      Locals:         1       0       0       0
  3367 ;;      Temps:          1       0       0       0
  3368 ;;      Totals:         2       0       0       0
  3369 ;;Total ram usage:        2 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    2
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_setLED_Initialization
  3376 ;;		_setLED
  3377 ;;		_setLED_Main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _LedPointSelect
  3383  0278                     _LedPointSelect:	
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _LedPointSelect: [wreg]
  3387                           ;LedPointSelect@led stored from wreg
  3388  0278  00F5               	movwf	LedPointSelect@led
  3389                           
  3390                           ;LED_B1.c: 9: if (led == 1) {
  3391  0279  0875               	movf	LedPointSelect@led,w
  3392  027A  3A01               	xorlw	1
  3393  027B  1D03               	skipz
  3394  027C  2A82               	goto	l2014
  3395                           
  3396                           ;LED_B1.c: 10: LED = &VarLED1;
  3397  027D  3058               	movlw	_VarLED1& (0+255)
  3398  027E  00F4               	movwf	??_LedPointSelect
  3399  027F  0874               	movf	??_LedPointSelect,w
  3400  0280  00F9               	movwf	_LED
  3401                           
  3402                           ;LED_B1.c: 11: }
  3403  0281  0008               	return
  3404  0282                     l2014:	
  3405                           
  3406                           ;LED_B1.c: 14: else if (led == 2) {
  3407  0282  0875               	movf	LedPointSelect@led,w
  3408  0283  3A02               	xorlw	2
  3409  0284  1D03               	skipz
  3410  0285  2A8B               	goto	l2018
  3411                           
  3412                           ;LED_B1.c: 15: LED = &VarLED2;
  3413  0286  305C               	movlw	_VarLED2& (0+255)
  3414  0287  00F4               	movwf	??_LedPointSelect
  3415  0288  0874               	movf	??_LedPointSelect,w
  3416  0289  00F9               	movwf	_LED
  3417                           
  3418                           ;LED_B1.c: 16: }
  3419  028A  0008               	return
  3420  028B                     l2018:	
  3421                           
  3422                           ;LED_B1.c: 24: else if (led == 99) {
  3423  028B  0875               	movf	LedPointSelect@led,w
  3424  028C  3A63               	xorlw	99
  3425  028D  1D03               	skipz
  3426  028E  0008               	return
  3427                           
  3428                           ;LED_B1.c: 25: LED = &VarErrLED;
  3429  028F  3054               	movlw	_VarErrLED& (0+255)
  3430  0290  00F4               	movwf	??_LedPointSelect
  3431  0291  0874               	movf	??_LedPointSelect,w
  3432  0292  00F9               	movwf	_LED
  3433  0293  0008               	return
  3434  0294                     __end_of_LedPointSelect:	
  3435                           
  3436                           	psect	text19
  3437  034F                     __ptext19:	
  3438 ;; *************** function _CDS_Initialization *****************
  3439 ;; Defined at:
  3440 ;;		line 7 in file "../src/CDS_B1.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;		None               void
  3447 ;; Registers used:
  3448 ;;		None
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3454 ;;      Params:         0       0       0       0
  3455 ;;      Locals:         0       0       0       0
  3456 ;;      Temps:          0       0       0       0
  3457 ;;      Totals:         0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    2
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           
  3469                           ;psect for function _CDS_Initialization
  3470  034F                     _CDS_Initialization:	
  3471                           
  3472                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _CDS_Initialization: []
  3476  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0351  1420               	bsf	__CDS,0
  3479  0352  0008               	return
  3480  0353                     __end_of_CDS_Initialization:	
  3481                           
  3482                           	psect	text20
  3483  0300                     __ptext20:	
  3484 ;; *************** function _ISR *****************
  3485 ;; Defined at:
  3486 ;;		line 107 in file "../src/MCU_B1.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;		None               void
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3500 ;;      Params:         0       0       0       0
  3501 ;;      Locals:         0       0       0       0
  3502 ;;      Temps:          4       0       0       0
  3503 ;;      Totals:         4       0       0       0
  3504 ;;Total ram usage:        4 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    1
  3507 ;; This function calls:
  3508 ;;		_TMR2_ISR
  3509 ;; This function is called by:
  3510 ;;		Interrupt level 1
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           
  3515                           ;psect for function _ISR
  3516  0300                     _ISR:	
  3517                           
  3518                           ;MCU_B1.c: 109: ;;
  3519                           ;MCU_B1.c: 111: ;;
  3520                           ;MCU_B1.c: 113: ;;
  3521                           ;MCU_B1.c: 115: TMR2_ISR();
  3522  0300  118A  2294  118A   	fcall	_TMR2_ISR
  3523  0303  0873               	movf	??_ISR+3,w
  3524  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0306  00FF               	movwf	127
  3527  0307  0872               	movf	??_ISR+2,w
  3528  0308  008A               	movwf	10
  3529  0309  0871               	movf	??_ISR+1,w
  3530  030A  0084               	movwf	4
  3531  030B  0E70               	swapf	??_ISR^(0+-128),w
  3532  030C  0083               	movwf	3
  3533  030D  0EFE               	swapf	126,f
  3534  030E  0E7E               	swapf	126,w
  3535  030F  0009               	retfie
  3536  0310                     __end_of_ISR:	
  3537                           
  3538                           	psect	intentry
  3539  0004                     __pintentry:	
  3540                           ;incstack = 0
  3541                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3542                           
  3543  0004                     interrupt_function:	
  3544  007E                     saved_w	set	btemp
  3545  0004  00FE               	movwf	btemp
  3546  0005  0E03               	swapf	3,w
  3547  0006  00F0               	movwf	??_ISR
  3548  0007  0804               	movf	4,w
  3549  0008  00F1               	movwf	??_ISR+1
  3550  0009  080A               	movf	10,w
  3551  000A  00F2               	movwf	??_ISR+2
  3552  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3553  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3554  000D  087F               	movf	btemp+1,w
  3555  000E  00F3               	movwf	??_ISR+3
  3556  000F  118A  2B00         	ljmp	_ISR
  3557                           
  3558                           	psect	text21
  3559  0294                     __ptext21:	
  3560 ;; *************** function _TMR2_ISR *****************
  3561 ;; Defined at:
  3562 ;;		line 243 in file "../src/MCU_B1.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		wreg, status,2
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3576 ;;      Params:         0       0       0       0
  3577 ;;      Locals:         0       0       0       0
  3578 ;;      Temps:          0       0       0       0
  3579 ;;      Totals:         0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_ISR
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _TMR2_ISR
  3591  0294                     _TMR2_ISR:	
  3592                           
  3593                           ;MCU_B1.c: 244: if (TMR2IE == 1 && TMR2IF == 1) {
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _TMR2_ISR: [wreg+status,2]
  3597  0294  1683               	bsf	3,5	;RP0=1, select bank1
  3598  0295  1303               	bcf	3,6	;RP1=0, select bank1
  3599  0296  1C8C               	btfss	12,1	;volatile
  3600  0297  0008               	return
  3601  0298  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0299  1303               	bcf	3,6	;RP1=0, select bank0
  3603  029A  1C8C               	btfss	12,1	;volatile
  3604  029B  0008               	return
  3605                           
  3606                           ;MCU_B1.c: 246: TMR2 = 155;
  3607  029C  309B               	movlw	155
  3608  029D  0091               	movwf	17	;volatile
  3609                           
  3610                           ;MCU_B1.c: 247: TMR2IF = 0;
  3611  029E  108C               	bcf	12,1	;volatile
  3612                           
  3613                           ;MCU_B1.c: 268: Timer2.Count++;
  3614  029F  3001               	movlw	1
  3615  02A0  07F7               	addwf	_Timer2+1,f
  3616  02A1  1803               	skipnc
  3617  02A2  0AF8               	incf	_Timer2+2,f
  3618  02A3  3000               	movlw	0
  3619  02A4  07F8               	addwf	_Timer2+2,f
  3620                           
  3621                           ;MCU_B1.c: 269: if (Timer2.Count == 100) {
  3622  02A5  3064               	movlw	100
  3623  02A6  0677               	xorwf	_Timer2+1,w
  3624  02A7  0478               	iorwf	_Timer2+2,w
  3625  02A8  1D03               	skipz
  3626  02A9  0008               	return
  3627                           
  3628                           ;MCU_B1.c: 270: Timer2.Count = 0;
  3629  02AA  01F7               	clrf	_Timer2+1
  3630  02AB  01F8               	clrf	_Timer2+2
  3631                           
  3632                           ;MCU_B1.c: 271: myMain.T0_Timerout = 1;
  3633  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3634  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3635  02AE  14A0               	bsf	_myMain^(0+128),1
  3636  02AF  0008               	return
  3637  02B0                     __end_of_TMR2_ISR:	
  3638  007E                     btemp	set	126	;btemp
  3639  007E                     wtemp	set	126
  3640  007E                     wtemp0	set	126
  3641  0080                     wtemp1	set	128
  3642  0082                     wtemp2	set	130
  3643  0084                     wtemp3	set	132
  3644  0086                     wtemp4	set	134
  3645  0088                     wtemp5	set	136
  3646  007F                     wtemp6	set	127
  3647  007E                     ttemp	set	126
  3648  007E                     ttemp0	set	126
  3649  0081                     ttemp1	set	129
  3650  0084                     ttemp2	set	132
  3651  0087                     ttemp3	set	135
  3652  007F                     ttemp4	set	127
  3653  007E                     ltemp	set	126
  3654  007E                     ltemp0	set	126
  3655  0082                     ltemp1	set	130
  3656  0086                     ltemp2	set	134
  3657  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     16      80
    BANK1            80      4      22
    BANK2            16      0       0

Pointer List with Targets:

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setLED_Initialization->_LedPointSelect
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _PIR_Initialization->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    6149
                                             15 BANK0      1     1      0
                                              0 BANK1      4     0      4
                 _CDS_Initialization
                 _LED_Initialization
                 _Mcu_Initialization
                 _PIR_Initialization
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2080
                                              8 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     572
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     400
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    1671
                                              2 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR2_Set
 ---------------------------------------------------------------------------------
 (2) _TMR2_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1826
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1826
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    1671
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR2_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization

 _ISR (ROOT)
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      70       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      16       7       27.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      70      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Oct 27 17:32:10 2014

                  ___awdiv@sign 0065                              fsr 0004                             _GIE 005F  
                           _LED 0079                             _RB3 0033                             _RB4 0034  
                           _RB5 0035                             _PR2 0092                             _ISR 0300  
                           fsr0 0004                             indf 0000                 __end_of_ADC_Set 0344  
                          ?_ISR 0070                            l2014 0282                            l2030 017D  
                          l2120 0164                            l2112 0151                            l2104 012D  
                          l2200 0091                            l2018 028B                            l2034 0183  
                          l2106 013B                            l2044 0193                            l2052 019F  
                          l2116 015C                            l2062 01B2                            l2070 01BE  
                          l2038 0189                            l2142 01F5                            l2134 01D1  
                          l2230 00E4                            l2214 00B2                            l2048 0199  
                          l2136 01DF                            l2224 00D0                            l2208 009E  
                          l2066 01B8                            l2146 0200                            l2244 010C  
                          l2094 0125                            l2238 0102                            l2190 0073  
                          l2182 0065                            l1560 026A                            l2088 011A  
                          l2192 0077                            l2194 007B                            l2186 006B  
                          l2282 0241                            l1564 0272                            l2188 006F  
                          l1558 0267                            l2198 0080           _myMain_Initialization 0353  
                          u1105 02E8                            u2105 0152                            u2065 0130  
                          u2145 01D4                            u2085 013C                            u2165 01E0  
                          u2095 0148                            u2175 01EC                            u2185 01F6  
                          _PEIE 005E                            _TMR2 0011                            __CDS 0020  
                          __PIR 0025                            _main 0231                            btemp 007E  
                          ltemp 007E                            start 0011                            ttemp 007E  
                          wtemp 007E                           ??_ISR 0070                   __CFG_PLLEN$ON 0000  
                         ?_main 00B2                 __end_of___awdiv 016B                           _ADRES 001E  
                 __CFG_WDTE$OFF 0000                 ___awdiv@divisor 0060                           _T2CON 0012  
               __end_of___lwdiv 0207                 ___awdiv@counter 0064                           _PORTA 0005  
                         _PORTB 0006                           _PORTC 0007                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087         __end_of_Timeout_Counter 02EE  
              __end_of_TMR2_ISR 02B0                __end_of_TMR2_Set 031D                           _getAD 025A  
                __CFG_BOREN$OFF 0000                           pclath 000A                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
__size_of_setLED_Initialization 0012   __end_of_setLED_Initialization 0300                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
             getPIR_AD@channel1 006D               getPIR_AD@channel2 0068                 __initialization 0013  
                  __end_of_main 025A                __end_of_Fosc_Set 034F                       ??_ADC_Set 0074  
                        ??_main 006F                          ?_getAD 0074          ?_myMain_Initialization 0070  
                        _ADCON0 001F                          _ADCON1 009F                ___awdiv@dividend 0062  
                        _ANSELA 0185                          _ANSELB 0186                          _FVRCON 009D  
                        _OSCCON 0090                          _TMR2IE 0461                          _TMR2IF 0061  
                        _IO_Set 02C5      __end_of_Mcu_Initialization 0329                          _Timer2 0076  
   __size_of_CDS_Initialization 0004                       ??___awdiv 0074                       ??___lwdiv 0074  
                        _setLED 016B                          _myMain 00A0                ___awdiv@quotient 0066  
                        saved_w 007E                ?_Timeout_Counter 0070         __size_of_LedPointSelect 001C  
   __size_of_PIR_Initialization 0015         __end_of__initialization 0023                  __pcstackCOMMON 0070  
            __size_of_getCDS_AD 002A                   __end_of_getAD 0278                       ?_TMR2_ISR 0070  
                     ?_TMR2_Set 0070              _LED_Initialization 0329              __size_of_getPIR_AD 00E8  
    __end_of_set_TimeoutCleared 034A             ?_LED_Initialization 0070                         ??_getAD 0075  
                    __pbssBANK0 0020                      __pbssBANK1 00A0                       ?_Fosc_Set 0070  
                       ?_IO_Set 0070                 __CFG_VCAPEN$DIS 0000            ??_LED_Initialization 0076  
             LedPointSelect@led 0075                      __pmaintext 0231                      ??_TMR2_ISR 0070  
                    __pintentry 0004                      ??_TMR2_Set 0074                         ?_setLED 0060  
                       _ADC_Set 033D               __end_of_getCDS_AD 0231                      ??_Fosc_Set 0074  
             __end_of_getPIR_AD 010E                 __size_of_IO_Set 0015                      getCDS_AD@i 0063  
                    getCDS_AD@j 0064                         _VarLED1 0058                         _VarLED2 005C  
                       ___awdiv 010E                         ___lwdiv 01C7                 __size_of_setLED 005C  
                       __ptext0 0000                         __ptext1 0353                         __ptext2 0026  
                       __ptext3 01C7                         __ptext4 010E                         __ptext5 0207  
                       __ptext6 025A                         __ptext7 0344                         __ptext8 02DA  
                       __ptext9 02B0                      getPIR_AD@i 006E                      getPIR_AD@j 006C  
                  __size_of_ISR 0010         ??_myMain_Initialization 0074                  _LedPointSelect 0278  
                       clrloop0 0336            end_of_initialization 0023           _setLED_Initialization 02EE  
      setLED_Initialization@led 0062              _Mcu_Initialization 031D          __end_of_LedPointSelect 0294  
           ?_Mcu_Initialization 0070                  __end_of_IO_Set 02DA      __end_of_CDS_Initialization 0353  
          ??_Mcu_Initialization 0074               __size_of_TMR2_ISR 001C               __size_of_TMR2_Set 000D  
                __end_of_setLED 01C7             start_initialization 0013                 ?_LedPointSelect 0070  
                   __end_of_ISR 0310      __end_of_PIR_Initialization 02C5              _set_TimeoutCleared 0344  
                      ??_IO_Set 0074        __size_of_Timeout_Counter 0014                       _VarErrLED 0054  
        ?_setLED_Initialization 0070               __size_of_Fosc_Set 0005             ?_set_TimeoutCleared 0070  
                      ??_setLED 0076                        ?_ADC_Set 0070                     __pbssCOMMON 0076  
                     ___latbits 0001                   __pcstackBANK0 0060                   __pcstackBANK1 00B2  
          ??_set_TimeoutCleared 0074                       _getCDS_AD 0207                       _getPIR_AD 0026  
   __size_of_LED_Initialization 000C                ___lwdiv@dividend 0062                        ?___awdiv 0060  
                      ?___lwdiv 0060  __size_of_myMain_Initialization 0001   __end_of_myMain_Initialization 0354  
                __size_of_getAD 001E                ___lwdiv@quotient 0065               interrupt_function 0004  
                    ?_getCDS_AD 0060                       clear_ram0 0335                      ?_getPIR_AD 0068  
                      _GO_nDONE 00F9               ??_Timeout_Counter 0074                        _TMR2_ISR 0294  
                      _TMR2_Set 0310                __size_of_ADC_Set 0007                     getAD@adcon0 0075  
                   getAD@adcon1 0074                        _Fosc_Set 034A                       setLED@led 0061  
              __size_of___awdiv 005D                __size_of___lwdiv 0040                ??_LedPointSelect 0074  
            _CDS_Initialization 034F                 ___lwdiv@divisor 0060             ?_CDS_Initialization 0070  
               ___lwdiv@counter 0064                        __ptext10 031D                        __ptext11 0310  
                      __ptext20 0300                        __ptext12 02C5                        __ptext21 0294  
                      __ptext13 034A                        __ptext14 033D                        __ptext15 0329  
                      __ptext16 02EE                        __ptext17 016B                        __ptext18 0278  
                      __ptext19 034F         ??_setLED_Initialization 0076                     ??_getCDS_AD 0061  
                 setLED@command 0060                   __size_of_main 0029                     ??_getPIR_AD 0069  
            _PIR_Initialization 02B0            ??_CDS_Initialization 0074     __size_of_Mcu_Initialization 000C  
           ?_PIR_Initialization 0070                        main@argc 00B2                        main@argv 00B4  
          ??_PIR_Initialization 0062                        intlevel1 0000     __size_of_set_TimeoutCleared 0006  
            __CFG_FOSC$INTOSCIO 0000                 _Timeout_Counter 02DA      __end_of_LED_Initialization 0335  
             getCDS_AD@channel1 0065               getCDS_AD@channel2 0060  
