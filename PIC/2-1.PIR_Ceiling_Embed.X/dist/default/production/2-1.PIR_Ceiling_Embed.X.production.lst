

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Dec 08 17:20:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0096                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0186                     	;# 
   135  018C                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0096                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009F                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0186                     	;# 
   204  018C                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009F                     	;# 
   263  0108                     	;# 
   264  0109                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  0185                     	;# 
   272  0186                     	;# 
   273  018C                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  000E                     	;# 
   289  000F                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  0089                     	;# 
   313  008C                     	;# 
   314  008D                     	;# 
   315  008E                     	;# 
   316  008F                     	;# 
   317  0090                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0093                     	;# 
   321  0093                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0096                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009C                     	;# 
   330  009D                     	;# 
   331  009F                     	;# 
   332  0108                     	;# 
   333  0109                     	;# 
   334  010C                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  0185                     	;# 
   341  0186                     	;# 
   342  018C                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0094                     	;# 
   392  0095                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0096                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009F                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0186                     	;# 
   411  018C                     	;# 
   412  0000                     	;# 
   413  0001                     	;# 
   414  0002                     	;# 
   415  0003                     	;# 
   416  0004                     	;# 
   417  0005                     	;# 
   418  0006                     	;# 
   419  0007                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  000E                     	;# 
   426  000E                     	;# 
   427  000F                     	;# 
   428  0010                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001D                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  0081                     	;# 
   447  0085                     	;# 
   448  0086                     	;# 
   449  0087                     	;# 
   450  0089                     	;# 
   451  008C                     	;# 
   452  008D                     	;# 
   453  008E                     	;# 
   454  008F                     	;# 
   455  0090                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0093                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0095                     	;# 
   462  0095                     	;# 
   463  0096                     	;# 
   464  0096                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009F                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0186                     	;# 
   480  018C                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0096                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009F                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0186                     	;# 
   549  018C                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  000E                     	;# 
   565  000F                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001D                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  0081                     	;# 
   585  0085                     	;# 
   586  0086                     	;# 
   587  0087                     	;# 
   588  0089                     	;# 
   589  008C                     	;# 
   590  008D                     	;# 
   591  008E                     	;# 
   592  008F                     	;# 
   593  0090                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0096                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009C                     	;# 
   606  009D                     	;# 
   607  009F                     	;# 
   608  0108                     	;# 
   609  0109                     	;# 
   610  010C                     	;# 
   611  010C                     	;# 
   612  010D                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  0185                     	;# 
   617  0186                     	;# 
   618  018C                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001B                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  0081                     	;# 
   654  0085                     	;# 
   655  0086                     	;# 
   656  0087                     	;# 
   657  0089                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0092                     	;# 
   665  0093                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0096                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009F                     	;# 
   677  0108                     	;# 
   678  0109                     	;# 
   679  010C                     	;# 
   680  010C                     	;# 
   681  010D                     	;# 
   682  010D                     	;# 
   683  010E                     	;# 
   684  010F                     	;# 
   685  0185                     	;# 
   686  0186                     	;# 
   687  018C                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0009                     	;# 
   697  000A                     	;# 
   698  000B                     	;# 
   699  000C                     	;# 
   700  000D                     	;# 
   701  000E                     	;# 
   702  000E                     	;# 
   703  000F                     	;# 
   704  0010                     	;# 
   705  0011                     	;# 
   706  0012                     	;# 
   707  0013                     	;# 
   708  0014                     	;# 
   709  0015                     	;# 
   710  0015                     	;# 
   711  0016                     	;# 
   712  0017                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001B                     	;# 
   717  001B                     	;# 
   718  001C                     	;# 
   719  001D                     	;# 
   720  001E                     	;# 
   721  001F                     	;# 
   722  0081                     	;# 
   723  0085                     	;# 
   724  0086                     	;# 
   725  0087                     	;# 
   726  0089                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0091                     	;# 
   733  0092                     	;# 
   734  0093                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0095                     	;# 
   739  0096                     	;# 
   740  0096                     	;# 
   741  0098                     	;# 
   742  0099                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009F                     	;# 
   746  0108                     	;# 
   747  0109                     	;# 
   748  010C                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  010F                     	;# 
   754  0185                     	;# 
   755  0186                     	;# 
   756  018C                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000D                     	;# 
   770  000E                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  0081                     	;# 
   792  0085                     	;# 
   793  0086                     	;# 
   794  0087                     	;# 
   795  0089                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  008F                     	;# 
   800  0090                     	;# 
   801  0091                     	;# 
   802  0092                     	;# 
   803  0093                     	;# 
   804  0093                     	;# 
   805  0094                     	;# 
   806  0095                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0096                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009C                     	;# 
   813  009D                     	;# 
   814  009F                     	;# 
   815  0108                     	;# 
   816  0109                     	;# 
   817  010C                     	;# 
   818  010C                     	;# 
   819  010D                     	;# 
   820  010D                     	;# 
   821  010E                     	;# 
   822  010F                     	;# 
   823  0185                     	;# 
   824  0186                     	;# 
   825  018C                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000D                     	;# 
   839  000E                     	;# 
   840  000E                     	;# 
   841  000F                     	;# 
   842  0010                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0013                     	;# 
   846  0014                     	;# 
   847  0015                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001D                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  0081                     	;# 
   861  0085                     	;# 
   862  0086                     	;# 
   863  0087                     	;# 
   864  0089                     	;# 
   865  008C                     	;# 
   866  008D                     	;# 
   867  008E                     	;# 
   868  008F                     	;# 
   869  0090                     	;# 
   870  0091                     	;# 
   871  0092                     	;# 
   872  0093                     	;# 
   873  0093                     	;# 
   874  0094                     	;# 
   875  0095                     	;# 
   876  0095                     	;# 
   877  0096                     	;# 
   878  0096                     	;# 
   879  0098                     	;# 
   880  0099                     	;# 
   881  009C                     	;# 
   882  009D                     	;# 
   883  009F                     	;# 
   884  0108                     	;# 
   885  0109                     	;# 
   886  010C                     	;# 
   887  010C                     	;# 
   888  010D                     	;# 
   889  010D                     	;# 
   890  010E                     	;# 
   891  010F                     	;# 
   892  0185                     	;# 
   893  0186                     	;# 
   894  018C                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0009                     	;# 
   904  000A                     	;# 
   905  000B                     	;# 
   906  000C                     	;# 
   907  000D                     	;# 
   908  000E                     	;# 
   909  000E                     	;# 
   910  000F                     	;# 
   911  0010                     	;# 
   912  0011                     	;# 
   913  0012                     	;# 
   914  0013                     	;# 
   915  0014                     	;# 
   916  0015                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0017                     	;# 
   920  0018                     	;# 
   921  0019                     	;# 
   922  001A                     	;# 
   923  001B                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  001D                     	;# 
   927  001E                     	;# 
   928  001F                     	;# 
   929  0081                     	;# 
   930  0085                     	;# 
   931  0086                     	;# 
   932  0087                     	;# 
   933  0089                     	;# 
   934  008C                     	;# 
   935  008D                     	;# 
   936  008E                     	;# 
   937  008F                     	;# 
   938  0090                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0093                     	;# 
   942  0093                     	;# 
   943  0094                     	;# 
   944  0095                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0096                     	;# 
   948  0098                     	;# 
   949  0099                     	;# 
   950  009C                     	;# 
   951  009D                     	;# 
   952  009F                     	;# 
   953  0108                     	;# 
   954  0109                     	;# 
   955  010C                     	;# 
   956  010C                     	;# 
   957  010D                     	;# 
   958  010D                     	;# 
   959  010E                     	;# 
   960  010F                     	;# 
   961  0185                     	;# 
   962  0186                     	;# 
   963  018C                     	;# 
   964  0000                     	;# 
   965  0001                     	;# 
   966  0002                     	;# 
   967  0003                     	;# 
   968  0004                     	;# 
   969  0005                     	;# 
   970  0006                     	;# 
   971  0007                     	;# 
   972  0009                     	;# 
   973  000A                     	;# 
   974  000B                     	;# 
   975  000C                     	;# 
   976  000D                     	;# 
   977  000E                     	;# 
   978  000E                     	;# 
   979  000F                     	;# 
   980  0010                     	;# 
   981  0011                     	;# 
   982  0012                     	;# 
   983  0013                     	;# 
   984  0014                     	;# 
   985  0015                     	;# 
   986  0015                     	;# 
   987  0016                     	;# 
   988  0017                     	;# 
   989  0018                     	;# 
   990  0019                     	;# 
   991  001A                     	;# 
   992  001B                     	;# 
   993  001B                     	;# 
   994  001C                     	;# 
   995  001D                     	;# 
   996  001E                     	;# 
   997  001F                     	;# 
   998  0081                     	;# 
   999  0085                     	;# 
  1000  0086                     	;# 
  1001  0087                     	;# 
  1002  0089                     	;# 
  1003  008C                     	;# 
  1004  008D                     	;# 
  1005  008E                     	;# 
  1006  008F                     	;# 
  1007  0090                     	;# 
  1008  0091                     	;# 
  1009  0092                     	;# 
  1010  0093                     	;# 
  1011  0093                     	;# 
  1012  0094                     	;# 
  1013  0095                     	;# 
  1014  0095                     	;# 
  1015  0096                     	;# 
  1016  0096                     	;# 
  1017  0098                     	;# 
  1018  0099                     	;# 
  1019  009C                     	;# 
  1020  009D                     	;# 
  1021  009F                     	;# 
  1022  0108                     	;# 
  1023  0109                     	;# 
  1024  010C                     	;# 
  1025  010C                     	;# 
  1026  010D                     	;# 
  1027  010D                     	;# 
  1028  010E                     	;# 
  1029  010F                     	;# 
  1030  0185                     	;# 
  1031  0186                     	;# 
  1032  018C                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0009                     	;# 
  1042  000A                     	;# 
  1043  000B                     	;# 
  1044  000C                     	;# 
  1045  000D                     	;# 
  1046  000E                     	;# 
  1047  000E                     	;# 
  1048  000F                     	;# 
  1049  0010                     	;# 
  1050  0011                     	;# 
  1051  0012                     	;# 
  1052  0013                     	;# 
  1053  0014                     	;# 
  1054  0015                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0017                     	;# 
  1058  0018                     	;# 
  1059  0019                     	;# 
  1060  001A                     	;# 
  1061  001B                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  001D                     	;# 
  1065  001E                     	;# 
  1066  001F                     	;# 
  1067  0081                     	;# 
  1068  0085                     	;# 
  1069  0086                     	;# 
  1070  0087                     	;# 
  1071  0089                     	;# 
  1072  008C                     	;# 
  1073  008D                     	;# 
  1074  008E                     	;# 
  1075  008F                     	;# 
  1076  0090                     	;# 
  1077  0091                     	;# 
  1078  0092                     	;# 
  1079  0093                     	;# 
  1080  0093                     	;# 
  1081  0094                     	;# 
  1082  0095                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0096                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009C                     	;# 
  1089  009D                     	;# 
  1090  009F                     	;# 
  1091  0108                     	;# 
  1092  0109                     	;# 
  1093  010C                     	;# 
  1094  010C                     	;# 
  1095  010D                     	;# 
  1096  010D                     	;# 
  1097  010E                     	;# 
  1098  010F                     	;# 
  1099  0185                     	;# 
  1100  0186                     	;# 
  1101  018C                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0009                     	;# 
  1111  000A                     	;# 
  1112  000B                     	;# 
  1113  000C                     	;# 
  1114  000D                     	;# 
  1115  000E                     	;# 
  1116  000E                     	;# 
  1117  000F                     	;# 
  1118  0010                     	;# 
  1119  0011                     	;# 
  1120  0012                     	;# 
  1121  0013                     	;# 
  1122  0014                     	;# 
  1123  0015                     	;# 
  1124  0015                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001B                     	;# 
  1132  001C                     	;# 
  1133  001D                     	;# 
  1134  001E                     	;# 
  1135  001F                     	;# 
  1136  0081                     	;# 
  1137  0085                     	;# 
  1138  0086                     	;# 
  1139  0087                     	;# 
  1140  0089                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008F                     	;# 
  1145  0090                     	;# 
  1146  0091                     	;# 
  1147  0092                     	;# 
  1148  0093                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0095                     	;# 
  1153  0096                     	;# 
  1154  0096                     	;# 
  1155  0098                     	;# 
  1156  0099                     	;# 
  1157  009C                     	;# 
  1158  009D                     	;# 
  1159  009F                     	;# 
  1160  0108                     	;# 
  1161  0109                     	;# 
  1162  010C                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0186                     	;# 
  1170  018C                     	;# 
  1171  0000                     	;# 
  1172  0001                     	;# 
  1173  0002                     	;# 
  1174  0003                     	;# 
  1175  0004                     	;# 
  1176  0005                     	;# 
  1177  0006                     	;# 
  1178  0007                     	;# 
  1179  0009                     	;# 
  1180  000A                     	;# 
  1181  000B                     	;# 
  1182  000C                     	;# 
  1183  000D                     	;# 
  1184  000E                     	;# 
  1185  000E                     	;# 
  1186  000F                     	;# 
  1187  0010                     	;# 
  1188  0011                     	;# 
  1189  0012                     	;# 
  1190  0013                     	;# 
  1191  0014                     	;# 
  1192  0015                     	;# 
  1193  0015                     	;# 
  1194  0016                     	;# 
  1195  0017                     	;# 
  1196  0018                     	;# 
  1197  0019                     	;# 
  1198  001A                     	;# 
  1199  001B                     	;# 
  1200  001B                     	;# 
  1201  001C                     	;# 
  1202  001D                     	;# 
  1203  001E                     	;# 
  1204  001F                     	;# 
  1205  0081                     	;# 
  1206  0085                     	;# 
  1207  0086                     	;# 
  1208  0087                     	;# 
  1209  0089                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  008F                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0093                     	;# 
  1219  0094                     	;# 
  1220  0095                     	;# 
  1221  0095                     	;# 
  1222  0096                     	;# 
  1223  0096                     	;# 
  1224  0098                     	;# 
  1225  0099                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009F                     	;# 
  1229  0108                     	;# 
  1230  0109                     	;# 
  1231  010C                     	;# 
  1232  010C                     	;# 
  1233  010D                     	;# 
  1234  010D                     	;# 
  1235  010E                     	;# 
  1236  010F                     	;# 
  1237  0185                     	;# 
  1238  0186                     	;# 
  1239  018C                     	;# 
  1240  0000                     	;# 
  1241  0001                     	;# 
  1242  0002                     	;# 
  1243  0003                     	;# 
  1244  0004                     	;# 
  1245  0005                     	;# 
  1246  0006                     	;# 
  1247  0007                     	;# 
  1248  0009                     	;# 
  1249  000A                     	;# 
  1250  000B                     	;# 
  1251  000C                     	;# 
  1252  000D                     	;# 
  1253  000E                     	;# 
  1254  000E                     	;# 
  1255  000F                     	;# 
  1256  0010                     	;# 
  1257  0011                     	;# 
  1258  0012                     	;# 
  1259  0013                     	;# 
  1260  0014                     	;# 
  1261  0015                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001B                     	;# 
  1269  001B                     	;# 
  1270  001C                     	;# 
  1271  001D                     	;# 
  1272  001E                     	;# 
  1273  001F                     	;# 
  1274  0081                     	;# 
  1275  0085                     	;# 
  1276  0086                     	;# 
  1277  0087                     	;# 
  1278  0089                     	;# 
  1279  008C                     	;# 
  1280  008D                     	;# 
  1281  008E                     	;# 
  1282  008F                     	;# 
  1283  0090                     	;# 
  1284  0091                     	;# 
  1285  0092                     	;# 
  1286  0093                     	;# 
  1287  0093                     	;# 
  1288  0094                     	;# 
  1289  0095                     	;# 
  1290  0095                     	;# 
  1291  0096                     	;# 
  1292  0096                     	;# 
  1293  0098                     	;# 
  1294  0099                     	;# 
  1295  009C                     	;# 
  1296  009D                     	;# 
  1297  009F                     	;# 
  1298  0108                     	;# 
  1299  0109                     	;# 
  1300  010C                     	;# 
  1301  010C                     	;# 
  1302  010D                     	;# 
  1303  010D                     	;# 
  1304  010E                     	;# 
  1305  010F                     	;# 
  1306  0185                     	;# 
  1307  0186                     	;# 
  1308  018C                     	;# 
  1309  001F                     _ADCON0	set	31
  1310  001E                     _ADRES	set	30
  1311  0005                     _PORTA	set	5
  1312  0006                     _PORTB	set	6
  1313  0007                     _PORTC	set	7
  1314  001A                     _RCREG	set	26
  1315  0018                     _RCSTA	set	24
  1316  0010                     _T1CON	set	16
  1317  000F                     _TMR1H	set	15
  1318  000E                     _TMR1L	set	14
  1319  0019                     _TXREG	set	25
  1320  005F                     _GIE	set	95
  1321  00F9                     _GO_nDONE	set	249
  1322  005E                     _PEIE	set	94
  1323  002C                     _RA4	set	44
  1324  0032                     _RB2	set	50
  1325  0033                     _RB3	set	51
  1326  0034                     _RB4	set	52
  1327  0035                     _RB5	set	53
  1328  0065                     _RCIF	set	101
  1329  00C6                     _RX9	set	198
  1330  0060                     _TMR1IF	set	96
  1331  0064                     _TXIF	set	100
  1332  009F                     _ADCON1	set	159
  1333  009D                     _FVRCON	set	157
  1334  0090                     _OSCCON	set	144
  1335  0099                     _SPBRG	set	153
  1336  0085                     _TRISA	set	133
  1337  0086                     _TRISB	set	134
  1338  0087                     _TRISC	set	135
  1339  0098                     _TXSTA	set	152
  1340  0408                     _PS0	set	1032
  1341  0409                     _PS1	set	1033
  1342  040A                     _PS2	set	1034
  1343  040B                     _PSA	set	1035
  1344  0465                     _RCIE	set	1125
  1345  0460                     _TMR1IE	set	1120
  1346  043E                     _TRISC6	set	1086
  1347  043F                     _TRISC7	set	1087
  1348  04C6                     _TX9	set	1222
  1349  0464                     _TXIE	set	1124
  1350  0185                     _ANSELA	set	389
  1351  0186                     _ANSELB	set	390
  1352                           
  1353                           	psect	text0
  1354  0000                     __ptext0:	
  1355                           ; #config settings
  1356                           
  1357                           
  1358                           ;psect for function _TMR1_ISR
  1359  0000                     
  1360                           	psect	cinit
  1361  0013                     start_initialization:	
  1362  0013                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1366  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1368                           
  1369                           ; Clear objects allocated to BANK0
  1370  0016  1383               	bcf	3,7	;select IRP bank0
  1371  0017  3020               	movlw	low __pbssBANK0
  1372  0018  0084               	movwf	4
  1373  0019  3054               	movlw	low (__pbssBANK0+52)
  1374  001A  158A  26EA  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001D  30A0               	movlw	low __pbssBANK1
  1378  001E  0084               	movwf	4
  1379  001F  30CF               	movlw	low (__pbssBANK1+47)
  1380  0020  158A  26EA         	fcall	clear_ram0
  1381  0022                     end_of_initialization:	
  1382                           ;End of C runtime variable initialization code
  1383                           
  1384  0022                     __end_of__initialization:	
  1385  0022  0183               	clrf	3
  1386  0023  118A  2D98         	ljmp	_main	;jump to C main() function
  1387                           
  1388                           	psect	bssCOMMON
  1389  0077                     __pbssCOMMON:	
  1390  0077                     _WDT:	
  1391  0077                     	ds	2
  1392  0079                     _SwDetect:	
  1393  0079                     	ds	1
  1394                           
  1395                           	psect	bssBANK0
  1396  0020                     __pbssBANK0:	
  1397  0020                     _myMain:	
  1398  0020                     	ds	6
  1399  0026                     __CDS:	
  1400  0026                     	ds	5
  1401  002B                     _PIRLED:	
  1402  002B                     	ds	4
  1403  002F                     _Timer1:	
  1404  002F                     	ds	3
  1405  0032                     _LED:	
  1406  0032                     	ds	1
  1407  0033                     _Lights:	
  1408  0033                     	ds	1
  1409  0034                     _LightsControl:	
  1410  0034                     	ds	1
  1411  0035                     _UART:	
  1412  0035                     	ds	12
  1413  0041                     _Lights1:	
  1414  0041                     	ds	7
  1415  0048                     _VarErrLED:	
  1416  0048                     	ds	4
  1417  004C                     _VarLED1:	
  1418  004C                     	ds	4
  1419  0050                     _VarLED2:	
  1420  0050                     	ds	4
  1421                           
  1422                           	psect	bssBANK1
  1423  00A0                     __pbssBANK1:	
  1424  00A0                     __PIR:	
  1425  00A0                     	ds	47
  1426                           
  1427                           	psect	clrtext
  1428  0EEA                     clear_ram0:	
  1429                           ;	Called with FSR containing the base address, and
  1430                           ;	W with the last address+1
  1431                           
  1432  0EEA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1433  0EEB                     clrloop0:	
  1434  0EEB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1435  0EEC  0A84               	incf	4,f	;increment pointer
  1436  0EED  0604               	xorwf	4,w	;XOR with final address
  1437  0EEE  1903               	btfsc	3,2	;have we reached the end yet?
  1438  0EEF  3400               	retlw	0	;all done for this memory range, return
  1439  0EF0  0604               	xorwf	4,w	;XOR again to restore value
  1440  0EF1  2EEB               	goto	clrloop0	;do the next byte
  1441                           
  1442                           	psect	cstackCOMMON
  1443  0070                     __pcstackCOMMON:	
  1444  0070                     ?_setLED_Initialization:	
  1445  0070                     ?_setPIRLED_Main:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_Fosc_Set:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_IO_Set:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_TMR1_Set:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_ADC_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_UART_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_WDT_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_TMR1_ISR:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ??_TMR1_ISR:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_UART_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_UART_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ??_getch:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_UART_Receive:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_UART_Transmit:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_putch:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_WDT_Clearing:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_myMain_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Lights_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_PIR_Initialization:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_my_MainTimer:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Lights_Main:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_PIR_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_setLights_Initialization:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_setLights_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Lights_Control:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Close:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_setLights_Line:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_CDS_Initialization:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_CDS_Main:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_LedPointSelect:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_LED_Initialization:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_LED_Main:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_Mcu_Initialization:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_ISR:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_UART_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_WDT_Main:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setMain_Exception:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_LightsPointSelect:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_getPIR_OK:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_getLights_Status:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_getch:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_getAll_Lights_Line:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_getMain_LightsStatus:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_getMain_All_Error_Status:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     getMain_All_Error_Status@command:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0x0
  1588  0070                     	ds	1
  1589  0071                     UART_ISR@i:	
  1590                           
  1591                           ; 2 bytes @ 0x1
  1592  0071                     	ds	2
  1593  0073                     ??_ISR:	
  1594                           
  1595                           ; 0 bytes @ 0x3
  1596  0073                     	ds	4
  1597                           
  1598                           	psect	cstackBANK0
  1599  0054                     __pcstackBANK0:	
  1600  0054                     ??_getPIR_OK:	
  1601  0054                     ??_Fosc_Set:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0054                     ??_IO_Set:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0054                     ??_TMR1_Set:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0054                     ??_ADC_Set:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0054                     ??_UART_Set:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0054                     ??_WDT_Set:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0054                     ??_Timeout_Counter:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0054                     ??_set_TimeoutCleared:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0054                     ??_UART_Receive:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0054                     ??_putch:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0054                     ??_WDT_Clearing:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0054                     ??_myMain_Initialization:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0054                     ??_PIR_Initialization:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0054                     ??_my_MainTimer:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0054                     ??_CDS_Initialization:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0054                     ??_LedPointSelect:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0054                     ??_WDT_Main:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0054                     ??_getMain_All_Error_Status:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0054                     ??_LightsPointSelect:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0054                     ?_getAD:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0054                     ?___awdiv:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0054                     ?___lwdiv:	
  1665                           ; 2 bytes @ 0x0
  1666                           
  1667  0054                     getAD@adcon1:	
  1668                           ; 2 bytes @ 0x0
  1669                           
  1670  0054                     putch@byte:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0054                     getMain_All_Error_Status@status:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0054                     getPIR_OK@ok:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0054                     ___awdiv@divisor:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0054                     ___lwdiv@divisor:	
  1683                           ; 2 bytes @ 0x0
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0x0
  1687  0054                     	ds	1
  1688  0055                     ??_getAD:	
  1689  0055                     ??_UART_Transmit:	
  1690                           ; 0 bytes @ 0x1
  1691                           
  1692  0055                     ??_Mcu_Initialization:	
  1693                           ; 0 bytes @ 0x1
  1694                           
  1695  0055                     LedPointSelect@led:	
  1696                           ; 0 bytes @ 0x1
  1697                           
  1698  0055                     getAD@adcon0:	
  1699                           ; 1 bytes @ 0x1
  1700                           
  1701  0055                     LightsPointSelect@lights:	
  1702                           ; 1 bytes @ 0x1
  1703                           
  1704  0055                     UART_Transmit@i:	
  1705                           ; 1 bytes @ 0x1
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x1
  1709  0055                     	ds	1
  1710  0056                     ??_getLights_Status:	
  1711  0056                     ?_setLights_Trigger:	
  1712                           ; 0 bytes @ 0x2
  1713                           
  1714  0056                     ?_setLED:	
  1715                           ; 0 bytes @ 0x2
  1716                           
  1717  0056                     ??_getAll_Lights_Line:	
  1718                           ; 0 bytes @ 0x2
  1719                           
  1720  0056                     ??_setLights_Initialization:	
  1721                           ; 0 bytes @ 0x2
  1722                           
  1723  0056                     ??_Lights_Control:	
  1724                           ; 0 bytes @ 0x2
  1725                           
  1726  0056                     ??_setLights_Line:	
  1727                           ; 0 bytes @ 0x2
  1728                           
  1729  0056                     ?_getCDS_AD:	
  1730                           ; 0 bytes @ 0x2
  1731                           
  1732  0056                     getCDS_AD@channel2:	
  1733                           ; 0 bytes @ 0x2
  1734                           
  1735  0056                     setLED@command:	
  1736                           ; 1 bytes @ 0x2
  1737                           
  1738  0056                     setLights_Initialization@lights:	
  1739                           ; 1 bytes @ 0x2
  1740                           
  1741  0056                     getLights_Status@lights:	
  1742                           ; 1 bytes @ 0x2
  1743                           
  1744  0056                     setLights_Trigger@command:	
  1745                           ; 1 bytes @ 0x2
  1746                           
  1747  0056                     setLights_Line@lights:	
  1748                           ; 1 bytes @ 0x2
  1749                           
  1750  0056                     getAll_Lights_Line@line:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753  0056                     ___awdiv@dividend:	
  1754                           ; 1 bytes @ 0x2
  1755                           
  1756  0056                     ___lwdiv@dividend:	
  1757                           ; 2 bytes @ 0x2
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x2
  1761  0056                     	ds	1
  1762  0057                     ??_setLights_Trigger:	
  1763  0057                     ??_setLED:	
  1764                           ; 0 bytes @ 0x3
  1765                           
  1766  0057                     ??_Lights_Initialization:	
  1767                           ; 0 bytes @ 0x3
  1768                           
  1769  0057                     ?_setLights:	
  1770                           ; 0 bytes @ 0x3
  1771                           
  1772  0057                     ??_getCDS_AD:	
  1773                           ; 0 bytes @ 0x3
  1774                           
  1775  0057                     ??_UART_Main:	
  1776                           ; 0 bytes @ 0x3
  1777                           
  1778  0057                     setLED@led:	
  1779                           ; 0 bytes @ 0x3
  1780                           
  1781  0057                     setLights@status:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784  0057                     getLights_Status@status:	
  1785                           ; 1 bytes @ 0x3
  1786                           
  1787                           
  1788                           ; 1 bytes @ 0x3
  1789  0057                     	ds	1
  1790  0058                     ??_setLED_Initialization:	
  1791  0058                     ??_setPIRLED_Main:	
  1792                           ; 0 bytes @ 0x4
  1793                           
  1794  0058                     ??_setLights:	
  1795                           ; 0 bytes @ 0x4
  1796                           
  1797  0058                     ??_getMain_LightsStatus:	
  1798                           ; 0 bytes @ 0x4
  1799                           
  1800  0058                     ??___awdiv:	
  1801                           ; 0 bytes @ 0x4
  1802                           
  1803  0058                     ??___lwdiv:	
  1804                           ; 0 bytes @ 0x4
  1805                           
  1806  0058                     setLED_Initialization@led:	
  1807                           ; 0 bytes @ 0x4
  1808                           
  1809  0058                     Lights_Control@lights:	
  1810                           ; 1 bytes @ 0x4
  1811                           
  1812  0058                     setLights_Trigger@lights:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815                           
  1816                           ; 1 bytes @ 0x4
  1817  0058                     	ds	1
  1818  0059                     ??_CDS_Main:	
  1819  0059                     ??_LED_Initialization:	
  1820                           ; 0 bytes @ 0x5
  1821                           
  1822  0059                     ??_setMain_Exception:	
  1823                           ; 0 bytes @ 0x5
  1824                           
  1825  0059                     getCDS_AD@i:	
  1826                           ; 0 bytes @ 0x5
  1827                           
  1828  0059                     setPIRLED_Main@count:	
  1829                           ; 1 bytes @ 0x5
  1830                           
  1831  0059                     getMain_LightsStatus@count:	
  1832                           ; 1 bytes @ 0x5
  1833                           
  1834  0059                     setLights@lights:	
  1835                           ; 1 bytes @ 0x5
  1836                           
  1837  0059                     ___awdiv@counter:	
  1838                           ; 1 bytes @ 0x5
  1839                           
  1840  0059                     ___lwdiv@quotient:	
  1841                           ; 1 bytes @ 0x5
  1842                           
  1843                           
  1844                           ; 2 bytes @ 0x5
  1845  0059                     	ds	1
  1846  005A                     ??_setLights_Main:	
  1847  005A                     ??_LED_Main:	
  1848                           ; 0 bytes @ 0x6
  1849                           
  1850  005A                     getCDS_AD@j:	
  1851                           ; 0 bytes @ 0x6
  1852                           
  1853  005A                     setLights_Main@lights:	
  1854                           ; 1 bytes @ 0x6
  1855                           
  1856  005A                     ___awdiv@sign:	
  1857                           ; 1 bytes @ 0x6
  1858                           
  1859  005A                     getMain_LightsStatus@i:	
  1860                           ; 1 bytes @ 0x6
  1861                           
  1862                           
  1863                           ; 2 bytes @ 0x6
  1864  005A                     	ds	1
  1865  005B                     getCDS_AD@channel1:	
  1866  005B                     setMain_Exception@buz:	
  1867                           ; 1 bytes @ 0x7
  1868                           
  1869  005B                     ___lwdiv@counter:	
  1870                           ; 1 bytes @ 0x7
  1871                           
  1872  005B                     ___awdiv@quotient:	
  1873                           ; 1 bytes @ 0x7
  1874                           
  1875                           
  1876                           ; 2 bytes @ 0x7
  1877  005B                     	ds	1
  1878  005C                     setMain_Exception@count:	
  1879  005C                     getMain_LightsStatus@status:	
  1880                           ; 1 bytes @ 0x8
  1881                           
  1882                           
  1883                           ; 1 bytes @ 0x8
  1884  005C                     	ds	1
  1885  005D                     ?_getPIR_AD:	
  1886  005D                     ??_Lights_Close:	
  1887                           ; 0 bytes @ 0x9
  1888                           
  1889  005D                     getPIR_AD@channel2:	
  1890                           ; 0 bytes @ 0x9
  1891                           
  1892  005D                     _setMain_Exception$1831:	
  1893                           ; 1 bytes @ 0x9
  1894                           
  1895                           
  1896                           ; 2 bytes @ 0x9
  1897  005D                     	ds	1
  1898  005E                     ??_getPIR_AD:	
  1899  005E                     ??_Lights_Main:	
  1900                           ; 0 bytes @ 0xA
  1901                           
  1902                           
  1903                           ; 0 bytes @ 0xA
  1904  005E                     	ds	1
  1905  005F                     setMain_Exception@i:	
  1906                           
  1907                           ; 2 bytes @ 0xB
  1908  005F                     	ds	2
  1909  0061                     setMain_Exception@status:	
  1910  0061                     getPIR_AD@j:	
  1911                           ; 1 bytes @ 0xD
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0xD
  1915  0061                     	ds	1
  1916  0062                     setMain_Exception@command:	
  1917  0062                     getPIR_AD@channel1:	
  1918                           ; 1 bytes @ 0xE
  1919                           
  1920                           
  1921                           ; 1 bytes @ 0xE
  1922  0062                     	ds	1
  1923  0063                     ??_PIR_Main:	
  1924  0063                     getPIR_AD@i:	
  1925                           ; 0 bytes @ 0xF
  1926                           
  1927                           
  1928                           ; 1 bytes @ 0xF
  1929  0063                     	ds	5
  1930  0068                     _PIR_Main$2378:	
  1931                           
  1932                           ; 2 bytes @ 0x14
  1933  0068                     	ds	2
  1934  006A                     PIR_Main@error:	
  1935                           
  1936                           ; 1 bytes @ 0x16
  1937  006A                     	ds	1
  1938  006B                     ?_main:	
  1939  006B                     main@argc:	
  1940                           ; 2 bytes @ 0x17
  1941                           
  1942                           
  1943                           ; 2 bytes @ 0x17
  1944  006B                     	ds	2
  1945  006D                     main@argv:	
  1946                           
  1947                           ; 2 bytes @ 0x19
  1948  006D                     	ds	2
  1949  006F                     ??_main:	
  1950                           
  1951                           ; 0 bytes @ 0x1B
  1952  006F                     	ds	1
  1953                           
  1954                           	psect	maintext
  1955  0598                     __pmaintext:	
  1956 ;;
  1957 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1958 ;;
  1959 ;; *************** function _main *****************
  1960 ;; Defined at:
  1961 ;;		line 7 in file "../src/Main_B1.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  argc            2   23[BANK0 ] int 
  1964 ;;  argv            2   25[BANK0 ] PTR PTR unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   23[BANK0 ] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 17F/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1976 ;;      Params:         0       4       0       0
  1977 ;;      Locals:         0       0       0       0
  1978 ;;      Temps:          0       1       0       0
  1979 ;;      Totals:         0       5       0       0
  1980 ;;Total ram usage:        5 bytes
  1981 ;; Hardware stack levels required when called:    8
  1982 ;; This function calls:
  1983 ;;		_CDS_Initialization
  1984 ;;		_CDS_Main
  1985 ;;		_LED_Initialization
  1986 ;;		_LED_Main
  1987 ;;		_Lights_Initialization
  1988 ;;		_Lights_Main
  1989 ;;		_Mcu_Initialization
  1990 ;;		_PIR_Initialization
  1991 ;;		_PIR_Main
  1992 ;;		_UART_Main
  1993 ;;		_WDT_Main
  1994 ;;		_getCDS_AD
  1995 ;;		_getPIR_AD
  1996 ;;		_myMain_Initialization
  1997 ;;		_my_MainTimer
  1998 ;; This function is called by:
  1999 ;;		Startup code after reset
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _main
  2005  0598                     _main:	
  2006                           
  2007                           ;Main_B1.c: 8: myMain_Initialization();
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011  0598  158A  26AE  118A   	fcall	_myMain_Initialization
  2012                           
  2013                           ;Main_B1.c: 9: Mcu_Initialization();
  2014  059B  158A  279D  118A   	fcall	_Mcu_Initialization
  2015                           
  2016                           ;Main_B1.c: 10: ;;
  2017                           ;Main_B1.c: 11: LED_Initialization();
  2018  059E  118A  27F4  118A   	fcall	_LED_Initialization
  2019                           
  2020                           ;Main_B1.c: 12: ;;
  2021                           ;Main_B1.c: 14: ;;
  2022                           ;Main_B1.c: 15: ;;
  2023                           ;Main_B1.c: 16: ;;
  2024                           ;Main_B1.c: 17: ;;
  2025                           ;Main_B1.c: 18: ;;
  2026                           ;Main_B1.c: 20: ;;
  2027                           ;Main_B1.c: 21: Lights_Initialization();
  2028  05A1  158A  26B6  118A   	fcall	_Lights_Initialization
  2029                           
  2030                           ;Main_B1.c: 22: CDS_Initialization();
  2031  05A4  158A  26B2  118A   	fcall	_CDS_Initialization
  2032                           
  2033                           ;Main_B1.c: 23: PIR_Initialization();
  2034  05A7  158A  2713  118A   	fcall	_PIR_Initialization
  2035                           
  2036                           ;Main_B1.c: 24: ;;
  2037                           ;Main_B1.c: 25: ;;
  2038                           ;Main_B1.c: 26: __nop();
  2039  05AA  0000               	nop
  2040  05AB                     l4024:	
  2041                           ;Main_B1.c: 27: ;;
  2042                           ;Main_B1.c: 28: ;;
  2043                           ;Main_B1.c: 30: while (1) {
  2044                           
  2045                           
  2046                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2047  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2048  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2049  05AD  1C20               	btfss	_myMain,0
  2050  05AE  2DC1               	goto	l4030
  2051                           
  2052                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2053  05AF  3031               	movlw	49
  2054  05B0  00EF               	movwf	??_main
  2055  05B1  086F               	movf	??_main,w
  2056  05B2  00D6               	movwf	getCDS_AD@channel2
  2057  05B3  3009               	movlw	9
  2058  05B4  118A  2700  118A   	fcall	_getCDS_AD
  2059                           
  2060                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2061  05B7  300D               	movlw	13
  2062  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2063  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2064  05BA  00EF               	movwf	??_main
  2065  05BB  086F               	movf	??_main,w
  2066  05BC  00DD               	movwf	getPIR_AD@channel2
  2067  05BD  3005               	movlw	5
  2068  05BE  118A  2204  118A   	fcall	_getPIR_AD
  2069  05C1                     l4030:	
  2070                           
  2071                           ;Main_B1.c: 57: }
  2072                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2073  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2074  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2075  05C3  1C2F               	btfss	_Timer1,0
  2076  05C4  2DAB               	goto	l4024
  2077                           
  2078                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2079  05C5  102F               	bcf	_Timer1,0
  2080                           
  2081                           ;Main_B1.c: 96: my_MainTimer();
  2082  05C6  118A  27C1  118A   	fcall	_my_MainTimer
  2083                           
  2084                           ;Main_B1.c: 97: WDT_Main();
  2085  05C9  158A  277A  118A   	fcall	_WDT_Main
  2086                           
  2087                           ;Main_B1.c: 98: ;;
  2088                           ;Main_B1.c: 99: UART_Main();
  2089  05CC  158A  274A  118A   	fcall	_UART_Main
  2090                           
  2091                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2092  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2093  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2094  05D1  1C20               	btfss	_myMain,0
  2095  05D2  2DAB               	goto	l4024
  2096                           
  2097                           ;Main_B1.c: 101: ;;
  2098                           ;Main_B1.c: 103: LED_Main();
  2099  05D3  158A  26AF  118A   	fcall	_LED_Main
  2100                           
  2101                           ;Main_B1.c: 104: ;;
  2102                           ;Main_B1.c: 106: ;;
  2103                           ;Main_B1.c: 107: ;;
  2104                           ;Main_B1.c: 108: ;;
  2105                           ;Main_B1.c: 109: ;;
  2106                           ;Main_B1.c: 111: Lights_Main();
  2107  05D6  158A  26FC  118A   	fcall	_Lights_Main
  2108                           
  2109                           ;Main_B1.c: 112: ;;
  2110                           ;Main_B1.c: 113: ;;
  2111                           ;Main_B1.c: 114: CDS_Main();
  2112  05D9  118A  25E0  118A   	fcall	_CDS_Main
  2113                           
  2114                           ;Main_B1.c: 115: PIR_Main();
  2115  05DC  118A  2025  118A   	fcall	_PIR_Main
  2116                           
  2117                           ;Main_B1.c: 117: ;;
  2118                           ;Main_B1.c: 118: ;;
  2119                           ;Main_B1.c: 119: ;;
  2120                           ;Main_B1.c: 120: ;;
  2121  05DF  2DAB               	goto	l4024
  2122  05E0                     __end_of_main:	
  2123                           ;Main_B1.c: 127: }
  2124                           ;Main_B1.c: 128: }
  2125                           ;Main_B1.c: 162: }
  2126                           ;Main_B1.c: 163: return (0);
  2127                           ;	Return value of _main is never used
  2128                           
  2129                           
  2130                           	psect	text1
  2131  07C1                     __ptext1:	
  2132 ;; *************** function _my_MainTimer *****************
  2133 ;; Defined at:
  2134 ;;		line 184 in file "../src/Main_B1.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2148 ;;      Params:         0       0       0       0
  2149 ;;      Locals:         0       0       0       0
  2150 ;;      Temps:          0       1       0       0
  2151 ;;      Totals:         0       1       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    3
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _my_MainTimer
  2164  07C1                     _my_MainTimer:	
  2165                           
  2166                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2170  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  2171  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  2172  07C3  1820               	btfsc	_myMain,0
  2173  07C4  2FD1               	goto	l3092
  2174                           
  2175                           ;Main_B1.c: 188: myMain.PowerCount++;
  2176  07C5  3001               	movlw	1
  2177  07C6  00D4               	movwf	??_my_MainTimer
  2178  07C7  0854               	movf	??_my_MainTimer,w
  2179  07C8  07A1               	addwf	_myMain+1,f
  2180                           
  2181                           ;Main_B1.c: 189: if (myMain.PowerCount == 150) {
  2182  07C9  0821               	movf	_myMain+1,w
  2183  07CA  3A96               	xorlw	150
  2184  07CB  1D03               	skipz
  2185  07CC  0008               	return
  2186                           
  2187                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2188  07CD  01A1               	clrf	_myMain+1
  2189                           
  2190                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2191  07CE  1420               	bsf	_myMain,0
  2192                           
  2193                           ;Main_B1.c: 196: ;;
  2194                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2195  07CF  1620               	bsf	_myMain,4
  2196                           
  2197                           ;Main_B1.c: 206: }
  2198                           ;Main_B1.c: 207: } else {
  2199  07D0  0008               	return
  2200  07D1                     l3092:	
  2201                           
  2202                           ;Main_B1.c: 208: myMain.PowerCount++;
  2203  07D1  3001               	movlw	1
  2204  07D2  00D4               	movwf	??_my_MainTimer
  2205  07D3  0854               	movf	??_my_MainTimer,w
  2206  07D4  07A1               	addwf	_myMain+1,f
  2207                           
  2208                           ;Main_B1.c: 209: if (myMain.PowerCount == 100) {
  2209  07D5  0821               	movf	_myMain+1,w
  2210  07D6  3A64               	xorlw	100
  2211  07D7  1D03               	skipz
  2212  07D8  0008               	return
  2213                           
  2214                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2215  07D9  01A1               	clrf	_myMain+1
  2216  07DA  0008               	return
  2217  07DB                     __end_of_my_MainTimer:	
  2218                           
  2219                           	psect	text2
  2220  0EAE                     __ptext2:	
  2221 ;; *************** function _myMain_Initialization *****************
  2222 ;; Defined at:
  2223 ;;		line 169 in file "../src/Main_B1.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		None
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2237 ;;      Params:         0       0       0       0
  2238 ;;      Locals:         0       0       0       0
  2239 ;;      Temps:          0       0       0       0
  2240 ;;      Totals:         0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    3
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _myMain_Initialization
  2253  0EAE                     _myMain_Initialization:	
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _myMain_Initialization: []
  2257  0EAE  0008               	return
  2258  0EAF                     __end_of_myMain_Initialization:	
  2259                           
  2260                           	psect	text3
  2261  0204                     __ptext3:	
  2262 ;; *************** function _getPIR_AD *****************
  2263 ;; Defined at:
  2264 ;;		line 166 in file "../src/PIR_B1.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  channel1        1    wreg     unsigned char 
  2267 ;;  channel2        1    9[BANK0 ] unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  channel1        1   14[BANK0 ] unsigned char 
  2270 ;;  i               1   15[BANK0 ] unsigned char 
  2271 ;;  j               1   13[BANK0 ] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2281 ;;      Params:         0       1       0       0
  2282 ;;      Locals:         0       3       0       0
  2283 ;;      Temps:          0       3       0       0
  2284 ;;      Totals:         0       7       0       0
  2285 ;;Total ram usage:        7 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    5
  2288 ;; This function calls:
  2289 ;;		___awdiv
  2290 ;;		___lwdiv
  2291 ;;		_getAD
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _getPIR_AD
  2299  0204                     _getPIR_AD:	
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2303                           ;getPIR_AD@channel1 stored from wreg
  2304  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0206  00E2               	movwf	getPIR_AD@channel1
  2307                           
  2308                           ;PIR_B1.c: 167: char i = 0, j = 0;
  2309  0207  01E3               	clrf	getPIR_AD@i
  2310  0208  01E1               	clrf	getPIR_AD@j
  2311                           
  2312                           ;PIR_B1.c: 169: if (_PIR.ADtoGO == 1) {
  2313  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2314  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2315  020B  1CA0               	btfss	__PIR^(0+128),1
  2316  020C  0008               	return
  2317                           
  2318                           ;PIR_B1.c: 170: _PIR.GO = 1;
  2319  020D  1520               	bsf	__PIR^(0+128),2
  2320                           
  2321                           ;PIR_B1.c: 171: _PIR.ADRES = getAD(channel1, 0x70);
  2322  020E  3070               	movlw	112
  2323  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0211  00DE               	movwf	??_getPIR_AD
  2326  0212  085E               	movf	??_getPIR_AD,w
  2327  0213  00D4               	movwf	getAD@adcon1
  2328  0214  0862               	movf	getPIR_AD@channel1,w
  2329  0215  118A  2752  118A   	fcall	_getAD
  2330  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2332  021A  00DF               	movwf	??_getPIR_AD+1
  2333  021B  085F               	movf	??_getPIR_AD+1,w
  2334  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2335  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2336  021E  00A2               	movwf	(__PIR^(0+128)+2)
  2337                           
  2338                           ;PIR_B1.c: 172: _PIR.VRAD = _PIR.ADRES / 51;
  2339  021F  3033               	movlw	51
  2340  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0222  00D4               	movwf	___awdiv@divisor
  2343  0223  3000               	movlw	0
  2344  0224  00D5               	movwf	___awdiv@divisor+1
  2345  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0227  0822               	movf	(__PIR^(0+128)+2),w
  2348  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2350  022A  00DE               	movwf	??_getPIR_AD
  2351  022B  01DF               	clrf	??_getPIR_AD+1
  2352  022C  085E               	movf	??_getPIR_AD,w
  2353  022D  00D6               	movwf	___awdiv@dividend
  2354  022E  085F               	movf	??_getPIR_AD+1,w
  2355  022F  00D7               	movwf	___awdiv@dividend+1
  2356  0230  118A  2491  118A   	fcall	___awdiv
  2357  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0235  0854               	movf	?___awdiv,w
  2360  0236  00E0               	movwf	??_getPIR_AD+2
  2361  0237  0860               	movf	??_getPIR_AD+2,w
  2362  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2364  023A  00A3               	movwf	(__PIR^(0+128)+3)
  2365                           
  2366                           ;PIR_B1.c: 173: _PIR.VRAD1 = _PIR.ADRES;
  2367  023B  0822               	movf	(__PIR^(0+128)+2),w
  2368  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2369  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2370  023E  00DE               	movwf	??_getPIR_AD
  2371  023F  085E               	movf	??_getPIR_AD,w
  2372  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0242  00A4               	movwf	(__PIR^(0+128)+4)
  2375                           
  2376                           ;PIR_B1.c: 174: _PIR.ADRES = getAD(channel2, 0x70);
  2377  0243  3070               	movlw	112
  2378  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0246  00DE               	movwf	??_getPIR_AD
  2381  0247  085E               	movf	??_getPIR_AD,w
  2382  0248  00D4               	movwf	getAD@adcon1
  2383  0249  085D               	movf	getPIR_AD@channel2,w
  2384  024A  118A  2752  118A   	fcall	_getAD
  2385  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2386  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2387  024F  00DF               	movwf	??_getPIR_AD+1
  2388  0250  085F               	movf	??_getPIR_AD+1,w
  2389  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0253  00A2               	movwf	(__PIR^(0+128)+2)
  2392                           
  2393                           ;PIR_B1.c: 175: _PIR.SignalAD = _PIR.ADRES;
  2394  0254  0822               	movf	(__PIR^(0+128)+2),w
  2395  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0257  00DE               	movwf	??_getPIR_AD
  2398  0258  085E               	movf	??_getPIR_AD,w
  2399  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2400  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2401  025B  00A1               	movwf	(__PIR^(0+128)+1)
  2402                           
  2403                           ;PIR_B1.c: 177: switch (_PIR.VRAD) {
  2404  025C  2A78               	goto	l3804
  2405  025D                     l3788:	
  2406                           ;PIR_B1.c: 178: case 0:
  2407                           
  2408                           
  2409                           ;PIR_B1.c: 179: if (_PIR.VRAD1 < 10) {
  2410  025D  300A               	movlw	10
  2411  025E  0224               	subwf	(__PIR^(0+128)+4),w
  2412  025F  1803               	skipnc
  2413  0260  2A63               	goto	l3792
  2414                           
  2415                           ;PIR_B1.c: 180: _PIR.CloseTimeValue = 5;
  2416  0261  3005               	movlw	5
  2417  0262  2A64               	goto	L1
  2418  0263                     l3792:	
  2419                           ;PIR_B1.c: 181: } else {
  2420                           
  2421                           
  2422                           ;PIR_B1.c: 182: _PIR.CloseTimeValue = 60;
  2423  0263  303C               	movlw	60
  2424  0264                     L1:	
  2425  0264  00C7               	movwf	(__PIR^(0+128)+39)
  2426  0265  3000               	movlw	0
  2427  0266  2A76               	goto	L5
  2428  0267                     l3794:	
  2429                           ;PIR_B1.c: 185: case 1:
  2430                           
  2431                           ;PIR_B1.c: 183: }
  2432                           ;PIR_B1.c: 184: break;
  2433                           
  2434                           
  2435                           ;PIR_B1.c: 186: _PIR.CloseTimeValue = 300;
  2436  0267  302C               	movlw	44
  2437  0268  00C7               	movwf	(__PIR^(0+128)+39)
  2438  0269  3001               	movlw	1
  2439  026A  2A76               	goto	L5
  2440  026B                     l3796:	
  2441                           ;PIR_B1.c: 188: case 2:
  2442                           
  2443                           ;PIR_B1.c: 187: break;
  2444                           
  2445                           
  2446                           ;PIR_B1.c: 189: _PIR.CloseTimeValue = 600;
  2447  026B  3058               	movlw	88
  2448  026C  00C7               	movwf	(__PIR^(0+128)+39)
  2449  026D  3002               	movlw	2
  2450  026E  2A76               	goto	L5
  2451  026F                     l3798:	
  2452                           ;PIR_B1.c: 191: case 3:
  2453                           
  2454                           ;PIR_B1.c: 190: break;
  2455                           
  2456                           
  2457                           ;PIR_B1.c: 192: _PIR.CloseTimeValue = 900;
  2458  026F  3084               	movlw	132
  2459  0270  00C7               	movwf	(__PIR^(0+128)+39)
  2460  0271  3003               	movlw	3
  2461  0272  2A76               	goto	L5
  2462  0273                     l3800:	
  2463                           ;PIR_B1.c: 194: case 4:
  2464                           
  2465                           ;PIR_B1.c: 193: break;
  2466                           
  2467                           
  2468                           ;PIR_B1.c: 195: _PIR.CloseTimeValue = 1200;
  2469  0273  30B0               	movlw	176
  2470  0274  00C7               	movwf	(__PIR^(0+128)+39)
  2471  0275  3004               	movlw	4
  2472  0276                     L5:	
  2473  0276  00C8               	movwf	(__PIR^(0+128)+40)
  2474                           
  2475                           ;PIR_B1.c: 197: }
  2476                           
  2477                           ;PIR_B1.c: 196: break;
  2478  0277  2A89               	goto	l3806
  2479  0278                     l3804:	
  2480  0278  0823               	movf	(__PIR^(0+128)+3),w
  2481                           
  2482                           ; Switch size 1, requested type "space"
  2483                           ; Number of cases is 5, Range of values is 0 to 4
  2484                           ; switch strategies available:
  2485                           ; Name         Instructions Cycles
  2486                           ; simple_byte           16     9 (average)
  2487                           ; direct_byte           17     7 (fixed)
  2488                           ; jumptable            260     6 (fixed)
  2489                           ;	Chosen strategy is simple_byte
  2490  0279  3A00               	xorlw	0	; case 0
  2491  027A  1903               	skipnz
  2492  027B  2A5D               	goto	l3788
  2493  027C  3A01               	xorlw	1	; case 1
  2494  027D  1903               	skipnz
  2495  027E  2A67               	goto	l3794
  2496  027F  3A03               	xorlw	3	; case 2
  2497  0280  1903               	skipnz
  2498  0281  2A6B               	goto	l3796
  2499  0282  3A01               	xorlw	1	; case 3
  2500  0283  1903               	skipnz
  2501  0284  2A6F               	goto	l3798
  2502  0285  3A07               	xorlw	7	; case 4
  2503  0286  1903               	skipnz
  2504  0287  2A73               	goto	l3800
  2505  0288  2A89               	goto	l3806
  2506  0289                     l3806:	
  2507                           
  2508                           ;PIR_B1.c: 200: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2509  0289  0821               	movf	(__PIR^(0+128)+1),w
  2510  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2511  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2512  028C  00DE               	movwf	??_getPIR_AD
  2513  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2514  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2515  028F  0827               	movf	(__PIR^(0+128)+7),w
  2516  0290  3EA8               	addlw	(__PIR+8)& (0+255)
  2517  0291  0084               	movwf	4
  2518  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0294  085E               	movf	??_getPIR_AD,w
  2521  0295  1383               	bcf	3,7	;select IRP bank1
  2522  0296  0080               	movwf	0
  2523                           
  2524                           ;PIR_B1.c: 201: for (i = 0; i < 10; i++) {
  2525  0297  01E3               	clrf	getPIR_AD@i
  2526  0298  300A               	movlw	10
  2527  0299  0263               	subwf	getPIR_AD@i,w
  2528  029A  1803               	btfsc	3,0
  2529  029B  2AB8               	goto	l3820
  2530  029C                     l3814:	
  2531                           
  2532                           ;PIR_B1.c: 202: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2533  029C  0863               	movf	getPIR_AD@i,w
  2534  029D  3EA8               	addlw	(__PIR+8)& (0+255)
  2535  029E  0084               	movwf	4
  2536  029F  0800               	movf	0,w
  2537  02A0  00DE               	movwf	??_getPIR_AD
  2538  02A1  01DF               	clrf	??_getPIR_AD+1
  2539  02A2  085E               	movf	??_getPIR_AD,w
  2540  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2541  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2542  02A5  07B2               	addwf	(__PIR^(0+128)+18),f
  2543  02A6  1803               	skipnc
  2544  02A7  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2545  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2546  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2547  02AA  085F               	movf	??_getPIR_AD+1,w
  2548  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2549  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2550  02AD  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2551  02AE  3001               	movlw	1
  2552  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2553  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2554  02B1  00DE               	movwf	??_getPIR_AD
  2555  02B2  085E               	movf	??_getPIR_AD,w
  2556  02B3  07E3               	addwf	getPIR_AD@i,f
  2557  02B4  300A               	movlw	10
  2558  02B5  0263               	subwf	getPIR_AD@i,w
  2559  02B6  1C03               	skipc
  2560  02B7  2A9C               	goto	l3814
  2561  02B8                     l3820:	
  2562                           
  2563                           ;PIR_B1.c: 203: }
  2564                           ;PIR_B1.c: 204: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2565  02B8  300A               	movlw	10
  2566  02B9  00D4               	movwf	___lwdiv@divisor
  2567  02BA  3000               	movlw	0
  2568  02BB  00D5               	movwf	___lwdiv@divisor+1
  2569  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2570  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2571  02BE  0833               	movf	((__PIR+1)^(0+128)+18),w
  2572  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2573  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2574  02C1  01D7               	clrf	___lwdiv@dividend+1
  2575  02C2  07D7               	addwf	___lwdiv@dividend+1,f
  2576  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2577  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2578  02C5  0832               	movf	(__PIR^(0+128)+18),w
  2579  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2580  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2581  02C8  01D6               	clrf	___lwdiv@dividend
  2582  02C9  07D6               	addwf	___lwdiv@dividend,f
  2583  02CA  118A  2627  118A   	fcall	___lwdiv
  2584  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2585  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2586  02CF  0854               	movf	?___lwdiv,w
  2587  02D0  00DE               	movwf	??_getPIR_AD
  2588  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2589  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2590  02D3  0834               	movf	(__PIR^(0+128)+20),w
  2591  02D4  3EB5               	addlw	(__PIR+21)& (0+255)
  2592  02D5  0084               	movwf	4
  2593  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2594  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2595  02D8  085E               	movf	??_getPIR_AD,w
  2596  02D9  1383               	bcf	3,7	;select IRP bank1
  2597  02DA  0080               	movwf	0
  2598                           
  2599                           ;PIR_B1.c: 205: _PIR.TenAverageValue = 0;
  2600  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2601  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2602  02DD  01B2               	clrf	(__PIR^(0+128)+18)
  2603  02DE  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2604                           
  2605                           ;PIR_B1.c: 207: for (i = 0; i <= 9; i++) {
  2606  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2607  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2608  02E1  01E3               	clrf	getPIR_AD@i
  2609  02E2  300A               	movlw	10
  2610  02E3  0263               	subwf	getPIR_AD@i,w
  2611  02E4  1803               	btfsc	3,0
  2612  02E5  2B02               	goto	l3836
  2613  02E6                     l3830:	
  2614                           
  2615                           ;PIR_B1.c: 208: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2616  02E6  0863               	movf	getPIR_AD@i,w
  2617  02E7  3EB5               	addlw	(__PIR+21)& (0+255)
  2618  02E8  0084               	movwf	4
  2619  02E9  0800               	movf	0,w
  2620  02EA  00DE               	movwf	??_getPIR_AD
  2621  02EB  01DF               	clrf	??_getPIR_AD+1
  2622  02EC  085E               	movf	??_getPIR_AD,w
  2623  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2624  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2625  02EF  07BF               	addwf	(__PIR^(0+128)+31),f
  2626  02F0  1803               	skipnc
  2627  02F1  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2628  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2629  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2630  02F4  085F               	movf	??_getPIR_AD+1,w
  2631  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2632  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2633  02F7  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2634  02F8  3001               	movlw	1
  2635  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2636  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2637  02FB  00DE               	movwf	??_getPIR_AD
  2638  02FC  085E               	movf	??_getPIR_AD,w
  2639  02FD  07E3               	addwf	getPIR_AD@i,f
  2640  02FE  300A               	movlw	10
  2641  02FF  0263               	subwf	getPIR_AD@i,w
  2642  0300  1C03               	skipc
  2643  0301  2AE6               	goto	l3830
  2644  0302                     l3836:	
  2645                           
  2646                           ;PIR_B1.c: 209: }
  2647                           ;PIR_B1.c: 210: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2648  0302  300A               	movlw	10
  2649  0303  00D4               	movwf	___lwdiv@divisor
  2650  0304  3000               	movlw	0
  2651  0305  00D5               	movwf	___lwdiv@divisor+1
  2652  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0308  0840               	movf	((__PIR+1)^(0+128)+31),w
  2655  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2656  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2657  030B  01D7               	clrf	___lwdiv@dividend+1
  2658  030C  07D7               	addwf	___lwdiv@dividend+1,f
  2659  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2660  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2661  030F  083F               	movf	(__PIR^(0+128)+31),w
  2662  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0312  01D6               	clrf	___lwdiv@dividend
  2665  0313  07D6               	addwf	___lwdiv@dividend,f
  2666  0314  118A  2627  118A   	fcall	___lwdiv
  2667  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0319  0854               	movf	?___lwdiv,w
  2670  031A  00DE               	movwf	??_getPIR_AD
  2671  031B  085E               	movf	??_getPIR_AD,w
  2672  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2673  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2674  031E  00A6               	movwf	(__PIR^(0+128)+6)
  2675                           
  2676                           ;PIR_B1.c: 211: _PIR.HundredAverageValue = 0;
  2677  031F  01BF               	clrf	(__PIR^(0+128)+31)
  2678  0320  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2679                           
  2680                           ;PIR_B1.c: 213: if (_PIR.TenCount < 10) {
  2681  0321  300A               	movlw	10
  2682  0322  0227               	subwf	(__PIR^(0+128)+7),w
  2683  0323  1803               	skipnc
  2684  0324  2B2E               	goto	l3844
  2685                           
  2686                           ;PIR_B1.c: 214: _PIR.TenCount++;
  2687  0325  3001               	movlw	1
  2688  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0328  00DE               	movwf	??_getPIR_AD
  2691  0329  085E               	movf	??_getPIR_AD,w
  2692  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2693  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2694  032C  07A7               	addwf	(__PIR^(0+128)+7),f
  2695                           
  2696                           ;PIR_B1.c: 215: } else {
  2697  032D  0008               	return
  2698  032E                     l3844:	
  2699                           
  2700                           ;PIR_B1.c: 216: _PIR.TenCount = 0;
  2701  032E  01A7               	clrf	(__PIR^(0+128)+7)
  2702                           
  2703                           ;PIR_B1.c: 217: if (_PIR.HundreCount < 10)
  2704  032F  300A               	movlw	10
  2705  0330  0234               	subwf	(__PIR^(0+128)+20),w
  2706  0331  1803               	skipnc
  2707  0332  2B3C               	goto	l3850
  2708                           
  2709                           ;PIR_B1.c: 218: _PIR.HundreCount++;
  2710  0333  3001               	movlw	1
  2711  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0336  00DE               	movwf	??_getPIR_AD
  2714  0337  085E               	movf	??_getPIR_AD,w
  2715  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2717  033A  07B4               	addwf	(__PIR^(0+128)+20),f
  2718  033B  0008               	return
  2719  033C                     l3850:	
  2720                           
  2721                           ;PIR_B1.c: 219: else
  2722                           ;PIR_B1.c: 220: _PIR.HundreCount = 0;
  2723  033C  01B4               	clrf	(__PIR^(0+128)+20)
  2724  033D  0008               	return
  2725  033E                     __end_of_getPIR_AD:	
  2726                           
  2727                           	psect	text4
  2728  0627                     __ptext4:	
  2729 ;; *************** function ___lwdiv *****************
  2730 ;; Defined at:
  2731 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  divisor         2    0[BANK0 ] unsigned int 
  2734 ;;  dividend        2    2[BANK0 ] unsigned int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  quotient        2    5[BANK0 ] unsigned int 
  2737 ;;  counter         1    7[BANK0 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    0[BANK0 ] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2747 ;;      Params:         0       4       0       0
  2748 ;;      Locals:         0       3       0       0
  2749 ;;      Temps:          0       1       0       0
  2750 ;;      Totals:         0       8       0       0
  2751 ;;Total ram usage:        8 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    3
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_getPIR_AD
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           
  2762                           ;psect for function ___lwdiv
  2763  0627                     ___lwdiv:	
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2767  0627  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0628  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0629  01D9               	clrf	___lwdiv@quotient
  2770  062A  01DA               	clrf	___lwdiv@quotient+1
  2771  062B  0855               	movf	___lwdiv@divisor+1,w
  2772  062C  0454               	iorwf	___lwdiv@divisor,w
  2773  062D  1903               	skipnz
  2774  062E  2E60               	goto	l2898
  2775  062F  01DB               	clrf	___lwdiv@counter
  2776  0630  0ADB               	incf	___lwdiv@counter,f
  2777  0631                     l2886:	
  2778  0631  1BD5               	btfsc	___lwdiv@divisor+1,7
  2779  0632  2E3F               	goto	l2888
  2780  0633  3001               	movlw	1
  2781  0634                     u2405:	
  2782  0634  1003               	clrc
  2783  0635  0DD4               	rlf	___lwdiv@divisor,f
  2784  0636  0DD5               	rlf	___lwdiv@divisor+1,f
  2785  0637  3EFF               	addlw	-1
  2786  0638  1D03               	skipz
  2787  0639  2E34               	goto	u2405
  2788  063A  3001               	movlw	1
  2789  063B  00D8               	movwf	??___lwdiv
  2790  063C  0858               	movf	??___lwdiv,w
  2791  063D  07DB               	addwf	___lwdiv@counter,f
  2792  063E  2E31               	goto	l2886
  2793  063F                     l2888:	
  2794  063F  3001               	movlw	1
  2795  0640                     u2425:	
  2796  0640  1003               	clrc
  2797  0641  0DD9               	rlf	___lwdiv@quotient,f
  2798  0642  0DDA               	rlf	___lwdiv@quotient+1,f
  2799  0643  3EFF               	addlw	-1
  2800  0644  1D03               	skipz
  2801  0645  2E40               	goto	u2425
  2802  0646  0855               	movf	___lwdiv@divisor+1,w
  2803  0647  0257               	subwf	___lwdiv@dividend+1,w
  2804  0648  1D03               	skipz
  2805  0649  2E4C               	goto	u2435
  2806  064A  0854               	movf	___lwdiv@divisor,w
  2807  064B  0256               	subwf	___lwdiv@dividend,w
  2808  064C                     u2435:	
  2809  064C  1C03               	skipc
  2810  064D  2E55               	goto	l2894
  2811  064E  0854               	movf	___lwdiv@divisor,w
  2812  064F  02D6               	subwf	___lwdiv@dividend,f
  2813  0650  0855               	movf	___lwdiv@divisor+1,w
  2814  0651  1C03               	skipc
  2815  0652  03D7               	decf	___lwdiv@dividend+1,f
  2816  0653  02D7               	subwf	___lwdiv@dividend+1,f
  2817  0654  1459               	bsf	___lwdiv@quotient,0
  2818  0655                     l2894:	
  2819  0655  3001               	movlw	1
  2820  0656                     u2445:	
  2821  0656  1003               	clrc
  2822  0657  0CD5               	rrf	___lwdiv@divisor+1,f
  2823  0658  0CD4               	rrf	___lwdiv@divisor,f
  2824  0659  3EFF               	addlw	-1
  2825  065A  1D03               	skipz
  2826  065B  2E56               	goto	u2445
  2827  065C  3001               	movlw	1
  2828  065D  02DB               	subwf	___lwdiv@counter,f
  2829  065E  1D03               	btfss	3,2
  2830  065F  2E3F               	goto	l2888
  2831  0660                     l2898:	
  2832  0660  085A               	movf	___lwdiv@quotient+1,w
  2833  0661  01D5               	clrf	?___lwdiv+1
  2834  0662  07D5               	addwf	?___lwdiv+1,f
  2835  0663  0859               	movf	___lwdiv@quotient,w
  2836  0664  01D4               	clrf	?___lwdiv
  2837  0665  07D4               	addwf	?___lwdiv,f
  2838  0666  0008               	return
  2839  0667                     __end_of___lwdiv:	
  2840                           
  2841                           	psect	text5
  2842  0491                     __ptext5:	
  2843 ;; *************** function ___awdiv *****************
  2844 ;; Defined at:
  2845 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  divisor         2    0[BANK0 ] int 
  2848 ;;  dividend        2    2[BANK0 ] int 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  quotient        2    7[BANK0 ] int 
  2851 ;;  sign            1    6[BANK0 ] unsigned char 
  2852 ;;  counter         1    5[BANK0 ] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2    0[BANK0 ] int 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2862 ;;      Params:         0       4       0       0
  2863 ;;      Locals:         0       4       0       0
  2864 ;;      Temps:          0       1       0       0
  2865 ;;      Totals:         0       9       0       0
  2866 ;;Total ram usage:        9 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    3
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_getPIR_AD
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function ___awdiv
  2878  0491                     ___awdiv:	
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2882  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0493  01DA               	clrf	___awdiv@sign
  2885  0494  1FD5               	btfss	___awdiv@divisor+1,7
  2886  0495  2C9D               	goto	l2840
  2887  0496  09D4               	comf	___awdiv@divisor,f
  2888  0497  09D5               	comf	___awdiv@divisor+1,f
  2889  0498  0AD4               	incf	___awdiv@divisor,f
  2890  0499  1903               	skipnz
  2891  049A  0AD5               	incf	___awdiv@divisor+1,f
  2892  049B  01DA               	clrf	___awdiv@sign
  2893  049C  0ADA               	incf	___awdiv@sign,f
  2894  049D                     l2840:	
  2895  049D  1FD7               	btfss	___awdiv@dividend+1,7
  2896  049E  2CA8               	goto	l2846
  2897  049F  09D6               	comf	___awdiv@dividend,f
  2898  04A0  09D7               	comf	___awdiv@dividend+1,f
  2899  04A1  0AD6               	incf	___awdiv@dividend,f
  2900  04A2  1903               	skipnz
  2901  04A3  0AD7               	incf	___awdiv@dividend+1,f
  2902  04A4  3001               	movlw	1
  2903  04A5  00D8               	movwf	??___awdiv
  2904  04A6  0858               	movf	??___awdiv,w
  2905  04A7  06DA               	xorwf	___awdiv@sign,f
  2906  04A8                     l2846:	
  2907  04A8  01DB               	clrf	___awdiv@quotient
  2908  04A9  01DC               	clrf	___awdiv@quotient+1
  2909  04AA  0855               	movf	___awdiv@divisor+1,w
  2910  04AB  0454               	iorwf	___awdiv@divisor,w
  2911  04AC  1903               	skipnz
  2912  04AD  2CDF               	goto	l2868
  2913  04AE  01D9               	clrf	___awdiv@counter
  2914  04AF  0AD9               	incf	___awdiv@counter,f
  2915  04B0                     l2856:	
  2916  04B0  1BD5               	btfsc	___awdiv@divisor+1,7
  2917  04B1  2CBE               	goto	l2858
  2918  04B2  3001               	movlw	1
  2919  04B3                     u2325:	
  2920  04B3  1003               	clrc
  2921  04B4  0DD4               	rlf	___awdiv@divisor,f
  2922  04B5  0DD5               	rlf	___awdiv@divisor+1,f
  2923  04B6  3EFF               	addlw	-1
  2924  04B7  1D03               	skipz
  2925  04B8  2CB3               	goto	u2325
  2926  04B9  3001               	movlw	1
  2927  04BA  00D8               	movwf	??___awdiv
  2928  04BB  0858               	movf	??___awdiv,w
  2929  04BC  07D9               	addwf	___awdiv@counter,f
  2930  04BD  2CB0               	goto	l2856
  2931  04BE                     l2858:	
  2932  04BE  3001               	movlw	1
  2933  04BF                     u2345:	
  2934  04BF  1003               	clrc
  2935  04C0  0DDB               	rlf	___awdiv@quotient,f
  2936  04C1  0DDC               	rlf	___awdiv@quotient+1,f
  2937  04C2  3EFF               	addlw	-1
  2938  04C3  1D03               	skipz
  2939  04C4  2CBF               	goto	u2345
  2940  04C5  0855               	movf	___awdiv@divisor+1,w
  2941  04C6  0257               	subwf	___awdiv@dividend+1,w
  2942  04C7  1D03               	skipz
  2943  04C8  2CCB               	goto	u2355
  2944  04C9  0854               	movf	___awdiv@divisor,w
  2945  04CA  0256               	subwf	___awdiv@dividend,w
  2946  04CB                     u2355:	
  2947  04CB  1C03               	skipc
  2948  04CC  2CD4               	goto	l2864
  2949  04CD  0854               	movf	___awdiv@divisor,w
  2950  04CE  02D6               	subwf	___awdiv@dividend,f
  2951  04CF  0855               	movf	___awdiv@divisor+1,w
  2952  04D0  1C03               	skipc
  2953  04D1  03D7               	decf	___awdiv@dividend+1,f
  2954  04D2  02D7               	subwf	___awdiv@dividend+1,f
  2955  04D3  145B               	bsf	___awdiv@quotient,0
  2956  04D4                     l2864:	
  2957  04D4  3001               	movlw	1
  2958  04D5                     u2365:	
  2959  04D5  1003               	clrc
  2960  04D6  0CD5               	rrf	___awdiv@divisor+1,f
  2961  04D7  0CD4               	rrf	___awdiv@divisor,f
  2962  04D8  3EFF               	addlw	-1
  2963  04D9  1D03               	skipz
  2964  04DA  2CD5               	goto	u2365
  2965  04DB  3001               	movlw	1
  2966  04DC  02D9               	subwf	___awdiv@counter,f
  2967  04DD  1D03               	btfss	3,2
  2968  04DE  2CBE               	goto	l2858
  2969  04DF                     l2868:	
  2970  04DF  085A               	movf	___awdiv@sign,w
  2971  04E0  1903               	btfsc	3,2
  2972  04E1  2CE7               	goto	l2872
  2973  04E2  09DB               	comf	___awdiv@quotient,f
  2974  04E3  09DC               	comf	___awdiv@quotient+1,f
  2975  04E4  0ADB               	incf	___awdiv@quotient,f
  2976  04E5  1903               	skipnz
  2977  04E6  0ADC               	incf	___awdiv@quotient+1,f
  2978  04E7                     l2872:	
  2979  04E7  085C               	movf	___awdiv@quotient+1,w
  2980  04E8  01D5               	clrf	?___awdiv+1
  2981  04E9  07D5               	addwf	?___awdiv+1,f
  2982  04EA  085B               	movf	___awdiv@quotient,w
  2983  04EB  01D4               	clrf	?___awdiv
  2984  04EC  07D4               	addwf	?___awdiv,f
  2985  04ED  0008               	return
  2986  04EE                     __end_of___awdiv:	
  2987                           
  2988                           	psect	text6
  2989  0700                     __ptext6:	
  2990 ;; *************** function _getCDS_AD *****************
  2991 ;; Defined at:
  2992 ;;		line 53 in file "../src/CDS_B1.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  channel1        1    wreg     unsigned char 
  2995 ;;  channel2        1    2[BANK0 ] unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  channel1        1    7[BANK0 ] unsigned char 
  2998 ;;  j               1    6[BANK0 ] unsigned char 
  2999 ;;  i               1    5[BANK0 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3009 ;;      Params:         0       1       0       0
  3010 ;;      Locals:         0       3       0       0
  3011 ;;      Temps:          0       2       0       0
  3012 ;;      Totals:         0       6       0       0
  3013 ;;Total ram usage:        6 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    5
  3016 ;; This function calls:
  3017 ;;		_getAD
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           
  3024                           ;psect for function _getCDS_AD
  3025  0700                     _getCDS_AD:	
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3029                           ;getCDS_AD@channel1 stored from wreg
  3030  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0702  00DB               	movwf	getCDS_AD@channel1
  3033                           
  3034                           ;CDS_B1.c: 54: char i = 0, j = 0;
  3035  0703  01D9               	clrf	getCDS_AD@i
  3036  0704  01DA               	clrf	getCDS_AD@j
  3037                           
  3038                           ;CDS_B1.c: 55: if (_CDS.ADtoGO == 1) {
  3039  0705  1DA6               	btfss	__CDS,3
  3040  0706  0008               	return
  3041                           
  3042                           ;CDS_B1.c: 56: _CDS.GO = 1;
  3043  0707  14A6               	bsf	__CDS,1
  3044                           
  3045                           ;CDS_B1.c: 57: _CDS.ADRES = getAD(channel1, 0x70);
  3046  0708  3070               	movlw	112
  3047  0709  00D7               	movwf	??_getCDS_AD
  3048  070A  0857               	movf	??_getCDS_AD,w
  3049  070B  00D4               	movwf	getAD@adcon1
  3050  070C  085B               	movf	getCDS_AD@channel1,w
  3051  070D  118A  2752  118A   	fcall	_getAD
  3052  0710  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0711  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0712  00D8               	movwf	??_getCDS_AD+1
  3055  0713  0858               	movf	??_getCDS_AD+1,w
  3056  0714  00AA               	movwf	__CDS+4
  3057                           
  3058                           ;CDS_B1.c: 58: _CDS.VRAD = _CDS.ADRES;
  3059  0715  082A               	movf	__CDS+4,w
  3060  0716  00D7               	movwf	??_getCDS_AD
  3061  0717  0857               	movf	??_getCDS_AD,w
  3062  0718  00A8               	movwf	__CDS+2
  3063                           
  3064                           ;CDS_B1.c: 59: _CDS.ADRES = getAD(channel2, 0x70);
  3065  0719  3070               	movlw	112
  3066  071A  00D7               	movwf	??_getCDS_AD
  3067  071B  0857               	movf	??_getCDS_AD,w
  3068  071C  00D4               	movwf	getAD@adcon1
  3069  071D  0856               	movf	getCDS_AD@channel2,w
  3070  071E  118A  2752         	fcall	_getAD
  3071  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0722  00D8               	movwf	??_getCDS_AD+1
  3074  0723  0858               	movf	??_getCDS_AD+1,w
  3075  0724  00AA               	movwf	__CDS+4
  3076                           
  3077                           ;CDS_B1.c: 60: _CDS.SignalAD = _CDS.ADRES;
  3078  0725  082A               	movf	__CDS+4,w
  3079  0726  00D7               	movwf	??_getCDS_AD
  3080  0727  0857               	movf	??_getCDS_AD,w
  3081  0728  00A9               	movwf	__CDS+3
  3082  0729  0008               	return
  3083  072A                     __end_of_getCDS_AD:	
  3084                           
  3085                           	psect	text7
  3086  0752                     __ptext7:	
  3087 ;; *************** function _getAD *****************
  3088 ;; Defined at:
  3089 ;;		line 427 in file "../src/MCU_B1.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  adcon0          1    wreg     unsigned char 
  3092 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      unsigned char 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, pclath, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3104 ;;      Params:         0       1       0       0
  3105 ;;      Locals:         0       1       0       0
  3106 ;;      Temps:          0       0       0       0
  3107 ;;      Totals:         0       2       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    4
  3111 ;; This function calls:
  3112 ;;		_Timeout_Counter
  3113 ;;		_set_TimeoutCleared
  3114 ;; This function is called by:
  3115 ;;		_getCDS_AD
  3116 ;;		_getPIR_AD
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _getAD
  3122  0752                     _getAD:	
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3126                           ;getAD@adcon0 stored from wreg
  3127  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0753  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0754  00D5               	movwf	getAD@adcon0
  3130                           
  3131                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3132  0755  0855               	movf	getAD@adcon0,w
  3133  0756  009F               	movwf	31	;volatile
  3134                           
  3135                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3136  0757  0854               	movf	getAD@adcon1,w
  3137  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3139  075A  009F               	movwf	31	;volatile
  3140                           
  3141                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3142  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3143  075C  1303               	bcf	3,6	;RP1=0, select bank0
  3144  075D  149F               	bsf	31,1	;volatile
  3145                           
  3146                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3147  075E  2F62               	goto	l3528
  3148  075F                     l3526:	
  3149                           
  3150                           ;MCU_B1.c: 432: Timeout_Counter();
  3151  075F  158A  27C2  118A   	fcall	_Timeout_Counter
  3152  0762                     l3528:	
  3153  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0764  1C9F               	btfss	31,1	;volatile
  3156  0765  2F68               	goto	l3532
  3157  0766  1D23               	btfss	_myMain+3,2
  3158  0767  2F5F               	goto	l3526
  3159  0768                     l3532:	
  3160                           
  3161                           ;MCU_B1.c: 433: };
  3162                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3163  0768  158A  26CE         	fcall	_set_TimeoutCleared
  3164                           
  3165                           ;MCU_B1.c: 435: return ADRES;
  3166  076A  1283               	bcf	3,5	;RP0=0, select bank0
  3167  076B  1303               	bcf	3,6	;RP1=0, select bank0
  3168  076C  081E               	movf	30,w	;volatile
  3169  076D  0008               	return
  3170  076E                     __end_of_getAD:	
  3171                           
  3172                           	psect	text8
  3173  0ECE                     __ptext8:	
  3174 ;; *************** function _set_TimeoutCleared *****************
  3175 ;; Defined at:
  3176 ;;		line 281 in file "../src/Main_B1.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		status,2
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3190 ;;      Params:         0       0       0       0
  3191 ;;      Locals:         0       0       0       0
  3192 ;;      Temps:          0       0       0       0
  3193 ;;      Totals:         0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    3
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_getAD
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _set_TimeoutCleared
  3206  0ECE                     _set_TimeoutCleared:	
  3207                           
  3208                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _set_TimeoutCleared: [status,2]
  3212  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0ED0  1123               	bcf	_myMain+3,2
  3215                           
  3216                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3217  0ED1  01A4               	clrf	_myMain+4
  3218  0ED2  01A5               	clrf	_myMain+5
  3219  0ED3  0008               	return
  3220  0ED4                     __end_of_set_TimeoutCleared:	
  3221                           
  3222                           	psect	text9
  3223  0FC2                     __ptext9:	
  3224 ;; *************** function _Timeout_Counter *****************
  3225 ;; Defined at:
  3226 ;;		line 272 in file "../src/Main_B1.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3240 ;;      Params:         0       0       0       0
  3241 ;;      Locals:         0       0       0       0
  3242 ;;      Temps:          0       0       0       0
  3243 ;;      Totals:         0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_getAD
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _Timeout_Counter
  3256  0FC2                     _Timeout_Counter:	
  3257                           
  3258                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3262  0FC2  3001               	movlw	1
  3263  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0FC5  07A4               	addwf	_myMain+4,f
  3266  0FC6  1803               	skipnc
  3267  0FC7  0AA5               	incf	_myMain+5,f
  3268  0FC8  3000               	movlw	0
  3269  0FC9  07A5               	addwf	_myMain+5,f
  3270                           
  3271                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 10000) {
  3272  0FCA  3027               	movlw	39
  3273  0FCB  0625               	xorwf	_myMain+5,w
  3274  0FCC  1D03               	skipz
  3275  0FCD  2FD0               	goto	u3435
  3276  0FCE  3010               	movlw	16
  3277  0FCF  0624               	xorwf	_myMain+4,w
  3278  0FD0                     u3435:	
  3279  0FD0  1D03               	skipz
  3280  0FD1  0008               	return
  3281                           
  3282                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3283  0FD2  01A4               	clrf	_myMain+4
  3284  0FD3  01A5               	clrf	_myMain+5
  3285                           
  3286                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3287  0FD4  1523               	bsf	_myMain+3,2
  3288  0FD5  0008               	return
  3289  0FD6                     __end_of_Timeout_Counter:	
  3290                           
  3291                           	psect	text10
  3292  0F7A                     __ptext10:	
  3293 ;; *************** function _WDT_Main *****************
  3294 ;; Defined at:
  3295 ;;		line 1060 in file "../src/MCU_B1.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;		None               void
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3309 ;;      Params:         0       0       0       0
  3310 ;;      Locals:         0       0       0       0
  3311 ;;      Temps:          0       1       0       0
  3312 ;;      Totals:         0       1       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    4
  3316 ;; This function calls:
  3317 ;;		_WDT_Clearing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _WDT_Main
  3325  0F7A                     _WDT_Main:	
  3326                           
  3327                           ;MCU_B1.c: 1061: if (WDT.Enable == 1) {
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3331  0F7A  1C77               	btfss	_WDT,0
  3332  0F7B  0008               	return
  3333                           
  3334                           ;MCU_B1.c: 1062: if (WDT.Timer-- > 0) {
  3335  0F7C  3001               	movlw	1
  3336  0F7D  02F8               	subwf	_WDT+1,f
  3337  0F7E  0878               	movf	_WDT+1,w
  3338  0F7F  3AFF               	xorlw	255
  3339  0F80  1903               	skipnz
  3340  0F81  0008               	return
  3341                           
  3342                           ;MCU_B1.c: 1063: WDT.Timer = 100;
  3343  0F82  3064               	movlw	100
  3344  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0F85  00D4               	movwf	??_WDT_Main
  3347  0F86  0854               	movf	??_WDT_Main,w
  3348  0F87  00F8               	movwf	_WDT+1
  3349                           
  3350                           ;MCU_B1.c: 1064: WDT_Clearing();
  3351  0F88  118A  2002         	fcall	_WDT_Clearing
  3352  0F8A  0008               	return
  3353  0F8B                     __end_of_WDT_Main:	
  3354                           
  3355                           	psect	text11
  3356  0002                     __ptext11:	
  3357 ;; *************** function _WDT_Clearing *****************
  3358 ;; Defined at:
  3359 ;;		line 1070 in file "../src/MCU_B1.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;		None
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;		None               void
  3366 ;; Registers used:
  3367 ;;		None
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3373 ;;      Params:         0       0       0       0
  3374 ;;      Locals:         0       0       0       0
  3375 ;;      Temps:          0       0       0       0
  3376 ;;      Totals:         0       0       0       0
  3377 ;;Total ram usage:        0 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    3
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_WDT_Main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _WDT_Clearing
  3389  0002                     _WDT_Clearing:	
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _WDT_Clearing: []
  3393  0002  0064               	clrwdt	;# 
  3394  0003  0008               	return
  3395  0004                     __end_of_WDT_Clearing:	
  3396                           
  3397                           	psect	text12
  3398  0F4A                     __ptext12:	
  3399 ;; *************** function _UART_Main *****************
  3400 ;; Defined at:
  3401 ;;		line 758 in file "../src/MCU_B1.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3415 ;;      Params:         0       0       0       0
  3416 ;;      Locals:         0       0       0       0
  3417 ;;      Temps:          0       0       0       0
  3418 ;;      Totals:         0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    5
  3422 ;; This function calls:
  3423 ;;		_UART_Receive
  3424 ;;		_UART_Transmit
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _UART_Main
  3432  0F4A                     _UART_Main:	
  3433                           
  3434                           ;MCU_B1.c: 759: if (UART.RxGO == 1) {
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _UART_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3438  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0F4C  1CC0               	btfss	_UART+11,1
  3441  0F4D  2F52               	goto	l469
  3442                           
  3443                           ;MCU_B1.c: 760: UART.RxGO = 0;
  3444  0F4E  10C0               	bcf	_UART+11,1
  3445                           
  3446                           ;MCU_B1.c: 761: UART_Receive();
  3447  0F4F  158A  26BA         	fcall	_UART_Receive
  3448                           
  3449                           ;MCU_B1.c: 762: ;;
  3450                           ;MCU_B1.c: 765: } else {
  3451  0F51  0008               	return
  3452  0F52                     l469:	
  3453                           
  3454                           ;MCU_B1.c: 766: if (UART.TxGO == 1) {
  3455  0F52  1C40               	btfss	_UART+11,0
  3456  0F53  0008               	return
  3457                           
  3458                           ;MCU_B1.c: 767: UART.TxGO = 0;
  3459  0F54  1040               	bcf	_UART+11,0
  3460                           
  3461                           ;MCU_B1.c: 768: UART_Transmit();
  3462  0F55  118A  269E         	fcall	_UART_Transmit
  3463  0F57  0008               	return
  3464  0F58                     __end_of_UART_Main:	
  3465                           
  3466                           	psect	text13
  3467  069E                     __ptext13:	
  3468 ;; *************** function _UART_Transmit *****************
  3469 ;; Defined at:
  3470 ;;		line 773 in file "../src/MCU_B1.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  i               2    1[BANK0 ] int 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3484 ;;      Params:         0       0       0       0
  3485 ;;      Locals:         0       2       0       0
  3486 ;;      Temps:          0       0       0       0
  3487 ;;      Totals:         0       2       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    4
  3491 ;; This function calls:
  3492 ;;		_putch
  3493 ;; This function is called by:
  3494 ;;		_UART_Main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _UART_Transmit
  3500  069E                     _UART_Transmit:	
  3501                           
  3502                           ;MCU_B1.c: 774: UART.TxRun = 1;
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _UART_Transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3506  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3507  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3508  06A0  1540               	bsf	_UART+11,2
  3509                           
  3510                           ;MCU_B1.c: 777: for (int i = 0; i < 8; i++) {
  3511  06A1  01D5               	clrf	UART_Transmit@i
  3512  06A2  01D6               	clrf	UART_Transmit@i+1
  3513  06A3  0856               	movf	UART_Transmit@i+1,w
  3514  06A4  3A80               	xorlw	128
  3515  06A5  00FF               	movwf	127
  3516  06A6  3080               	movlw	128
  3517  06A7  027F               	subwf	127,w
  3518  06A8  1D03               	skipz
  3519  06A9  2EAC               	goto	u3655
  3520  06AA  3008               	movlw	8
  3521  06AB  0255               	subwf	UART_Transmit@i,w
  3522  06AC                     u3655:	
  3523  06AC  1803               	btfsc	3,0
  3524  06AD  2ECB               	goto	l476
  3525  06AE                     l3636:	
  3526                           
  3527                           ;MCU_B1.c: 779: putch(UART.Data[i]);
  3528  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3529  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3530  06B0  0855               	movf	UART_Transmit@i,w
  3531  06B1  3E35               	addlw	_UART& (0+255)
  3532  06B2  0084               	movwf	4
  3533  06B3  1383               	bcf	3,7	;select IRP bank0
  3534  06B4  0800               	movf	0,w
  3535  06B5  158A  26E2  118A   	fcall	_putch
  3536  06B8  3001               	movlw	1
  3537  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3538  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3539  06BB  07D5               	addwf	UART_Transmit@i,f
  3540  06BC  1803               	skipnc
  3541  06BD  0AD6               	incf	UART_Transmit@i+1,f
  3542  06BE  3000               	movlw	0
  3543  06BF  07D6               	addwf	UART_Transmit@i+1,f
  3544  06C0  0856               	movf	UART_Transmit@i+1,w
  3545  06C1  3A80               	xorlw	128
  3546  06C2  00FF               	movwf	127
  3547  06C3  3080               	movlw	128
  3548  06C4  027F               	subwf	127,w
  3549  06C5  1D03               	skipz
  3550  06C6  2EC9               	goto	u3665
  3551  06C7  3008               	movlw	8
  3552  06C8  0255               	subwf	UART_Transmit@i,w
  3553  06C9                     u3665:	
  3554  06C9  1C03               	skipc
  3555  06CA  2EAE               	goto	l3636
  3556  06CB                     l476:	
  3557                           
  3558                           ;MCU_B1.c: 787: }
  3559                           ;MCU_B1.c: 791: UART.TxRun = 0;
  3560  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3561  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3562  06CD  1140               	bcf	_UART+11,2
  3563  06CE  0008               	return
  3564  06CF                     __end_of_UART_Transmit:	
  3565                           
  3566                           	psect	text14
  3567  0EE2                     __ptext14:	
  3568 ;; *************** function _putch *****************
  3569 ;; Defined at:
  3570 ;;		line 858 in file "../src/MCU_B1.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  byte            1    wreg     unsigned char 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  byte            1    0[BANK0 ] unsigned char 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;		None               void
  3577 ;; Registers used:
  3578 ;;		wreg
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3584 ;;      Params:         0       0       0       0
  3585 ;;      Locals:         0       1       0       0
  3586 ;;      Temps:          0       0       0       0
  3587 ;;      Totals:         0       1       0       0
  3588 ;;Total ram usage:        1 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    3
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_UART_Transmit
  3595 ;;		_getche
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _putch
  3601  0EE2                     _putch:	
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _putch: [wreg]
  3605                           ;putch@byte stored from wreg
  3606  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0EE4  00D4               	movwf	putch@byte
  3609  0EE5                     l487:	
  3610                           ;MCU_B1.c: 861: continue;
  3611                           
  3612                           ;MCU_B1.c: 860: while (!TXIF)
  3613                           
  3614  0EE5  1E0C               	btfss	12,4	;volatile
  3615  0EE6  2EE5               	goto	l487
  3616                           
  3617                           ;MCU_B1.c: 862: TXREG = byte;
  3618  0EE7  0854               	movf	putch@byte,w
  3619  0EE8  0099               	movwf	25	;volatile
  3620  0EE9  0008               	return
  3621  0EEA                     __end_of_putch:	
  3622                           
  3623                           	psect	text15
  3624  0EBA                     __ptext15:	
  3625 ;; *************** function _UART_Receive *****************
  3626 ;; Defined at:
  3627 ;;		line 794 in file "../src/MCU_B1.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;		None               void
  3634 ;; Registers used:
  3635 ;;		None
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3641 ;;      Params:         0       0       0       0
  3642 ;;      Locals:         0       0       0       0
  3643 ;;      Temps:          0       0       0       0
  3644 ;;      Totals:         0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    3
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_UART_Main
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _UART_Receive
  3657  0EBA                     _UART_Receive:	
  3658                           
  3659                           ;MCU_B1.c: 816: myMain.Test = 1;
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _UART_Receive: []
  3663  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0EBC  1720               	bsf	_myMain,6
  3666  0EBD  0008               	return
  3667  0EBE                     __end_of_UART_Receive:	
  3668                           
  3669                           	psect	text16
  3670  0025                     __ptext16:	
  3671 ;; *************** function _PIR_Main *****************
  3672 ;; Defined at:
  3673 ;;		line 13 in file "../src/PIR_B1.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  error           1   22[BANK0 ] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;		None               void
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3687 ;;      Params:         0       0       0       0
  3688 ;;      Locals:         0       3       0       0
  3689 ;;      Temps:          0       5       0       0
  3690 ;;      Totals:         0       8       0       0
  3691 ;;Total ram usage:        8 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    6
  3694 ;; This function calls:
  3695 ;;		_getLights_Status
  3696 ;;		_getMain_All_Error_Status
  3697 ;;		_setLED
  3698 ;;		_setLights_Trigger
  3699 ;;		_setMain_Exception
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _PIR_Main
  3707  0025                     _PIR_Main:	
  3708                           
  3709                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3713  0025  3000               	movlw	0
  3714  0026  158A  26C3  118A   	fcall	_getMain_All_Error_Status
  3715  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3716  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3717  002B  00E3               	movwf	??_PIR_Main
  3718  002C  0863               	movf	??_PIR_Main,w
  3719  002D  00EA               	movwf	PIR_Main@error
  3720                           
  3721                           ;PIR_B1.c: 15: if (_PIR.Enable == 1) {
  3722  002E  1683               	bsf	3,5	;RP0=1, select bank1
  3723  002F  1303               	bcf	3,6	;RP1=0, select bank1
  3724  0030  1C20               	btfss	__PIR^(0+128),0
  3725  0031  29E6               	goto	l751
  3726                           
  3727                           ;PIR_B1.c: 16: if (error == 0) {
  3728  0032  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0033  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0034  08EA               	movf	PIR_Main@error,f
  3731  0035  1D03               	skipz
  3732  0036  2844               	goto	l752
  3733                           
  3734                           ;PIR_B1.c: 17: if (_PIR.Detect == 0) {
  3735  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3737  0039  1A20               	btfsc	__PIR^(0+128),4
  3738  003A  2865               	goto	l3886
  3739                           
  3740                           ;PIR_B1.c: 18: _PIR.Detect = 1;
  3741  003B  1620               	bsf	__PIR^(0+128),4
  3742                           
  3743                           ;PIR_B1.c: 19: _PIR.Available = 1;
  3744  003C  17A0               	bsf	__PIR^(0+128),7
  3745                           
  3746                           ;PIR_B1.c: 21: setMain_Exception(error);
  3747  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3748  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3749  003F  086A               	movf	PIR_Main@error,w
  3750  0040  118A  233E  118A   	fcall	_setMain_Exception
  3751                           
  3752                           ;PIR_B1.c: 22: }
  3753                           ;PIR_B1.c: 23: } else {
  3754  0043  2865               	goto	l3886
  3755  0044                     l752:	
  3756                           
  3757                           ;PIR_B1.c: 24: if (_PIR.Detect == 1) {
  3758  0044  1683               	bsf	3,5	;RP0=1, select bank1
  3759  0045  1303               	bcf	3,6	;RP1=0, select bank1
  3760  0046  1E20               	btfss	__PIR^(0+128),4
  3761  0047  2865               	goto	l3886
  3762                           
  3763                           ;PIR_B1.c: 25: setMain_Exception(error);
  3764  0048  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0049  1303               	bcf	3,6	;RP1=0, select bank0
  3766  004A  086A               	movf	PIR_Main@error,w
  3767  004B  118A  233E  118A   	fcall	_setMain_Exception
  3768                           
  3769                           ;PIR_B1.c: 27: _PIR.Detect = 0;
  3770  004E  1683               	bsf	3,5	;RP0=1, select bank1
  3771  004F  1303               	bcf	3,6	;RP1=0, select bank1
  3772  0050  1220               	bcf	__PIR^(0+128),4
  3773                           
  3774                           ;PIR_B1.c: 28: _PIR.Available = 0;
  3775  0051  13A0               	bcf	__PIR^(0+128),7
  3776                           
  3777                           ;PIR_B1.c: 29: _PIR.Status = 0;
  3778  0052  1320               	bcf	__PIR^(0+128),6
  3779                           
  3780                           ;PIR_B1.c: 32: _PIR.Time = 0;
  3781  0053  01A5               	clrf	(__PIR^(0+128)+5)
  3782                           
  3783                           ;PIR_B1.c: 33: _PIR.RangeTime1 = 0;
  3784  0054  01CA               	clrf	(__PIR^(0+128)+42)
  3785                           
  3786                           ;PIR_B1.c: 34: _PIR.RangeValue = 15;
  3787  0055  300F               	movlw	15
  3788  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3790  0058  00E3               	movwf	??_PIR_Main
  3791  0059  0863               	movf	??_PIR_Main,w
  3792  005A  1683               	bsf	3,5	;RP0=1, select bank1
  3793  005B  1303               	bcf	3,6	;RP1=0, select bank1
  3794  005C  00CC               	movwf	(__PIR^(0+128)+44)
  3795                           
  3796                           ;PIR_B1.c: 35: _PIR.RangeCount = 0;
  3797  005D  01CB               	clrf	(__PIR^(0+128)+43)
  3798                           
  3799                           ;PIR_B1.c: 39: if (_PIR.OK == 1) {
  3800  005E  1DA0               	btfss	__PIR^(0+128),3
  3801  005F  2862               	goto	l756
  3802                           
  3803                           ;PIR_B1.c: 40: _PIR.Count = 0;
  3804  0060  01C1               	clrf	(__PIR^(0+128)+33)
  3805  0061  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3806  0062                     l756:	
  3807                           
  3808                           ;PIR_B1.c: 41: }
  3809                           ;PIR_B1.c: 42: _PIR.CloseTimeSeconds = 0;
  3810  0062  01C6               	clrf	(__PIR^(0+128)+38)
  3811                           
  3812                           ;PIR_B1.c: 43: _PIR.CloseTimeMinutes = 0;
  3813  0063  01C4               	clrf	(__PIR^(0+128)+36)
  3814  0064  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3815  0065                     l3886:	
  3816                           
  3817                           ;PIR_B1.c: 44: }
  3818                           ;PIR_B1.c: 45: }
  3819                           ;PIR_B1.c: 47: if (_PIR.ADtoGO == 0) {
  3820  0065  1683               	bsf	3,5	;RP0=1, select bank1
  3821  0066  1303               	bcf	3,6	;RP1=0, select bank1
  3822  0067  18A0               	btfsc	__PIR^(0+128),1
  3823  0068  2878               	goto	l757
  3824                           
  3825                           ;PIR_B1.c: 48: _PIR.Time++;
  3826  0069  3001               	movlw	1
  3827  006A  1283               	bcf	3,5	;RP0=0, select bank0
  3828  006B  1303               	bcf	3,6	;RP1=0, select bank0
  3829  006C  00E3               	movwf	??_PIR_Main
  3830  006D  0863               	movf	??_PIR_Main,w
  3831  006E  1683               	bsf	3,5	;RP0=1, select bank1
  3832  006F  1303               	bcf	3,6	;RP1=0, select bank1
  3833  0070  07A5               	addwf	(__PIR^(0+128)+5),f
  3834                           
  3835                           ;PIR_B1.c: 49: if (_PIR.Time == 10) {
  3836  0071  0825               	movf	(__PIR^(0+128)+5),w
  3837  0072  3A0A               	xorlw	10
  3838  0073  1D03               	skipz
  3839  0074  299A               	goto	l3970
  3840                           
  3841                           ;PIR_B1.c: 50: _PIR.Time = 0;
  3842  0075  01A5               	clrf	(__PIR^(0+128)+5)
  3843                           
  3844                           ;PIR_B1.c: 51: _PIR.ADtoGO = 1;
  3845  0076  14A0               	bsf	__PIR^(0+128),1
  3846                           
  3847                           ;PIR_B1.c: 52: }
  3848                           ;PIR_B1.c: 53: } else {
  3849  0077  299A               	goto	l3970
  3850  0078                     l757:	
  3851                           
  3852                           ;PIR_B1.c: 54: if (_PIR.GO == 1) {
  3853  0078  1D20               	btfss	__PIR^(0+128),2
  3854  0079  299A               	goto	l3970
  3855                           
  3856                           ;PIR_B1.c: 55: _PIR.GO = 0;
  3857  007A  1120               	bcf	__PIR^(0+128),2
  3858                           
  3859                           ;PIR_B1.c: 56: if (_PIR.Available == 1) {
  3860  007B  1BA0               	btfsc	__PIR^(0+128),7
  3861                           
  3862                           ;PIR_B1.c: 57: if (_PIR.OK == 1) {
  3863  007C  1DA0               	btfss	__PIR^(0+128),3
  3864  007D  299A               	goto	l3970
  3865                           
  3866                           ;PIR_B1.c: 59: _PIR.Time++;
  3867  007E  3001               	movlw	1
  3868  007F  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0080  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0081  00E3               	movwf	??_PIR_Main
  3871  0082  0863               	movf	??_PIR_Main,w
  3872  0083  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0084  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0085  07A5               	addwf	(__PIR^(0+128)+5),f
  3875                           
  3876                           ;PIR_B1.c: 60: if (_PIR.Time == 60) {
  3877  0086  0825               	movf	(__PIR^(0+128)+5),w
  3878  0087  3A3C               	xorlw	60
  3879  0088  1D03               	skipz
  3880  0089  28BE               	goto	l3936
  3881                           
  3882                           ;PIR_B1.c: 61: _PIR.Time = 0;
  3883  008A  01A5               	clrf	(__PIR^(0+128)+5)
  3884                           
  3885                           ;PIR_B1.c: 62: if (_PIR.RangeCount >= 90) {
  3886  008B  305A               	movlw	90
  3887  008C  024B               	subwf	(__PIR^(0+128)+43),w
  3888  008D  1C03               	skipc
  3889  008E  289A               	goto	l3918
  3890                           
  3891                           ;PIR_B1.c: 63: _PIR.RangeTime1 = 0;
  3892  008F  01CA               	clrf	(__PIR^(0+128)+42)
  3893                           
  3894                           ;PIR_B1.c: 65: if (_PIR.RangeValue == 15) {
  3895  0090  084C               	movf	(__PIR^(0+128)+44),w
  3896  0091  3A0F               	xorlw	15
  3897  0092  1903               	btfsc	3,2
  3898  0093  28AF               	goto	L12
  3899                           
  3900                           ;PIR_B1.c: 67: } else if (_PIR.RangeValue == (15+10)) {
  3901                           
  3902                           ;PIR_B1.c: 66: _PIR.RangeValue = (15+10);
  3903  0094  084C               	movf	(__PIR^(0+128)+44),w
  3904  0095  3A19               	xorlw	25
  3905  0096  1D03               	skipz
  3906  0097  28BD               	goto	l3934
  3907                           
  3908                           ;PIR_B1.c: 68: _PIR.RangeValue = (15+20);
  3909  0098  3023               	movlw	35
  3910  0099  28B6               	goto	L8
  3911  009A                     l3918:	
  3912                           ;PIR_B1.c: 69: }
  3913                           ;PIR_B1.c: 70: } else if (_PIR.RangeCount <= 10) {
  3914                           
  3915  009A  300B               	movlw	11
  3916  009B  024B               	subwf	(__PIR^(0+128)+43),w
  3917  009C  1803               	skipnc
  3918  009D  28BD               	goto	l3934
  3919                           
  3920                           ;PIR_B1.c: 71: _PIR.RangeTime1++;
  3921  009E  3001               	movlw	1
  3922  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3923  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3924  00A1  00E3               	movwf	??_PIR_Main
  3925  00A2  0863               	movf	??_PIR_Main,w
  3926  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  3927  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  3928  00A5  07CA               	addwf	(__PIR^(0+128)+42),f
  3929                           
  3930                           ;PIR_B1.c: 72: if (_PIR.RangeTime1 == 2) {
  3931  00A6  084A               	movf	(__PIR^(0+128)+42),w
  3932  00A7  3A02               	xorlw	2
  3933  00A8  1D03               	skipz
  3934  00A9  28BD               	goto	l3934
  3935                           
  3936                           ;PIR_B1.c: 73: _PIR.RangeTime1 = 0;
  3937  00AA  01CA               	clrf	(__PIR^(0+128)+42)
  3938                           
  3939                           ;PIR_B1.c: 75: if (_PIR.RangeValue == (15+20)) {
  3940  00AB  084C               	movf	(__PIR^(0+128)+44),w
  3941  00AC  3A23               	xorlw	35
  3942  00AD  1D03               	skipz
  3943  00AE  28B1               	goto	l3930
  3944  00AF                     L12:	
  3945                           
  3946                           ;PIR_B1.c: 76: _PIR.RangeValue = (15+10);
  3947  00AF  3019               	movlw	25
  3948  00B0  28B6               	goto	L8
  3949  00B1                     l3930:	
  3950                           ;PIR_B1.c: 77: } else if (_PIR.RangeValue == (15+10)) {
  3951                           
  3952  00B1  084C               	movf	(__PIR^(0+128)+44),w
  3953  00B2  3A19               	xorlw	25
  3954  00B3  1D03               	skipz
  3955  00B4  28BD               	goto	l3934
  3956                           
  3957                           ;PIR_B1.c: 78: _PIR.RangeValue = 15;
  3958  00B5  300F               	movlw	15
  3959  00B6                     L8:	
  3960  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3961  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3962  00B8  00E3               	movwf	??_PIR_Main
  3963  00B9  0863               	movf	??_PIR_Main,w
  3964  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3965  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3966  00BC  00CC               	movwf	(__PIR^(0+128)+44)
  3967  00BD                     l3934:	
  3968                           
  3969                           ;PIR_B1.c: 79: }
  3970                           ;PIR_B1.c: 80: }
  3971                           ;PIR_B1.c: 81: }
  3972                           ;PIR_B1.c: 82: _PIR.RangeCount = 0;
  3973  00BD  01CB               	clrf	(__PIR^(0+128)+43)
  3974  00BE                     l3936:	
  3975                           
  3976                           ;PIR_B1.c: 83: }
  3977                           ;PIR_B1.c: 86: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  3978                           ;PIR_B1.c: 87: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  3979  00BE  084C               	movf	(__PIR^(0+128)+44),w
  3980  00BF  074E               	addwf	(__PIR^(0+128)+46),w
  3981  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  3982  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  3983  00C2  00E3               	movwf	??_PIR_Main
  3984  00C3  01E4               	clrf	??_PIR_Main+1
  3985  00C4  0DE4               	rlf	??_PIR_Main+1,f
  3986  00C5  09E3               	comf	??_PIR_Main,f
  3987  00C6  09E4               	comf	??_PIR_Main+1,f
  3988  00C7  0AE3               	incf	??_PIR_Main,f
  3989  00C8  1903               	skipnz
  3990  00C9  0AE4               	incf	??_PIR_Main+1,f
  3991  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  3992  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  3993  00CC  0826               	movf	(__PIR^(0+128)+6),w
  3994  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  3995  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  3996  00CF  0763               	addwf	??_PIR_Main,w
  3997  00D0  00E5               	movwf	??_PIR_Main+2
  3998  00D1  0864               	movf	??_PIR_Main+1,w
  3999  00D2  1803               	skipnc
  4000  00D3  0A64               	incf	??_PIR_Main+1,w
  4001  00D4  00E6               	movwf	??_PIR_Main+3
  4002  00D5  0866               	movf	??_PIR_Main+3,w
  4003  00D6  3A80               	xorlw	128
  4004  00D7  3C80               	sublw	128
  4005  00D8  1D03               	skipz
  4006  00D9  28DE               	goto	u4195
  4007  00DA  0865               	movf	??_PIR_Main+2,w
  4008  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4009  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4010  00DD  0221               	subwf	(__PIR^(0+128)+1),w
  4011  00DE                     u4195:	
  4012  00DE  1C03               	skipc
  4013  00DF  290C               	goto	l3946
  4014  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  4015  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  4016  00E2  084C               	movf	(__PIR^(0+128)+44),w
  4017  00E3  074E               	addwf	(__PIR^(0+128)+46),w
  4018  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4019  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4020  00E6  00E3               	movwf	??_PIR_Main
  4021  00E7  01E4               	clrf	??_PIR_Main+1
  4022  00E8  0DE4               	rlf	??_PIR_Main+1,f
  4023  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  4024  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  4025  00EB  0826               	movf	(__PIR^(0+128)+6),w
  4026  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4027  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4028  00EE  0763               	addwf	??_PIR_Main,w
  4029  00EF  00E5               	movwf	??_PIR_Main+2
  4030  00F0  3000               	movlw	0
  4031  00F1  1803               	skipnc
  4032  00F2  3001               	movlw	1
  4033  00F3  0764               	addwf	??_PIR_Main+1,w
  4034  00F4  00E6               	movwf	??_PIR_Main+3
  4035  00F5  0866               	movf	??_PIR_Main+3,w
  4036  00F6  3A80               	xorlw	128
  4037  00F7  00E7               	movwf	??_PIR_Main+4
  4038  00F8  3080               	movlw	128
  4039  00F9  0267               	subwf	??_PIR_Main+4,w
  4040  00FA  1D03               	skipz
  4041  00FB  2902               	goto	u4205
  4042  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  4043  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  4044  00FE  0821               	movf	(__PIR^(0+128)+1),w
  4045  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0100  1303               	bcf	3,6	;RP1=0, select bank0
  4047  0101  0265               	subwf	??_PIR_Main+2,w
  4048  0102                     u4205:	
  4049  0102  1C03               	skipc
  4050  0103  290C               	goto	l3946
  4051                           
  4052                           ;PIR_B1.c: 88: _PIR.Count = 0;
  4053  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4054  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4055  0106  01C1               	clrf	(__PIR^(0+128)+33)
  4056  0107  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4057                           
  4058                           ;PIR_B1.c: 89: setLED(1, 0);
  4059  0108  1283               	bcf	3,5	;RP0=0, select bank0
  4060  0109  1303               	bcf	3,6	;RP1=0, select bank0
  4061  010A  01D6               	clrf	setLED@command
  4062  010B  2983               	goto	L13
  4063  010C                     l3946:	
  4064                           ;PIR_B1.c: 91: } else {
  4065                           
  4066                           ;PIR_B1.c: 90: setLED(2, 0);
  4067                           
  4068                           
  4069                           ;PIR_B1.c: 93: _PIR.RangeCount++;
  4070  010C  3001               	movlw	1
  4071  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4072  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4073  010F  00E3               	movwf	??_PIR_Main
  4074  0110  0863               	movf	??_PIR_Main,w
  4075  0111  1683               	bsf	3,5	;RP0=1, select bank1
  4076  0112  1303               	bcf	3,6	;RP1=0, select bank1
  4077  0113  07CB               	addwf	(__PIR^(0+128)+43),f
  4078                           
  4079                           ;PIR_B1.c: 94: _PIR.Count++;
  4080  0114  3001               	movlw	1
  4081  0115  07C1               	addwf	(__PIR^(0+128)+33),f
  4082  0116  1803               	skipnc
  4083  0117  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4084  0118  3000               	movlw	0
  4085  0119  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4086                           
  4087                           ;PIR_B1.c: 96: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4088  011A  1B20               	btfsc	__PIR^(0+128),6
  4089  011B  2920               	goto	l3954
  4090  011C  3002               	movlw	2
  4091  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4092  011E  1303               	bcf	3,6	;RP1=0, select bank0
  4093  011F  2922               	goto	L9
  4094  0120                     l3954:	
  4095  0120  3003               	movlw	3
  4096  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0122                     L9:	
  4098  0122  00E8               	movwf	_PIR_Main$2378
  4099  0123  3000               	movlw	0
  4100  0124  00E9               	movwf	_PIR_Main$2378+1
  4101  0125  0868               	movf	_PIR_Main$2378,w
  4102  0126  00E3               	movwf	??_PIR_Main
  4103  0127  0863               	movf	??_PIR_Main,w
  4104  0128  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0129  1303               	bcf	3,6	;RP1=0, select bank1
  4106  012A  00C3               	movwf	(__PIR^(0+128)+35)
  4107                           
  4108                           ;PIR_B1.c: 98: if (_PIR.Count == _PIR.TriggerValue) {
  4109  012B  0843               	movf	(__PIR^(0+128)+35),w
  4110  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4111  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4112  012E  00E3               	movwf	??_PIR_Main
  4113  012F  01E4               	clrf	??_PIR_Main+1
  4114  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4115  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4116  0132  0842               	movf	((__PIR+1)^(0+128)+33),w
  4117  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0135  0664               	xorwf	??_PIR_Main+1,w
  4120  0136  1D03               	skipz
  4121  0137  293E               	goto	u4225
  4122  0138  1683               	bsf	3,5	;RP0=1, select bank1
  4123  0139  1303               	bcf	3,6	;RP1=0, select bank1
  4124  013A  0841               	movf	(__PIR^(0+128)+33),w
  4125  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4126  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4127  013D  0663               	xorwf	??_PIR_Main,w
  4128  013E                     u4225:	
  4129  013E  1D03               	skipz
  4130  013F  299A               	goto	l3970
  4131                           
  4132                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4133  0140  1683               	bsf	3,5	;RP0=1, select bank1
  4134  0141  1303               	bcf	3,6	;RP1=0, select bank1
  4135  0142  01C1               	clrf	(__PIR^(0+128)+33)
  4136  0143  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4137                           
  4138                           ;PIR_B1.c: 100: _PIR.CloseTimeSeconds = 0;
  4139  0144  01C6               	clrf	(__PIR^(0+128)+38)
  4140                           
  4141                           ;PIR_B1.c: 101: _PIR.CloseTimeMinutes = 0;
  4142  0145  01C4               	clrf	(__PIR^(0+128)+36)
  4143  0146  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4144                           
  4145                           ;PIR_B1.c: 102: _PIR.Status = 1;
  4146  0147  1720               	bsf	__PIR^(0+128),6
  4147                           
  4148                           ;PIR_B1.c: 105: if (getLights_Status(1) == 0) {
  4149  0148  3001               	movlw	1
  4150  0149  158A  2758  118A   	fcall	_getLights_Status
  4151  014C  3800               	iorlw	0
  4152  014D  1D03               	skipz
  4153  014E  2957               	goto	l3964
  4154                           
  4155                           ;PIR_B1.c: 106: setLights_Trigger(1, 1);
  4156  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0151  01D6               	clrf	setLights_Trigger@command
  4159  0152  0AD6               	incf	setLights_Trigger@command,f
  4160  0153  3001               	movlw	1
  4161  0154  118A  27A6  118A   	fcall	_setLights_Trigger
  4162  0157                     l3964:	
  4163                           
  4164                           ;PIR_B1.c: 107: }
  4165                           ;PIR_B1.c: 111: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4166  0157  1683               	bsf	3,5	;RP0=1, select bank1
  4167  0158  1303               	bcf	3,6	;RP1=0, select bank1
  4168  0159  084C               	movf	(__PIR^(0+128)+44),w
  4169  015A  074E               	addwf	(__PIR^(0+128)+46),w
  4170  015B  1283               	bcf	3,5	;RP0=0, select bank0
  4171  015C  1303               	bcf	3,6	;RP1=0, select bank0
  4172  015D  00E3               	movwf	??_PIR_Main
  4173  015E  01E4               	clrf	??_PIR_Main+1
  4174  015F  0DE4               	rlf	??_PIR_Main+1,f
  4175  0160  09E3               	comf	??_PIR_Main,f
  4176  0161  09E4               	comf	??_PIR_Main+1,f
  4177  0162  0AE3               	incf	??_PIR_Main,f
  4178  0163  1903               	skipnz
  4179  0164  0AE4               	incf	??_PIR_Main+1,f
  4180  0165  1683               	bsf	3,5	;RP0=1, select bank1
  4181  0166  1303               	bcf	3,6	;RP1=0, select bank1
  4182  0167  0826               	movf	(__PIR^(0+128)+6),w
  4183  0168  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0169  1303               	bcf	3,6	;RP1=0, select bank0
  4185  016A  0763               	addwf	??_PIR_Main,w
  4186  016B  00E5               	movwf	??_PIR_Main+2
  4187  016C  0864               	movf	??_PIR_Main+1,w
  4188  016D  1803               	skipnc
  4189  016E  0A64               	incf	??_PIR_Main+1,w
  4190  016F  00E6               	movwf	??_PIR_Main+3
  4191  0170  0866               	movf	??_PIR_Main+3,w
  4192  0171  3A80               	xorlw	128
  4193  0172  00E7               	movwf	??_PIR_Main+4
  4194  0173  3080               	movlw	128
  4195  0174  0267               	subwf	??_PIR_Main+4,w
  4196  0175  1D03               	skipz
  4197  0176  297D               	goto	u4245
  4198  0177  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0178  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0179  0821               	movf	(__PIR^(0+128)+1),w
  4201  017A  1283               	bcf	3,5	;RP0=0, select bank0
  4202  017B  1303               	bcf	3,6	;RP1=0, select bank0
  4203  017C  0265               	subwf	??_PIR_Main+2,w
  4204  017D                     u4245:	
  4205  017D  1C03               	skipc
  4206  017E  298B               	goto	l3968
  4207                           
  4208                           ;PIR_B1.c: 112: setLED(1, 1);
  4209  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0181  01D6               	clrf	setLED@command
  4212  0182  0AD6               	incf	setLED@command,f
  4213  0183                     L13:	
  4214  0183  3001               	movlw	1
  4215  0184  118A  2420  118A   	fcall	_setLED
  4216                           
  4217                           ;PIR_B1.c: 113: setLED(2, 0);
  4218  0187  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0188  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0189  01D6               	clrf	setLED@command
  4221  018A  2996               	goto	L10
  4222  018B                     l3968:	
  4223                           ;PIR_B1.c: 114: } else {
  4224                           
  4225                           
  4226                           ;PIR_B1.c: 115: setLED(1, 0);
  4227  018B  1283               	bcf	3,5	;RP0=0, select bank0
  4228  018C  1303               	bcf	3,6	;RP1=0, select bank0
  4229  018D  01D6               	clrf	setLED@command
  4230  018E  3001               	movlw	1
  4231  018F  118A  2420  118A   	fcall	_setLED
  4232                           
  4233                           ;PIR_B1.c: 116: setLED(2, 1);
  4234  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4235  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4236  0194  01D6               	clrf	setLED@command
  4237  0195  0AD6               	incf	setLED@command,f
  4238  0196                     L10:	
  4239  0196  3002               	movlw	2
  4240  0197  118A  2420  118A   	fcall	_setLED
  4241  019A                     l3970:	
  4242                           
  4243                           ;PIR_B1.c: 117: }
  4244                           ;PIR_B1.c: 118: }
  4245                           ;PIR_B1.c: 119: }
  4246                           ;PIR_B1.c: 120: }
  4247                           ;PIR_B1.c: 121: }
  4248                           ;PIR_B1.c: 122: }
  4249                           ;PIR_B1.c: 123: }
  4250                           ;PIR_B1.c: 124: if (_PIR.OK == 0) {
  4251  019A  1683               	bsf	3,5	;RP0=1, select bank1
  4252  019B  1303               	bcf	3,6	;RP1=0, select bank1
  4253  019C  19A0               	btfsc	__PIR^(0+128),3
  4254  019D  29B6               	goto	l3980
  4255                           
  4256                           ;PIR_B1.c: 125: _PIR.Count++;
  4257  019E  3001               	movlw	1
  4258  019F  07C1               	addwf	(__PIR^(0+128)+33),f
  4259  01A0  1803               	skipnc
  4260  01A1  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4261  01A2  3000               	movlw	0
  4262  01A3  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4263                           
  4264                           ;PIR_B1.c: 126: if (_PIR.Count == 3000) {
  4265  01A4  300B               	movlw	11
  4266  01A5  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4267  01A6  1D03               	skipz
  4268  01A7  29AA               	goto	u4265
  4269  01A8  30B8               	movlw	184
  4270  01A9  0641               	xorwf	(__PIR^(0+128)+33),w
  4271  01AA                     u4265:	
  4272  01AA  1D03               	skipz
  4273  01AB  29B6               	goto	l3980
  4274                           
  4275                           ;PIR_B1.c: 127: _PIR.Count = 0;
  4276  01AC  01C1               	clrf	(__PIR^(0+128)+33)
  4277  01AD  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4278                           
  4279                           ;PIR_B1.c: 128: _PIR.OK = 1;
  4280  01AE  15A0               	bsf	__PIR^(0+128),3
  4281                           
  4282                           ;PIR_B1.c: 129: setLED(1, 0);
  4283  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4284  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4285  01B1  01D6               	clrf	setLED@command
  4286  01B2  3001               	movlw	1
  4287  01B3  118A  2420  118A   	fcall	_setLED
  4288  01B6                     l3980:	
  4289                           
  4290                           ;PIR_B1.c: 130: }
  4291                           ;PIR_B1.c: 131: }
  4292                           ;PIR_B1.c: 132: if (_PIR.Status == 1) {
  4293  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  4294  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  4295  01B8  1F20               	btfss	__PIR^(0+128),6
  4296  01B9  0008               	return
  4297                           
  4298                           ;PIR_B1.c: 133: _PIR.CloseTimeSeconds++;
  4299  01BA  3001               	movlw	1
  4300  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  4301  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  4302  01BD  00E3               	movwf	??_PIR_Main
  4303  01BE  0863               	movf	??_PIR_Main,w
  4304  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  4305  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  4306  01C1  07C6               	addwf	(__PIR^(0+128)+38),f
  4307                           
  4308                           ;PIR_B1.c: 134: if (_PIR.CloseTimeSeconds == 100) {
  4309  01C2  0846               	movf	(__PIR^(0+128)+38),w
  4310  01C3  3A64               	xorlw	100
  4311  01C4  1D03               	skipz
  4312  01C5  0008               	return
  4313                           
  4314                           ;PIR_B1.c: 135: _PIR.CloseTimeSeconds = 0;
  4315  01C6  01C6               	clrf	(__PIR^(0+128)+38)
  4316                           
  4317                           ;PIR_B1.c: 136: _PIR.CloseTimeMinutes++;
  4318  01C7  3001               	movlw	1
  4319  01C8  07C4               	addwf	(__PIR^(0+128)+36),f
  4320  01C9  1803               	skipnc
  4321  01CA  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4322  01CB  3000               	movlw	0
  4323  01CC  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4324                           
  4325                           ;PIR_B1.c: 137: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4326  01CD  0848               	movf	((__PIR+1)^(0+128)+39),w
  4327  01CE  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4328  01CF  1D03               	skipz
  4329  01D0  29D3               	goto	u4295
  4330  01D1  0847               	movf	(__PIR^(0+128)+39),w
  4331  01D2  0644               	xorwf	(__PIR^(0+128)+36),w
  4332  01D3                     u4295:	
  4333  01D3  1D03               	skipz
  4334  01D4  0008               	return
  4335                           
  4336                           ;PIR_B1.c: 138: _PIR.CloseTimeMinutes = 0;
  4337  01D5  01C4               	clrf	(__PIR^(0+128)+36)
  4338  01D6  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4339                           
  4340                           ;PIR_B1.c: 139: _PIR.Status = 0;
  4341  01D7  1320               	bcf	__PIR^(0+128),6
  4342                           
  4343                           ;PIR_B1.c: 142: if (getLights_Status(1) == 1) {
  4344  01D8  3001               	movlw	1
  4345  01D9  158A  2758  118A   	fcall	_getLights_Status
  4346  01DC  3A01               	xorlw	1
  4347  01DD  1D03               	skipz
  4348  01DE  0008               	return
  4349                           
  4350                           ;PIR_B1.c: 143: setLights_Trigger(1, 0);
  4351  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4352  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4353  01E1  01D6               	clrf	setLights_Trigger@command
  4354  01E2  3001               	movlw	1
  4355  01E3  118A  27A6         	fcall	_setLights_Trigger
  4356                           
  4357                           ;PIR_B1.c: 144: }
  4358                           ;PIR_B1.c: 147: }
  4359                           ;PIR_B1.c: 148: }
  4360                           ;PIR_B1.c: 149: }
  4361                           ;PIR_B1.c: 150: } else {
  4362  01E5  0008               	return
  4363  01E6                     l751:	
  4364                           
  4365                           ;PIR_B1.c: 151: if (myMain.PowerON == 1) {
  4366  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  4367  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  4368  01E8  1C20               	btfss	_myMain,0
  4369  01E9  0008               	return
  4370                           
  4371                           ;PIR_B1.c: 152: _PIR.Enable = 1;
  4372  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  4373  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  4374  01EC  1420               	bsf	__PIR^(0+128),0
  4375                           
  4376                           ;PIR_B1.c: 153: setLED(1, 1);
  4377  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  4378  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  4379  01EF  01D6               	clrf	setLED@command
  4380  01F0  0AD6               	incf	setLED@command,f
  4381  01F1  3001               	movlw	1
  4382  01F2  118A  2420  118A   	fcall	_setLED
  4383                           
  4384                           ;PIR_B1.c: 156: if (getLights_Status(1) == 0) {
  4385  01F5  3001               	movlw	1
  4386  01F6  158A  2758  118A   	fcall	_getLights_Status
  4387  01F9  3800               	iorlw	0
  4388  01FA  1D03               	skipz
  4389  01FB  0008               	return
  4390                           
  4391                           ;PIR_B1.c: 157: setLights_Trigger(1, 1);
  4392  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  4393  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  4394  01FE  01D6               	clrf	setLights_Trigger@command
  4395  01FF  0AD6               	incf	setLights_Trigger@command,f
  4396  0200  3001               	movlw	1
  4397  0201  118A  27A6         	fcall	_setLights_Trigger
  4398  0203  0008               	return
  4399  0204                     __end_of_PIR_Main:	
  4400                           
  4401                           	psect	text17
  4402  033E                     __ptext17:	
  4403 ;; *************** function _setMain_Exception *****************
  4404 ;; Defined at:
  4405 ;;		line 287 in file "../src/Main_B1.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  command         1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  command         1   14[BANK0 ] unsigned char 
  4410 ;;  i               2   11[BANK0 ] int 
  4411 ;;  count           1    8[BANK0 ] unsigned char 
  4412 ;;  status          1   13[BANK0 ] unsigned char 
  4413 ;;  buz             1    7[BANK0 ] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4423 ;;      Params:         0       0       0       0
  4424 ;;      Locals:         0       8       0       0
  4425 ;;      Temps:          0       2       0       0
  4426 ;;      Totals:         0      10       0       0
  4427 ;;Total ram usage:       10 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    5
  4430 ;; This function calls:
  4431 ;;		_getAll_Lights_Line
  4432 ;;		_getLights_Status
  4433 ;;		_setLED
  4434 ;;		_setLights_Trigger
  4435 ;; This function is called by:
  4436 ;;		_PIR_Main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _setMain_Exception
  4442  033E                     _setMain_Exception:	
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4446                           ;setMain_Exception@command stored from wreg
  4447  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4448  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0340  00E2               	movwf	setMain_Exception@command
  4450                           
  4451                           ;Main_B1.c: 288: char status = 0, buz = 0;
  4452  0341  01E1               	clrf	setMain_Exception@status
  4453  0342  01DB               	clrf	setMain_Exception@buz
  4454                           
  4455                           ;Main_B1.c: 290: status = command == 3 ? getAll_Lights_Line() : 255;
  4456  0343  0862               	movf	setMain_Exception@command,w
  4457  0344  3A03               	xorlw	3
  4458  0345  1903               	skipnz
  4459  0346  2B4B               	goto	l3650
  4460  0347  30FF               	movlw	255
  4461  0348  00DD               	movwf	_setMain_Exception$1831
  4462  0349  3000               	movlw	0
  4463  034A  2B55               	goto	L14
  4464  034B                     l3650:	
  4465  034B  158A  2769  118A   	fcall	_getAll_Lights_Line
  4466  034E  1283               	bcf	3,5	;RP0=0, select bank0
  4467  034F  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0350  00D9               	movwf	??_setMain_Exception
  4469  0351  01DA               	clrf	??_setMain_Exception+1
  4470  0352  0859               	movf	??_setMain_Exception,w
  4471  0353  00DD               	movwf	_setMain_Exception$1831
  4472  0354  085A               	movf	??_setMain_Exception+1,w
  4473  0355                     L14:	
  4474  0355  00DE               	movwf	_setMain_Exception$1831+1
  4475  0356  085D               	movf	_setMain_Exception$1831,w
  4476  0357  00D9               	movwf	??_setMain_Exception
  4477  0358  0859               	movf	??_setMain_Exception,w
  4478  0359  00E1               	movwf	setMain_Exception@status
  4479                           
  4480                           ;Main_B1.c: 292: if (command == 0) {
  4481  035A  08E2               	movf	setMain_Exception@command,f
  4482  035B  1D03               	skipz
  4483  035C  2B65               	goto	l3658
  4484                           
  4485                           ;Main_B1.c: 293: setLED(command, 110);
  4486  035D  306E               	movlw	110
  4487  035E  00D9               	movwf	??_setMain_Exception
  4488  035F  0859               	movf	??_setMain_Exception,w
  4489  0360  00D6               	movwf	setLED@command
  4490  0361  0862               	movf	setMain_Exception@command,w
  4491  0362  118A  2420         	fcall	_setLED
  4492                           
  4493                           ;Main_B1.c: 294: } else {
  4494  0364  0008               	return
  4495  0365                     l3658:	
  4496                           
  4497                           ;Main_B1.c: 295: setLED(command, 111);
  4498  0365  306F               	movlw	111
  4499  0366  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0367  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0368  00D9               	movwf	??_setMain_Exception
  4502  0369  0859               	movf	??_setMain_Exception,w
  4503  036A  00D6               	movwf	setLED@command
  4504  036B  0862               	movf	setMain_Exception@command,w
  4505  036C  118A  2420  118A   	fcall	_setLED
  4506                           
  4507                           ;Main_B1.c: 298: if (status == 255) {
  4508  036F  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0370  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0371  0861               	movf	setMain_Exception@status,w
  4511  0372  3AFF               	xorlw	255
  4512  0373  1D03               	skipz
  4513  0374  2B9F               	goto	l3674
  4514                           
  4515                           ;Main_B1.c: 300: char count = 1;
  4516  0375  01DC               	clrf	setMain_Exception@count
  4517  0376  0ADC               	incf	setMain_Exception@count,f
  4518                           
  4519                           ;Main_B1.c: 308: for (int i = 0; i < count; i++) {
  4520  0377  01DF               	clrf	setMain_Exception@i
  4521  0378  01E0               	clrf	setMain_Exception@i+1
  4522  0379                     l3672:	
  4523  0379  0860               	movf	setMain_Exception@i+1,w
  4524  037A  3A80               	xorlw	128
  4525  037B  00D9               	movwf	??_setMain_Exception
  4526  037C  3080               	movlw	128
  4527  037D  0259               	subwf	??_setMain_Exception,w
  4528  037E  1D03               	skipz
  4529  037F  2B82               	goto	u3715
  4530  0380  085C               	movf	setMain_Exception@count,w
  4531  0381  025F               	subwf	setMain_Exception@i,w
  4532  0382                     u3715:	
  4533  0382  1803               	btfsc	3,0
  4534  0383  0008               	return
  4535                           
  4536                           ;Main_B1.c: 309: if (getLights_Status(i + 1) == 1) {
  4537  0384  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0385  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0386  085F               	movf	setMain_Exception@i,w
  4540  0387  3E01               	addlw	1
  4541  0388  158A  2758  118A   	fcall	_getLights_Status
  4542  038B  3A01               	xorlw	1
  4543  038C  1D03               	skipz
  4544  038D  2B96               	goto	l3670
  4545                           
  4546                           ;Main_B1.c: 310: setLights_Trigger(i + 1, 0);
  4547  038E  1283               	bcf	3,5	;RP0=0, select bank0
  4548  038F  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0390  01D6               	clrf	setLights_Trigger@command
  4550  0391  085F               	movf	setMain_Exception@i,w
  4551  0392  3E01               	addlw	1
  4552  0393  118A  27A6  118A   	fcall	_setLights_Trigger
  4553  0396                     l3670:	
  4554  0396  3001               	movlw	1
  4555  0397  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0398  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0399  07DF               	addwf	setMain_Exception@i,f
  4558  039A  1803               	skipnc
  4559  039B  0AE0               	incf	setMain_Exception@i+1,f
  4560  039C  3000               	movlw	0
  4561  039D  07E0               	addwf	setMain_Exception@i+1,f
  4562  039E  2B79               	goto	l3672
  4563  039F                     l3674:	
  4564                           ;Main_B1.c: 311: }
  4565                           ;Main_B1.c: 312: }
  4566                           ;Main_B1.c: 313: } else {
  4567                           
  4568                           
  4569                           ;Main_B1.c: 314: if (getLights_Status(status) == 1) {
  4570  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4571  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4572  03A1  0861               	movf	setMain_Exception@status,w
  4573  03A2  158A  2758  118A   	fcall	_getLights_Status
  4574  03A5  3A01               	xorlw	1
  4575  03A6  1D03               	skipz
  4576  03A7  0008               	return
  4577                           
  4578                           ;Main_B1.c: 315: setLights_Trigger(status, 0);
  4579  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  4580  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  4581  03AA  01D6               	clrf	setLights_Trigger@command
  4582  03AB  0861               	movf	setMain_Exception@status,w
  4583  03AC  118A  27A6         	fcall	_setLights_Trigger
  4584  03AE  0008               	return
  4585  03AF                     __end_of_setMain_Exception:	
  4586                           
  4587                           	psect	text18
  4588  0F69                     __ptext18:	
  4589 ;; *************** function _getAll_Lights_Line *****************
  4590 ;; Defined at:
  4591 ;;		line 236 in file "../src/TriacRelay_B1.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  line            1    2[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      unsigned char 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4605 ;;      Params:         0       0       0       0
  4606 ;;      Locals:         0       1       0       0
  4607 ;;      Temps:          0       0       0       0
  4608 ;;      Totals:         0       1       0       0
  4609 ;;Total ram usage:        1 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    4
  4612 ;; This function calls:
  4613 ;;		_LightsPointSelect
  4614 ;; This function is called by:
  4615 ;;		_setMain_Exception
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _getAll_Lights_Line
  4621  0F69                     _getAll_Lights_Line:	
  4622                           
  4623                           ;TriacRelay_B1.c: 237: char line = 0;
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4627  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0F6B  01D6               	clrf	getAll_Lights_Line@line
  4630                           
  4631                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  4632  0F6C  3001               	movlw	1
  4633  0F6D  158A  2707         	fcall	_LightsPointSelect
  4634                           
  4635                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  4636  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0F71  0A33               	incf	_Lights,w
  4639  0F72  0084               	movwf	4
  4640  0F73  3000               	movlw	0
  4641  0F74  1383               	bcf	3,7	;select IRP bank0
  4642  0F75  1800               	btfsc	0,0
  4643  0F76  3001               	movlw	1
  4644  0F77  00D6               	movwf	getAll_Lights_Line@line
  4645                           
  4646                           ;TriacRelay_B1.c: 250: return line;
  4647  0F78  0856               	movf	getAll_Lights_Line@line,w
  4648  0F79  0008               	return
  4649  0F7A                     __end_of_getAll_Lights_Line:	
  4650                           
  4651                           	psect	text19
  4652  0EC3                     __ptext19:	
  4653 ;; *************** function _getMain_All_Error_Status *****************
  4654 ;; Defined at:
  4655 ;;		line 400 in file "../src/Main_B1.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  command         1    wreg     unsigned char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  command         1    0[COMMON] unsigned char 
  4660 ;;  status          1    0[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4670 ;;      Params:         0       0       0       0
  4671 ;;      Locals:         0       1       0       0
  4672 ;;      Temps:          0       0       0       0
  4673 ;;      Totals:         0       1       0       0
  4674 ;;Total ram usage:        1 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_PIR_Main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _getMain_All_Error_Status
  4686  0EC3                     _getMain_All_Error_Status:	
  4687                           
  4688                           ;Main_B1.c: 401: char status = 0;
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  4692  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0EC5  01D4               	clrf	getMain_All_Error_Status@status
  4695                           
  4696                           ;Main_B1.c: 437: return status;
  4697  0EC6  0854               	movf	getMain_All_Error_Status@status,w
  4698  0EC7  0008               	return
  4699  0EC8                     __end_of_getMain_All_Error_Status:	
  4700                           
  4701                           	psect	text20
  4702  0F13                     __ptext20:	
  4703 ;; *************** function _PIR_Initialization *****************
  4704 ;; Defined at:
  4705 ;;		line 7 in file "../src/PIR_B1.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4719 ;;      Params:         0       0       0       0
  4720 ;;      Locals:         0       0       0       0
  4721 ;;      Temps:          0       1       0       0
  4722 ;;      Totals:         0       1       0       0
  4723 ;;Total ram usage:        1 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    3
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _PIR_Initialization
  4735  0F13                     _PIR_Initialization:	
  4736                           
  4737                           ;PIR_B1.c: 8: _PIR.RangeValue = 15;
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _PIR_Initialization: [wreg]
  4741  0F13  300F               	movlw	15
  4742  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0F16  00D4               	movwf	??_PIR_Initialization
  4745  0F17  0854               	movf	??_PIR_Initialization,w
  4746  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  4747  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  4748  0F1A  00CC               	movwf	(__PIR^(0+128)+44)
  4749                           
  4750                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4751  0F1B  3005               	movlw	5
  4752  0F1C  00C7               	movwf	(__PIR^(0+128)+39)
  4753  0F1D  3000               	movlw	0
  4754  0F1E  00C8               	movwf	(__PIR^(0+128)+40)
  4755  0F1F  0008               	return
  4756  0F20                     __end_of_PIR_Initialization:	
  4757                           
  4758                           	psect	text21
  4759  0F9D                     __ptext21:	
  4760 ;; *************** function _Mcu_Initialization *****************
  4761 ;; Defined at:
  4762 ;;		line 30 in file "../src/MCU_B1.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4776 ;;      Params:         0       0       0       0
  4777 ;;      Locals:         0       0       0       0
  4778 ;;      Temps:          0       0       0       0
  4779 ;;      Totals:         0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    4
  4783 ;; This function calls:
  4784 ;;		_ADC_Set
  4785 ;;		_Fosc_Set
  4786 ;;		_IO_Set
  4787 ;;		_TMR1_Set
  4788 ;;		_UART_Set
  4789 ;;		_WDT_Set
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _Mcu_Initialization
  4797  0F9D                     _Mcu_Initialization:	
  4798                           
  4799                           ;MCU_B1.c: 32: Fosc_Set();
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4803  0F9D  158A  26BE  158A   	fcall	_Fosc_Set
  4804                           
  4805                           ;MCU_B1.c: 34: IO_Set();
  4806  0FA0  158A  27EB  158A   	fcall	_IO_Set
  4807                           
  4808                           ;MCU_B1.c: 36: ;;
  4809                           ;MCU_B1.c: 38: TMR1_Set();
  4810  0FA3  158A  272E  158A   	fcall	_TMR1_Set
  4811                           
  4812                           ;MCU_B1.c: 40: ADC_Set();
  4813  0FA6  158A  26DB  158A   	fcall	_ADC_Set
  4814                           
  4815                           ;MCU_B1.c: 42: ;;
  4816                           ;MCU_B1.c: 44: ;;
  4817                           ;MCU_B1.c: 46: ;;
  4818                           ;MCU_B1.c: 48: ;;
  4819                           ;MCU_B1.c: 50: UART_Set();
  4820  0FA9  118A  27DB  158A   	fcall	_UART_Set
  4821                           
  4822                           ;MCU_B1.c: 52: WDT_Set();
  4823  0FAC  158A  273C         	fcall	_WDT_Set
  4824  0FAE  0008               	return
  4825  0FAF                     __end_of_Mcu_Initialization:	
  4826                           
  4827                           	psect	text22
  4828  0F3C                     __ptext22:	
  4829 ;; *************** function _WDT_Set *****************
  4830 ;; Defined at:
  4831 ;;		line 1046 in file "../src/MCU_B1.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;		None               void
  4838 ;; Registers used:
  4839 ;;		wreg
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4845 ;;      Params:         0       0       0       0
  4846 ;;      Locals:         0       0       0       0
  4847 ;;      Temps:          0       1       0       0
  4848 ;;      Totals:         0       1       0       0
  4849 ;;Total ram usage:        1 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    3
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_Mcu_Initialization
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           
  4860                           ;psect for function _WDT_Set
  4861  0F3C                     _WDT_Set:	
  4862                           
  4863                           ;MCU_B1.c: 1048: PSA = 1;
  4864                           
  4865                           ;incstack = 0
  4866                           ; Regs used in _WDT_Set: [wreg]
  4867  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  4868  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  4869  0F3E  1581               	bsf	1,3	;volatile
  4870                           
  4871                           ;MCU_B1.c: 1049: PS0 = 1;
  4872  0F3F  1401               	bsf	1,0	;volatile
  4873                           
  4874                           ;MCU_B1.c: 1050: PS1 = 1;
  4875  0F40  1481               	bsf	1,1	;volatile
  4876                           
  4877                           ;MCU_B1.c: 1051: PS2 = 1;
  4878  0F41  1501               	bsf	1,2	;volatile
  4879                           
  4880                           ;MCU_B1.c: 1055: WDT.Enable = 1;
  4881  0F42  1477               	bsf	_WDT,0
  4882                           
  4883                           ;MCU_B1.c: 1056: WDT.Timer = 10;
  4884  0F43  300A               	movlw	10
  4885  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4886  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4887  0F46  00D4               	movwf	??_WDT_Set
  4888  0F47  0854               	movf	??_WDT_Set,w
  4889  0F48  00F8               	movwf	_WDT+1
  4890  0F49  0008               	return
  4891  0F4A                     __end_of_WDT_Set:	
  4892                           
  4893                           	psect	text23
  4894  07DB                     __ptext23:	
  4895 ;; *************** function _UART_Set *****************
  4896 ;; Defined at:
  4897 ;;		line 719 in file "../src/MCU_B1.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4911 ;;      Params:         0       0       0       0
  4912 ;;      Locals:         0       0       0       0
  4913 ;;      Temps:          0       0       0       0
  4914 ;;      Totals:         0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    3
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_Mcu_Initialization
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           
  4926                           ;psect for function _UART_Set
  4927  07DB                     _UART_Set:	
  4928                           
  4929                           ;MCU_B1.c: 721: TRISC7 = 1;
  4930                           
  4931                           ;incstack = 0
  4932                           ; Regs used in _UART_Set: [wreg]
  4933  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  4934  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  4935  07DD  1787               	bsf	7,7	;volatile
  4936                           
  4937                           ;MCU_B1.c: 722: TRISC6 = 1;
  4938  07DE  1707               	bsf	7,6	;volatile
  4939                           
  4940                           ;MCU_B1.c: 723: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  4941  07DF  3033               	movlw	51
  4942  07E0  0099               	movwf	25	;volatile
  4943                           
  4944                           ;MCU_B1.c: 728: RCSTA = (0 | 0x90);
  4945  07E1  3090               	movlw	144
  4946  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4947  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4948  07E4  0098               	movwf	24	;volatile
  4949                           
  4950                           ;MCU_B1.c: 729: TXSTA = (0x4 | 0 | 0x20);
  4951  07E5  3024               	movlw	36
  4952  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  4953  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  4954  07E8  0098               	movwf	24	;volatile
  4955                           
  4956                           ;MCU_B1.c: 730: TX9 = 0;
  4957  07E9  1318               	bcf	24,6	;volatile
  4958                           
  4959                           ;MCU_B1.c: 731: RX9 = 0;
  4960  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4961  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4962  07EC  1318               	bcf	24,6	;volatile
  4963                           
  4964                           ;MCU_B1.c: 732: TXIE = 0;
  4965  07ED  1683               	bsf	3,5	;RP0=1, select bank1
  4966  07EE  1303               	bcf	3,6	;RP1=0, select bank1
  4967  07EF  120C               	bcf	12,4	;volatile
  4968                           
  4969                           ;MCU_B1.c: 733: RCIE = 1;
  4970  07F0  168C               	bsf	12,5	;volatile
  4971                           
  4972                           ;MCU_B1.c: 734: PEIE = 1;
  4973  07F1  170B               	bsf	11,6	;volatile
  4974                           
  4975                           ;MCU_B1.c: 735: GIE = 1;
  4976  07F2  178B               	bsf	11,7	;volatile
  4977  07F3  0008               	return
  4978  07F4                     __end_of_UART_Set:	
  4979                           
  4980                           	psect	text24
  4981  0F2E                     __ptext24:	
  4982 ;; *************** function _TMR1_Set *****************
  4983 ;; Defined at:
  4984 ;;		line 199 in file "../src/MCU_B1.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;		None               void
  4991 ;; Registers used:
  4992 ;;		wreg
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4998 ;;      Params:         0       0       0       0
  4999 ;;      Locals:         0       0       0       0
  5000 ;;      Temps:          0       0       0       0
  5001 ;;      Totals:         0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    3
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_Mcu_Initialization
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           
  5013                           ;psect for function _TMR1_Set
  5014  0F2E                     _TMR1_Set:	
  5015                           
  5016                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5017                           
  5018                           ;incstack = 0
  5019                           ; Regs used in _TMR1_Set: [wreg]
  5020  0F2E  3041               	movlw	65
  5021  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0F31  0090               	movwf	16	;volatile
  5024                           
  5025                           ;MCU_B1.c: 201: TMR1H = (int)((65536-1480)/256);
  5026  0F32  30FA               	movlw	250
  5027  0F33  008F               	movwf	15	;volatile
  5028                           
  5029                           ;MCU_B1.c: 202: TMR1L = (int)((65536-1480)%256);
  5030  0F34  3038               	movlw	56
  5031  0F35  008E               	movwf	14	;volatile
  5032                           
  5033                           ;MCU_B1.c: 203: TMR1IE = 1;
  5034  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  5035  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  5036  0F38  140C               	bsf	12,0	;volatile
  5037                           
  5038                           ;MCU_B1.c: 204: PEIE = 1;
  5039  0F39  170B               	bsf	11,6	;volatile
  5040                           
  5041                           ;MCU_B1.c: 205: GIE = 1;
  5042  0F3A  178B               	bsf	11,7	;volatile
  5043  0F3B  0008               	return
  5044  0F3C                     __end_of_TMR1_Set:	
  5045                           
  5046                           	psect	text25
  5047  0FEB                     __ptext25:	
  5048 ;; *************** function _IO_Set *****************
  5049 ;; Defined at:
  5050 ;;		line 60 in file "../src/MCU_B1.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;		None               void
  5057 ;; Registers used:
  5058 ;;		wreg, status,2
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5064 ;;      Params:         0       0       0       0
  5065 ;;      Locals:         0       0       0       0
  5066 ;;      Temps:          0       0       0       0
  5067 ;;      Totals:         0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    3
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_Mcu_Initialization
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _IO_Set
  5080  0FEB                     _IO_Set:	
  5081                           
  5082                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5083                           
  5084                           ;incstack = 0
  5085                           ; Regs used in _IO_Set: [wreg+status,2]
  5086  0FEB  302F               	movlw	47
  5087  0FEC  1683               	bsf	3,5	;RP0=1, select bank1
  5088  0FED  1303               	bcf	3,6	;RP1=0, select bank1
  5089  0FEE  0085               	movwf	5	;volatile
  5090                           
  5091                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5092  0FEF  3001               	movlw	1
  5093  0FF0  0086               	movwf	6	;volatile
  5094                           
  5095                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5096  0FF1  0187               	clrf	7	;volatile
  5097                           
  5098                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5099  0FF2  3007               	movlw	7
  5100  0FF3  1683               	bsf	3,5	;RP0=1, select bank3
  5101  0FF4  1703               	bsf	3,6	;RP1=1, select bank3
  5102  0FF5  0085               	movwf	5	;volatile
  5103                           
  5104                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5105  0FF6  3001               	movlw	1
  5106  0FF7  0086               	movwf	6	;volatile
  5107                           
  5108                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5109  0FF8  30AF               	movlw	175
  5110  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0FFB  0085               	movwf	5	;volatile
  5113                           
  5114                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5115  0FFC  3001               	movlw	1
  5116  0FFD  0086               	movwf	6	;volatile
  5117                           
  5118                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5119  0FFE  0187               	clrf	7	;volatile
  5120  0FFF  0008               	return
  5121  1000                     __end_of_IO_Set:	
  5122                           
  5123                           	psect	text26
  5124  0EBE                     __ptext26:	
  5125 ;; *************** function _Fosc_Set *****************
  5126 ;; Defined at:
  5127 ;;		line 56 in file "../src/MCU_B1.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5141 ;;      Params:         0       0       0       0
  5142 ;;      Locals:         0       0       0       0
  5143 ;;      Temps:          0       0       0       0
  5144 ;;      Totals:         0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    3
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_Mcu_Initialization
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _Fosc_Set
  5157  0EBE                     _Fosc_Set:	
  5158                           
  5159                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in _Fosc_Set: [wreg]
  5163  0EBE  303C               	movlw	60
  5164  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  5165  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  5166  0EC1  0090               	movwf	16	;volatile
  5167  0EC2  0008               	return
  5168  0EC3                     __end_of_Fosc_Set:	
  5169                           
  5170                           	psect	text27
  5171  0EDB                     __ptext27:	
  5172 ;; *************** function _ADC_Set *****************
  5173 ;; Defined at:
  5174 ;;		line 420 in file "../src/MCU_B1.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5188 ;;      Params:         0       0       0       0
  5189 ;;      Locals:         0       0       0       0
  5190 ;;      Temps:          0       0       0       0
  5191 ;;      Totals:         0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    3
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_Mcu_Initialization
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           
  5203                           ;psect for function _ADC_Set
  5204  0EDB                     _ADC_Set:	
  5205                           
  5206                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _ADC_Set: [wreg]
  5210  0EDB  3073               	movlw	115
  5211  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  5212  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  5213  0EDE  009F               	movwf	31	;volatile
  5214                           
  5215                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5216  0EDF  30C1               	movlw	193
  5217  0EE0  009D               	movwf	29	;volatile
  5218  0EE1  0008               	return
  5219  0EE2                     __end_of_ADC_Set:	
  5220                           
  5221                           	psect	text28
  5222  0EFC                     __ptext28:	
  5223 ;; *************** function _Lights_Main *****************
  5224 ;; Defined at:
  5225 ;;		line 54 in file "../src/TriacRelay_B1.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5239 ;;      Params:         0       0       0       0
  5240 ;;      Locals:         0       0       0       0
  5241 ;;      Temps:          0       0       0       0
  5242 ;;      Totals:         0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    7
  5246 ;; This function calls:
  5247 ;;		_Lights_Close
  5248 ;;		_Lights_Control
  5249 ;;		_setLights_Main
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _Lights_Main
  5257  0EFC                     _Lights_Main:	
  5258                           
  5259                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5263  0EFC  3001               	movlw	1
  5264  0EFD  118A  272A  158A   	fcall	_setLights_Main
  5265                           
  5266                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  5267  0F00  3001               	movlw	1
  5268  0F01  118A  24EE  158A   	fcall	_Lights_Control
  5269                           
  5270                           ;TriacRelay_B1.c: 81: Lights_Close();
  5271  0F04  158A  27D6         	fcall	_Lights_Close
  5272  0F06  0008               	return
  5273  0F07                     __end_of_Lights_Main:	
  5274                           
  5275                           	psect	text29
  5276  072A                     __ptext29:	
  5277 ;; *************** function _setLights_Main *****************
  5278 ;; Defined at:
  5279 ;;		line 93 in file "../src/TriacRelay_B1.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  lights          1    wreg     unsigned char 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  lights          1    6[BANK0 ] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;		None               void
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5293 ;;      Params:         0       0       0       0
  5294 ;;      Locals:         0       1       0       0
  5295 ;;      Temps:          0       0       0       0
  5296 ;;      Totals:         0       1       0       0
  5297 ;;Total ram usage:        1 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    6
  5300 ;; This function calls:
  5301 ;;		_LightsPointSelect
  5302 ;;		_setLights
  5303 ;; This function is called by:
  5304 ;;		_Lights_Main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function _setLights_Main
  5310  072A                     _setLights_Main:	
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5314                           ;setLights_Main@lights stored from wreg
  5315  072A  1283               	bcf	3,5	;RP0=0, select bank0
  5316  072B  1303               	bcf	3,6	;RP1=0, select bank0
  5317  072C  00DA               	movwf	setLights_Main@lights
  5318                           
  5319                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  5320  072D  085A               	movf	setLights_Main@lights,w
  5321  072E  158A  2707  118A   	fcall	_LightsPointSelect
  5322                           
  5323                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  5324  0731  1283               	bcf	3,5	;RP0=0, select bank0
  5325  0732  1303               	bcf	3,6	;RP1=0, select bank0
  5326  0733  0833               	movf	_Lights,w
  5327  0734  0084               	movwf	4
  5328  0735  1383               	bcf	3,7	;select IRP bank0
  5329  0736  1880               	btfsc	0,1
  5330  0737  0008               	return
  5331                           
  5332                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  5333  0738  0833               	movf	_Lights,w
  5334  0739  0084               	movwf	4
  5335  073A  1D80               	btfss	0,3
  5336  073B  0008               	return
  5337                           
  5338                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  5339  073C  1934               	btfsc	_LightsControl,2
  5340  073D  0008               	return
  5341                           
  5342                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  5343  073E  0833               	movf	_Lights,w
  5344  073F  0084               	movwf	4
  5345  0740  1180               	bcf	0,3
  5346                           
  5347                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  5348  0741  0833               	movf	_Lights,w
  5349  0742  0084               	movwf	4
  5350  0743  1E00               	btfss	0,4
  5351  0744  2F4B               	goto	l3698
  5352                           
  5353                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  5354  0745  01D7               	clrf	setLights@status
  5355  0746  0AD7               	incf	setLights@status,f
  5356  0747  085A               	movf	setLights_Main@lights,w
  5357  0748  118A  2547         	fcall	_setLights
  5358                           
  5359                           ;TriacRelay_B1.c: 102: } else {
  5360  074A  0008               	return
  5361  074B                     l3698:	
  5362                           
  5363                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  5364  074B  1283               	bcf	3,5	;RP0=0, select bank0
  5365  074C  1303               	bcf	3,6	;RP1=0, select bank0
  5366  074D  01D7               	clrf	setLights@status
  5367  074E  085A               	movf	setLights_Main@lights,w
  5368  074F  118A  2547         	fcall	_setLights
  5369  0751  0008               	return
  5370  0752                     __end_of_setLights_Main:	
  5371                           
  5372                           	psect	text30
  5373  0547                     __ptext30:	
  5374 ;; *************** function _setLights *****************
  5375 ;; Defined at:
  5376 ;;		line 111 in file "../src/TriacRelay_B1.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  lights          1    wreg     unsigned char 
  5379 ;;  status          1    3[BANK0 ] unsigned char 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  lights          1    5[BANK0 ] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;		None               void
  5384 ;; Registers used:
  5385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5391 ;;      Params:         0       1       0       0
  5392 ;;      Locals:         0       1       0       0
  5393 ;;      Temps:          0       1       0       0
  5394 ;;      Totals:         0       3       0       0
  5395 ;;Total ram usage:        3 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    5
  5398 ;; This function calls:
  5399 ;;		_LightsPointSelect
  5400 ;;		_setLights_Line
  5401 ;; This function is called by:
  5402 ;;		_setLights_Main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _setLights
  5408  0547                     _setLights:	
  5409                           
  5410                           ;incstack = 0
  5411                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5412                           ;setLights@lights stored from wreg
  5413  0547  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0548  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0549  00D9               	movwf	setLights@lights
  5416                           
  5417                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  5418  054A  0859               	movf	setLights@lights,w
  5419  054B  158A  2707  118A   	fcall	_LightsPointSelect
  5420                           
  5421                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  5422  054E  1283               	bcf	3,5	;RP0=0, select bank0
  5423  054F  1303               	bcf	3,6	;RP1=0, select bank0
  5424  0550  0833               	movf	_Lights,w
  5425  0551  0084               	movwf	4
  5426  0552  1383               	bcf	3,7	;select IRP bank0
  5427  0553  1480               	bsf	0,1
  5428                           
  5429                           ;TriacRelay_B1.c: 121: if (status == 1) {
  5430  0554  0857               	movf	setLights@status,w
  5431  0555  3A01               	xorlw	1
  5432  0556  1D03               	skipz
  5433  0557  2D75               	goto	l3508
  5434                           
  5435                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  5436  0558  0833               	movf	_Lights,w
  5437  0559  0084               	movwf	4
  5438  055A  1900               	btfsc	0,2
  5439  055B  2D90               	goto	l3512
  5440                           
  5441                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  5442  055C  0833               	movf	_Lights,w
  5443  055D  0084               	movwf	4
  5444  055E  1500               	bsf	0,2
  5445                           
  5446                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  5447  055F  0A33               	incf	_Lights,w
  5448  0560  0084               	movwf	4
  5449  0561  1480               	bsf	0,1
  5450                           
  5451                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  5452  0562  300A               	movlw	10
  5453  0563  00D8               	movwf	??_setLights
  5454  0564  0833               	movf	_Lights,w
  5455  0565  3E06               	addlw	6
  5456  0566  0084               	movwf	4
  5457  0567  0858               	movf	??_setLights,w
  5458  0568  0080               	movwf	0
  5459                           
  5460                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  5461  0569  300D               	movlw	13
  5462  056A  00D8               	movwf	??_setLights
  5463  056B  0833               	movf	_Lights,w
  5464  056C  3E04               	addlw	4
  5465  056D  0084               	movwf	4
  5466  056E  0858               	movf	??_setLights,w
  5467  056F  0080               	movwf	0
  5468                           
  5469                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  5470  0570  0859               	movf	setLights@lights,w
  5471  0571  158A  2720  118A   	fcall	_setLights_Line
  5472                           
  5473                           ;TriacRelay_B1.c: 128: }
  5474                           ;TriacRelay_B1.c: 129: } else {
  5475  0574  2D90               	goto	l3512
  5476  0575                     l3508:	
  5477                           
  5478                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  5479  0575  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0576  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0577  0833               	movf	_Lights,w
  5482  0578  0084               	movwf	4
  5483  0579  1383               	bcf	3,7	;select IRP bank0
  5484  057A  1D00               	btfss	0,2
  5485  057B  2D90               	goto	l3512
  5486                           
  5487                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  5488  057C  0833               	movf	_Lights,w
  5489  057D  0084               	movwf	4
  5490  057E  1100               	bcf	0,2
  5491                           
  5492                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  5493  057F  0A33               	incf	_Lights,w
  5494  0580  0084               	movwf	4
  5495  0581  1080               	bcf	0,1
  5496                           
  5497                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  5498  0582  3004               	movlw	4
  5499  0583  00D8               	movwf	??_setLights
  5500  0584  0833               	movf	_Lights,w
  5501  0585  3E06               	addlw	6
  5502  0586  0084               	movwf	4
  5503  0587  0858               	movf	??_setLights,w
  5504  0588  0080               	movwf	0
  5505                           
  5506                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  5507  0589  3007               	movlw	7
  5508  058A  00D8               	movwf	??_setLights
  5509  058B  0833               	movf	_Lights,w
  5510  058C  3E04               	addlw	4
  5511  058D  0084               	movwf	4
  5512  058E  0858               	movf	??_setLights,w
  5513  058F  0080               	movwf	0
  5514  0590                     l3512:	
  5515                           
  5516                           ;TriacRelay_B1.c: 135: }
  5517                           ;TriacRelay_B1.c: 136: }
  5518                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  5519  0590  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0591  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0592  0859               	movf	setLights@lights,w
  5522  0593  3A01               	xorlw	1
  5523  0594  1D03               	skipz
  5524  0595  0008               	return
  5525                           
  5526                           ;TriacRelay_B1.c: 139: RB2 = 1;
  5527  0596  1506               	bsf	6,2	;volatile
  5528  0597  0008               	return
  5529  0598                     __end_of_setLights:	
  5530                           
  5531                           	psect	text31
  5532  0F20                     __ptext31:	
  5533 ;; *************** function _setLights_Line *****************
  5534 ;; Defined at:
  5535 ;;		line 221 in file "../src/TriacRelay_B1.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  lights          1    wreg     unsigned char 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  lights          1    2[BANK0 ] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5549 ;;      Params:         0       0       0       0
  5550 ;;      Locals:         0       1       0       0
  5551 ;;      Temps:          0       0       0       0
  5552 ;;      Totals:         0       1       0       0
  5553 ;;Total ram usage:        1 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    4
  5556 ;; This function calls:
  5557 ;;		_LightsPointSelect
  5558 ;; This function is called by:
  5559 ;;		_setLights
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           
  5564                           ;psect for function _setLights_Line
  5565  0F20                     _setLights_Line:	
  5566                           
  5567                           ;incstack = 0
  5568                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5569                           ;setLights_Line@lights stored from wreg
  5570  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0F22  00D6               	movwf	setLights_Line@lights
  5573                           
  5574                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  5575  0F23  1042               	bcf	_Lights1+1,0
  5576                           
  5577                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  5578  0F24  0856               	movf	setLights_Line@lights,w
  5579  0F25  158A  2707         	fcall	_LightsPointSelect
  5580                           
  5581                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  5582  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0F29  0A33               	incf	_Lights,w
  5585  0F2A  0084               	movwf	4
  5586  0F2B  1383               	bcf	3,7	;select IRP bank0
  5587  0F2C  1400               	bsf	0,0
  5588  0F2D  0008               	return
  5589  0F2E                     __end_of_setLights_Line:	
  5590                           
  5591                           	psect	text32
  5592  04EE                     __ptext32:	
  5593 ;; *************** function _Lights_Control *****************
  5594 ;; Defined at:
  5595 ;;		line 155 in file "../src/TriacRelay_B1.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  lights          1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  lights          1    4[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5609 ;;      Params:         0       0       0       0
  5610 ;;      Locals:         0       1       0       0
  5611 ;;      Temps:          0       2       0       0
  5612 ;;      Totals:         0       3       0       0
  5613 ;;Total ram usage:        3 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		_LightsPointSelect
  5618 ;; This function is called by:
  5619 ;;		_Lights_Main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _Lights_Control
  5625  04EE                     _Lights_Control:	
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5629                           ;Lights_Control@lights stored from wreg
  5630  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  5631  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  5632  04F0  00D8               	movwf	Lights_Control@lights
  5633                           
  5634                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  5635  04F1  0858               	movf	Lights_Control@lights,w
  5636  04F2  158A  2707  118A   	fcall	_LightsPointSelect
  5637                           
  5638                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  5639  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  5640  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  5641  04F7  0833               	movf	_Lights,w
  5642  04F8  0084               	movwf	4
  5643  04F9  1383               	bcf	3,7	;select IRP bank0
  5644  04FA  1C80               	btfss	0,1
  5645  04FB  0008               	return
  5646                           
  5647                           ;TriacRelay_B1.c: 158: Lights->Time++;
  5648  04FC  3001               	movlw	1
  5649  04FD  00D6               	movwf	??_Lights_Control
  5650  04FE  0833               	movf	_Lights,w
  5651  04FF  3E02               	addlw	2
  5652  0500  0084               	movwf	4
  5653  0501  0856               	movf	??_Lights_Control,w
  5654  0502  0780               	addwf	0,f
  5655                           
  5656                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5657  0503  0833               	movf	_Lights,w
  5658  0504  3E06               	addlw	6
  5659  0505  0084               	movwf	4
  5660  0506  0800               	movf	0,w
  5661  0507  00D6               	movwf	??_Lights_Control
  5662  0508  0833               	movf	_Lights,w
  5663  0509  3E02               	addlw	2
  5664  050A  0084               	movwf	4
  5665  050B  0800               	movf	0,w
  5666  050C  00D7               	movwf	??_Lights_Control+1
  5667  050D  0856               	movf	??_Lights_Control,w
  5668  050E  0257               	subwf	??_Lights_Control+1,w
  5669  050F  1C03               	skipc
  5670  0510  2D28               	goto	l2814
  5671  0511  0833               	movf	_Lights,w
  5672  0512  0084               	movwf	4
  5673  0513  1B80               	btfsc	0,7
  5674  0514  2D28               	goto	l2814
  5675                           
  5676                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  5677  0515  0833               	movf	_Lights,w
  5678  0516  0084               	movwf	4
  5679  0517  1780               	bsf	0,7
  5680                           
  5681                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  5682  0518  0858               	movf	Lights_Control@lights,w
  5683  0519  3A01               	xorlw	1
  5684  051A  1D03               	skipz
  5685  051B  0008               	return
  5686                           
  5687                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  5688  051C  0833               	movf	_Lights,w
  5689  051D  0084               	movwf	4
  5690  051E  1D00               	btfss	0,2
  5691  051F  2D24               	goto	u2240
  5692  0520  1283               	bcf	3,5	;RP0=0, select bank0
  5693  0521  1303               	bcf	3,6	;RP1=0, select bank0
  5694  0522  1605               	bsf	5,4	;volatile
  5695  0523  0008               	return
  5696  0524                     u2240:	
  5697  0524  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0525  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0526  1205               	bcf	5,4	;volatile
  5700                           
  5701                           ;TriacRelay_B1.c: 164: }
  5702                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  5703  0527  0008               	return
  5704  0528                     l2814:	
  5705  0528  0833               	movf	_Lights,w
  5706  0529  3E04               	addlw	4
  5707  052A  0084               	movwf	4
  5708  052B  1383               	bcf	3,7	;select IRP bank0
  5709  052C  0800               	movf	0,w
  5710  052D  00D6               	movwf	??_Lights_Control
  5711  052E  0833               	movf	_Lights,w
  5712  052F  3E02               	addlw	2
  5713  0530  0084               	movwf	4
  5714  0531  0800               	movf	0,w
  5715  0532  00D7               	movwf	??_Lights_Control+1
  5716  0533  0856               	movf	??_Lights_Control,w
  5717  0534  0257               	subwf	??_Lights_Control+1,w
  5718  0535  1C03               	skipc
  5719  0536  0008               	return
  5720                           
  5721                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  5722  0537  0833               	movf	_Lights,w
  5723  0538  3E02               	addlw	2
  5724  0539  0084               	movwf	4
  5725  053A  0180               	clrf	0
  5726                           
  5727                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  5728  053B  0833               	movf	_Lights,w
  5729  053C  0084               	movwf	4
  5730  053D  1080               	bcf	0,1
  5731                           
  5732                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  5733  053E  0833               	movf	_Lights,w
  5734  053F  0084               	movwf	4
  5735  0540  1380               	bcf	0,7
  5736                           
  5737                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  5738  0541  0858               	movf	Lights_Control@lights,w
  5739  0542  3A01               	xorlw	1
  5740  0543  1D03               	skipz
  5741  0544  0008               	return
  5742                           
  5743                           ;TriacRelay_B1.c: 188: RB2 = 0;
  5744  0545  1106               	bcf	6,2	;volatile
  5745  0546  0008               	return
  5746  0547                     __end_of_Lights_Control:	
  5747                           
  5748                           	psect	text33
  5749  0FD6                     __ptext33:	
  5750 ;; *************** function _Lights_Close *****************
  5751 ;; Defined at:
  5752 ;;		line 85 in file "../src/TriacRelay_B1.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5766 ;;      Params:         0       0       0       0
  5767 ;;      Locals:         0       0       0       0
  5768 ;;      Temps:          0       1       0       0
  5769 ;;      Totals:         0       1       0       0
  5770 ;;Total ram usage:        1 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    6
  5773 ;; This function calls:
  5774 ;;		_getMain_LightsStatus
  5775 ;; This function is called by:
  5776 ;;		_Lights_Main
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function _Lights_Close
  5782  0FD6                     _Lights_Close:	
  5783                           
  5784                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5788  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  5789  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  5790  0FD8  1C34               	btfss	_LightsControl,0
  5791  0FD9  0008               	return
  5792                           
  5793                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  5794  0FDA  1034               	bcf	_LightsControl,0
  5795                           
  5796                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  5797  0FDB  118A  26CF         	fcall	_getMain_LightsStatus
  5798  0FDD  3800               	iorlw	0
  5799  0FDE  3000               	movlw	0
  5800  0FDF  1D03               	skipz
  5801  0FE0  3001               	movlw	1
  5802  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5803  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5804  0FE3  00DD               	movwf	??_Lights_Close
  5805  0FE4  0DDD               	rlf	??_Lights_Close,f
  5806  0FE5  0834               	movf	_LightsControl,w
  5807  0FE6  065D               	xorwf	??_Lights_Close,w
  5808  0FE7  39FD               	andlw	-3
  5809  0FE8  065D               	xorwf	??_Lights_Close,w
  5810  0FE9  00B4               	movwf	_LightsControl
  5811  0FEA  0008               	return
  5812  0FEB                     __end_of_Lights_Close:	
  5813                           
  5814                           	psect	text34
  5815  06CF                     __ptext34:	
  5816 ;; *************** function _getMain_LightsStatus *****************
  5817 ;; Defined at:
  5818 ;;		line 373 in file "../src/Main_B1.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  i               2    6[BANK0 ] int 
  5823 ;;  status          1    8[BANK0 ] unsigned char 
  5824 ;;  count           1    5[BANK0 ] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      unsigned char 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5834 ;;      Params:         0       0       0       0
  5835 ;;      Locals:         0       4       0       0
  5836 ;;      Temps:          0       1       0       0
  5837 ;;      Totals:         0       5       0       0
  5838 ;;Total ram usage:        5 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    5
  5841 ;; This function calls:
  5842 ;;		_getLights_Status
  5843 ;; This function is called by:
  5844 ;;		_Lights_Close
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           
  5849                           ;psect for function _getMain_LightsStatus
  5850  06CF                     _getMain_LightsStatus:	
  5851                           
  5852                           ;Main_B1.c: 374: char status = 0, count = 0;
  5853                           
  5854                           ;incstack = 0
  5855                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5856  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5857  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5858  06D1  01DC               	clrf	getMain_LightsStatus@status
  5859  06D2  01D9               	clrf	getMain_LightsStatus@count
  5860                           
  5861                           ;Main_B1.c: 377: count = 1;
  5862  06D3  01D9               	clrf	getMain_LightsStatus@count
  5863  06D4  0AD9               	incf	getMain_LightsStatus@count,f
  5864                           
  5865                           ;Main_B1.c: 386: for (int i = 0; i < count; i++) {
  5866  06D5  01DA               	clrf	getMain_LightsStatus@i
  5867  06D6  01DB               	clrf	getMain_LightsStatus@i+1
  5868  06D7                     l3490:	
  5869  06D7  085B               	movf	getMain_LightsStatus@i+1,w
  5870  06D8  3A80               	xorlw	128
  5871  06D9  00D8               	movwf	??_getMain_LightsStatus
  5872  06DA  3080               	movlw	128
  5873  06DB  0258               	subwf	??_getMain_LightsStatus,w
  5874  06DC  1D03               	skipz
  5875  06DD  2EE0               	goto	u3465
  5876  06DE  0859               	movf	getMain_LightsStatus@count,w
  5877  06DF  025A               	subwf	getMain_LightsStatus@i,w
  5878  06E0                     u3465:	
  5879  06E0  1803               	btfsc	3,0
  5880  06E1  2EFC               	goto	l3492
  5881                           
  5882                           ;Main_B1.c: 387: if (status == 0) {
  5883  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5884  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  5885  06E4  08DC               	movf	getMain_LightsStatus@status,f
  5886  06E5  1D03               	skipz
  5887  06E6  2EF5               	goto	l3488
  5888                           
  5889                           ;Main_B1.c: 389: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  5890  06E7  085A               	movf	getMain_LightsStatus@i,w
  5891  06E8  3E01               	addlw	1
  5892  06E9  158A  2758  118A   	fcall	_getLights_Status
  5893  06EC  3A01               	xorlw	1
  5894  06ED  3000               	movlw	0
  5895  06EE  1903               	skipnz
  5896  06EF  3001               	movlw	1
  5897  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  5898  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  5899  06F2  00D8               	movwf	??_getMain_LightsStatus
  5900  06F3  0858               	movf	??_getMain_LightsStatus,w
  5901  06F4  00DC               	movwf	getMain_LightsStatus@status
  5902  06F5                     l3488:	
  5903  06F5  3001               	movlw	1
  5904  06F6  07DA               	addwf	getMain_LightsStatus@i,f
  5905  06F7  1803               	skipnc
  5906  06F8  0ADB               	incf	getMain_LightsStatus@i+1,f
  5907  06F9  3000               	movlw	0
  5908  06FA  07DB               	addwf	getMain_LightsStatus@i+1,f
  5909  06FB  2ED7               	goto	l3490
  5910  06FC                     l3492:	
  5911                           
  5912                           ;Main_B1.c: 394: }
  5913                           ;Main_B1.c: 395: }
  5914                           ;Main_B1.c: 396: return status;
  5915  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  5916  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  5917  06FE  085C               	movf	getMain_LightsStatus@status,w
  5918  06FF  0008               	return
  5919  0700                     __end_of_getMain_LightsStatus:	
  5920                           
  5921                           	psect	text35
  5922  0EB6                     __ptext35:	
  5923 ;; *************** function _Lights_Initialization *****************
  5924 ;; Defined at:
  5925 ;;		line 34 in file "../src/TriacRelay_B1.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;		None               void
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, pclath, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5939 ;;      Params:         0       0       0       0
  5940 ;;      Locals:         0       0       0       0
  5941 ;;      Temps:          0       0       0       0
  5942 ;;      Totals:         0       0       0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    5
  5946 ;; This function calls:
  5947 ;;		_setLights_Initialization
  5948 ;; This function is called by:
  5949 ;;		_main
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           
  5954                           ;psect for function _Lights_Initialization
  5955  0EB6                     _Lights_Initialization:	
  5956                           
  5957                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  5958                           
  5959                           ;incstack = 0
  5960                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5961  0EB6  3001               	movlw	1
  5962  0EB7  158A  26D4         	fcall	_setLights_Initialization
  5963  0EB9  0008               	return
  5964  0EBA                     __end_of_Lights_Initialization:	
  5965                           
  5966                           	psect	text36
  5967  0ED4                     __ptext36:	
  5968 ;; *************** function _setLights_Initialization *****************
  5969 ;; Defined at:
  5970 ;;		line 49 in file "../src/TriacRelay_B1.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  lights          1    wreg     unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  lights          1    2[BANK0 ] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5984 ;;      Params:         0       0       0       0
  5985 ;;      Locals:         0       1       0       0
  5986 ;;      Temps:          0       0       0       0
  5987 ;;      Totals:         0       1       0       0
  5988 ;;Total ram usage:        1 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    4
  5991 ;; This function calls:
  5992 ;;		_LightsPointSelect
  5993 ;; This function is called by:
  5994 ;;		_Lights_Initialization
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _setLights_Initialization
  6000  0ED4                     _setLights_Initialization:	
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6004                           ;setLights_Initialization@lights stored from wreg
  6005  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  6006  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  6007  0ED6  00D6               	movwf	setLights_Initialization@lights
  6008                           
  6009                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6010  0ED7  0856               	movf	setLights_Initialization@lights,w
  6011  0ED8  158A  2707         	fcall	_LightsPointSelect
  6012  0EDA  0008               	return
  6013  0EDB                     __end_of_setLights_Initialization:	
  6014                           
  6015                           	psect	text37
  6016  0EAF                     __ptext37:	
  6017 ;; *************** function _LED_Main *****************
  6018 ;; Defined at:
  6019 ;;		line 47 in file "../src/LED_B1.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;		None               void
  6026 ;; Registers used:
  6027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6033 ;;      Params:         0       0       0       0
  6034 ;;      Locals:         0       0       0       0
  6035 ;;      Temps:          0       0       0       0
  6036 ;;      Totals:         0       0       0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    6
  6040 ;; This function calls:
  6041 ;;		_setPIRLED_Main
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _LED_Main
  6049  0EAF                     _LED_Main:	
  6050                           
  6051                           ;LED_B1.c: 50: setPIRLED_Main();
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6055  0EAF  118A  23AF         	fcall	_setPIRLED_Main
  6056  0EB1  0008               	return
  6057  0EB2                     __end_of_LED_Main:	
  6058                           
  6059                           	psect	text38
  6060  03AF                     __ptext38:	
  6061 ;; *************** function _setPIRLED_Main *****************
  6062 ;; Defined at:
  6063 ;;		line 253 in file "../src/LED_B1.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  count           1    5[BANK0 ] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6077 ;;      Params:         0       0       0       0
  6078 ;;      Locals:         0       1       0       0
  6079 ;;      Temps:          0       1       0       0
  6080 ;;      Totals:         0       2       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    5
  6084 ;; This function calls:
  6085 ;;		_setLED
  6086 ;; This function is called by:
  6087 ;;		_LED_Main
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           
  6092                           ;psect for function _setPIRLED_Main
  6093  03AF                     _setPIRLED_Main:	
  6094                           
  6095                           ;LED_B1.c: 254: char count;
  6096                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6100  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  6101  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  6102  03B1  1C2B               	btfss	_PIRLED,0
  6103  03B2  0008               	return
  6104                           
  6105                           ;LED_B1.c: 256: PIRLED.Time++;
  6106  03B3  3001               	movlw	1
  6107  03B4  07AD               	addwf	_PIRLED+2,f
  6108  03B5  1803               	skipnc
  6109  03B6  0AAE               	incf	_PIRLED+3,f
  6110  03B7  3000               	movlw	0
  6111  03B8  07AE               	addwf	_PIRLED+3,f
  6112                           
  6113                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  6114  03B9  3000               	movlw	0
  6115  03BA  022E               	subwf	_PIRLED+3,w
  6116  03BB  3032               	movlw	50
  6117  03BC  1903               	skipnz
  6118  03BD  022D               	subwf	_PIRLED+2,w
  6119  03BE  1C03               	skipc
  6120  03BF  0008               	return
  6121                           
  6122                           ;LED_B1.c: 258: PIRLED.Time = 0;
  6123  03C0  01AD               	clrf	_PIRLED+2
  6124  03C1  01AE               	clrf	_PIRLED+3
  6125                           
  6126                           ;LED_B1.c: 259: setLED(1, 0);
  6127  03C2  01D6               	clrf	setLED@command
  6128  03C3  3001               	movlw	1
  6129  03C4  118A  2420  118A   	fcall	_setLED
  6130                           
  6131                           ;LED_B1.c: 260: setLED(2, 0);
  6132  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  6133  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  6134  03C9  01D6               	clrf	setLED@command
  6135  03CA  3002               	movlw	2
  6136  03CB  118A  2420  118A   	fcall	_setLED
  6137                           
  6138                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  6139  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6140  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6141  03D0  1CAB               	btfss	_PIRLED,1
  6142  03D1  2BD6               	goto	l3558
  6143                           
  6144                           ;LED_B1.c: 262: count = 4;
  6145  03D2  3004               	movlw	4
  6146  03D3  00D8               	movwf	??_setPIRLED_Main
  6147  03D4  0858               	movf	??_setPIRLED_Main,w
  6148  03D5  00D9               	movwf	setPIRLED_Main@count
  6149  03D6                     l3558:	
  6150                           
  6151                           ;LED_B1.c: 263: }
  6152                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  6153  03D6  1D2B               	btfss	_PIRLED,2
  6154  03D7  2BDC               	goto	l3562
  6155                           
  6156                           ;LED_B1.c: 265: count = 6;
  6157  03D8  3006               	movlw	6
  6158  03D9  00D8               	movwf	??_setPIRLED_Main
  6159  03DA  0858               	movf	??_setPIRLED_Main,w
  6160  03DB  00D9               	movwf	setPIRLED_Main@count
  6161  03DC                     l3562:	
  6162                           
  6163                           ;LED_B1.c: 266: }
  6164                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  6165  03DC  1DAB               	btfss	_PIRLED,3
  6166  03DD  2BE2               	goto	l3566
  6167                           
  6168                           ;LED_B1.c: 268: count = 8;
  6169  03DE  3008               	movlw	8
  6170  03DF  00D8               	movwf	??_setPIRLED_Main
  6171  03E0  0858               	movf	??_setPIRLED_Main,w
  6172  03E1  00D9               	movwf	setPIRLED_Main@count
  6173  03E2                     l3566:	
  6174                           
  6175                           ;LED_B1.c: 269: }
  6176                           ;LED_B1.c: 270: PIRLED.Count++;
  6177  03E2  3001               	movlw	1
  6178  03E3  00D8               	movwf	??_setPIRLED_Main
  6179  03E4  0858               	movf	??_setPIRLED_Main,w
  6180  03E5  07AC               	addwf	_PIRLED+1,f
  6181                           
  6182                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  6183  03E6  082C               	movf	_PIRLED+1,w
  6184  03E7  3A01               	xorlw	1
  6185  03E8  1903               	skipnz
  6186  03E9  2BEE               	goto	l3572
  6187  03EA  082C               	movf	_PIRLED+1,w
  6188  03EB  3A02               	xorlw	2
  6189  03EC  1D03               	skipz
  6190  03ED  2C02               	goto	l3576
  6191  03EE                     l3572:	
  6192                           
  6193                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6194  03EE  1003               	clrc
  6195  03EF  1E2B               	btfss	_PIRLED,4
  6196  03F0  1403               	setc
  6197  03F1  1C03               	btfss	3,0
  6198  03F2  2BF7               	goto	u3600
  6199  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  6200  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  6201  03F5  162B               	bsf	_PIRLED,4
  6202  03F6  2BFA               	goto	l3574
  6203  03F7                     u3600:	
  6204  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6205  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6206  03F9  122B               	bcf	_PIRLED,4
  6207  03FA                     l3574:	
  6208                           
  6209                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  6210  03FA  3000               	movlw	0
  6211  03FB  1A2B               	btfsc	_PIRLED,4
  6212  03FC  3001               	movlw	1
  6213  03FD  00D6               	movwf	setLED@command
  6214  03FE  3002               	movlw	2
  6215  03FF  118A  2420         	fcall	_setLED
  6216                           
  6217                           ;LED_B1.c: 274: } else {
  6218  0401  0008               	return
  6219  0402                     l3576:	
  6220                           
  6221                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6222  0402  1003               	clrc
  6223  0403  1283               	bcf	3,5	;RP0=0, select bank0
  6224  0404  1303               	bcf	3,6	;RP1=0, select bank0
  6225  0405  1E2B               	btfss	_PIRLED,4
  6226  0406  1403               	setc
  6227  0407  1C03               	btfss	3,0
  6228  0408  2C0D               	goto	u3620
  6229  0409  1283               	bcf	3,5	;RP0=0, select bank0
  6230  040A  1303               	bcf	3,6	;RP1=0, select bank0
  6231  040B  162B               	bsf	_PIRLED,4
  6232  040C  2C10               	goto	l3578
  6233  040D                     u3620:	
  6234  040D  1283               	bcf	3,5	;RP0=0, select bank0
  6235  040E  1303               	bcf	3,6	;RP1=0, select bank0
  6236  040F  122B               	bcf	_PIRLED,4
  6237  0410                     l3578:	
  6238                           
  6239                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  6240  0410  3000               	movlw	0
  6241  0411  1A2B               	btfsc	_PIRLED,4
  6242  0412  3001               	movlw	1
  6243  0413  00D6               	movwf	setLED@command
  6244  0414  3001               	movlw	1
  6245  0415  118A  2420  118A   	fcall	_setLED
  6246                           
  6247                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  6248  0418  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0419  1303               	bcf	3,6	;RP1=0, select bank0
  6250  041A  082C               	movf	_PIRLED+1,w
  6251  041B  0659               	xorwf	setPIRLED_Main@count,w
  6252  041C  1D03               	skipz
  6253  041D  0008               	return
  6254                           
  6255                           ;LED_B1.c: 278: PIRLED.Count = 0;
  6256  041E  01AC               	clrf	_PIRLED+1
  6257  041F  0008               	return
  6258  0420                     __end_of_setPIRLED_Main:	
  6259                           
  6260                           	psect	text39
  6261  07F4                     __ptext39:	
  6262 ;; *************** function _LED_Initialization *****************
  6263 ;; Defined at:
  6264 ;;		line 31 in file "../src/LED_B1.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;		None               void
  6271 ;; Registers used:
  6272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6278 ;;      Params:         0       0       0       0
  6279 ;;      Locals:         0       0       0       0
  6280 ;;      Temps:          0       0       0       0
  6281 ;;      Totals:         0       0       0       0
  6282 ;;Total ram usage:        0 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    6
  6285 ;; This function calls:
  6286 ;;		_setLED_Initialization
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _LED_Initialization
  6294  07F4                     _LED_Initialization:	
  6295                           
  6296                           ;LED_B1.c: 33: setLED_Initialization(1);
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6300  07F4  3001               	movlw	1
  6301  07F5  158A  278B  118A   	fcall	_setLED_Initialization
  6302                           
  6303                           ;LED_B1.c: 36: setLED_Initialization(2);
  6304  07F8  3002               	movlw	2
  6305  07F9  158A  278B  118A   	fcall	_setLED_Initialization
  6306                           
  6307                           ;LED_B1.c: 42: setLED_Initialization(99);
  6308  07FC  3063               	movlw	99
  6309  07FD  158A  278B         	fcall	_setLED_Initialization
  6310  07FF  0008               	return
  6311  0800                     __end_of_LED_Initialization:	
  6312                           
  6313                           	psect	text40
  6314  0F8B                     __ptext40:	
  6315 ;; *************** function _setLED_Initialization *****************
  6316 ;; Defined at:
  6317 ;;		line 69 in file "../src/LED_B1.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  led             1    wreg     unsigned char 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  led             1    4[BANK0 ] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;		None               void
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6331 ;;      Params:         0       0       0       0
  6332 ;;      Locals:         0       1       0       0
  6333 ;;      Temps:          0       0       0       0
  6334 ;;      Totals:         0       1       0       0
  6335 ;;Total ram usage:        1 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    5
  6338 ;; This function calls:
  6339 ;;		_LedPointSelect
  6340 ;;		_setLED
  6341 ;; This function is called by:
  6342 ;;		_LED_Initialization
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function _setLED_Initialization
  6348  0F8B                     _setLED_Initialization:	
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6352                           ;setLED_Initialization@led stored from wreg
  6353  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  6355  0F8D  00D8               	movwf	setLED_Initialization@led
  6356                           
  6357                           ;LED_B1.c: 70: LedPointSelect(led);
  6358  0F8E  0858               	movf	setLED_Initialization@led,w
  6359  0F8F  118A  276E  158A   	fcall	_LedPointSelect
  6360                           
  6361                           ;LED_B1.c: 71: LED->Enable = 1;
  6362  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  6364  0F94  0832               	movf	_LED,w
  6365  0F95  0084               	movwf	4
  6366  0F96  1383               	bcf	3,7	;select IRP bank0
  6367  0F97  1400               	bsf	0,0
  6368                           
  6369                           ;LED_B1.c: 72: setLED(led, 0);
  6370  0F98  01D6               	clrf	setLED@command
  6371  0F99  0858               	movf	setLED_Initialization@led,w
  6372  0F9A  118A  2420         	fcall	_setLED
  6373  0F9C  0008               	return
  6374  0F9D                     __end_of_setLED_Initialization:	
  6375                           
  6376                           	psect	text41
  6377  0420                     __ptext41:	
  6378 ;; *************** function _setLED *****************
  6379 ;; Defined at:
  6380 ;;		line 76 in file "../src/LED_B1.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  led             1    wreg     unsigned char 
  6383 ;;  command         1    2[BANK0 ] unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  led             1    3[BANK0 ] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;		None               void
  6388 ;; Registers used:
  6389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6395 ;;      Params:         0       1       0       0
  6396 ;;      Locals:         0       1       0       0
  6397 ;;      Temps:          0       0       0       0
  6398 ;;      Totals:         0       2       0       0
  6399 ;;Total ram usage:        2 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    4
  6402 ;; This function calls:
  6403 ;;		_LedPointSelect
  6404 ;; This function is called by:
  6405 ;;		_setLED_Initialization
  6406 ;;		_setPIRLED_Main
  6407 ;;		_setMain_Exception
  6408 ;;		_PIR_Main
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function _setLED
  6414  0420                     _setLED:	
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6418                           ;setLED@led stored from wreg
  6419  0420  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0421  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0422  00D7               	movwf	setLED@led
  6422                           
  6423                           ;LED_B1.c: 77: LedPointSelect(led);
  6424  0423  0857               	movf	setLED@led,w
  6425  0424  118A  276E  118A   	fcall	_LedPointSelect
  6426                           
  6427                           ;LED_B1.c: 78: if (command == 0) {
  6428  0427  1283               	bcf	3,5	;RP0=0, select bank0
  6429  0428  1303               	bcf	3,6	;RP1=0, select bank0
  6430  0429  08D6               	movf	setLED@command,f
  6431  042A  1D03               	skipz
  6432  042B  2C39               	goto	l3390
  6433                           
  6434                           ;LED_B1.c: 80: if (led == 1) {
  6435  042C  0857               	movf	setLED@led,w
  6436  042D  3A01               	xorlw	1
  6437  042E  1D03               	skipz
  6438  042F  2C31               	goto	l3382
  6439                           
  6440                           ;LED_B1.c: 84: RB4 = 1;
  6441  0430  1606               	bsf	6,4	;volatile
  6442  0431                     l3382:	
  6443                           
  6444                           ;LED_B1.c: 86: }
  6445                           ;LED_B1.c: 89: if (led == 2) {
  6446  0431  0857               	movf	setLED@led,w
  6447  0432  3A02               	xorlw	2
  6448  0433  1903               	btfsc	3,2
  6449                           
  6450                           ;LED_B1.c: 93: RB5 = 1;
  6451  0434  1686               	bsf	6,5	;volatile
  6452                           
  6453                           ;LED_B1.c: 95: }
  6454                           ;LED_B1.c: 107: if (led == 99) {
  6455  0435  0857               	movf	setLED@led,w
  6456  0436  3A63               	xorlw	99
  6457  0437  1903               	btfsc	3,2
  6458                           
  6459                           ;LED_B1.c: 111: RB3 = 1;
  6460  0438  1586               	bsf	6,3	;volatile
  6461  0439                     l3390:	
  6462                           
  6463                           ;LED_B1.c: 113: }
  6464                           ;LED_B1.c: 115: }
  6465                           ;LED_B1.c: 116: if (command == 1) {
  6466  0439  0856               	movf	setLED@command,w
  6467  043A  3A01               	xorlw	1
  6468  043B  1D03               	skipz
  6469  043C  2C4A               	goto	l3404
  6470                           
  6471                           ;LED_B1.c: 118: if (led == 1) {
  6472  043D  0857               	movf	setLED@led,w
  6473  043E  3A01               	xorlw	1
  6474  043F  1D03               	skipz
  6475  0440  2C42               	goto	l3396
  6476                           
  6477                           ;LED_B1.c: 122: RB4 = 0;
  6478  0441  1206               	bcf	6,4	;volatile
  6479  0442                     l3396:	
  6480                           
  6481                           ;LED_B1.c: 124: }
  6482                           ;LED_B1.c: 127: if (led == 2) {
  6483  0442  0857               	movf	setLED@led,w
  6484  0443  3A02               	xorlw	2
  6485  0444  1903               	btfsc	3,2
  6486                           
  6487                           ;LED_B1.c: 131: RB5 = 0;
  6488  0445  1286               	bcf	6,5	;volatile
  6489                           
  6490                           ;LED_B1.c: 133: }
  6491                           ;LED_B1.c: 145: if (led == 99) {
  6492  0446  0857               	movf	setLED@led,w
  6493  0447  3A63               	xorlw	99
  6494  0448  1903               	btfsc	3,2
  6495                           
  6496                           ;LED_B1.c: 149: RB3 = 0;
  6497  0449  1186               	bcf	6,3	;volatile
  6498  044A                     l3404:	
  6499                           
  6500                           ;LED_B1.c: 151: }
  6501                           ;LED_B1.c: 153: }
  6502                           ;LED_B1.c: 154: if (command == 10) {
  6503  044A  0856               	movf	setLED@command,w
  6504  044B  3A0A               	xorlw	10
  6505  044C  1D03               	skipz
  6506  044D  2C65               	goto	l3422
  6507                           
  6508                           ;LED_B1.c: 155: LED->GO = 0;
  6509  044E  0832               	movf	_LED,w
  6510  044F  0084               	movwf	4
  6511  0450  1383               	bcf	3,7	;select IRP bank0
  6512  0451  1080               	bcf	0,1
  6513                           
  6514                           ;LED_B1.c: 156: LED->Time = 0;
  6515  0452  0A32               	incf	_LED,w
  6516  0453  0084               	movwf	4
  6517  0454  0180               	clrf	0
  6518  0455  0A84               	incf	4,f
  6519  0456  0180               	clrf	0
  6520                           
  6521                           ;LED_B1.c: 158: if (led == 1) {
  6522  0457  0857               	movf	setLED@led,w
  6523  0458  3A01               	xorlw	1
  6524  0459  1D03               	skipz
  6525  045A  2C5D               	goto	l3414
  6526                           
  6527                           ;LED_B1.c: 162: RB4 = 1;
  6528  045B  1606               	bsf	6,4	;volatile
  6529                           
  6530                           ;LED_B1.c: 164: }
  6531  045C  2C61               	goto	l3418
  6532  045D                     l3414:	
  6533                           
  6534                           ;LED_B1.c: 167: else if (led == 2) {
  6535  045D  0857               	movf	setLED@led,w
  6536  045E  3A02               	xorlw	2
  6537  045F  1903               	btfsc	3,2
  6538                           
  6539                           ;LED_B1.c: 171: RB5 = 1;
  6540  0460  1686               	bsf	6,5	;volatile
  6541  0461                     l3418:	
  6542                           
  6543                           ;LED_B1.c: 173: }
  6544                           ;LED_B1.c: 185: if (led == 99) {
  6545  0461  0857               	movf	setLED@led,w
  6546  0462  3A63               	xorlw	99
  6547  0463  1903               	btfsc	3,2
  6548                           
  6549                           ;LED_B1.c: 189: RB3 = 1;
  6550  0464  1586               	bsf	6,3	;volatile
  6551  0465                     l3422:	
  6552                           
  6553                           ;LED_B1.c: 191: }
  6554                           ;LED_B1.c: 193: }
  6555                           ;LED_B1.c: 194: if (command == 11) {
  6556  0465  0856               	movf	setLED@command,w
  6557  0466  3A0B               	xorlw	11
  6558  0467  1D03               	skipz
  6559  0468  2C6D               	goto	l3426
  6560                           
  6561                           ;LED_B1.c: 195: LED->GO = 1;
  6562  0469  0832               	movf	_LED,w
  6563  046A  0084               	movwf	4
  6564  046B  1383               	bcf	3,7	;select IRP bank0
  6565  046C  1480               	bsf	0,1
  6566  046D                     l3426:	
  6567                           
  6568                           ;LED_B1.c: 196: }
  6569                           ;LED_B1.c: 198: if (command == 111) {
  6570  046D  0856               	movf	setLED@command,w
  6571  046E  3A6F               	xorlw	111
  6572  046F  1D03               	skipz
  6573  0470  2C8B               	goto	l3452
  6574                           
  6575                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6576  0471  01AC               	clrf	_PIRLED+1
  6577                           
  6578                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6579  0472  01AD               	clrf	_PIRLED+2
  6580  0473  01AE               	clrf	_PIRLED+3
  6581                           
  6582                           ;LED_B1.c: 201: PIRLED.status = 0;
  6583  0474  122B               	bcf	_PIRLED,4
  6584                           
  6585                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6586  0475  142B               	bsf	_PIRLED,0
  6587                           
  6588                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6589  0476  10AB               	bcf	_PIRLED,1
  6590                           
  6591                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6592  0477  112B               	bcf	_PIRLED,2
  6593                           
  6594                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6595  0478  11AB               	bcf	_PIRLED,3
  6596                           
  6597                           ;LED_B1.c: 206: if (led == 1) {
  6598  0479  0857               	movf	setLED@led,w
  6599  047A  3A01               	xorlw	1
  6600  047B  1D03               	skipz
  6601  047C  2C7F               	goto	l3444
  6602                           
  6603                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6604  047D  14AB               	bsf	_PIRLED,1
  6605                           
  6606                           ;LED_B1.c: 208: } else if (led == 2) {
  6607  047E  0008               	return
  6608  047F                     l3444:	
  6609  047F  0857               	movf	setLED@led,w
  6610  0480  3A02               	xorlw	2
  6611  0481  1D03               	skipz
  6612  0482  2C85               	goto	l3448
  6613                           
  6614                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6615  0483  152B               	bsf	_PIRLED,2
  6616                           
  6617                           ;LED_B1.c: 210: } else if (led == 3) {
  6618  0484  0008               	return
  6619  0485                     l3448:	
  6620  0485  0857               	movf	setLED@led,w
  6621  0486  3A03               	xorlw	3
  6622  0487  1D03               	skipz
  6623  0488  0008               	return
  6624                           
  6625                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6626  0489  15AB               	bsf	_PIRLED,3
  6627                           
  6628                           ;LED_B1.c: 212: }
  6629                           ;LED_B1.c: 213: } else if (command == 110) {
  6630  048A  0008               	return
  6631  048B                     l3452:	
  6632  048B  0856               	movf	setLED@command,w
  6633  048C  3A6E               	xorlw	110
  6634  048D  1D03               	skipz
  6635  048E  0008               	return
  6636                           
  6637                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6638  048F  102B               	bcf	_PIRLED,0
  6639  0490  0008               	return
  6640  0491                     __end_of_setLED:	
  6641                           
  6642                           	psect	text42
  6643  076E                     __ptext42:	
  6644 ;; *************** function _LedPointSelect *****************
  6645 ;; Defined at:
  6646 ;;		line 7 in file "../src/LED_B1.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  led             1    wreg     unsigned char 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  led             1    1[BANK0 ] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		wreg
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6660 ;;      Params:         0       0       0       0
  6661 ;;      Locals:         0       1       0       0
  6662 ;;      Temps:          0       1       0       0
  6663 ;;      Totals:         0       2       0       0
  6664 ;;Total ram usage:        2 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    3
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_setLED_Initialization
  6671 ;;		_setLED
  6672 ;;		_setLED_Main
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _LedPointSelect
  6678  076E                     _LedPointSelect:	
  6679                           
  6680                           ;incstack = 0
  6681                           ; Regs used in _LedPointSelect: [wreg]
  6682                           ;LedPointSelect@led stored from wreg
  6683  076E  1283               	bcf	3,5	;RP0=0, select bank0
  6684  076F  1303               	bcf	3,6	;RP1=0, select bank0
  6685  0770  00D5               	movwf	LedPointSelect@led
  6686                           
  6687                           ;LED_B1.c: 9: if (led == 1) {
  6688  0771  0855               	movf	LedPointSelect@led,w
  6689  0772  3A01               	xorlw	1
  6690  0773  1D03               	skipz
  6691  0774  2F79               	goto	l228
  6692                           
  6693                           ;LED_B1.c: 10: LED = &VarLED1;
  6694  0775  304C               	movlw	_VarLED1& (0+255)
  6695  0776  00D4               	movwf	??_LedPointSelect
  6696  0777  0854               	movf	??_LedPointSelect,w
  6697  0778  00B2               	movwf	_LED
  6698  0779                     l228:	
  6699                           
  6700                           ;LED_B1.c: 11: }
  6701                           ;LED_B1.c: 14: if (led == 2) {
  6702  0779  0855               	movf	LedPointSelect@led,w
  6703  077A  3A02               	xorlw	2
  6704  077B  1D03               	skipz
  6705  077C  2F81               	goto	l229
  6706                           
  6707                           ;LED_B1.c: 15: LED = &VarLED2;
  6708  077D  3050               	movlw	_VarLED2& (0+255)
  6709  077E  00D4               	movwf	??_LedPointSelect
  6710  077F  0854               	movf	??_LedPointSelect,w
  6711  0780  00B2               	movwf	_LED
  6712  0781                     l229:	
  6713                           
  6714                           ;LED_B1.c: 16: }
  6715                           ;LED_B1.c: 24: if (led == 99) {
  6716  0781  0855               	movf	LedPointSelect@led,w
  6717  0782  3A63               	xorlw	99
  6718  0783  1D03               	skipz
  6719  0784  0008               	return
  6720                           
  6721                           ;LED_B1.c: 25: LED = &VarErrLED;
  6722  0785  3048               	movlw	_VarErrLED& (0+255)
  6723  0786  00D4               	movwf	??_LedPointSelect
  6724  0787  0854               	movf	??_LedPointSelect,w
  6725  0788  00B2               	movwf	_LED
  6726  0789  0008               	return
  6727  078A                     __end_of_LedPointSelect:	
  6728                           
  6729                           	psect	text43
  6730  05E0                     __ptext43:	
  6731 ;; *************** function _CDS_Main *****************
  6732 ;; Defined at:
  6733 ;;		line 11 in file "../src/CDS_B1.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;		None               void
  6740 ;; Registers used:
  6741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6747 ;;      Params:         0       0       0       0
  6748 ;;      Locals:         0       0       0       0
  6749 ;;      Temps:          0       3       0       0
  6750 ;;      Totals:         0       3       0       0
  6751 ;;Total ram usage:        3 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    5
  6754 ;; This function calls:
  6755 ;;		_getLights_Status
  6756 ;;		_getPIR_OK
  6757 ;;		_setLights_Trigger
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _CDS_Main
  6765  05E0                     _CDS_Main:	
  6766                           
  6767                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _CDS_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6771  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  6772  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  6773  05E2  1C26               	btfss	__CDS,0
  6774  05E3  0008               	return
  6775                           
  6776                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  6777  05E4  18A6               	btfsc	__CDS,1
  6778  05E5  2DF3               	goto	l105
  6779                           
  6780                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  6781  05E6  19A6               	btfsc	__CDS,3
  6782  05E7  0008               	return
  6783                           
  6784                           ;CDS_B1.c: 16: _CDS.Time++;
  6785  05E8  3001               	movlw	1
  6786  05E9  00D9               	movwf	??_CDS_Main
  6787  05EA  0859               	movf	??_CDS_Main,w
  6788  05EB  07A7               	addwf	__CDS+1,f
  6789                           
  6790                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  6791  05EC  300A               	movlw	10
  6792  05ED  0227               	subwf	__CDS+1,w
  6793  05EE  1C03               	skipc
  6794  05EF  0008               	return
  6795                           
  6796                           ;CDS_B1.c: 18: {
  6797                           ;CDS_B1.c: 19: _CDS.Time = 0;
  6798  05F0  01A7               	clrf	__CDS+1
  6799                           
  6800                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  6801  05F1  15A6               	bsf	__CDS,3
  6802                           
  6803                           ;CDS_B1.c: 21: }
  6804                           ;CDS_B1.c: 22: }
  6805                           ;CDS_B1.c: 23: } else {
  6806  05F2  0008               	return
  6807  05F3                     l105:	
  6808                           
  6809                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  6810  05F3  1CA6               	btfss	__CDS,1
  6811  05F4  0008               	return
  6812                           
  6813                           ;CDS_B1.c: 25: _CDS.GO = 0;
  6814  05F5  10A6               	bcf	__CDS,1
  6815                           
  6816                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  6817  05F6  1A26               	btfsc	__CDS,4
  6818  05F7  0008               	return
  6819                           
  6820                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  6821  05F8  0828               	movf	__CDS+2,w
  6822  05F9  0229               	subwf	__CDS+3,w
  6823  05FA  1C03               	skipc
  6824  05FB  2DFE               	goto	l3728
  6825                           
  6826                           ;CDS_B1.c: 28: _CDS.Status = 1;
  6827  05FC  1626               	bsf	__CDS,4
  6828                           
  6829                           ;CDS_B1.c: 29: } else {
  6830  05FD  0008               	return
  6831  05FE                     l3728:	
  6832                           
  6833                           ;CDS_B1.c: 30: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  6834  05FE  0828               	movf	__CDS+2,w
  6835  05FF  3E9C               	addlw	156
  6836  0600  00D9               	movwf	??_CDS_Main
  6837  0601  30FF               	movlw	255
  6838  0602  1803               	skipnc
  6839  0603  3000               	movlw	0
  6840  0604  00DA               	movwf	??_CDS_Main+1
  6841  0605  085A               	movf	??_CDS_Main+1,w
  6842  0606  3A80               	xorlw	128
  6843  0607  00DB               	movwf	??_CDS_Main+2
  6844  0608  3080               	movlw	128
  6845  0609  025B               	subwf	??_CDS_Main+2,w
  6846  060A  1D03               	skipz
  6847  060B  2E0E               	goto	u3855
  6848  060C  0829               	movf	__CDS+3,w
  6849  060D  0259               	subwf	??_CDS_Main,w
  6850  060E                     u3855:	
  6851  060E  1C03               	skipc
  6852  060F  0008               	return
  6853                           
  6854                           ;CDS_B1.c: 31: _CDS.Status = 0;
  6855  0610  1283               	bcf	3,5	;RP0=0, select bank0
  6856  0611  1303               	bcf	3,6	;RP1=0, select bank0
  6857  0612  1226               	bcf	__CDS,4
  6858                           
  6859                           ;CDS_B1.c: 32: if (getPIR_OK() == 1) {
  6860  0613  158A  26F2  118A   	fcall	_getPIR_OK
  6861  0616  3A01               	xorlw	1
  6862  0617  1D03               	skipz
  6863  0618  0008               	return
  6864                           
  6865                           ;CDS_B1.c: 33: if (getLights_Status(1) == 1) {
  6866  0619  3001               	movlw	1
  6867  061A  158A  2758  118A   	fcall	_getLights_Status
  6868  061D  3A01               	xorlw	1
  6869  061E  1D03               	skipz
  6870  061F  0008               	return
  6871                           
  6872                           ;CDS_B1.c: 34: setLights_Trigger(1, 0);
  6873  0620  1283               	bcf	3,5	;RP0=0, select bank0
  6874  0621  1303               	bcf	3,6	;RP1=0, select bank0
  6875  0622  01D6               	clrf	setLights_Trigger@command
  6876  0623  3001               	movlw	1
  6877  0624  118A  27A6         	fcall	_setLights_Trigger
  6878  0626  0008               	return
  6879  0627                     __end_of_CDS_Main:	
  6880                           
  6881                           	psect	text44
  6882  07A6                     __ptext44:	
  6883 ;; *************** function _setLights_Trigger *****************
  6884 ;; Defined at:
  6885 ;;		line 214 in file "../src/TriacRelay_B1.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  lights          1    wreg     unsigned char 
  6888 ;;  command         1    2[BANK0 ] unsigned char 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  lights          1    4[BANK0 ] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;		None               void
  6893 ;; Registers used:
  6894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6900 ;;      Params:         0       1       0       0
  6901 ;;      Locals:         0       1       0       0
  6902 ;;      Temps:          0       1       0       0
  6903 ;;      Totals:         0       3       0       0
  6904 ;;Total ram usage:        3 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    4
  6907 ;; This function calls:
  6908 ;;		_LightsPointSelect
  6909 ;; This function is called by:
  6910 ;;		_CDS_Main
  6911 ;;		_setMain_Exception
  6912 ;;		_PIR_Main
  6913 ;;		_setLights_ErrorClose
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           
  6918                           ;psect for function _setLights_Trigger
  6919  07A6                     _setLights_Trigger:	
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6923                           ;setLights_Trigger@lights stored from wreg
  6924  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  6925  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  6926  07A8  00D8               	movwf	setLights_Trigger@lights
  6927                           
  6928                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  6929  07A9  0858               	movf	setLights_Trigger@lights,w
  6930  07AA  158A  2707         	fcall	_LightsPointSelect
  6931                           
  6932                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  6933  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  6934  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  6935  07AE  0833               	movf	_Lights,w
  6936  07AF  0084               	movwf	4
  6937  07B0  1383               	bcf	3,7	;select IRP bank0
  6938  07B1  1580               	bsf	0,3
  6939                           
  6940                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  6941  07B2  0856               	movf	setLights_Trigger@command,w
  6942  07B3  3A01               	xorlw	1
  6943  07B4  3000               	movlw	0
  6944  07B5  1903               	skipnz
  6945  07B6  3001               	movlw	1
  6946  07B7  00D7               	movwf	??_setLights_Trigger
  6947  07B8  0833               	movf	_Lights,w
  6948  07B9  0084               	movwf	4
  6949  07BA  0ED7               	swapf	??_setLights_Trigger,f
  6950  07BB  0800               	movf	0,w
  6951  07BC  0657               	xorwf	??_setLights_Trigger,w
  6952  07BD  39EF               	andlw	-17
  6953  07BE  0657               	xorwf	??_setLights_Trigger,w
  6954  07BF  0080               	movwf	0
  6955  07C0  0008               	return
  6956  07C1                     __end_of_setLights_Trigger:	
  6957                           
  6958                           	psect	text45
  6959  0EF2                     __ptext45:	
  6960 ;; *************** function _getPIR_OK *****************
  6961 ;; Defined at:
  6962 ;;		line 240 in file "../src/PIR_B1.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  ok              1    0[BANK0 ] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      unsigned char 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6976 ;;      Params:         0       0       0       0
  6977 ;;      Locals:         0       1       0       0
  6978 ;;      Temps:          0       0       0       0
  6979 ;;      Totals:         0       1       0       0
  6980 ;;Total ram usage:        1 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    3
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_CDS_Main
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           
  6991                           ;psect for function _getPIR_OK
  6992  0EF2                     _getPIR_OK:	
  6993                           
  6994                           ;PIR_B1.c: 241: char ok = _PIR.OK;
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in _getPIR_OK: [wreg+status,2]
  6998  0EF2  3000               	movlw	0
  6999  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  7000  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  7001  0EF5  19A0               	btfsc	__PIR^(0+128),3
  7002  0EF6  3001               	movlw	1
  7003  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  7004  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0EF9  00D4               	movwf	getPIR_OK@ok
  7006                           
  7007                           ;PIR_B1.c: 242: return ok;
  7008  0EFA  0854               	movf	getPIR_OK@ok,w
  7009  0EFB  0008               	return
  7010  0EFC                     __end_of_getPIR_OK:	
  7011                           
  7012                           	psect	text46
  7013  0F58                     __ptext46:	
  7014 ;; *************** function _getLights_Status *****************
  7015 ;; Defined at:
  7016 ;;		line 207 in file "../src/TriacRelay_B1.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  lights          1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  lights          1    2[BANK0 ] unsigned char 
  7021 ;;  status          1    3[BANK0 ] unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      unsigned char 
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7031 ;;      Params:         0       0       0       0
  7032 ;;      Locals:         0       2       0       0
  7033 ;;      Temps:          0       0       0       0
  7034 ;;      Totals:         0       2       0       0
  7035 ;;Total ram usage:        2 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:    4
  7038 ;; This function calls:
  7039 ;;		_LightsPointSelect
  7040 ;; This function is called by:
  7041 ;;		_CDS_Main
  7042 ;;		_setMain_Exception
  7043 ;;		_getMain_LightsStatus
  7044 ;;		_PIR_Main
  7045 ;;		_setLights_ErrorClose
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           
  7050                           ;psect for function _getLights_Status
  7051  0F58                     _getLights_Status:	
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7055                           ;getLights_Status@lights stored from wreg
  7056  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  7057  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  7058  0F5A  00D6               	movwf	getLights_Status@lights
  7059                           
  7060                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  7061  0F5B  0856               	movf	getLights_Status@lights,w
  7062  0F5C  158A  2707         	fcall	_LightsPointSelect
  7063                           
  7064                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  7065  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  7066  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  7067  0F60  0833               	movf	_Lights,w
  7068  0F61  0084               	movwf	4
  7069  0F62  3000               	movlw	0
  7070  0F63  1383               	bcf	3,7	;select IRP bank0
  7071  0F64  1900               	btfsc	0,2
  7072  0F65  3001               	movlw	1
  7073  0F66  00D7               	movwf	getLights_Status@status
  7074                           
  7075                           ;TriacRelay_B1.c: 210: return status;
  7076  0F67  0857               	movf	getLights_Status@status,w
  7077  0F68  0008               	return
  7078  0F69                     __end_of_getLights_Status:	
  7079                           
  7080                           	psect	text47
  7081  0F07                     __ptext47:	
  7082 ;; *************** function _LightsPointSelect *****************
  7083 ;; Defined at:
  7084 ;;		line 10 in file "../src/TriacRelay_B1.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  lights          1    wreg     unsigned char 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  lights          1    1[BANK0 ] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;		None               void
  7091 ;; Registers used:
  7092 ;;		wreg
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7098 ;;      Params:         0       0       0       0
  7099 ;;      Locals:         0       1       0       0
  7100 ;;      Temps:          0       1       0       0
  7101 ;;      Totals:         0       2       0       0
  7102 ;;Total ram usage:        2 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    3
  7105 ;; This function calls:
  7106 ;;		Nothing
  7107 ;; This function is called by:
  7108 ;;		_setLights_Initialization
  7109 ;;		_setLights_Main
  7110 ;;		_setLights
  7111 ;;		_Lights_Control
  7112 ;;		_getLights_Status
  7113 ;;		_setLights_Trigger
  7114 ;;		_setLights_Line
  7115 ;;		_getAll_Lights_Line
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _LightsPointSelect
  7121  0F07                     _LightsPointSelect:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _LightsPointSelect: [wreg]
  7125                           ;LightsPointSelect@lights stored from wreg
  7126  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  7127  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  7128  0F09  00D5               	movwf	LightsPointSelect@lights
  7129                           
  7130                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  7131  0F0A  0855               	movf	LightsPointSelect@lights,w
  7132  0F0B  3A01               	xorlw	1
  7133  0F0C  1D03               	skipz
  7134  0F0D  0008               	return
  7135                           
  7136                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  7137  0F0E  3041               	movlw	_Lights1& (0+255)
  7138  0F0F  00D4               	movwf	??_LightsPointSelect
  7139  0F10  0854               	movf	??_LightsPointSelect,w
  7140  0F11  00B3               	movwf	_Lights
  7141  0F12  0008               	return
  7142  0F13                     __end_of_LightsPointSelect:	
  7143                           
  7144                           	psect	text48
  7145  0EB2                     __ptext48:	
  7146 ;; *************** function _CDS_Initialization *****************
  7147 ;; Defined at:
  7148 ;;		line 7 in file "../src/CDS_B1.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;		None               void
  7155 ;; Registers used:
  7156 ;;		None
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7162 ;;      Params:         0       0       0       0
  7163 ;;      Locals:         0       0       0       0
  7164 ;;      Temps:          0       0       0       0
  7165 ;;      Totals:         0       0       0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    3
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_main
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _CDS_Initialization
  7178  0EB2                     _CDS_Initialization:	
  7179                           
  7180                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _CDS_Initialization: []
  7184  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  7185  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  7186  0EB4  1426               	bsf	__CDS,0
  7187  0EB5  0008               	return
  7188  0EB6                     __end_of_CDS_Initialization:	
  7189                           
  7190                           	psect	text49
  7191  0FAF                     __ptext49:	
  7192 ;; *************** function _ISR *****************
  7193 ;; Defined at:
  7194 ;;		line 107 in file "../src/MCU_B1.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;		None               void
  7201 ;; Registers used:
  7202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7208 ;;      Params:         0       0       0       0
  7209 ;;      Locals:         0       0       0       0
  7210 ;;      Temps:          4       0       0       0
  7211 ;;      Totals:         4       0       0       0
  7212 ;;Total ram usage:        4 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    2
  7215 ;; This function calls:
  7216 ;;		_TMR1_ISR
  7217 ;;		_UART_ISR
  7218 ;; This function is called by:
  7219 ;;		Interrupt level 1
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           
  7224                           ;psect for function _ISR
  7225  0FAF                     _ISR:	
  7226                           
  7227                           ;MCU_B1.c: 109: ;;
  7228                           ;MCU_B1.c: 111: ;;
  7229                           ;MCU_B1.c: 113: TMR1_ISR();
  7230  0FAF  118A  278A  158A   	fcall	_TMR1_ISR
  7231                           
  7232                           ;MCU_B1.c: 115: ;;
  7233                           ;MCU_B1.c: 117: ;;
  7234                           ;MCU_B1.c: 119: UART_ISR();
  7235  0FB2  118A  2667  158A   	fcall	_UART_ISR
  7236  0FB5  0876               	movf	??_ISR+3,w
  7237  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  7238  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  7239  0FB8  00FF               	movwf	127
  7240  0FB9  0875               	movf	??_ISR+2,w
  7241  0FBA  008A               	movwf	10
  7242  0FBB  0874               	movf	??_ISR+1,w
  7243  0FBC  0084               	movwf	4
  7244  0FBD  0E73               	swapf	??_ISR^(0+-128),w
  7245  0FBE  0083               	movwf	3
  7246  0FBF  0EFE               	swapf	126,f
  7247  0FC0  0E7E               	swapf	126,w
  7248  0FC1  0009               	retfie
  7249  0FC2                     __end_of_ISR:	
  7250                           
  7251                           	psect	intentry
  7252  0004                     __pintentry:	
  7253                           ;incstack = 0
  7254                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7255                           
  7256  0004                     interrupt_function:	
  7257  007E                     saved_w	set	btemp
  7258  0004  00FE               	movwf	btemp
  7259  0005  0E03               	swapf	3,w
  7260  0006  00F3               	movwf	??_ISR
  7261  0007  0804               	movf	4,w
  7262  0008  00F4               	movwf	??_ISR+1
  7263  0009  080A               	movf	10,w
  7264  000A  00F5               	movwf	??_ISR+2
  7265  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7266  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7267  000D  087F               	movf	btemp+1,w
  7268  000E  00F6               	movwf	??_ISR+3
  7269  000F  158A  2FAF         	ljmp	_ISR
  7270                           
  7271                           	psect	text50
  7272  0667                     __ptext50:	
  7273 ;; *************** function _UART_ISR *****************
  7274 ;; Defined at:
  7275 ;;		line 739 in file "../src/MCU_B1.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  i               2    1[COMMON] int 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;		None               void
  7282 ;; Registers used:
  7283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7289 ;;      Params:         0       0       0       0
  7290 ;;      Locals:         2       0       0       0
  7291 ;;      Temps:          1       0       0       0
  7292 ;;      Totals:         3       0       0       0
  7293 ;;Total ram usage:        3 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    1
  7296 ;; This function calls:
  7297 ;;		_getch
  7298 ;; This function is called by:
  7299 ;;		_ISR
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function _UART_ISR
  7305  0667                     _UART_ISR:	
  7306                           
  7307                           ;MCU_B1.c: 740: if (RCIE == 1 && RCIF == 1) {
  7308                           
  7309                           ;incstack = 0
  7310                           ; Regs used in _UART_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7311  0667  1683               	bsf	3,5	;RP0=1, select bank1
  7312  0668  1303               	bcf	3,6	;RP1=0, select bank1
  7313  0669  1E8C               	btfss	12,5	;volatile
  7314  066A  0008               	return
  7315  066B  1283               	bcf	3,5	;RP0=0, select bank0
  7316  066C  1303               	bcf	3,6	;RP1=0, select bank0
  7317  066D  1E8C               	btfss	12,5	;volatile
  7318  066E  0008               	return
  7319                           
  7320                           ;MCU_B1.c: 741: if (UART.TxRun == 0) {
  7321  066F  1940               	btfsc	_UART+11,2
  7322  0670  2E9C               	goto	i1l463
  7323                           
  7324                           ;MCU_B1.c: 743: for (int i = 0; i < 8; i++) {
  7325  0671  01F1               	clrf	UART_ISR@i
  7326  0672  01F2               	clrf	UART_ISR@i+1
  7327  0673  0872               	movf	UART_ISR@i+1,w
  7328  0674  3A80               	xorlw	128
  7329  0675  00FF               	movwf	127
  7330  0676  3080               	movlw	128
  7331  0677  027F               	subwf	127,w
  7332  0678  1D03               	skipz
  7333  0679  2E7C               	goto	u263_25
  7334  067A  3008               	movlw	8
  7335  067B  0271               	subwf	UART_ISR@i,w
  7336  067C                     u263_25:	
  7337  067C  1803               	btfsc	3,0
  7338  067D  2E99               	goto	i1l465
  7339  067E                     i1l2976:	
  7340                           
  7341                           ;MCU_B1.c: 744: UART.Data[i] = getch();
  7342  067E  158A  26C8  118A   	fcall	_getch
  7343  0681  00F0               	movwf	??_UART_ISR
  7344  0682  0871               	movf	UART_ISR@i,w
  7345  0683  3E35               	addlw	_UART& (0+255)
  7346  0684  0084               	movwf	4
  7347  0685  0870               	movf	??_UART_ISR,w
  7348  0686  1383               	bcf	3,7	;select IRP bank0
  7349  0687  0080               	movwf	0
  7350  0688  3001               	movlw	1
  7351  0689  07F1               	addwf	UART_ISR@i,f
  7352  068A  1803               	skipnc
  7353  068B  0AF2               	incf	UART_ISR@i+1,f
  7354  068C  3000               	movlw	0
  7355  068D  07F2               	addwf	UART_ISR@i+1,f
  7356  068E  0872               	movf	UART_ISR@i+1,w
  7357  068F  3A80               	xorlw	128
  7358  0690  00FF               	movwf	127
  7359  0691  3080               	movlw	128
  7360  0692  027F               	subwf	127,w
  7361  0693  1D03               	skipz
  7362  0694  2E97               	goto	u264_25
  7363  0695  3008               	movlw	8
  7364  0696  0271               	subwf	UART_ISR@i,w
  7365  0697                     u264_25:	
  7366  0697  1C03               	skipc
  7367  0698  2E7E               	goto	i1l2976
  7368  0699                     i1l465:	
  7369                           
  7370                           ;MCU_B1.c: 745: }
  7371                           ;MCU_B1.c: 746: UART.RxGO = 1;
  7372  0699  1283               	bcf	3,5	;RP0=0, select bank0
  7373  069A  1303               	bcf	3,6	;RP1=0, select bank0
  7374  069B  14C0               	bsf	_UART+11,1
  7375  069C                     i1l463:	
  7376                           
  7377                           ;MCU_B1.c: 753: }
  7378                           ;MCU_B1.c: 754: RCIF = 0;
  7379  069C  128C               	bcf	12,5	;volatile
  7380  069D  0008               	return
  7381  069E                     __end_of_UART_ISR:	
  7382                           
  7383                           	psect	text51
  7384  0EC8                     __ptext51:	
  7385 ;; *************** function _getch *****************
  7386 ;; Defined at:
  7387 ;;		line 866 in file "../src/MCU_B1.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      unsigned char 
  7394 ;; Registers used:
  7395 ;;		wreg
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7401 ;;      Params:         0       0       0       0
  7402 ;;      Locals:         0       0       0       0
  7403 ;;      Temps:          0       0       0       0
  7404 ;;      Totals:         0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_UART_ISR
  7411 ;;		_getche
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function _getch
  7417  0EC8                     _getch:	
  7418  0EC8                     i1l493:	
  7419                           ;MCU_B1.c: 869: continue;
  7420                           
  7421                           ;MCU_B1.c: 868: while (!RCIF)
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _getch: [wreg]
  7425                           
  7426  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0ECA  1E8C               	btfss	12,5	;volatile
  7429  0ECB  2EC8               	goto	i1l493
  7430                           
  7431                           ;MCU_B1.c: 870: return RCREG;
  7432  0ECC  081A               	movf	26,w	;volatile
  7433  0ECD  0008               	return
  7434  0ECE                     __end_of_getch:	
  7435                           
  7436                           	psect	text52
  7437  078A                     __ptext52:	
  7438 ;; *************** function _TMR1_ISR *****************
  7439 ;; Defined at:
  7440 ;;		line 209 in file "../src/MCU_B1.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;		None               void
  7447 ;; Registers used:
  7448 ;;		wreg, status,2
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7454 ;;      Params:         0       0       0       0
  7455 ;;      Locals:         0       0       0       0
  7456 ;;      Temps:          0       0       0       0
  7457 ;;      Totals:         0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_ISR
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           
  7468                           ;psect for function _TMR1_ISR
  7469  078A                     _TMR1_ISR:	
  7470                           
  7471                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  7472                           
  7473                           ;incstack = 0
  7474                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7475  078A  1683               	bsf	3,5	;RP0=1, select bank1
  7476  078B  1303               	bcf	3,6	;RP1=0, select bank1
  7477  078C  1C0C               	btfss	12,0	;volatile
  7478  078D  0008               	return
  7479  078E  1283               	bcf	3,5	;RP0=0, select bank0
  7480  078F  1303               	bcf	3,6	;RP1=0, select bank0
  7481  0790  1C0C               	btfss	12,0	;volatile
  7482  0791  0008               	return
  7483                           
  7484                           ;MCU_B1.c: 212: TMR1H = (int)((65536-1480)/256);
  7485  0792  30FA               	movlw	250
  7486  0793  008F               	movwf	15	;volatile
  7487                           
  7488                           ;MCU_B1.c: 213: TMR1L = (int)((65536-1480)%256);
  7489  0794  3038               	movlw	56
  7490  0795  008E               	movwf	14	;volatile
  7491                           
  7492                           ;MCU_B1.c: 214: TMR1IF = 0;
  7493  0796  100C               	bcf	12,0	;volatile
  7494                           
  7495                           ;MCU_B1.c: 234: Timer1.Count++;
  7496  0797  3001               	movlw	1
  7497  0798  07B0               	addwf	_Timer1+1,f
  7498  0799  1803               	skipnc
  7499  079A  0AB1               	incf	_Timer1+2,f
  7500  079B  3000               	movlw	0
  7501  079C  07B1               	addwf	_Timer1+2,f
  7502                           
  7503                           ;MCU_B1.c: 235: if (Timer1.Count == 100) {
  7504  079D  3064               	movlw	100
  7505  079E  0630               	xorwf	_Timer1+1,w
  7506  079F  0431               	iorwf	_Timer1+2,w
  7507  07A0  1D03               	skipz
  7508  07A1  0008               	return
  7509                           
  7510                           ;MCU_B1.c: 236: Timer1.Count = 0;
  7511  07A2  01B0               	clrf	_Timer1+1
  7512  07A3  01B1               	clrf	_Timer1+2
  7513                           
  7514                           ;MCU_B1.c: 237: Timer1.Timeout = 1;
  7515  07A4  142F               	bsf	_Timer1,0
  7516  07A5  0008               	return
  7517  07A6                     __end_of_TMR1_ISR:	
  7518  007E                     btemp	set	126	;btemp
  7519  007E                     wtemp	set	126
  7520  007E                     wtemp0	set	126
  7521  0080                     wtemp1	set	128
  7522  0082                     wtemp2	set	130
  7523  0084                     wtemp3	set	132
  7524  0086                     wtemp4	set	134
  7525  0088                     wtemp5	set	136
  7526  007F                     wtemp6	set	127
  7527  007E                     ttemp	set	126
  7528  007E                     ttemp0	set	126
  7529  0081                     ttemp1	set	129
  7530  0084                     ttemp2	set	132
  7531  0087                     ttemp3	set	135
  7532  007F                     ttemp4	set	127
  7533  007E                     ltemp	set	126
  7534  007E                     ltemp0	set	126
  7535  0082                     ltemp1	set	130
  7536  0086                     ltemp2	set	134
  7537  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     28      80
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _getAll_Lights_Line->_LightsPointSelect
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect
    _CDS_Main->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getLights_Status->_LightsPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   13132
                                             23 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                          _UART_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    1559
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     515
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     370
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        2     2      0     130
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    5572
                                             15 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                   10    10      0    2930
                                              5 BANK0     10    10      0
                 _getAll_Lights_Line
                   _getLights_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      59
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getMain_All_Error_Status                             2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     816
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     468
                                              6 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     353
                                              3 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0      88
                                              2 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     260
                                              9 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     260
                                              4 BANK0      5     5      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      53
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    1850
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    1850
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1938
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1938
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1810
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0     699
                                              5 BANK0      3     3      0
                   _getLights_Status
                          _getPIR_OK
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     578
                                              2 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getPIR_OK                                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Status                                     2     2      0      87
                                              2 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      68
                                              3 COMMON     4     4      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             3     3      0      68
                                              0 COMMON     3     3      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
     _getLights_Status
       _LightsPointSelect
     _getPIR_OK
     _setLights_Trigger
       _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _getLights_Status
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _putch
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      89       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      89      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Dec 08 17:20:50 2014

                     _WDT_Clearing 0002                       ___awdiv@sign 005A  
                               fsr 0004                                l105 05F3  
                              l228 0779                                l229 0781  
                              l476 06CB                                l469 0F52  
                              l751 01E6                                l487 0EE5  
                              l752 0044                                l756 0062  
                              l757 0078                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0032                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0FAF  
                              _PSA 040B                                _RX9 00C6  
                              _WDT 0077                                _TX9 04C6  
           getAll_Lights_Line@line 0056                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0EE2  
        __end_of_LightsPointSelect 0F13             _setMain_Exception$1831 005D  
                 _getLights_Status 0F58            __size_of_Lights_Control 0059  
                             ?_ISR 0070                               l4030 05C1  
                             l4024 05AB                               l3404 044A  
                             l3092 07D1                               l3414 045D  
                             l3422 0465                               l3512 0590  
                             l3426 046D                               l3418 0461  
                             l3444 047F                               l3452 048B  
                             l3508 0575                               l3532 0768  
                             l3382 0431                               l3390 0439  
                             l2814 0528                               l3526 075F  
                             l3448 0485                               l3528 0762  
                             l2840 049D                               l3800 0273  
                             l3562 03DC                               l3490 06D7  
                             l3650 034B                               l3396 0442  
                             l3572 03EE                               l3492 06FC  
                             l3636 06AE                               l3820 02B8  
                             l3804 0278                               l3574 03FA  
                             l3566 03E2                               l3558 03D6  
                             l3670 0396                               l2846 04A8  
                             l3830 02E6                               l3814 029C  
                             l3806 0289                               l3728 05FE  
                             l3576 0402                               l3488 06F5  
                             l3672 0379                               l2872 04E7  
                             l2864 04D4                               l2856 04B0  
                             l3578 0410                               l3674 039F  
                             l3658 0365                               l3930 00B1  
                             l2858 04BE                               l3850 033C  
                             l2868 04DF                               l3844 032E  
                             l3836 0302                               l3934 00BD  
                             l3918 009A                               l2894 0655  
                             l2886 0631                               l3936 00BE  
                             l2888 063F                               l3792 0263  
                             l3698 074B                               l3954 0120  
                             l3946 010C                               l3970 019A  
                             l2898 0660                               l3794 0267  
                             l3980 01B6                               l3964 0157  
                             l3796 026B                               l3788 025D  
                             l3886 0065                               l3798 026F  
                             l3968 018B              _myMain_Initialization 0EAE  
                     __CFG_WDTE$ON 0000                               u2240 0524  
                             u2325 04B3                               u2405 0634  
                             u2345 04BF                               u2425 0640  
                             u2355 04CB                               u2435 064C  
                             u4205 0102                               u2365 04D5  
                             u2445 0656                               u3600 03F7  
                             u4225 013E                               u3435 0FD0  
                             u3620 040D                               u4245 017D  
                             u3465 06E0                               u4265 01AA  
                             u3715 0382                               u4195 00DE  
                             _PEIE 005E                               u4295 01D3  
                             u3655 06AC                               u3665 06C9  
                             _RCIE 0465                               _RCIF 0065  
                             u3855 060E                               _UART 0035  
                             _TXIE 0464                               _TXIF 0064  
                             __CDS 0026                               __PIR 00A0  
                             _main 0598                               btemp 007E  
                  __end_of_WDT_Set 0F4A                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 0627  
                            ??_ISR 0073                  _setLights_Trigger 07A6  
                    ??_Lights_Main 005E                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0EB2                 ?_setLights_Trigger 0056  
                 ??_setPIRLED_Main 0058                              ?_main 006B  
                  __end_of___awdiv 04EE                              _ADRES 001E  
                  ___awdiv@divisor 0054                              _T1CON 0010  
                  __end_of___lwdiv 0667                      ?_Lights_Close 0070  
                            i1l463 069C                              i1l465 0699  
                            i1l493 0EC8                    ___awdiv@counter 0059  
                            _RCREG 001A                              _RCSTA 0018  
                            _TMR1H 000F                              _TMR1L 000E  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TXREG 0019  
                            _TXSTA 0098               setMain_Exception@buz 005B  
          __end_of_Timeout_Counter 0FD6                   __end_of_UART_ISR 069E  
               __size_of_UART_Main 000E                ??_setLights_Trigger 0057  
                 __end_of_PIR_Main 0204                   __end_of_TMR1_ISR 07A6  
                 __end_of_UART_Set 07F4                   __end_of_TMR1_Set 0F3C  
                            _getAD 0752                              _getch 0EC8  
                            _putch 0EE2                   __end_of_WDT_Main 0F8B  
                    _LightsControl 0034                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080     __size_of_setLED_Initialization 0012  
     __end_of_getMain_LightsStatus 0700      __end_of_setLED_Initialization 0F9D  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                  getPIR_AD@channel1 0062  
                getPIR_AD@channel2 005D                     _setLights_Main 072A  
                   _setLights_Line 0F20                    __initialization 0013  
        __end_of_setLights_Trigger 07C1                       __end_of_main 05E0  
                 __end_of_Fosc_Set 0EC3                          ??_ADC_Set 0054  
                           ??_main 006F                     ??_Lights_Close 005D  
              __end_of_Lights_Main 0F07         __size_of_LightsPointSelect 000C  
                           ?_getAD 0054             ?_myMain_Initialization 0070  
                           ?_getch 0070                             _ADCON0 001F  
                           _ADCON1 009F                   ___awdiv@dividend 0056  
                        ??_WDT_Set 0054                             _ANSELA 0185  
                           ?_putch 0070                             _ANSELB 0186  
         _getMain_All_Error_Status 0EC3                             i1l2976 067E  
                           _FVRCON 009D                             u263_25 067C  
                           u264_25 0697             getLights_Status@lights 0056  
                           _PIRLED 002B                             _OSCCON 0090  
                           _TMR1IE 0460                             _TMR1IF 0060  
                           _IO_Set 0FEB                             _TRISC6 043E  
                           _TRISC7 043F             getLights_Status@status 0057  
           __end_of_setLights_Main 0752             __end_of_setLights_Line 0F2E  
       __end_of_Mcu_Initialization 0FAF                             _Lights 0033  
                           _Timer1 002F                  __end_of_UART_Main 0F58  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0057  
                        ??___awdiv 0058                          ??___lwdiv 0058  
                           _setLED 0420                             _myMain 0020  
                 ___awdiv@quotient 005B                             saved_w 007E  
                 ?_Timeout_Counter 0070                     _Lights_Control 04EE  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 000D         getMain_LightsStatus@status 005C  
          __end_of__initialization 0022                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070              __end_of_UART_Transmit 06CF  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 002A                          ?_UART_ISR 0070  
         __end_of_getLights_Status 0F69                      __end_of_getAD 076E  
                        ?_PIR_Main 0070                          ?_TMR1_ISR 0070  
                        ?_UART_Set 0070                      __end_of_getch 0ECE  
                        ?_TMR1_Set 0070                 _LED_Initialization 07F4  
               __size_of_getPIR_AD 013A                 __size_of_getPIR_OK 000A  
                      _Lights_Main 0EFC                      __end_of_putch 0EEA  
         _setLights_Initialization 0ED4                          ?_WDT_Main 0070  
             _getMain_LightsStatus 06CF         __end_of_set_TimeoutCleared 0ED4  
              ?_LED_Initialization 0070             __end_of_Lights_Control 0547  
            getMain_LightsStatus@i 005A                            ??_getAD 0055  
                          ??_getch 0070                         ??_CDS_Main 0059  
                          ??_putch 0054                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0070  
      __size_of_getAll_Lights_Line 0011                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0054  
                       ??_LED_Main 005A               __end_of_Lights_Close 0FEB  
        getMain_LightsStatus@count 0059               ??_LED_Initialization 0059  
                LedPointSelect@led 0055                         __pmaintext 0598  
                       ??_UART_ISR 0070                         ??_PIR_Main 0063  
                       ??_TMR1_ISR 0070                         ??_UART_Set 0054  
               __size_of_setLights 0051                         ??_TMR1_Set 0054  
                       __pintentry 0004                            ?_setLED 0056  
          setLights_Trigger@lights 0058                          UART_ISR@i 0071  
                          _ADC_Set 0EDB                         ??_WDT_Main 0054  
            ?_getMain_LightsStatus 0070                    ?_Lights_Control 0070  
                __end_of_getCDS_AD 072A                            _WDT_Set 0F3C  
                       ??_Fosc_Set 0054                  __end_of_getPIR_AD 033E  
                __end_of_getPIR_OK 0EFC                      ?_UART_Receive 0070  
           setMain_Exception@count 005C                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0059                         getCDS_AD@j 005A  
                          _Lights1 0041                            _VarLED1 004C  
                          _VarLED2 0050                            ___awdiv 0491  
                          ___lwdiv 0627                    __size_of_setLED 0071  
                          __ptext0 0000                            __ptext1 07C1  
                          __ptext2 0EAE                            __ptext3 0204  
                          __ptext4 0627                            __ptext5 0491  
                          __ptext6 0700                            __ptext7 0752  
                          __ptext8 0ECE                            __ptext9 0FC2  
                       getPIR_AD@i 0063                         getPIR_AD@j 0061  
                     __size_of_ISR 0013         ??_getMain_All_Error_Status 0054  
          ??_myMain_Initialization 0054                     _LedPointSelect 076E  
                          clrloop0 0EEB                  __end_of_setLights 0598  
             end_of_initialization 0022                     ??_UART_Receive 0054  
                   UART_Transmit@i 0055              _setLED_Initialization 0F8B  
   __size_of_Lights_Initialization 0004      __end_of_Lights_Initialization 0EBA  
           ??_getMain_LightsStatus 0058                          _UART_Main 0F4A  
         setLED_Initialization@led 0058                 _Mcu_Initialization 0F9D  
             __end_of_my_MainTimer 07DB             __end_of_LedPointSelect 078A  
              setPIRLED_Main@count 0059                ?_Mcu_Initialization 0070  
            __size_of_Lights_Close 0015            __size_of_setPIRLED_Main 0071  
                 ??_setLights_Main 005A                   ??_setLights_Line 0056  
             setLights_Main@lights 005A    getMain_All_Error_Status@command 0070  
                __size_of_CDS_Main 0047                     __end_of_IO_Set 1000  
       __end_of_CDS_Initialization 0EB6         ??_setLights_Initialization 0056  
                __size_of_LED_Main 0003                  _setMain_Exception 033E  
             ??_Mcu_Initialization 0055                      ?_WDT_Clearing 0070  
               ?_setMain_Exception 0070                  ?_getLights_Status 0070  
         setMain_Exception@command 0062                       ?_Lights_Main 0070  
                       ?_UART_Main 0070                  __size_of_UART_ISR 0037  
                __size_of_PIR_Main 01DF                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0056                  __size_of_UART_Set 0019  
                __size_of_TMR1_Set 000E                     __end_of_setLED 0491  
              ??_setMain_Exception 0059                       _Lights_Close 0FD6  
                __size_of_WDT_Main 0011                start_initialization 0013  
                  ?_LedPointSelect 0070               setLights_Line@lights 0056  
                      __end_of_ISR 0FC2         __end_of_PIR_Initialization 0F20  
               _set_TimeoutCleared 0ECE                           ??_IO_Set 0054  
         __size_of_Timeout_Counter 0014                          _VarErrLED 0048  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_setMain_Exception 03AF                    setLights@lights 0059  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0054  
                  setLights@status 0057                           ??_setLED 0057  
                         ?_ADC_Set 0070                   ??_Lights_Control 0056  
             __end_of_UART_Receive 0EBE   __end_of_getMain_All_Error_Status 0EC8  
                      __pbssCOMMON 0077                          ___latbits 0001  
           __size_of_UART_Transmit 0031                      __pcstackBANK0 0054  
             ??_set_TimeoutCleared 0054         __end_of_getAll_Lights_Line 0F7A  
                         ?_WDT_Set 0070                      PIR_Main@error 006A  
                        _getCDS_AD 0700                          _getPIR_AD 0204  
      __size_of_LED_Initialization 000C                          _getPIR_OK 0EF2  
                 ___lwdiv@dividend 0056                      _PIR_Main$2378 0068  
                         ?___awdiv 0054              __size_of_my_MainTimer 001A  
                         ?___lwdiv 0054                        ??_UART_Main 0057  
         setLights_Trigger@command 0056     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0EAF                     __size_of_getAD 001C  
                 ___lwdiv@quotient 0059                     __size_of_getch 0006  
                   _setPIRLED_Main 03AF                           _CDS_Main 05E0  
                   __size_of_putch 0008                  interrupt_function 0004  
                       ?_getCDS_AD 0056                           _LED_Main 0EAF  
                        _setLights 0547                          clear_ram0 0EEA  
 __end_of_setLights_Initialization 0EDB         __size_of_setMain_Exception 0071  
                     _my_MainTimer 07C1                         ?_getPIR_AD 005D  
                       ?_getPIR_OK 0070                      _UART_Transmit 069E  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0054  
                         _UART_ISR 0667                           _PIR_Main 0025  
                         _TMR1_ISR 078A                           _UART_Set 07DB  
                         _TMR1_Set 0F2E                           _WDT_Main 0F7A  
                 __size_of_ADC_Set 0007               __size_of_Lights_Main 000B  
           __end_of_setPIRLED_Main 0420     getMain_All_Error_Status@status 0054  
                      getAD@adcon0 0055                        getAD@adcon1 0054  
             __end_of_WDT_Clearing 0004                 setMain_Exception@i 005F  
                         _Fosc_Set 0EBE                   __size_of_WDT_Set 000E  
          setMain_Exception@status 0061  __size_of_getMain_All_Error_Status 0005  
        ?_getMain_All_Error_Status 0070                         ?_setLights 0057  
                   ?_UART_Transmit 0070                           _SwDetect 0079  
                        setLED@led 0057              __size_of_UART_Receive 0004  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0054                 _CDS_Initialization 0EB2  
            _Lights_Initialization 0EB6      __size_of_getMain_LightsStatus 0031  
                  ?_setPIRLED_Main 0070                    ___lwdiv@divisor 0054  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 005B  
                         __ptext10 0F7A                           __ptext11 0002  
                         __ptext20 0F13                           __ptext12 0F4A  
                         __ptext21 0F9D                           __ptext13 069E  
                         __ptext30 0547                           __ptext22 0F3C  
                         __ptext14 0EE2                           __ptext31 0F20  
                         __ptext23 07DB                           __ptext15 0EBA  
                         __ptext40 0F8B                           __ptext32 04EE  
                         __ptext24 0F2E                           __ptext16 0025  
                         __ptext41 0420                           __ptext33 0FD6  
                         __ptext25 0FEB                           __ptext17 033E  
                         __ptext50 0667                           __ptext42 076E  
                         __ptext34 06CF                           __ptext26 0EBE  
                         __ptext18 0F69                           __ptext51 0EC8  
                         __ptext43 05E0                           __ptext35 0EB6  
                         __ptext27 0EDB                           __ptext19 0EC3  
                         __ptext52 078A                           __ptext44 07A6  
                         __ptext36 0ED4                           __ptext28 0EFC  
                         __ptext45 0EF2                           __ptext37 0EAF  
                         __ptext29 072A                           __ptext46 0F58  
                         __ptext38 03AF                           __ptext47 0F07  
                         __ptext39 07F4                           __ptext48 0EB2  
                         __ptext49 0FAF          __size_of_getLights_Status 0011  
          ??_setLED_Initialization 0058                        getPIR_OK@ok 0054  
                      ??_getCDS_AD 0057                      setLED@command 0056  
                    __size_of_main 0048                       _UART_Receive 0EBA  
                      ??_getPIR_AD 005E                        ??_getPIR_OK 0054  
               _PIR_Initialization 0F13               ??_CDS_Initialization 0054  
      __size_of_Mcu_Initialization 0012                ?_PIR_Initialization 0070  
                         main@argc 006B                           main@argv 006D  
__size_of_setLights_Initialization 0007                          putch@byte 0054  
        ?_setLights_Initialization 0070               Lights_Control@lights 0058  
             ??_PIR_Initialization 0054                           intlevel1 0000  
                  ??_UART_Transmit 0055                        ??_setLights 0058  
          LightsPointSelect@lights 0055                 _getAll_Lights_Line 0F69  
          __size_of_setLights_Main 0028            __size_of_setLights_Line 000E  
              ?_getAll_Lights_Line 0070             ?_Lights_Initialization 0070  
            __size_of_WDT_Clearing 0002     setLights_Initialization@lights 0056  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 0F07  
             ??_getAll_Lights_Line 0056                 __CFG_FOSC$INTOSCIO 0000  
               ?_LightsPointSelect 0070                    _Timeout_Counter 0FC2  
       __end_of_LED_Initialization 0800                  getCDS_AD@channel1 005B  
                getCDS_AD@channel2 0056                ??_LightsPointSelect 0054  
