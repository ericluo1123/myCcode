

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Dec 04 11:25:02 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0096                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009F                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0186                     	;# 
   135  018C                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0096                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009F                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0186                     	;# 
   204  018C                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009F                     	;# 
   263  0108                     	;# 
   264  0109                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  0185                     	;# 
   272  0186                     	;# 
   273  018C                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  000E                     	;# 
   289  000F                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  0089                     	;# 
   313  008C                     	;# 
   314  008D                     	;# 
   315  008E                     	;# 
   316  008F                     	;# 
   317  0090                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0093                     	;# 
   321  0093                     	;# 
   322  0094                     	;# 
   323  0095                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0096                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009C                     	;# 
   330  009D                     	;# 
   331  009F                     	;# 
   332  0108                     	;# 
   333  0109                     	;# 
   334  010C                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  0185                     	;# 
   341  0186                     	;# 
   342  018C                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0094                     	;# 
   392  0095                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0096                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009F                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0186                     	;# 
   411  018C                     	;# 
   412  0000                     	;# 
   413  0001                     	;# 
   414  0002                     	;# 
   415  0003                     	;# 
   416  0004                     	;# 
   417  0005                     	;# 
   418  0006                     	;# 
   419  0007                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  000E                     	;# 
   426  000E                     	;# 
   427  000F                     	;# 
   428  0010                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001D                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  0081                     	;# 
   447  0085                     	;# 
   448  0086                     	;# 
   449  0087                     	;# 
   450  0089                     	;# 
   451  008C                     	;# 
   452  008D                     	;# 
   453  008E                     	;# 
   454  008F                     	;# 
   455  0090                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0093                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0095                     	;# 
   462  0095                     	;# 
   463  0096                     	;# 
   464  0096                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009F                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0186                     	;# 
   480  018C                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0096                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009F                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0186                     	;# 
   549  018C                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  000E                     	;# 
   565  000F                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001D                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  0081                     	;# 
   585  0085                     	;# 
   586  0086                     	;# 
   587  0087                     	;# 
   588  0089                     	;# 
   589  008C                     	;# 
   590  008D                     	;# 
   591  008E                     	;# 
   592  008F                     	;# 
   593  0090                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0096                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009C                     	;# 
   606  009D                     	;# 
   607  009F                     	;# 
   608  0108                     	;# 
   609  0109                     	;# 
   610  010C                     	;# 
   611  010C                     	;# 
   612  010D                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  0185                     	;# 
   617  0186                     	;# 
   618  018C                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001B                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  0081                     	;# 
   654  0085                     	;# 
   655  0086                     	;# 
   656  0087                     	;# 
   657  0089                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0092                     	;# 
   665  0093                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0095                     	;# 
   670  0096                     	;# 
   671  0096                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009F                     	;# 
   677  0108                     	;# 
   678  0109                     	;# 
   679  010C                     	;# 
   680  010C                     	;# 
   681  010D                     	;# 
   682  010D                     	;# 
   683  010E                     	;# 
   684  010F                     	;# 
   685  0185                     	;# 
   686  0186                     	;# 
   687  018C                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0009                     	;# 
   697  000A                     	;# 
   698  000B                     	;# 
   699  000C                     	;# 
   700  000D                     	;# 
   701  000E                     	;# 
   702  000E                     	;# 
   703  000F                     	;# 
   704  0010                     	;# 
   705  0011                     	;# 
   706  0012                     	;# 
   707  0013                     	;# 
   708  0014                     	;# 
   709  0015                     	;# 
   710  0015                     	;# 
   711  0016                     	;# 
   712  0017                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001B                     	;# 
   717  001B                     	;# 
   718  001C                     	;# 
   719  001D                     	;# 
   720  001E                     	;# 
   721  001F                     	;# 
   722  0081                     	;# 
   723  0085                     	;# 
   724  0086                     	;# 
   725  0087                     	;# 
   726  0089                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0091                     	;# 
   733  0092                     	;# 
   734  0093                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0095                     	;# 
   739  0096                     	;# 
   740  0096                     	;# 
   741  0098                     	;# 
   742  0099                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009F                     	;# 
   746  0108                     	;# 
   747  0109                     	;# 
   748  010C                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010D                     	;# 
   752  010E                     	;# 
   753  010F                     	;# 
   754  0185                     	;# 
   755  0186                     	;# 
   756  018C                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000D                     	;# 
   770  000E                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0014                     	;# 
   778  0015                     	;# 
   779  0015                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001B                     	;# 
   787  001C                     	;# 
   788  001D                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  0081                     	;# 
   792  0085                     	;# 
   793  0086                     	;# 
   794  0087                     	;# 
   795  0089                     	;# 
   796  008C                     	;# 
   797  008D                     	;# 
   798  008E                     	;# 
   799  008F                     	;# 
   800  0090                     	;# 
   801  0091                     	;# 
   802  0092                     	;# 
   803  0093                     	;# 
   804  0093                     	;# 
   805  0094                     	;# 
   806  0095                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0096                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009C                     	;# 
   813  009D                     	;# 
   814  009F                     	;# 
   815  0108                     	;# 
   816  0109                     	;# 
   817  010C                     	;# 
   818  010C                     	;# 
   819  010D                     	;# 
   820  010D                     	;# 
   821  010E                     	;# 
   822  010F                     	;# 
   823  0185                     	;# 
   824  0186                     	;# 
   825  018C                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000D                     	;# 
   839  000E                     	;# 
   840  000E                     	;# 
   841  000F                     	;# 
   842  0010                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0013                     	;# 
   846  0014                     	;# 
   847  0015                     	;# 
   848  0015                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001B                     	;# 
   856  001C                     	;# 
   857  001D                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  0081                     	;# 
   861  0085                     	;# 
   862  0086                     	;# 
   863  0087                     	;# 
   864  0089                     	;# 
   865  008C                     	;# 
   866  008D                     	;# 
   867  008E                     	;# 
   868  008F                     	;# 
   869  0090                     	;# 
   870  0091                     	;# 
   871  0092                     	;# 
   872  0093                     	;# 
   873  0093                     	;# 
   874  0094                     	;# 
   875  0095                     	;# 
   876  0095                     	;# 
   877  0096                     	;# 
   878  0096                     	;# 
   879  0098                     	;# 
   880  0099                     	;# 
   881  009C                     	;# 
   882  009D                     	;# 
   883  009F                     	;# 
   884  0108                     	;# 
   885  0109                     	;# 
   886  010C                     	;# 
   887  010C                     	;# 
   888  010D                     	;# 
   889  010D                     	;# 
   890  010E                     	;# 
   891  010F                     	;# 
   892  0185                     	;# 
   893  0186                     	;# 
   894  018C                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0009                     	;# 
   904  000A                     	;# 
   905  000B                     	;# 
   906  000C                     	;# 
   907  000D                     	;# 
   908  000E                     	;# 
   909  000E                     	;# 
   910  000F                     	;# 
   911  0010                     	;# 
   912  0011                     	;# 
   913  0012                     	;# 
   914  0013                     	;# 
   915  0014                     	;# 
   916  0015                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0017                     	;# 
   920  0018                     	;# 
   921  0019                     	;# 
   922  001A                     	;# 
   923  001B                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  001D                     	;# 
   927  001E                     	;# 
   928  001F                     	;# 
   929  0081                     	;# 
   930  0085                     	;# 
   931  0086                     	;# 
   932  0087                     	;# 
   933  0089                     	;# 
   934  008C                     	;# 
   935  008D                     	;# 
   936  008E                     	;# 
   937  008F                     	;# 
   938  0090                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0093                     	;# 
   942  0093                     	;# 
   943  0094                     	;# 
   944  0095                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0096                     	;# 
   948  0098                     	;# 
   949  0099                     	;# 
   950  009C                     	;# 
   951  009D                     	;# 
   952  009F                     	;# 
   953  0108                     	;# 
   954  0109                     	;# 
   955  010C                     	;# 
   956  010C                     	;# 
   957  010D                     	;# 
   958  010D                     	;# 
   959  010E                     	;# 
   960  010F                     	;# 
   961  0185                     	;# 
   962  0186                     	;# 
   963  018C                     	;# 
   964  0000                     	;# 
   965  0001                     	;# 
   966  0002                     	;# 
   967  0003                     	;# 
   968  0004                     	;# 
   969  0005                     	;# 
   970  0006                     	;# 
   971  0007                     	;# 
   972  0009                     	;# 
   973  000A                     	;# 
   974  000B                     	;# 
   975  000C                     	;# 
   976  000D                     	;# 
   977  000E                     	;# 
   978  000E                     	;# 
   979  000F                     	;# 
   980  0010                     	;# 
   981  0011                     	;# 
   982  0012                     	;# 
   983  0013                     	;# 
   984  0014                     	;# 
   985  0015                     	;# 
   986  0015                     	;# 
   987  0016                     	;# 
   988  0017                     	;# 
   989  0018                     	;# 
   990  0019                     	;# 
   991  001A                     	;# 
   992  001B                     	;# 
   993  001B                     	;# 
   994  001C                     	;# 
   995  001D                     	;# 
   996  001E                     	;# 
   997  001F                     	;# 
   998  0081                     	;# 
   999  0085                     	;# 
  1000  0086                     	;# 
  1001  0087                     	;# 
  1002  0089                     	;# 
  1003  008C                     	;# 
  1004  008D                     	;# 
  1005  008E                     	;# 
  1006  008F                     	;# 
  1007  0090                     	;# 
  1008  0091                     	;# 
  1009  0092                     	;# 
  1010  0093                     	;# 
  1011  0093                     	;# 
  1012  0094                     	;# 
  1013  0095                     	;# 
  1014  0095                     	;# 
  1015  0096                     	;# 
  1016  0096                     	;# 
  1017  0098                     	;# 
  1018  0099                     	;# 
  1019  009C                     	;# 
  1020  009D                     	;# 
  1021  009F                     	;# 
  1022  0108                     	;# 
  1023  0109                     	;# 
  1024  010C                     	;# 
  1025  010C                     	;# 
  1026  010D                     	;# 
  1027  010D                     	;# 
  1028  010E                     	;# 
  1029  010F                     	;# 
  1030  0185                     	;# 
  1031  0186                     	;# 
  1032  018C                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0009                     	;# 
  1042  000A                     	;# 
  1043  000B                     	;# 
  1044  000C                     	;# 
  1045  000D                     	;# 
  1046  000E                     	;# 
  1047  000E                     	;# 
  1048  000F                     	;# 
  1049  0010                     	;# 
  1050  0011                     	;# 
  1051  0012                     	;# 
  1052  0013                     	;# 
  1053  0014                     	;# 
  1054  0015                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0017                     	;# 
  1058  0018                     	;# 
  1059  0019                     	;# 
  1060  001A                     	;# 
  1061  001B                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  001D                     	;# 
  1065  001E                     	;# 
  1066  001F                     	;# 
  1067  0081                     	;# 
  1068  0085                     	;# 
  1069  0086                     	;# 
  1070  0087                     	;# 
  1071  0089                     	;# 
  1072  008C                     	;# 
  1073  008D                     	;# 
  1074  008E                     	;# 
  1075  008F                     	;# 
  1076  0090                     	;# 
  1077  0091                     	;# 
  1078  0092                     	;# 
  1079  0093                     	;# 
  1080  0093                     	;# 
  1081  0094                     	;# 
  1082  0095                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0096                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009C                     	;# 
  1089  009D                     	;# 
  1090  009F                     	;# 
  1091  0108                     	;# 
  1092  0109                     	;# 
  1093  010C                     	;# 
  1094  010C                     	;# 
  1095  010D                     	;# 
  1096  010D                     	;# 
  1097  010E                     	;# 
  1098  010F                     	;# 
  1099  0185                     	;# 
  1100  0186                     	;# 
  1101  018C                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0009                     	;# 
  1111  000A                     	;# 
  1112  000B                     	;# 
  1113  000C                     	;# 
  1114  000D                     	;# 
  1115  000E                     	;# 
  1116  000E                     	;# 
  1117  000F                     	;# 
  1118  0010                     	;# 
  1119  0011                     	;# 
  1120  0012                     	;# 
  1121  0013                     	;# 
  1122  0014                     	;# 
  1123  0015                     	;# 
  1124  0015                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001B                     	;# 
  1132  001C                     	;# 
  1133  001D                     	;# 
  1134  001E                     	;# 
  1135  001F                     	;# 
  1136  0081                     	;# 
  1137  0085                     	;# 
  1138  0086                     	;# 
  1139  0087                     	;# 
  1140  0089                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008F                     	;# 
  1145  0090                     	;# 
  1146  0091                     	;# 
  1147  0092                     	;# 
  1148  0093                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0095                     	;# 
  1153  0096                     	;# 
  1154  0096                     	;# 
  1155  0098                     	;# 
  1156  0099                     	;# 
  1157  009C                     	;# 
  1158  009D                     	;# 
  1159  009F                     	;# 
  1160  0108                     	;# 
  1161  0109                     	;# 
  1162  010C                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0186                     	;# 
  1170  018C                     	;# 
  1171  0000                     	;# 
  1172  0001                     	;# 
  1173  0002                     	;# 
  1174  0003                     	;# 
  1175  0004                     	;# 
  1176  0005                     	;# 
  1177  0006                     	;# 
  1178  0007                     	;# 
  1179  0009                     	;# 
  1180  000A                     	;# 
  1181  000B                     	;# 
  1182  000C                     	;# 
  1183  000D                     	;# 
  1184  000E                     	;# 
  1185  000E                     	;# 
  1186  000F                     	;# 
  1187  0010                     	;# 
  1188  0011                     	;# 
  1189  0012                     	;# 
  1190  0013                     	;# 
  1191  0014                     	;# 
  1192  0015                     	;# 
  1193  0015                     	;# 
  1194  0016                     	;# 
  1195  0017                     	;# 
  1196  0018                     	;# 
  1197  0019                     	;# 
  1198  001A                     	;# 
  1199  001B                     	;# 
  1200  001B                     	;# 
  1201  001C                     	;# 
  1202  001D                     	;# 
  1203  001E                     	;# 
  1204  001F                     	;# 
  1205  0081                     	;# 
  1206  0085                     	;# 
  1207  0086                     	;# 
  1208  0087                     	;# 
  1209  0089                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  008F                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0093                     	;# 
  1219  0094                     	;# 
  1220  0095                     	;# 
  1221  0095                     	;# 
  1222  0096                     	;# 
  1223  0096                     	;# 
  1224  0098                     	;# 
  1225  0099                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009F                     	;# 
  1229  0108                     	;# 
  1230  0109                     	;# 
  1231  010C                     	;# 
  1232  010C                     	;# 
  1233  010D                     	;# 
  1234  010D                     	;# 
  1235  010E                     	;# 
  1236  010F                     	;# 
  1237  0185                     	;# 
  1238  0186                     	;# 
  1239  018C                     	;# 
  1240  0000                     	;# 
  1241  0001                     	;# 
  1242  0002                     	;# 
  1243  0003                     	;# 
  1244  0004                     	;# 
  1245  0005                     	;# 
  1246  0006                     	;# 
  1247  0007                     	;# 
  1248  0009                     	;# 
  1249  000A                     	;# 
  1250  000B                     	;# 
  1251  000C                     	;# 
  1252  000D                     	;# 
  1253  000E                     	;# 
  1254  000E                     	;# 
  1255  000F                     	;# 
  1256  0010                     	;# 
  1257  0011                     	;# 
  1258  0012                     	;# 
  1259  0013                     	;# 
  1260  0014                     	;# 
  1261  0015                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001B                     	;# 
  1269  001B                     	;# 
  1270  001C                     	;# 
  1271  001D                     	;# 
  1272  001E                     	;# 
  1273  001F                     	;# 
  1274  0081                     	;# 
  1275  0085                     	;# 
  1276  0086                     	;# 
  1277  0087                     	;# 
  1278  0089                     	;# 
  1279  008C                     	;# 
  1280  008D                     	;# 
  1281  008E                     	;# 
  1282  008F                     	;# 
  1283  0090                     	;# 
  1284  0091                     	;# 
  1285  0092                     	;# 
  1286  0093                     	;# 
  1287  0093                     	;# 
  1288  0094                     	;# 
  1289  0095                     	;# 
  1290  0095                     	;# 
  1291  0096                     	;# 
  1292  0096                     	;# 
  1293  0098                     	;# 
  1294  0099                     	;# 
  1295  009C                     	;# 
  1296  009D                     	;# 
  1297  009F                     	;# 
  1298  0108                     	;# 
  1299  0109                     	;# 
  1300  010C                     	;# 
  1301  010C                     	;# 
  1302  010D                     	;# 
  1303  010D                     	;# 
  1304  010E                     	;# 
  1305  010F                     	;# 
  1306  0185                     	;# 
  1307  0186                     	;# 
  1308  018C                     	;# 
  1309  001F                     _ADCON0	set	31
  1310  001E                     _ADRES	set	30
  1311  0005                     _PORTA	set	5
  1312  0006                     _PORTB	set	6
  1313  0007                     _PORTC	set	7
  1314  001A                     _RCREG	set	26
  1315  0018                     _RCSTA	set	24
  1316  0010                     _T1CON	set	16
  1317  000F                     _TMR1H	set	15
  1318  000E                     _TMR1L	set	14
  1319  0019                     _TXREG	set	25
  1320  005F                     _GIE	set	95
  1321  00F9                     _GO_nDONE	set	249
  1322  005E                     _PEIE	set	94
  1323  002C                     _RA4	set	44
  1324  0032                     _RB2	set	50
  1325  0033                     _RB3	set	51
  1326  0034                     _RB4	set	52
  1327  0035                     _RB5	set	53
  1328  0065                     _RCIF	set	101
  1329  00C6                     _RX9	set	198
  1330  0060                     _TMR1IF	set	96
  1331  0064                     _TXIF	set	100
  1332  009F                     _ADCON1	set	159
  1333  009D                     _FVRCON	set	157
  1334  0090                     _OSCCON	set	144
  1335  0099                     _SPBRG	set	153
  1336  0085                     _TRISA	set	133
  1337  0086                     _TRISB	set	134
  1338  0087                     _TRISC	set	135
  1339  0098                     _TXSTA	set	152
  1340  0408                     _PS0	set	1032
  1341  0409                     _PS1	set	1033
  1342  040A                     _PS2	set	1034
  1343  040B                     _PSA	set	1035
  1344  0465                     _RCIE	set	1125
  1345  0460                     _TMR1IE	set	1120
  1346  043E                     _TRISC6	set	1086
  1347  043F                     _TRISC7	set	1087
  1348  04C6                     _TX9	set	1222
  1349  0464                     _TXIE	set	1124
  1350  0185                     _ANSELA	set	389
  1351  0186                     _ANSELB	set	390
  1352                           
  1353                           	psect	text0
  1354  0000                     __ptext0:	
  1355                           ; #config settings
  1356                           
  1357                           
  1358                           ;psect for function _TMR1_ISR
  1359  0000                     
  1360                           	psect	cinit
  1361  0013                     start_initialization:	
  1362  0013                     __initialization:	
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1366  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1368                           
  1369                           ; Clear objects allocated to BANK0
  1370  0016  1383               	bcf	3,7	;select IRP bank0
  1371  0017  3020               	movlw	low __pbssBANK0
  1372  0018  0084               	movwf	4
  1373  0019  3055               	movlw	low (__pbssBANK0+53)
  1374  001A  158A  2702  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001D  30A0               	movlw	low __pbssBANK1
  1378  001E  0084               	movwf	4
  1379  001F  30CF               	movlw	low (__pbssBANK1+47)
  1380  0020  158A  2702         	fcall	clear_ram0
  1381  0022                     end_of_initialization:	
  1382                           ;End of C runtime variable initialization code
  1383                           
  1384  0022                     __end_of__initialization:	
  1385  0022  0183               	clrf	3
  1386  0023  118A  2D3D         	ljmp	_main	;jump to C main() function
  1387                           
  1388                           	psect	bssCOMMON
  1389  0077                     __pbssCOMMON:	
  1390  0077                     _WDT:	
  1391  0077                     	ds	2
  1392  0079                     _SwDetect:	
  1393  0079                     	ds	1
  1394                           
  1395                           	psect	bssBANK0
  1396  0020                     __pbssBANK0:	
  1397  0020                     _myMain:	
  1398  0020                     	ds	7
  1399  0027                     __CDS:	
  1400  0027                     	ds	5
  1401  002C                     _PIRLED:	
  1402  002C                     	ds	4
  1403  0030                     _Timer1:	
  1404  0030                     	ds	3
  1405  0033                     _LED:	
  1406  0033                     	ds	1
  1407  0034                     _Lights:	
  1408  0034                     	ds	1
  1409  0035                     _LightsControl:	
  1410  0035                     	ds	1
  1411  0036                     _UART:	
  1412  0036                     	ds	12
  1413  0042                     _Lights1:	
  1414  0042                     	ds	7
  1415  0049                     _VarErrLED:	
  1416  0049                     	ds	4
  1417  004D                     _VarLED1:	
  1418  004D                     	ds	4
  1419  0051                     _VarLED2:	
  1420  0051                     	ds	4
  1421                           
  1422                           	psect	bssBANK1
  1423  00A0                     __pbssBANK1:	
  1424  00A0                     __PIR:	
  1425  00A0                     	ds	47
  1426                           
  1427                           	psect	clrtext
  1428  0F02                     clear_ram0:	
  1429                           ;	Called with FSR containing the base address, and
  1430                           ;	W with the last address+1
  1431                           
  1432  0F02  0064               	clrwdt	;clear the watchdog before getting into this loop
  1433  0F03                     clrloop0:	
  1434  0F03  0180               	clrf	0	;clear RAM location pointed to by FSR
  1435  0F04  0A84               	incf	4,f	;increment pointer
  1436  0F05  0604               	xorwf	4,w	;XOR with final address
  1437  0F06  1903               	btfsc	3,2	;have we reached the end yet?
  1438  0F07  3400               	retlw	0	;all done for this memory range, return
  1439  0F08  0604               	xorwf	4,w	;XOR again to restore value
  1440  0F09  2F03               	goto	clrloop0	;do the next byte
  1441                           
  1442                           	psect	cstackCOMMON
  1443  0070                     __pcstackCOMMON:	
  1444  0070                     ?_setLED_Initialization:	
  1445  0070                     ?_setPIRLED_Main:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_Fosc_Set:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_IO_Set:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_TMR1_Set:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_ADC_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_UART_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_WDT_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_TMR1_ISR:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ??_TMR1_ISR:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_UART_ISR:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ??_UART_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Timeout_Counter:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_set_TimeoutCleared:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ??_getch:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_UART_Receive:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_UART_Transmit:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_putch:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_WDT_Clearing:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_myMain_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Lights_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_PIR_Initialization:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_my_MainTimer:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Lights_Main:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_PIR_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_setLights_Initialization:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_setLights_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Lights_Control:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Lights_Close:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_setLights_Line:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_CDS_Initialization:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_CDS_Main:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_LedPointSelect:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_LED_Initialization:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_LED_Main:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_Mcu_Initialization:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_ISR:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_UART_Main:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_WDT_Main:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_setMain_Exception:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_LightsPointSelect:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_getch:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_getAll_Lights_Line:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_getLights_Status:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_getCDS_Status:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_getMain_LightsStatus:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_getMain_All_Error_Status:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583                           
  1584                           ; 1 bytes @ 0x0
  1585  0070                     	ds	1
  1586  0071                     UART_ISR@i:	
  1587                           
  1588                           ; 2 bytes @ 0x1
  1589  0071                     	ds	2
  1590  0073                     ??_ISR:	
  1591                           
  1592                           ; 0 bytes @ 0x3
  1593  0073                     	ds	4
  1594                           
  1595                           	psect	cstackBANK0
  1596  0055                     __pcstackBANK0:	
  1597  0055                     ??_Fosc_Set:	
  1598  0055                     ??_IO_Set:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0055                     ??_TMR1_Set:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0055                     ??_ADC_Set:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0055                     ??_UART_Set:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0055                     ??_WDT_Set:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0055                     ??_Timeout_Counter:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0055                     ??_set_TimeoutCleared:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0055                     ??_UART_Receive:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0055                     ??_putch:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0055                     ??_WDT_Clearing:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0055                     ??_myMain_Initialization:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0055                     ??_my_MainTimer:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0055                     ??_CDS_Initialization:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0055                     ??_CDS_Main:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0055                     ??_getCDS_Status:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0055                     ??_LedPointSelect:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0055                     ??_WDT_Main:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0055                     ??_LightsPointSelect:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0055                     ?_getAD:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0055                     ?___awdiv:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0055                     ?___lwdiv:	
  1659                           ; 2 bytes @ 0x0
  1660                           
  1661  0055                     getCDS_Status@status:	
  1662                           ; 2 bytes @ 0x0
  1663                           
  1664  0055                     getAD@adcon1:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0055                     putch@byte:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0055                     ___awdiv@divisor:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0055                     ___lwdiv@divisor:	
  1674                           ; 2 bytes @ 0x0
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0x0
  1678  0055                     	ds	1
  1679  0056                     ??_getAD:	
  1680  0056                     ??_UART_Transmit:	
  1681                           ; 0 bytes @ 0x1
  1682                           
  1683  0056                     ??_Mcu_Initialization:	
  1684                           ; 0 bytes @ 0x1
  1685                           
  1686  0056                     ??_getMain_All_Error_Status:	
  1687                           ; 0 bytes @ 0x1
  1688                           
  1689  0056                     LedPointSelect@led:	
  1690                           ; 0 bytes @ 0x1
  1691                           
  1692  0056                     getAD@adcon0:	
  1693                           ; 1 bytes @ 0x1
  1694                           
  1695  0056                     LightsPointSelect@lights:	
  1696                           ; 1 bytes @ 0x1
  1697                           
  1698  0056                     UART_Transmit@i:	
  1699                           ; 1 bytes @ 0x1
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x1
  1703  0056                     	ds	1
  1704  0057                     ?_setLED:	
  1705  0057                     ??_getAll_Lights_Line:	
  1706                           ; 0 bytes @ 0x2
  1707                           
  1708  0057                     ?_setLights_Trigger:	
  1709                           ; 0 bytes @ 0x2
  1710                           
  1711  0057                     ??_getLights_Status:	
  1712                           ; 0 bytes @ 0x2
  1713                           
  1714  0057                     ??_setLights_Initialization:	
  1715                           ; 0 bytes @ 0x2
  1716                           
  1717  0057                     ??_Lights_Control:	
  1718                           ; 0 bytes @ 0x2
  1719                           
  1720  0057                     ??_setLights_Line:	
  1721                           ; 0 bytes @ 0x2
  1722                           
  1723  0057                     ?_getCDS_AD:	
  1724                           ; 0 bytes @ 0x2
  1725                           
  1726  0057                     getCDS_AD@channel2:	
  1727                           ; 0 bytes @ 0x2
  1728                           
  1729  0057                     setLED@command:	
  1730                           ; 1 bytes @ 0x2
  1731                           
  1732  0057                     getMain_All_Error_Status@command:	
  1733                           ; 1 bytes @ 0x2
  1734                           
  1735  0057                     setLights_Initialization@lights:	
  1736                           ; 1 bytes @ 0x2
  1737                           
  1738  0057                     getLights_Status@lights:	
  1739                           ; 1 bytes @ 0x2
  1740                           
  1741  0057                     setLights_Trigger@command:	
  1742                           ; 1 bytes @ 0x2
  1743                           
  1744  0057                     setLights_Line@lights:	
  1745                           ; 1 bytes @ 0x2
  1746                           
  1747  0057                     getAll_Lights_Line@line:	
  1748                           ; 1 bytes @ 0x2
  1749                           
  1750  0057                     ___awdiv@dividend:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753  0057                     ___lwdiv@dividend:	
  1754                           ; 2 bytes @ 0x2
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0x2
  1758  0057                     	ds	1
  1759  0058                     ??_setLED:	
  1760  0058                     ??_Lights_Initialization:	
  1761                           ; 0 bytes @ 0x3
  1762                           
  1763  0058                     ??_setLights_Trigger:	
  1764                           ; 0 bytes @ 0x3
  1765                           
  1766  0058                     ?_setLights:	
  1767                           ; 0 bytes @ 0x3
  1768                           
  1769  0058                     ??_getCDS_AD:	
  1770                           ; 0 bytes @ 0x3
  1771                           
  1772  0058                     ??_UART_Main:	
  1773                           ; 0 bytes @ 0x3
  1774                           
  1775  0058                     setLED@led:	
  1776                           ; 0 bytes @ 0x3
  1777                           
  1778  0058                     setLights@status:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781  0058                     getLights_Status@status:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784  0058                     _getMain_All_Error_Status$2037:	
  1785                           ; 1 bytes @ 0x3
  1786                           
  1787                           
  1788                           ; 2 bytes @ 0x3
  1789  0058                     	ds	1
  1790  0059                     ??_setLED_Initialization:	
  1791  0059                     ??_setPIRLED_Main:	
  1792                           ; 0 bytes @ 0x4
  1793                           
  1794  0059                     ??_PIR_Initialization:	
  1795                           ; 0 bytes @ 0x4
  1796                           
  1797  0059                     ??_setLights:	
  1798                           ; 0 bytes @ 0x4
  1799                           
  1800  0059                     ??_getMain_LightsStatus:	
  1801                           ; 0 bytes @ 0x4
  1802                           
  1803  0059                     ??___awdiv:	
  1804                           ; 0 bytes @ 0x4
  1805                           
  1806  0059                     ??___lwdiv:	
  1807                           ; 0 bytes @ 0x4
  1808                           
  1809  0059                     setLED_Initialization@led:	
  1810                           ; 0 bytes @ 0x4
  1811                           
  1812  0059                     Lights_Control@lights:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815  0059                     setLights_Trigger@lights:	
  1816                           ; 1 bytes @ 0x4
  1817                           
  1818                           
  1819                           ; 1 bytes @ 0x4
  1820  0059                     	ds	1
  1821  005A                     ??_LED_Initialization:	
  1822  005A                     ??_setMain_Exception:	
  1823                           ; 0 bytes @ 0x5
  1824                           
  1825  005A                     getCDS_AD@i:	
  1826                           ; 0 bytes @ 0x5
  1827                           
  1828  005A                     setPIRLED_Main@count:	
  1829                           ; 1 bytes @ 0x5
  1830                           
  1831  005A                     getMain_LightsStatus@count:	
  1832                           ; 1 bytes @ 0x5
  1833                           
  1834  005A                     getMain_All_Error_Status@status:	
  1835                           ; 1 bytes @ 0x5
  1836                           
  1837  005A                     setLights@lights:	
  1838                           ; 1 bytes @ 0x5
  1839                           
  1840  005A                     ___awdiv@counter:	
  1841                           ; 1 bytes @ 0x5
  1842                           
  1843  005A                     ___lwdiv@quotient:	
  1844                           ; 1 bytes @ 0x5
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x5
  1848  005A                     	ds	1
  1849  005B                     ??_setLights_Main:	
  1850  005B                     ??_LED_Main:	
  1851                           ; 0 bytes @ 0x6
  1852                           
  1853  005B                     getCDS_AD@j:	
  1854                           ; 0 bytes @ 0x6
  1855                           
  1856  005B                     setLights_Main@lights:	
  1857                           ; 1 bytes @ 0x6
  1858                           
  1859  005B                     ___awdiv@sign:	
  1860                           ; 1 bytes @ 0x6
  1861                           
  1862  005B                     getMain_LightsStatus@i:	
  1863                           ; 1 bytes @ 0x6
  1864                           
  1865                           
  1866                           ; 2 bytes @ 0x6
  1867  005B                     	ds	1
  1868  005C                     getCDS_AD@channel1:	
  1869  005C                     setMain_Exception@buz:	
  1870                           ; 1 bytes @ 0x7
  1871                           
  1872  005C                     ___lwdiv@counter:	
  1873                           ; 1 bytes @ 0x7
  1874                           
  1875  005C                     ___awdiv@quotient:	
  1876                           ; 1 bytes @ 0x7
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0x7
  1880  005C                     	ds	1
  1881  005D                     setMain_Exception@status:	
  1882  005D                     getMain_LightsStatus@status:	
  1883                           ; 1 bytes @ 0x8
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x8
  1887  005D                     	ds	1
  1888  005E                     ?_getPIR_AD:	
  1889  005E                     ??_Lights_Close:	
  1890                           ; 0 bytes @ 0x9
  1891                           
  1892  005E                     getPIR_AD@channel2:	
  1893                           ; 0 bytes @ 0x9
  1894                           
  1895  005E                     _setMain_Exception$2026:	
  1896                           ; 1 bytes @ 0x9
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x9
  1900  005E                     	ds	1
  1901  005F                     ??_getPIR_AD:	
  1902  005F                     ??_Lights_Main:	
  1903                           ; 0 bytes @ 0xA
  1904                           
  1905                           
  1906                           ; 0 bytes @ 0xA
  1907  005F                     	ds	1
  1908  0060                     setMain_Exception@command:	
  1909                           
  1910                           ; 1 bytes @ 0xB
  1911  0060                     	ds	1
  1912  0061                     ??_PIR_Main:	
  1913                           
  1914                           ; 0 bytes @ 0xC
  1915  0061                     	ds	1
  1916  0062                     getPIR_AD@j:	
  1917                           
  1918                           ; 1 bytes @ 0xD
  1919  0062                     	ds	1
  1920  0063                     getPIR_AD@channel1:	
  1921                           
  1922                           ; 1 bytes @ 0xE
  1923  0063                     	ds	1
  1924  0064                     getPIR_AD@i:	
  1925                           
  1926                           ; 1 bytes @ 0xF
  1927  0064                     	ds	2
  1928  0066                     _PIR_Main$2644:	
  1929                           
  1930                           ; 2 bytes @ 0x11
  1931  0066                     	ds	2
  1932  0068                     PIR_Main@error:	
  1933                           
  1934                           ; 1 bytes @ 0x13
  1935  0068                     	ds	1
  1936  0069                     ?_main:	
  1937  0069                     main@argc:	
  1938                           ; 2 bytes @ 0x14
  1939                           
  1940                           
  1941                           ; 2 bytes @ 0x14
  1942  0069                     	ds	2
  1943  006B                     main@argv:	
  1944                           
  1945                           ; 2 bytes @ 0x16
  1946  006B                     	ds	2
  1947  006D                     ??_main:	
  1948                           
  1949                           ; 0 bytes @ 0x18
  1950  006D                     	ds	1
  1951                           
  1952                           	psect	maintext
  1953  053D                     __pmaintext:	
  1954 ;;
  1955 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1956 ;;
  1957 ;; *************** function _main *****************
  1958 ;; Defined at:
  1959 ;;		line 7 in file "../src/Main_B1.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  argc            2   20[BANK0 ] int 
  1962 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2   20[BANK0 ] int 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 17F/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1974 ;;      Params:         0       4       0       0
  1975 ;;      Locals:         0       0       0       0
  1976 ;;      Temps:          0       1       0       0
  1977 ;;      Totals:         0       5       0       0
  1978 ;;Total ram usage:        5 bytes
  1979 ;; Hardware stack levels required when called:    8
  1980 ;; This function calls:
  1981 ;;		_CDS_Initialization
  1982 ;;		_CDS_Main
  1983 ;;		_LED_Initialization
  1984 ;;		_LED_Main
  1985 ;;		_Lights_Initialization
  1986 ;;		_Lights_Main
  1987 ;;		_Mcu_Initialization
  1988 ;;		_PIR_Initialization
  1989 ;;		_PIR_Main
  1990 ;;		_UART_Main
  1991 ;;		_WDT_Main
  1992 ;;		_getCDS_AD
  1993 ;;		_getPIR_AD
  1994 ;;		_myMain_Initialization
  1995 ;;		_my_MainTimer
  1996 ;; This function is called by:
  1997 ;;		Startup code after reset
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _main
  2003  053D                     _main:	
  2004                           
  2005                           ;Main_B1.c: 8: myMain_Initialization();
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2009  053D  118A  27FF  118A   	fcall	_myMain_Initialization
  2010                           
  2011                           ;Main_B1.c: 9: Mcu_Initialization();
  2012  0540  158A  279E  118A   	fcall	_Mcu_Initialization
  2013                           
  2014                           ;Main_B1.c: 10: ;;
  2015                           ;Main_B1.c: 11: LED_Initialization();
  2016  0543  158A  2715  118A   	fcall	_LED_Initialization
  2017                           
  2018                           ;Main_B1.c: 12: ;;
  2019                           ;Main_B1.c: 14: ;;
  2020                           ;Main_B1.c: 15: ;;
  2021                           ;Main_B1.c: 16: ;;
  2022                           ;Main_B1.c: 17: ;;
  2023                           ;Main_B1.c: 18: ;;
  2024                           ;Main_B1.c: 20: ;;
  2025                           ;Main_B1.c: 21: Lights_Initialization();
  2026  0546  158A  26CB  118A   	fcall	_Lights_Initialization
  2027                           
  2028                           ;Main_B1.c: 22: CDS_Initialization();
  2029  0549  158A  26C7  118A   	fcall	_CDS_Initialization
  2030                           
  2031                           ;Main_B1.c: 23: PIR_Initialization();
  2032  054C  158A  27C3  118A   	fcall	_PIR_Initialization
  2033                           
  2034                           ;Main_B1.c: 24: ;;
  2035                           ;Main_B1.c: 25: ;;
  2036                           ;Main_B1.c: 26: __nop();
  2037  054F  0000               	nop
  2038  0550                     l3971:	
  2039                           ;Main_B1.c: 27: ;;
  2040                           ;Main_B1.c: 28: ;;
  2041                           ;Main_B1.c: 30: while (1) {
  2042                           
  2043                           
  2044                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2045  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0552  1C20               	btfss	_myMain,0
  2048  0553  2D66               	goto	l3977
  2049                           
  2050                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2051  0554  3031               	movlw	49
  2052  0555  00ED               	movwf	??_main
  2053  0556  086D               	movf	??_main,w
  2054  0557  00D7               	movwf	getCDS_AD@channel2
  2055  0558  3009               	movlw	9
  2056  0559  118A  269E  118A   	fcall	_getCDS_AD
  2057                           
  2058                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2059  055C  300D               	movlw	13
  2060  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2061  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2062  055F  00ED               	movwf	??_main
  2063  0560  086D               	movf	??_main,w
  2064  0561  00DE               	movwf	getPIR_AD@channel2
  2065  0562  3005               	movlw	5
  2066  0563  118A  221A  118A   	fcall	_getPIR_AD
  2067  0566                     l3977:	
  2068                           
  2069                           ;Main_B1.c: 57: }
  2070                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2071  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0568  1C30               	btfss	_Timer1,0
  2074  0569  2D50               	goto	l3971
  2075                           
  2076                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2077  056A  1030               	bcf	_Timer1,0
  2078                           
  2079                           ;Main_B1.c: 95: my_MainTimer();
  2080  056B  118A  26F0  118A   	fcall	_my_MainTimer
  2081                           
  2082                           ;Main_B1.c: 96: WDT_Main();
  2083  056E  158A  277B  118A   	fcall	_WDT_Main
  2084                           
  2085                           ;Main_B1.c: 97: ;;
  2086                           ;Main_B1.c: 98: UART_Main();
  2087  0571  158A  274B  118A   	fcall	_UART_Main
  2088                           
  2089                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  2090  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0576  1C20               	btfss	_myMain,0
  2093  0577  2D50               	goto	l3971
  2094                           
  2095                           ;Main_B1.c: 100: ;;
  2096                           ;Main_B1.c: 102: LED_Main();
  2097  0578  158A  26C4  118A   	fcall	_LED_Main
  2098                           
  2099                           ;Main_B1.c: 103: ;;
  2100                           ;Main_B1.c: 105: ;;
  2101                           ;Main_B1.c: 106: ;;
  2102                           ;Main_B1.c: 107: ;;
  2103                           ;Main_B1.c: 108: ;;
  2104                           ;Main_B1.c: 110: Lights_Main();
  2105  057B  158A  270A  118A   	fcall	_Lights_Main
  2106                           
  2107                           ;Main_B1.c: 111: ;;
  2108                           ;Main_B1.c: 112: ;;
  2109                           ;Main_B1.c: 113: CDS_Main();
  2110  057E  118A  2639  118A   	fcall	_CDS_Main
  2111                           
  2112                           ;Main_B1.c: 114: PIR_Main();
  2113  0581  118A  2025  118A   	fcall	_PIR_Main
  2114                           
  2115                           ;Main_B1.c: 116: ;;
  2116                           ;Main_B1.c: 117: ;;
  2117                           ;Main_B1.c: 118: ;;
  2118                           ;Main_B1.c: 119: ;;
  2119  0584  2D50               	goto	l3971
  2120  0585                     __end_of_main:	
  2121                           ;Main_B1.c: 126: }
  2122                           ;Main_B1.c: 127: }
  2123                           ;Main_B1.c: 161: }
  2124                           ;Main_B1.c: 162: return (0);
  2125                           ;	Return value of _main is never used
  2126                           
  2127                           
  2128                           	psect	text1
  2129  06F0                     __ptext1:	
  2130 ;; *************** function _my_MainTimer *****************
  2131 ;; Defined at:
  2132 ;;		line 181 in file "../src/Main_B1.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;		None               void
  2139 ;; Registers used:
  2140 ;;		wreg, status,2
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2146 ;;      Params:         0       0       0       0
  2147 ;;      Locals:         0       0       0       0
  2148 ;;      Temps:          0       0       0       0
  2149 ;;      Totals:         0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _my_MainTimer
  2162  06F0                     _my_MainTimer:	
  2163                           
  2164                           ;Main_B1.c: 183: if (myMain.PowerON == 0) {
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _my_MainTimer: [wreg+status,2]
  2168  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2169  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2170  06F2  1820               	btfsc	_myMain,0
  2171  06F3  2F04               	goto	l3787
  2172                           
  2173                           ;Main_B1.c: 184: myMain.PowerCount++;
  2174  06F4  3001               	movlw	1
  2175  06F5  07A1               	addwf	_myMain+1,f
  2176  06F6  1803               	skipnc
  2177  06F7  0AA2               	incf	_myMain+2,f
  2178  06F8  3000               	movlw	0
  2179  06F9  07A2               	addwf	_myMain+2,f
  2180                           
  2181                           ;Main_B1.c: 185: if (myMain.PowerCount == 150)
  2182  06FA  3096               	movlw	150
  2183  06FB  0621               	xorwf	_myMain+1,w
  2184  06FC  0422               	iorwf	_myMain+2,w
  2185  06FD  1D03               	skipz
  2186  06FE  0008               	return
  2187                           
  2188                           ;Main_B1.c: 186: {
  2189                           ;Main_B1.c: 187: myMain.PowerCount = 0;
  2190  06FF  01A1               	clrf	_myMain+1
  2191  0700  01A2               	clrf	_myMain+2
  2192                           
  2193                           ;Main_B1.c: 188: myMain.PowerON = 1;
  2194  0701  1420               	bsf	_myMain,0
  2195                           
  2196                           ;Main_B1.c: 193: ;;
  2197                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2198  0702  1620               	bsf	_myMain,4
  2199                           
  2200                           ;Main_B1.c: 203: }
  2201                           ;Main_B1.c: 204: } else {
  2202  0703  0008               	return
  2203  0704                     l3787:	
  2204                           
  2205                           ;Main_B1.c: 205: myMain.PowerCount++;
  2206  0704  3001               	movlw	1
  2207  0705  07A1               	addwf	_myMain+1,f
  2208  0706  1803               	skipnc
  2209  0707  0AA2               	incf	_myMain+2,f
  2210  0708  3000               	movlw	0
  2211  0709  07A2               	addwf	_myMain+2,f
  2212                           
  2213                           ;Main_B1.c: 206: if (myMain.PowerCount == 100) {
  2214  070A  3064               	movlw	100
  2215  070B  0621               	xorwf	_myMain+1,w
  2216  070C  0422               	iorwf	_myMain+2,w
  2217  070D  1D03               	skipz
  2218  070E  0008               	return
  2219                           
  2220                           ;Main_B1.c: 207: myMain.PowerCount = 0;
  2221  070F  01A1               	clrf	_myMain+1
  2222  0710  01A2               	clrf	_myMain+2
  2223  0711  0008               	return
  2224  0712                     __end_of_my_MainTimer:	
  2225                           
  2226                           	psect	text2
  2227  07FF                     __ptext2:	
  2228 ;; *************** function _myMain_Initialization *****************
  2229 ;; Defined at:
  2230 ;;		line 168 in file "../src/Main_B1.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		None
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2244 ;;      Params:         0       0       0       0
  2245 ;;      Locals:         0       0       0       0
  2246 ;;      Temps:          0       0       0       0
  2247 ;;      Totals:         0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    3
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _myMain_Initialization
  2260  07FF                     _myMain_Initialization:	
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _myMain_Initialization: []
  2264  07FF  0008               	return
  2265  0800                     __end_of_myMain_Initialization:	
  2266                           
  2267                           	psect	text3
  2268  021A                     __ptext3:	
  2269 ;; *************** function _getPIR_AD *****************
  2270 ;; Defined at:
  2271 ;;		line 167 in file "../src/PIR_B1.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  channel1        1    wreg     unsigned char 
  2274 ;;  channel2        1    9[BANK0 ] unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  channel1        1   14[BANK0 ] unsigned char 
  2277 ;;  i               1   15[BANK0 ] unsigned char 
  2278 ;;  j               1   13[BANK0 ] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2288 ;;      Params:         0       1       0       0
  2289 ;;      Locals:         0       3       0       0
  2290 ;;      Temps:          0       3       0       0
  2291 ;;      Totals:         0       7       0       0
  2292 ;;Total ram usage:        7 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    5
  2295 ;; This function calls:
  2296 ;;		___awdiv
  2297 ;;		___lwdiv
  2298 ;;		_getAD
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _getPIR_AD
  2306  021A                     _getPIR_AD:	
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2310                           ;getPIR_AD@channel1 stored from wreg
  2311  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2312  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2313  021C  00E3               	movwf	getPIR_AD@channel1
  2314                           
  2315                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2316  021D  01E4               	clrf	getPIR_AD@i
  2317  021E  01E2               	clrf	getPIR_AD@j
  2318                           
  2319                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2320  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0221  1CA0               	btfss	__PIR^(0+128),1
  2323  0222  0008               	return
  2324                           
  2325                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2326  0223  1520               	bsf	__PIR^(0+128),2
  2327                           
  2328                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2329  0224  3070               	movlw	112
  2330  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0227  00DF               	movwf	??_getPIR_AD
  2333  0228  085F               	movf	??_getPIR_AD,w
  2334  0229  00D5               	movwf	getAD@adcon1
  2335  022A  0863               	movf	getPIR_AD@channel1,w
  2336  022B  118A  2756  118A   	fcall	_getAD
  2337  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2338  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0230  00E0               	movwf	??_getPIR_AD+1
  2340  0231  0860               	movf	??_getPIR_AD+1,w
  2341  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2343  0234  00A2               	movwf	(__PIR^(0+128)+2)
  2344                           
  2345                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2346  0235  3033               	movlw	51
  2347  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0238  00D5               	movwf	___awdiv@divisor
  2350  0239  3000               	movlw	0
  2351  023A  00D6               	movwf	___awdiv@divisor+1
  2352  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2353  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2354  023D  0822               	movf	(__PIR^(0+128)+2),w
  2355  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2356  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0240  00DF               	movwf	??_getPIR_AD
  2358  0241  01E0               	clrf	??_getPIR_AD+1
  2359  0242  085F               	movf	??_getPIR_AD,w
  2360  0243  00D7               	movwf	___awdiv@dividend
  2361  0244  0860               	movf	??_getPIR_AD+1,w
  2362  0245  00D8               	movwf	___awdiv@dividend+1
  2363  0246  118A  2436  118A   	fcall	___awdiv
  2364  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2365  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2366  024B  0855               	movf	?___awdiv,w
  2367  024C  00E1               	movwf	??_getPIR_AD+2
  2368  024D  0861               	movf	??_getPIR_AD+2,w
  2369  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2370  024F  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0250  00A3               	movwf	(__PIR^(0+128)+3)
  2372                           
  2373                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2374  0251  0822               	movf	(__PIR^(0+128)+2),w
  2375  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0254  00DF               	movwf	??_getPIR_AD
  2378  0255  085F               	movf	??_getPIR_AD,w
  2379  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0258  00A4               	movwf	(__PIR^(0+128)+4)
  2382                           
  2383                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2384  0259  3070               	movlw	112
  2385  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2386  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2387  025C  00DF               	movwf	??_getPIR_AD
  2388  025D  085F               	movf	??_getPIR_AD,w
  2389  025E  00D5               	movwf	getAD@adcon1
  2390  025F  085E               	movf	getPIR_AD@channel2,w
  2391  0260  118A  2756  118A   	fcall	_getAD
  2392  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0265  00E0               	movwf	??_getPIR_AD+1
  2395  0266  0860               	movf	??_getPIR_AD+1,w
  2396  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0269  00A2               	movwf	(__PIR^(0+128)+2)
  2399                           
  2400                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2401  026A  0822               	movf	(__PIR^(0+128)+2),w
  2402  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2403  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2404  026D  00DF               	movwf	??_getPIR_AD
  2405  026E  085F               	movf	??_getPIR_AD,w
  2406  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0271  00A1               	movwf	(__PIR^(0+128)+1)
  2409                           
  2410                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2411  0272  2A8E               	goto	l3729
  2412  0273                     l3713:	
  2413                           ;PIR_B1.c: 179: case 0:
  2414                           
  2415                           
  2416                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2417  0273  300A               	movlw	10
  2418  0274  0224               	subwf	(__PIR^(0+128)+4),w
  2419  0275  1803               	skipnc
  2420  0276  2A79               	goto	l3717
  2421                           
  2422                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2423  0277  3005               	movlw	5
  2424  0278  2A7A               	goto	L1
  2425  0279                     l3717:	
  2426                           ;PIR_B1.c: 182: } else {
  2427                           
  2428                           
  2429                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2430  0279  303C               	movlw	60
  2431  027A                     L1:	
  2432  027A  00C7               	movwf	(__PIR^(0+128)+39)
  2433  027B  3000               	movlw	0
  2434  027C  2A8C               	goto	L5
  2435  027D                     l3719:	
  2436                           ;PIR_B1.c: 186: case 1:
  2437                           
  2438                           ;PIR_B1.c: 184: }
  2439                           ;PIR_B1.c: 185: break;
  2440                           
  2441                           
  2442                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2443  027D  302C               	movlw	44
  2444  027E  00C7               	movwf	(__PIR^(0+128)+39)
  2445  027F  3001               	movlw	1
  2446  0280  2A8C               	goto	L5
  2447  0281                     l3721:	
  2448                           ;PIR_B1.c: 189: case 2:
  2449                           
  2450                           ;PIR_B1.c: 188: break;
  2451                           
  2452                           
  2453                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2454  0281  3058               	movlw	88
  2455  0282  00C7               	movwf	(__PIR^(0+128)+39)
  2456  0283  3002               	movlw	2
  2457  0284  2A8C               	goto	L5
  2458  0285                     l3723:	
  2459                           ;PIR_B1.c: 192: case 3:
  2460                           
  2461                           ;PIR_B1.c: 191: break;
  2462                           
  2463                           
  2464                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2465  0285  3084               	movlw	132
  2466  0286  00C7               	movwf	(__PIR^(0+128)+39)
  2467  0287  3003               	movlw	3
  2468  0288  2A8C               	goto	L5
  2469  0289                     l3725:	
  2470                           ;PIR_B1.c: 195: case 4:
  2471                           
  2472                           ;PIR_B1.c: 194: break;
  2473                           
  2474                           
  2475                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2476  0289  30B0               	movlw	176
  2477  028A  00C7               	movwf	(__PIR^(0+128)+39)
  2478  028B  3004               	movlw	4
  2479  028C                     L5:	
  2480  028C  00C8               	movwf	(__PIR^(0+128)+40)
  2481                           
  2482                           ;PIR_B1.c: 198: }
  2483                           
  2484                           ;PIR_B1.c: 197: break;
  2485  028D  2A9F               	goto	l3731
  2486  028E                     l3729:	
  2487  028E  0823               	movf	(__PIR^(0+128)+3),w
  2488                           
  2489                           ; Switch size 1, requested type "space"
  2490                           ; Number of cases is 5, Range of values is 0 to 4
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           16     9 (average)
  2494                           ; direct_byte           17     7 (fixed)
  2495                           ; jumptable            260     6 (fixed)
  2496                           ;	Chosen strategy is simple_byte
  2497  028F  3A00               	xorlw	0	; case 0
  2498  0290  1903               	skipnz
  2499  0291  2A73               	goto	l3713
  2500  0292  3A01               	xorlw	1	; case 1
  2501  0293  1903               	skipnz
  2502  0294  2A7D               	goto	l3719
  2503  0295  3A03               	xorlw	3	; case 2
  2504  0296  1903               	skipnz
  2505  0297  2A81               	goto	l3721
  2506  0298  3A01               	xorlw	1	; case 3
  2507  0299  1903               	skipnz
  2508  029A  2A85               	goto	l3723
  2509  029B  3A07               	xorlw	7	; case 4
  2510  029C  1903               	skipnz
  2511  029D  2A89               	goto	l3725
  2512  029E  2A9F               	goto	l3731
  2513  029F                     l3731:	
  2514                           
  2515                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2516  029F  0821               	movf	(__PIR^(0+128)+1),w
  2517  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2518  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2519  02A2  00DF               	movwf	??_getPIR_AD
  2520  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2521  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2522  02A5  0827               	movf	(__PIR^(0+128)+7),w
  2523  02A6  3EA8               	addlw	(__PIR+8)& (0+255)
  2524  02A7  0084               	movwf	4
  2525  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2526  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2527  02AA  085F               	movf	??_getPIR_AD,w
  2528  02AB  1383               	bcf	3,7	;select IRP bank1
  2529  02AC  0080               	movwf	0
  2530                           
  2531                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2532  02AD  01E4               	clrf	getPIR_AD@i
  2533  02AE  300A               	movlw	10
  2534  02AF  0264               	subwf	getPIR_AD@i,w
  2535  02B0  1803               	btfsc	3,0
  2536  02B1  2ACE               	goto	l3745
  2537  02B2                     l3739:	
  2538                           
  2539                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2540  02B2  0864               	movf	getPIR_AD@i,w
  2541  02B3  3EA8               	addlw	(__PIR+8)& (0+255)
  2542  02B4  0084               	movwf	4
  2543  02B5  0800               	movf	0,w
  2544  02B6  00DF               	movwf	??_getPIR_AD
  2545  02B7  01E0               	clrf	??_getPIR_AD+1
  2546  02B8  085F               	movf	??_getPIR_AD,w
  2547  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2548  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2549  02BB  07B2               	addwf	(__PIR^(0+128)+18),f
  2550  02BC  1803               	skipnc
  2551  02BD  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2552  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2553  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2554  02C0  0860               	movf	??_getPIR_AD+1,w
  2555  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2556  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2557  02C3  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2558  02C4  3001               	movlw	1
  2559  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02C7  00DF               	movwf	??_getPIR_AD
  2562  02C8  085F               	movf	??_getPIR_AD,w
  2563  02C9  07E4               	addwf	getPIR_AD@i,f
  2564  02CA  300A               	movlw	10
  2565  02CB  0264               	subwf	getPIR_AD@i,w
  2566  02CC  1C03               	skipc
  2567  02CD  2AB2               	goto	l3739
  2568  02CE                     l3745:	
  2569                           
  2570                           ;PIR_B1.c: 204: }
  2571                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2572  02CE  300A               	movlw	10
  2573  02CF  00D5               	movwf	___lwdiv@divisor
  2574  02D0  3000               	movlw	0
  2575  02D1  00D6               	movwf	___lwdiv@divisor+1
  2576  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2577  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2578  02D4  0833               	movf	((__PIR+1)^(0+128)+18),w
  2579  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2580  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2581  02D7  01D8               	clrf	___lwdiv@dividend+1
  2582  02D8  07D8               	addwf	___lwdiv@dividend+1,f
  2583  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2584  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2585  02DB  0832               	movf	(__PIR^(0+128)+18),w
  2586  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2587  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2588  02DE  01D7               	clrf	___lwdiv@dividend
  2589  02DF  07D7               	addwf	___lwdiv@dividend,f
  2590  02E0  118A  2585  118A   	fcall	___lwdiv
  2591  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2592  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2593  02E5  0855               	movf	?___lwdiv,w
  2594  02E6  00DF               	movwf	??_getPIR_AD
  2595  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2596  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2597  02E9  0834               	movf	(__PIR^(0+128)+20),w
  2598  02EA  3EB5               	addlw	(__PIR+21)& (0+255)
  2599  02EB  0084               	movwf	4
  2600  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2601  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2602  02EE  085F               	movf	??_getPIR_AD,w
  2603  02EF  1383               	bcf	3,7	;select IRP bank1
  2604  02F0  0080               	movwf	0
  2605                           
  2606                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2607  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2608  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2609  02F3  01B2               	clrf	(__PIR^(0+128)+18)
  2610  02F4  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2611                           
  2612                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2613  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02F7  01E4               	clrf	getPIR_AD@i
  2616  02F8  300A               	movlw	10
  2617  02F9  0264               	subwf	getPIR_AD@i,w
  2618  02FA  1803               	btfsc	3,0
  2619  02FB  2B18               	goto	l3761
  2620  02FC                     l3755:	
  2621                           
  2622                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2623  02FC  0864               	movf	getPIR_AD@i,w
  2624  02FD  3EB5               	addlw	(__PIR+21)& (0+255)
  2625  02FE  0084               	movwf	4
  2626  02FF  0800               	movf	0,w
  2627  0300  00DF               	movwf	??_getPIR_AD
  2628  0301  01E0               	clrf	??_getPIR_AD+1
  2629  0302  085F               	movf	??_getPIR_AD,w
  2630  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0305  07BF               	addwf	(__PIR^(0+128)+31),f
  2633  0306  1803               	skipnc
  2634  0307  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2635  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2637  030A  0860               	movf	??_getPIR_AD+1,w
  2638  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2639  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2640  030D  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2641  030E  3001               	movlw	1
  2642  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0311  00DF               	movwf	??_getPIR_AD
  2645  0312  085F               	movf	??_getPIR_AD,w
  2646  0313  07E4               	addwf	getPIR_AD@i,f
  2647  0314  300A               	movlw	10
  2648  0315  0264               	subwf	getPIR_AD@i,w
  2649  0316  1C03               	skipc
  2650  0317  2AFC               	goto	l3755
  2651  0318                     l3761:	
  2652                           
  2653                           ;PIR_B1.c: 210: }
  2654                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2655  0318  300A               	movlw	10
  2656  0319  00D5               	movwf	___lwdiv@divisor
  2657  031A  3000               	movlw	0
  2658  031B  00D6               	movwf	___lwdiv@divisor+1
  2659  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2660  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2661  031E  0840               	movf	((__PIR+1)^(0+128)+31),w
  2662  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0321  01D8               	clrf	___lwdiv@dividend+1
  2665  0322  07D8               	addwf	___lwdiv@dividend+1,f
  2666  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0325  083F               	movf	(__PIR^(0+128)+31),w
  2669  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0328  01D7               	clrf	___lwdiv@dividend
  2672  0329  07D7               	addwf	___lwdiv@dividend,f
  2673  032A  118A  2585  118A   	fcall	___lwdiv
  2674  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2675  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2676  032F  0855               	movf	?___lwdiv,w
  2677  0330  00DF               	movwf	??_getPIR_AD
  2678  0331  085F               	movf	??_getPIR_AD,w
  2679  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2681  0334  00A6               	movwf	(__PIR^(0+128)+6)
  2682                           
  2683                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2684  0335  01BF               	clrf	(__PIR^(0+128)+31)
  2685  0336  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2686                           
  2687                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2688  0337  300A               	movlw	10
  2689  0338  0227               	subwf	(__PIR^(0+128)+7),w
  2690  0339  1803               	skipnc
  2691  033A  2B44               	goto	l3769
  2692                           
  2693                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2694  033B  3001               	movlw	1
  2695  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2696  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2697  033E  00DF               	movwf	??_getPIR_AD
  2698  033F  085F               	movf	??_getPIR_AD,w
  2699  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0342  07A7               	addwf	(__PIR^(0+128)+7),f
  2702                           
  2703                           ;PIR_B1.c: 216: } else {
  2704  0343  0008               	return
  2705  0344                     l3769:	
  2706                           
  2707                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2708  0344  01A7               	clrf	(__PIR^(0+128)+7)
  2709                           
  2710                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2711  0345  300A               	movlw	10
  2712  0346  0234               	subwf	(__PIR^(0+128)+20),w
  2713  0347  1803               	skipnc
  2714  0348  2B52               	goto	l3775
  2715                           
  2716                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2717  0349  3001               	movlw	1
  2718  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2719  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2720  034C  00DF               	movwf	??_getPIR_AD
  2721  034D  085F               	movf	??_getPIR_AD,w
  2722  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2723  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0350  07B4               	addwf	(__PIR^(0+128)+20),f
  2725  0351  0008               	return
  2726  0352                     l3775:	
  2727                           
  2728                           ;PIR_B1.c: 220: else
  2729                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  2730  0352  01B4               	clrf	(__PIR^(0+128)+20)
  2731  0353  0008               	return
  2732  0354                     __end_of_getPIR_AD:	
  2733                           
  2734                           	psect	text4
  2735  0585                     __ptext4:	
  2736 ;; *************** function ___lwdiv *****************
  2737 ;; Defined at:
  2738 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         2    0[BANK0 ] unsigned int 
  2741 ;;  dividend        2    2[BANK0 ] unsigned int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  quotient        2    5[BANK0 ] unsigned int 
  2744 ;;  counter         1    7[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    0[BANK0 ] unsigned int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2754 ;;      Params:         0       4       0       0
  2755 ;;      Locals:         0       3       0       0
  2756 ;;      Temps:          0       1       0       0
  2757 ;;      Totals:         0       8       0       0
  2758 ;;Total ram usage:        8 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    3
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_getPIR_AD
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___lwdiv
  2770  0585                     ___lwdiv:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2774  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0587  01DA               	clrf	___lwdiv@quotient
  2777  0588  01DB               	clrf	___lwdiv@quotient+1
  2778  0589  0856               	movf	___lwdiv@divisor+1,w
  2779  058A  0455               	iorwf	___lwdiv@divisor,w
  2780  058B  1903               	skipnz
  2781  058C  2DBE               	goto	l2867
  2782  058D  01DC               	clrf	___lwdiv@counter
  2783  058E  0ADC               	incf	___lwdiv@counter,f
  2784  058F                     l2855:	
  2785  058F  1BD6               	btfsc	___lwdiv@divisor+1,7
  2786  0590  2D9D               	goto	l2857
  2787  0591  3001               	movlw	1
  2788  0592                     u2365:	
  2789  0592  1003               	clrc
  2790  0593  0DD5               	rlf	___lwdiv@divisor,f
  2791  0594  0DD6               	rlf	___lwdiv@divisor+1,f
  2792  0595  3EFF               	addlw	-1
  2793  0596  1D03               	skipz
  2794  0597  2D92               	goto	u2365
  2795  0598  3001               	movlw	1
  2796  0599  00D9               	movwf	??___lwdiv
  2797  059A  0859               	movf	??___lwdiv,w
  2798  059B  07DC               	addwf	___lwdiv@counter,f
  2799  059C  2D8F               	goto	l2855
  2800  059D                     l2857:	
  2801  059D  3001               	movlw	1
  2802  059E                     u2385:	
  2803  059E  1003               	clrc
  2804  059F  0DDA               	rlf	___lwdiv@quotient,f
  2805  05A0  0DDB               	rlf	___lwdiv@quotient+1,f
  2806  05A1  3EFF               	addlw	-1
  2807  05A2  1D03               	skipz
  2808  05A3  2D9E               	goto	u2385
  2809  05A4  0856               	movf	___lwdiv@divisor+1,w
  2810  05A5  0258               	subwf	___lwdiv@dividend+1,w
  2811  05A6  1D03               	skipz
  2812  05A7  2DAA               	goto	u2395
  2813  05A8  0855               	movf	___lwdiv@divisor,w
  2814  05A9  0257               	subwf	___lwdiv@dividend,w
  2815  05AA                     u2395:	
  2816  05AA  1C03               	skipc
  2817  05AB  2DB3               	goto	l2863
  2818  05AC  0855               	movf	___lwdiv@divisor,w
  2819  05AD  02D7               	subwf	___lwdiv@dividend,f
  2820  05AE  0856               	movf	___lwdiv@divisor+1,w
  2821  05AF  1C03               	skipc
  2822  05B0  03D8               	decf	___lwdiv@dividend+1,f
  2823  05B1  02D8               	subwf	___lwdiv@dividend+1,f
  2824  05B2  145A               	bsf	___lwdiv@quotient,0
  2825  05B3                     l2863:	
  2826  05B3  3001               	movlw	1
  2827  05B4                     u2405:	
  2828  05B4  1003               	clrc
  2829  05B5  0CD6               	rrf	___lwdiv@divisor+1,f
  2830  05B6  0CD5               	rrf	___lwdiv@divisor,f
  2831  05B7  3EFF               	addlw	-1
  2832  05B8  1D03               	skipz
  2833  05B9  2DB4               	goto	u2405
  2834  05BA  3001               	movlw	1
  2835  05BB  02DC               	subwf	___lwdiv@counter,f
  2836  05BC  1D03               	btfss	3,2
  2837  05BD  2D9D               	goto	l2857
  2838  05BE                     l2867:	
  2839  05BE  085B               	movf	___lwdiv@quotient+1,w
  2840  05BF  01D6               	clrf	?___lwdiv+1
  2841  05C0  07D6               	addwf	?___lwdiv+1,f
  2842  05C1  085A               	movf	___lwdiv@quotient,w
  2843  05C2  01D5               	clrf	?___lwdiv
  2844  05C3  07D5               	addwf	?___lwdiv,f
  2845  05C4  0008               	return
  2846  05C5                     __end_of___lwdiv:	
  2847                           
  2848                           	psect	text5
  2849  0436                     __ptext5:	
  2850 ;; *************** function ___awdiv *****************
  2851 ;; Defined at:
  2852 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    0[BANK0 ] int 
  2855 ;;  dividend        2    2[BANK0 ] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  quotient        2    7[BANK0 ] int 
  2858 ;;  sign            1    6[BANK0 ] unsigned char 
  2859 ;;  counter         1    5[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[BANK0 ] int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2869 ;;      Params:         0       4       0       0
  2870 ;;      Locals:         0       4       0       0
  2871 ;;      Temps:          0       1       0       0
  2872 ;;      Totals:         0       9       0       0
  2873 ;;Total ram usage:        9 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    3
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_getPIR_AD
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function ___awdiv
  2885  0436                     ___awdiv:	
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2889  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0438  01DB               	clrf	___awdiv@sign
  2892  0439  1FD6               	btfss	___awdiv@divisor+1,7
  2893  043A  2C42               	goto	l2809
  2894  043B  09D5               	comf	___awdiv@divisor,f
  2895  043C  09D6               	comf	___awdiv@divisor+1,f
  2896  043D  0AD5               	incf	___awdiv@divisor,f
  2897  043E  1903               	skipnz
  2898  043F  0AD6               	incf	___awdiv@divisor+1,f
  2899  0440  01DB               	clrf	___awdiv@sign
  2900  0441  0ADB               	incf	___awdiv@sign,f
  2901  0442                     l2809:	
  2902  0442  1FD8               	btfss	___awdiv@dividend+1,7
  2903  0443  2C4D               	goto	l2815
  2904  0444  09D7               	comf	___awdiv@dividend,f
  2905  0445  09D8               	comf	___awdiv@dividend+1,f
  2906  0446  0AD7               	incf	___awdiv@dividend,f
  2907  0447  1903               	skipnz
  2908  0448  0AD8               	incf	___awdiv@dividend+1,f
  2909  0449  3001               	movlw	1
  2910  044A  00D9               	movwf	??___awdiv
  2911  044B  0859               	movf	??___awdiv,w
  2912  044C  06DB               	xorwf	___awdiv@sign,f
  2913  044D                     l2815:	
  2914  044D  01DC               	clrf	___awdiv@quotient
  2915  044E  01DD               	clrf	___awdiv@quotient+1
  2916  044F  0856               	movf	___awdiv@divisor+1,w
  2917  0450  0455               	iorwf	___awdiv@divisor,w
  2918  0451  1903               	skipnz
  2919  0452  2C84               	goto	l2837
  2920  0453  01DA               	clrf	___awdiv@counter
  2921  0454  0ADA               	incf	___awdiv@counter,f
  2922  0455                     l2825:	
  2923  0455  1BD6               	btfsc	___awdiv@divisor+1,7
  2924  0456  2C63               	goto	l2827
  2925  0457  3001               	movlw	1
  2926  0458                     u2285:	
  2927  0458  1003               	clrc
  2928  0459  0DD5               	rlf	___awdiv@divisor,f
  2929  045A  0DD6               	rlf	___awdiv@divisor+1,f
  2930  045B  3EFF               	addlw	-1
  2931  045C  1D03               	skipz
  2932  045D  2C58               	goto	u2285
  2933  045E  3001               	movlw	1
  2934  045F  00D9               	movwf	??___awdiv
  2935  0460  0859               	movf	??___awdiv,w
  2936  0461  07DA               	addwf	___awdiv@counter,f
  2937  0462  2C55               	goto	l2825
  2938  0463                     l2827:	
  2939  0463  3001               	movlw	1
  2940  0464                     u2305:	
  2941  0464  1003               	clrc
  2942  0465  0DDC               	rlf	___awdiv@quotient,f
  2943  0466  0DDD               	rlf	___awdiv@quotient+1,f
  2944  0467  3EFF               	addlw	-1
  2945  0468  1D03               	skipz
  2946  0469  2C64               	goto	u2305
  2947  046A  0856               	movf	___awdiv@divisor+1,w
  2948  046B  0258               	subwf	___awdiv@dividend+1,w
  2949  046C  1D03               	skipz
  2950  046D  2C70               	goto	u2315
  2951  046E  0855               	movf	___awdiv@divisor,w
  2952  046F  0257               	subwf	___awdiv@dividend,w
  2953  0470                     u2315:	
  2954  0470  1C03               	skipc
  2955  0471  2C79               	goto	l2833
  2956  0472  0855               	movf	___awdiv@divisor,w
  2957  0473  02D7               	subwf	___awdiv@dividend,f
  2958  0474  0856               	movf	___awdiv@divisor+1,w
  2959  0475  1C03               	skipc
  2960  0476  03D8               	decf	___awdiv@dividend+1,f
  2961  0477  02D8               	subwf	___awdiv@dividend+1,f
  2962  0478  145C               	bsf	___awdiv@quotient,0
  2963  0479                     l2833:	
  2964  0479  3001               	movlw	1
  2965  047A                     u2325:	
  2966  047A  1003               	clrc
  2967  047B  0CD6               	rrf	___awdiv@divisor+1,f
  2968  047C  0CD5               	rrf	___awdiv@divisor,f
  2969  047D  3EFF               	addlw	-1
  2970  047E  1D03               	skipz
  2971  047F  2C7A               	goto	u2325
  2972  0480  3001               	movlw	1
  2973  0481  02DA               	subwf	___awdiv@counter,f
  2974  0482  1D03               	btfss	3,2
  2975  0483  2C63               	goto	l2827
  2976  0484                     l2837:	
  2977  0484  085B               	movf	___awdiv@sign,w
  2978  0485  1903               	btfsc	3,2
  2979  0486  2C8C               	goto	l2841
  2980  0487  09DC               	comf	___awdiv@quotient,f
  2981  0488  09DD               	comf	___awdiv@quotient+1,f
  2982  0489  0ADC               	incf	___awdiv@quotient,f
  2983  048A  1903               	skipnz
  2984  048B  0ADD               	incf	___awdiv@quotient+1,f
  2985  048C                     l2841:	
  2986  048C  085D               	movf	___awdiv@quotient+1,w
  2987  048D  01D6               	clrf	?___awdiv+1
  2988  048E  07D6               	addwf	?___awdiv+1,f
  2989  048F  085C               	movf	___awdiv@quotient,w
  2990  0490  01D5               	clrf	?___awdiv
  2991  0491  07D5               	addwf	?___awdiv,f
  2992  0492  0008               	return
  2993  0493                     __end_of___awdiv:	
  2994                           
  2995                           	psect	text6
  2996  069E                     __ptext6:	
  2997 ;; *************** function _getCDS_AD *****************
  2998 ;; Defined at:
  2999 ;;		line 45 in file "../src/CDS_B1.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  channel1        1    wreg     unsigned char 
  3002 ;;  channel2        1    2[BANK0 ] unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  channel1        1    7[BANK0 ] unsigned char 
  3005 ;;  j               1    6[BANK0 ] unsigned char 
  3006 ;;  i               1    5[BANK0 ] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;		None               void
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, pclath, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3016 ;;      Params:         0       1       0       0
  3017 ;;      Locals:         0       3       0       0
  3018 ;;      Temps:          0       2       0       0
  3019 ;;      Totals:         0       6       0       0
  3020 ;;Total ram usage:        6 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    5
  3023 ;; This function calls:
  3024 ;;		_getAD
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _getCDS_AD
  3032  069E                     _getCDS_AD:	
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3036                           ;getCDS_AD@channel1 stored from wreg
  3037  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3038  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3039  06A0  00DC               	movwf	getCDS_AD@channel1
  3040                           
  3041                           ;CDS_B1.c: 46: char i = 0, j = 0;
  3042  06A1  01DA               	clrf	getCDS_AD@i
  3043  06A2  01DB               	clrf	getCDS_AD@j
  3044                           
  3045                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  3046  06A3  1DA7               	btfss	__CDS,3
  3047  06A4  0008               	return
  3048                           
  3049                           ;CDS_B1.c: 48: _CDS.GO = 1;
  3050  06A5  14A7               	bsf	__CDS,1
  3051                           
  3052                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  3053  06A6  3070               	movlw	112
  3054  06A7  00D8               	movwf	??_getCDS_AD
  3055  06A8  0858               	movf	??_getCDS_AD,w
  3056  06A9  00D5               	movwf	getAD@adcon1
  3057  06AA  085C               	movf	getCDS_AD@channel1,w
  3058  06AB  118A  2756  118A   	fcall	_getAD
  3059  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3060  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3061  06B0  00D9               	movwf	??_getCDS_AD+1
  3062  06B1  0859               	movf	??_getCDS_AD+1,w
  3063  06B2  00AB               	movwf	__CDS+4
  3064                           
  3065                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  3066  06B3  082B               	movf	__CDS+4,w
  3067  06B4  00D8               	movwf	??_getCDS_AD
  3068  06B5  0858               	movf	??_getCDS_AD,w
  3069  06B6  00A9               	movwf	__CDS+2
  3070                           
  3071                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  3072  06B7  3070               	movlw	112
  3073  06B8  00D8               	movwf	??_getCDS_AD
  3074  06B9  0858               	movf	??_getCDS_AD,w
  3075  06BA  00D5               	movwf	getAD@adcon1
  3076  06BB  0857               	movf	getCDS_AD@channel2,w
  3077  06BC  118A  2756         	fcall	_getAD
  3078  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3079  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3080  06C0  00D9               	movwf	??_getCDS_AD+1
  3081  06C1  0859               	movf	??_getCDS_AD+1,w
  3082  06C2  00AB               	movwf	__CDS+4
  3083                           
  3084                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3085  06C3  082B               	movf	__CDS+4,w
  3086  06C4  00D8               	movwf	??_getCDS_AD
  3087  06C5  0858               	movf	??_getCDS_AD,w
  3088  06C6  00AA               	movwf	__CDS+3
  3089  06C7  0008               	return
  3090  06C8                     __end_of_getCDS_AD:	
  3091                           
  3092                           	psect	text7
  3093  0756                     __ptext7:	
  3094 ;; *************** function _getAD *****************
  3095 ;; Defined at:
  3096 ;;		line 428 in file "../src/MCU_B1.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  adcon0          1    wreg     unsigned char 
  3099 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      unsigned char 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3111 ;;      Params:         0       1       0       0
  3112 ;;      Locals:         0       1       0       0
  3113 ;;      Temps:          0       0       0       0
  3114 ;;      Totals:         0       2       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    4
  3118 ;; This function calls:
  3119 ;;		_Timeout_Counter
  3120 ;;		_set_TimeoutCleared
  3121 ;; This function is called by:
  3122 ;;		_getCDS_AD
  3123 ;;		_getPIR_AD
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function _getAD
  3129  0756                     _getAD:	
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3133                           ;getAD@adcon0 stored from wreg
  3134  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0758  00D6               	movwf	getAD@adcon0
  3137                           
  3138                           ;MCU_B1.c: 429: ADCON0 = adcon0;
  3139  0759  0856               	movf	getAD@adcon0,w
  3140  075A  009F               	movwf	31	;volatile
  3141                           
  3142                           ;MCU_B1.c: 430: ADCON1 = adcon1;
  3143  075B  0855               	movf	getAD@adcon1,w
  3144  075C  1683               	bsf	3,5	;RP0=1, select bank1
  3145  075D  1303               	bcf	3,6	;RP1=0, select bank1
  3146  075E  009F               	movwf	31	;volatile
  3147                           
  3148                           ;MCU_B1.c: 431: GO_nDONE = 1;
  3149  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0761  149F               	bsf	31,1	;volatile
  3152                           
  3153                           ;MCU_B1.c: 432: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3154  0762  2F66               	goto	l3481
  3155  0763                     l3479:	
  3156                           
  3157                           ;MCU_B1.c: 433: Timeout_Counter();
  3158  0763  158A  27D7  118A   	fcall	_Timeout_Counter
  3159  0766                     l3481:	
  3160  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0767  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0768  1C9F               	btfss	31,1	;volatile
  3163  0769  2F6C               	goto	l3485
  3164  076A  1D24               	btfss	_myMain+4,2
  3165  076B  2F63               	goto	l3479
  3166  076C                     l3485:	
  3167                           
  3168                           ;MCU_B1.c: 434: };
  3169                           ;MCU_B1.c: 435: set_TimeoutCleared();
  3170  076C  158A  26DE         	fcall	_set_TimeoutCleared
  3171                           
  3172                           ;MCU_B1.c: 436: return ADRES;
  3173  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3174  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0770  081E               	movf	30,w	;volatile
  3176  0771  0008               	return
  3177  0772                     __end_of_getAD:	
  3178                           
  3179                           	psect	text8
  3180  0EDE                     __ptext8:	
  3181 ;; *************** function _set_TimeoutCleared *****************
  3182 ;; Defined at:
  3183 ;;		line 283 in file "../src/Main_B1.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		status,2
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3197 ;;      Params:         0       0       0       0
  3198 ;;      Locals:         0       0       0       0
  3199 ;;      Temps:          0       0       0       0
  3200 ;;      Totals:         0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    3
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_getAD
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _set_TimeoutCleared
  3213  0EDE                     _set_TimeoutCleared:	
  3214                           
  3215                           ;Main_B1.c: 284: myMain.Timeout = 0;
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _set_TimeoutCleared: [status,2]
  3219  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0EE0  1124               	bcf	_myMain+4,2
  3222                           
  3223                           ;Main_B1.c: 285: myMain.Timeout_Counter = 0;
  3224  0EE1  01A5               	clrf	_myMain+5
  3225  0EE2  01A6               	clrf	_myMain+6
  3226  0EE3  0008               	return
  3227  0EE4                     __end_of_set_TimeoutCleared:	
  3228                           
  3229                           	psect	text9
  3230  0FD7                     __ptext9:	
  3231 ;; *************** function _Timeout_Counter *****************
  3232 ;; Defined at:
  3233 ;;		line 274 in file "../src/Main_B1.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;		None               void
  3240 ;; Registers used:
  3241 ;;		wreg, status,2
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3247 ;;      Params:         0       0       0       0
  3248 ;;      Locals:         0       0       0       0
  3249 ;;      Temps:          0       0       0       0
  3250 ;;      Totals:         0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    3
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_getAD
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _Timeout_Counter
  3263  0FD7                     _Timeout_Counter:	
  3264                           
  3265                           ;Main_B1.c: 275: myMain.Timeout_Counter++;
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3269  0FD7  3001               	movlw	1
  3270  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0FDA  07A5               	addwf	_myMain+5,f
  3273  0FDB  1803               	skipnc
  3274  0FDC  0AA6               	incf	_myMain+6,f
  3275  0FDD  3000               	movlw	0
  3276  0FDE  07A6               	addwf	_myMain+6,f
  3277                           
  3278                           ;Main_B1.c: 276: if (myMain.Timeout_Counter == 10000) {
  3279  0FDF  3027               	movlw	39
  3280  0FE0  0626               	xorwf	_myMain+6,w
  3281  0FE1  1D03               	skipz
  3282  0FE2  2FE5               	goto	u3335
  3283  0FE3  3010               	movlw	16
  3284  0FE4  0625               	xorwf	_myMain+5,w
  3285  0FE5                     u3335:	
  3286  0FE5  1D03               	skipz
  3287  0FE6  0008               	return
  3288                           
  3289                           ;Main_B1.c: 277: myMain.Timeout_Counter = 0;
  3290  0FE7  01A5               	clrf	_myMain+5
  3291  0FE8  01A6               	clrf	_myMain+6
  3292                           
  3293                           ;Main_B1.c: 278: myMain.Timeout = 1;
  3294  0FE9  1524               	bsf	_myMain+4,2
  3295  0FEA  0008               	return
  3296  0FEB                     __end_of_Timeout_Counter:	
  3297                           
  3298                           	psect	text10
  3299  0F7B                     __ptext10:	
  3300 ;; *************** function _WDT_Main *****************
  3301 ;; Defined at:
  3302 ;;		line 1058 in file "../src/MCU_B1.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3316 ;;      Params:         0       0       0       0
  3317 ;;      Locals:         0       0       0       0
  3318 ;;      Temps:          0       1       0       0
  3319 ;;      Totals:         0       1       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    4
  3323 ;; This function calls:
  3324 ;;		_WDT_Clearing
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _WDT_Main
  3332  0F7B                     _WDT_Main:	
  3333                           
  3334                           ;MCU_B1.c: 1059: if (WDT.Enable == 1) {
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3338  0F7B  1C77               	btfss	_WDT,0
  3339  0F7C  0008               	return
  3340                           
  3341                           ;MCU_B1.c: 1060: if (WDT.Timer-- > 0) {
  3342  0F7D  3001               	movlw	1
  3343  0F7E  02F8               	subwf	_WDT+1,f
  3344  0F7F  0878               	movf	_WDT+1,w
  3345  0F80  3AFF               	xorlw	255
  3346  0F81  1903               	skipnz
  3347  0F82  0008               	return
  3348                           
  3349                           ;MCU_B1.c: 1061: WDT.Timer = 100;
  3350  0F83  3064               	movlw	100
  3351  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0F86  00D5               	movwf	??_WDT_Main
  3354  0F87  0855               	movf	??_WDT_Main,w
  3355  0F88  00F8               	movwf	_WDT+1
  3356                           
  3357                           ;MCU_B1.c: 1062: WDT_Clearing();
  3358  0F89  118A  2002         	fcall	_WDT_Clearing
  3359  0F8B  0008               	return
  3360  0F8C                     __end_of_WDT_Main:	
  3361                           
  3362                           	psect	text11
  3363  0002                     __ptext11:	
  3364 ;; *************** function _WDT_Clearing *****************
  3365 ;; Defined at:
  3366 ;;		line 1068 in file "../src/MCU_B1.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		None
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3380 ;;      Params:         0       0       0       0
  3381 ;;      Locals:         0       0       0       0
  3382 ;;      Temps:          0       0       0       0
  3383 ;;      Totals:         0       0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_WDT_Main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _WDT_Clearing
  3396  0002                     _WDT_Clearing:	
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _WDT_Clearing: []
  3400  0002  0064               	clrwdt	;# 
  3401  0003  0008               	return
  3402  0004                     __end_of_WDT_Clearing:	
  3403                           
  3404                           	psect	text12
  3405  0F4B                     __ptext12:	
  3406 ;; *************** function _UART_Main *****************
  3407 ;; Defined at:
  3408 ;;		line 757 in file "../src/MCU_B1.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3422 ;;      Params:         0       0       0       0
  3423 ;;      Locals:         0       0       0       0
  3424 ;;      Temps:          0       0       0       0
  3425 ;;      Totals:         0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    5
  3429 ;; This function calls:
  3430 ;;		_UART_Receive
  3431 ;;		_UART_Transmit
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _UART_Main
  3439  0F4B                     _UART_Main:	
  3440                           
  3441                           ;MCU_B1.c: 758: if (UART.RxGO == 1) {
  3442                           
  3443                           ;incstack = 0
  3444                           ; Regs used in _UART_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3445  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0F4D  1CC1               	btfss	_UART+11,1
  3448  0F4E  2F53               	goto	l462
  3449                           
  3450                           ;MCU_B1.c: 759: UART.RxGO = 0;
  3451  0F4F  10C1               	bcf	_UART+11,1
  3452                           
  3453                           ;MCU_B1.c: 760: UART_Receive();
  3454  0F50  158A  26CF         	fcall	_UART_Receive
  3455                           
  3456                           ;MCU_B1.c: 761: ;;
  3457                           ;MCU_B1.c: 764: } else {
  3458  0F52  0008               	return
  3459  0F53                     l462:	
  3460                           
  3461                           ;MCU_B1.c: 765: if (UART.TxGO == 1) {
  3462  0F53  1C41               	btfss	_UART+11,0
  3463  0F54  0008               	return
  3464                           
  3465                           ;MCU_B1.c: 766: UART.TxGO = 0;
  3466  0F55  1041               	bcf	_UART+11,0
  3467                           
  3468                           ;MCU_B1.c: 767: UART_Transmit();
  3469  0F56  118A  2712         	fcall	_UART_Transmit
  3470  0F58  0008               	return
  3471  0F59                     __end_of_UART_Main:	
  3472                           
  3473                           	psect	text13
  3474  0712                     __ptext13:	
  3475 ;; *************** function _UART_Transmit *****************
  3476 ;; Defined at:
  3477 ;;		line 772 in file "../src/MCU_B1.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  i               2    1[BANK0 ] int 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       0       0
  3492 ;;      Locals:         0       2       0       0
  3493 ;;      Temps:          0       0       0       0
  3494 ;;      Totals:         0       2       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    4
  3498 ;; This function calls:
  3499 ;;		_putch
  3500 ;; This function is called by:
  3501 ;;		_UART_Main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _UART_Transmit
  3507  0712                     _UART_Transmit:	
  3508                           
  3509                           ;MCU_B1.c: 775: for (int i = 0; i < 8; i++) {
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _UART_Transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3513  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0714  01D6               	clrf	UART_Transmit@i
  3516  0715  01D7               	clrf	UART_Transmit@i+1
  3517  0716                     L6:	
  3518  0716  0857               	movf	UART_Transmit@i+1,w
  3519  0717  3A80               	xorlw	128
  3520  0718  00FF               	movwf	127
  3521  0719  3080               	movlw	128
  3522  071A  027F               	subwf	127,w
  3523  071B  1D03               	skipz
  3524  071C  2F1F               	goto	u3555
  3525  071D  3008               	movlw	8
  3526  071E  0256               	subwf	UART_Transmit@i,w
  3527  071F                     u3555:	
  3528  071F  1803               	btfsc	3,0
  3529  0720  0008               	return
  3530                           
  3531                           ;MCU_B1.c: 777: putch(UART.Data[i]);
  3532  0721  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0722  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0723  0856               	movf	UART_Transmit@i,w
  3535  0724  3E36               	addlw	_UART& (0+255)
  3536  0725  0084               	movwf	4
  3537  0726  1383               	bcf	3,7	;select IRP bank0
  3538  0727  0800               	movf	0,w
  3539  0728  158A  26FA  118A   	fcall	_putch
  3540  072B  3001               	movlw	1
  3541  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3542  072D  1303               	bcf	3,6	;RP1=0, select bank0
  3543  072E  07D6               	addwf	UART_Transmit@i,f
  3544  072F  1803               	skipnc
  3545  0730  0AD7               	incf	UART_Transmit@i+1,f
  3546  0731  3000               	movlw	0
  3547  0732  07D7               	addwf	UART_Transmit@i+1,f
  3548  0733  2F16               	goto	L6
  3549  0734                     __end_of_UART_Transmit:	
  3550                           
  3551                           	psect	text14
  3552  0EFA                     __ptext14:	
  3553 ;; *************** function _putch *****************
  3554 ;; Defined at:
  3555 ;;		line 856 in file "../src/MCU_B1.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  byte            1    wreg     unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  byte            1    0[BANK0 ] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;		None               void
  3562 ;; Registers used:
  3563 ;;		wreg
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3569 ;;      Params:         0       0       0       0
  3570 ;;      Locals:         0       1       0       0
  3571 ;;      Temps:          0       0       0       0
  3572 ;;      Totals:         0       1       0       0
  3573 ;;Total ram usage:        1 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    3
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_UART_Transmit
  3580 ;;		_getche
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _putch
  3586  0EFA                     _putch:	
  3587                           
  3588                           ;incstack = 0
  3589                           ; Regs used in _putch: [wreg]
  3590                           ;putch@byte stored from wreg
  3591  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0EFC  00D5               	movwf	putch@byte
  3594  0EFD                     l480:	
  3595                           ;MCU_B1.c: 859: continue;
  3596                           
  3597                           ;MCU_B1.c: 858: while (!TXIF)
  3598                           
  3599  0EFD  1E0C               	btfss	12,4	;volatile
  3600  0EFE  2EFD               	goto	l480
  3601                           
  3602                           ;MCU_B1.c: 860: TXREG = byte;
  3603  0EFF  0855               	movf	putch@byte,w
  3604  0F00  0099               	movwf	25	;volatile
  3605  0F01  0008               	return
  3606  0F02                     __end_of_putch:	
  3607                           
  3608                           	psect	text15
  3609  0ECF                     __ptext15:	
  3610 ;; *************** function _UART_Receive *****************
  3611 ;; Defined at:
  3612 ;;		line 791 in file "../src/MCU_B1.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;		None               void
  3619 ;; Registers used:
  3620 ;;		None
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3626 ;;      Params:         0       0       0       0
  3627 ;;      Locals:         0       0       0       0
  3628 ;;      Temps:          0       0       0       0
  3629 ;;      Totals:         0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    3
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_UART_Main
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _UART_Receive
  3642  0ECF                     _UART_Receive:	
  3643                           
  3644                           ;MCU_B1.c: 813: myMain.Test = 1;
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _UART_Receive: []
  3648  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0ED1  1720               	bsf	_myMain,6
  3651  0ED2  0008               	return
  3652  0ED3                     __end_of_UART_Receive:	
  3653                           
  3654                           	psect	text16
  3655  0025                     __ptext16:	
  3656 ;; *************** function _PIR_Main *****************
  3657 ;; Defined at:
  3658 ;;		line 14 in file "../src/PIR_B1.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  error           1   19[BANK0 ] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3672 ;;      Params:         0       0       0       0
  3673 ;;      Locals:         0       3       0       0
  3674 ;;      Temps:          0       5       0       0
  3675 ;;      Totals:         0       8       0       0
  3676 ;;Total ram usage:        8 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    6
  3679 ;; This function calls:
  3680 ;;		_getLights_Status
  3681 ;;		_getMain_All_Error_Status
  3682 ;;		_setLED
  3683 ;;		_setLights_Trigger
  3684 ;;		_setMain_Exception
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _PIR_Main
  3692  0025                     _PIR_Main:	
  3693                           
  3694                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3698  0025  3000               	movlw	0
  3699  0026  118A  2734  118A   	fcall	_getMain_All_Error_Status
  3700  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3701  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3702  002B  00E1               	movwf	??_PIR_Main
  3703  002C  0861               	movf	??_PIR_Main,w
  3704  002D  00E8               	movwf	PIR_Main@error
  3705                           
  3706                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3707  002E  1683               	bsf	3,5	;RP0=1, select bank1
  3708  002F  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0030  1C20               	btfss	__PIR^(0+128),0
  3710  0031  2A04               	goto	l748
  3711                           
  3712                           ;PIR_B1.c: 17: if (error == 0) {
  3713  0032  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0033  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0034  08E8               	movf	PIR_Main@error,f
  3716  0035  1D03               	skipz
  3717  0036  2851               	goto	l749
  3718                           
  3719                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  3720  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3722  0039  1A20               	btfsc	__PIR^(0+128),4
  3723  003A  2883               	goto	l3835
  3724                           
  3725                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  3726  003B  1620               	bsf	__PIR^(0+128),4
  3727                           
  3728                           ;PIR_B1.c: 20: _PIR.Available = 1;
  3729  003C  17A0               	bsf	__PIR^(0+128),7
  3730                           
  3731                           ;PIR_B1.c: 21: setLED(1, 0);
  3732  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3733  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3734  003F  01D7               	clrf	setLED@command
  3735  0040  3001               	movlw	1
  3736  0041  118A  23C5  118A   	fcall	_setLED
  3737                           
  3738                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  3739  0044  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0045  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0046  19A0               	btfsc	__PIR^(0+128),3
  3742  0047  2883               	goto	l3835
  3743                           
  3744                           ;PIR_B1.c: 23: setLED(2, 1);
  3745  0048  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0049  1303               	bcf	3,6	;RP1=0, select bank0
  3747  004A  01D7               	clrf	setLED@command
  3748  004B  0AD7               	incf	setLED@command,f
  3749  004C  3002               	movlw	2
  3750  004D  118A  23C5  118A   	fcall	_setLED
  3751                           
  3752                           ;PIR_B1.c: 24: }
  3753                           ;PIR_B1.c: 25: }
  3754                           ;PIR_B1.c: 26: } else {
  3755  0050  2883               	goto	l3835
  3756  0051                     l749:	
  3757                           
  3758                           ;PIR_B1.c: 27: if (_PIR.Detect == 1) {
  3759  0051  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0052  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0053  1E20               	btfss	__PIR^(0+128),4
  3762  0054  2883               	goto	l3835
  3763                           
  3764                           ;PIR_B1.c: 28: setMain_Exception(error);
  3765  0055  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0056  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0057  0868               	movf	PIR_Main@error,w
  3768  0058  118A  25C5  118A   	fcall	_setMain_Exception
  3769                           
  3770                           ;PIR_B1.c: 30: _PIR.Detect = 0;
  3771  005B  1683               	bsf	3,5	;RP0=1, select bank1
  3772  005C  1303               	bcf	3,6	;RP1=0, select bank1
  3773  005D  1220               	bcf	__PIR^(0+128),4
  3774                           
  3775                           ;PIR_B1.c: 31: _PIR.Available = 0;
  3776  005E  13A0               	bcf	__PIR^(0+128),7
  3777                           
  3778                           ;PIR_B1.c: 32: _PIR.Status = 0;
  3779  005F  1320               	bcf	__PIR^(0+128),6
  3780                           
  3781                           ;PIR_B1.c: 35: _PIR.Time = 0;
  3782  0060  01A5               	clrf	(__PIR^(0+128)+5)
  3783                           
  3784                           ;PIR_B1.c: 36: _PIR.RangeTime1 = 0;
  3785  0061  01CA               	clrf	(__PIR^(0+128)+42)
  3786                           
  3787                           ;PIR_B1.c: 37: _PIR.RangeValue = 15;
  3788  0062  300F               	movlw	15
  3789  0063  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0064  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0065  00E1               	movwf	??_PIR_Main
  3792  0066  0861               	movf	??_PIR_Main,w
  3793  0067  1683               	bsf	3,5	;RP0=1, select bank1
  3794  0068  1303               	bcf	3,6	;RP1=0, select bank1
  3795  0069  00CC               	movwf	(__PIR^(0+128)+44)
  3796                           
  3797                           ;PIR_B1.c: 38: _PIR.RangeCount = 0;
  3798  006A  01CB               	clrf	(__PIR^(0+128)+43)
  3799                           
  3800                           ;PIR_B1.c: 40: setLED(1, 1);
  3801  006B  1283               	bcf	3,5	;RP0=0, select bank0
  3802  006C  1303               	bcf	3,6	;RP1=0, select bank0
  3803  006D  01D7               	clrf	setLED@command
  3804  006E  0AD7               	incf	setLED@command,f
  3805  006F  3001               	movlw	1
  3806  0070  118A  23C5  118A   	fcall	_setLED
  3807                           
  3808                           ;PIR_B1.c: 41: setLED(2, 0);
  3809  0073  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0074  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0075  01D7               	clrf	setLED@command
  3812  0076  3002               	movlw	2
  3813  0077  118A  23C5  118A   	fcall	_setLED
  3814                           
  3815                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  3816  007A  1683               	bsf	3,5	;RP0=1, select bank1
  3817  007B  1303               	bcf	3,6	;RP1=0, select bank1
  3818  007C  1DA0               	btfss	__PIR^(0+128),3
  3819  007D  2880               	goto	l754
  3820                           
  3821                           ;PIR_B1.c: 44: _PIR.Count = 0;
  3822  007E  01C1               	clrf	(__PIR^(0+128)+33)
  3823  007F  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3824  0080                     l754:	
  3825                           
  3826                           ;PIR_B1.c: 45: }
  3827                           ;PIR_B1.c: 46: _PIR.CloseTimeSeconds = 0;
  3828  0080  01C6               	clrf	(__PIR^(0+128)+38)
  3829                           
  3830                           ;PIR_B1.c: 47: _PIR.CloseTimeMinutes = 0;
  3831  0081  01C4               	clrf	(__PIR^(0+128)+36)
  3832  0082  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3833  0083                     l3835:	
  3834                           
  3835                           ;PIR_B1.c: 48: }
  3836                           ;PIR_B1.c: 49: }
  3837                           ;PIR_B1.c: 51: if (_PIR.ADtoGO == 0) {
  3838  0083  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0084  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0085  18A0               	btfsc	__PIR^(0+128),1
  3841  0086  2896               	goto	l755
  3842                           
  3843                           ;PIR_B1.c: 52: _PIR.Time++;
  3844  0087  3001               	movlw	1
  3845  0088  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0089  1303               	bcf	3,6	;RP1=0, select bank0
  3847  008A  00E1               	movwf	??_PIR_Main
  3848  008B  0861               	movf	??_PIR_Main,w
  3849  008C  1683               	bsf	3,5	;RP0=1, select bank1
  3850  008D  1303               	bcf	3,6	;RP1=0, select bank1
  3851  008E  07A5               	addwf	(__PIR^(0+128)+5),f
  3852                           
  3853                           ;PIR_B1.c: 53: if (_PIR.Time == 10) {
  3854  008F  0825               	movf	(__PIR^(0+128)+5),w
  3855  0090  3A0A               	xorlw	10
  3856  0091  1D03               	skipz
  3857  0092  29B8               	goto	l3919
  3858                           
  3859                           ;PIR_B1.c: 54: _PIR.Time = 0;
  3860  0093  01A5               	clrf	(__PIR^(0+128)+5)
  3861                           
  3862                           ;PIR_B1.c: 55: _PIR.ADtoGO = 1;
  3863  0094  14A0               	bsf	__PIR^(0+128),1
  3864                           
  3865                           ;PIR_B1.c: 56: }
  3866                           ;PIR_B1.c: 57: } else {
  3867  0095  29B8               	goto	l3919
  3868  0096                     l755:	
  3869                           
  3870                           ;PIR_B1.c: 58: if (_PIR.GO == 1) {
  3871  0096  1D20               	btfss	__PIR^(0+128),2
  3872  0097  29B8               	goto	l3919
  3873                           
  3874                           ;PIR_B1.c: 59: _PIR.GO = 0;
  3875  0098  1120               	bcf	__PIR^(0+128),2
  3876                           
  3877                           ;PIR_B1.c: 60: if (_PIR.Available == 1) {
  3878  0099  1BA0               	btfsc	__PIR^(0+128),7
  3879                           
  3880                           ;PIR_B1.c: 61: if (_PIR.OK == 1) {
  3881  009A  1DA0               	btfss	__PIR^(0+128),3
  3882  009B  29B8               	goto	l3919
  3883                           
  3884                           ;PIR_B1.c: 63: _PIR.Time++;
  3885  009C  3001               	movlw	1
  3886  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3887  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3888  009F  00E1               	movwf	??_PIR_Main
  3889  00A0  0861               	movf	??_PIR_Main,w
  3890  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  3891  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  3892  00A3  07A5               	addwf	(__PIR^(0+128)+5),f
  3893                           
  3894                           ;PIR_B1.c: 64: if (_PIR.Time == 60) {
  3895  00A4  0825               	movf	(__PIR^(0+128)+5),w
  3896  00A5  3A3C               	xorlw	60
  3897  00A6  1D03               	skipz
  3898  00A7  28DC               	goto	l3885
  3899                           
  3900                           ;PIR_B1.c: 65: _PIR.Time = 0;
  3901  00A8  01A5               	clrf	(__PIR^(0+128)+5)
  3902                           
  3903                           ;PIR_B1.c: 66: if (_PIR.RangeCount >= 90) {
  3904  00A9  305A               	movlw	90
  3905  00AA  024B               	subwf	(__PIR^(0+128)+43),w
  3906  00AB  1C03               	skipc
  3907  00AC  28B8               	goto	l3867
  3908                           
  3909                           ;PIR_B1.c: 67: _PIR.RangeTime1 = 0;
  3910  00AD  01CA               	clrf	(__PIR^(0+128)+42)
  3911                           
  3912                           ;PIR_B1.c: 69: if (_PIR.RangeValue == 15) {
  3913  00AE  084C               	movf	(__PIR^(0+128)+44),w
  3914  00AF  3A0F               	xorlw	15
  3915  00B0  1903               	btfsc	3,2
  3916  00B1  28CD               	goto	L13
  3917                           
  3918                           ;PIR_B1.c: 71: } else if (_PIR.RangeValue == (15+10)) {
  3919                           
  3920                           ;PIR_B1.c: 70: _PIR.RangeValue = (15+10);
  3921  00B2  084C               	movf	(__PIR^(0+128)+44),w
  3922  00B3  3A19               	xorlw	25
  3923  00B4  1D03               	skipz
  3924  00B5  28DB               	goto	l3883
  3925                           
  3926                           ;PIR_B1.c: 72: _PIR.RangeValue = (15+20);
  3927  00B6  3023               	movlw	35
  3928  00B7  28D4               	goto	L9
  3929  00B8                     l3867:	
  3930                           ;PIR_B1.c: 73: }
  3931                           ;PIR_B1.c: 74: } else if (_PIR.RangeCount <= 10) {
  3932                           
  3933  00B8  300B               	movlw	11
  3934  00B9  024B               	subwf	(__PIR^(0+128)+43),w
  3935  00BA  1803               	skipnc
  3936  00BB  28DB               	goto	l3883
  3937                           
  3938                           ;PIR_B1.c: 75: _PIR.RangeTime1++;
  3939  00BC  3001               	movlw	1
  3940  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  3941  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  3942  00BF  00E1               	movwf	??_PIR_Main
  3943  00C0  0861               	movf	??_PIR_Main,w
  3944  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  3945  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  3946  00C3  07CA               	addwf	(__PIR^(0+128)+42),f
  3947                           
  3948                           ;PIR_B1.c: 76: if (_PIR.RangeTime1 == 2) {
  3949  00C4  084A               	movf	(__PIR^(0+128)+42),w
  3950  00C5  3A02               	xorlw	2
  3951  00C6  1D03               	skipz
  3952  00C7  28DB               	goto	l3883
  3953                           
  3954                           ;PIR_B1.c: 77: _PIR.RangeTime1 = 0;
  3955  00C8  01CA               	clrf	(__PIR^(0+128)+42)
  3956                           
  3957                           ;PIR_B1.c: 79: if (_PIR.RangeValue == (15+20)) {
  3958  00C9  084C               	movf	(__PIR^(0+128)+44),w
  3959  00CA  3A23               	xorlw	35
  3960  00CB  1D03               	skipz
  3961  00CC  28CF               	goto	l3879
  3962  00CD                     L13:	
  3963                           
  3964                           ;PIR_B1.c: 80: _PIR.RangeValue = (15+10);
  3965  00CD  3019               	movlw	25
  3966  00CE  28D4               	goto	L9
  3967  00CF                     l3879:	
  3968                           ;PIR_B1.c: 81: } else if (_PIR.RangeValue == (15+10)) {
  3969                           
  3970  00CF  084C               	movf	(__PIR^(0+128)+44),w
  3971  00D0  3A19               	xorlw	25
  3972  00D1  1D03               	skipz
  3973  00D2  28DB               	goto	l3883
  3974                           
  3975                           ;PIR_B1.c: 82: _PIR.RangeValue = 15;
  3976  00D3  300F               	movlw	15
  3977  00D4                     L9:	
  3978  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3979  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3980  00D6  00E1               	movwf	??_PIR_Main
  3981  00D7  0861               	movf	??_PIR_Main,w
  3982  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  3983  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  3984  00DA  00CC               	movwf	(__PIR^(0+128)+44)
  3985  00DB                     l3883:	
  3986                           
  3987                           ;PIR_B1.c: 83: }
  3988                           ;PIR_B1.c: 84: }
  3989                           ;PIR_B1.c: 85: }
  3990                           ;PIR_B1.c: 86: _PIR.RangeCount = 0;
  3991  00DB  01CB               	clrf	(__PIR^(0+128)+43)
  3992  00DC                     l3885:	
  3993                           
  3994                           ;PIR_B1.c: 87: }
  3995                           ;PIR_B1.c: 90: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  3996                           ;PIR_B1.c: 91: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  3997  00DC  084C               	movf	(__PIR^(0+128)+44),w
  3998  00DD  074E               	addwf	(__PIR^(0+128)+46),w
  3999  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  4000  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  4001  00E0  00E1               	movwf	??_PIR_Main
  4002  00E1  01E2               	clrf	??_PIR_Main+1
  4003  00E2  0DE2               	rlf	??_PIR_Main+1,f
  4004  00E3  09E1               	comf	??_PIR_Main,f
  4005  00E4  09E2               	comf	??_PIR_Main+1,f
  4006  00E5  0AE1               	incf	??_PIR_Main,f
  4007  00E6  1903               	skipnz
  4008  00E7  0AE2               	incf	??_PIR_Main+1,f
  4009  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  4010  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  4011  00EA  0826               	movf	(__PIR^(0+128)+6),w
  4012  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  4013  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  4014  00ED  0761               	addwf	??_PIR_Main,w
  4015  00EE  00E3               	movwf	??_PIR_Main+2
  4016  00EF  0862               	movf	??_PIR_Main+1,w
  4017  00F0  1803               	skipnc
  4018  00F1  0A62               	incf	??_PIR_Main+1,w
  4019  00F2  00E4               	movwf	??_PIR_Main+3
  4020  00F3  0864               	movf	??_PIR_Main+3,w
  4021  00F4  3A80               	xorlw	128
  4022  00F5  3C80               	sublw	128
  4023  00F6  1D03               	skipz
  4024  00F7  28FC               	goto	u4045
  4025  00F8  0863               	movf	??_PIR_Main+2,w
  4026  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  4027  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  4028  00FB  0221               	subwf	(__PIR^(0+128)+1),w
  4029  00FC                     u4045:	
  4030  00FC  1C03               	skipc
  4031  00FD  292A               	goto	l3895
  4032  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  4033  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  4034  0100  084C               	movf	(__PIR^(0+128)+44),w
  4035  0101  074E               	addwf	(__PIR^(0+128)+46),w
  4036  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0104  00E1               	movwf	??_PIR_Main
  4039  0105  01E2               	clrf	??_PIR_Main+1
  4040  0106  0DE2               	rlf	??_PIR_Main+1,f
  4041  0107  1683               	bsf	3,5	;RP0=1, select bank1
  4042  0108  1303               	bcf	3,6	;RP1=0, select bank1
  4043  0109  0826               	movf	(__PIR^(0+128)+6),w
  4044  010A  1283               	bcf	3,5	;RP0=0, select bank0
  4045  010B  1303               	bcf	3,6	;RP1=0, select bank0
  4046  010C  0761               	addwf	??_PIR_Main,w
  4047  010D  00E3               	movwf	??_PIR_Main+2
  4048  010E  3000               	movlw	0
  4049  010F  1803               	skipnc
  4050  0110  3001               	movlw	1
  4051  0111  0762               	addwf	??_PIR_Main+1,w
  4052  0112  00E4               	movwf	??_PIR_Main+3
  4053  0113  0864               	movf	??_PIR_Main+3,w
  4054  0114  3A80               	xorlw	128
  4055  0115  00E5               	movwf	??_PIR_Main+4
  4056  0116  3080               	movlw	128
  4057  0117  0265               	subwf	??_PIR_Main+4,w
  4058  0118  1D03               	skipz
  4059  0119  2920               	goto	u4055
  4060  011A  1683               	bsf	3,5	;RP0=1, select bank1
  4061  011B  1303               	bcf	3,6	;RP1=0, select bank1
  4062  011C  0821               	movf	(__PIR^(0+128)+1),w
  4063  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4064  011E  1303               	bcf	3,6	;RP1=0, select bank0
  4065  011F  0263               	subwf	??_PIR_Main+2,w
  4066  0120                     u4055:	
  4067  0120  1C03               	skipc
  4068  0121  292A               	goto	l3895
  4069                           
  4070                           ;PIR_B1.c: 92: _PIR.Count = 0;
  4071  0122  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0123  1303               	bcf	3,6	;RP1=0, select bank1
  4073  0124  01C1               	clrf	(__PIR^(0+128)+33)
  4074  0125  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4075                           
  4076                           ;PIR_B1.c: 93: setLED(1, 0);
  4077  0126  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0127  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0128  01D7               	clrf	setLED@command
  4080  0129  29A1               	goto	L14
  4081  012A                     l3895:	
  4082                           ;PIR_B1.c: 95: } else {
  4083                           
  4084                           ;PIR_B1.c: 94: setLED(2, 0);
  4085                           
  4086                           
  4087                           ;PIR_B1.c: 96: _PIR.RangeCount++;
  4088  012A  3001               	movlw	1
  4089  012B  1283               	bcf	3,5	;RP0=0, select bank0
  4090  012C  1303               	bcf	3,6	;RP1=0, select bank0
  4091  012D  00E1               	movwf	??_PIR_Main
  4092  012E  0861               	movf	??_PIR_Main,w
  4093  012F  1683               	bsf	3,5	;RP0=1, select bank1
  4094  0130  1303               	bcf	3,6	;RP1=0, select bank1
  4095  0131  07CB               	addwf	(__PIR^(0+128)+43),f
  4096                           
  4097                           ;PIR_B1.c: 97: _PIR.Count++;
  4098  0132  3001               	movlw	1
  4099  0133  07C1               	addwf	(__PIR^(0+128)+33),f
  4100  0134  1803               	skipnc
  4101  0135  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4102  0136  3000               	movlw	0
  4103  0137  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4104                           
  4105                           ;PIR_B1.c: 99: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4106  0138  1B20               	btfsc	__PIR^(0+128),6
  4107  0139  293E               	goto	l3903
  4108  013A  3002               	movlw	2
  4109  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4110  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4111  013D  2940               	goto	L10
  4112  013E                     l3903:	
  4113  013E  3003               	movlw	3
  4114  013F  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0140                     L10:	
  4116  0140  00E6               	movwf	_PIR_Main$2644
  4117  0141  3000               	movlw	0
  4118  0142  00E7               	movwf	_PIR_Main$2644+1
  4119  0143  0866               	movf	_PIR_Main$2644,w
  4120  0144  00E1               	movwf	??_PIR_Main
  4121  0145  0861               	movf	??_PIR_Main,w
  4122  0146  1683               	bsf	3,5	;RP0=1, select bank1
  4123  0147  1303               	bcf	3,6	;RP1=0, select bank1
  4124  0148  00C3               	movwf	(__PIR^(0+128)+35)
  4125                           
  4126                           ;PIR_B1.c: 101: if (_PIR.Count == _PIR.TriggerValue) {
  4127  0149  0843               	movf	(__PIR^(0+128)+35),w
  4128  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4129  014B  1303               	bcf	3,6	;RP1=0, select bank0
  4130  014C  00E1               	movwf	??_PIR_Main
  4131  014D  01E2               	clrf	??_PIR_Main+1
  4132  014E  1683               	bsf	3,5	;RP0=1, select bank1
  4133  014F  1303               	bcf	3,6	;RP1=0, select bank1
  4134  0150  0842               	movf	((__PIR+1)^(0+128)+33),w
  4135  0151  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0152  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0153  0662               	xorwf	??_PIR_Main+1,w
  4138  0154  1D03               	skipz
  4139  0155  295C               	goto	u4075
  4140  0156  1683               	bsf	3,5	;RP0=1, select bank1
  4141  0157  1303               	bcf	3,6	;RP1=0, select bank1
  4142  0158  0841               	movf	(__PIR^(0+128)+33),w
  4143  0159  1283               	bcf	3,5	;RP0=0, select bank0
  4144  015A  1303               	bcf	3,6	;RP1=0, select bank0
  4145  015B  0661               	xorwf	??_PIR_Main,w
  4146  015C                     u4075:	
  4147  015C  1D03               	skipz
  4148  015D  29B8               	goto	l3919
  4149                           
  4150                           ;PIR_B1.c: 102: _PIR.Count = 0;
  4151  015E  1683               	bsf	3,5	;RP0=1, select bank1
  4152  015F  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0160  01C1               	clrf	(__PIR^(0+128)+33)
  4154  0161  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4155                           
  4156                           ;PIR_B1.c: 103: _PIR.CloseTimeSeconds = 0;
  4157  0162  01C6               	clrf	(__PIR^(0+128)+38)
  4158                           
  4159                           ;PIR_B1.c: 104: _PIR.CloseTimeMinutes = 0;
  4160  0163  01C4               	clrf	(__PIR^(0+128)+36)
  4161  0164  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4162                           
  4163                           ;PIR_B1.c: 105: _PIR.Status = 1;
  4164  0165  1720               	bsf	__PIR^(0+128),6
  4165                           
  4166                           ;PIR_B1.c: 108: if (getLights_Status(1) == 0) {
  4167  0166  3001               	movlw	1
  4168  0167  158A  2759  118A   	fcall	_getLights_Status
  4169  016A  3800               	iorlw	0
  4170  016B  1D03               	skipz
  4171  016C  2975               	goto	l3913
  4172                           
  4173                           ;PIR_B1.c: 109: setLights_Trigger(1, 1);
  4174  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4175  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4176  016F  01D7               	clrf	setLights_Trigger@command
  4177  0170  0AD7               	incf	setLights_Trigger@command,f
  4178  0171  3001               	movlw	1
  4179  0172  118A  27AA  118A   	fcall	_setLights_Trigger
  4180  0175                     l3913:	
  4181                           
  4182                           ;PIR_B1.c: 110: }
  4183                           ;PIR_B1.c: 113: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4184  0175  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0176  1303               	bcf	3,6	;RP1=0, select bank1
  4186  0177  084C               	movf	(__PIR^(0+128)+44),w
  4187  0178  074E               	addwf	(__PIR^(0+128)+46),w
  4188  0179  1283               	bcf	3,5	;RP0=0, select bank0
  4189  017A  1303               	bcf	3,6	;RP1=0, select bank0
  4190  017B  00E1               	movwf	??_PIR_Main
  4191  017C  01E2               	clrf	??_PIR_Main+1
  4192  017D  0DE2               	rlf	??_PIR_Main+1,f
  4193  017E  09E1               	comf	??_PIR_Main,f
  4194  017F  09E2               	comf	??_PIR_Main+1,f
  4195  0180  0AE1               	incf	??_PIR_Main,f
  4196  0181  1903               	skipnz
  4197  0182  0AE2               	incf	??_PIR_Main+1,f
  4198  0183  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0184  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0185  0826               	movf	(__PIR^(0+128)+6),w
  4201  0186  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0187  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0188  0761               	addwf	??_PIR_Main,w
  4204  0189  00E3               	movwf	??_PIR_Main+2
  4205  018A  0862               	movf	??_PIR_Main+1,w
  4206  018B  1803               	skipnc
  4207  018C  0A62               	incf	??_PIR_Main+1,w
  4208  018D  00E4               	movwf	??_PIR_Main+3
  4209  018E  0864               	movf	??_PIR_Main+3,w
  4210  018F  3A80               	xorlw	128
  4211  0190  00E5               	movwf	??_PIR_Main+4
  4212  0191  3080               	movlw	128
  4213  0192  0265               	subwf	??_PIR_Main+4,w
  4214  0193  1D03               	skipz
  4215  0194  299B               	goto	u4095
  4216  0195  1683               	bsf	3,5	;RP0=1, select bank1
  4217  0196  1303               	bcf	3,6	;RP1=0, select bank1
  4218  0197  0821               	movf	(__PIR^(0+128)+1),w
  4219  0198  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0199  1303               	bcf	3,6	;RP1=0, select bank0
  4221  019A  0263               	subwf	??_PIR_Main+2,w
  4222  019B                     u4095:	
  4223  019B  1C03               	skipc
  4224  019C  29A9               	goto	l3917
  4225                           
  4226                           ;PIR_B1.c: 114: setLED(1, 1);
  4227  019D  1283               	bcf	3,5	;RP0=0, select bank0
  4228  019E  1303               	bcf	3,6	;RP1=0, select bank0
  4229  019F  01D7               	clrf	setLED@command
  4230  01A0  0AD7               	incf	setLED@command,f
  4231  01A1                     L14:	
  4232  01A1  3001               	movlw	1
  4233  01A2  118A  23C5  118A   	fcall	_setLED
  4234                           
  4235                           ;PIR_B1.c: 115: setLED(2, 0);
  4236  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  4237  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  4238  01A7  01D7               	clrf	setLED@command
  4239  01A8  29B4               	goto	L11
  4240  01A9                     l3917:	
  4241                           ;PIR_B1.c: 116: } else {
  4242                           
  4243                           
  4244                           ;PIR_B1.c: 117: setLED(1, 0);
  4245  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  4246  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  4247  01AB  01D7               	clrf	setLED@command
  4248  01AC  3001               	movlw	1
  4249  01AD  118A  23C5  118A   	fcall	_setLED
  4250                           
  4251                           ;PIR_B1.c: 118: setLED(2, 1);
  4252  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4253  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4254  01B2  01D7               	clrf	setLED@command
  4255  01B3  0AD7               	incf	setLED@command,f
  4256  01B4                     L11:	
  4257  01B4  3002               	movlw	2
  4258  01B5  118A  23C5  118A   	fcall	_setLED
  4259  01B8                     l3919:	
  4260                           
  4261                           ;PIR_B1.c: 119: }
  4262                           ;PIR_B1.c: 120: }
  4263                           ;PIR_B1.c: 121: }
  4264                           ;PIR_B1.c: 122: }
  4265                           ;PIR_B1.c: 123: }
  4266                           ;PIR_B1.c: 124: }
  4267                           ;PIR_B1.c: 125: }
  4268                           ;PIR_B1.c: 126: if (_PIR.OK == 0) {
  4269  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  4270  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  4271  01BA  19A0               	btfsc	__PIR^(0+128),3
  4272  01BB  29D4               	goto	l3929
  4273                           
  4274                           ;PIR_B1.c: 127: _PIR.Count++;
  4275  01BC  3001               	movlw	1
  4276  01BD  07C1               	addwf	(__PIR^(0+128)+33),f
  4277  01BE  1803               	skipnc
  4278  01BF  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4279  01C0  3000               	movlw	0
  4280  01C1  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4281                           
  4282                           ;PIR_B1.c: 128: if (_PIR.Count == 3000) {
  4283  01C2  300B               	movlw	11
  4284  01C3  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4285  01C4  1D03               	skipz
  4286  01C5  29C8               	goto	u4115
  4287  01C6  30B8               	movlw	184
  4288  01C7  0641               	xorwf	(__PIR^(0+128)+33),w
  4289  01C8                     u4115:	
  4290  01C8  1D03               	skipz
  4291  01C9  29D4               	goto	l3929
  4292                           
  4293                           ;PIR_B1.c: 129: _PIR.Count = 0;
  4294  01CA  01C1               	clrf	(__PIR^(0+128)+33)
  4295  01CB  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4296                           
  4297                           ;PIR_B1.c: 130: _PIR.OK = 1;
  4298  01CC  15A0               	bsf	__PIR^(0+128),3
  4299                           
  4300                           ;PIR_B1.c: 131: setLED(2, 0);
  4301  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  4302  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  4303  01CF  01D7               	clrf	setLED@command
  4304  01D0  3002               	movlw	2
  4305  01D1  118A  23C5  118A   	fcall	_setLED
  4306  01D4                     l3929:	
  4307                           
  4308                           ;PIR_B1.c: 132: }
  4309                           ;PIR_B1.c: 133: }
  4310                           ;PIR_B1.c: 134: if (_PIR.Status == 1) {
  4311  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  4312  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  4313  01D6  1F20               	btfss	__PIR^(0+128),6
  4314  01D7  0008               	return
  4315                           
  4316                           ;PIR_B1.c: 135: _PIR.CloseTimeSeconds++;
  4317  01D8  3001               	movlw	1
  4318  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4319  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4320  01DB  00E1               	movwf	??_PIR_Main
  4321  01DC  0861               	movf	??_PIR_Main,w
  4322  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  4323  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  4324  01DF  07C6               	addwf	(__PIR^(0+128)+38),f
  4325                           
  4326                           ;PIR_B1.c: 136: if (_PIR.CloseTimeSeconds == 100) {
  4327  01E0  0846               	movf	(__PIR^(0+128)+38),w
  4328  01E1  3A64               	xorlw	100
  4329  01E2  1D03               	skipz
  4330  01E3  0008               	return
  4331                           
  4332                           ;PIR_B1.c: 137: _PIR.CloseTimeSeconds = 0;
  4333  01E4  01C6               	clrf	(__PIR^(0+128)+38)
  4334                           
  4335                           ;PIR_B1.c: 138: _PIR.CloseTimeMinutes++;
  4336  01E5  3001               	movlw	1
  4337  01E6  07C4               	addwf	(__PIR^(0+128)+36),f
  4338  01E7  1803               	skipnc
  4339  01E8  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4340  01E9  3000               	movlw	0
  4341  01EA  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4342                           
  4343                           ;PIR_B1.c: 139: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4344  01EB  0848               	movf	((__PIR+1)^(0+128)+39),w
  4345  01EC  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4346  01ED  1D03               	skipz
  4347  01EE  29F1               	goto	u4145
  4348  01EF  0847               	movf	(__PIR^(0+128)+39),w
  4349  01F0  0644               	xorwf	(__PIR^(0+128)+36),w
  4350  01F1                     u4145:	
  4351  01F1  1D03               	skipz
  4352  01F2  0008               	return
  4353                           
  4354                           ;PIR_B1.c: 140: _PIR.CloseTimeMinutes = 0;
  4355  01F3  01C4               	clrf	(__PIR^(0+128)+36)
  4356  01F4  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4357                           
  4358                           ;PIR_B1.c: 141: _PIR.Status = 0;
  4359  01F5  1320               	bcf	__PIR^(0+128),6
  4360                           
  4361                           ;PIR_B1.c: 144: if (getLights_Status(1) == 1) {
  4362  01F6  3001               	movlw	1
  4363  01F7  158A  2759  118A   	fcall	_getLights_Status
  4364  01FA  3A01               	xorlw	1
  4365  01FB  1D03               	skipz
  4366  01FC  0008               	return
  4367                           
  4368                           ;PIR_B1.c: 145: setLights_Trigger(1, 0);
  4369  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4370  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4371  01FF  01D7               	clrf	setLights_Trigger@command
  4372  0200  3001               	movlw	1
  4373  0201  118A  27AA         	fcall	_setLights_Trigger
  4374                           
  4375                           ;PIR_B1.c: 146: }
  4376                           ;PIR_B1.c: 149: }
  4377                           ;PIR_B1.c: 150: }
  4378                           ;PIR_B1.c: 151: }
  4379                           ;PIR_B1.c: 152: } else {
  4380  0203  0008               	return
  4381  0204                     l748:	
  4382                           
  4383                           ;PIR_B1.c: 153: if (myMain.PowerON == 1) {
  4384  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0206  1C20               	btfss	_myMain,0
  4387  0207  0008               	return
  4388                           
  4389                           ;PIR_B1.c: 154: _PIR.Enable = 1;
  4390  0208  1683               	bsf	3,5	;RP0=1, select bank1
  4391  0209  1303               	bcf	3,6	;RP1=0, select bank1
  4392  020A  1420               	bsf	__PIR^(0+128),0
  4393                           
  4394                           ;PIR_B1.c: 157: if (getLights_Status(1) == 0) {
  4395  020B  3001               	movlw	1
  4396  020C  158A  2759  118A   	fcall	_getLights_Status
  4397  020F  3800               	iorlw	0
  4398  0210  1D03               	skipz
  4399  0211  0008               	return
  4400                           
  4401                           ;PIR_B1.c: 158: setLights_Trigger(1, 1);
  4402  0212  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0213  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0214  01D7               	clrf	setLights_Trigger@command
  4405  0215  0AD7               	incf	setLights_Trigger@command,f
  4406  0216  3001               	movlw	1
  4407  0217  118A  27AA         	fcall	_setLights_Trigger
  4408  0219  0008               	return
  4409  021A                     __end_of_PIR_Main:	
  4410                           
  4411                           	psect	text17
  4412  05C5                     __ptext17:	
  4413 ;; *************** function _setMain_Exception *****************
  4414 ;; Defined at:
  4415 ;;		line 289 in file "../src/Main_B1.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  command         1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  command         1   11[BANK0 ] unsigned char 
  4420 ;;  status          1    8[BANK0 ] unsigned char 
  4421 ;;  buz             1    7[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4431 ;;      Params:         0       0       0       0
  4432 ;;      Locals:         0       5       0       0
  4433 ;;      Temps:          0       2       0       0
  4434 ;;      Totals:         0       7       0       0
  4435 ;;Total ram usage:        7 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    5
  4438 ;; This function calls:
  4439 ;;		_getAll_Lights_Line
  4440 ;;		_setLED
  4441 ;;		_setLights_Trigger
  4442 ;; This function is called by:
  4443 ;;		_PIR_Main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _setMain_Exception
  4449  05C5                     _setMain_Exception:	
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4453                           ;setMain_Exception@command stored from wreg
  4454  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  4455  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  4456  05C7  00E0               	movwf	setMain_Exception@command
  4457                           
  4458                           ;Main_B1.c: 290: char status = 0, buz = 0;
  4459  05C8  01DD               	clrf	setMain_Exception@status
  4460  05C9  01DC               	clrf	setMain_Exception@buz
  4461                           
  4462                           ;Main_B1.c: 292: status = command == 3 ? getAll_Lights_Line() : 255;
  4463  05CA  0860               	movf	setMain_Exception@command,w
  4464  05CB  3A03               	xorlw	3
  4465  05CC  1903               	skipnz
  4466  05CD  2DD2               	goto	l3601
  4467  05CE  30FF               	movlw	255
  4468  05CF  00DE               	movwf	_setMain_Exception$2026
  4469  05D0  3000               	movlw	0
  4470  05D1  2DDC               	goto	L15
  4471  05D2                     l3601:	
  4472  05D2  158A  276A  118A   	fcall	_getAll_Lights_Line
  4473  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  4474  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  4475  05D7  00DA               	movwf	??_setMain_Exception
  4476  05D8  01DB               	clrf	??_setMain_Exception+1
  4477  05D9  085A               	movf	??_setMain_Exception,w
  4478  05DA  00DE               	movwf	_setMain_Exception$2026
  4479  05DB  085B               	movf	??_setMain_Exception+1,w
  4480  05DC                     L15:	
  4481  05DC  00DF               	movwf	_setMain_Exception$2026+1
  4482  05DD  085E               	movf	_setMain_Exception$2026,w
  4483  05DE  00DA               	movwf	??_setMain_Exception
  4484  05DF  085A               	movf	??_setMain_Exception,w
  4485  05E0  00DD               	movwf	setMain_Exception@status
  4486                           
  4487                           ;Main_B1.c: 294: if (command == 0) {
  4488  05E1  08E0               	movf	setMain_Exception@command,f
  4489  05E2  1D03               	skipz
  4490  05E3  2DE6               	goto	l3609
  4491                           
  4492                           ;Main_B1.c: 295: setLED(command, 110);
  4493  05E4  306E               	movlw	110
  4494  05E5  2DF1               	goto	L16
  4495  05E6                     l3609:	
  4496                           ;Main_B1.c: 296: } else if (command == 5) {
  4497                           
  4498  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  4499  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  4500  05E8  0860               	movf	setMain_Exception@command,w
  4501  05E9  3A05               	xorlw	5
  4502  05EA  1D03               	skipz
  4503  05EB  2DEE               	goto	l3613
  4504                           
  4505                           ;Main_B1.c: 297: __nop();
  4506  05EC  0000               	nop
  4507                           
  4508                           ;Main_B1.c: 298: } else {
  4509  05ED  2DF8               	goto	l3615
  4510  05EE                     l3613:	
  4511                           
  4512                           ;Main_B1.c: 299: setLED(command, 111);
  4513  05EE  306F               	movlw	111
  4514  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  4515  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  4516  05F1                     L16:	
  4517  05F1  00DA               	movwf	??_setMain_Exception
  4518  05F2  085A               	movf	??_setMain_Exception,w
  4519  05F3  00D7               	movwf	setLED@command
  4520  05F4  0860               	movf	setMain_Exception@command,w
  4521  05F5  118A  23C5  118A   	fcall	_setLED
  4522  05F8                     l3615:	
  4523                           
  4524                           ;Main_B1.c: 300: }
  4525                           ;Main_B1.c: 302: if (command != 0) {
  4526  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4527  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4528  05FA  0860               	movf	setMain_Exception@command,w
  4529  05FB  1903               	btfsc	3,2
  4530  05FC  0008               	return
  4531                           
  4532                           ;Main_B1.c: 303: setLights_Trigger(1, 0);
  4533  05FD  01D7               	clrf	setLights_Trigger@command
  4534  05FE  3001               	movlw	1
  4535  05FF  118A  27AA         	fcall	_setLights_Trigger
  4536  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0603  0008               	return
  4539  0604                     __end_of_setMain_Exception:	
  4540                           
  4541                           	psect	text18
  4542  07AA                     __ptext18:	
  4543 ;; *************** function _setLights_Trigger *****************
  4544 ;; Defined at:
  4545 ;;		line 214 in file "../src/TriacRelay_B1.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  lights          1    wreg     unsigned char 
  4548 ;;  command         1    2[BANK0 ] unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  lights          1    4[BANK0 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;		None               void
  4553 ;; Registers used:
  4554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4560 ;;      Params:         0       1       0       0
  4561 ;;      Locals:         0       1       0       0
  4562 ;;      Temps:          0       1       0       0
  4563 ;;      Totals:         0       3       0       0
  4564 ;;Total ram usage:        3 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    4
  4567 ;; This function calls:
  4568 ;;		_LightsPointSelect
  4569 ;; This function is called by:
  4570 ;;		_setMain_Exception
  4571 ;;		_PIR_Main
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _setLights_Trigger
  4577  07AA                     _setLights_Trigger:	
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4581                           ;setLights_Trigger@lights stored from wreg
  4582  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4583  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4584  07AC  00D9               	movwf	setLights_Trigger@lights
  4585                           
  4586                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  4587  07AD  0859               	movf	setLights_Trigger@lights,w
  4588  07AE  118A  27F3         	fcall	_LightsPointSelect
  4589                           
  4590                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  4591  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4592  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4593  07B2  0834               	movf	_Lights,w
  4594  07B3  0084               	movwf	4
  4595  07B4  1383               	bcf	3,7	;select IRP bank0
  4596  07B5  1580               	bsf	0,3
  4597                           
  4598                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  4599  07B6  0857               	movf	setLights_Trigger@command,w
  4600  07B7  3A01               	xorlw	1
  4601  07B8  3000               	movlw	0
  4602  07B9  1903               	skipnz
  4603  07BA  3001               	movlw	1
  4604  07BB  00D8               	movwf	??_setLights_Trigger
  4605  07BC  0834               	movf	_Lights,w
  4606  07BD  0084               	movwf	4
  4607  07BE  0ED8               	swapf	??_setLights_Trigger,f
  4608  07BF  0800               	movf	0,w
  4609  07C0  0658               	xorwf	??_setLights_Trigger,w
  4610  07C1  39EF               	andlw	-17
  4611  07C2  0658               	xorwf	??_setLights_Trigger,w
  4612  07C3  0080               	movwf	0
  4613  07C4  0008               	return
  4614  07C5                     __end_of_setLights_Trigger:	
  4615                           
  4616                           	psect	text19
  4617  0F6A                     __ptext19:	
  4618 ;; *************** function _getAll_Lights_Line *****************
  4619 ;; Defined at:
  4620 ;;		line 236 in file "../src/TriacRelay_B1.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  line            1    2[BANK0 ] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      unsigned char 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4634 ;;      Params:         0       0       0       0
  4635 ;;      Locals:         0       1       0       0
  4636 ;;      Temps:          0       0       0       0
  4637 ;;      Totals:         0       1       0       0
  4638 ;;Total ram usage:        1 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    4
  4641 ;; This function calls:
  4642 ;;		_LightsPointSelect
  4643 ;; This function is called by:
  4644 ;;		_setMain_Exception
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _getAll_Lights_Line
  4650  0F6A                     _getAll_Lights_Line:	
  4651                           
  4652                           ;TriacRelay_B1.c: 237: char line = 0;
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4656  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0F6C  01D7               	clrf	getAll_Lights_Line@line
  4659                           
  4660                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  4661  0F6D  3001               	movlw	1
  4662  0F6E  118A  27F3         	fcall	_LightsPointSelect
  4663                           
  4664                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  4665  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0F72  0A34               	incf	_Lights,w
  4668  0F73  0084               	movwf	4
  4669  0F74  3000               	movlw	0
  4670  0F75  1383               	bcf	3,7	;select IRP bank0
  4671  0F76  1800               	btfsc	0,0
  4672  0F77  3001               	movlw	1
  4673  0F78  00D7               	movwf	getAll_Lights_Line@line
  4674                           
  4675                           ;TriacRelay_B1.c: 250: return line;
  4676  0F79  0857               	movf	getAll_Lights_Line@line,w
  4677  0F7A  0008               	return
  4678  0F7B                     __end_of_getAll_Lights_Line:	
  4679                           
  4680                           	psect	text20
  4681  0734                     __ptext20:	
  4682 ;; *************** function _getMain_All_Error_Status *****************
  4683 ;; Defined at:
  4684 ;;		line 376 in file "../src/Main_B1.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  command         1    wreg     unsigned char 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  command         1    2[BANK0 ] unsigned char 
  4689 ;;  status          1    5[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, pclath, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4699 ;;      Params:         0       0       0       0
  4700 ;;      Locals:         0       4       0       0
  4701 ;;      Temps:          0       1       0       0
  4702 ;;      Totals:         0       5       0       0
  4703 ;;Total ram usage:        5 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    4
  4706 ;; This function calls:
  4707 ;;		_getCDS_Status
  4708 ;; This function is called by:
  4709 ;;		_PIR_Main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _getMain_All_Error_Status
  4715  0734                     _getMain_All_Error_Status:	
  4716                           
  4717                           ;incstack = 0
  4718                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  4719                           ;getMain_All_Error_Status@command stored from wreg
  4720  0734  1283               	bcf	3,5	;RP0=0, select bank0
  4721  0735  1303               	bcf	3,6	;RP1=0, select bank0
  4722  0736  00D7               	movwf	getMain_All_Error_Status@command
  4723                           
  4724                           ;Main_B1.c: 377: char status = 0;
  4725  0737  01DA               	clrf	getMain_All_Error_Status@status
  4726                           
  4727                           ;Main_B1.c: 409: if (status == 0 && command != 5) {
  4728  0738  08DA               	movf	getMain_All_Error_Status@status,f
  4729  0739  1D03               	skipz
  4730  073A  2F54               	goto	l629
  4731  073B  0857               	movf	getMain_All_Error_Status@command,w
  4732  073C  3A05               	xorlw	5
  4733  073D  1903               	skipnz
  4734  073E  2F54               	goto	l629
  4735                           
  4736                           ;Main_B1.c: 410: status = getCDS_Status() == 0 ? 5 : 0;
  4737  073F  158A  26F2  118A   	fcall	_getCDS_Status
  4738  0742  3A00               	xorlw	0
  4739  0743  1903               	skipnz
  4740  0744  2F4A               	goto	l3629
  4741  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0746  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0747  01D8               	clrf	_getMain_All_Error_Status$2037
  4744  0748  01D9               	clrf	_getMain_All_Error_Status$2037+1
  4745  0749  2F50               	goto	l633
  4746  074A                     l3629:	
  4747  074A  3005               	movlw	5
  4748  074B  1283               	bcf	3,5	;RP0=0, select bank0
  4749  074C  1303               	bcf	3,6	;RP1=0, select bank0
  4750  074D  00D8               	movwf	_getMain_All_Error_Status$2037
  4751  074E  3000               	movlw	0
  4752  074F  00D9               	movwf	_getMain_All_Error_Status$2037+1
  4753  0750                     l633:	
  4754  0750  0858               	movf	_getMain_All_Error_Status$2037,w
  4755  0751  00D6               	movwf	??_getMain_All_Error_Status
  4756  0752  0856               	movf	??_getMain_All_Error_Status,w
  4757  0753  00DA               	movwf	getMain_All_Error_Status@status
  4758  0754                     l629:	
  4759                           
  4760                           ;Main_B1.c: 411: }
  4761                           ;Main_B1.c: 413: return status;
  4762  0754  085A               	movf	getMain_All_Error_Status@status,w
  4763  0755  0008               	return
  4764  0756                     __end_of_getMain_All_Error_Status:	
  4765                           
  4766                           	psect	text21
  4767  0EF2                     __ptext21:	
  4768 ;; *************** function _getCDS_Status *****************
  4769 ;; Defined at:
  4770 ;;		line 40 in file "../src/CDS_B1.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  status          1    0[BANK0 ] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4784 ;;      Params:         0       0       0       0
  4785 ;;      Locals:         0       1       0       0
  4786 ;;      Temps:          0       0       0       0
  4787 ;;      Totals:         0       1       0       0
  4788 ;;Total ram usage:        1 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    3
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_getMain_All_Error_Status
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           
  4799                           ;psect for function _getCDS_Status
  4800  0EF2                     _getCDS_Status:	
  4801                           
  4802                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4806  0EF2  3000               	movlw	0
  4807  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0EF5  1A27               	btfsc	__CDS,4
  4810  0EF6  3001               	movlw	1
  4811  0EF7  00D5               	movwf	getCDS_Status@status
  4812                           
  4813                           ;CDS_B1.c: 42: return status;
  4814  0EF8  0855               	movf	getCDS_Status@status,w
  4815  0EF9  0008               	return
  4816  0EFA                     __end_of_getCDS_Status:	
  4817                           
  4818                           	psect	text22
  4819  0FC3                     __ptext22:	
  4820 ;; *************** function _PIR_Initialization *****************
  4821 ;; Defined at:
  4822 ;;		line 7 in file "../src/PIR_B1.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4836 ;;      Params:         0       0       0       0
  4837 ;;      Locals:         0       0       0       0
  4838 ;;      Temps:          0       1       0       0
  4839 ;;      Totals:         0       1       0       0
  4840 ;;Total ram usage:        1 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    5
  4843 ;; This function calls:
  4844 ;;		_setLED
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _PIR_Initialization
  4852  0FC3                     _PIR_Initialization:	
  4853                           
  4854                           ;PIR_B1.c: 8: setLED(1, 1);
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4858  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0FC5  01D7               	clrf	setLED@command
  4861  0FC6  0AD7               	incf	setLED@command,f
  4862  0FC7  3001               	movlw	1
  4863  0FC8  118A  23C5         	fcall	_setLED
  4864                           
  4865                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  4866  0FCA  300F               	movlw	15
  4867  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0FCD  00D9               	movwf	??_PIR_Initialization
  4870  0FCE  0859               	movf	??_PIR_Initialization,w
  4871  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  4873  0FD1  00CC               	movwf	(__PIR^(0+128)+44)
  4874                           
  4875                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  4876  0FD2  3005               	movlw	5
  4877  0FD3  00C7               	movwf	(__PIR^(0+128)+39)
  4878  0FD4  3000               	movlw	0
  4879  0FD5  00C8               	movwf	(__PIR^(0+128)+40)
  4880  0FD6  0008               	return
  4881  0FD7                     __end_of_PIR_Initialization:	
  4882                           
  4883                           	psect	text23
  4884  0F9E                     __ptext23:	
  4885 ;; *************** function _Mcu_Initialization *****************
  4886 ;; Defined at:
  4887 ;;		line 30 in file "../src/MCU_B1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;		None               void
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, pclath, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4901 ;;      Params:         0       0       0       0
  4902 ;;      Locals:         0       0       0       0
  4903 ;;      Temps:          0       0       0       0
  4904 ;;      Totals:         0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    4
  4908 ;; This function calls:
  4909 ;;		_ADC_Set
  4910 ;;		_Fosc_Set
  4911 ;;		_IO_Set
  4912 ;;		_TMR1_Set
  4913 ;;		_UART_Set
  4914 ;;		_WDT_Set
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function _Mcu_Initialization
  4922  0F9E                     _Mcu_Initialization:	
  4923                           
  4924                           ;MCU_B1.c: 32: Fosc_Set();
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4928  0F9E  158A  26D3  158A   	fcall	_Fosc_Set
  4929                           
  4930                           ;MCU_B1.c: 34: IO_Set();
  4931  0FA1  118A  27DE  158A   	fcall	_IO_Set
  4932                           
  4933                           ;MCU_B1.c: 36: ;;
  4934                           ;MCU_B1.c: 38: TMR1_Set();
  4935  0FA4  158A  272F  158A   	fcall	_TMR1_Set
  4936                           
  4937                           ;MCU_B1.c: 40: ADC_Set();
  4938  0FA7  158A  26EB  158A   	fcall	_ADC_Set
  4939                           
  4940                           ;MCU_B1.c: 42: ;;
  4941                           ;MCU_B1.c: 44: ;;
  4942                           ;MCU_B1.c: 46: ;;
  4943                           ;MCU_B1.c: 48: ;;
  4944                           ;MCU_B1.c: 50: UART_Set();
  4945  0FAA  118A  27C5  158A   	fcall	_UART_Set
  4946                           
  4947                           ;MCU_B1.c: 52: WDT_Set();
  4948  0FAD  158A  273D         	fcall	_WDT_Set
  4949  0FAF  0008               	return
  4950  0FB0                     __end_of_Mcu_Initialization:	
  4951                           
  4952                           	psect	text24
  4953  0F3D                     __ptext24:	
  4954 ;; *************** function _WDT_Set *****************
  4955 ;; Defined at:
  4956 ;;		line 1044 in file "../src/MCU_B1.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;		None               void
  4963 ;; Registers used:
  4964 ;;		wreg
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4970 ;;      Params:         0       0       0       0
  4971 ;;      Locals:         0       0       0       0
  4972 ;;      Temps:          0       1       0       0
  4973 ;;      Totals:         0       1       0       0
  4974 ;;Total ram usage:        1 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    3
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_Mcu_Initialization
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function _WDT_Set
  4986  0F3D                     _WDT_Set:	
  4987                           
  4988                           ;MCU_B1.c: 1046: PSA = 1;
  4989                           
  4990                           ;incstack = 0
  4991                           ; Regs used in _WDT_Set: [wreg]
  4992  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  4993  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  4994  0F3F  1581               	bsf	1,3	;volatile
  4995                           
  4996                           ;MCU_B1.c: 1047: PS0 = 1;
  4997  0F40  1401               	bsf	1,0	;volatile
  4998                           
  4999                           ;MCU_B1.c: 1048: PS1 = 1;
  5000  0F41  1481               	bsf	1,1	;volatile
  5001                           
  5002                           ;MCU_B1.c: 1049: PS2 = 1;
  5003  0F42  1501               	bsf	1,2	;volatile
  5004                           
  5005                           ;MCU_B1.c: 1053: WDT.Enable = 1;
  5006  0F43  1477               	bsf	_WDT,0
  5007                           
  5008                           ;MCU_B1.c: 1054: WDT.Timer = 10;
  5009  0F44  300A               	movlw	10
  5010  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0F47  00D5               	movwf	??_WDT_Set
  5013  0F48  0855               	movf	??_WDT_Set,w
  5014  0F49  00F8               	movwf	_WDT+1
  5015  0F4A  0008               	return
  5016  0F4B                     __end_of_WDT_Set:	
  5017                           
  5018                           	psect	text25
  5019  07C5                     __ptext25:	
  5020 ;; *************** function _UART_Set *****************
  5021 ;; Defined at:
  5022 ;;		line 720 in file "../src/MCU_B1.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;		None               void
  5029 ;; Registers used:
  5030 ;;		wreg
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5036 ;;      Params:         0       0       0       0
  5037 ;;      Locals:         0       0       0       0
  5038 ;;      Temps:          0       0       0       0
  5039 ;;      Totals:         0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    3
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_Mcu_Initialization
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function _UART_Set
  5052  07C5                     _UART_Set:	
  5053                           
  5054                           ;MCU_B1.c: 722: TRISC7 = 1;
  5055                           
  5056                           ;incstack = 0
  5057                           ; Regs used in _UART_Set: [wreg]
  5058  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  5059  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  5060  07C7  1787               	bsf	7,7	;volatile
  5061                           
  5062                           ;MCU_B1.c: 723: TRISC6 = 1;
  5063  07C8  1707               	bsf	7,6	;volatile
  5064                           
  5065                           ;MCU_B1.c: 724: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  5066  07C9  3033               	movlw	51
  5067  07CA  0099               	movwf	25	;volatile
  5068                           
  5069                           ;MCU_B1.c: 729: RCSTA = (0 | 0x90);
  5070  07CB  3090               	movlw	144
  5071  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  5072  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  5073  07CE  0098               	movwf	24	;volatile
  5074                           
  5075                           ;MCU_B1.c: 730: TXSTA = (0x4 | 0 | 0x20);
  5076  07CF  3024               	movlw	36
  5077  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  5078  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  5079  07D2  0098               	movwf	24	;volatile
  5080                           
  5081                           ;MCU_B1.c: 731: TX9 = 0;
  5082  07D3  1318               	bcf	24,6	;volatile
  5083                           
  5084                           ;MCU_B1.c: 732: RX9 = 0;
  5085  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  5086  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  5087  07D6  1318               	bcf	24,6	;volatile
  5088                           
  5089                           ;MCU_B1.c: 733: TXIE = 0;
  5090  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  5091  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  5092  07D9  120C               	bcf	12,4	;volatile
  5093                           
  5094                           ;MCU_B1.c: 734: RCIE = 1;
  5095  07DA  168C               	bsf	12,5	;volatile
  5096                           
  5097                           ;MCU_B1.c: 735: PEIE = 1;
  5098  07DB  170B               	bsf	11,6	;volatile
  5099                           
  5100                           ;MCU_B1.c: 736: GIE = 1;
  5101  07DC  178B               	bsf	11,7	;volatile
  5102  07DD  0008               	return
  5103  07DE                     __end_of_UART_Set:	
  5104                           
  5105                           	psect	text26
  5106  0F2F                     __ptext26:	
  5107 ;; *************** function _TMR1_Set *****************
  5108 ;; Defined at:
  5109 ;;		line 199 in file "../src/MCU_B1.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5123 ;;      Params:         0       0       0       0
  5124 ;;      Locals:         0       0       0       0
  5125 ;;      Temps:          0       0       0       0
  5126 ;;      Totals:         0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    3
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_Mcu_Initialization
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _TMR1_Set
  5139  0F2F                     _TMR1_Set:	
  5140                           
  5141                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _TMR1_Set: [wreg]
  5145  0F2F  3041               	movlw	65
  5146  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0F32  0090               	movwf	16	;volatile
  5149                           
  5150                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5151  0F33  30FA               	movlw	250
  5152  0F34  008F               	movwf	15	;volatile
  5153                           
  5154                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5155  0F35  3038               	movlw	56
  5156  0F36  008E               	movwf	14	;volatile
  5157                           
  5158                           ;MCU_B1.c: 203: TMR1IE = 1;
  5159  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  5160  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  5161  0F39  140C               	bsf	12,0	;volatile
  5162                           
  5163                           ;MCU_B1.c: 204: PEIE = 1;
  5164  0F3A  170B               	bsf	11,6	;volatile
  5165                           
  5166                           ;MCU_B1.c: 205: GIE = 1;
  5167  0F3B  178B               	bsf	11,7	;volatile
  5168  0F3C  0008               	return
  5169  0F3D                     __end_of_TMR1_Set:	
  5170                           
  5171                           	psect	text27
  5172  07DE                     __ptext27:	
  5173 ;; *************** function _IO_Set *****************
  5174 ;; Defined at:
  5175 ;;		line 60 in file "../src/MCU_B1.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, status,2
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5189 ;;      Params:         0       0       0       0
  5190 ;;      Locals:         0       0       0       0
  5191 ;;      Temps:          0       0       0       0
  5192 ;;      Totals:         0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    3
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_Mcu_Initialization
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _IO_Set
  5205  07DE                     _IO_Set:	
  5206                           
  5207                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in _IO_Set: [wreg+status,2]
  5211  07DE  302F               	movlw	47
  5212  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  5213  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  5214  07E1  0085               	movwf	5	;volatile
  5215                           
  5216                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5217  07E2  3001               	movlw	1
  5218  07E3  0086               	movwf	6	;volatile
  5219                           
  5220                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5221  07E4  0187               	clrf	7	;volatile
  5222                           
  5223                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5224  07E5  3007               	movlw	7
  5225  07E6  1683               	bsf	3,5	;RP0=1, select bank3
  5226  07E7  1703               	bsf	3,6	;RP1=1, select bank3
  5227  07E8  0085               	movwf	5	;volatile
  5228                           
  5229                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5230  07E9  3001               	movlw	1
  5231  07EA  0086               	movwf	6	;volatile
  5232                           
  5233                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5234  07EB  30AF               	movlw	175
  5235  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  5236  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  5237  07EE  0085               	movwf	5	;volatile
  5238                           
  5239                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5240  07EF  3001               	movlw	1
  5241  07F0  0086               	movwf	6	;volatile
  5242                           
  5243                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5244  07F1  0187               	clrf	7	;volatile
  5245  07F2  0008               	return
  5246  07F3                     __end_of_IO_Set:	
  5247                           
  5248                           	psect	text28
  5249  0ED3                     __ptext28:	
  5250 ;; *************** function _Fosc_Set *****************
  5251 ;; Defined at:
  5252 ;;		line 56 in file "../src/MCU_B1.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		wreg
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5266 ;;      Params:         0       0       0       0
  5267 ;;      Locals:         0       0       0       0
  5268 ;;      Temps:          0       0       0       0
  5269 ;;      Totals:         0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    3
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_Mcu_Initialization
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _Fosc_Set
  5282  0ED3                     _Fosc_Set:	
  5283                           
  5284                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5285                           
  5286                           ;incstack = 0
  5287                           ; Regs used in _Fosc_Set: [wreg]
  5288  0ED3  303C               	movlw	60
  5289  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0ED6  0090               	movwf	16	;volatile
  5292  0ED7  0008               	return
  5293  0ED8                     __end_of_Fosc_Set:	
  5294                           
  5295                           	psect	text29
  5296  0EEB                     __ptext29:	
  5297 ;; *************** function _ADC_Set *****************
  5298 ;; Defined at:
  5299 ;;		line 421 in file "../src/MCU_B1.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;		None               void
  5306 ;; Registers used:
  5307 ;;		wreg
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5313 ;;      Params:         0       0       0       0
  5314 ;;      Locals:         0       0       0       0
  5315 ;;      Temps:          0       0       0       0
  5316 ;;      Totals:         0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    3
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_Mcu_Initialization
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _ADC_Set
  5329  0EEB                     _ADC_Set:	
  5330                           
  5331                           ;MCU_B1.c: 422: ADCON1 = 0x73;
  5332                           
  5333                           ;incstack = 0
  5334                           ; Regs used in _ADC_Set: [wreg]
  5335  0EEB  3073               	movlw	115
  5336  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  5337  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  5338  0EEE  009F               	movwf	31	;volatile
  5339                           
  5340                           ;MCU_B1.c: 423: FVRCON = 0xc1;
  5341  0EEF  30C1               	movlw	193
  5342  0EF0  009D               	movwf	29	;volatile
  5343  0EF1  0008               	return
  5344  0EF2                     __end_of_ADC_Set:	
  5345                           
  5346                           	psect	text30
  5347  0F0A                     __ptext30:	
  5348 ;; *************** function _Lights_Main *****************
  5349 ;; Defined at:
  5350 ;;		line 54 in file "../src/TriacRelay_B1.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;		None               void
  5357 ;; Registers used:
  5358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5364 ;;      Params:         0       0       0       0
  5365 ;;      Locals:         0       0       0       0
  5366 ;;      Temps:          0       0       0       0
  5367 ;;      Totals:         0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    7
  5371 ;; This function calls:
  5372 ;;		_Lights_Close
  5373 ;;		_Lights_Control
  5374 ;;		_setLights_Main
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _Lights_Main
  5382  0F0A                     _Lights_Main:	
  5383                           
  5384                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  5385                           
  5386                           ;incstack = 0
  5387                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5388  0F0A  3001               	movlw	1
  5389  0F0B  118A  26C8  158A   	fcall	_setLights_Main
  5390                           
  5391                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  5392  0F0E  3001               	movlw	1
  5393  0F0F  118A  2493  158A   	fcall	_Lights_Control
  5394                           
  5395                           ;TriacRelay_B1.c: 81: Lights_Close();
  5396  0F12  158A  27EB         	fcall	_Lights_Close
  5397  0F14  0008               	return
  5398  0F15                     __end_of_Lights_Main:	
  5399                           
  5400                           	psect	text31
  5401  06C8                     __ptext31:	
  5402 ;; *************** function _setLights_Main *****************
  5403 ;; Defined at:
  5404 ;;		line 93 in file "../src/TriacRelay_B1.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  lights          1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  lights          1    6[BANK0 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5418 ;;      Params:         0       0       0       0
  5419 ;;      Locals:         0       1       0       0
  5420 ;;      Temps:          0       0       0       0
  5421 ;;      Totals:         0       1       0       0
  5422 ;;Total ram usage:        1 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    6
  5425 ;; This function calls:
  5426 ;;		_LightsPointSelect
  5427 ;;		_setLights
  5428 ;; This function is called by:
  5429 ;;		_Lights_Main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           
  5434                           ;psect for function _setLights_Main
  5435  06C8                     _setLights_Main:	
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5439                           ;setLights_Main@lights stored from wreg
  5440  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5441  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5442  06CA  00DB               	movwf	setLights_Main@lights
  5443                           
  5444                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  5445  06CB  085B               	movf	setLights_Main@lights,w
  5446  06CC  118A  27F3  118A   	fcall	_LightsPointSelect
  5447                           
  5448                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  5449  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5450  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5451  06D1  0834               	movf	_Lights,w
  5452  06D2  0084               	movwf	4
  5453  06D3  1383               	bcf	3,7	;select IRP bank0
  5454  06D4  1880               	btfsc	0,1
  5455  06D5  0008               	return
  5456                           
  5457                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  5458  06D6  0834               	movf	_Lights,w
  5459  06D7  0084               	movwf	4
  5460  06D8  1D80               	btfss	0,3
  5461  06D9  0008               	return
  5462                           
  5463                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  5464  06DA  1935               	btfsc	_LightsControl,2
  5465  06DB  0008               	return
  5466                           
  5467                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  5468  06DC  0834               	movf	_Lights,w
  5469  06DD  0084               	movwf	4
  5470  06DE  1180               	bcf	0,3
  5471                           
  5472                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  5473  06DF  0834               	movf	_Lights,w
  5474  06E0  0084               	movwf	4
  5475  06E1  1E00               	btfss	0,4
  5476  06E2  2EE9               	goto	l3647
  5477                           
  5478                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  5479  06E3  01D8               	clrf	setLights@status
  5480  06E4  0AD8               	incf	setLights@status,f
  5481  06E5  085B               	movf	setLights_Main@lights,w
  5482  06E6  118A  24EC         	fcall	_setLights
  5483                           
  5484                           ;TriacRelay_B1.c: 102: } else {
  5485  06E8  0008               	return
  5486  06E9                     l3647:	
  5487                           
  5488                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  5489  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  5490  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  5491  06EB  01D8               	clrf	setLights@status
  5492  06EC  085B               	movf	setLights_Main@lights,w
  5493  06ED  118A  24EC         	fcall	_setLights
  5494  06EF  0008               	return
  5495  06F0                     __end_of_setLights_Main:	
  5496                           
  5497                           	psect	text32
  5498  04EC                     __ptext32:	
  5499 ;; *************** function _setLights *****************
  5500 ;; Defined at:
  5501 ;;		line 111 in file "../src/TriacRelay_B1.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  lights          1    wreg     unsigned char 
  5504 ;;  status          1    3[BANK0 ] unsigned char 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  lights          1    5[BANK0 ] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;		None               void
  5509 ;; Registers used:
  5510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5516 ;;      Params:         0       1       0       0
  5517 ;;      Locals:         0       1       0       0
  5518 ;;      Temps:          0       1       0       0
  5519 ;;      Totals:         0       3       0       0
  5520 ;;Total ram usage:        3 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    5
  5523 ;; This function calls:
  5524 ;;		_LightsPointSelect
  5525 ;;		_setLights_Line
  5526 ;; This function is called by:
  5527 ;;		_setLights_Main
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _setLights
  5533  04EC                     _setLights:	
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5537                           ;setLights@lights stored from wreg
  5538  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  5539  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  5540  04EE  00DA               	movwf	setLights@lights
  5541                           
  5542                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  5543  04EF  085A               	movf	setLights@lights,w
  5544  04F0  118A  27F3  118A   	fcall	_LightsPointSelect
  5545                           
  5546                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  5547  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5548  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5549  04F5  0834               	movf	_Lights,w
  5550  04F6  0084               	movwf	4
  5551  04F7  1383               	bcf	3,7	;select IRP bank0
  5552  04F8  1480               	bsf	0,1
  5553                           
  5554                           ;TriacRelay_B1.c: 121: if (status == 1) {
  5555  04F9  0858               	movf	setLights@status,w
  5556  04FA  3A01               	xorlw	1
  5557  04FB  1D03               	skipz
  5558  04FC  2D1A               	goto	l3467
  5559                           
  5560                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  5561  04FD  0834               	movf	_Lights,w
  5562  04FE  0084               	movwf	4
  5563  04FF  1900               	btfsc	0,2
  5564  0500  2D35               	goto	l3471
  5565                           
  5566                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  5567  0501  0834               	movf	_Lights,w
  5568  0502  0084               	movwf	4
  5569  0503  1500               	bsf	0,2
  5570                           
  5571                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  5572  0504  0A34               	incf	_Lights,w
  5573  0505  0084               	movwf	4
  5574  0506  1480               	bsf	0,1
  5575                           
  5576                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  5577  0507  300A               	movlw	10
  5578  0508  00D9               	movwf	??_setLights
  5579  0509  0834               	movf	_Lights,w
  5580  050A  3E06               	addlw	6
  5581  050B  0084               	movwf	4
  5582  050C  0859               	movf	??_setLights,w
  5583  050D  0080               	movwf	0
  5584                           
  5585                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  5586  050E  300D               	movlw	13
  5587  050F  00D9               	movwf	??_setLights
  5588  0510  0834               	movf	_Lights,w
  5589  0511  3E04               	addlw	4
  5590  0512  0084               	movwf	4
  5591  0513  0859               	movf	??_setLights,w
  5592  0514  0080               	movwf	0
  5593                           
  5594                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  5595  0515  085A               	movf	setLights@lights,w
  5596  0516  158A  2721  118A   	fcall	_setLights_Line
  5597                           
  5598                           ;TriacRelay_B1.c: 128: }
  5599                           ;TriacRelay_B1.c: 129: } else {
  5600  0519  2D35               	goto	l3471
  5601  051A                     l3467:	
  5602                           
  5603                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  5604  051A  1283               	bcf	3,5	;RP0=0, select bank0
  5605  051B  1303               	bcf	3,6	;RP1=0, select bank0
  5606  051C  0834               	movf	_Lights,w
  5607  051D  0084               	movwf	4
  5608  051E  1383               	bcf	3,7	;select IRP bank0
  5609  051F  1D00               	btfss	0,2
  5610  0520  2D35               	goto	l3471
  5611                           
  5612                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  5613  0521  0834               	movf	_Lights,w
  5614  0522  0084               	movwf	4
  5615  0523  1100               	bcf	0,2
  5616                           
  5617                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  5618  0524  0A34               	incf	_Lights,w
  5619  0525  0084               	movwf	4
  5620  0526  1080               	bcf	0,1
  5621                           
  5622                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  5623  0527  3004               	movlw	4
  5624  0528  00D9               	movwf	??_setLights
  5625  0529  0834               	movf	_Lights,w
  5626  052A  3E06               	addlw	6
  5627  052B  0084               	movwf	4
  5628  052C  0859               	movf	??_setLights,w
  5629  052D  0080               	movwf	0
  5630                           
  5631                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  5632  052E  3007               	movlw	7
  5633  052F  00D9               	movwf	??_setLights
  5634  0530  0834               	movf	_Lights,w
  5635  0531  3E04               	addlw	4
  5636  0532  0084               	movwf	4
  5637  0533  0859               	movf	??_setLights,w
  5638  0534  0080               	movwf	0
  5639  0535                     l3471:	
  5640                           
  5641                           ;TriacRelay_B1.c: 135: }
  5642                           ;TriacRelay_B1.c: 136: }
  5643                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  5644  0535  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0536  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0537  085A               	movf	setLights@lights,w
  5647  0538  3A01               	xorlw	1
  5648  0539  1D03               	skipz
  5649  053A  0008               	return
  5650                           
  5651                           ;TriacRelay_B1.c: 139: RB2 = 1;
  5652  053B  1506               	bsf	6,2	;volatile
  5653  053C  0008               	return
  5654  053D                     __end_of_setLights:	
  5655                           
  5656                           	psect	text33
  5657  0F21                     __ptext33:	
  5658 ;; *************** function _setLights_Line *****************
  5659 ;; Defined at:
  5660 ;;		line 221 in file "../src/TriacRelay_B1.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  lights          1    wreg     unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  lights          1    2[BANK0 ] unsigned char 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5674 ;;      Params:         0       0       0       0
  5675 ;;      Locals:         0       1       0       0
  5676 ;;      Temps:          0       0       0       0
  5677 ;;      Totals:         0       1       0       0
  5678 ;;Total ram usage:        1 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    4
  5681 ;; This function calls:
  5682 ;;		_LightsPointSelect
  5683 ;; This function is called by:
  5684 ;;		_setLights
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function _setLights_Line
  5690  0F21                     _setLights_Line:	
  5691                           
  5692                           ;incstack = 0
  5693                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5694                           ;setLights_Line@lights stored from wreg
  5695  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5696  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5697  0F23  00D7               	movwf	setLights_Line@lights
  5698                           
  5699                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  5700  0F24  1043               	bcf	_Lights1+1,0
  5701                           
  5702                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  5703  0F25  0857               	movf	setLights_Line@lights,w
  5704  0F26  118A  27F3         	fcall	_LightsPointSelect
  5705                           
  5706                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  5707  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0F2A  0A34               	incf	_Lights,w
  5710  0F2B  0084               	movwf	4
  5711  0F2C  1383               	bcf	3,7	;select IRP bank0
  5712  0F2D  1400               	bsf	0,0
  5713  0F2E  0008               	return
  5714  0F2F                     __end_of_setLights_Line:	
  5715                           
  5716                           	psect	text34
  5717  0493                     __ptext34:	
  5718 ;; *************** function _Lights_Control *****************
  5719 ;; Defined at:
  5720 ;;		line 155 in file "../src/TriacRelay_B1.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  lights          1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  lights          1    4[BANK0 ] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5734 ;;      Params:         0       0       0       0
  5735 ;;      Locals:         0       1       0       0
  5736 ;;      Temps:          0       2       0       0
  5737 ;;      Totals:         0       3       0       0
  5738 ;;Total ram usage:        3 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    4
  5741 ;; This function calls:
  5742 ;;		_LightsPointSelect
  5743 ;; This function is called by:
  5744 ;;		_Lights_Main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _Lights_Control
  5750  0493                     _Lights_Control:	
  5751                           
  5752                           ;incstack = 0
  5753                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5754                           ;Lights_Control@lights stored from wreg
  5755  0493  1283               	bcf	3,5	;RP0=0, select bank0
  5756  0494  1303               	bcf	3,6	;RP1=0, select bank0
  5757  0495  00D9               	movwf	Lights_Control@lights
  5758                           
  5759                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  5760  0496  0859               	movf	Lights_Control@lights,w
  5761  0497  118A  27F3  118A   	fcall	_LightsPointSelect
  5762                           
  5763                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  5764  049A  1283               	bcf	3,5	;RP0=0, select bank0
  5765  049B  1303               	bcf	3,6	;RP1=0, select bank0
  5766  049C  0834               	movf	_Lights,w
  5767  049D  0084               	movwf	4
  5768  049E  1383               	bcf	3,7	;select IRP bank0
  5769  049F  1C80               	btfss	0,1
  5770  04A0  0008               	return
  5771                           
  5772                           ;TriacRelay_B1.c: 158: Lights->Time++;
  5773  04A1  3001               	movlw	1
  5774  04A2  00D7               	movwf	??_Lights_Control
  5775  04A3  0834               	movf	_Lights,w
  5776  04A4  3E02               	addlw	2
  5777  04A5  0084               	movwf	4
  5778  04A6  0857               	movf	??_Lights_Control,w
  5779  04A7  0780               	addwf	0,f
  5780                           
  5781                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5782  04A8  0834               	movf	_Lights,w
  5783  04A9  3E06               	addlw	6
  5784  04AA  0084               	movwf	4
  5785  04AB  0800               	movf	0,w
  5786  04AC  00D7               	movwf	??_Lights_Control
  5787  04AD  0834               	movf	_Lights,w
  5788  04AE  3E02               	addlw	2
  5789  04AF  0084               	movwf	4
  5790  04B0  0800               	movf	0,w
  5791  04B1  00D8               	movwf	??_Lights_Control+1
  5792  04B2  0857               	movf	??_Lights_Control,w
  5793  04B3  0258               	subwf	??_Lights_Control+1,w
  5794  04B4  1C03               	skipc
  5795  04B5  2CCD               	goto	l2783
  5796  04B6  0834               	movf	_Lights,w
  5797  04B7  0084               	movwf	4
  5798  04B8  1B80               	btfsc	0,7
  5799  04B9  2CCD               	goto	l2783
  5800                           
  5801                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  5802  04BA  0834               	movf	_Lights,w
  5803  04BB  0084               	movwf	4
  5804  04BC  1780               	bsf	0,7
  5805                           
  5806                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  5807  04BD  0859               	movf	Lights_Control@lights,w
  5808  04BE  3A01               	xorlw	1
  5809  04BF  1D03               	skipz
  5810  04C0  0008               	return
  5811                           
  5812                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  5813  04C1  0834               	movf	_Lights,w
  5814  04C2  0084               	movwf	4
  5815  04C3  1D00               	btfss	0,2
  5816  04C4  2CC9               	goto	u2200
  5817  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5818  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5819  04C7  1605               	bsf	5,4	;volatile
  5820  04C8  0008               	return
  5821  04C9                     u2200:	
  5822  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  5823  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  5824  04CB  1205               	bcf	5,4	;volatile
  5825                           
  5826                           ;TriacRelay_B1.c: 164: }
  5827                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  5828  04CC  0008               	return
  5829  04CD                     l2783:	
  5830  04CD  0834               	movf	_Lights,w
  5831  04CE  3E04               	addlw	4
  5832  04CF  0084               	movwf	4
  5833  04D0  1383               	bcf	3,7	;select IRP bank0
  5834  04D1  0800               	movf	0,w
  5835  04D2  00D7               	movwf	??_Lights_Control
  5836  04D3  0834               	movf	_Lights,w
  5837  04D4  3E02               	addlw	2
  5838  04D5  0084               	movwf	4
  5839  04D6  0800               	movf	0,w
  5840  04D7  00D8               	movwf	??_Lights_Control+1
  5841  04D8  0857               	movf	??_Lights_Control,w
  5842  04D9  0258               	subwf	??_Lights_Control+1,w
  5843  04DA  1C03               	skipc
  5844  04DB  0008               	return
  5845                           
  5846                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  5847  04DC  0834               	movf	_Lights,w
  5848  04DD  3E02               	addlw	2
  5849  04DE  0084               	movwf	4
  5850  04DF  0180               	clrf	0
  5851                           
  5852                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  5853  04E0  0834               	movf	_Lights,w
  5854  04E1  0084               	movwf	4
  5855  04E2  1080               	bcf	0,1
  5856                           
  5857                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  5858  04E3  0834               	movf	_Lights,w
  5859  04E4  0084               	movwf	4
  5860  04E5  1380               	bcf	0,7
  5861                           
  5862                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  5863  04E6  0859               	movf	Lights_Control@lights,w
  5864  04E7  3A01               	xorlw	1
  5865  04E8  1D03               	skipz
  5866  04E9  0008               	return
  5867                           
  5868                           ;TriacRelay_B1.c: 188: RB2 = 0;
  5869  04EA  1106               	bcf	6,2	;volatile
  5870  04EB  0008               	return
  5871  04EC                     __end_of_Lights_Control:	
  5872                           
  5873                           	psect	text35
  5874  0FEB                     __ptext35:	
  5875 ;; *************** function _Lights_Close *****************
  5876 ;; Defined at:
  5877 ;;		line 85 in file "../src/TriacRelay_B1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;		None               void
  5884 ;; Registers used:
  5885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5891 ;;      Params:         0       0       0       0
  5892 ;;      Locals:         0       0       0       0
  5893 ;;      Temps:          0       1       0       0
  5894 ;;      Totals:         0       1       0       0
  5895 ;;Total ram usage:        1 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    6
  5898 ;; This function calls:
  5899 ;;		_getMain_LightsStatus
  5900 ;; This function is called by:
  5901 ;;		_Lights_Main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _Lights_Close
  5907  0FEB                     _Lights_Close:	
  5908                           
  5909                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5913  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0FED  1C35               	btfss	_LightsControl,0
  5916  0FEE  0008               	return
  5917                           
  5918                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  5919  0FEF  1035               	bcf	_LightsControl,0
  5920                           
  5921                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  5922  0FF0  118A  266D         	fcall	_getMain_LightsStatus
  5923  0FF2  3800               	iorlw	0
  5924  0FF3  3000               	movlw	0
  5925  0FF4  1D03               	skipz
  5926  0FF5  3001               	movlw	1
  5927  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5929  0FF8  00DE               	movwf	??_Lights_Close
  5930  0FF9  0DDE               	rlf	??_Lights_Close,f
  5931  0FFA  0835               	movf	_LightsControl,w
  5932  0FFB  065E               	xorwf	??_Lights_Close,w
  5933  0FFC  39FD               	andlw	-3
  5934  0FFD  065E               	xorwf	??_Lights_Close,w
  5935  0FFE  00B5               	movwf	_LightsControl
  5936  0FFF  0008               	return
  5937  1000                     __end_of_Lights_Close:	
  5938                           
  5939                           	psect	text36
  5940  066D                     __ptext36:	
  5941 ;; *************** function _getMain_LightsStatus *****************
  5942 ;; Defined at:
  5943 ;;		line 349 in file "../src/Main_B1.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  i               2    6[BANK0 ] int 
  5948 ;;  status          1    8[BANK0 ] unsigned char 
  5949 ;;  count           1    5[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5959 ;;      Params:         0       0       0       0
  5960 ;;      Locals:         0       4       0       0
  5961 ;;      Temps:          0       1       0       0
  5962 ;;      Totals:         0       5       0       0
  5963 ;;Total ram usage:        5 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    5
  5966 ;; This function calls:
  5967 ;;		_getLights_Status
  5968 ;; This function is called by:
  5969 ;;		_Lights_Close
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _getMain_LightsStatus
  5975  066D                     _getMain_LightsStatus:	
  5976                           
  5977                           ;Main_B1.c: 350: char status = 0, count = 0;
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5981  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5982  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5983  066F  01DD               	clrf	getMain_LightsStatus@status
  5984  0670  01DA               	clrf	getMain_LightsStatus@count
  5985                           
  5986                           ;Main_B1.c: 353: count = 1;
  5987  0671  01DA               	clrf	getMain_LightsStatus@count
  5988  0672  0ADA               	incf	getMain_LightsStatus@count,f
  5989                           
  5990                           ;Main_B1.c: 362: for (int i = 0; i < count; i++) {
  5991  0673  01DB               	clrf	getMain_LightsStatus@i
  5992  0674  01DC               	clrf	getMain_LightsStatus@i+1
  5993  0675                     l3449:	
  5994  0675  085C               	movf	getMain_LightsStatus@i+1,w
  5995  0676  3A80               	xorlw	128
  5996  0677  00D9               	movwf	??_getMain_LightsStatus
  5997  0678  3080               	movlw	128
  5998  0679  0259               	subwf	??_getMain_LightsStatus,w
  5999  067A  1D03               	skipz
  6000  067B  2E7E               	goto	u3365
  6001  067C  085A               	movf	getMain_LightsStatus@count,w
  6002  067D  025B               	subwf	getMain_LightsStatus@i,w
  6003  067E                     u3365:	
  6004  067E  1803               	btfsc	3,0
  6005  067F  2E9A               	goto	l3451
  6006                           
  6007                           ;Main_B1.c: 363: if (status == 0) {
  6008  0680  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0681  1303               	bcf	3,6	;RP1=0, select bank0
  6010  0682  08DD               	movf	getMain_LightsStatus@status,f
  6011  0683  1D03               	skipz
  6012  0684  2E93               	goto	l3447
  6013                           
  6014                           ;Main_B1.c: 365: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  6015  0685  085B               	movf	getMain_LightsStatus@i,w
  6016  0686  3E01               	addlw	1
  6017  0687  158A  2759  118A   	fcall	_getLights_Status
  6018  068A  3A01               	xorlw	1
  6019  068B  3000               	movlw	0
  6020  068C  1903               	skipnz
  6021  068D  3001               	movlw	1
  6022  068E  1283               	bcf	3,5	;RP0=0, select bank0
  6023  068F  1303               	bcf	3,6	;RP1=0, select bank0
  6024  0690  00D9               	movwf	??_getMain_LightsStatus
  6025  0691  0859               	movf	??_getMain_LightsStatus,w
  6026  0692  00DD               	movwf	getMain_LightsStatus@status
  6027  0693                     l3447:	
  6028  0693  3001               	movlw	1
  6029  0694  07DB               	addwf	getMain_LightsStatus@i,f
  6030  0695  1803               	skipnc
  6031  0696  0ADC               	incf	getMain_LightsStatus@i+1,f
  6032  0697  3000               	movlw	0
  6033  0698  07DC               	addwf	getMain_LightsStatus@i+1,f
  6034  0699  2E75               	goto	l3449
  6035  069A                     l3451:	
  6036                           
  6037                           ;Main_B1.c: 370: }
  6038                           ;Main_B1.c: 371: }
  6039                           ;Main_B1.c: 372: return status;
  6040  069A  1283               	bcf	3,5	;RP0=0, select bank0
  6041  069B  1303               	bcf	3,6	;RP1=0, select bank0
  6042  069C  085D               	movf	getMain_LightsStatus@status,w
  6043  069D  0008               	return
  6044  069E                     __end_of_getMain_LightsStatus:	
  6045                           
  6046                           	psect	text37
  6047  0F59                     __ptext37:	
  6048 ;; *************** function _getLights_Status *****************
  6049 ;; Defined at:
  6050 ;;		line 207 in file "../src/TriacRelay_B1.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  lights          1    wreg     unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  lights          1    2[BANK0 ] unsigned char 
  6055 ;;  status          1    3[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      unsigned char 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6065 ;;      Params:         0       0       0       0
  6066 ;;      Locals:         0       2       0       0
  6067 ;;      Temps:          0       0       0       0
  6068 ;;      Totals:         0       2       0       0
  6069 ;;Total ram usage:        2 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    4
  6072 ;; This function calls:
  6073 ;;		_LightsPointSelect
  6074 ;; This function is called by:
  6075 ;;		_getMain_LightsStatus
  6076 ;;		_PIR_Main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function _getLights_Status
  6082  0F59                     _getLights_Status:	
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6086                           ;getLights_Status@lights stored from wreg
  6087  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0F5B  00D7               	movwf	getLights_Status@lights
  6090                           
  6091                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  6092  0F5C  0857               	movf	getLights_Status@lights,w
  6093  0F5D  118A  27F3         	fcall	_LightsPointSelect
  6094                           
  6095                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  6096  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  6097  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  6098  0F61  0834               	movf	_Lights,w
  6099  0F62  0084               	movwf	4
  6100  0F63  3000               	movlw	0
  6101  0F64  1383               	bcf	3,7	;select IRP bank0
  6102  0F65  1900               	btfsc	0,2
  6103  0F66  3001               	movlw	1
  6104  0F67  00D8               	movwf	getLights_Status@status
  6105                           
  6106                           ;TriacRelay_B1.c: 210: return status;
  6107  0F68  0858               	movf	getLights_Status@status,w
  6108  0F69  0008               	return
  6109  0F6A                     __end_of_getLights_Status:	
  6110                           
  6111                           	psect	text38
  6112  0ECB                     __ptext38:	
  6113 ;; *************** function _Lights_Initialization *****************
  6114 ;; Defined at:
  6115 ;;		line 34 in file "../src/TriacRelay_B1.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;		None               void
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, pclath, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6129 ;;      Params:         0       0       0       0
  6130 ;;      Locals:         0       0       0       0
  6131 ;;      Temps:          0       0       0       0
  6132 ;;      Totals:         0       0       0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    5
  6136 ;; This function calls:
  6137 ;;		_setLights_Initialization
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function _Lights_Initialization
  6145  0ECB                     _Lights_Initialization:	
  6146                           
  6147                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6151  0ECB  3001               	movlw	1
  6152  0ECC  158A  26E4         	fcall	_setLights_Initialization
  6153  0ECE  0008               	return
  6154  0ECF                     __end_of_Lights_Initialization:	
  6155                           
  6156                           	psect	text39
  6157  0EE4                     __ptext39:	
  6158 ;; *************** function _setLights_Initialization *****************
  6159 ;; Defined at:
  6160 ;;		line 49 in file "../src/TriacRelay_B1.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  lights          1    wreg     unsigned char 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  lights          1    2[BANK0 ] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;		None               void
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6174 ;;      Params:         0       0       0       0
  6175 ;;      Locals:         0       1       0       0
  6176 ;;      Temps:          0       0       0       0
  6177 ;;      Totals:         0       1       0       0
  6178 ;;Total ram usage:        1 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    4
  6181 ;; This function calls:
  6182 ;;		_LightsPointSelect
  6183 ;; This function is called by:
  6184 ;;		_Lights_Initialization
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           
  6189                           ;psect for function _setLights_Initialization
  6190  0EE4                     _setLights_Initialization:	
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6194                           ;setLights_Initialization@lights stored from wreg
  6195  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0EE6  00D7               	movwf	setLights_Initialization@lights
  6198                           
  6199                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6200  0EE7  0857               	movf	setLights_Initialization@lights,w
  6201  0EE8  118A  27F3         	fcall	_LightsPointSelect
  6202  0EEA  0008               	return
  6203  0EEB                     __end_of_setLights_Initialization:	
  6204                           
  6205                           	psect	text40
  6206  07F3                     __ptext40:	
  6207 ;; *************** function _LightsPointSelect *****************
  6208 ;; Defined at:
  6209 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  lights          1    wreg     unsigned char 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  lights          1    1[BANK0 ] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		wreg
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6223 ;;      Params:         0       0       0       0
  6224 ;;      Locals:         0       1       0       0
  6225 ;;      Temps:          0       1       0       0
  6226 ;;      Totals:         0       2       0       0
  6227 ;;Total ram usage:        2 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    3
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_setLights_Initialization
  6234 ;;		_setLights_Main
  6235 ;;		_setLights
  6236 ;;		_Lights_Control
  6237 ;;		_getLights_Status
  6238 ;;		_setLights_Trigger
  6239 ;;		_setLights_Line
  6240 ;;		_getAll_Lights_Line
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function _LightsPointSelect
  6246  07F3                     _LightsPointSelect:	
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in _LightsPointSelect: [wreg]
  6250                           ;LightsPointSelect@lights stored from wreg
  6251  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  6252  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  6253  07F5  00D6               	movwf	LightsPointSelect@lights
  6254                           
  6255                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6256  07F6  0856               	movf	LightsPointSelect@lights,w
  6257  07F7  3A01               	xorlw	1
  6258  07F8  1D03               	skipz
  6259  07F9  0008               	return
  6260                           
  6261                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6262  07FA  3042               	movlw	_Lights1& (0+255)
  6263  07FB  00D5               	movwf	??_LightsPointSelect
  6264  07FC  0855               	movf	??_LightsPointSelect,w
  6265  07FD  00B4               	movwf	_Lights
  6266  07FE  0008               	return
  6267  07FF                     __end_of_LightsPointSelect:	
  6268                           
  6269                           	psect	text41
  6270  0EC4                     __ptext41:	
  6271 ;; *************** function _LED_Main *****************
  6272 ;; Defined at:
  6273 ;;		line 47 in file "../src/LED_B1.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;		None               void
  6280 ;; Registers used:
  6281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6287 ;;      Params:         0       0       0       0
  6288 ;;      Locals:         0       0       0       0
  6289 ;;      Temps:          0       0       0       0
  6290 ;;      Totals:         0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    6
  6294 ;; This function calls:
  6295 ;;		_setPIRLED_Main
  6296 ;; This function is called by:
  6297 ;;		_main
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _LED_Main
  6303  0EC4                     _LED_Main:	
  6304                           
  6305                           ;LED_B1.c: 50: setPIRLED_Main();
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6309  0EC4  118A  2354         	fcall	_setPIRLED_Main
  6310  0EC6  0008               	return
  6311  0EC7                     __end_of_LED_Main:	
  6312                           
  6313                           	psect	text42
  6314  0354                     __ptext42:	
  6315 ;; *************** function _setPIRLED_Main *****************
  6316 ;; Defined at:
  6317 ;;		line 253 in file "../src/LED_B1.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  count           1    5[BANK0 ] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;		None               void
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6331 ;;      Params:         0       0       0       0
  6332 ;;      Locals:         0       1       0       0
  6333 ;;      Temps:          0       1       0       0
  6334 ;;      Totals:         0       2       0       0
  6335 ;;Total ram usage:        2 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    5
  6338 ;; This function calls:
  6339 ;;		_setLED
  6340 ;; This function is called by:
  6341 ;;		_LED_Main
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _setPIRLED_Main
  6347  0354                     _setPIRLED_Main:	
  6348                           
  6349                           ;LED_B1.c: 254: char count;
  6350                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6354  0354  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0355  1303               	bcf	3,6	;RP1=0, select bank0
  6356  0356  1C2C               	btfss	_PIRLED,0
  6357  0357  0008               	return
  6358                           
  6359                           ;LED_B1.c: 256: PIRLED.Time++;
  6360  0358  3001               	movlw	1
  6361  0359  07AE               	addwf	_PIRLED+2,f
  6362  035A  1803               	skipnc
  6363  035B  0AAF               	incf	_PIRLED+3,f
  6364  035C  3000               	movlw	0
  6365  035D  07AF               	addwf	_PIRLED+3,f
  6366                           
  6367                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  6368  035E  3000               	movlw	0
  6369  035F  022F               	subwf	_PIRLED+3,w
  6370  0360  3032               	movlw	50
  6371  0361  1903               	skipnz
  6372  0362  022E               	subwf	_PIRLED+2,w
  6373  0363  1C03               	skipc
  6374  0364  0008               	return
  6375                           
  6376                           ;LED_B1.c: 258: PIRLED.Time = 0;
  6377  0365  01AE               	clrf	_PIRLED+2
  6378  0366  01AF               	clrf	_PIRLED+3
  6379                           
  6380                           ;LED_B1.c: 259: setLED(1, 0);
  6381  0367  01D7               	clrf	setLED@command
  6382  0368  3001               	movlw	1
  6383  0369  118A  23C5  118A   	fcall	_setLED
  6384                           
  6385                           ;LED_B1.c: 260: setLED(2, 0);
  6386  036C  1283               	bcf	3,5	;RP0=0, select bank0
  6387  036D  1303               	bcf	3,6	;RP1=0, select bank0
  6388  036E  01D7               	clrf	setLED@command
  6389  036F  3002               	movlw	2
  6390  0370  118A  23C5  118A   	fcall	_setLED
  6391                           
  6392                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  6393  0373  1283               	bcf	3,5	;RP0=0, select bank0
  6394  0374  1303               	bcf	3,6	;RP1=0, select bank0
  6395  0375  1CAC               	btfss	_PIRLED,1
  6396  0376  2B7B               	goto	l3511
  6397                           
  6398                           ;LED_B1.c: 262: count = 4;
  6399  0377  3004               	movlw	4
  6400  0378  00D9               	movwf	??_setPIRLED_Main
  6401  0379  0859               	movf	??_setPIRLED_Main,w
  6402  037A  00DA               	movwf	setPIRLED_Main@count
  6403  037B                     l3511:	
  6404                           
  6405                           ;LED_B1.c: 263: }
  6406                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  6407  037B  1D2C               	btfss	_PIRLED,2
  6408  037C  2B81               	goto	l3515
  6409                           
  6410                           ;LED_B1.c: 265: count = 6;
  6411  037D  3006               	movlw	6
  6412  037E  00D9               	movwf	??_setPIRLED_Main
  6413  037F  0859               	movf	??_setPIRLED_Main,w
  6414  0380  00DA               	movwf	setPIRLED_Main@count
  6415  0381                     l3515:	
  6416                           
  6417                           ;LED_B1.c: 266: }
  6418                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  6419  0381  1DAC               	btfss	_PIRLED,3
  6420  0382  2B87               	goto	l3519
  6421                           
  6422                           ;LED_B1.c: 268: count = 8;
  6423  0383  3008               	movlw	8
  6424  0384  00D9               	movwf	??_setPIRLED_Main
  6425  0385  0859               	movf	??_setPIRLED_Main,w
  6426  0386  00DA               	movwf	setPIRLED_Main@count
  6427  0387                     l3519:	
  6428                           
  6429                           ;LED_B1.c: 269: }
  6430                           ;LED_B1.c: 270: PIRLED.Count++;
  6431  0387  3001               	movlw	1
  6432  0388  00D9               	movwf	??_setPIRLED_Main
  6433  0389  0859               	movf	??_setPIRLED_Main,w
  6434  038A  07AD               	addwf	_PIRLED+1,f
  6435                           
  6436                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  6437  038B  082D               	movf	_PIRLED+1,w
  6438  038C  3A01               	xorlw	1
  6439  038D  1903               	skipnz
  6440  038E  2B93               	goto	l3525
  6441  038F  082D               	movf	_PIRLED+1,w
  6442  0390  3A02               	xorlw	2
  6443  0391  1D03               	skipz
  6444  0392  2BA7               	goto	l3529
  6445  0393                     l3525:	
  6446                           
  6447                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6448  0393  1003               	clrc
  6449  0394  1E2C               	btfss	_PIRLED,4
  6450  0395  1403               	setc
  6451  0396  1C03               	btfss	3,0
  6452  0397  2B9C               	goto	u3500
  6453  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6455  039A  162C               	bsf	_PIRLED,4
  6456  039B  2B9F               	goto	l3527
  6457  039C                     u3500:	
  6458  039C  1283               	bcf	3,5	;RP0=0, select bank0
  6459  039D  1303               	bcf	3,6	;RP1=0, select bank0
  6460  039E  122C               	bcf	_PIRLED,4
  6461  039F                     l3527:	
  6462                           
  6463                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  6464  039F  3000               	movlw	0
  6465  03A0  1A2C               	btfsc	_PIRLED,4
  6466  03A1  3001               	movlw	1
  6467  03A2  00D7               	movwf	setLED@command
  6468  03A3  3002               	movlw	2
  6469  03A4  118A  23C5         	fcall	_setLED
  6470                           
  6471                           ;LED_B1.c: 274: } else {
  6472  03A6  0008               	return
  6473  03A7                     l3529:	
  6474                           
  6475                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6476  03A7  1003               	clrc
  6477  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  6478  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  6479  03AA  1E2C               	btfss	_PIRLED,4
  6480  03AB  1403               	setc
  6481  03AC  1C03               	btfss	3,0
  6482  03AD  2BB2               	goto	u3520
  6483  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  6484  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  6485  03B0  162C               	bsf	_PIRLED,4
  6486  03B1  2BB5               	goto	l3531
  6487  03B2                     u3520:	
  6488  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  6489  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  6490  03B4  122C               	bcf	_PIRLED,4
  6491  03B5                     l3531:	
  6492                           
  6493                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  6494  03B5  3000               	movlw	0
  6495  03B6  1A2C               	btfsc	_PIRLED,4
  6496  03B7  3001               	movlw	1
  6497  03B8  00D7               	movwf	setLED@command
  6498  03B9  3001               	movlw	1
  6499  03BA  118A  23C5  118A   	fcall	_setLED
  6500                           
  6501                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  6502  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6503  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6504  03BF  082D               	movf	_PIRLED+1,w
  6505  03C0  065A               	xorwf	setPIRLED_Main@count,w
  6506  03C1  1D03               	skipz
  6507  03C2  0008               	return
  6508                           
  6509                           ;LED_B1.c: 278: PIRLED.Count = 0;
  6510  03C3  01AD               	clrf	_PIRLED+1
  6511  03C4  0008               	return
  6512  03C5                     __end_of_setPIRLED_Main:	
  6513                           
  6514                           	psect	text43
  6515  0F15                     __ptext43:	
  6516 ;; *************** function _LED_Initialization *****************
  6517 ;; Defined at:
  6518 ;;		line 31 in file "../src/LED_B1.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;		None               void
  6525 ;; Registers used:
  6526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6532 ;;      Params:         0       0       0       0
  6533 ;;      Locals:         0       0       0       0
  6534 ;;      Temps:          0       0       0       0
  6535 ;;      Totals:         0       0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    6
  6539 ;; This function calls:
  6540 ;;		_setLED_Initialization
  6541 ;; This function is called by:
  6542 ;;		_main
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _LED_Initialization
  6548  0F15                     _LED_Initialization:	
  6549                           
  6550                           ;LED_B1.c: 33: setLED_Initialization(1);
  6551                           
  6552                           ;incstack = 0
  6553                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6554  0F15  3001               	movlw	1
  6555  0F16  158A  278C  158A   	fcall	_setLED_Initialization
  6556                           
  6557                           ;LED_B1.c: 36: setLED_Initialization(2);
  6558  0F19  3002               	movlw	2
  6559  0F1A  158A  278C  158A   	fcall	_setLED_Initialization
  6560                           
  6561                           ;LED_B1.c: 42: setLED_Initialization(99);
  6562  0F1D  3063               	movlw	99
  6563  0F1E  158A  278C         	fcall	_setLED_Initialization
  6564  0F20  0008               	return
  6565  0F21                     __end_of_LED_Initialization:	
  6566                           
  6567                           	psect	text44
  6568  0F8C                     __ptext44:	
  6569 ;; *************** function _setLED_Initialization *****************
  6570 ;; Defined at:
  6571 ;;		line 69 in file "../src/LED_B1.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  led             1    wreg     unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  led             1    4[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6585 ;;      Params:         0       0       0       0
  6586 ;;      Locals:         0       1       0       0
  6587 ;;      Temps:          0       0       0       0
  6588 ;;      Totals:         0       1       0       0
  6589 ;;Total ram usage:        1 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    5
  6592 ;; This function calls:
  6593 ;;		_LedPointSelect
  6594 ;;		_setLED
  6595 ;; This function is called by:
  6596 ;;		_LED_Initialization
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _setLED_Initialization
  6602  0F8C                     _setLED_Initialization:	
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6606                           ;setLED_Initialization@led stored from wreg
  6607  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0F8E  00D9               	movwf	setLED_Initialization@led
  6610                           
  6611                           ;LED_B1.c: 70: LedPointSelect(led);
  6612  0F8F  0859               	movf	setLED_Initialization@led,w
  6613  0F90  118A  2772  158A   	fcall	_LedPointSelect
  6614                           
  6615                           ;LED_B1.c: 71: LED->Enable = 1;
  6616  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0F95  0833               	movf	_LED,w
  6619  0F96  0084               	movwf	4
  6620  0F97  1383               	bcf	3,7	;select IRP bank0
  6621  0F98  1400               	bsf	0,0
  6622                           
  6623                           ;LED_B1.c: 72: setLED(led, 0);
  6624  0F99  01D7               	clrf	setLED@command
  6625  0F9A  0859               	movf	setLED_Initialization@led,w
  6626  0F9B  118A  23C5         	fcall	_setLED
  6627  0F9D  0008               	return
  6628  0F9E                     __end_of_setLED_Initialization:	
  6629                           
  6630                           	psect	text45
  6631  03C5                     __ptext45:	
  6632 ;; *************** function _setLED *****************
  6633 ;; Defined at:
  6634 ;;		line 76 in file "../src/LED_B1.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  led             1    wreg     unsigned char 
  6637 ;;  command         1    2[BANK0 ] unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  led             1    3[BANK0 ] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6649 ;;      Params:         0       1       0       0
  6650 ;;      Locals:         0       1       0       0
  6651 ;;      Temps:          0       0       0       0
  6652 ;;      Totals:         0       2       0       0
  6653 ;;Total ram usage:        2 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    4
  6656 ;; This function calls:
  6657 ;;		_LedPointSelect
  6658 ;; This function is called by:
  6659 ;;		_setLED_Initialization
  6660 ;;		_setPIRLED_Main
  6661 ;;		_setMain_Exception
  6662 ;;		_PIR_Initialization
  6663 ;;		_PIR_Main
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _setLED
  6669  03C5                     _setLED:	
  6670                           
  6671                           ;incstack = 0
  6672                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6673                           ;setLED@led stored from wreg
  6674  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  6675  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  6676  03C7  00D8               	movwf	setLED@led
  6677                           
  6678                           ;LED_B1.c: 77: LedPointSelect(led);
  6679  03C8  0858               	movf	setLED@led,w
  6680  03C9  118A  2772  118A   	fcall	_LedPointSelect
  6681                           
  6682                           ;LED_B1.c: 78: if (command == 0) {
  6683  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  6684  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  6685  03CE  08D7               	movf	setLED@command,f
  6686  03CF  1D03               	skipz
  6687  03D0  2BDE               	goto	l3349
  6688                           
  6689                           ;LED_B1.c: 80: if (led == 1) {
  6690  03D1  0858               	movf	setLED@led,w
  6691  03D2  3A01               	xorlw	1
  6692  03D3  1D03               	skipz
  6693  03D4  2BD6               	goto	l3341
  6694                           
  6695                           ;LED_B1.c: 84: RB4 = 1;
  6696  03D5  1606               	bsf	6,4	;volatile
  6697  03D6                     l3341:	
  6698                           
  6699                           ;LED_B1.c: 86: }
  6700                           ;LED_B1.c: 89: if (led == 2) {
  6701  03D6  0858               	movf	setLED@led,w
  6702  03D7  3A02               	xorlw	2
  6703  03D8  1903               	btfsc	3,2
  6704                           
  6705                           ;LED_B1.c: 93: RB5 = 1;
  6706  03D9  1686               	bsf	6,5	;volatile
  6707                           
  6708                           ;LED_B1.c: 95: }
  6709                           ;LED_B1.c: 107: if (led == 99) {
  6710  03DA  0858               	movf	setLED@led,w
  6711  03DB  3A63               	xorlw	99
  6712  03DC  1903               	btfsc	3,2
  6713                           
  6714                           ;LED_B1.c: 111: RB3 = 1;
  6715  03DD  1586               	bsf	6,3	;volatile
  6716  03DE                     l3349:	
  6717                           
  6718                           ;LED_B1.c: 113: }
  6719                           ;LED_B1.c: 115: }
  6720                           ;LED_B1.c: 116: if (command == 1) {
  6721  03DE  0857               	movf	setLED@command,w
  6722  03DF  3A01               	xorlw	1
  6723  03E0  1D03               	skipz
  6724  03E1  2BEF               	goto	l3363
  6725                           
  6726                           ;LED_B1.c: 118: if (led == 1) {
  6727  03E2  0858               	movf	setLED@led,w
  6728  03E3  3A01               	xorlw	1
  6729  03E4  1D03               	skipz
  6730  03E5  2BE7               	goto	l3355
  6731                           
  6732                           ;LED_B1.c: 122: RB4 = 0;
  6733  03E6  1206               	bcf	6,4	;volatile
  6734  03E7                     l3355:	
  6735                           
  6736                           ;LED_B1.c: 124: }
  6737                           ;LED_B1.c: 127: if (led == 2) {
  6738  03E7  0858               	movf	setLED@led,w
  6739  03E8  3A02               	xorlw	2
  6740  03E9  1903               	btfsc	3,2
  6741                           
  6742                           ;LED_B1.c: 131: RB5 = 0;
  6743  03EA  1286               	bcf	6,5	;volatile
  6744                           
  6745                           ;LED_B1.c: 133: }
  6746                           ;LED_B1.c: 145: if (led == 99) {
  6747  03EB  0858               	movf	setLED@led,w
  6748  03EC  3A63               	xorlw	99
  6749  03ED  1903               	btfsc	3,2
  6750                           
  6751                           ;LED_B1.c: 149: RB3 = 0;
  6752  03EE  1186               	bcf	6,3	;volatile
  6753  03EF                     l3363:	
  6754                           
  6755                           ;LED_B1.c: 151: }
  6756                           ;LED_B1.c: 153: }
  6757                           ;LED_B1.c: 154: if (command == 10) {
  6758  03EF  0857               	movf	setLED@command,w
  6759  03F0  3A0A               	xorlw	10
  6760  03F1  1D03               	skipz
  6761  03F2  2C0A               	goto	l3381
  6762                           
  6763                           ;LED_B1.c: 155: LED->GO = 0;
  6764  03F3  0833               	movf	_LED,w
  6765  03F4  0084               	movwf	4
  6766  03F5  1383               	bcf	3,7	;select IRP bank0
  6767  03F6  1080               	bcf	0,1
  6768                           
  6769                           ;LED_B1.c: 156: LED->Time = 0;
  6770  03F7  0A33               	incf	_LED,w
  6771  03F8  0084               	movwf	4
  6772  03F9  0180               	clrf	0
  6773  03FA  0A84               	incf	4,f
  6774  03FB  0180               	clrf	0
  6775                           
  6776                           ;LED_B1.c: 158: if (led == 1) {
  6777  03FC  0858               	movf	setLED@led,w
  6778  03FD  3A01               	xorlw	1
  6779  03FE  1D03               	skipz
  6780  03FF  2C02               	goto	l3373
  6781                           
  6782                           ;LED_B1.c: 162: RB4 = 1;
  6783  0400  1606               	bsf	6,4	;volatile
  6784                           
  6785                           ;LED_B1.c: 164: }
  6786  0401  2C06               	goto	l3377
  6787  0402                     l3373:	
  6788                           
  6789                           ;LED_B1.c: 167: else if (led == 2) {
  6790  0402  0858               	movf	setLED@led,w
  6791  0403  3A02               	xorlw	2
  6792  0404  1903               	btfsc	3,2
  6793                           
  6794                           ;LED_B1.c: 171: RB5 = 1;
  6795  0405  1686               	bsf	6,5	;volatile
  6796  0406                     l3377:	
  6797                           
  6798                           ;LED_B1.c: 173: }
  6799                           ;LED_B1.c: 185: if (led == 99) {
  6800  0406  0858               	movf	setLED@led,w
  6801  0407  3A63               	xorlw	99
  6802  0408  1903               	btfsc	3,2
  6803                           
  6804                           ;LED_B1.c: 189: RB3 = 1;
  6805  0409  1586               	bsf	6,3	;volatile
  6806  040A                     l3381:	
  6807                           
  6808                           ;LED_B1.c: 191: }
  6809                           ;LED_B1.c: 193: }
  6810                           ;LED_B1.c: 194: if (command == 11) {
  6811  040A  0857               	movf	setLED@command,w
  6812  040B  3A0B               	xorlw	11
  6813  040C  1D03               	skipz
  6814  040D  2C12               	goto	l3385
  6815                           
  6816                           ;LED_B1.c: 195: LED->GO = 1;
  6817  040E  0833               	movf	_LED,w
  6818  040F  0084               	movwf	4
  6819  0410  1383               	bcf	3,7	;select IRP bank0
  6820  0411  1480               	bsf	0,1
  6821  0412                     l3385:	
  6822                           
  6823                           ;LED_B1.c: 196: }
  6824                           ;LED_B1.c: 198: if (command == 111) {
  6825  0412  0857               	movf	setLED@command,w
  6826  0413  3A6F               	xorlw	111
  6827  0414  1D03               	skipz
  6828  0415  2C30               	goto	l3411
  6829                           
  6830                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6831  0416  01AD               	clrf	_PIRLED+1
  6832                           
  6833                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6834  0417  01AE               	clrf	_PIRLED+2
  6835  0418  01AF               	clrf	_PIRLED+3
  6836                           
  6837                           ;LED_B1.c: 201: PIRLED.status = 0;
  6838  0419  122C               	bcf	_PIRLED,4
  6839                           
  6840                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6841  041A  142C               	bsf	_PIRLED,0
  6842                           
  6843                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6844  041B  10AC               	bcf	_PIRLED,1
  6845                           
  6846                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6847  041C  112C               	bcf	_PIRLED,2
  6848                           
  6849                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6850  041D  11AC               	bcf	_PIRLED,3
  6851                           
  6852                           ;LED_B1.c: 206: if (led == 1) {
  6853  041E  0858               	movf	setLED@led,w
  6854  041F  3A01               	xorlw	1
  6855  0420  1D03               	skipz
  6856  0421  2C24               	goto	l3403
  6857                           
  6858                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6859  0422  14AC               	bsf	_PIRLED,1
  6860                           
  6861                           ;LED_B1.c: 208: } else if (led == 2) {
  6862  0423  0008               	return
  6863  0424                     l3403:	
  6864  0424  0858               	movf	setLED@led,w
  6865  0425  3A02               	xorlw	2
  6866  0426  1D03               	skipz
  6867  0427  2C2A               	goto	l3407
  6868                           
  6869                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6870  0428  152C               	bsf	_PIRLED,2
  6871                           
  6872                           ;LED_B1.c: 210: } else if (led == 3) {
  6873  0429  0008               	return
  6874  042A                     l3407:	
  6875  042A  0858               	movf	setLED@led,w
  6876  042B  3A03               	xorlw	3
  6877  042C  1D03               	skipz
  6878  042D  0008               	return
  6879                           
  6880                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6881  042E  15AC               	bsf	_PIRLED,3
  6882                           
  6883                           ;LED_B1.c: 212: }
  6884                           ;LED_B1.c: 213: } else if (command == 110) {
  6885  042F  0008               	return
  6886  0430                     l3411:	
  6887  0430  0857               	movf	setLED@command,w
  6888  0431  3A6E               	xorlw	110
  6889  0432  1D03               	skipz
  6890  0433  0008               	return
  6891                           
  6892                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6893  0434  102C               	bcf	_PIRLED,0
  6894  0435  0008               	return
  6895  0436                     __end_of_setLED:	
  6896                           
  6897                           	psect	text46
  6898  0772                     __ptext46:	
  6899 ;; *************** function _LedPointSelect *****************
  6900 ;; Defined at:
  6901 ;;		line 7 in file "../src/LED_B1.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  led             1    wreg     unsigned char 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  led             1    1[BANK0 ] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;		None               void
  6908 ;; Registers used:
  6909 ;;		wreg
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6915 ;;      Params:         0       0       0       0
  6916 ;;      Locals:         0       1       0       0
  6917 ;;      Temps:          0       1       0       0
  6918 ;;      Totals:         0       2       0       0
  6919 ;;Total ram usage:        2 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    3
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_setLED_Initialization
  6926 ;;		_setLED
  6927 ;;		_setLED_Main
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _LedPointSelect
  6933  0772                     _LedPointSelect:	
  6934                           
  6935                           ;incstack = 0
  6936                           ; Regs used in _LedPointSelect: [wreg]
  6937                           ;LedPointSelect@led stored from wreg
  6938  0772  1283               	bcf	3,5	;RP0=0, select bank0
  6939  0773  1303               	bcf	3,6	;RP1=0, select bank0
  6940  0774  00D6               	movwf	LedPointSelect@led
  6941                           
  6942                           ;LED_B1.c: 9: if (led == 1) {
  6943  0775  0856               	movf	LedPointSelect@led,w
  6944  0776  3A01               	xorlw	1
  6945  0777  1D03               	skipz
  6946  0778  2F7D               	goto	l220
  6947                           
  6948                           ;LED_B1.c: 10: LED = &VarLED1;
  6949  0779  304D               	movlw	_VarLED1& (0+255)
  6950  077A  00D5               	movwf	??_LedPointSelect
  6951  077B  0855               	movf	??_LedPointSelect,w
  6952  077C  00B3               	movwf	_LED
  6953  077D                     l220:	
  6954                           
  6955                           ;LED_B1.c: 11: }
  6956                           ;LED_B1.c: 14: if (led == 2) {
  6957  077D  0856               	movf	LedPointSelect@led,w
  6958  077E  3A02               	xorlw	2
  6959  077F  1D03               	skipz
  6960  0780  2F85               	goto	l221
  6961                           
  6962                           ;LED_B1.c: 15: LED = &VarLED2;
  6963  0781  3051               	movlw	_VarLED2& (0+255)
  6964  0782  00D5               	movwf	??_LedPointSelect
  6965  0783  0855               	movf	??_LedPointSelect,w
  6966  0784  00B3               	movwf	_LED
  6967  0785                     l221:	
  6968                           
  6969                           ;LED_B1.c: 16: }
  6970                           ;LED_B1.c: 24: if (led == 99) {
  6971  0785  0856               	movf	LedPointSelect@led,w
  6972  0786  3A63               	xorlw	99
  6973  0787  1D03               	skipz
  6974  0788  0008               	return
  6975                           
  6976                           ;LED_B1.c: 25: LED = &VarErrLED;
  6977  0789  3049               	movlw	_VarErrLED& (0+255)
  6978  078A  00D5               	movwf	??_LedPointSelect
  6979  078B  0855               	movf	??_LedPointSelect,w
  6980  078C  00B3               	movwf	_LED
  6981  078D  0008               	return
  6982  078E                     __end_of_LedPointSelect:	
  6983                           
  6984                           	psect	text47
  6985  0639                     __ptext47:	
  6986 ;; *************** function _CDS_Main *****************
  6987 ;; Defined at:
  6988 ;;		line 11 in file "../src/CDS_B1.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7002 ;;      Params:         0       0       0       0
  7003 ;;      Locals:         0       0       0       0
  7004 ;;      Temps:          0       3       0       0
  7005 ;;      Totals:         0       3       0       0
  7006 ;;Total ram usage:        3 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    3
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           
  7017                           ;psect for function _CDS_Main
  7018  0639                     _CDS_Main:	
  7019                           
  7020                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7024  0639  1283               	bcf	3,5	;RP0=0, select bank0
  7025  063A  1303               	bcf	3,6	;RP1=0, select bank0
  7026  063B  1C27               	btfss	__CDS,0
  7027  063C  0008               	return
  7028                           
  7029                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7030  063D  18A7               	btfsc	__CDS,1
  7031  063E  2E4C               	goto	l99
  7032                           
  7033                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7034  063F  19A7               	btfsc	__CDS,3
  7035  0640  0008               	return
  7036                           
  7037                           ;CDS_B1.c: 16: _CDS.Time++;
  7038  0641  3001               	movlw	1
  7039  0642  00D5               	movwf	??_CDS_Main
  7040  0643  0855               	movf	??_CDS_Main,w
  7041  0644  07A8               	addwf	__CDS+1,f
  7042                           
  7043                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  7044  0645  300A               	movlw	10
  7045  0646  0228               	subwf	__CDS+1,w
  7046  0647  1C03               	skipc
  7047  0648  0008               	return
  7048                           
  7049                           ;CDS_B1.c: 18: {
  7050                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7051  0649  01A8               	clrf	__CDS+1
  7052                           
  7053                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7054  064A  15A7               	bsf	__CDS,3
  7055                           
  7056                           ;CDS_B1.c: 21: }
  7057                           ;CDS_B1.c: 22: }
  7058                           ;CDS_B1.c: 23: } else {
  7059  064B  0008               	return
  7060  064C                     l99:	
  7061                           
  7062                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7063  064C  1CA7               	btfss	__CDS,1
  7064  064D  0008               	return
  7065                           
  7066                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7067  064E  10A7               	bcf	__CDS,1
  7068                           
  7069                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7070  064F  1A27               	btfsc	__CDS,4
  7071  0650  2E57               	goto	l2893
  7072                           
  7073                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7074  0651  0829               	movf	__CDS+2,w
  7075  0652  022A               	subwf	__CDS+3,w
  7076  0653  1C03               	skipc
  7077  0654  0008               	return
  7078                           
  7079                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7080  0655  1627               	bsf	__CDS,4
  7081                           
  7082                           ;CDS_B1.c: 29: }
  7083                           ;CDS_B1.c: 30: } else {
  7084  0656  0008               	return
  7085  0657                     l2893:	
  7086                           
  7087                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7088  0657  0829               	movf	__CDS+2,w
  7089  0658  3E9C               	addlw	156
  7090  0659  00D5               	movwf	??_CDS_Main
  7091  065A  30FF               	movlw	255
  7092  065B  1803               	skipnc
  7093  065C  3000               	movlw	0
  7094  065D  00D6               	movwf	??_CDS_Main+1
  7095  065E  0856               	movf	??_CDS_Main+1,w
  7096  065F  3A80               	xorlw	128
  7097  0660  00D7               	movwf	??_CDS_Main+2
  7098  0661  3080               	movlw	128
  7099  0662  0257               	subwf	??_CDS_Main+2,w
  7100  0663  1D03               	skipz
  7101  0664  2E67               	goto	u2495
  7102  0665  082A               	movf	__CDS+3,w
  7103  0666  0255               	subwf	??_CDS_Main,w
  7104  0667                     u2495:	
  7105  0667  1C03               	skipc
  7106  0668  0008               	return
  7107                           
  7108                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7109  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7110  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7111  066B  1227               	bcf	__CDS,4
  7112  066C  0008               	return
  7113  066D                     __end_of_CDS_Main:	
  7114                           
  7115                           	psect	text48
  7116  0EC7                     __ptext48:	
  7117 ;; *************** function _CDS_Initialization *****************
  7118 ;; Defined at:
  7119 ;;		line 7 in file "../src/CDS_B1.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;		None               void
  7126 ;; Registers used:
  7127 ;;		None
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7133 ;;      Params:         0       0       0       0
  7134 ;;      Locals:         0       0       0       0
  7135 ;;      Temps:          0       0       0       0
  7136 ;;      Totals:         0       0       0       0
  7137 ;;Total ram usage:        0 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    3
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _CDS_Initialization
  7149  0EC7                     _CDS_Initialization:	
  7150                           
  7151                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _CDS_Initialization: []
  7155  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  7156  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  7157  0EC9  1427               	bsf	__CDS,0
  7158  0ECA  0008               	return
  7159  0ECB                     __end_of_CDS_Initialization:	
  7160                           
  7161                           	psect	text49
  7162  0FB0                     __ptext49:	
  7163 ;; *************** function _ISR *****************
  7164 ;; Defined at:
  7165 ;;		line 107 in file "../src/MCU_B1.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;		None               void
  7172 ;; Registers used:
  7173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7179 ;;      Params:         0       0       0       0
  7180 ;;      Locals:         0       0       0       0
  7181 ;;      Temps:          4       0       0       0
  7182 ;;      Totals:         4       0       0       0
  7183 ;;Total ram usage:        4 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    2
  7186 ;; This function calls:
  7187 ;;		_TMR1_ISR
  7188 ;;		_UART_ISR
  7189 ;; This function is called by:
  7190 ;;		Interrupt level 1
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _ISR
  7196  0FB0                     _ISR:	
  7197                           
  7198                           ;MCU_B1.c: 109: ;;
  7199                           ;MCU_B1.c: 111: ;;
  7200                           ;MCU_B1.c: 113: TMR1_ISR();
  7201  0FB0  118A  278E  158A   	fcall	_TMR1_ISR
  7202                           
  7203                           ;MCU_B1.c: 115: ;;
  7204                           ;MCU_B1.c: 117: ;;
  7205                           ;MCU_B1.c: 119: UART_ISR();
  7206  0FB3  118A  2604  158A   	fcall	_UART_ISR
  7207  0FB6  0876               	movf	??_ISR+3,w
  7208  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  7209  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  7210  0FB9  00FF               	movwf	127
  7211  0FBA  0875               	movf	??_ISR+2,w
  7212  0FBB  008A               	movwf	10
  7213  0FBC  0874               	movf	??_ISR+1,w
  7214  0FBD  0084               	movwf	4
  7215  0FBE  0E73               	swapf	??_ISR^(0+-128),w
  7216  0FBF  0083               	movwf	3
  7217  0FC0  0EFE               	swapf	126,f
  7218  0FC1  0E7E               	swapf	126,w
  7219  0FC2  0009               	retfie
  7220  0FC3                     __end_of_ISR:	
  7221                           
  7222                           	psect	intentry
  7223  0004                     __pintentry:	
  7224                           ;incstack = 0
  7225                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7226                           
  7227  0004                     interrupt_function:	
  7228  007E                     saved_w	set	btemp
  7229  0004  00FE               	movwf	btemp
  7230  0005  0E03               	swapf	3,w
  7231  0006  00F3               	movwf	??_ISR
  7232  0007  0804               	movf	4,w
  7233  0008  00F4               	movwf	??_ISR+1
  7234  0009  080A               	movf	10,w
  7235  000A  00F5               	movwf	??_ISR+2
  7236  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7237  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7238  000D  087F               	movf	btemp+1,w
  7239  000E  00F6               	movwf	??_ISR+3
  7240  000F  158A  2FB0         	ljmp	_ISR
  7241                           
  7242                           	psect	text50
  7243  0604                     __ptext50:	
  7244 ;; *************** function _UART_ISR *****************
  7245 ;; Defined at:
  7246 ;;		line 740 in file "../src/MCU_B1.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  i               2    1[COMMON] int 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;		None               void
  7253 ;; Registers used:
  7254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7260 ;;      Params:         0       0       0       0
  7261 ;;      Locals:         2       0       0       0
  7262 ;;      Temps:          1       0       0       0
  7263 ;;      Totals:         3       0       0       0
  7264 ;;Total ram usage:        3 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    1
  7267 ;; This function calls:
  7268 ;;		_getch
  7269 ;; This function is called by:
  7270 ;;		_ISR
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _UART_ISR
  7276  0604                     _UART_ISR:	
  7277                           
  7278                           ;MCU_B1.c: 741: if (RCIE == 1 && RCIF == 1) {
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in _UART_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7282  0604  1683               	bsf	3,5	;RP0=1, select bank1
  7283  0605  1303               	bcf	3,6	;RP1=0, select bank1
  7284  0606  1E8C               	btfss	12,5	;volatile
  7285  0607  0008               	return
  7286  0608  1283               	bcf	3,5	;RP0=0, select bank0
  7287  0609  1303               	bcf	3,6	;RP1=0, select bank0
  7288  060A  1E8C               	btfss	12,5	;volatile
  7289  060B  0008               	return
  7290                           
  7291                           ;MCU_B1.c: 743: for (int i = 0; i < 8; i++) {
  7292  060C  01F1               	clrf	UART_ISR@i
  7293  060D  01F2               	clrf	UART_ISR@i+1
  7294  060E  0872               	movf	UART_ISR@i+1,w
  7295  060F  3A80               	xorlw	128
  7296  0610  00FF               	movwf	127
  7297  0611  3080               	movlw	128
  7298  0612  027F               	subwf	127,w
  7299  0613  1D03               	skipz
  7300  0614  2E17               	goto	u256_25
  7301  0615  3008               	movlw	8
  7302  0616  0271               	subwf	UART_ISR@i,w
  7303  0617                     u256_25:	
  7304  0617  1803               	btfsc	3,0
  7305  0618  2E34               	goto	i1l458
  7306  0619                     i1l2937:	
  7307                           
  7308                           ;MCU_B1.c: 744: UART.Data[i] = getch();
  7309  0619  158A  26D8  118A   	fcall	_getch
  7310  061C  00F0               	movwf	??_UART_ISR
  7311  061D  0871               	movf	UART_ISR@i,w
  7312  061E  3E36               	addlw	_UART& (0+255)
  7313  061F  0084               	movwf	4
  7314  0620  0870               	movf	??_UART_ISR,w
  7315  0621  1383               	bcf	3,7	;select IRP bank0
  7316  0622  0080               	movwf	0
  7317  0623  3001               	movlw	1
  7318  0624  07F1               	addwf	UART_ISR@i,f
  7319  0625  1803               	skipnc
  7320  0626  0AF2               	incf	UART_ISR@i+1,f
  7321  0627  3000               	movlw	0
  7322  0628  07F2               	addwf	UART_ISR@i+1,f
  7323  0629  0872               	movf	UART_ISR@i+1,w
  7324  062A  3A80               	xorlw	128
  7325  062B  00FF               	movwf	127
  7326  062C  3080               	movlw	128
  7327  062D  027F               	subwf	127,w
  7328  062E  1D03               	skipz
  7329  062F  2E32               	goto	u257_25
  7330  0630  3008               	movlw	8
  7331  0631  0271               	subwf	UART_ISR@i,w
  7332  0632                     u257_25:	
  7333  0632  1C03               	skipc
  7334  0633  2E19               	goto	i1l2937
  7335  0634                     i1l458:	
  7336                           
  7337                           ;MCU_B1.c: 745: }
  7338                           ;MCU_B1.c: 746: UART.RxGO = 1;
  7339  0634  1283               	bcf	3,5	;RP0=0, select bank0
  7340  0635  1303               	bcf	3,6	;RP1=0, select bank0
  7341  0636  14C1               	bsf	_UART+11,1
  7342                           
  7343                           ;MCU_B1.c: 753: RCIF = 0;
  7344  0637  128C               	bcf	12,5	;volatile
  7345  0638  0008               	return
  7346  0639                     __end_of_UART_ISR:	
  7347                           
  7348                           	psect	text51
  7349  0ED8                     __ptext51:	
  7350 ;; *************** function _getch *****************
  7351 ;; Defined at:
  7352 ;;		line 864 in file "../src/MCU_B1.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7366 ;;      Params:         0       0       0       0
  7367 ;;      Locals:         0       0       0       0
  7368 ;;      Temps:          0       0       0       0
  7369 ;;      Totals:         0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_UART_ISR
  7376 ;;		_getche
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _getch
  7382  0ED8                     _getch:	
  7383  0ED8                     i1l486:	
  7384                           ;MCU_B1.c: 867: continue;
  7385                           
  7386                           ;MCU_B1.c: 866: while (!RCIF)
  7387                           
  7388                           ;incstack = 0
  7389                           ; Regs used in _getch: [wreg]
  7390                           
  7391  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7392  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  7393  0EDA  1E8C               	btfss	12,5	;volatile
  7394  0EDB  2ED8               	goto	i1l486
  7395                           
  7396                           ;MCU_B1.c: 868: return RCREG;
  7397  0EDC  081A               	movf	26,w	;volatile
  7398  0EDD  0008               	return
  7399  0EDE                     __end_of_getch:	
  7400                           
  7401                           	psect	text52
  7402  078E                     __ptext52:	
  7403 ;; *************** function _TMR1_ISR *****************
  7404 ;; Defined at:
  7405 ;;		line 209 in file "../src/MCU_B1.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;		None               void
  7412 ;; Registers used:
  7413 ;;		wreg, status,2
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7419 ;;      Params:         0       0       0       0
  7420 ;;      Locals:         0       0       0       0
  7421 ;;      Temps:          0       0       0       0
  7422 ;;      Totals:         0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_ISR
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           
  7433                           ;psect for function _TMR1_ISR
  7434  078E                     _TMR1_ISR:	
  7435                           
  7436                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  7437                           
  7438                           ;incstack = 0
  7439                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7440  078E  1683               	bsf	3,5	;RP0=1, select bank1
  7441  078F  1303               	bcf	3,6	;RP1=0, select bank1
  7442  0790  1C0C               	btfss	12,0	;volatile
  7443  0791  0008               	return
  7444  0792  1283               	bcf	3,5	;RP0=0, select bank0
  7445  0793  1303               	bcf	3,6	;RP1=0, select bank0
  7446  0794  1C0C               	btfss	12,0	;volatile
  7447  0795  0008               	return
  7448                           
  7449                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  7450  0796  30FA               	movlw	250
  7451  0797  008F               	movwf	15	;volatile
  7452                           
  7453                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  7454  0798  3038               	movlw	56
  7455  0799  008E               	movwf	14	;volatile
  7456                           
  7457                           ;MCU_B1.c: 214: TMR1IF = 0;
  7458  079A  100C               	bcf	12,0	;volatile
  7459                           
  7460                           ;MCU_B1.c: 234: Timer1.Count++;
  7461  079B  3001               	movlw	1
  7462  079C  07B1               	addwf	_Timer1+1,f
  7463  079D  1803               	skipnc
  7464  079E  0AB2               	incf	_Timer1+2,f
  7465  079F  3000               	movlw	0
  7466  07A0  07B2               	addwf	_Timer1+2,f
  7467                           
  7468                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  7469  07A1  3064               	movlw	100
  7470  07A2  0631               	xorwf	_Timer1+1,w
  7471  07A3  0432               	iorwf	_Timer1+2,w
  7472  07A4  1D03               	skipz
  7473  07A5  0008               	return
  7474                           
  7475                           ;MCU_B1.c: 236: {
  7476                           ;MCU_B1.c: 237: Timer1.Count = 0;
  7477  07A6  01B1               	clrf	_Timer1+1
  7478  07A7  01B2               	clrf	_Timer1+2
  7479                           
  7480                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  7481  07A8  1430               	bsf	_Timer1,0
  7482  07A9  0008               	return
  7483  07AA                     __end_of_TMR1_ISR:	
  7484  007E                     btemp	set	126	;btemp
  7485  007E                     wtemp	set	126
  7486  007E                     wtemp0	set	126
  7487  0080                     wtemp1	set	128
  7488  0082                     wtemp2	set	130
  7489  0084                     wtemp3	set	132
  7490  0086                     wtemp4	set	134
  7491  0088                     wtemp5	set	136
  7492  007F                     wtemp6	set	127
  7493  007E                     ttemp	set	126
  7494  007E                     ttemp0	set	126
  7495  0081                     ttemp1	set	129
  7496  0084                     ttemp2	set	132
  7497  0087                     ttemp3	set	135
  7498  007F                     ttemp4	set	127
  7499  007E                     ltemp	set	126
  7500  007E                     ltemp0	set	126
  7501  0082                     ltemp1	set	130
  7502  0086                     ltemp2	set	134
  7503  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     25      78
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   18364
                                             20 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                          _UART_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    1844
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     518
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     478
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     650
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     478
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        2     2      0     130
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    6756
                                             12 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3344
                                              5 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     422
                                              2 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      59
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getMain_All_Error_Status                             5     5      0     170
                                              1 BANK0      5     5      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (3) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2631
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     870
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     522
                                              6 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     407
                                              3 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0      88
                                              2 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     260
                                              9 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     260
                                              4 BANK0      5     5      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (2) _getLights_Status                                     2     2      0      87
                                              2 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      53
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2671
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2671
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2759
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2759
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2631
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      68
                                              3 COMMON     4     4      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             3     3      0      68
                                              0 COMMON     3     3      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _putch
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      87       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      87      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Dec 04 11:25:02 2014

                     _WDT_Clearing 0002                                 l99 064C  
                     ___awdiv@sign 005B                                 fsr 0004  
                              l220 077D                                l221 0785  
                              l462 0F53                                l480 0EFD  
                              l633 0750                                l629 0754  
                              l754 0080                                l755 0096  
                              l748 0204                                l749 0051  
                              _GIE 005F                                _RB2 0032  
                              _RA4 002C                                _LED 0033  
                              _RB3 0033                                _RB4 0034  
                              _RB5 0035                                _PS0 0408  
                              _PS1 0409                                _PS2 040A  
                              _ISR 0FB0                                _PSA 040B  
                              _RX9 00C6                                _WDT 0077  
                              _TX9 04C6             getAll_Lights_Line@line 0057  
                              fsr0 0004                                indf 0000  
                  __end_of_ADC_Set 0EF2          __end_of_LightsPointSelect 07FF  
           _setMain_Exception$2026 005E                   _getLights_Status 0F59  
          __size_of_Lights_Control 0059                               ?_ISR 0070  
                             l3403 0424                               l3411 0430  
                             l3341 03D6                               l3407 042A  
                             l3511 037B                               l3601 05D2  
                             l3355 03E7                               l3363 03EF  
                             l3531 03B5                               l3515 0381  
                             l3451 069A                               l3373 0402  
                             l3381 040A                               l3349 03DE  
                             l3525 0393                               l3613 05EE  
                             l3527 039F                               l3519 0387  
                             l3447 0693                               l3471 0535  
                             l3615 05F8                               l2815 044D  
                             l3385 0412                               l3377 0406  
                             l3529 03A7                               l3449 0675  
                             l3609 05E6                               l3481 0766  
                             l2841 048C                               l2833 0479  
                             l2825 0455                               l2809 0442  
                             l3721 0281                               l3713 0273  
                             l3467 051A                               l2827 0463  
                             l3723 0285                               l3731 029F  
                             l3629 074A                               l3485 076C  
                             l2837 0484                               l3725 0289  
                             l3717 0279                               l2783 04CD  
                             l3647 06E9                               l3903 013E  
                             l3479 0763                               l2863 05B3  
                             l2855 058F                               l3719 027D  
                             l3913 0175                               l2857 059D  
                             l3761 0318                               l3745 02CE  
                             l3729 028E                               l3835 0083  
                             l2867 05BE                               l3755 02FC  
                             l3739 02B2                               l2893 0657  
                             l3917 01A9                               l3919 01B8  
                             l3775 0352                               l3929 01D4  
                             l3769 0344                               l3883 00DB  
                             l3867 00B8                               l3787 0704  
                             l3971 0550                               l3885 00DC  
                             l3895 012A                               l3879 00CF  
                             l3977 0566              _myMain_Initialization 07FF  
                     __CFG_WDTE$ON 0000                               u2200 04C9  
                             u2305 0464                               u2315 0470  
                             u2325 047A                               u2405 05B4  
                             u4115 01C8                               u3500 039C  
                             u4045 00FC                               u2285 0458  
                             u2365 0592                               u4055 0120  
                             u3335 0FE5                               u3520 03B2  
                             u4145 01F1                               u2385 059E  
                             u4075 015C                               u2395 05AA  
                             u3365 067E                               u2495 0667  
                             u4095 019B                               u3555 071F  
                             _PEIE 005E                               _RCIE 0465  
                             _RCIF 0065                               _UART 0036  
                             _TXIE 0464                               _TXIF 0064  
                             __CDS 0027                               __PIR 00A0  
                             _main 053D                               btemp 007E  
                  __end_of_WDT_Set 0F4B                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 066D  
                            ??_ISR 0073                  _setLights_Trigger 07AA  
                    ??_Lights_Main 005F                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0EC7                 ?_setLights_Trigger 0057  
                 ??_setPIRLED_Main 0059                              ?_main 0069  
                  __end_of___awdiv 0493                              _ADRES 001E  
                  ___awdiv@divisor 0055                              _T1CON 0010  
                  __end_of___lwdiv 05C5                      ?_Lights_Close 0070  
                            i1l458 0634                              i1l486 0ED8  
                  ___awdiv@counter 005A                              _RCREG 001A  
                            _RCSTA 0018                              _TMR1H 000F  
                            _TMR1L 000E                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TXREG 0019                              _TXSTA 0098  
             setMain_Exception@buz 005C            __end_of_Timeout_Counter 0FEB  
                 __end_of_UART_ISR 0639                 __size_of_UART_Main 000E  
              ??_setLights_Trigger 0058                   __end_of_PIR_Main 021A  
                 __end_of_TMR1_ISR 07AA                   __end_of_UART_Set 07DE  
                 __end_of_TMR1_Set 0F3D                              _getAD 0756  
                            _getch 0ED8                              _putch 0EFA  
                 __end_of_WDT_Main 0F8C                      _LightsControl 0035  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 069E  
    __end_of_setLED_Initialization 0F9E                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0063                  getPIR_AD@channel2 005E  
                   _setLights_Main 06C8                     _setLights_Line 0F21  
                  __initialization 0013          __end_of_setLights_Trigger 07C5  
                     __end_of_main 0585                   __end_of_Fosc_Set 0ED8  
                        ??_ADC_Set 0055                             ??_main 006D  
                   ??_Lights_Close 005E                __end_of_Lights_Main 0F15  
       __size_of_LightsPointSelect 000C                             ?_getAD 0055  
           ?_myMain_Initialization 0070                             ?_getch 0070  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 0057                          ??_WDT_Set 0055  
                           _ANSELA 0185                             ?_putch 0070  
                           _ANSELB 0186           _getMain_All_Error_Status 0734  
                           i1l2937 0619                             _FVRCON 009D  
                           u256_25 0617                             u257_25 0632  
           getLights_Status@lights 0057                             _PIRLED 002C  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 07DE  
                           _TRISC6 043E                             _TRISC7 043F  
           getLights_Status@status 0058             __end_of_setLights_Main 06F0  
           __end_of_setLights_Line 0F2F         __end_of_Mcu_Initialization 0FB0  
                           _Lights 0034                             _Timer1 0030  
                __end_of_UART_Main 0F59        __size_of_CDS_Initialization 0004  
          ??_Lights_Initialization 0058                          ??___awdiv 0059  
                        ??___lwdiv 0059                             _setLED 03C5  
                           _myMain 0020                   ___awdiv@quotient 005C  
                           saved_w 007E                   ?_Timeout_Counter 0070  
                   _Lights_Control 0493            __size_of_LedPointSelect 001C  
                        ?_CDS_Main 0070        __size_of_PIR_Initialization 0014  
       getMain_LightsStatus@status 005D            __end_of__initialization 0022  
                        ?_LED_Main 0070                      ?_my_MainTimer 0070  
                  ?_setLights_Main 0070                    ?_setLights_Line 0070  
            __end_of_UART_Transmit 0734         __size_of_setLights_Trigger 001B  
                   __pcstackCOMMON 0070                 __size_of_getCDS_AD 002A  
                        ?_UART_ISR 0070           __end_of_getLights_Status 0F6A  
                    __end_of_getAD 0772                          ?_PIR_Main 0070  
                        ?_TMR1_ISR 0070                          ?_UART_Set 0070  
                    __end_of_getch 0EDE                          ?_TMR1_Set 0070  
               _LED_Initialization 0F15                 __size_of_getPIR_AD 013A  
                      _Lights_Main 0F0A                      __end_of_putch 0F02  
         _setLights_Initialization 0EE4                          ?_WDT_Main 0070  
             _getMain_LightsStatus 066D         __end_of_set_TimeoutCleared 0EE4  
              ?_LED_Initialization 0070             __end_of_Lights_Control 04EC  
            getMain_LightsStatus@i 005B                            ??_getAD 0056  
                          ??_getch 0070                         ??_CDS_Main 0055  
                          ??_putch 0055                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0070  
      __size_of_getAll_Lights_Line 0011                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0055  
                       ??_LED_Main 005B               __end_of_Lights_Close 1000  
        getMain_LightsStatus@count 005A               ??_LED_Initialization 005A  
                LedPointSelect@led 0056                         __pmaintext 053D  
                       ??_UART_ISR 0070                         ??_PIR_Main 0061  
                       ??_TMR1_ISR 0070                         ??_UART_Set 0055  
               __size_of_setLights 0051                         ??_TMR1_Set 0055  
                       __pintentry 0004                            ?_setLED 0057  
          setLights_Trigger@lights 0059                          UART_ISR@i 0071  
                          _ADC_Set 0EEB                         ??_WDT_Main 0055  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 06C8  
                          _WDT_Set 0F3D                         ??_Fosc_Set 0055  
                __end_of_getPIR_AD 0354                      ?_UART_Receive 0070  
                  __size_of_IO_Set 0015                         getCDS_AD@i 005A  
                       getCDS_AD@j 005B                            _Lights1 0042  
                          _VarLED1 004D                            _VarLED2 0051  
                          ___awdiv 0436                            ___lwdiv 0585  
                  __size_of_setLED 0071                            __ptext0 0000  
                          __ptext1 06F0                            __ptext2 07FF  
                          __ptext3 021A                            __ptext4 0585  
                          __ptext5 0436                            __ptext6 069E  
                          __ptext7 0756                            __ptext8 0EDE  
                          __ptext9 0FD7                         getPIR_AD@i 0064  
                       getPIR_AD@j 0062                       __size_of_ISR 0013  
       ??_getMain_All_Error_Status 0056            ??_myMain_Initialization 0055  
                   _LedPointSelect 0772                            clrloop0 0F03  
                __end_of_setLights 053D               end_of_initialization 0022  
                   ??_UART_Receive 0055                      _getCDS_Status 0EF2  
                   UART_Transmit@i 0056              _setLED_Initialization 0F8C  
   __size_of_Lights_Initialization 0004      __end_of_Lights_Initialization 0ECF  
           ??_getMain_LightsStatus 0059                          _UART_Main 0F4B  
         setLED_Initialization@led 0059                 _Mcu_Initialization 0F9E  
             __end_of_my_MainTimer 0712             __end_of_LedPointSelect 078E  
              setPIRLED_Main@count 005A                ?_Mcu_Initialization 0070  
            __size_of_Lights_Close 0015            __size_of_setPIRLED_Main 0071  
                 ??_setLights_Main 005B                   ??_setLights_Line 0057  
             setLights_Main@lights 005B    getMain_All_Error_Status@command 0057  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0070  
                   __end_of_IO_Set 07F3         __end_of_CDS_Initialization 0ECB  
       ??_setLights_Initialization 0057                  __size_of_LED_Main 0003  
                _setMain_Exception 05C5               ??_Mcu_Initialization 0056  
                    ?_WDT_Clearing 0070                 ?_setMain_Exception 0070  
                ?_getLights_Status 0070           setMain_Exception@command 0060  
                     ?_Lights_Main 0070                         ?_UART_Main 0070  
                __size_of_UART_ISR 0035                  __size_of_PIR_Main 01F5  
                __size_of_TMR1_ISR 001C                 ??_getLights_Status 0057  
                __size_of_UART_Set 0019                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 0436                ??_setMain_Exception 005A  
                     _Lights_Close 0FEB                  __size_of_WDT_Main 0011  
              start_initialization 0013                    ?_LedPointSelect 0070  
             setLights_Line@lights 0057                        __end_of_ISR 0FC3  
       __end_of_PIR_Initialization 0FD7                getCDS_Status@status 0055  
               _set_TimeoutCleared 0EDE                           ??_IO_Set 0055  
         __size_of_Timeout_Counter 0014                          _VarErrLED 0049  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_setMain_Exception 0604                    setLights@lights 005A  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0055  
                  setLights@status 0058                           ??_setLED 0058  
                         ?_ADC_Set 0070                   ??_Lights_Control 0057  
             __end_of_UART_Receive 0ED3   __end_of_getMain_All_Error_Status 0756  
                      __pbssCOMMON 0077                          ___latbits 0001  
           __size_of_UART_Transmit 0022                      __pcstackBANK0 0055  
             ??_set_TimeoutCleared 0055         __end_of_getAll_Lights_Line 0F7B  
                         ?_WDT_Set 0070                    ??_getCDS_Status 0055  
                    PIR_Main@error 0068                          _getCDS_AD 069E  
                        _getPIR_AD 021A        __size_of_LED_Initialization 000C  
                 ___lwdiv@dividend 0057                      _PIR_Main$2644 0066  
                         ?___awdiv 0055              __size_of_my_MainTimer 0022  
                         ?___lwdiv 0055                        ??_UART_Main 0058  
         setLights_Trigger@command 0057     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0800                     __size_of_getAD 001C  
                 ___lwdiv@quotient 005A                     __size_of_getch 0006  
                   _setPIRLED_Main 0354                           _CDS_Main 0639  
                   __size_of_putch 0008                  interrupt_function 0004  
                       ?_getCDS_AD 0057                           _LED_Main 0EC4  
                        _setLights 04EC                          clear_ram0 0F02  
 __end_of_setLights_Initialization 0EEB         __size_of_setMain_Exception 003F  
                     _my_MainTimer 06F0                         ?_getPIR_AD 005E  
                    _UART_Transmit 0712                           _GO_nDONE 00F9  
                ??_Timeout_Counter 0055                           _UART_ISR 0604  
                         _PIR_Main 0025                           _TMR1_ISR 078E  
                         _UART_Set 07C5                           _TMR1_Set 0F2F  
                         _WDT_Main 0F7B                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 000B             __end_of_setPIRLED_Main 03C5  
   getMain_All_Error_Status@status 005A                        getAD@adcon0 0056  
                      getAD@adcon1 0055               __end_of_WDT_Clearing 0004  
                         _Fosc_Set 0ED3                   __size_of_WDT_Set 000E  
          setMain_Exception@status 005D  __size_of_getMain_All_Error_Status 0022  
        ?_getMain_All_Error_Status 0070                         ?_setLights 0058  
                   ?_UART_Transmit 0070                           _SwDetect 0079  
    _getMain_All_Error_Status$2037 0058                          setLED@led 0058  
            __size_of_UART_Receive 0004                   __size_of___awdiv 005D  
                 __size_of___lwdiv 0040                   ??_LedPointSelect 0055  
               _CDS_Initialization 0EC7              _Lights_Initialization 0ECB  
    __size_of_getMain_LightsStatus 0031                    ?_setPIRLED_Main 0070  
                  ___lwdiv@divisor 0055                ?_CDS_Initialization 0070  
                  ___lwdiv@counter 005C                           __ptext10 0F7B  
                         __ptext11 0002                           __ptext20 0734  
                         __ptext12 0F4B                           __ptext21 0EF2  
                         __ptext13 0712                           __ptext30 0F0A  
                         __ptext22 0FC3                           __ptext14 0EFA  
                         __ptext31 06C8                           __ptext23 0F9E  
                         __ptext15 0ECF                           __ptext40 07F3  
                         __ptext32 04EC                           __ptext24 0F3D  
                         __ptext16 0025                           __ptext41 0EC4  
                         __ptext33 0F21                           __ptext25 07C5  
                         __ptext17 05C5                           __ptext50 0604  
                         __ptext42 0354                           __ptext34 0493  
                         __ptext26 0F2F                           __ptext18 07AA  
                         __ptext51 0ED8                           __ptext43 0F15  
                         __ptext35 0FEB                           __ptext27 07DE  
                         __ptext19 0F6A                           __ptext52 078E  
                         __ptext44 0F8C                           __ptext36 066D  
                         __ptext28 0ED3                           __ptext45 03C5  
                         __ptext37 0F59                           __ptext29 0EEB  
                         __ptext46 0772                           __ptext38 0ECB  
                         __ptext47 0639                           __ptext39 0EE4  
                         __ptext48 0EC7                           __ptext49 0FB0  
        __size_of_getLights_Status 0011            ??_setLED_Initialization 0059  
                      ??_getCDS_AD 0058                      setLED@command 0057  
                    __size_of_main 0048                       _UART_Receive 0ECF  
                      ??_getPIR_AD 005F                 _PIR_Initialization 0FC3  
             ??_CDS_Initialization 0055        __size_of_Mcu_Initialization 0012  
              ?_PIR_Initialization 0070                           main@argc 0069  
                         main@argv 006B  __size_of_setLights_Initialization 0007  
                        putch@byte 0055          ?_setLights_Initialization 0070  
             Lights_Control@lights 0059               ??_PIR_Initialization 0059  
                         intlevel1 0000                    ??_UART_Transmit 0056  
                      ??_setLights 0059            LightsPointSelect@lights 0056  
               _getAll_Lights_Line 0F6A            __size_of_setLights_Main 0028  
          __size_of_setLights_Line 000E                ?_getAll_Lights_Line 0070  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0057        __size_of_set_TimeoutCleared 0006  
                _LightsPointSelect 07F3               ??_getAll_Lights_Line 0057  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 0FD7         __end_of_LED_Initialization 0F21  
            __end_of_getCDS_Status 0EFA                  getCDS_AD@channel1 005C  
                getCDS_AD@channel2 0057                ??_LightsPointSelect 0055  
