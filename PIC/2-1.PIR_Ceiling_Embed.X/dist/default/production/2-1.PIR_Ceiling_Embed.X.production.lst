

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Oct 20 10:28:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0089                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0096                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009F                     	;# 
    91  0108                     	;# 
    92  0109                     	;# 
    93  010C                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  0185                     	;# 
   100  0186                     	;# 
   101  018C                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0089                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0096                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009F                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0185                     	;# 
   169  0186                     	;# 
   170  018C                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0096                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009F                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0186                     	;# 
   239  018C                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0096                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009F                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0186                     	;# 
   308  018C                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0096                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009F                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0186                     	;# 
   377  018C                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0096                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009F                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0186                     	;# 
   446  018C                     	;# 
   447  0000                     	;# 
   448  0001                     	;# 
   449  0002                     	;# 
   450  0003                     	;# 
   451  0004                     	;# 
   452  0005                     	;# 
   453  0006                     	;# 
   454  0007                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0094                     	;# 
   496  0095                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0096                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009F                     	;# 
   505  0108                     	;# 
   506  0109                     	;# 
   507  010C                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010D                     	;# 
   511  010E                     	;# 
   512  010F                     	;# 
   513  0185                     	;# 
   514  0186                     	;# 
   515  018C                     	;# 
   516  0000                     	;# 
   517  0001                     	;# 
   518  0002                     	;# 
   519  0003                     	;# 
   520  0004                     	;# 
   521  0005                     	;# 
   522  0006                     	;# 
   523  0007                     	;# 
   524  0009                     	;# 
   525  000A                     	;# 
   526  000B                     	;# 
   527  000C                     	;# 
   528  000D                     	;# 
   529  000E                     	;# 
   530  000E                     	;# 
   531  000F                     	;# 
   532  0010                     	;# 
   533  0011                     	;# 
   534  0012                     	;# 
   535  0013                     	;# 
   536  0014                     	;# 
   537  0015                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0017                     	;# 
   541  0018                     	;# 
   542  0019                     	;# 
   543  001A                     	;# 
   544  001B                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  001D                     	;# 
   548  001E                     	;# 
   549  001F                     	;# 
   550  0081                     	;# 
   551  0085                     	;# 
   552  0086                     	;# 
   553  0087                     	;# 
   554  0089                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  008F                     	;# 
   559  0090                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0093                     	;# 
   563  0093                     	;# 
   564  0094                     	;# 
   565  0095                     	;# 
   566  0095                     	;# 
   567  0096                     	;# 
   568  0096                     	;# 
   569  0098                     	;# 
   570  0099                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009F                     	;# 
   574  0108                     	;# 
   575  0109                     	;# 
   576  010C                     	;# 
   577  010C                     	;# 
   578  010D                     	;# 
   579  010D                     	;# 
   580  010E                     	;# 
   581  010F                     	;# 
   582  0185                     	;# 
   583  0186                     	;# 
   584  018C                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0009                     	;# 
   594  000A                     	;# 
   595  000B                     	;# 
   596  000C                     	;# 
   597  000D                     	;# 
   598  000E                     	;# 
   599  000E                     	;# 
   600  000F                     	;# 
   601  0010                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0014                     	;# 
   606  0015                     	;# 
   607  0015                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  001D                     	;# 
   617  001E                     	;# 
   618  001F                     	;# 
   619  0081                     	;# 
   620  0085                     	;# 
   621  0086                     	;# 
   622  0087                     	;# 
   623  0089                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  008F                     	;# 
   628  0090                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0093                     	;# 
   632  0093                     	;# 
   633  0094                     	;# 
   634  0095                     	;# 
   635  0095                     	;# 
   636  0096                     	;# 
   637  0096                     	;# 
   638  0098                     	;# 
   639  0099                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009F                     	;# 
   643  0108                     	;# 
   644  0109                     	;# 
   645  010C                     	;# 
   646  010C                     	;# 
   647  010D                     	;# 
   648  010D                     	;# 
   649  010E                     	;# 
   650  010F                     	;# 
   651  0185                     	;# 
   652  0186                     	;# 
   653  018C                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000D                     	;# 
   667  000E                     	;# 
   668  000E                     	;# 
   669  000F                     	;# 
   670  0010                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0013                     	;# 
   674  0014                     	;# 
   675  0015                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0017                     	;# 
   679  0018                     	;# 
   680  0019                     	;# 
   681  001A                     	;# 
   682  001B                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  001D                     	;# 
   686  001E                     	;# 
   687  001F                     	;# 
   688  0081                     	;# 
   689  0085                     	;# 
   690  0086                     	;# 
   691  0087                     	;# 
   692  0089                     	;# 
   693  008C                     	;# 
   694  008D                     	;# 
   695  008E                     	;# 
   696  008F                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0092                     	;# 
   700  0093                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0095                     	;# 
   705  0096                     	;# 
   706  0096                     	;# 
   707  0098                     	;# 
   708  0099                     	;# 
   709  009C                     	;# 
   710  009D                     	;# 
   711  009F                     	;# 
   712  0108                     	;# 
   713  0109                     	;# 
   714  010C                     	;# 
   715  010C                     	;# 
   716  010D                     	;# 
   717  010D                     	;# 
   718  010E                     	;# 
   719  010F                     	;# 
   720  0185                     	;# 
   721  0186                     	;# 
   722  018C                     	;# 
   723  0000                     	;# 
   724  0001                     	;# 
   725  0002                     	;# 
   726  0003                     	;# 
   727  0004                     	;# 
   728  0005                     	;# 
   729  0006                     	;# 
   730  0007                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  000E                     	;# 
   737  000E                     	;# 
   738  000F                     	;# 
   739  0010                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001D                     	;# 
   755  001E                     	;# 
   756  001F                     	;# 
   757  0081                     	;# 
   758  0085                     	;# 
   759  0086                     	;# 
   760  0087                     	;# 
   761  0089                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0093                     	;# 
   771  0094                     	;# 
   772  0095                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0096                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009F                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0186                     	;# 
   791  018C                     	;# 
   792  0000                     	;# 
   793  0001                     	;# 
   794  0002                     	;# 
   795  0003                     	;# 
   796  0004                     	;# 
   797  0005                     	;# 
   798  0006                     	;# 
   799  0007                     	;# 
   800  0009                     	;# 
   801  000A                     	;# 
   802  000B                     	;# 
   803  000C                     	;# 
   804  000D                     	;# 
   805  000E                     	;# 
   806  000E                     	;# 
   807  000F                     	;# 
   808  0010                     	;# 
   809  0011                     	;# 
   810  0012                     	;# 
   811  0013                     	;# 
   812  0014                     	;# 
   813  0015                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  001D                     	;# 
   824  001E                     	;# 
   825  001F                     	;# 
   826  0081                     	;# 
   827  0085                     	;# 
   828  0086                     	;# 
   829  0087                     	;# 
   830  0089                     	;# 
   831  008C                     	;# 
   832  008D                     	;# 
   833  008E                     	;# 
   834  008F                     	;# 
   835  0090                     	;# 
   836  0091                     	;# 
   837  0092                     	;# 
   838  0093                     	;# 
   839  0093                     	;# 
   840  0094                     	;# 
   841  0095                     	;# 
   842  0095                     	;# 
   843  0096                     	;# 
   844  0096                     	;# 
   845  0098                     	;# 
   846  0099                     	;# 
   847  009C                     	;# 
   848  009D                     	;# 
   849  009F                     	;# 
   850  0108                     	;# 
   851  0109                     	;# 
   852  010C                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010D                     	;# 
   856  010E                     	;# 
   857  010F                     	;# 
   858  0185                     	;# 
   859  0186                     	;# 
   860  018C                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000D                     	;# 
   874  000E                     	;# 
   875  000E                     	;# 
   876  000F                     	;# 
   877  0010                     	;# 
   878  0011                     	;# 
   879  0012                     	;# 
   880  0013                     	;# 
   881  0014                     	;# 
   882  0015                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0017                     	;# 
   886  0018                     	;# 
   887  0019                     	;# 
   888  001A                     	;# 
   889  001B                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001D                     	;# 
   893  001E                     	;# 
   894  001F                     	;# 
   895  0081                     	;# 
   896  0085                     	;# 
   897  0086                     	;# 
   898  0087                     	;# 
   899  0089                     	;# 
   900  008C                     	;# 
   901  008D                     	;# 
   902  008E                     	;# 
   903  008F                     	;# 
   904  0090                     	;# 
   905  0091                     	;# 
   906  0092                     	;# 
   907  0093                     	;# 
   908  0093                     	;# 
   909  0094                     	;# 
   910  0095                     	;# 
   911  0095                     	;# 
   912  0096                     	;# 
   913  0096                     	;# 
   914  0098                     	;# 
   915  0099                     	;# 
   916  009C                     	;# 
   917  009D                     	;# 
   918  009F                     	;# 
   919  0108                     	;# 
   920  0109                     	;# 
   921  010C                     	;# 
   922  010C                     	;# 
   923  010D                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  010F                     	;# 
   927  0185                     	;# 
   928  0186                     	;# 
   929  018C                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  000E                     	;# 
   945  000F                     	;# 
   946  0010                     	;# 
   947  0011                     	;# 
   948  0012                     	;# 
   949  0013                     	;# 
   950  0014                     	;# 
   951  0015                     	;# 
   952  0015                     	;# 
   953  0016                     	;# 
   954  0017                     	;# 
   955  0018                     	;# 
   956  0019                     	;# 
   957  001A                     	;# 
   958  001B                     	;# 
   959  001B                     	;# 
   960  001C                     	;# 
   961  001D                     	;# 
   962  001E                     	;# 
   963  001F                     	;# 
   964  0081                     	;# 
   965  0085                     	;# 
   966  0086                     	;# 
   967  0087                     	;# 
   968  0089                     	;# 
   969  008C                     	;# 
   970  008D                     	;# 
   971  008E                     	;# 
   972  008F                     	;# 
   973  0090                     	;# 
   974  0091                     	;# 
   975  0092                     	;# 
   976  0093                     	;# 
   977  0093                     	;# 
   978  0094                     	;# 
   979  0095                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0096                     	;# 
   983  0098                     	;# 
   984  0099                     	;# 
   985  009C                     	;# 
   986  009D                     	;# 
   987  009F                     	;# 
   988  0108                     	;# 
   989  0109                     	;# 
   990  010C                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010D                     	;# 
   994  010E                     	;# 
   995  010F                     	;# 
   996  0185                     	;# 
   997  0186                     	;# 
   998  018C                     	;# 
   999  0000                     	;# 
  1000  0001                     	;# 
  1001  0002                     	;# 
  1002  0003                     	;# 
  1003  0004                     	;# 
  1004  0005                     	;# 
  1005  0006                     	;# 
  1006  0007                     	;# 
  1007  0009                     	;# 
  1008  000A                     	;# 
  1009  000B                     	;# 
  1010  000C                     	;# 
  1011  000D                     	;# 
  1012  000E                     	;# 
  1013  000E                     	;# 
  1014  000F                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0014                     	;# 
  1020  0015                     	;# 
  1021  0015                     	;# 
  1022  0016                     	;# 
  1023  0017                     	;# 
  1024  0018                     	;# 
  1025  0019                     	;# 
  1026  001A                     	;# 
  1027  001B                     	;# 
  1028  001B                     	;# 
  1029  001C                     	;# 
  1030  001D                     	;# 
  1031  001E                     	;# 
  1032  001F                     	;# 
  1033  0081                     	;# 
  1034  0085                     	;# 
  1035  0086                     	;# 
  1036  0087                     	;# 
  1037  0089                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  008F                     	;# 
  1042  0090                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0093                     	;# 
  1047  0094                     	;# 
  1048  0095                     	;# 
  1049  0095                     	;# 
  1050  0096                     	;# 
  1051  0096                     	;# 
  1052  0098                     	;# 
  1053  0099                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009F                     	;# 
  1057  0108                     	;# 
  1058  0109                     	;# 
  1059  010C                     	;# 
  1060  010C                     	;# 
  1061  010D                     	;# 
  1062  010D                     	;# 
  1063  010E                     	;# 
  1064  010F                     	;# 
  1065  0185                     	;# 
  1066  0186                     	;# 
  1067  018C                     	;# 
  1068  0000                     	;# 
  1069  0001                     	;# 
  1070  0002                     	;# 
  1071  0003                     	;# 
  1072  0004                     	;# 
  1073  0005                     	;# 
  1074  0006                     	;# 
  1075  0007                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  000E                     	;# 
  1083  000F                     	;# 
  1084  0010                     	;# 
  1085  0011                     	;# 
  1086  0012                     	;# 
  1087  0013                     	;# 
  1088  0014                     	;# 
  1089  0015                     	;# 
  1090  0015                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  0019                     	;# 
  1095  001A                     	;# 
  1096  001B                     	;# 
  1097  001B                     	;# 
  1098  001C                     	;# 
  1099  001D                     	;# 
  1100  001E                     	;# 
  1101  001F                     	;# 
  1102  0081                     	;# 
  1103  0085                     	;# 
  1104  0086                     	;# 
  1105  0087                     	;# 
  1106  0089                     	;# 
  1107  008C                     	;# 
  1108  008D                     	;# 
  1109  008E                     	;# 
  1110  008F                     	;# 
  1111  0090                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0093                     	;# 
  1115  0093                     	;# 
  1116  0094                     	;# 
  1117  0095                     	;# 
  1118  0095                     	;# 
  1119  0096                     	;# 
  1120  0096                     	;# 
  1121  0098                     	;# 
  1122  0099                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009F                     	;# 
  1126  0108                     	;# 
  1127  0109                     	;# 
  1128  010C                     	;# 
  1129  010C                     	;# 
  1130  010D                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  010F                     	;# 
  1134  0185                     	;# 
  1135  0186                     	;# 
  1136  018C                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  000E                     	;# 
  1152  000F                     	;# 
  1153  0010                     	;# 
  1154  0011                     	;# 
  1155  0012                     	;# 
  1156  0013                     	;# 
  1157  0014                     	;# 
  1158  0015                     	;# 
  1159  0015                     	;# 
  1160  0016                     	;# 
  1161  0017                     	;# 
  1162  0018                     	;# 
  1163  0019                     	;# 
  1164  001A                     	;# 
  1165  001B                     	;# 
  1166  001B                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001E                     	;# 
  1170  001F                     	;# 
  1171  0081                     	;# 
  1172  0085                     	;# 
  1173  0086                     	;# 
  1174  0087                     	;# 
  1175  0089                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  008F                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0092                     	;# 
  1183  0093                     	;# 
  1184  0093                     	;# 
  1185  0094                     	;# 
  1186  0095                     	;# 
  1187  0095                     	;# 
  1188  0096                     	;# 
  1189  0096                     	;# 
  1190  0098                     	;# 
  1191  0099                     	;# 
  1192  009C                     	;# 
  1193  009D                     	;# 
  1194  009F                     	;# 
  1195  0108                     	;# 
  1196  0109                     	;# 
  1197  010C                     	;# 
  1198  010C                     	;# 
  1199  010D                     	;# 
  1200  010D                     	;# 
  1201  010E                     	;# 
  1202  010F                     	;# 
  1203  0185                     	;# 
  1204  0186                     	;# 
  1205  018C                     	;# 
  1206  001F                     _ADCON0	set	31
  1207  001E                     _ADRES	set	30
  1208  0005                     _PORTA	set	5
  1209  0006                     _PORTB	set	6
  1210  0007                     _PORTC	set	7
  1211  0001                     _TMR0	set	1
  1212  005F                     _GIE	set	95
  1213  00F9                     _GO_nDONE	set	249
  1214  0031                     _RB1	set	49
  1215  0033                     _RB3	set	51
  1216  0034                     _RB4	set	52
  1217  0035                     _RB5	set	53
  1218  005D                     _TMR0IE	set	93
  1219  005A                     _TMR0IF	set	90
  1220  009F                     _ADCON1	set	159
  1221  009D                     _FVRCON	set	157
  1222  0081                     _OPTION_REG	set	129
  1223  0090                     _OSCCON	set	144
  1224  0085                     _TRISA	set	133
  1225  0086                     _TRISB	set	134
  1226  0087                     _TRISC	set	135
  1227  0185                     _ANSELA	set	389
  1228  0186                     _ANSELB	set	390
  1229                           
  1230                           	psect	text0
  1231  0000                     __ptext0:	
  1232                           ; #config settings
  1233                           
  1234                           
  1235                           ;psect for function _TMR0_ISR
  1236  0000                     
  1237                           	psect	cinit
  1238  0013                     start_initialization:	
  1239  0013                     __initialization:	
  1240                           
  1241                           ; Clear objects allocated to COMMON
  1242  0013  01F9               	clrf	__pbssCOMMON& (0+127)
  1243                           
  1244                           ; Clear objects allocated to BANK0
  1245  0014  1383               	bcf	3,7	;select IRP bank0
  1246  0015  3020               	movlw	low __pbssBANK0
  1247  0016  0084               	movwf	4
  1248  0017  3052               	movlw	low (__pbssBANK0+50)
  1249  0018  118A  2293         	fcall	clear_ram0
  1250  001A                     end_of_initialization:	
  1251                           ;End of C runtime variable initialization code
  1252                           
  1253  001A                     __end_of__initialization:	
  1254  001A  0183               	clrf	3
  1255  001B  118A  29DE         	ljmp	_main	;jump to C main() function
  1256                           
  1257                           	psect	bssCOMMON
  1258  0079                     __pbssCOMMON:	
  1259  0079                     _LED:	
  1260  0079                     	ds	1
  1261                           
  1262                           	psect	bssBANK0
  1263  0020                     __pbssBANK0:	
  1264  0020                     _myMain:	
  1265  0020                     	ds	18
  1266  0032                     _Buz1:	
  1267  0032                     	ds	12
  1268  003E                     _Timer0:	
  1269  003E                     	ds	8
  1270  0046                     _VarErrLED:	
  1271  0046                     	ds	4
  1272  004A                     _VarLED1:	
  1273  004A                     	ds	4
  1274  004E                     _VarLED2:	
  1275  004E                     	ds	4
  1276                           
  1277                           	psect	clrtext
  1278  0293                     clear_ram0:	
  1279                           ;	Called with FSR containing the base address, and
  1280                           ;	W with the last address+1
  1281                           
  1282  0293  0064               	clrwdt	;clear the watchdog before getting into this loop
  1283  0294                     clrloop0:	
  1284  0294  0180               	clrf	0	;clear RAM location pointed to by FSR
  1285  0295  0A84               	incf	4,f	;increment pointer
  1286  0296  0604               	xorwf	4,w	;XOR with final address
  1287  0297  1903               	btfsc	3,2	;have we reached the end yet?
  1288  0298  3400               	retlw	0	;all done for this memory range, return
  1289  0299  0604               	xorwf	4,w	;XOR again to restore value
  1290  029A  2A94               	goto	clrloop0	;do the next byte
  1291                           
  1292                           	psect	cstackCOMMON
  1293  0070                     __pcstackCOMMON:	
  1294  0070                     ?_setLED_Initialization:	
  1295  0070                     ?_setLED_Main:	
  1296                           ; 0 bytes @ 0x0
  1297                           
  1298  0070                     ?_Fosc_Set:	
  1299                           ; 0 bytes @ 0x0
  1300                           
  1301  0070                     ?_IO_Set:	
  1302                           ; 0 bytes @ 0x0
  1303                           
  1304  0070                     ?_TMR0_Set:	
  1305                           ; 0 bytes @ 0x0
  1306                           
  1307  0070                     ?_ADC_Set:	
  1308                           ; 0 bytes @ 0x0
  1309                           
  1310  0070                     ?_TMR0_ISR:	
  1311                           ; 0 bytes @ 0x0
  1312                           
  1313  0070                     ??_TMR0_ISR:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ?_myMain_Initialization:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?_my_Main:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?_Buzzer_Initialization:	
  1323                           ; 0 bytes @ 0x0
  1324                           
  1325  0070                     ?_Buzzer_Main:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?_LedPointSelect:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?_LED_Initialization:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_LED_Main:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_Mcu_Initialization:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_ISR:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ??_ISR:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346                           
  1347                           ; 0 bytes @ 0x0
  1348  0070                     	ds	4
  1349  0074                     ??_Fosc_Set:	
  1350  0074                     ??_IO_Set:	
  1351                           ; 0 bytes @ 0x4
  1352                           
  1353  0074                     ??_TMR0_Set:	
  1354                           ; 0 bytes @ 0x4
  1355                           
  1356  0074                     ??_ADC_Set:	
  1357                           ; 0 bytes @ 0x4
  1358                           
  1359  0074                     ??_myMain_Initialization:	
  1360                           ; 0 bytes @ 0x4
  1361                           
  1362  0074                     ??_Buzzer_Initialization:	
  1363                           ; 0 bytes @ 0x4
  1364                           
  1365  0074                     ??_Buzzer_Main:	
  1366                           ; 0 bytes @ 0x4
  1367                           
  1368  0074                     ??_LedPointSelect:	
  1369                           ; 0 bytes @ 0x4
  1370                           
  1371  0074                     ??_Mcu_Initialization:	
  1372                           ; 0 bytes @ 0x4
  1373                           
  1374  0074                     ?___awdiv:	
  1375                           ; 0 bytes @ 0x4
  1376                           
  1377  0074                     ___awdiv@divisor:	
  1378                           ; 2 bytes @ 0x4
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x4
  1382  0074                     	ds	1
  1383  0075                     LedPointSelect@led:	
  1384                           
  1385                           ; 1 bytes @ 0x5
  1386  0075                     	ds	1
  1387  0076                     ??_setLED_Main:	
  1388  0076                     ?_setLED:	
  1389                           ; 0 bytes @ 0x6
  1390                           
  1391  0076                     setLED@command:	
  1392                           ; 0 bytes @ 0x6
  1393                           
  1394  0076                     ___awdiv@dividend:	
  1395                           ; 1 bytes @ 0x6
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x6
  1399  0076                     	ds	1
  1400  0077                     ??_setLED:	
  1401  0077                     setLED@led:	
  1402                           ; 0 bytes @ 0x7
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x7
  1406  0077                     	ds	1
  1407  0078                     ??_setLED_Initialization:	
  1408  0078                     ??___awdiv:	
  1409                           ; 0 bytes @ 0x8
  1410                           
  1411  0078                     setLED_Initialization@led:	
  1412                           ; 0 bytes @ 0x8
  1413                           
  1414  0078                     setLED_Main@led:	
  1415                           ; 1 bytes @ 0x8
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x8
  1419  0078                     	ds	1
  1420  0079                     ??_my_Main:	
  1421  0079                     ??_LED_Initialization:	
  1422                           ; 0 bytes @ 0x9
  1423                           
  1424  0079                     ??_LED_Main:	
  1425                           ; 0 bytes @ 0x9
  1426                           
  1427  0079                     ??_main:	
  1428                           ; 0 bytes @ 0x9
  1429                           
  1430                           
  1431                           	psect	cstackBANK0
  1432  0052                     __pcstackBANK0:	
  1433                           ; 0 bytes @ 0x9
  1434                           
  1435  0052                     ___awdiv@counter:	
  1436                           
  1437                           ; 1 bytes @ 0x0
  1438  0052                     	ds	1
  1439  0053                     ___awdiv@sign:	
  1440                           
  1441                           ; 1 bytes @ 0x1
  1442  0053                     	ds	1
  1443  0054                     ___awdiv@quotient:	
  1444                           
  1445                           ; 2 bytes @ 0x2
  1446  0054                     	ds	2
  1447  0056                     ?_setBuz:	
  1448  0056                     setBuz@time:	
  1449                           ; 0 bytes @ 0x4
  1450                           
  1451                           
  1452                           ; 2 bytes @ 0x4
  1453  0056                     	ds	2
  1454  0058                     ??_setBuz:	
  1455                           
  1456                           ; 0 bytes @ 0x6
  1457  0058                     	ds	1
  1458  0059                     setBuz@count:	
  1459                           
  1460                           ; 1 bytes @ 0x7
  1461  0059                     	ds	1
  1462  005A                     ?_main:	
  1463  005A                     main@argc:	
  1464                           ; 2 bytes @ 0x8
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x8
  1468  005A                     	ds	2
  1469  005C                     main@argv:	
  1470                           
  1471                           ; 2 bytes @ 0xA
  1472  005C                     	ds	2
  1473                           
  1474                           	psect	maintext
  1475  01DE                     __pmaintext:	
  1476 ;;
  1477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1478 ;;
  1479 ;; *************** function _main *****************
  1480 ;; Defined at:
  1481 ;;		line 7 in file "../src/Main_B1.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  argc            2    8[BANK0 ] int 
  1484 ;;  argv            2   10[BANK0 ] PTR PTR unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    8[BANK0 ] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 17F/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1496 ;;      Params:         0       4       0       0
  1497 ;;      Locals:         0       0       0       0
  1498 ;;      Temps:          0       0       0       0
  1499 ;;      Totals:         0       4       0       0
  1500 ;;Total ram usage:        4 bytes
  1501 ;; Hardware stack levels required when called:    6
  1502 ;; This function calls:
  1503 ;;		_Buzzer_Initialization
  1504 ;;		_Buzzer_Main
  1505 ;;		_LED_Initialization
  1506 ;;		_LED_Main
  1507 ;;		_Mcu_Initialization
  1508 ;;		_myMain_Initialization
  1509 ;;		_my_Main
  1510 ;; This function is called by:
  1511 ;;		Startup code after reset
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _main
  1517  01DE                     _main:	
  1518                           
  1519                           ;Main_B1.c: 9: myMain_Initialization();
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1523  01DE  118A  22AB  118A   	fcall	_myMain_Initialization
  1524                           
  1525                           ;Main_B1.c: 10: Mcu_Initialization();
  1526  01E1  118A  2265  118A   	fcall	_Mcu_Initialization
  1527                           
  1528                           ;Main_B1.c: 11: ;;
  1529                           ;Main_B1.c: 12: LED_Initialization();
  1530  01E4  118A  227D  118A   	fcall	_LED_Initialization
  1531                           
  1532                           ;Main_B1.c: 13: Buzzer_Initialization();
  1533  01E7  118A  22A7  118A   	fcall	_Buzzer_Initialization
  1534                           
  1535                           ;Main_B1.c: 15: ;;
  1536                           ;Main_B1.c: 16: ;;
  1537                           ;Main_B1.c: 17: ;;
  1538                           ;Main_B1.c: 18: ;;
  1539                           ;Main_B1.c: 19: ;;
  1540                           ;Main_B1.c: 21: ;;
  1541                           ;Main_B1.c: 22: ;;
  1542                           ;Main_B1.c: 23: ;;
  1543                           ;Main_B1.c: 24: ;;
  1544                           ;Main_B1.c: 25: ;;
  1545                           ;Main_B1.c: 26: ;;
  1546                           ;Main_B1.c: 27: __nop();
  1547  01EA  0000               	nop
  1548  01EB                     l319:	
  1549                           ;Main_B1.c: 35: ;;
  1550                           ;Main_B1.c: 43: ;;
  1551                           ;Main_B1.c: 51: ;;
  1552                           ;Main_B1.c: 55: ;;
  1553                           
  1554                           ;Main_B1.c: 28: ;;
  1555                           ;Main_B1.c: 31: while (1) {
  1556                           
  1557                           
  1558                           ;Main_B1.c: 62: }
  1559                           ;Main_B1.c: 65: if (myMain.T0_Timerout) {
  1560  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1561  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1562  01ED  1CA0               	btfss	_myMain,1
  1563  01EE  29EB               	goto	l319
  1564                           
  1565                           ;Main_B1.c: 66: myMain.T0_Timerout = 0;
  1566  01EF  10A0               	bcf	_myMain,1
  1567                           
  1568                           ;Main_B1.c: 67: my_Main();
  1569  01F0  118A  21AE  118A   	fcall	_my_Main
  1570                           
  1571                           ;Main_B1.c: 68: ;;
  1572                           ;Main_B1.c: 69: ;;
  1573                           ;Main_B1.c: 70: ;;
  1574                           ;Main_B1.c: 71: if (myMain.PowerON) {
  1575  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1577  01F5  1C20               	btfss	_myMain,0
  1578  01F6  29EB               	goto	l319
  1579                           
  1580                           ;Main_B1.c: 72: ;;
  1581                           ;Main_B1.c: 74: LED_Main();
  1582  01F7  118A  2271  118A   	fcall	_LED_Main
  1583                           
  1584                           ;Main_B1.c: 75: Buzzer_Main();
  1585  01FA  118A  212B  118A   	fcall	_Buzzer_Main
  1586                           
  1587                           ;Main_B1.c: 77: ;;
  1588                           ;Main_B1.c: 78: ;;
  1589                           ;Main_B1.c: 79: ;;
  1590                           ;Main_B1.c: 80: ;;
  1591                           ;Main_B1.c: 82: ;;
  1592                           ;Main_B1.c: 83: ;;
  1593                           ;Main_B1.c: 84: ;;
  1594                           ;Main_B1.c: 85: ;;
  1595                           ;Main_B1.c: 86: ;;
  1596                           ;Main_B1.c: 88: ;;
  1597                           ;Main_B1.c: 89: ;;
  1598                           ;Main_B1.c: 90: ;;
  1599  01FD  29EB               	goto	l319
  1600  01FE                     __end_of_main:	
  1601                           ;Main_B1.c: 91: }
  1602                           ;Main_B1.c: 92: }
  1603                           ;Main_B1.c: 110: }
  1604                           ;Main_B1.c: 111: return (0);
  1605                           ;	Return value of _main is never used
  1606                           
  1607                           
  1608                           	psect	text1
  1609  01AE                     __ptext1:	
  1610 ;; *************** function _my_Main *****************
  1611 ;; Defined at:
  1612 ;;		line 128 in file "../src/Main_B1.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1626 ;;      Params:         0       0       0       0
  1627 ;;      Locals:         0       0       0       0
  1628 ;;      Temps:          0       0       0       0
  1629 ;;      Totals:         0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    4
  1633 ;; This function calls:
  1634 ;;		_setBuz
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _my_Main
  1642  01AE                     _my_Main:	
  1643                           
  1644                           ;Main_B1.c: 130: if (myMain.PowerON == 0) {
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _my_Main: [wreg+status,2+status,0+pclath+cstack]
  1648  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1649  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1650  01B0  1820               	btfsc	_myMain,0
  1651  01B1  29CB               	goto	l1466
  1652                           
  1653                           ;Main_B1.c: 131: myMain.PowerCount++;
  1654  01B2  3001               	movlw	1
  1655  01B3  07A1               	addwf	_myMain+1,f
  1656  01B4  1803               	skipnc
  1657  01B5  0AA2               	incf	_myMain+2,f
  1658  01B6  3000               	movlw	0
  1659  01B7  07A2               	addwf	_myMain+2,f
  1660                           
  1661                           ;Main_B1.c: 132: if (myMain.PowerCount == 150)
  1662  01B8  3096               	movlw	150
  1663  01B9  0621               	xorwf	_myMain+1,w
  1664  01BA  0422               	iorwf	_myMain+2,w
  1665  01BB  1D03               	skipz
  1666  01BC  0008               	return
  1667                           
  1668                           ;Main_B1.c: 133: {
  1669                           ;Main_B1.c: 134: myMain.PowerCount = 0;
  1670  01BD  01A1               	clrf	_myMain+1
  1671  01BE  01A2               	clrf	_myMain+2
  1672                           
  1673                           ;Main_B1.c: 135: myMain.PowerON = 1;
  1674  01BF  1420               	bsf	_myMain,0
  1675                           
  1676                           ;Main_B1.c: 138: ;;
  1677                           ;Main_B1.c: 148: setBuz(3, 50);
  1678  01C0  3032               	movlw	50
  1679  01C1  00D6               	movwf	setBuz@time
  1680  01C2  3000               	movlw	0
  1681  01C3  00D7               	movwf	setBuz@time+1
  1682  01C4  3003               	movlw	3
  1683  01C5  118A  20E4         	fcall	_setBuz
  1684                           
  1685                           ;Main_B1.c: 149: myMain.SelfTest = 1;
  1686  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1687  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1688  01C9  1720               	bsf	_myMain,6
  1689                           
  1690                           ;Main_B1.c: 158: }
  1691                           ;Main_B1.c: 159: } else {
  1692                           
  1693                           ;Main_B1.c: 151: ;;
  1694  01CA  0008               	return
  1695  01CB                     l1466:	
  1696                           
  1697                           ;Main_B1.c: 167: myMain.Count1++;
  1698  01CB  3001               	movlw	1
  1699  01CC  07A5               	addwf	_myMain+5,f
  1700  01CD  1803               	skipnc
  1701  01CE  0AA6               	incf	_myMain+6,f
  1702  01CF  3000               	movlw	0
  1703  01D0  07A6               	addwf	_myMain+6,f
  1704                           
  1705                           ;Main_B1.c: 168: if (myMain.Count1 == 100)
  1706  01D1  3064               	movlw	100
  1707  01D2  0625               	xorwf	_myMain+5,w
  1708  01D3  0426               	iorwf	_myMain+6,w
  1709  01D4  1D03               	skipz
  1710  01D5  0008               	return
  1711                           
  1712                           ;Main_B1.c: 169: {
  1713                           ;Main_B1.c: 170: myMain.Count1 = 0;
  1714  01D6  01A5               	clrf	_myMain+5
  1715  01D7  01A6               	clrf	_myMain+6
  1716                           
  1717                           ;Main_B1.c: 183: if (myMain.Flag) {
  1718  01D8  1DA0               	btfss	_myMain,3
  1719  01D9  29DC               	goto	l334
  1720                           
  1721                           ;Main_B1.c: 184: myMain.Flag = 0;
  1722  01DA  11A0               	bcf	_myMain,3
  1723                           
  1724                           ;Main_B1.c: 193: } else {
  1725  01DB  0008               	return
  1726  01DC                     l334:	
  1727                           
  1728                           ;Main_B1.c: 194: myMain.Flag = 1;
  1729  01DC  15A0               	bsf	_myMain,3
  1730  01DD  0008               	return
  1731  01DE                     __end_of_my_Main:	
  1732                           
  1733                           	psect	text2
  1734  00E4                     __ptext2:	
  1735 ;; *************** function _setBuz *****************
  1736 ;; Defined at:
  1737 ;;		line 22 in file "../src/Buzzer_B1.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  count           1    wreg     unsigned char 
  1740 ;;  time            2    4[BANK0 ] int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  count           1    7[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1752 ;;      Params:         0       2       0       0
  1753 ;;      Locals:         0       1       0       0
  1754 ;;      Temps:          0       1       0       0
  1755 ;;      Totals:         0       4       0       0
  1756 ;;Total ram usage:        4 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    3
  1759 ;; This function calls:
  1760 ;;		___awdiv
  1761 ;; This function is called by:
  1762 ;;		_my_Main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _setBuz
  1768  00E4                     _setBuz:	
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
  1772                           ;setBuz@count stored from wreg
  1773  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1774  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1775  00E6  00D9               	movwf	setBuz@count
  1776                           
  1777                           ;Buzzer_B1.c: 23: time /= 10;
  1778  00E7  300A               	movlw	10
  1779  00E8  00F4               	movwf	___awdiv@divisor
  1780  00E9  3000               	movlw	0
  1781  00EA  00F5               	movwf	___awdiv@divisor+1
  1782  00EB  0857               	movf	setBuz@time+1,w
  1783  00EC  01F7               	clrf	___awdiv@dividend+1
  1784  00ED  07F7               	addwf	___awdiv@dividend+1,f
  1785  00EE  0856               	movf	setBuz@time,w
  1786  00EF  01F6               	clrf	___awdiv@dividend
  1787  00F0  07F6               	addwf	___awdiv@dividend,f
  1788  00F1  118A  2087  118A   	fcall	___awdiv
  1789  00F4  0875               	movf	?___awdiv+1,w
  1790  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1791  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1792  00F7  01D7               	clrf	setBuz@time+1
  1793  00F8  07D7               	addwf	setBuz@time+1,f
  1794  00F9  0874               	movf	?___awdiv,w
  1795  00FA  01D6               	clrf	setBuz@time
  1796  00FB  07D6               	addwf	setBuz@time,f
  1797                           
  1798                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
  1799  00FC  1C32               	btfss	_Buz1,0
  1800  00FD  0008               	return
  1801                           
  1802                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
  1803  00FE  18B2               	btfsc	_Buz1,1
  1804  00FF  290F               	goto	l26
  1805                           
  1806                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
  1807  0100  14B2               	bsf	_Buz1,1
  1808                           
  1809                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
  1810  0101  01B3               	clrf	_Buz1+1
  1811  0102  01B4               	clrf	_Buz1+2
  1812                           
  1813                           ;Buzzer_B1.c: 28: Buz1.Count = count;
  1814  0103  0859               	movf	setBuz@count,w
  1815  0104  00D8               	movwf	??_setBuz
  1816  0105  0858               	movf	??_setBuz,w
  1817  0106  00B5               	movwf	_Buz1+3
  1818                           
  1819                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
  1820  0107  0857               	movf	setBuz@time+1,w
  1821  0108  01B9               	clrf	_Buz1+7
  1822  0109  07B9               	addwf	_Buz1+7,f
  1823  010A  0856               	movf	setBuz@time,w
  1824  010B  01B8               	clrf	_Buz1+6
  1825  010C  07B8               	addwf	_Buz1+6,f
  1826                           
  1827                           ;Buzzer_B1.c: 30: RB1 = 1;
  1828  010D  1486               	bsf	6,1	;volatile
  1829                           
  1830                           ;Buzzer_B1.c: 31: } else {
  1831  010E  0008               	return
  1832  010F                     l26:	
  1833                           
  1834                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
  1835  010F  19B2               	btfsc	_Buz1,3
  1836  0110  291D               	goto	l28
  1837                           
  1838                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
  1839  0111  15B2               	bsf	_Buz1,3
  1840                           
  1841                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
  1842  0112  0859               	movf	setBuz@count,w
  1843  0113  00D8               	movwf	??_setBuz
  1844  0114  0858               	movf	??_setBuz,w
  1845  0115  00B6               	movwf	_Buz1+4
  1846                           
  1847                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
  1848  0116  0857               	movf	setBuz@time+1,w
  1849  0117  01BB               	clrf	_Buz1+9
  1850  0118  07BB               	addwf	_Buz1+9,f
  1851  0119  0856               	movf	setBuz@time,w
  1852  011A  01BA               	clrf	_Buz1+8
  1853  011B  07BA               	addwf	_Buz1+8,f
  1854                           
  1855                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
  1856  011C  0008               	return
  1857  011D                     l28:	
  1858  011D  1A32               	btfsc	_Buz1,4
  1859  011E  0008               	return
  1860                           
  1861                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
  1862  011F  1632               	bsf	_Buz1,4
  1863                           
  1864                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
  1865  0120  0859               	movf	setBuz@count,w
  1866  0121  00D8               	movwf	??_setBuz
  1867  0122  0858               	movf	??_setBuz,w
  1868  0123  00B7               	movwf	_Buz1+5
  1869                           
  1870                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
  1871  0124  0857               	movf	setBuz@time+1,w
  1872  0125  01BD               	clrf	_Buz1+11
  1873  0126  07BD               	addwf	_Buz1+11,f
  1874  0127  0856               	movf	setBuz@time,w
  1875  0128  01BC               	clrf	_Buz1+10
  1876  0129  07BC               	addwf	_Buz1+10,f
  1877  012A  0008               	return
  1878  012B                     __end_of_setBuz:	
  1879                           
  1880                           	psect	text3
  1881  0087                     __ptext3:	
  1882 ;; *************** function ___awdiv *****************
  1883 ;; Defined at:
  1884 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  divisor         2    4[COMMON] int 
  1887 ;;  dividend        2    6[COMMON] int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  quotient        2    2[BANK0 ] int 
  1890 ;;  sign            1    1[BANK0 ] unsigned char 
  1891 ;;  counter         1    0[BANK0 ] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  2    4[COMMON] int 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1901 ;;      Params:         4       0       0       0
  1902 ;;      Locals:         0       4       0       0
  1903 ;;      Temps:          1       0       0       0
  1904 ;;      Totals:         5       4       0       0
  1905 ;;Total ram usage:        9 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    2
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_setBuz
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function ___awdiv
  1917  0087                     ___awdiv:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1921  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0089  01D3               	clrf	___awdiv@sign
  1924  008A  1FF5               	btfss	___awdiv@divisor+1,7
  1925  008B  2893               	goto	l1238
  1926  008C  09F4               	comf	___awdiv@divisor,f
  1927  008D  09F5               	comf	___awdiv@divisor+1,f
  1928  008E  0AF4               	incf	___awdiv@divisor,f
  1929  008F  1903               	skipnz
  1930  0090  0AF5               	incf	___awdiv@divisor+1,f
  1931  0091  01D3               	clrf	___awdiv@sign
  1932  0092  0AD3               	incf	___awdiv@sign,f
  1933  0093                     l1238:	
  1934  0093  1FF7               	btfss	___awdiv@dividend+1,7
  1935  0094  289E               	goto	l1244
  1936  0095  09F6               	comf	___awdiv@dividend,f
  1937  0096  09F7               	comf	___awdiv@dividend+1,f
  1938  0097  0AF6               	incf	___awdiv@dividend,f
  1939  0098  1903               	skipnz
  1940  0099  0AF7               	incf	___awdiv@dividend+1,f
  1941  009A  3001               	movlw	1
  1942  009B  00F8               	movwf	??___awdiv
  1943  009C  0878               	movf	??___awdiv,w
  1944  009D  06D3               	xorwf	___awdiv@sign,f
  1945  009E                     l1244:	
  1946  009E  01D4               	clrf	___awdiv@quotient
  1947  009F  01D5               	clrf	___awdiv@quotient+1
  1948  00A0  0875               	movf	___awdiv@divisor+1,w
  1949  00A1  0474               	iorwf	___awdiv@divisor,w
  1950  00A2  1903               	skipnz
  1951  00A3  28D5               	goto	l1266
  1952  00A4  01D2               	clrf	___awdiv@counter
  1953  00A5  0AD2               	incf	___awdiv@counter,f
  1954  00A6                     l1254:	
  1955  00A6  1BF5               	btfsc	___awdiv@divisor+1,7
  1956  00A7  28B4               	goto	l1256
  1957  00A8  3001               	movlw	1
  1958  00A9                     u745:	
  1959  00A9  1003               	clrc
  1960  00AA  0DF4               	rlf	___awdiv@divisor,f
  1961  00AB  0DF5               	rlf	___awdiv@divisor+1,f
  1962  00AC  3EFF               	addlw	-1
  1963  00AD  1D03               	skipz
  1964  00AE  28A9               	goto	u745
  1965  00AF  3001               	movlw	1
  1966  00B0  00F8               	movwf	??___awdiv
  1967  00B1  0878               	movf	??___awdiv,w
  1968  00B2  07D2               	addwf	___awdiv@counter,f
  1969  00B3  28A6               	goto	l1254
  1970  00B4                     l1256:	
  1971  00B4  3001               	movlw	1
  1972  00B5                     u765:	
  1973  00B5  1003               	clrc
  1974  00B6  0DD4               	rlf	___awdiv@quotient,f
  1975  00B7  0DD5               	rlf	___awdiv@quotient+1,f
  1976  00B8  3EFF               	addlw	-1
  1977  00B9  1D03               	skipz
  1978  00BA  28B5               	goto	u765
  1979  00BB  0875               	movf	___awdiv@divisor+1,w
  1980  00BC  0277               	subwf	___awdiv@dividend+1,w
  1981  00BD  1D03               	skipz
  1982  00BE  28C1               	goto	u775
  1983  00BF  0874               	movf	___awdiv@divisor,w
  1984  00C0  0276               	subwf	___awdiv@dividend,w
  1985  00C1                     u775:	
  1986  00C1  1C03               	skipc
  1987  00C2  28CA               	goto	l1262
  1988  00C3  0874               	movf	___awdiv@divisor,w
  1989  00C4  02F6               	subwf	___awdiv@dividend,f
  1990  00C5  0875               	movf	___awdiv@divisor+1,w
  1991  00C6  1C03               	skipc
  1992  00C7  03F7               	decf	___awdiv@dividend+1,f
  1993  00C8  02F7               	subwf	___awdiv@dividend+1,f
  1994  00C9  1454               	bsf	___awdiv@quotient,0
  1995  00CA                     l1262:	
  1996  00CA  3001               	movlw	1
  1997  00CB                     u785:	
  1998  00CB  1003               	clrc
  1999  00CC  0CF5               	rrf	___awdiv@divisor+1,f
  2000  00CD  0CF4               	rrf	___awdiv@divisor,f
  2001  00CE  3EFF               	addlw	-1
  2002  00CF  1D03               	skipz
  2003  00D0  28CB               	goto	u785
  2004  00D1  3001               	movlw	1
  2005  00D2  02D2               	subwf	___awdiv@counter,f
  2006  00D3  1D03               	btfss	3,2
  2007  00D4  28B4               	goto	l1256
  2008  00D5                     l1266:	
  2009  00D5  0853               	movf	___awdiv@sign,w
  2010  00D6  1903               	btfsc	3,2
  2011  00D7  28DD               	goto	l1270
  2012  00D8  09D4               	comf	___awdiv@quotient,f
  2013  00D9  09D5               	comf	___awdiv@quotient+1,f
  2014  00DA  0AD4               	incf	___awdiv@quotient,f
  2015  00DB  1903               	skipnz
  2016  00DC  0AD5               	incf	___awdiv@quotient+1,f
  2017  00DD                     l1270:	
  2018  00DD  0855               	movf	___awdiv@quotient+1,w
  2019  00DE  01F5               	clrf	?___awdiv+1
  2020  00DF  07F5               	addwf	?___awdiv+1,f
  2021  00E0  0854               	movf	___awdiv@quotient,w
  2022  00E1  01F4               	clrf	?___awdiv
  2023  00E2  07F4               	addwf	?___awdiv,f
  2024  00E3  0008               	return
  2025  00E4                     __end_of___awdiv:	
  2026                           
  2027                           	psect	text4
  2028  02AB                     __ptext4:	
  2029 ;; *************** function _myMain_Initialization *****************
  2030 ;; Defined at:
  2031 ;;		line 116 in file "../src/Main_B1.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		None
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2045 ;;      Params:         0       0       0       0
  2046 ;;      Locals:         0       0       0       0
  2047 ;;      Temps:          0       0       0       0
  2048 ;;      Totals:         0       0       0       0
  2049 ;;Total ram usage:        0 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    2
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _myMain_Initialization
  2061  02AB                     _myMain_Initialization:	
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _myMain_Initialization: []
  2065  02AB  0008               	return
  2066  02AC                     __end_of_myMain_Initialization:	
  2067                           
  2068                           	psect	text5
  2069  0265                     __ptext5:	
  2070 ;; *************** function _Mcu_Initialization *****************
  2071 ;; Defined at:
  2072 ;;		line 30 in file "../src/MCU_B1.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2086 ;;      Params:         0       0       0       0
  2087 ;;      Locals:         0       0       0       0
  2088 ;;      Temps:          0       0       0       0
  2089 ;;      Totals:         0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		_ADC_Set
  2095 ;;		_Fosc_Set
  2096 ;;		_IO_Set
  2097 ;;		_TMR0_Set
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _Mcu_Initialization
  2105  0265                     _Mcu_Initialization:	
  2106                           
  2107                           ;MCU_B1.c: 32: Fosc_Set();
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2111  0265  118A  22A2  118A   	fcall	_Fosc_Set
  2112                           
  2113                           ;MCU_B1.c: 34: IO_Set();
  2114  0268  118A  2232  118A   	fcall	_IO_Set
  2115                           
  2116                           ;MCU_B1.c: 36: TMR0_Set();
  2117  026B  118A  2289  118A   	fcall	_TMR0_Set
  2118                           
  2119                           ;MCU_B1.c: 38: ;;
  2120                           ;MCU_B1.c: 40: ADC_Set();
  2121  026E  118A  229B         	fcall	_ADC_Set
  2122  0270  0008               	return
  2123  0271                     __end_of_Mcu_Initialization:	
  2124                           
  2125                           	psect	text6
  2126  0289                     __ptext6:	
  2127 ;; *************** function _TMR0_Set *****************
  2128 ;; Defined at:
  2129 ;;		line 126 in file "../src/MCU_B1.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;		None               void
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2143 ;;      Params:         0       0       0       0
  2144 ;;      Locals:         0       0       0       0
  2145 ;;      Temps:          0       0       0       0
  2146 ;;      Totals:         0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_Mcu_Initialization
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _TMR0_Set
  2159  0289                     _TMR0_Set:	
  2160                           
  2161                           ;MCU_B1.c: 128: OPTION_REG = 0x00;
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _TMR0_Set: [wreg+status,2]
  2165  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2166  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2167  028B  0181               	clrf	1	;volatile
  2168                           
  2169                           ;MCU_B1.c: 129: TMR0 = (256-190);
  2170  028C  3042               	movlw	66
  2171  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2172  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2173  028F  0081               	movwf	1	;volatile
  2174                           
  2175                           ;MCU_B1.c: 130: TMR0IE = 1;
  2176  0290  168B               	bsf	11,5	;volatile
  2177                           
  2178                           ;MCU_B1.c: 131: GIE = 1;
  2179  0291  178B               	bsf	11,7	;volatile
  2180  0292  0008               	return
  2181  0293                     __end_of_TMR0_Set:	
  2182                           
  2183                           	psect	text7
  2184  0232                     __ptext7:	
  2185 ;; *************** function _IO_Set *****************
  2186 ;; Defined at:
  2187 ;;		line 60 in file "../src/MCU_B1.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;		None               void
  2194 ;; Registers used:
  2195 ;;		wreg, status,2
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2201 ;;      Params:         0       0       0       0
  2202 ;;      Locals:         0       0       0       0
  2203 ;;      Temps:          0       0       0       0
  2204 ;;      Totals:         0       0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    2
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_Mcu_Initialization
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _IO_Set
  2217  0232                     _IO_Set:	
  2218                           
  2219                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _IO_Set: [wreg+status,2]
  2223  0232  302F               	movlw	47
  2224  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0235  0085               	movwf	5	;volatile
  2227                           
  2228                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  2229  0236  3001               	movlw	1
  2230  0237  0086               	movwf	6	;volatile
  2231                           
  2232                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  2233  0238  0187               	clrf	7	;volatile
  2234                           
  2235                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  2236  0239  3007               	movlw	7
  2237  023A  1683               	bsf	3,5	;RP0=1, select bank3
  2238  023B  1703               	bsf	3,6	;RP1=1, select bank3
  2239  023C  0085               	movwf	5	;volatile
  2240                           
  2241                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  2242  023D  3001               	movlw	1
  2243  023E  0086               	movwf	6	;volatile
  2244                           
  2245                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  2246  023F  30AF               	movlw	175
  2247  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0242  0085               	movwf	5	;volatile
  2250                           
  2251                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  2252  0243  3001               	movlw	1
  2253  0244  0086               	movwf	6	;volatile
  2254                           
  2255                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  2256  0245  0187               	clrf	7	;volatile
  2257  0246  0008               	return
  2258  0247                     __end_of_IO_Set:	
  2259                           
  2260                           	psect	text8
  2261  02A2                     __ptext8:	
  2262 ;; *************** function _Fosc_Set *****************
  2263 ;; Defined at:
  2264 ;;		line 56 in file "../src/MCU_B1.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;		None               void
  2271 ;; Registers used:
  2272 ;;		wreg
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2278 ;;      Params:         0       0       0       0
  2279 ;;      Locals:         0       0       0       0
  2280 ;;      Temps:          0       0       0       0
  2281 ;;      Totals:         0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_Mcu_Initialization
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _Fosc_Set
  2294  02A2                     _Fosc_Set:	
  2295                           
  2296                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _Fosc_Set: [wreg]
  2300  02A2  303C               	movlw	60
  2301  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2302  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2303  02A5  0090               	movwf	16	;volatile
  2304  02A6  0008               	return
  2305  02A7                     __end_of_Fosc_Set:	
  2306                           
  2307                           	psect	text9
  2308  029B                     __ptext9:	
  2309 ;; *************** function _ADC_Set *****************
  2310 ;; Defined at:
  2311 ;;		line 314 in file "../src/MCU_B1.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2325 ;;      Params:         0       0       0       0
  2326 ;;      Locals:         0       0       0       0
  2327 ;;      Temps:          0       0       0       0
  2328 ;;      Totals:         0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    2
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_Mcu_Initialization
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _ADC_Set
  2341  029B                     _ADC_Set:	
  2342                           
  2343                           ;MCU_B1.c: 315: ADCON1 = 0x72;
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _ADC_Set: [wreg]
  2347  029B  3072               	movlw	114
  2348  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2349  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2350  029E  009F               	movwf	31	;volatile
  2351                           
  2352                           ;MCU_B1.c: 316: FVRCON = 0xc1;
  2353  029F  30C1               	movlw	193
  2354  02A0  009D               	movwf	29	;volatile
  2355  02A1  0008               	return
  2356  02A2                     __end_of_ADC_Set:	
  2357                           
  2358                           	psect	text10
  2359  0271                     __ptext10:	
  2360 ;; *************** function _LED_Main *****************
  2361 ;; Defined at:
  2362 ;;		line 47 in file "../src/LED_B1.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;		None               void
  2369 ;; Registers used:
  2370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2376 ;;      Params:         0       0       0       0
  2377 ;;      Locals:         0       0       0       0
  2378 ;;      Temps:          0       0       0       0
  2379 ;;      Totals:         0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    4
  2383 ;; This function calls:
  2384 ;;		_setLED_Main
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _LED_Main
  2392  0271                     _LED_Main:	
  2393                           
  2394                           ;LED_B1.c: 49: setLED_Main(1);
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2398  0271  3001               	movlw	1
  2399  0272  118A  216F  118A   	fcall	_setLED_Main
  2400                           
  2401                           ;LED_B1.c: 52: setLED_Main(2);
  2402  0275  3002               	movlw	2
  2403  0276  118A  216F  118A   	fcall	_setLED_Main
  2404                           
  2405                           ;LED_B1.c: 58: setLED_Main(99);
  2406  0279  3063               	movlw	99
  2407  027A  118A  216F         	fcall	_setLED_Main
  2408  027C  0008               	return
  2409  027D                     __end_of_LED_Main:	
  2410                           
  2411                           	psect	text11
  2412  016F                     __ptext11:	
  2413 ;; *************** function _setLED_Main *****************
  2414 ;; Defined at:
  2415 ;;		line 192 in file "../src/LED_B1.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  led             1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  led             1    8[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2429 ;;      Params:         0       0       0       0
  2430 ;;      Locals:         1       0       0       0
  2431 ;;      Temps:          2       0       0       0
  2432 ;;      Totals:         3       0       0       0
  2433 ;;Total ram usage:        3 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    3
  2436 ;; This function calls:
  2437 ;;		_LedPointSelect
  2438 ;; This function is called by:
  2439 ;;		_LED_Main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _setLED_Main
  2445  016F                     _setLED_Main:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2449                           ;setLED_Main@led stored from wreg
  2450  016F  00F8               	movwf	setLED_Main@led
  2451                           
  2452                           ;LED_B1.c: 193: LedPointSelect(led);
  2453  0170  0878               	movf	setLED_Main@led,w
  2454  0171  118A  21FE  118A   	fcall	_LedPointSelect
  2455                           
  2456                           ;LED_B1.c: 194: if (LED->GO == 1) {
  2457  0174  0879               	movf	_LED,w
  2458  0175  0084               	movwf	4
  2459  0176  1383               	bcf	3,7	;select IRP bank0
  2460  0177  1C80               	btfss	0,1
  2461  0178  0008               	return
  2462                           
  2463                           ;LED_B1.c: 195: LED->Time++;
  2464  0179  0A79               	incf	_LED,w
  2465  017A  0084               	movwf	4
  2466  017B  3001               	movlw	1
  2467  017C  0780               	addwf	0,f
  2468  017D  0A84               	incf	4,f
  2469  017E  1803               	skipnc
  2470  017F  0A80               	incf	0,f
  2471                           
  2472                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
  2473  0180  0A79               	incf	_LED,w
  2474  0181  0084               	movwf	4
  2475  0182  0800               	movf	0,w
  2476  0183  00F6               	movwf	??_setLED_Main
  2477  0184  0A84               	incf	4,f
  2478  0185  0800               	movf	0,w
  2479  0186  00F7               	movwf	??_setLED_Main+1
  2480  0187  3000               	movlw	0
  2481  0188  0277               	subwf	??_setLED_Main+1,w
  2482  0189  3032               	movlw	50
  2483  018A  1903               	skipnz
  2484  018B  0276               	subwf	??_setLED_Main,w
  2485  018C  1C03               	skipc
  2486  018D  0008               	return
  2487                           
  2488                           ;LED_B1.c: 197: LED->Time = 0;
  2489  018E  0A79               	incf	_LED,w
  2490  018F  0084               	movwf	4
  2491  0190  0180               	clrf	0
  2492  0191  0A84               	incf	4,f
  2493  0192  0180               	clrf	0
  2494                           
  2495                           ;LED_B1.c: 199: if (led == 1) {
  2496  0193  0878               	movf	setLED_Main@led,w
  2497  0194  3A01               	xorlw	1
  2498  0195  1D03               	skipz
  2499  0196  299C               	goto	l1322
  2500                           
  2501                           ;LED_B1.c: 200: RB4 = RB4 == 1 ? 0 : 1;
  2502  0197  3010               	movlw	16
  2503  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2505  019A  0686               	xorwf	6,f
  2506                           
  2507                           ;LED_B1.c: 201: }
  2508  019B  0008               	return
  2509  019C                     l1322:	
  2510                           
  2511                           ;LED_B1.c: 204: else if (led == 2) {
  2512  019C  0878               	movf	setLED_Main@led,w
  2513  019D  3A02               	xorlw	2
  2514  019E  1D03               	skipz
  2515  019F  29A5               	goto	l1326
  2516                           
  2517                           ;LED_B1.c: 205: RB5 = RB5 == 1 ? 0 : 1;
  2518  01A0  3020               	movlw	32
  2519  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2520  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2521  01A3  0686               	xorwf	6,f
  2522                           
  2523                           ;LED_B1.c: 206: }
  2524  01A4  0008               	return
  2525  01A5                     l1326:	
  2526                           
  2527                           ;LED_B1.c: 214: else if (led == 99) {
  2528  01A5  0878               	movf	setLED_Main@led,w
  2529  01A6  3A63               	xorlw	99
  2530  01A7  1D03               	skipz
  2531  01A8  0008               	return
  2532                           
  2533                           ;LED_B1.c: 215: RB3 = RB3 == 1 ? 0 : 1;
  2534  01A9  3008               	movlw	8
  2535  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2536  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2537  01AC  0686               	xorwf	6,f
  2538  01AD  0008               	return
  2539  01AE                     __end_of_setLED_Main:	
  2540                           
  2541                           	psect	text12
  2542  027D                     __ptext12:	
  2543 ;; *************** function _LED_Initialization *****************
  2544 ;; Defined at:
  2545 ;;		line 31 in file "../src/LED_B1.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;		None               void
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2559 ;;      Params:         0       0       0       0
  2560 ;;      Locals:         0       0       0       0
  2561 ;;      Temps:          0       0       0       0
  2562 ;;      Totals:         0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    5
  2566 ;; This function calls:
  2567 ;;		_setLED_Initialization
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _LED_Initialization
  2575  027D                     _LED_Initialization:	
  2576                           
  2577                           ;LED_B1.c: 33: setLED_Initialization(1);
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2581  027D  3001               	movlw	1
  2582  027E  118A  2257  118A   	fcall	_setLED_Initialization
  2583                           
  2584                           ;LED_B1.c: 36: setLED_Initialization(2);
  2585  0281  3002               	movlw	2
  2586  0282  118A  2257  118A   	fcall	_setLED_Initialization
  2587                           
  2588                           ;LED_B1.c: 42: setLED_Initialization(99);
  2589  0285  3063               	movlw	99
  2590  0286  118A  2257         	fcall	_setLED_Initialization
  2591  0288  0008               	return
  2592  0289                     __end_of_LED_Initialization:	
  2593                           
  2594                           	psect	text13
  2595  0257                     __ptext13:	
  2596 ;; *************** function _setLED_Initialization *****************
  2597 ;; Defined at:
  2598 ;;		line 63 in file "../src/LED_B1.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  led             1    wreg     unsigned char 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  led             1    8[COMMON] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;		None               void
  2605 ;; Registers used:
  2606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2612 ;;      Params:         0       0       0       0
  2613 ;;      Locals:         1       0       0       0
  2614 ;;      Temps:          0       0       0       0
  2615 ;;      Totals:         1       0       0       0
  2616 ;;Total ram usage:        1 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    4
  2619 ;; This function calls:
  2620 ;;		_LedPointSelect
  2621 ;;		_setLED
  2622 ;; This function is called by:
  2623 ;;		_LED_Initialization
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _setLED_Initialization
  2629  0257                     _setLED_Initialization:	
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2633                           ;setLED_Initialization@led stored from wreg
  2634  0257  00F8               	movwf	setLED_Initialization@led
  2635                           
  2636                           ;LED_B1.c: 64: LedPointSelect(led);
  2637  0258  0878               	movf	setLED_Initialization@led,w
  2638  0259  118A  21FE  118A   	fcall	_LedPointSelect
  2639                           
  2640                           ;LED_B1.c: 65: LED->Enable = 1;
  2641  025C  0879               	movf	_LED,w
  2642  025D  0084               	movwf	4
  2643  025E  1383               	bcf	3,7	;select IRP bank0
  2644  025F  1400               	bsf	0,0
  2645                           
  2646                           ;LED_B1.c: 66: setLED(led, 0);
  2647  0260  01F6               	clrf	setLED@command
  2648  0261  0878               	movf	setLED_Initialization@led,w
  2649  0262  118A  201D         	fcall	_setLED
  2650  0264  0008               	return
  2651  0265                     __end_of_setLED_Initialization:	
  2652                           
  2653                           	psect	text14
  2654  001D                     __ptext14:	
  2655 ;; *************** function _setLED *****************
  2656 ;; Defined at:
  2657 ;;		line 70 in file "../src/LED_B1.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  led             1    wreg     unsigned char 
  2660 ;;  command         1    6[COMMON] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  led             1    7[COMMON] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2672 ;;      Params:         1       0       0       0
  2673 ;;      Locals:         1       0       0       0
  2674 ;;      Temps:          0       0       0       0
  2675 ;;      Totals:         2       0       0       0
  2676 ;;Total ram usage:        2 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_LedPointSelect
  2681 ;; This function is called by:
  2682 ;;		_setLED_Initialization
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _setLED
  2688  001D                     _setLED:	
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2692                           ;setLED@led stored from wreg
  2693  001D  00F7               	movwf	setLED@led
  2694                           
  2695                           ;LED_B1.c: 71: LedPointSelect(led);
  2696  001E  0877               	movf	setLED@led,w
  2697  001F  118A  21FE  118A   	fcall	_LedPointSelect
  2698                           
  2699                           ;LED_B1.c: 72: if (command == 0) {
  2700  0022  08F6               	movf	setLED@command,f
  2701  0023  1D03               	skipz
  2702  0024  283D               	goto	l1194
  2703                           
  2704                           ;LED_B1.c: 74: if (led == 1) {
  2705  0025  0877               	movf	setLED@led,w
  2706  0026  3A01               	xorlw	1
  2707  0027  1D03               	skipz
  2708  0028  282D               	goto	l1186
  2709                           
  2710                           ;LED_B1.c: 78: RB4 = 1;
  2711  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2712  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2713  002B  1606               	bsf	6,4	;volatile
  2714                           
  2715                           ;LED_B1.c: 80: }
  2716  002C  0008               	return
  2717  002D                     l1186:	
  2718                           
  2719                           ;LED_B1.c: 83: else if (led == 2) {
  2720  002D  0877               	movf	setLED@led,w
  2721  002E  3A02               	xorlw	2
  2722  002F  1D03               	skipz
  2723  0030  2835               	goto	l1190
  2724                           
  2725                           ;LED_B1.c: 87: RB5 = 1;
  2726  0031  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0032  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0033  1686               	bsf	6,5	;volatile
  2729                           
  2730                           ;LED_B1.c: 89: }
  2731  0034  0008               	return
  2732  0035                     l1190:	
  2733                           
  2734                           ;LED_B1.c: 101: else if (led == 99) {
  2735  0035  0877               	movf	setLED@led,w
  2736  0036  3A63               	xorlw	99
  2737  0037  1D03               	skipz
  2738  0038  0008               	return
  2739                           
  2740                           ;LED_B1.c: 105: RB3 = 1;
  2741  0039  1283               	bcf	3,5	;RP0=0, select bank0
  2742  003A  1303               	bcf	3,6	;RP1=0, select bank0
  2743  003B  1586               	bsf	6,3	;volatile
  2744                           
  2745                           ;LED_B1.c: 107: }
  2746                           ;LED_B1.c: 109: } else if (command == 1) {
  2747  003C  0008               	return
  2748  003D                     l1194:	
  2749  003D  0876               	movf	setLED@command,w
  2750  003E  3A01               	xorlw	1
  2751  003F  1D03               	skipz
  2752  0040  2859               	goto	l1208
  2753                           
  2754                           ;LED_B1.c: 111: if (led == 1) {
  2755  0041  0877               	movf	setLED@led,w
  2756  0042  3A01               	xorlw	1
  2757  0043  1D03               	skipz
  2758  0044  2849               	goto	l1200
  2759                           
  2760                           ;LED_B1.c: 115: RB4 = 0;
  2761  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0047  1206               	bcf	6,4	;volatile
  2764                           
  2765                           ;LED_B1.c: 117: }
  2766  0048  0008               	return
  2767  0049                     l1200:	
  2768                           
  2769                           ;LED_B1.c: 120: else if (led == 2) {
  2770  0049  0877               	movf	setLED@led,w
  2771  004A  3A02               	xorlw	2
  2772  004B  1D03               	skipz
  2773  004C  2851               	goto	l1204
  2774                           
  2775                           ;LED_B1.c: 124: RB5 = 0;
  2776  004D  1283               	bcf	3,5	;RP0=0, select bank0
  2777  004E  1303               	bcf	3,6	;RP1=0, select bank0
  2778  004F  1286               	bcf	6,5	;volatile
  2779                           
  2780                           ;LED_B1.c: 126: }
  2781  0050  0008               	return
  2782  0051                     l1204:	
  2783                           
  2784                           ;LED_B1.c: 138: else if (led == 99) {
  2785  0051  0877               	movf	setLED@led,w
  2786  0052  3A63               	xorlw	99
  2787  0053  1D03               	skipz
  2788  0054  0008               	return
  2789                           
  2790                           ;LED_B1.c: 142: RB3 = 0;
  2791  0055  1283               	bcf	3,5	;RP0=0, select bank0
  2792  0056  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0057  1186               	bcf	6,3	;volatile
  2794                           
  2795                           ;LED_B1.c: 144: }
  2796                           ;LED_B1.c: 146: } else if (command == 10) {
  2797  0058  0008               	return
  2798  0059                     l1208:	
  2799  0059  0876               	movf	setLED@command,w
  2800  005A  3A0A               	xorlw	10
  2801  005B  1D03               	skipz
  2802  005C  287E               	goto	l1226
  2803                           
  2804                           ;LED_B1.c: 147: LED->GO = 0;
  2805  005D  0879               	movf	_LED,w
  2806  005E  0084               	movwf	4
  2807  005F  1383               	bcf	3,7	;select IRP bank0
  2808  0060  1080               	bcf	0,1
  2809                           
  2810                           ;LED_B1.c: 148: LED->Time = 0;
  2811  0061  0A79               	incf	_LED,w
  2812  0062  0084               	movwf	4
  2813  0063  0180               	clrf	0
  2814  0064  0A84               	incf	4,f
  2815  0065  0180               	clrf	0
  2816                           
  2817                           ;LED_B1.c: 150: if (led == 1) {
  2818  0066  0877               	movf	setLED@led,w
  2819  0067  3A01               	xorlw	1
  2820  0068  1D03               	skipz
  2821  0069  286E               	goto	l1218
  2822                           
  2823                           ;LED_B1.c: 154: RB4 = 1;
  2824  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2825  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2826  006C  1606               	bsf	6,4	;volatile
  2827                           
  2828                           ;LED_B1.c: 156: }
  2829  006D  0008               	return
  2830  006E                     l1218:	
  2831                           
  2832                           ;LED_B1.c: 159: else if (led == 2) {
  2833  006E  0877               	movf	setLED@led,w
  2834  006F  3A02               	xorlw	2
  2835  0070  1D03               	skipz
  2836  0071  2876               	goto	l1222
  2837                           
  2838                           ;LED_B1.c: 163: RB5 = 1;
  2839  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0074  1686               	bsf	6,5	;volatile
  2842                           
  2843                           ;LED_B1.c: 165: }
  2844  0075  0008               	return
  2845  0076                     l1222:	
  2846                           
  2847                           ;LED_B1.c: 177: else if (led == 99) {
  2848  0076  0877               	movf	setLED@led,w
  2849  0077  3A63               	xorlw	99
  2850  0078  1D03               	skipz
  2851  0079  0008               	return
  2852                           
  2853                           ;LED_B1.c: 181: RB3 = 1;
  2854  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2855  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2856  007C  1586               	bsf	6,3	;volatile
  2857                           
  2858                           ;LED_B1.c: 183: }
  2859                           ;LED_B1.c: 185: } else if (command == 11) {
  2860  007D  0008               	return
  2861  007E                     l1226:	
  2862  007E  0876               	movf	setLED@command,w
  2863  007F  3A0B               	xorlw	11
  2864  0080  1D03               	skipz
  2865  0081  0008               	return
  2866                           
  2867                           ;LED_B1.c: 186: LED->GO = 1;
  2868  0082  0879               	movf	_LED,w
  2869  0083  0084               	movwf	4
  2870  0084  1383               	bcf	3,7	;select IRP bank0
  2871  0085  1480               	bsf	0,1
  2872  0086  0008               	return
  2873  0087                     __end_of_setLED:	
  2874                           
  2875                           	psect	text15
  2876  01FE                     __ptext15:	
  2877 ;; *************** function _LedPointSelect *****************
  2878 ;; Defined at:
  2879 ;;		line 7 in file "../src/LED_B1.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  led             1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  led             1    5[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2893 ;;      Params:         0       0       0       0
  2894 ;;      Locals:         1       0       0       0
  2895 ;;      Temps:          1       0       0       0
  2896 ;;      Totals:         2       0       0       0
  2897 ;;Total ram usage:        2 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    2
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_setLED_Initialization
  2904 ;;		_setLED
  2905 ;;		_setLED_Main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _LedPointSelect
  2911  01FE                     _LedPointSelect:	
  2912                           
  2913                           ;incstack = 0
  2914                           ; Regs used in _LedPointSelect: [wreg]
  2915                           ;LedPointSelect@led stored from wreg
  2916  01FE  00F5               	movwf	LedPointSelect@led
  2917                           
  2918                           ;LED_B1.c: 9: if (led == 1) {
  2919  01FF  0875               	movf	LedPointSelect@led,w
  2920  0200  3A01               	xorlw	1
  2921  0201  1D03               	skipz
  2922  0202  2A08               	goto	l1170
  2923                           
  2924                           ;LED_B1.c: 10: LED = &VarLED1;
  2925  0203  304A               	movlw	_VarLED1& (0+255)
  2926  0204  00F4               	movwf	??_LedPointSelect
  2927  0205  0874               	movf	??_LedPointSelect,w
  2928  0206  00F9               	movwf	_LED
  2929                           
  2930                           ;LED_B1.c: 11: }
  2931  0207  0008               	return
  2932  0208                     l1170:	
  2933                           
  2934                           ;LED_B1.c: 14: else if (led == 2) {
  2935  0208  0875               	movf	LedPointSelect@led,w
  2936  0209  3A02               	xorlw	2
  2937  020A  1D03               	skipz
  2938  020B  2A11               	goto	l1174
  2939                           
  2940                           ;LED_B1.c: 15: LED = &VarLED2;
  2941  020C  304E               	movlw	_VarLED2& (0+255)
  2942  020D  00F4               	movwf	??_LedPointSelect
  2943  020E  0874               	movf	??_LedPointSelect,w
  2944  020F  00F9               	movwf	_LED
  2945                           
  2946                           ;LED_B1.c: 16: }
  2947  0210  0008               	return
  2948  0211                     l1174:	
  2949                           
  2950                           ;LED_B1.c: 24: else if (led == 99) {
  2951  0211  0875               	movf	LedPointSelect@led,w
  2952  0212  3A63               	xorlw	99
  2953  0213  1D03               	skipz
  2954  0214  0008               	return
  2955                           
  2956                           ;LED_B1.c: 25: LED = &VarErrLED;
  2957  0215  3046               	movlw	_VarErrLED& (0+255)
  2958  0216  00F4               	movwf	??_LedPointSelect
  2959  0217  0874               	movf	??_LedPointSelect,w
  2960  0218  00F9               	movwf	_LED
  2961  0219  0008               	return
  2962  021A                     __end_of_LedPointSelect:	
  2963                           
  2964                           	psect	text16
  2965  012B                     __ptext16:	
  2966 ;; *************** function _Buzzer_Main *****************
  2967 ;; Defined at:
  2968 ;;		line 46 in file "../src/Buzzer_B1.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2982 ;;      Params:         0       0       0       0
  2983 ;;      Locals:         0       0       0       0
  2984 ;;      Temps:          1       0       0       0
  2985 ;;      Totals:         1       0       0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    2
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _Buzzer_Main
  2998  012B                     _Buzzer_Main:	
  2999                           
  3000                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
  3004  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3005  012C  1303               	bcf	3,6	;RP1=0, select bank0
  3006  012D  1CB2               	btfss	_Buz1,1
  3007  012E  0008               	return
  3008                           
  3009                           ;Buzzer_B1.c: 48: Buz1.Counter++;
  3010  012F  3001               	movlw	1
  3011  0130  07B3               	addwf	_Buz1+1,f
  3012  0131  1803               	skipnc
  3013  0132  0AB4               	incf	_Buz1+2,f
  3014  0133  3000               	movlw	0
  3015  0134  07B4               	addwf	_Buz1+2,f
  3016                           
  3017                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
  3018  0135  0839               	movf	_Buz1+7,w
  3019  0136  0234               	subwf	_Buz1+2,w
  3020  0137  1D03               	skipz
  3021  0138  293B               	goto	u915
  3022  0139  0838               	movf	_Buz1+6,w
  3023  013A  0233               	subwf	_Buz1+1,w
  3024  013B                     u915:	
  3025  013B  1C03               	skipc
  3026  013C  0008               	return
  3027                           
  3028                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
  3029  013D  01B3               	clrf	_Buz1+1
  3030  013E  01B4               	clrf	_Buz1+2
  3031                           
  3032                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB1 == 1) ? 1 : 0;
  3033  013F  12B2               	bcf	_Buz1,5
  3034  0140  1886               	btfsc	6,1	;volatile
  3035  0141  16B2               	bsf	_Buz1,5
  3036                           
  3037                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
  3038  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0144  1AB2               	btfsc	_Buz1,5
  3041  0145  296A               	goto	l36
  3042                           
  3043                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
  3044  0146  08B5               	movf	_Buz1+3,f
  3045  0147  1D03               	skipz
  3046  0148  2967               	goto	l37
  3047                           
  3048                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
  3049  0149  1DB2               	btfss	_Buz1,3
  3050  014A  2957               	goto	l38
  3051                           
  3052                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
  3053  014B  11B2               	bcf	_Buz1,3
  3054                           
  3055                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
  3056  014C  0836               	movf	_Buz1+4,w
  3057  014D  00F4               	movwf	??_Buzzer_Main
  3058  014E  0874               	movf	??_Buzzer_Main,w
  3059  014F  00B5               	movwf	_Buz1+3
  3060                           
  3061                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
  3062  0150  083B               	movf	_Buz1+9,w
  3063  0151  01B9               	clrf	_Buz1+7
  3064  0152  07B9               	addwf	_Buz1+7,f
  3065  0153  083A               	movf	_Buz1+8,w
  3066  0154  01B8               	clrf	_Buz1+6
  3067  0155  07B8               	addwf	_Buz1+6,f
  3068                           
  3069                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
  3070  0156  0008               	return
  3071  0157                     l38:	
  3072  0157  1E32               	btfss	_Buz1,4
  3073  0158  2965               	goto	l40
  3074                           
  3075                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
  3076  0159  1232               	bcf	_Buz1,4
  3077                           
  3078                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
  3079  015A  0837               	movf	_Buz1+5,w
  3080  015B  00F4               	movwf	??_Buzzer_Main
  3081  015C  0874               	movf	??_Buzzer_Main,w
  3082  015D  00B5               	movwf	_Buz1+3
  3083                           
  3084                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
  3085  015E  083D               	movf	_Buz1+11,w
  3086  015F  01B9               	clrf	_Buz1+7
  3087  0160  07B9               	addwf	_Buz1+7,f
  3088  0161  083C               	movf	_Buz1+10,w
  3089  0162  01B8               	clrf	_Buz1+6
  3090  0163  07B8               	addwf	_Buz1+6,f
  3091                           
  3092                           ;Buzzer_B1.c: 62: } else {
  3093  0164  0008               	return
  3094  0165                     l40:	
  3095                           
  3096                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
  3097  0165  10B2               	bcf	_Buz1,1
  3098                           
  3099                           ;Buzzer_B1.c: 64: }
  3100                           ;Buzzer_B1.c: 65: } else {
  3101  0166  0008               	return
  3102  0167                     l37:	
  3103                           
  3104                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
  3105  0167  16B2               	bsf	_Buz1,5
  3106                           
  3107                           ;Buzzer_B1.c: 68: RB1 = 1;
  3108  0168  1486               	bsf	6,1	;volatile
  3109                           
  3110                           ;Buzzer_B1.c: 69: }
  3111                           ;Buzzer_B1.c: 70: } else {
  3112  0169  0008               	return
  3113  016A                     l36:	
  3114                           
  3115                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
  3116  016A  12B2               	bcf	_Buz1,5
  3117                           
  3118                           ;Buzzer_B1.c: 73: RB1 = 0;
  3119  016B  1086               	bcf	6,1	;volatile
  3120                           
  3121                           ;Buzzer_B1.c: 75: Buz1.Count--;
  3122  016C  3001               	movlw	1
  3123  016D  02B5               	subwf	_Buz1+3,f
  3124  016E  0008               	return
  3125  016F                     __end_of_Buzzer_Main:	
  3126                           
  3127                           	psect	text17
  3128  02A7                     __ptext17:	
  3129 ;; *************** function _Buzzer_Initialization *****************
  3130 ;; Defined at:
  3131 ;;		line 11 in file "../src/Buzzer_B1.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		None
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3145 ;;      Params:         0       0       0       0
  3146 ;;      Locals:         0       0       0       0
  3147 ;;      Temps:          0       0       0       0
  3148 ;;      Totals:         0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    2
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _Buzzer_Initialization
  3161  02A7                     _Buzzer_Initialization:	
  3162                           
  3163                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
  3164                           
  3165                           ;incstack = 0
  3166                           ; Regs used in _Buzzer_Initialization: []
  3167  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3168  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3169  02A9  1432               	bsf	_Buz1,0
  3170  02AA  0008               	return
  3171  02AB                     __end_of_Buzzer_Initialization:	
  3172                           
  3173                           	psect	text18
  3174  0247                     __ptext18:	
  3175 ;; *************** function _ISR *****************
  3176 ;; Defined at:
  3177 ;;		line 107 in file "../src/MCU_B1.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3191 ;;      Params:         0       0       0       0
  3192 ;;      Locals:         0       0       0       0
  3193 ;;      Temps:          4       0       0       0
  3194 ;;      Totals:         4       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		_TMR0_ISR
  3200 ;; This function is called by:
  3201 ;;		Interrupt level 1
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _ISR
  3207  0247                     _ISR:	
  3208                           
  3209                           ;MCU_B1.c: 109: ;;
  3210                           ;MCU_B1.c: 111: TMR0_ISR();
  3211  0247  118A  221A  118A   	fcall	_TMR0_ISR
  3212  024A  0873               	movf	??_ISR+3,w
  3213  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3214  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3215  024D  00FF               	movwf	127
  3216  024E  0872               	movf	??_ISR+2,w
  3217  024F  008A               	movwf	10
  3218  0250  0871               	movf	??_ISR+1,w
  3219  0251  0084               	movwf	4
  3220  0252  0E70               	swapf	??_ISR^(0+-128),w
  3221  0253  0083               	movwf	3
  3222  0254  0EFE               	swapf	126,f
  3223  0255  0E7E               	swapf	126,w
  3224  0256  0009               	retfie
  3225  0257                     __end_of_ISR:	
  3226                           
  3227                           	psect	intentry
  3228  0004                     __pintentry:	
  3229                           ;incstack = 0
  3230                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3231                           
  3232  0004                     interrupt_function:	
  3233  007E                     saved_w	set	btemp
  3234  0004  00FE               	movwf	btemp
  3235  0005  0E03               	swapf	3,w
  3236  0006  00F0               	movwf	??_ISR
  3237  0007  0804               	movf	4,w
  3238  0008  00F1               	movwf	??_ISR+1
  3239  0009  080A               	movf	10,w
  3240  000A  00F2               	movwf	??_ISR+2
  3241  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3242  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3243  000D  087F               	movf	btemp+1,w
  3244  000E  00F3               	movwf	??_ISR+3
  3245  000F  118A  2A47         	ljmp	_ISR
  3246                           
  3247                           	psect	text19
  3248  021A                     __ptext19:	
  3249 ;; *************** function _TMR0_ISR *****************
  3250 ;; Defined at:
  3251 ;;		line 135 in file "../src/MCU_B1.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, status,2
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3265 ;;      Params:         0       0       0       0
  3266 ;;      Locals:         0       0       0       0
  3267 ;;      Temps:          0       0       0       0
  3268 ;;      Totals:         0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_ISR
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _TMR0_ISR
  3280  021A                     _TMR0_ISR:	
  3281                           
  3282                           ;MCU_B1.c: 136: if (TMR0IE == 1 && TMR0IF == 1) {
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _TMR0_ISR: [wreg+status,2]
  3286  021A  1E8B               	btfss	11,5	;volatile
  3287  021B  0008               	return
  3288  021C  1D0B               	btfss	11,2	;volatile
  3289  021D  0008               	return
  3290                           
  3291                           ;MCU_B1.c: 138: TMR0 = (256-190);
  3292  021E  3042               	movlw	66
  3293  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3295  0221  0081               	movwf	1	;volatile
  3296                           
  3297                           ;MCU_B1.c: 139: TMR0IF = 0;
  3298  0222  110B               	bcf	11,2	;volatile
  3299                           
  3300                           ;MCU_B1.c: 160: Timer0.Count++;
  3301  0223  3001               	movlw	1
  3302  0224  07BF               	addwf	_Timer0+1,f
  3303  0225  1803               	skipnc
  3304  0226  0AC0               	incf	_Timer0+2,f
  3305  0227  3000               	movlw	0
  3306  0228  07C0               	addwf	_Timer0+2,f
  3307                           
  3308                           ;MCU_B1.c: 161: if (Timer0.Count == 100) {
  3309  0229  3064               	movlw	100
  3310  022A  063F               	xorwf	_Timer0+1,w
  3311  022B  0440               	iorwf	_Timer0+2,w
  3312  022C  1D03               	skipz
  3313  022D  0008               	return
  3314                           
  3315                           ;MCU_B1.c: 162: Timer0.Count = 0;
  3316  022E  01BF               	clrf	_Timer0+1
  3317  022F  01C0               	clrf	_Timer0+2
  3318                           
  3319                           ;MCU_B1.c: 163: myMain.T0_Timerout = 1;
  3320  0230  14A0               	bsf	_myMain,1
  3321  0231  0008               	return
  3322  0232                     __end_of_TMR0_ISR:	
  3323  007E                     btemp	set	126	;btemp
  3324  007E                     wtemp	set	126
  3325  007E                     wtemp0	set	126
  3326  0080                     wtemp1	set	128
  3327  0082                     wtemp2	set	130
  3328  0084                     wtemp3	set	132
  3329  0086                     wtemp4	set	134
  3330  0088                     wtemp5	set	136
  3331  007F                     wtemp6	set	127
  3332  007E                     ttemp	set	126
  3333  007E                     ttemp0	set	126
  3334  0081                     ttemp1	set	129
  3335  0084                     ttemp2	set	132
  3336  0087                     ttemp3	set	135
  3337  007F                     ttemp4	set	127
  3338  007E                     ltemp	set	126
  3339  007E                     ltemp0	set	126
  3340  0082                     ltemp1	set	130
  3341  0086                     ltemp2	set	134
  3342  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     12      62
    BANK1            80      0       0
    BANK2            16      0       0

Pointer List with Targets:

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _setBuz->___awdiv
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _my_Main->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    1427
                                              8 BANK0      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _myMain_Initialization
                            _my_Main
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0     725
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2     725
                                              4 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              6 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     548
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     548
                                              8 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     438
                                              6 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      66
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR0_Set
   _myMain_Initialization
   _my_Main
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      48      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Oct 20 10:28:46 2014

                            l40 0165                              l26 010F                              l36 016A  
                            l28 011D                              l37 0167                              l38 0157  
                  ___awdiv@sign 0053                              fsr 0004                             l334 01DC  
                           l319 01EB                             _GIE 005F                             _RB1 0031  
                           _LED 0079                             _RB3 0033                             _RB4 0034  
                           _RB5 0035                             _ISR 0247                             u745 00A9  
                           u915 013B                             u765 00B5                             u775 00C1  
                           u785 00CB                             fsr0 0004                             indf 0000  
         _Buzzer_Initialization 02A7                 __end_of_ADC_Set 02A2                            ?_ISR 0070  
                          l1200 0049                            l1204 0051                            l1222 0076  
                          l1208 0059                            l1170 0208                            l1218 006E  
                          l1226 007E                            l1322 019C                            l1244 009E  
                          l1174 0211                            l1190 0035                            l1326 01A5  
                          l1270 00DD                            l1262 00CA                            l1254 00A6  
                          l1238 0093                            l1256 00B4                            l1186 002D  
                          l1194 003D                            l1266 00D5                            l1466 01CB  
         _myMain_Initialization 02AB                            _TMR0 0001                            _Buz1 0032  
                          _main 01DE                            btemp 007E                            ltemp 007E  
                          start 0011                            ttemp 007E                            wtemp 007E  
                         ??_ISR 0070                   __CFG_PLLEN$ON 0000                __end_of_LED_Main 027D  
                         ?_main 005A                 __end_of___awdiv 00E4                           _ADRES 001E  
                 __CFG_WDTE$OFF 0000                 ___awdiv@divisor 0074                 ___awdiv@counter 0052  
                         _PORTA 0005                           _PORTB 0006                           _PORTC 0007  
                  ?_setLED_Main 0070                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                __end_of_TMR0_ISR 0232                __end_of_TMR0_Set 0293  
               __end_of_my_Main 01DE                   ??_Buzzer_Main 0074                  __CFG_BOREN$OFF 0000  
                         pclath 000A                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080  __size_of_setLED_Initialization 000E  
 __end_of_setLED_Initialization 0265                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 0013  
                  __end_of_main 01FE                __end_of_Fosc_Set 02A7                       ??_ADC_Set 0074  
                        ??_main 0079          ?_Buzzer_Initialization 0070          ?_myMain_Initialization 0070  
                        _ADCON0 001F                          _ADCON1 009F                ___awdiv@dividend 0076  
                        _ANSELA 0185                          _ANSELB 0186                          _FVRCON 009D  
                        _OSCCON 0090                          _TMR0IE 005D                          _TMR0IF 005A  
                        _IO_Set 0232      __end_of_Mcu_Initialization 0271             __end_of_Buzzer_Main 016F  
                        _Timer0 003E                       ??___awdiv 0078                          _setLED 001D  
                        _myMain 0020                ___awdiv@quotient 0054                          _setBuz 00E4  
                     ??_my_Main 0079                          saved_w 007E         __size_of_LedPointSelect 001C  
       __end_of__initialization 001A                       ?_LED_Main 0070                  __pcstackCOMMON 0070  
                     ?_TMR0_ISR 0070                       ?_TMR0_Set 0070              _LED_Initialization 027D  
           ?_LED_Initialization 0070            __size_of_setLED_Main 003F                      __pbssBANK0 0020  
                     ?_Fosc_Set 0070                     _Buzzer_Main 012B                         ?_IO_Set 0070  
               __CFG_VCAPEN$DIS 0000                      ??_LED_Main 0079            ??_LED_Initialization 0079  
             LedPointSelect@led 0075                     setBuz@count 0059                      __pmaintext 01DE  
                    ??_TMR0_ISR 0070                      ??_TMR0_Set 0074                      __pintentry 0004  
                       ?_setLED 0076                         _ADC_Set 029B                         ?_setBuz 0056  
                    ??_Fosc_Set 0074                 __size_of_IO_Set 0015                         _VarLED1 004A  
                       _VarLED2 004E                         ___awdiv 0087         ??_Buzzer_Initialization 0074  
               __size_of_setLED 006A                 __size_of_setBuz 0047                         __ptext0 0000  
                       __ptext1 01AE                         __ptext2 00E4                         __ptext3 0087  
                       __ptext4 02AB                         __ptext5 0265                         __ptext6 0289  
                       __ptext7 0232                         __ptext8 02A2                         __ptext9 029B  
                  __size_of_ISR 0010         ??_myMain_Initialization 0074                         _my_Main 01AE  
                _LedPointSelect 01FE                         clrloop0 0294            end_of_initialization 001A  
         _setLED_Initialization 0257        setLED_Initialization@led 0078              _Mcu_Initialization 0265  
        __end_of_LedPointSelect 021A             ?_Mcu_Initialization 0070                  __end_of_IO_Set 0247  
             __size_of_LED_Main 000C            ??_Mcu_Initialization 0074               __size_of_TMR0_ISR 0018  
             __size_of_TMR0_Set 000A                  __end_of_setLED 0087                  __end_of_setBuz 012B  
           start_initialization 0013                 ?_LedPointSelect 0070                     __end_of_ISR 0257  
                  ?_Buzzer_Main 0070                        ??_IO_Set 0074                       _VarErrLED 0046  
        ?_setLED_Initialization 0070               __size_of_Fosc_Set 0005                        ??_setLED 0077  
                      ?_ADC_Set 0070                        ??_setBuz 0058                   ??_setLED_Main 0076  
                   __pbssCOMMON 0079                       ___latbits 0001                   __pcstackBANK0 0052  
   __size_of_LED_Initialization 000C                      setBuz@time 0056                        ?___awdiv 0074  
__size_of_Buzzer_Initialization 0004   __end_of_Buzzer_Initialization 02AB                        ?_my_Main 0070  
__size_of_myMain_Initialization 0001   __end_of_myMain_Initialization 02AC             __end_of_setLED_Main 01AE  
             interrupt_function 0004                        _LED_Main 0271                       clear_ram0 0293  
                      _GO_nDONE 00F9                        _TMR0_ISR 021A                        _TMR0_Set 0289  
              __size_of_ADC_Set 0007                  setLED_Main@led 0078                        _Fosc_Set 02A2  
          __size_of_Buzzer_Main 0044                       setLED@led 0077                __size_of___awdiv 005D  
              ??_LedPointSelect 0074                     _setLED_Main 016F                __size_of_my_Main 0030  
                      __ptext10 0271                        __ptext11 016F                        __ptext12 027D  
                      __ptext13 0257                        __ptext14 001D                        __ptext15 01FE  
                      __ptext16 012B                        __ptext17 02A7                        __ptext18 0247  
                      __ptext19 021A         ??_setLED_Initialization 0078                   setLED@command 0076  
                 __size_of_main 0020     __size_of_Mcu_Initialization 000C                        main@argc 005A  
                      main@argv 005C                        intlevel1 0000                      _OPTION_REG 0081  
            __CFG_FOSC$INTOSCIO 0000      __end_of_LED_Initialization 0289  
