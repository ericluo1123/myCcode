

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Oct 24 16:40:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0096                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009F                     	;# 
   101  0108                     	;# 
   102  0109                     	;# 
   103  010C                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0185                     	;# 
   110  0186                     	;# 
   111  018C                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0096                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009F                     	;# 
   170  0108                     	;# 
   171  0109                     	;# 
   172  010C                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  0185                     	;# 
   179  0186                     	;# 
   180  018C                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008F                     	;# 
   224  0090                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0095                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0096                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009F                     	;# 
   239  0108                     	;# 
   240  0109                     	;# 
   241  010C                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0186                     	;# 
   249  018C                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0096                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009F                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0186                     	;# 
   318  018C                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0096                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009F                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0186                     	;# 
   387  018C                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0096                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009F                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0186                     	;# 
   456  018C                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0094                     	;# 
   506  0095                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0096                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009F                     	;# 
   515  0108                     	;# 
   516  0109                     	;# 
   517  010C                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0186                     	;# 
   525  018C                     	;# 
   526  0000                     	;# 
   527  0001                     	;# 
   528  0002                     	;# 
   529  0003                     	;# 
   530  0004                     	;# 
   531  0005                     	;# 
   532  0006                     	;# 
   533  0007                     	;# 
   534  0009                     	;# 
   535  000A                     	;# 
   536  000B                     	;# 
   537  000C                     	;# 
   538  000D                     	;# 
   539  000E                     	;# 
   540  000E                     	;# 
   541  000F                     	;# 
   542  0010                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0013                     	;# 
   546  0014                     	;# 
   547  0015                     	;# 
   548  0015                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  001D                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  0081                     	;# 
   561  0085                     	;# 
   562  0086                     	;# 
   563  0087                     	;# 
   564  0089                     	;# 
   565  008C                     	;# 
   566  008D                     	;# 
   567  008E                     	;# 
   568  008F                     	;# 
   569  0090                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0093                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0096                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009C                     	;# 
   582  009D                     	;# 
   583  009F                     	;# 
   584  0108                     	;# 
   585  0109                     	;# 
   586  010C                     	;# 
   587  010C                     	;# 
   588  010D                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  0185                     	;# 
   593  0186                     	;# 
   594  018C                     	;# 
   595  0000                     	;# 
   596  0001                     	;# 
   597  0002                     	;# 
   598  0003                     	;# 
   599  0004                     	;# 
   600  0005                     	;# 
   601  0006                     	;# 
   602  0007                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000D                     	;# 
   608  000E                     	;# 
   609  000E                     	;# 
   610  000F                     	;# 
   611  0010                     	;# 
   612  0011                     	;# 
   613  0012                     	;# 
   614  0013                     	;# 
   615  0014                     	;# 
   616  0015                     	;# 
   617  0015                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  001B                     	;# 
   624  001B                     	;# 
   625  001C                     	;# 
   626  001D                     	;# 
   627  001E                     	;# 
   628  001F                     	;# 
   629  0081                     	;# 
   630  0085                     	;# 
   631  0086                     	;# 
   632  0087                     	;# 
   633  0089                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008F                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0095                     	;# 
   646  0096                     	;# 
   647  0096                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009F                     	;# 
   653  0108                     	;# 
   654  0109                     	;# 
   655  010C                     	;# 
   656  010C                     	;# 
   657  010D                     	;# 
   658  010D                     	;# 
   659  010E                     	;# 
   660  010F                     	;# 
   661  0185                     	;# 
   662  0186                     	;# 
   663  018C                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0009                     	;# 
   673  000A                     	;# 
   674  000B                     	;# 
   675  000C                     	;# 
   676  000D                     	;# 
   677  000E                     	;# 
   678  000E                     	;# 
   679  000F                     	;# 
   680  0010                     	;# 
   681  0011                     	;# 
   682  0012                     	;# 
   683  0013                     	;# 
   684  0014                     	;# 
   685  0015                     	;# 
   686  0015                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001B                     	;# 
   693  001B                     	;# 
   694  001C                     	;# 
   695  001D                     	;# 
   696  001E                     	;# 
   697  001F                     	;# 
   698  0081                     	;# 
   699  0085                     	;# 
   700  0086                     	;# 
   701  0087                     	;# 
   702  0089                     	;# 
   703  008C                     	;# 
   704  008D                     	;# 
   705  008E                     	;# 
   706  008F                     	;# 
   707  0090                     	;# 
   708  0091                     	;# 
   709  0092                     	;# 
   710  0093                     	;# 
   711  0093                     	;# 
   712  0094                     	;# 
   713  0095                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0096                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009C                     	;# 
   720  009D                     	;# 
   721  009F                     	;# 
   722  0108                     	;# 
   723  0109                     	;# 
   724  010C                     	;# 
   725  010C                     	;# 
   726  010D                     	;# 
   727  010D                     	;# 
   728  010E                     	;# 
   729  010F                     	;# 
   730  0185                     	;# 
   731  0186                     	;# 
   732  018C                     	;# 
   733  0000                     	;# 
   734  0001                     	;# 
   735  0002                     	;# 
   736  0003                     	;# 
   737  0004                     	;# 
   738  0005                     	;# 
   739  0006                     	;# 
   740  0007                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000D                     	;# 
   746  000E                     	;# 
   747  000E                     	;# 
   748  000F                     	;# 
   749  0010                     	;# 
   750  0011                     	;# 
   751  0012                     	;# 
   752  0013                     	;# 
   753  0014                     	;# 
   754  0015                     	;# 
   755  0015                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001B                     	;# 
   763  001C                     	;# 
   764  001D                     	;# 
   765  001E                     	;# 
   766  001F                     	;# 
   767  0081                     	;# 
   768  0085                     	;# 
   769  0086                     	;# 
   770  0087                     	;# 
   771  0089                     	;# 
   772  008C                     	;# 
   773  008D                     	;# 
   774  008E                     	;# 
   775  008F                     	;# 
   776  0090                     	;# 
   777  0091                     	;# 
   778  0092                     	;# 
   779  0093                     	;# 
   780  0093                     	;# 
   781  0094                     	;# 
   782  0095                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0096                     	;# 
   786  0098                     	;# 
   787  0099                     	;# 
   788  009C                     	;# 
   789  009D                     	;# 
   790  009F                     	;# 
   791  0108                     	;# 
   792  0109                     	;# 
   793  010C                     	;# 
   794  010C                     	;# 
   795  010D                     	;# 
   796  010D                     	;# 
   797  010E                     	;# 
   798  010F                     	;# 
   799  0185                     	;# 
   800  0186                     	;# 
   801  018C                     	;# 
   802  0000                     	;# 
   803  0001                     	;# 
   804  0002                     	;# 
   805  0003                     	;# 
   806  0004                     	;# 
   807  0005                     	;# 
   808  0006                     	;# 
   809  0007                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  000E                     	;# 
   817  000F                     	;# 
   818  0010                     	;# 
   819  0011                     	;# 
   820  0012                     	;# 
   821  0013                     	;# 
   822  0014                     	;# 
   823  0015                     	;# 
   824  0015                     	;# 
   825  0016                     	;# 
   826  0017                     	;# 
   827  0018                     	;# 
   828  0019                     	;# 
   829  001A                     	;# 
   830  001B                     	;# 
   831  001B                     	;# 
   832  001C                     	;# 
   833  001D                     	;# 
   834  001E                     	;# 
   835  001F                     	;# 
   836  0081                     	;# 
   837  0085                     	;# 
   838  0086                     	;# 
   839  0087                     	;# 
   840  0089                     	;# 
   841  008C                     	;# 
   842  008D                     	;# 
   843  008E                     	;# 
   844  008F                     	;# 
   845  0090                     	;# 
   846  0091                     	;# 
   847  0092                     	;# 
   848  0093                     	;# 
   849  0093                     	;# 
   850  0094                     	;# 
   851  0095                     	;# 
   852  0095                     	;# 
   853  0096                     	;# 
   854  0096                     	;# 
   855  0098                     	;# 
   856  0099                     	;# 
   857  009C                     	;# 
   858  009D                     	;# 
   859  009F                     	;# 
   860  0108                     	;# 
   861  0109                     	;# 
   862  010C                     	;# 
   863  010C                     	;# 
   864  010D                     	;# 
   865  010D                     	;# 
   866  010E                     	;# 
   867  010F                     	;# 
   868  0185                     	;# 
   869  0186                     	;# 
   870  018C                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0096                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009F                     	;# 
   929  0108                     	;# 
   930  0109                     	;# 
   931  010C                     	;# 
   932  010C                     	;# 
   933  010D                     	;# 
   934  010D                     	;# 
   935  010E                     	;# 
   936  010F                     	;# 
   937  0185                     	;# 
   938  0186                     	;# 
   939  018C                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0009                     	;# 
   949  000A                     	;# 
   950  000B                     	;# 
   951  000C                     	;# 
   952  000D                     	;# 
   953  000E                     	;# 
   954  000E                     	;# 
   955  000F                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0013                     	;# 
   960  0014                     	;# 
   961  0015                     	;# 
   962  0015                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001B                     	;# 
   970  001C                     	;# 
   971  001D                     	;# 
   972  001E                     	;# 
   973  001F                     	;# 
   974  0081                     	;# 
   975  0085                     	;# 
   976  0086                     	;# 
   977  0087                     	;# 
   978  0089                     	;# 
   979  008C                     	;# 
   980  008D                     	;# 
   981  008E                     	;# 
   982  008F                     	;# 
   983  0090                     	;# 
   984  0091                     	;# 
   985  0092                     	;# 
   986  0093                     	;# 
   987  0093                     	;# 
   988  0094                     	;# 
   989  0095                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0096                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009C                     	;# 
   996  009D                     	;# 
   997  009F                     	;# 
   998  0108                     	;# 
   999  0109                     	;# 
  1000  010C                     	;# 
  1001  010C                     	;# 
  1002  010D                     	;# 
  1003  010D                     	;# 
  1004  010E                     	;# 
  1005  010F                     	;# 
  1006  0185                     	;# 
  1007  0186                     	;# 
  1008  018C                     	;# 
  1009  0000                     	;# 
  1010  0001                     	;# 
  1011  0002                     	;# 
  1012  0003                     	;# 
  1013  0004                     	;# 
  1014  0005                     	;# 
  1015  0006                     	;# 
  1016  0007                     	;# 
  1017  0009                     	;# 
  1018  000A                     	;# 
  1019  000B                     	;# 
  1020  000C                     	;# 
  1021  000D                     	;# 
  1022  000E                     	;# 
  1023  000E                     	;# 
  1024  000F                     	;# 
  1025  0010                     	;# 
  1026  0011                     	;# 
  1027  0012                     	;# 
  1028  0013                     	;# 
  1029  0014                     	;# 
  1030  0015                     	;# 
  1031  0015                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001B                     	;# 
  1039  001C                     	;# 
  1040  001D                     	;# 
  1041  001E                     	;# 
  1042  001F                     	;# 
  1043  0081                     	;# 
  1044  0085                     	;# 
  1045  0086                     	;# 
  1046  0087                     	;# 
  1047  0089                     	;# 
  1048  008C                     	;# 
  1049  008D                     	;# 
  1050  008E                     	;# 
  1051  008F                     	;# 
  1052  0090                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0093                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0095                     	;# 
  1060  0096                     	;# 
  1061  0096                     	;# 
  1062  0098                     	;# 
  1063  0099                     	;# 
  1064  009C                     	;# 
  1065  009D                     	;# 
  1066  009F                     	;# 
  1067  0108                     	;# 
  1068  0109                     	;# 
  1069  010C                     	;# 
  1070  010C                     	;# 
  1071  010D                     	;# 
  1072  010D                     	;# 
  1073  010E                     	;# 
  1074  010F                     	;# 
  1075  0185                     	;# 
  1076  0186                     	;# 
  1077  018C                     	;# 
  1078  0000                     	;# 
  1079  0001                     	;# 
  1080  0002                     	;# 
  1081  0003                     	;# 
  1082  0004                     	;# 
  1083  0005                     	;# 
  1084  0006                     	;# 
  1085  0007                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  000E                     	;# 
  1092  000E                     	;# 
  1093  000F                     	;# 
  1094  0010                     	;# 
  1095  0011                     	;# 
  1096  0012                     	;# 
  1097  0013                     	;# 
  1098  0014                     	;# 
  1099  0015                     	;# 
  1100  0015                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  0019                     	;# 
  1105  001A                     	;# 
  1106  001B                     	;# 
  1107  001B                     	;# 
  1108  001C                     	;# 
  1109  001D                     	;# 
  1110  001E                     	;# 
  1111  001F                     	;# 
  1112  0081                     	;# 
  1113  0085                     	;# 
  1114  0086                     	;# 
  1115  0087                     	;# 
  1116  0089                     	;# 
  1117  008C                     	;# 
  1118  008D                     	;# 
  1119  008E                     	;# 
  1120  008F                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0092                     	;# 
  1124  0093                     	;# 
  1125  0093                     	;# 
  1126  0094                     	;# 
  1127  0095                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0096                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009C                     	;# 
  1134  009D                     	;# 
  1135  009F                     	;# 
  1136  0108                     	;# 
  1137  0109                     	;# 
  1138  010C                     	;# 
  1139  010C                     	;# 
  1140  010D                     	;# 
  1141  010D                     	;# 
  1142  010E                     	;# 
  1143  010F                     	;# 
  1144  0185                     	;# 
  1145  0186                     	;# 
  1146  018C                     	;# 
  1147  0000                     	;# 
  1148  0001                     	;# 
  1149  0002                     	;# 
  1150  0003                     	;# 
  1151  0004                     	;# 
  1152  0005                     	;# 
  1153  0006                     	;# 
  1154  0007                     	;# 
  1155  0009                     	;# 
  1156  000A                     	;# 
  1157  000B                     	;# 
  1158  000C                     	;# 
  1159  000D                     	;# 
  1160  000E                     	;# 
  1161  000E                     	;# 
  1162  000F                     	;# 
  1163  0010                     	;# 
  1164  0011                     	;# 
  1165  0012                     	;# 
  1166  0013                     	;# 
  1167  0014                     	;# 
  1168  0015                     	;# 
  1169  0015                     	;# 
  1170  0016                     	;# 
  1171  0017                     	;# 
  1172  0018                     	;# 
  1173  0019                     	;# 
  1174  001A                     	;# 
  1175  001B                     	;# 
  1176  001B                     	;# 
  1177  001C                     	;# 
  1178  001D                     	;# 
  1179  001E                     	;# 
  1180  001F                     	;# 
  1181  0081                     	;# 
  1182  0085                     	;# 
  1183  0086                     	;# 
  1184  0087                     	;# 
  1185  0089                     	;# 
  1186  008C                     	;# 
  1187  008D                     	;# 
  1188  008E                     	;# 
  1189  008F                     	;# 
  1190  0090                     	;# 
  1191  0091                     	;# 
  1192  0092                     	;# 
  1193  0093                     	;# 
  1194  0093                     	;# 
  1195  0094                     	;# 
  1196  0095                     	;# 
  1197  0095                     	;# 
  1198  0096                     	;# 
  1199  0096                     	;# 
  1200  0098                     	;# 
  1201  0099                     	;# 
  1202  009C                     	;# 
  1203  009D                     	;# 
  1204  009F                     	;# 
  1205  0108                     	;# 
  1206  0109                     	;# 
  1207  010C                     	;# 
  1208  010C                     	;# 
  1209  010D                     	;# 
  1210  010D                     	;# 
  1211  010E                     	;# 
  1212  010F                     	;# 
  1213  0185                     	;# 
  1214  0186                     	;# 
  1215  018C                     	;# 
  1216  001F                     _ADCON0	set	31
  1217  001E                     _ADRES	set	30
  1218  0005                     _PORTA	set	5
  1219  0006                     _PORTB	set	6
  1220  0007                     _PORTC	set	7
  1221  0001                     _TMR0	set	1
  1222  005F                     _GIE	set	95
  1223  00F9                     _GO_nDONE	set	249
  1224  0031                     _RB1	set	49
  1225  0033                     _RB3	set	51
  1226  0034                     _RB4	set	52
  1227  0035                     _RB5	set	53
  1228  005D                     _TMR0IE	set	93
  1229  005A                     _TMR0IF	set	90
  1230  009F                     _ADCON1	set	159
  1231  009D                     _FVRCON	set	157
  1232  0081                     _OPTION_REG	set	129
  1233  0090                     _OSCCON	set	144
  1234  0085                     _TRISA	set	133
  1235  0086                     _TRISB	set	134
  1236  0087                     _TRISC	set	135
  1237  0185                     _ANSELA	set	389
  1238  0186                     _ANSELB	set	390
  1239                           
  1240                           	psect	text0
  1241  0000                     __ptext0:	
  1242                           ; #config settings
  1243                           
  1244                           
  1245                           ;psect for function _TMR0_ISR
  1246  0000                     
  1247                           	psect	cinit
  1248  0013                     start_initialization:	
  1249  0013                     __initialization:	
  1250                           
  1251                           ; Clear objects allocated to COMMON
  1252  0013  01F9               	clrf	__pbssCOMMON& (0+127)
  1253                           
  1254                           ; Clear objects allocated to BANK0
  1255  0014  1383               	bcf	3,7	;select IRP bank0
  1256  0015  3020               	movlw	low __pbssBANK0
  1257  0016  0084               	movwf	4
  1258  0017  3057               	movlw	low (__pbssBANK0+55)
  1259  0018  118A  2370  118A   	fcall	clear_ram0
  1260                           
  1261                           ; Clear objects allocated to BANK1
  1262  001B  30A0               	movlw	low __pbssBANK1
  1263  001C  0084               	movwf	4
  1264  001D  30CF               	movlw	low (__pbssBANK1+47)
  1265  001E  118A  2370         	fcall	clear_ram0
  1266  0020                     end_of_initialization:	
  1267                           ;End of C runtime variable initialization code
  1268                           
  1269  0020                     __end_of__initialization:	
  1270  0020  0183               	clrf	3
  1271  0021  118A  28EA         	ljmp	_main	;jump to C main() function
  1272                           
  1273                           	psect	bssCOMMON
  1274  0079                     __pbssCOMMON:	
  1275  0079                     _LED:	
  1276  0079                     	ds	1
  1277                           
  1278                           	psect	bssBANK0
  1279  0020                     __pbssBANK0:	
  1280  0020                     _myMain:	
  1281  0020                     	ds	18
  1282  0032                     _Buz1:	
  1283  0032                     	ds	12
  1284  003E                     _Timer0:	
  1285  003E                     	ds	8
  1286  0046                     __CDS:	
  1287  0046                     	ds	5
  1288  004B                     _VarErrLED:	
  1289  004B                     	ds	4
  1290  004F                     _VarLED1:	
  1291  004F                     	ds	4
  1292  0053                     _VarLED2:	
  1293  0053                     	ds	4
  1294                           
  1295                           	psect	bssBANK1
  1296  00A0                     __pbssBANK1:	
  1297  00A0                     __PIR:	
  1298  00A0                     	ds	47
  1299                           
  1300                           	psect	clrtext
  1301  0370                     clear_ram0:	
  1302                           ;	Called with FSR containing the base address, and
  1303                           ;	W with the last address+1
  1304                           
  1305  0370  0064               	clrwdt	;clear the watchdog before getting into this loop
  1306  0371                     clrloop0:	
  1307  0371  0180               	clrf	0	;clear RAM location pointed to by FSR
  1308  0372  0A84               	incf	4,f	;increment pointer
  1309  0373  0604               	xorwf	4,w	;XOR with final address
  1310  0374  1903               	btfsc	3,2	;have we reached the end yet?
  1311  0375  3400               	retlw	0	;all done for this memory range, return
  1312  0376  0604               	xorwf	4,w	;XOR again to restore value
  1313  0377  2B71               	goto	clrloop0	;do the next byte
  1314                           
  1315                           	psect	cstackCOMMON
  1316  0070                     __pcstackCOMMON:	
  1317  0070                     ?_setLED_Initialization:	
  1318  0070                     ?_setLED_Main:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Fosc_Set:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_IO_Set:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_TMR0_Set:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_ADC_Set:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_TMR0_ISR:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ??_TMR0_ISR:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_Timeout_Counter:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?_set_TimeoutCleared:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_myMain_Initialization:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0070                     ?_PIR_Initialization:	
  1349                           ; 0 bytes @ 0x0
  1350                           
  1351  0070                     ?_my_MainTime:	
  1352                           ; 0 bytes @ 0x0
  1353                           
  1354  0070                     ?_PIR_Main:	
  1355                           ; 0 bytes @ 0x0
  1356                           
  1357  0070                     ?_Buzzer_Initialization:	
  1358                           ; 0 bytes @ 0x0
  1359                           
  1360  0070                     ?_Buzzer_Main:	
  1361                           ; 0 bytes @ 0x0
  1362                           
  1363  0070                     ?_CDS_Initialization:	
  1364                           ; 0 bytes @ 0x0
  1365                           
  1366  0070                     ?_CDS_Main:	
  1367                           ; 0 bytes @ 0x0
  1368                           
  1369  0070                     ?_LedPointSelect:	
  1370                           ; 0 bytes @ 0x0
  1371                           
  1372  0070                     ?_LED_Initialization:	
  1373                           ; 0 bytes @ 0x0
  1374                           
  1375  0070                     ?_LED_Main:	
  1376                           ; 0 bytes @ 0x0
  1377                           
  1378  0070                     ?_Mcu_Initialization:	
  1379                           ; 0 bytes @ 0x0
  1380                           
  1381  0070                     ?_ISR:	
  1382                           ; 0 bytes @ 0x0
  1383                           
  1384  0070                     ??_ISR:	
  1385                           ; 0 bytes @ 0x0
  1386                           
  1387  0070                     getCDS_AD@cds:	
  1388                           ; 0 bytes @ 0x0
  1389                           
  1390  0070                     getPIR_AD@pir:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x0
  1395  0070                     	ds	4
  1396  0074                     ??_Fosc_Set:	
  1397  0074                     ??_IO_Set:	
  1398                           ; 0 bytes @ 0x4
  1399                           
  1400  0074                     ??_TMR0_Set:	
  1401                           ; 0 bytes @ 0x4
  1402                           
  1403  0074                     ??_ADC_Set:	
  1404                           ; 0 bytes @ 0x4
  1405                           
  1406  0074                     ??_Timeout_Counter:	
  1407                           ; 0 bytes @ 0x4
  1408                           
  1409  0074                     ??_set_TimeoutCleared:	
  1410                           ; 0 bytes @ 0x4
  1411                           
  1412  0074                     ??_myMain_Initialization:	
  1413                           ; 0 bytes @ 0x4
  1414                           
  1415  0074                     ?_getPIR_AD:	
  1416                           ; 0 bytes @ 0x4
  1417                           
  1418  0074                     ??_PIR_Main:	
  1419                           ; 0 bytes @ 0x4
  1420                           
  1421  0074                     ??_Buzzer_Initialization:	
  1422                           ; 0 bytes @ 0x4
  1423                           
  1424  0074                     ??_Buzzer_Main:	
  1425                           ; 0 bytes @ 0x4
  1426                           
  1427  0074                     ??_CDS_Main:	
  1428                           ; 0 bytes @ 0x4
  1429                           
  1430  0074                     ??_LedPointSelect:	
  1431                           ; 0 bytes @ 0x4
  1432                           
  1433  0074                     ??_Mcu_Initialization:	
  1434                           ; 0 bytes @ 0x4
  1435                           
  1436  0074                     ?_getAD:	
  1437                           ; 0 bytes @ 0x4
  1438                           
  1439  0074                     ?___awdiv:	
  1440                           ; 1 bytes @ 0x4
  1441                           
  1442  0074                     getAD@adcon1:	
  1443                           ; 2 bytes @ 0x4
  1444                           
  1445  0074                     getPIR_AD@channel1:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448  0074                     ___awdiv@divisor:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451                           
  1452                           ; 2 bytes @ 0x4
  1453  0074                     	ds	1
  1454  0075                     ??_getAD:	
  1455  0075                     LedPointSelect@led:	
  1456                           ; 0 bytes @ 0x5
  1457                           
  1458  0075                     getAD@adcon0:	
  1459                           ; 1 bytes @ 0x5
  1460                           
  1461  0075                     getPIR_AD@charchannel2:	
  1462                           ; 1 bytes @ 0x5
  1463                           
  1464                           
  1465                           ; 1 bytes @ 0x5
  1466  0075                     	ds	1
  1467  0076                     ?_setLED:	
  1468  0076                     ??_setLED_Main:	
  1469                           ; 0 bytes @ 0x6
  1470                           
  1471  0076                     ??_getPIR_AD:	
  1472                           ; 0 bytes @ 0x6
  1473                           
  1474  0076                     ?_getCDS_AD:	
  1475                           ; 0 bytes @ 0x6
  1476                           
  1477  0076                     getCDS_AD@channel1:	
  1478                           ; 0 bytes @ 0x6
  1479                           
  1480  0076                     setLED@command:	
  1481                           ; 1 bytes @ 0x6
  1482                           
  1483  0076                     ___awdiv@dividend:	
  1484                           ; 1 bytes @ 0x6
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0x6
  1488  0076                     	ds	1
  1489  0077                     ??_setLED:	
  1490  0077                     getCDS_AD@channel2:	
  1491                           ; 0 bytes @ 0x7
  1492                           
  1493  0077                     setLED@led:	
  1494                           ; 1 bytes @ 0x7
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x7
  1498  0077                     	ds	1
  1499  0078                     ??_setLED_Initialization:	
  1500  0078                     ??_PIR_Initialization:	
  1501                           ; 0 bytes @ 0x8
  1502                           
  1503  0078                     ??_CDS_Initialization:	
  1504                           ; 0 bytes @ 0x8
  1505                           
  1506  0078                     ??___awdiv:	
  1507                           ; 0 bytes @ 0x8
  1508                           
  1509  0078                     setLED_Initialization@led:	
  1510                           ; 0 bytes @ 0x8
  1511                           
  1512  0078                     setLED_Main@led:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x8
  1517  0078                     	ds	1
  1518  0079                     ??_my_MainTime:	
  1519  0079                     ??_LED_Initialization:	
  1520                           ; 0 bytes @ 0x9
  1521                           
  1522  0079                     ??_LED_Main:	
  1523                           ; 0 bytes @ 0x9
  1524                           
  1525                           
  1526                           	psect	cstackBANK0
  1527  0057                     __pcstackBANK0:	
  1528                           ; 0 bytes @ 0x9
  1529                           
  1530  0057                     ??_getCDS_AD:	
  1531  0057                     ___awdiv@counter:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534                           
  1535                           ; 1 bytes @ 0x0
  1536  0057                     	ds	1
  1537  0058                     ___awdiv@sign:	
  1538                           
  1539                           ; 1 bytes @ 0x1
  1540  0058                     	ds	1
  1541  0059                     getCDS_AD@i:	
  1542  0059                     ___awdiv@quotient:	
  1543                           ; 1 bytes @ 0x2
  1544                           
  1545                           
  1546                           ; 2 bytes @ 0x2
  1547  0059                     	ds	1
  1548  005A                     getCDS_AD@j:	
  1549                           
  1550                           ; 1 bytes @ 0x3
  1551  005A                     	ds	1
  1552  005B                     ?_setBuz:	
  1553  005B                     setBuz@time:	
  1554                           ; 0 bytes @ 0x4
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x4
  1558  005B                     	ds	2
  1559  005D                     ??_setBuz:	
  1560                           
  1561                           ; 0 bytes @ 0x6
  1562  005D                     	ds	1
  1563  005E                     setBuz@count:	
  1564                           
  1565                           ; 1 bytes @ 0x7
  1566  005E                     	ds	1
  1567  005F                     ?_main:	
  1568  005F                     main@argc:	
  1569                           ; 2 bytes @ 0x8
  1570                           
  1571                           
  1572                           ; 2 bytes @ 0x8
  1573  005F                     	ds	2
  1574  0061                     main@argv:	
  1575                           
  1576                           ; 2 bytes @ 0xA
  1577  0061                     	ds	2
  1578  0063                     ??_main:	
  1579                           
  1580                           ; 0 bytes @ 0xC
  1581  0063                     	ds	2
  1582                           
  1583                           	psect	maintext
  1584  00EA                     __pmaintext:	
  1585 ;;
  1586 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1587 ;;
  1588 ;; *************** function _main *****************
  1589 ;; Defined at:
  1590 ;;		line 7 in file "../src/Main_B1.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  argc            2    8[BANK0 ] int 
  1593 ;;  argv            2   10[BANK0 ] PTR PTR unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2    8[BANK0 ] int 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 17F/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1605 ;;      Params:         0       4       0       0
  1606 ;;      Locals:         0       0       0       0
  1607 ;;      Temps:          0       2       0       0
  1608 ;;      Totals:         0       6       0       0
  1609 ;;Total ram usage:        6 bytes
  1610 ;; Hardware stack levels required when called:    6
  1611 ;; This function calls:
  1612 ;;		_Buzzer_Initialization
  1613 ;;		_Buzzer_Main
  1614 ;;		_CDS_Initialization
  1615 ;;		_CDS_Main
  1616 ;;		_LED_Initialization
  1617 ;;		_LED_Main
  1618 ;;		_Mcu_Initialization
  1619 ;;		_PIR_Initialization
  1620 ;;		_PIR_Main
  1621 ;;		_getCDS_AD
  1622 ;;		_getPIR_AD
  1623 ;;		_myMain_Initialization
  1624 ;;		_my_MainTime
  1625 ;; This function is called by:
  1626 ;;		Startup code after reset
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _main
  1632  00EA                     _main:	
  1633                           
  1634                           ;Main_B1.c: 8: myMain_Initialization();
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1638  00EA  118A  238E  118A   	fcall	_myMain_Initialization
  1639                           
  1640                           ;Main_B1.c: 9: Mcu_Initialization();
  1641  00ED  118A  2342  118A   	fcall	_Mcu_Initialization
  1642                           
  1643                           ;Main_B1.c: 10: ;;
  1644                           ;Main_B1.c: 11: LED_Initialization();
  1645  00F0  118A  235A  118A   	fcall	_LED_Initialization
  1646                           
  1647                           ;Main_B1.c: 12: Buzzer_Initialization();
  1648  00F3  118A  238A  118A   	fcall	_Buzzer_Initialization
  1649                           
  1650                           ;Main_B1.c: 14: ;;
  1651                           ;Main_B1.c: 15: ;;
  1652                           ;Main_B1.c: 16: ;;
  1653                           ;Main_B1.c: 17: ;;
  1654                           ;Main_B1.c: 18: ;;
  1655                           ;Main_B1.c: 20: ;;
  1656                           ;Main_B1.c: 21: ;;
  1657                           ;Main_B1.c: 22: CDS_Initialization();
  1658  00F6  118A  2334  118A   	fcall	_CDS_Initialization
  1659                           
  1660                           ;Main_B1.c: 23: PIR_Initialization();
  1661  00F9  118A  2305  118A   	fcall	_PIR_Initialization
  1662                           
  1663                           ;Main_B1.c: 24: ;;
  1664                           ;Main_B1.c: 25: ;;
  1665                           ;Main_B1.c: 26: __nop();
  1666  00FC  0000               	nop
  1667  00FD                     l1758:	
  1668                           ;Main_B1.c: 27: ;;
  1669                           ;Main_B1.c: 30: while (1) {
  1670                           
  1671                           
  1672                           ;Main_B1.c: 32: if (myMain.PowerON) {
  1673  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1674  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1675  00FF  1C20               	btfss	_myMain,0
  1676  0100  291B               	goto	l1762
  1677                           
  1678                           ;Main_B1.c: 34: ;;
  1679                           ;Main_B1.c: 42: ;;
  1680                           ;Main_B1.c: 50: getCDS_AD(1, 0x09, 0x31);
  1681  0101  3009               	movlw	9
  1682  0102  00E3               	movwf	??_main
  1683  0103  0863               	movf	??_main,w
  1684  0104  00F6               	movwf	getCDS_AD@channel1
  1685  0105  3031               	movlw	49
  1686  0106  00E4               	movwf	??_main+1
  1687  0107  0864               	movf	??_main+1,w
  1688  0108  00F7               	movwf	getCDS_AD@channel2
  1689  0109  3001               	movlw	1
  1690  010A  118A  2262  118A   	fcall	_getCDS_AD
  1691                           
  1692                           ;Main_B1.c: 54: getPIR_AD(1, 0x05, 0x0d);
  1693  010D  3005               	movlw	5
  1694  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1695  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0110  00E3               	movwf	??_main
  1697  0111  0863               	movf	??_main,w
  1698  0112  00F4               	movwf	getPIR_AD@channel1
  1699  0113  300D               	movlw	13
  1700  0114  00E4               	movwf	??_main+1
  1701  0115  0864               	movf	??_main+1,w
  1702  0116  00F5               	movwf	getPIR_AD@charchannel2
  1703  0117  3001               	movlw	1
  1704  0118  118A  238F  118A   	fcall	_getPIR_AD
  1705  011B                     l1762:	
  1706                           
  1707                           ;Main_B1.c: 61: }
  1708                           ;Main_B1.c: 64: if (myMain.T0_Timerout) {
  1709  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1710  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1711  011D  1CA0               	btfss	_myMain,1
  1712  011E  28FD               	goto	l1758
  1713                           
  1714                           ;Main_B1.c: 65: myMain.T0_Timerout = 0;
  1715  011F  10A0               	bcf	_myMain,1
  1716                           
  1717                           ;Main_B1.c: 66: my_MainTime();
  1718  0120  118A  2232  118A   	fcall	_my_MainTime
  1719                           
  1720                           ;Main_B1.c: 67: ;;
  1721                           ;Main_B1.c: 68: ;;
  1722                           ;Main_B1.c: 69: ;;
  1723                           ;Main_B1.c: 70: if (myMain.PowerON) {
  1724  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0125  1C20               	btfss	_myMain,0
  1727  0126  28FD               	goto	l1758
  1728                           
  1729                           ;Main_B1.c: 71: ;;
  1730                           ;Main_B1.c: 73: LED_Main();
  1731  0127  118A  234E  118A   	fcall	_LED_Main
  1732                           
  1733                           ;Main_B1.c: 74: Buzzer_Main();
  1734  012A  118A  217B  118A   	fcall	_Buzzer_Main
  1735                           
  1736                           ;Main_B1.c: 76: ;;
  1737                           ;Main_B1.c: 77: ;;
  1738                           ;Main_B1.c: 78: ;;
  1739                           ;Main_B1.c: 79: ;;
  1740                           ;Main_B1.c: 81: ;;
  1741                           ;Main_B1.c: 82: ;;
  1742                           ;Main_B1.c: 83: ;;
  1743                           ;Main_B1.c: 84: CDS_Main();
  1744  012D  118A  21FE  118A   	fcall	_CDS_Main
  1745                           
  1746                           ;Main_B1.c: 85: PIR_Main();
  1747  0130  118A  2390  118A   	fcall	_PIR_Main
  1748                           
  1749                           ;Main_B1.c: 87: ;;
  1750                           ;Main_B1.c: 88: ;;
  1751                           ;Main_B1.c: 89: ;;
  1752  0133  28FD               	goto	l1758
  1753  0134                     __end_of_main:	
  1754                           ;Main_B1.c: 90: }
  1755                           ;Main_B1.c: 91: }
  1756                           ;Main_B1.c: 109: }
  1757                           ;Main_B1.c: 110: return (0);
  1758                           ;	Return value of _main is never used
  1759                           
  1760                           
  1761                           	psect	text1
  1762  0232                     __ptext1:	
  1763 ;; *************** function _my_MainTime *****************
  1764 ;; Defined at:
  1765 ;;		line 127 in file "../src/Main_B1.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;		None               void
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1779 ;;      Params:         0       0       0       0
  1780 ;;      Locals:         0       0       0       0
  1781 ;;      Temps:          0       0       0       0
  1782 ;;      Totals:         0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    4
  1786 ;; This function calls:
  1787 ;;		_setBuz
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _my_MainTime
  1795  0232                     _my_MainTime:	
  1796                           
  1797                           ;Main_B1.c: 129: if (myMain.PowerON == 0) {
  1798                           
  1799                           ;incstack = 0
  1800                           ; Regs used in _my_MainTime: [wreg+status,2+status,0+pclath+cstack]
  1801  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0234  1820               	btfsc	_myMain,0
  1804  0235  2A4F               	goto	l1736
  1805                           
  1806                           ;Main_B1.c: 130: myMain.PowerCount++;
  1807  0236  3001               	movlw	1
  1808  0237  07A1               	addwf	_myMain+1,f
  1809  0238  1803               	skipnc
  1810  0239  0AA2               	incf	_myMain+2,f
  1811  023A  3000               	movlw	0
  1812  023B  07A2               	addwf	_myMain+2,f
  1813                           
  1814                           ;Main_B1.c: 131: if (myMain.PowerCount == 150)
  1815  023C  3096               	movlw	150
  1816  023D  0621               	xorwf	_myMain+1,w
  1817  023E  0422               	iorwf	_myMain+2,w
  1818  023F  1D03               	skipz
  1819  0240  0008               	return
  1820                           
  1821                           ;Main_B1.c: 132: {
  1822                           ;Main_B1.c: 133: myMain.PowerCount = 0;
  1823  0241  01A1               	clrf	_myMain+1
  1824  0242  01A2               	clrf	_myMain+2
  1825                           
  1826                           ;Main_B1.c: 134: myMain.PowerON = 1;
  1827  0243  1420               	bsf	_myMain,0
  1828                           
  1829                           ;Main_B1.c: 137: ;;
  1830                           ;Main_B1.c: 147: setBuz(3, 50);
  1831  0244  3032               	movlw	50
  1832  0245  00DB               	movwf	setBuz@time
  1833  0246  3000               	movlw	0
  1834  0247  00DC               	movwf	setBuz@time+1
  1835  0248  3003               	movlw	3
  1836  0249  118A  2134         	fcall	_setBuz
  1837                           
  1838                           ;Main_B1.c: 148: myMain.SelfTest = 1;
  1839  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1840  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1841  024D  1720               	bsf	_myMain,6
  1842                           
  1843                           ;Main_B1.c: 157: }
  1844                           ;Main_B1.c: 158: } else {
  1845                           
  1846                           ;Main_B1.c: 150: ;;
  1847  024E  0008               	return
  1848  024F                     l1736:	
  1849                           
  1850                           ;Main_B1.c: 166: myMain.Count1++;
  1851  024F  3001               	movlw	1
  1852  0250  07A5               	addwf	_myMain+5,f
  1853  0251  1803               	skipnc
  1854  0252  0AA6               	incf	_myMain+6,f
  1855  0253  3000               	movlw	0
  1856  0254  07A6               	addwf	_myMain+6,f
  1857                           
  1858                           ;Main_B1.c: 167: if (myMain.Count1 == 100)
  1859  0255  3064               	movlw	100
  1860  0256  0625               	xorwf	_myMain+5,w
  1861  0257  0426               	iorwf	_myMain+6,w
  1862  0258  1D03               	skipz
  1863  0259  0008               	return
  1864                           
  1865                           ;Main_B1.c: 168: {
  1866                           ;Main_B1.c: 169: myMain.Count1 = 0;
  1867  025A  01A5               	clrf	_myMain+5
  1868  025B  01A6               	clrf	_myMain+6
  1869                           
  1870                           ;Main_B1.c: 182: if (myMain.Flag) {
  1871  025C  1DA0               	btfss	_myMain,3
  1872  025D  2A60               	goto	l401
  1873                           
  1874                           ;Main_B1.c: 183: myMain.Flag = 0;
  1875  025E  11A0               	bcf	_myMain,3
  1876                           
  1877                           ;Main_B1.c: 192: } else {
  1878  025F  0008               	return
  1879  0260                     l401:	
  1880                           
  1881                           ;Main_B1.c: 193: myMain.Flag = 1;
  1882  0260  15A0               	bsf	_myMain,3
  1883  0261  0008               	return
  1884  0262                     __end_of_my_MainTime:	
  1885                           
  1886                           	psect	text2
  1887  0134                     __ptext2:	
  1888 ;; *************** function _setBuz *****************
  1889 ;; Defined at:
  1890 ;;		line 22 in file "../src/Buzzer_B1.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  count           1    wreg     unsigned char 
  1893 ;;  time            2    4[BANK0 ] int 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  count           1    7[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;		None               void
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1905 ;;      Params:         0       2       0       0
  1906 ;;      Locals:         0       1       0       0
  1907 ;;      Temps:          0       1       0       0
  1908 ;;      Totals:         0       4       0       0
  1909 ;;Total ram usage:        4 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    3
  1912 ;; This function calls:
  1913 ;;		___awdiv
  1914 ;; This function is called by:
  1915 ;;		_my_MainTime
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _setBuz
  1921  0134                     _setBuz:	
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
  1925                           ;setBuz@count stored from wreg
  1926  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0136  00DE               	movwf	setBuz@count
  1929                           
  1930                           ;Buzzer_B1.c: 23: time /= 10;
  1931  0137  300A               	movlw	10
  1932  0138  00F4               	movwf	___awdiv@divisor
  1933  0139  3000               	movlw	0
  1934  013A  00F5               	movwf	___awdiv@divisor+1
  1935  013B  085C               	movf	setBuz@time+1,w
  1936  013C  01F7               	clrf	___awdiv@dividend+1
  1937  013D  07F7               	addwf	___awdiv@dividend+1,f
  1938  013E  085B               	movf	setBuz@time,w
  1939  013F  01F6               	clrf	___awdiv@dividend
  1940  0140  07F6               	addwf	___awdiv@dividend,f
  1941  0141  118A  208D  118A   	fcall	___awdiv
  1942  0144  0875               	movf	?___awdiv+1,w
  1943  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0147  01DC               	clrf	setBuz@time+1
  1946  0148  07DC               	addwf	setBuz@time+1,f
  1947  0149  0874               	movf	?___awdiv,w
  1948  014A  01DB               	clrf	setBuz@time
  1949  014B  07DB               	addwf	setBuz@time,f
  1950                           
  1951                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
  1952  014C  1C32               	btfss	_Buz1,0
  1953  014D  0008               	return
  1954                           
  1955                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
  1956  014E  18B2               	btfsc	_Buz1,1
  1957  014F  295F               	goto	l30
  1958                           
  1959                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
  1960  0150  14B2               	bsf	_Buz1,1
  1961                           
  1962                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
  1963  0151  01B3               	clrf	_Buz1+1
  1964  0152  01B4               	clrf	_Buz1+2
  1965                           
  1966                           ;Buzzer_B1.c: 28: Buz1.Count = count;
  1967  0153  085E               	movf	setBuz@count,w
  1968  0154  00DD               	movwf	??_setBuz
  1969  0155  085D               	movf	??_setBuz,w
  1970  0156  00B5               	movwf	_Buz1+3
  1971                           
  1972                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
  1973  0157  085C               	movf	setBuz@time+1,w
  1974  0158  01B9               	clrf	_Buz1+7
  1975  0159  07B9               	addwf	_Buz1+7,f
  1976  015A  085B               	movf	setBuz@time,w
  1977  015B  01B8               	clrf	_Buz1+6
  1978  015C  07B8               	addwf	_Buz1+6,f
  1979                           
  1980                           ;Buzzer_B1.c: 30: RB1 = 1;
  1981  015D  1486               	bsf	6,1	;volatile
  1982                           
  1983                           ;Buzzer_B1.c: 31: } else {
  1984  015E  0008               	return
  1985  015F                     l30:	
  1986                           
  1987                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
  1988  015F  19B2               	btfsc	_Buz1,3
  1989  0160  296D               	goto	l32
  1990                           
  1991                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
  1992  0161  15B2               	bsf	_Buz1,3
  1993                           
  1994                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
  1995  0162  085E               	movf	setBuz@count,w
  1996  0163  00DD               	movwf	??_setBuz
  1997  0164  085D               	movf	??_setBuz,w
  1998  0165  00B6               	movwf	_Buz1+4
  1999                           
  2000                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
  2001  0166  085C               	movf	setBuz@time+1,w
  2002  0167  01BB               	clrf	_Buz1+9
  2003  0168  07BB               	addwf	_Buz1+9,f
  2004  0169  085B               	movf	setBuz@time,w
  2005  016A  01BA               	clrf	_Buz1+8
  2006  016B  07BA               	addwf	_Buz1+8,f
  2007                           
  2008                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
  2009  016C  0008               	return
  2010  016D                     l32:	
  2011  016D  1A32               	btfsc	_Buz1,4
  2012  016E  0008               	return
  2013                           
  2014                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
  2015  016F  1632               	bsf	_Buz1,4
  2016                           
  2017                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
  2018  0170  085E               	movf	setBuz@count,w
  2019  0171  00DD               	movwf	??_setBuz
  2020  0172  085D               	movf	??_setBuz,w
  2021  0173  00B7               	movwf	_Buz1+5
  2022                           
  2023                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
  2024  0174  085C               	movf	setBuz@time+1,w
  2025  0175  01BD               	clrf	_Buz1+11
  2026  0176  07BD               	addwf	_Buz1+11,f
  2027  0177  085B               	movf	setBuz@time,w
  2028  0178  01BC               	clrf	_Buz1+10
  2029  0179  07BC               	addwf	_Buz1+10,f
  2030  017A  0008               	return
  2031  017B                     __end_of_setBuz:	
  2032                           
  2033                           	psect	text3
  2034  008D                     __ptext3:	
  2035 ;; *************** function ___awdiv *****************
  2036 ;; Defined at:
  2037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  divisor         2    4[COMMON] int 
  2040 ;;  dividend        2    6[COMMON] int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  quotient        2    2[BANK0 ] int 
  2043 ;;  sign            1    1[BANK0 ] unsigned char 
  2044 ;;  counter         1    0[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    4[COMMON] int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2054 ;;      Params:         4       0       0       0
  2055 ;;      Locals:         0       4       0       0
  2056 ;;      Temps:          1       0       0       0
  2057 ;;      Totals:         5       4       0       0
  2058 ;;Total ram usage:        9 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    2
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_setBuz
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function ___awdiv
  2070  008D                     ___awdiv:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2074  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2075  008E  1303               	bcf	3,6	;RP1=0, select bank0
  2076  008F  01D8               	clrf	___awdiv@sign
  2077  0090  1FF5               	btfss	___awdiv@divisor+1,7
  2078  0091  2899               	goto	l1424
  2079  0092  09F4               	comf	___awdiv@divisor,f
  2080  0093  09F5               	comf	___awdiv@divisor+1,f
  2081  0094  0AF4               	incf	___awdiv@divisor,f
  2082  0095  1903               	skipnz
  2083  0096  0AF5               	incf	___awdiv@divisor+1,f
  2084  0097  01D8               	clrf	___awdiv@sign
  2085  0098  0AD8               	incf	___awdiv@sign,f
  2086  0099                     l1424:	
  2087  0099  1FF7               	btfss	___awdiv@dividend+1,7
  2088  009A  28A4               	goto	l1430
  2089  009B  09F6               	comf	___awdiv@dividend,f
  2090  009C  09F7               	comf	___awdiv@dividend+1,f
  2091  009D  0AF6               	incf	___awdiv@dividend,f
  2092  009E  1903               	skipnz
  2093  009F  0AF7               	incf	___awdiv@dividend+1,f
  2094  00A0  3001               	movlw	1
  2095  00A1  00F8               	movwf	??___awdiv
  2096  00A2  0878               	movf	??___awdiv,w
  2097  00A3  06D8               	xorwf	___awdiv@sign,f
  2098  00A4                     l1430:	
  2099  00A4  01D9               	clrf	___awdiv@quotient
  2100  00A5  01DA               	clrf	___awdiv@quotient+1
  2101  00A6  0875               	movf	___awdiv@divisor+1,w
  2102  00A7  0474               	iorwf	___awdiv@divisor,w
  2103  00A8  1903               	skipnz
  2104  00A9  28DB               	goto	l1452
  2105  00AA  01D7               	clrf	___awdiv@counter
  2106  00AB  0AD7               	incf	___awdiv@counter,f
  2107  00AC                     l1440:	
  2108  00AC  1BF5               	btfsc	___awdiv@divisor+1,7
  2109  00AD  28BA               	goto	l1442
  2110  00AE  3001               	movlw	1
  2111  00AF                     u845:	
  2112  00AF  1003               	clrc
  2113  00B0  0DF4               	rlf	___awdiv@divisor,f
  2114  00B1  0DF5               	rlf	___awdiv@divisor+1,f
  2115  00B2  3EFF               	addlw	-1
  2116  00B3  1D03               	skipz
  2117  00B4  28AF               	goto	u845
  2118  00B5  3001               	movlw	1
  2119  00B6  00F8               	movwf	??___awdiv
  2120  00B7  0878               	movf	??___awdiv,w
  2121  00B8  07D7               	addwf	___awdiv@counter,f
  2122  00B9  28AC               	goto	l1440
  2123  00BA                     l1442:	
  2124  00BA  3001               	movlw	1
  2125  00BB                     u865:	
  2126  00BB  1003               	clrc
  2127  00BC  0DD9               	rlf	___awdiv@quotient,f
  2128  00BD  0DDA               	rlf	___awdiv@quotient+1,f
  2129  00BE  3EFF               	addlw	-1
  2130  00BF  1D03               	skipz
  2131  00C0  28BB               	goto	u865
  2132  00C1  0875               	movf	___awdiv@divisor+1,w
  2133  00C2  0277               	subwf	___awdiv@dividend+1,w
  2134  00C3  1D03               	skipz
  2135  00C4  28C7               	goto	u875
  2136  00C5  0874               	movf	___awdiv@divisor,w
  2137  00C6  0276               	subwf	___awdiv@dividend,w
  2138  00C7                     u875:	
  2139  00C7  1C03               	skipc
  2140  00C8  28D0               	goto	l1448
  2141  00C9  0874               	movf	___awdiv@divisor,w
  2142  00CA  02F6               	subwf	___awdiv@dividend,f
  2143  00CB  0875               	movf	___awdiv@divisor+1,w
  2144  00CC  1C03               	skipc
  2145  00CD  03F7               	decf	___awdiv@dividend+1,f
  2146  00CE  02F7               	subwf	___awdiv@dividend+1,f
  2147  00CF  1459               	bsf	___awdiv@quotient,0
  2148  00D0                     l1448:	
  2149  00D0  3001               	movlw	1
  2150  00D1                     u885:	
  2151  00D1  1003               	clrc
  2152  00D2  0CF5               	rrf	___awdiv@divisor+1,f
  2153  00D3  0CF4               	rrf	___awdiv@divisor,f
  2154  00D4  3EFF               	addlw	-1
  2155  00D5  1D03               	skipz
  2156  00D6  28D1               	goto	u885
  2157  00D7  3001               	movlw	1
  2158  00D8  02D7               	subwf	___awdiv@counter,f
  2159  00D9  1D03               	btfss	3,2
  2160  00DA  28BA               	goto	l1442
  2161  00DB                     l1452:	
  2162  00DB  0858               	movf	___awdiv@sign,w
  2163  00DC  1903               	btfsc	3,2
  2164  00DD  28E3               	goto	l1456
  2165  00DE  09D9               	comf	___awdiv@quotient,f
  2166  00DF  09DA               	comf	___awdiv@quotient+1,f
  2167  00E0  0AD9               	incf	___awdiv@quotient,f
  2168  00E1  1903               	skipnz
  2169  00E2  0ADA               	incf	___awdiv@quotient+1,f
  2170  00E3                     l1456:	
  2171  00E3  085A               	movf	___awdiv@quotient+1,w
  2172  00E4  01F5               	clrf	?___awdiv+1
  2173  00E5  07F5               	addwf	?___awdiv+1,f
  2174  00E6  0859               	movf	___awdiv@quotient,w
  2175  00E7  01F4               	clrf	?___awdiv
  2176  00E8  07F4               	addwf	?___awdiv,f
  2177  00E9  0008               	return
  2178  00EA                     __end_of___awdiv:	
  2179                           
  2180                           	psect	text4
  2181  038E                     __ptext4:	
  2182 ;; *************** function _myMain_Initialization *****************
  2183 ;; Defined at:
  2184 ;;		line 115 in file "../src/Main_B1.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		None
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2198 ;;      Params:         0       0       0       0
  2199 ;;      Locals:         0       0       0       0
  2200 ;;      Temps:          0       0       0       0
  2201 ;;      Totals:         0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _myMain_Initialization
  2214  038E                     _myMain_Initialization:	
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _myMain_Initialization: []
  2218  038E  0008               	return
  2219  038F                     __end_of_myMain_Initialization:	
  2220                           
  2221                           	psect	text5
  2222  038F                     __ptext5:	
  2223 ;; *************** function _getPIR_AD *****************
  2224 ;; Defined at:
  2225 ;;		line 21 in file "../src/PIR_B1.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  pir             1    wreg     unsigned char 
  2228 ;;  channel1        1    4[COMMON] unsigned char 
  2229 ;;  charchannel2    1    5[COMMON] unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  pir             1    0[COMMON] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;		None               void
  2234 ;; Registers used:
  2235 ;;		wreg
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         2       0       0       0
  2242 ;;      Locals:         0       0       0       0
  2243 ;;      Temps:          0       0       0       0
  2244 ;;      Totals:         2       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    2
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _getPIR_AD
  2257  038F                     _getPIR_AD:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _getPIR_AD: [wreg]
  2261  038F  0008               	return
  2262  0390                     __end_of_getPIR_AD:	
  2263                           
  2264                           	psect	text6
  2265  0262                     __ptext6:	
  2266 ;; *************** function _getCDS_AD *****************
  2267 ;; Defined at:
  2268 ;;		line 56 in file "../src/CDS_B1.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  cds             1    wreg     unsigned char 
  2271 ;;  channel1        1    6[COMMON] unsigned char 
  2272 ;;  channel2        1    7[COMMON] unsigned char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  cds             1    0[COMMON] unsigned char 
  2275 ;;  j               1    3[BANK0 ] unsigned char 
  2276 ;;  i               1    2[BANK0 ] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2286 ;;      Params:         2       0       0       0
  2287 ;;      Locals:         0       2       0       0
  2288 ;;      Temps:          0       2       0       0
  2289 ;;      Totals:         2       4       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    4
  2293 ;; This function calls:
  2294 ;;		_getAD
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _getCDS_AD
  2302  0262                     _getCDS_AD:	
  2303                           
  2304                           ;CDS_B1.c: 58: char i=0,j=0;
  2305                           
  2306                           ;incstack = 0
  2307                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2308  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0264  01D9               	clrf	getCDS_AD@i
  2311  0265  01DA               	clrf	getCDS_AD@j
  2312                           
  2313                           ;CDS_B1.c: 60: if(_CDS.ADtoGO)
  2314  0266  1DC6               	btfss	__CDS,3
  2315  0267  0008               	return
  2316                           
  2317                           ;CDS_B1.c: 61: {
  2318                           ;CDS_B1.c: 62: _CDS.ADtoGO=0;
  2319  0268  11C6               	bcf	__CDS,3
  2320                           
  2321                           ;CDS_B1.c: 63: _CDS.GO=1;
  2322  0269  14C6               	bsf	__CDS,1
  2323                           
  2324                           ;CDS_B1.c: 64: _CDS.ADRES=getAD(channel1,0x70);
  2325  026A  3070               	movlw	112
  2326  026B  00D7               	movwf	??_getCDS_AD
  2327  026C  0857               	movf	??_getCDS_AD,w
  2328  026D  00F4               	movwf	getAD@adcon1
  2329  026E  0876               	movf	getCDS_AD@channel1,w
  2330  026F  118A  228C  118A   	fcall	_getAD
  2331  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0274  00D8               	movwf	??_getCDS_AD+1
  2334  0275  0858               	movf	??_getCDS_AD+1,w
  2335  0276  00CA               	movwf	__CDS+4
  2336                           
  2337                           ;CDS_B1.c: 65: _CDS.VRAD=_CDS.ADRES;
  2338  0277  084A               	movf	__CDS+4,w
  2339  0278  00D7               	movwf	??_getCDS_AD
  2340  0279  0857               	movf	??_getCDS_AD,w
  2341  027A  00C8               	movwf	__CDS+2
  2342                           
  2343                           ;CDS_B1.c: 66: _CDS.ADRES=getAD(channel2,0x70);
  2344  027B  3070               	movlw	112
  2345  027C  00D7               	movwf	??_getCDS_AD
  2346  027D  0857               	movf	??_getCDS_AD,w
  2347  027E  00F4               	movwf	getAD@adcon1
  2348  027F  0877               	movf	getCDS_AD@channel2,w
  2349  0280  118A  228C         	fcall	_getAD
  2350  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0284  00D8               	movwf	??_getCDS_AD+1
  2353  0285  0858               	movf	??_getCDS_AD+1,w
  2354  0286  00CA               	movwf	__CDS+4
  2355                           
  2356                           ;CDS_B1.c: 67: _CDS.SignalAD=_CDS.ADRES;
  2357  0287  084A               	movf	__CDS+4,w
  2358  0288  00D7               	movwf	??_getCDS_AD
  2359  0289  0857               	movf	??_getCDS_AD,w
  2360  028A  00C9               	movwf	__CDS+3
  2361  028B  0008               	return
  2362  028C                     __end_of_getCDS_AD:	
  2363                           
  2364                           	psect	text7
  2365  028C                     __ptext7:	
  2366 ;; *************** function _getAD *****************
  2367 ;; Defined at:
  2368 ;;		line 323 in file "../src/MCU_B1.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  adcon0          1    wreg     unsigned char 
  2371 ;;  adcon1          1    4[COMMON] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  adcon0          1    5[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2383 ;;      Params:         1       0       0       0
  2384 ;;      Locals:         1       0       0       0
  2385 ;;      Temps:          0       0       0       0
  2386 ;;      Totals:         2       0       0       0
  2387 ;;Total ram usage:        2 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    3
  2390 ;; This function calls:
  2391 ;;		_Timeout_Counter
  2392 ;;		_set_TimeoutCleared
  2393 ;; This function is called by:
  2394 ;;		_getCDS_AD
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _getAD
  2400  028C                     _getAD:	
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2404                           ;getAD@adcon0 stored from wreg
  2405  028C  00F5               	movwf	getAD@adcon0
  2406                           
  2407                           ;MCU_B1.c: 324: ADCON0 = adcon0;
  2408  028D  0875               	movf	getAD@adcon0,w
  2409  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2410  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0290  009F               	movwf	31	;volatile
  2412                           
  2413                           ;MCU_B1.c: 325: ADCON1 = adcon1;
  2414  0291  0874               	movf	getAD@adcon1,w
  2415  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2417  0294  009F               	movwf	31	;volatile
  2418                           
  2419                           ;MCU_B1.c: 326: GO_nDONE = 1;
  2420  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0297  149F               	bsf	31,1	;volatile
  2423                           
  2424                           ;MCU_B1.c: 327: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2425  0298  2A9C               	goto	l1494
  2426  0299                     l1492:	
  2427                           
  2428                           ;MCU_B1.c: 328: Timeout_Counter();
  2429  0299  118A  22F1  118A   	fcall	_Timeout_Counter
  2430  029C                     l1494:	
  2431  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2432  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2433  029E  1C9F               	btfss	31,1	;volatile
  2434  029F  2AA2               	goto	l1498
  2435  02A0  1D2F               	btfss	_myMain+15,2
  2436  02A1  2A99               	goto	l1492
  2437  02A2                     l1498:	
  2438                           
  2439                           ;MCU_B1.c: 329: };
  2440                           ;MCU_B1.c: 330: set_TimeoutCleared();
  2441  02A2  118A  237F         	fcall	_set_TimeoutCleared
  2442                           
  2443                           ;MCU_B1.c: 331: return ADRES;
  2444  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2445  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2446  02A6  081E               	movf	30,w	;volatile
  2447  02A7  0008               	return
  2448  02A8                     __end_of_getAD:	
  2449                           
  2450                           	psect	text8
  2451  037F                     __ptext8:	
  2452 ;; *************** function _set_TimeoutCleared *****************
  2453 ;; Defined at:
  2454 ;;		line 217 in file "../src/Main_B1.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		status,2
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       0       0       0
  2470 ;;      Temps:          0       0       0       0
  2471 ;;      Totals:         0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    2
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_getAD
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _set_TimeoutCleared
  2484  037F                     _set_TimeoutCleared:	
  2485                           
  2486                           ;Main_B1.c: 218: myMain.Timeout = 0;
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _set_TimeoutCleared: [status,2]
  2490  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0381  112F               	bcf	_myMain+15,2
  2493                           
  2494                           ;Main_B1.c: 219: myMain.Timeout_Counter = 0;
  2495  0382  01B0               	clrf	_myMain+16
  2496  0383  01B1               	clrf	_myMain+17
  2497  0384  0008               	return
  2498  0385                     __end_of_set_TimeoutCleared:	
  2499                           
  2500                           	psect	text9
  2501  02F1                     __ptext9:	
  2502 ;; *************** function _Timeout_Counter *****************
  2503 ;; Defined at:
  2504 ;;		line 208 in file "../src/Main_B1.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2518 ;;      Params:         0       0       0       0
  2519 ;;      Locals:         0       0       0       0
  2520 ;;      Temps:          0       0       0       0
  2521 ;;      Totals:         0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_getAD
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _Timeout_Counter
  2534  02F1                     _Timeout_Counter:	
  2535                           
  2536                           ;Main_B1.c: 209: myMain.Timeout_Counter++;
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  2540  02F1  3001               	movlw	1
  2541  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2542  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2543  02F4  07B0               	addwf	_myMain+16,f
  2544  02F5  1803               	skipnc
  2545  02F6  0AB1               	incf	_myMain+17,f
  2546  02F7  3000               	movlw	0
  2547  02F8  07B1               	addwf	_myMain+17,f
  2548                           
  2549                           ;Main_B1.c: 210: if (myMain.Timeout_Counter == 10000) {
  2550  02F9  3027               	movlw	39
  2551  02FA  0631               	xorwf	_myMain+17,w
  2552  02FB  1D03               	skipz
  2553  02FC  2AFF               	goto	u805
  2554  02FD  3010               	movlw	16
  2555  02FE  0630               	xorwf	_myMain+16,w
  2556  02FF                     u805:	
  2557  02FF  1D03               	skipz
  2558  0300  0008               	return
  2559                           
  2560                           ;Main_B1.c: 211: myMain.Timeout_Counter = 0;
  2561  0301  01B0               	clrf	_myMain+16
  2562  0302  01B1               	clrf	_myMain+17
  2563                           
  2564                           ;Main_B1.c: 212: myMain.Timeout = 1;
  2565  0303  152F               	bsf	_myMain+15,2
  2566  0304  0008               	return
  2567  0305                     __end_of_Timeout_Counter:	
  2568                           
  2569                           	psect	text10
  2570  0390                     __ptext10:	
  2571 ;; *************** function _PIR_Main *****************
  2572 ;; Defined at:
  2573 ;;		line 18 in file "../src/PIR_B1.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;		None               void
  2580 ;; Registers used:
  2581 ;;		None
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2587 ;;      Params:         0       0       0       0
  2588 ;;      Locals:         0       0       0       0
  2589 ;;      Temps:          0       0       0       0
  2590 ;;      Totals:         0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _PIR_Main
  2603  0390                     _PIR_Main:	
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _PIR_Main: []
  2607  0390  0008               	return
  2608  0391                     __end_of_PIR_Main:	
  2609                           
  2610                           	psect	text11
  2611  0305                     __ptext11:	
  2612 ;; *************** function _PIR_Initialization *****************
  2613 ;; Defined at:
  2614 ;;		line 11 in file "../src/PIR_B1.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;		None               void
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2628 ;;      Params:         0       0       0       0
  2629 ;;      Locals:         0       0       0       0
  2630 ;;      Temps:          1       0       0       0
  2631 ;;      Totals:         1       0       0       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		_setLED
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _PIR_Initialization
  2644  0305                     _PIR_Initialization:	
  2645                           
  2646                           ;PIR_B1.c: 13: _PIR.Enable=1;
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2650  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0307  1420               	bsf	__PIR^(0+128),0
  2653                           
  2654                           ;PIR_B1.c: 14: _PIR.RangeValue=8;
  2655  0308  3008               	movlw	8
  2656  0309  00F8               	movwf	??_PIR_Initialization
  2657  030A  0878               	movf	??_PIR_Initialization,w
  2658  030B  00CC               	movwf	(__PIR^(0+128)+44)
  2659                           
  2660                           ;PIR_B1.c: 15: _PIR.CloseTimeValue=150;
  2661  030C  3096               	movlw	150
  2662  030D  00C6               	movwf	(__PIR^(0+128)+38)
  2663  030E  3000               	movlw	0
  2664  030F  00C7               	movwf	(__PIR^(0+128)+39)
  2665                           
  2666                           ;PIR_B1.c: 16: setLED(1,1);
  2667  0310  01F6               	clrf	setLED@command
  2668  0311  0AF6               	incf	setLED@command,f
  2669  0312  3001               	movlw	1
  2670  0313  118A  2023         	fcall	_setLED
  2671  0315  0008               	return
  2672  0316                     __end_of_PIR_Initialization:	
  2673                           
  2674                           	psect	text12
  2675  0342                     __ptext12:	
  2676 ;; *************** function _Mcu_Initialization *****************
  2677 ;; Defined at:
  2678 ;;		line 30 in file "../src/MCU_B1.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2692 ;;      Params:         0       0       0       0
  2693 ;;      Locals:         0       0       0       0
  2694 ;;      Temps:          0       0       0       0
  2695 ;;      Totals:         0       0       0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    3
  2699 ;; This function calls:
  2700 ;;		_ADC_Set
  2701 ;;		_Fosc_Set
  2702 ;;		_IO_Set
  2703 ;;		_TMR0_Set
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _Mcu_Initialization
  2711  0342                     _Mcu_Initialization:	
  2712                           
  2713                           ;MCU_B1.c: 32: Fosc_Set();
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  2717  0342  118A  2385  118A   	fcall	_Fosc_Set
  2718                           
  2719                           ;MCU_B1.c: 34: IO_Set();
  2720  0345  118A  22DC  118A   	fcall	_IO_Set
  2721                           
  2722                           ;MCU_B1.c: 36: TMR0_Set();
  2723  0348  118A  2366  118A   	fcall	_TMR0_Set
  2724                           
  2725                           ;MCU_B1.c: 38: ;;
  2726                           ;MCU_B1.c: 40: ADC_Set();
  2727  034B  118A  2378         	fcall	_ADC_Set
  2728  034D  0008               	return
  2729  034E                     __end_of_Mcu_Initialization:	
  2730                           
  2731                           	psect	text13
  2732  0366                     __ptext13:	
  2733 ;; *************** function _TMR0_Set *****************
  2734 ;; Defined at:
  2735 ;;		line 126 in file "../src/MCU_B1.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;		None               void
  2742 ;; Registers used:
  2743 ;;		wreg, status,2
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2749 ;;      Params:         0       0       0       0
  2750 ;;      Locals:         0       0       0       0
  2751 ;;      Temps:          0       0       0       0
  2752 ;;      Totals:         0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    2
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_Mcu_Initialization
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           
  2764                           ;psect for function _TMR0_Set
  2765  0366                     _TMR0_Set:	
  2766                           
  2767                           ;MCU_B1.c: 128: OPTION_REG = 0x00;
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _TMR0_Set: [wreg+status,2]
  2771  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0368  0181               	clrf	1	;volatile
  2774                           
  2775                           ;MCU_B1.c: 129: TMR0 = (256-190);
  2776  0369  3042               	movlw	66
  2777  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2778  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2779  036C  0081               	movwf	1	;volatile
  2780                           
  2781                           ;MCU_B1.c: 130: TMR0IE = 1;
  2782  036D  168B               	bsf	11,5	;volatile
  2783                           
  2784                           ;MCU_B1.c: 131: GIE = 1;
  2785  036E  178B               	bsf	11,7	;volatile
  2786  036F  0008               	return
  2787  0370                     __end_of_TMR0_Set:	
  2788                           
  2789                           	psect	text14
  2790  02DC                     __ptext14:	
  2791 ;; *************** function _IO_Set *****************
  2792 ;; Defined at:
  2793 ;;		line 60 in file "../src/MCU_B1.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;		None               void
  2800 ;; Registers used:
  2801 ;;		wreg, status,2
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2807 ;;      Params:         0       0       0       0
  2808 ;;      Locals:         0       0       0       0
  2809 ;;      Temps:          0       0       0       0
  2810 ;;      Totals:         0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_Mcu_Initialization
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _IO_Set
  2823  02DC                     _IO_Set:	
  2824                           
  2825                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _IO_Set: [wreg+status,2]
  2829  02DC  302F               	movlw	47
  2830  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2831  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2832  02DF  0085               	movwf	5	;volatile
  2833                           
  2834                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  2835  02E0  3001               	movlw	1
  2836  02E1  0086               	movwf	6	;volatile
  2837                           
  2838                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  2839  02E2  0187               	clrf	7	;volatile
  2840                           
  2841                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  2842  02E3  3007               	movlw	7
  2843  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  2844  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  2845  02E6  0085               	movwf	5	;volatile
  2846                           
  2847                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  2848  02E7  3001               	movlw	1
  2849  02E8  0086               	movwf	6	;volatile
  2850                           
  2851                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  2852  02E9  30AF               	movlw	175
  2853  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2854  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2855  02EC  0085               	movwf	5	;volatile
  2856                           
  2857                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  2858  02ED  3001               	movlw	1
  2859  02EE  0086               	movwf	6	;volatile
  2860                           
  2861                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  2862  02EF  0187               	clrf	7	;volatile
  2863  02F0  0008               	return
  2864  02F1                     __end_of_IO_Set:	
  2865                           
  2866                           	psect	text15
  2867  0385                     __ptext15:	
  2868 ;; *************** function _Fosc_Set *****************
  2869 ;; Defined at:
  2870 ;;		line 56 in file "../src/MCU_B1.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2884 ;;      Params:         0       0       0       0
  2885 ;;      Locals:         0       0       0       0
  2886 ;;      Temps:          0       0       0       0
  2887 ;;      Totals:         0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_Mcu_Initialization
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _Fosc_Set
  2900  0385                     _Fosc_Set:	
  2901                           
  2902                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _Fosc_Set: [wreg]
  2906  0385  303C               	movlw	60
  2907  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2908  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2909  0388  0090               	movwf	16	;volatile
  2910  0389  0008               	return
  2911  038A                     __end_of_Fosc_Set:	
  2912                           
  2913                           	psect	text16
  2914  0378                     __ptext16:	
  2915 ;; *************** function _ADC_Set *****************
  2916 ;; Defined at:
  2917 ;;		line 316 in file "../src/MCU_B1.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;		None               void
  2924 ;; Registers used:
  2925 ;;		wreg
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2931 ;;      Params:         0       0       0       0
  2932 ;;      Locals:         0       0       0       0
  2933 ;;      Temps:          0       0       0       0
  2934 ;;      Totals:         0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_Mcu_Initialization
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _ADC_Set
  2947  0378                     _ADC_Set:	
  2948                           
  2949                           ;MCU_B1.c: 317: ADCON1 = 0x72;
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _ADC_Set: [wreg]
  2953  0378  3072               	movlw	114
  2954  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2955  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2956  037B  009F               	movwf	31	;volatile
  2957                           
  2958                           ;MCU_B1.c: 318: FVRCON = 0xc1;
  2959  037C  30C1               	movlw	193
  2960  037D  009D               	movwf	29	;volatile
  2961  037E  0008               	return
  2962  037F                     __end_of_ADC_Set:	
  2963                           
  2964                           	psect	text17
  2965  034E                     __ptext17:	
  2966 ;; *************** function _LED_Main *****************
  2967 ;; Defined at:
  2968 ;;		line 47 in file "../src/LED_B1.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2982 ;;      Params:         0       0       0       0
  2983 ;;      Locals:         0       0       0       0
  2984 ;;      Temps:          0       0       0       0
  2985 ;;      Totals:         0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    4
  2989 ;; This function calls:
  2990 ;;		_setLED_Main
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _LED_Main
  2998  034E                     _LED_Main:	
  2999                           
  3000                           ;LED_B1.c: 49: setLED_Main(1);
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3004  034E  3001               	movlw	1
  3005  034F  118A  21BF  118A   	fcall	_setLED_Main
  3006                           
  3007                           ;LED_B1.c: 52: setLED_Main(2);
  3008  0352  3002               	movlw	2
  3009  0353  118A  21BF  118A   	fcall	_setLED_Main
  3010                           
  3011                           ;LED_B1.c: 58: setLED_Main(99);
  3012  0356  3063               	movlw	99
  3013  0357  118A  21BF         	fcall	_setLED_Main
  3014  0359  0008               	return
  3015  035A                     __end_of_LED_Main:	
  3016                           
  3017                           	psect	text18
  3018  01BF                     __ptext18:	
  3019 ;; *************** function _setLED_Main *****************
  3020 ;; Defined at:
  3021 ;;		line 192 in file "../src/LED_B1.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  led             1    wreg     unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  led             1    8[COMMON] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3035 ;;      Params:         0       0       0       0
  3036 ;;      Locals:         1       0       0       0
  3037 ;;      Temps:          2       0       0       0
  3038 ;;      Totals:         3       0       0       0
  3039 ;;Total ram usage:        3 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    3
  3042 ;; This function calls:
  3043 ;;		_LedPointSelect
  3044 ;; This function is called by:
  3045 ;;		_LED_Main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _setLED_Main
  3051  01BF                     _setLED_Main:	
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3055                           ;setLED_Main@led stored from wreg
  3056  01BF  00F8               	movwf	setLED_Main@led
  3057                           
  3058                           ;LED_B1.c: 193: LedPointSelect(led);
  3059  01C0  0878               	movf	setLED_Main@led,w
  3060  01C1  118A  22A8  118A   	fcall	_LedPointSelect
  3061                           
  3062                           ;LED_B1.c: 194: if (LED->GO == 1) {
  3063  01C4  0879               	movf	_LED,w
  3064  01C5  0084               	movwf	4
  3065  01C6  1383               	bcf	3,7	;select IRP bank0
  3066  01C7  1C80               	btfss	0,1
  3067  01C8  0008               	return
  3068                           
  3069                           ;LED_B1.c: 195: LED->Time++;
  3070  01C9  0A79               	incf	_LED,w
  3071  01CA  0084               	movwf	4
  3072  01CB  3001               	movlw	1
  3073  01CC  0780               	addwf	0,f
  3074  01CD  0A84               	incf	4,f
  3075  01CE  1803               	skipnc
  3076  01CF  0A80               	incf	0,f
  3077                           
  3078                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
  3079  01D0  0A79               	incf	_LED,w
  3080  01D1  0084               	movwf	4
  3081  01D2  0800               	movf	0,w
  3082  01D3  00F6               	movwf	??_setLED_Main
  3083  01D4  0A84               	incf	4,f
  3084  01D5  0800               	movf	0,w
  3085  01D6  00F7               	movwf	??_setLED_Main+1
  3086  01D7  3000               	movlw	0
  3087  01D8  0277               	subwf	??_setLED_Main+1,w
  3088  01D9  3032               	movlw	50
  3089  01DA  1903               	skipnz
  3090  01DB  0276               	subwf	??_setLED_Main,w
  3091  01DC  1C03               	skipc
  3092  01DD  0008               	return
  3093                           
  3094                           ;LED_B1.c: 197: LED->Time = 0;
  3095  01DE  0A79               	incf	_LED,w
  3096  01DF  0084               	movwf	4
  3097  01E0  0180               	clrf	0
  3098  01E1  0A84               	incf	4,f
  3099  01E2  0180               	clrf	0
  3100                           
  3101                           ;LED_B1.c: 199: if (led == 1) {
  3102  01E3  0878               	movf	setLED_Main@led,w
  3103  01E4  3A01               	xorlw	1
  3104  01E5  1D03               	skipz
  3105  01E6  29EC               	goto	l1524
  3106                           
  3107                           ;LED_B1.c: 200: RB4 = RB4 == 1 ? 0 : 1;
  3108  01E7  3010               	movlw	16
  3109  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3110  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3111  01EA  0686               	xorwf	6,f
  3112                           
  3113                           ;LED_B1.c: 201: }
  3114  01EB  0008               	return
  3115  01EC                     l1524:	
  3116                           
  3117                           ;LED_B1.c: 204: else if (led == 2) {
  3118  01EC  0878               	movf	setLED_Main@led,w
  3119  01ED  3A02               	xorlw	2
  3120  01EE  1D03               	skipz
  3121  01EF  29F5               	goto	l1528
  3122                           
  3123                           ;LED_B1.c: 205: RB5 = RB5 == 1 ? 0 : 1;
  3124  01F0  3020               	movlw	32
  3125  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3126  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3127  01F3  0686               	xorwf	6,f
  3128                           
  3129                           ;LED_B1.c: 206: }
  3130  01F4  0008               	return
  3131  01F5                     l1528:	
  3132                           
  3133                           ;LED_B1.c: 214: else if (led == 99) {
  3134  01F5  0878               	movf	setLED_Main@led,w
  3135  01F6  3A63               	xorlw	99
  3136  01F7  1D03               	skipz
  3137  01F8  0008               	return
  3138                           
  3139                           ;LED_B1.c: 215: RB3 = RB3 == 1 ? 0 : 1;
  3140  01F9  3008               	movlw	8
  3141  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3142  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  3143  01FC  0686               	xorwf	6,f
  3144  01FD  0008               	return
  3145  01FE                     __end_of_setLED_Main:	
  3146                           
  3147                           	psect	text19
  3148  035A                     __ptext19:	
  3149 ;; *************** function _LED_Initialization *****************
  3150 ;; Defined at:
  3151 ;;		line 31 in file "../src/LED_B1.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3165 ;;      Params:         0       0       0       0
  3166 ;;      Locals:         0       0       0       0
  3167 ;;      Temps:          0       0       0       0
  3168 ;;      Totals:         0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    5
  3172 ;; This function calls:
  3173 ;;		_setLED_Initialization
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _LED_Initialization
  3181  035A                     _LED_Initialization:	
  3182                           
  3183                           ;LED_B1.c: 33: setLED_Initialization(1);
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3187  035A  3001               	movlw	1
  3188  035B  118A  2326  118A   	fcall	_setLED_Initialization
  3189                           
  3190                           ;LED_B1.c: 36: setLED_Initialization(2);
  3191  035E  3002               	movlw	2
  3192  035F  118A  2326  118A   	fcall	_setLED_Initialization
  3193                           
  3194                           ;LED_B1.c: 42: setLED_Initialization(99);
  3195  0362  3063               	movlw	99
  3196  0363  118A  2326         	fcall	_setLED_Initialization
  3197  0365  0008               	return
  3198  0366                     __end_of_LED_Initialization:	
  3199                           
  3200                           	psect	text20
  3201  0326                     __ptext20:	
  3202 ;; *************** function _setLED_Initialization *****************
  3203 ;; Defined at:
  3204 ;;		line 63 in file "../src/LED_B1.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  led             1    wreg     unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  led             1    8[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;		None               void
  3211 ;; Registers used:
  3212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3218 ;;      Params:         0       0       0       0
  3219 ;;      Locals:         1       0       0       0
  3220 ;;      Temps:          0       0       0       0
  3221 ;;      Totals:         1       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    4
  3225 ;; This function calls:
  3226 ;;		_LedPointSelect
  3227 ;;		_setLED
  3228 ;; This function is called by:
  3229 ;;		_LED_Initialization
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           
  3234                           ;psect for function _setLED_Initialization
  3235  0326                     _setLED_Initialization:	
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3239                           ;setLED_Initialization@led stored from wreg
  3240  0326  00F8               	movwf	setLED_Initialization@led
  3241                           
  3242                           ;LED_B1.c: 64: LedPointSelect(led);
  3243  0327  0878               	movf	setLED_Initialization@led,w
  3244  0328  118A  22A8  118A   	fcall	_LedPointSelect
  3245                           
  3246                           ;LED_B1.c: 65: LED->Enable = 1;
  3247  032B  0879               	movf	_LED,w
  3248  032C  0084               	movwf	4
  3249  032D  1383               	bcf	3,7	;select IRP bank0
  3250  032E  1400               	bsf	0,0
  3251                           
  3252                           ;LED_B1.c: 66: setLED(led, 0);
  3253  032F  01F6               	clrf	setLED@command
  3254  0330  0878               	movf	setLED_Initialization@led,w
  3255  0331  118A  2023         	fcall	_setLED
  3256  0333  0008               	return
  3257  0334                     __end_of_setLED_Initialization:	
  3258                           
  3259                           	psect	text21
  3260  01FE                     __ptext21:	
  3261 ;; *************** function _CDS_Main *****************
  3262 ;; Defined at:
  3263 ;;		line 13 in file "../src/CDS_B1.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;		None               void
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       0       0       0
  3278 ;;      Locals:         0       0       0       0
  3279 ;;      Temps:          3       0       0       0
  3280 ;;      Totals:         3       0       0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    2
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _CDS_Main
  3293  01FE                     _CDS_Main:	
  3294                           
  3295                           ;CDS_B1.c: 16: if(_CDS.Enable)
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  3299  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3300  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0200  1C46               	btfss	__CDS,0
  3302  0201  0008               	return
  3303                           
  3304                           ;CDS_B1.c: 17: {
  3305                           ;CDS_B1.c: 18: if(!_CDS.GO)
  3306  0202  18C6               	btfsc	__CDS,1
  3307  0203  2A11               	goto	l100
  3308                           
  3309                           ;CDS_B1.c: 19: {
  3310                           ;CDS_B1.c: 20: if(!_CDS.ADtoGO)
  3311  0204  19C6               	btfsc	__CDS,3
  3312  0205  0008               	return
  3313                           
  3314                           ;CDS_B1.c: 21: {
  3315                           ;CDS_B1.c: 22: _CDS.Time++;
  3316  0206  3001               	movlw	1
  3317  0207  00F4               	movwf	??_CDS_Main
  3318  0208  0874               	movf	??_CDS_Main,w
  3319  0209  07C7               	addwf	__CDS+1,f
  3320                           
  3321                           ;CDS_B1.c: 23: if(_CDS.Time >= 100)
  3322  020A  3064               	movlw	100
  3323  020B  0247               	subwf	__CDS+1,w
  3324  020C  1C03               	skipc
  3325  020D  0008               	return
  3326                           
  3327                           ;CDS_B1.c: 24: {
  3328                           ;CDS_B1.c: 25: _CDS.Time=0;
  3329  020E  01C7               	clrf	__CDS+1
  3330                           
  3331                           ;CDS_B1.c: 26: _CDS.ADtoGO=1;
  3332  020F  15C6               	bsf	__CDS,3
  3333                           
  3334                           ;CDS_B1.c: 27: }
  3335                           ;CDS_B1.c: 28: }
  3336                           ;CDS_B1.c: 29: }
  3337  0210  0008               	return
  3338  0211                     l100:	
  3339                           
  3340                           ;CDS_B1.c: 30: else
  3341                           ;CDS_B1.c: 31: {
  3342                           ;CDS_B1.c: 32: _CDS.GO=0;
  3343  0211  10C6               	bcf	__CDS,1
  3344                           
  3345                           ;CDS_B1.c: 33: if(_CDS.High)
  3346  0212  1E46               	btfss	__CDS,4
  3347  0213  2A1B               	goto	l1584
  3348                           
  3349                           ;CDS_B1.c: 34: {
  3350                           ;CDS_B1.c: 35: if(_CDS.SignalAD >= _CDS.VRAD)
  3351  0214  0848               	movf	__CDS+2,w
  3352  0215  0249               	subwf	__CDS+3,w
  3353  0216  1C03               	skipc
  3354  0217  0008               	return
  3355                           
  3356                           ;CDS_B1.c: 36: {
  3357                           ;CDS_B1.c: 37: _CDS.High=0;
  3358  0218  1246               	bcf	__CDS,4
  3359                           
  3360                           ;CDS_B1.c: 38: RB3=0;
  3361  0219  1186               	bcf	6,3	;volatile
  3362                           
  3363                           ;CDS_B1.c: 41: }
  3364                           ;CDS_B1.c: 42: }
  3365                           
  3366                           ;CDS_B1.c: 39: ;;
  3367                           ;CDS_B1.c: 40: ;;
  3368  021A  0008               	return
  3369  021B                     l1584:	
  3370                           
  3371                           ;CDS_B1.c: 43: else
  3372                           ;CDS_B1.c: 44: {
  3373                           ;CDS_B1.c: 45: if(_CDS.SignalAD <= (_CDS.VRAD-100))
  3374  021B  0848               	movf	__CDS+2,w
  3375  021C  3E9C               	addlw	156
  3376  021D  00F4               	movwf	??_CDS_Main
  3377  021E  30FF               	movlw	255
  3378  021F  1803               	skipnc
  3379  0220  3000               	movlw	0
  3380  0221  00F5               	movwf	??_CDS_Main+1
  3381  0222  0875               	movf	??_CDS_Main+1,w
  3382  0223  3A80               	xorlw	128
  3383  0224  00F6               	movwf	??_CDS_Main+2
  3384  0225  3080               	movlw	128
  3385  0226  0276               	subwf	??_CDS_Main+2,w
  3386  0227  1D03               	skipz
  3387  0228  2A2B               	goto	u1155
  3388  0229  0849               	movf	__CDS+3,w
  3389  022A  0274               	subwf	??_CDS_Main,w
  3390  022B                     u1155:	
  3391  022B  1C03               	skipc
  3392  022C  0008               	return
  3393                           
  3394                           ;CDS_B1.c: 46: {
  3395                           ;CDS_B1.c: 47: _CDS.High=1;
  3396  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3397  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3398  022F  1646               	bsf	__CDS,4
  3399                           
  3400                           ;CDS_B1.c: 48: RB3=1;
  3401  0230  1586               	bsf	6,3	;volatile
  3402                           
  3403                           ;CDS_B1.c: 49: ;;
  3404                           ;CDS_B1.c: 50: ;;
  3405  0231  0008               	return
  3406  0232                     __end_of_CDS_Main:	
  3407                           
  3408                           	psect	text22
  3409  0334                     __ptext22:	
  3410 ;; *************** function _CDS_Initialization *****************
  3411 ;; Defined at:
  3412 ;;		line 7 in file "../src/CDS_B1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3426 ;;      Params:         0       0       0       0
  3427 ;;      Locals:         0       0       0       0
  3428 ;;      Temps:          0       0       0       0
  3429 ;;      Totals:         0       0       0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		_setLED
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _CDS_Initialization
  3442  0334                     _CDS_Initialization:	
  3443                           
  3444                           ;CDS_B1.c: 9: _CDS.Enable=1;
  3445                           
  3446                           ;incstack = 0
  3447                           ; Regs used in _CDS_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3448  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0336  1446               	bsf	__CDS,0
  3451                           
  3452                           ;CDS_B1.c: 10: setLED(1,1);
  3453  0337  01F6               	clrf	setLED@command
  3454  0338  0AF6               	incf	setLED@command,f
  3455  0339  3001               	movlw	1
  3456  033A  118A  2023  118A   	fcall	_setLED
  3457                           
  3458                           ;CDS_B1.c: 11: setLED(2,0);
  3459  033D  01F6               	clrf	setLED@command
  3460  033E  3002               	movlw	2
  3461  033F  118A  2023         	fcall	_setLED
  3462  0341  0008               	return
  3463  0342                     __end_of_CDS_Initialization:	
  3464                           
  3465                           	psect	text23
  3466  0023                     __ptext23:	
  3467 ;; *************** function _setLED *****************
  3468 ;; Defined at:
  3469 ;;		line 70 in file "../src/LED_B1.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  led             1    wreg     unsigned char 
  3472 ;;  command         1    6[COMMON] unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  led             1    7[COMMON] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3484 ;;      Params:         1       0       0       0
  3485 ;;      Locals:         1       0       0       0
  3486 ;;      Temps:          0       0       0       0
  3487 ;;      Totals:         2       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    3
  3491 ;; This function calls:
  3492 ;;		_LedPointSelect
  3493 ;; This function is called by:
  3494 ;;		_CDS_Initialization
  3495 ;;		_setLED_Initialization
  3496 ;;		_PIR_Initialization
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _setLED
  3502  0023                     _setLED:	
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3506                           ;setLED@led stored from wreg
  3507  0023  00F7               	movwf	setLED@led
  3508                           
  3509                           ;LED_B1.c: 71: LedPointSelect(led);
  3510  0024  0877               	movf	setLED@led,w
  3511  0025  118A  22A8  118A   	fcall	_LedPointSelect
  3512                           
  3513                           ;LED_B1.c: 72: if (command == 0) {
  3514  0028  08F6               	movf	setLED@command,f
  3515  0029  1D03               	skipz
  3516  002A  2843               	goto	l1370
  3517                           
  3518                           ;LED_B1.c: 74: if (led == 1) {
  3519  002B  0877               	movf	setLED@led,w
  3520  002C  3A01               	xorlw	1
  3521  002D  1D03               	skipz
  3522  002E  2833               	goto	l1362
  3523                           
  3524                           ;LED_B1.c: 78: RB4 = 1;
  3525  002F  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0030  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0031  1606               	bsf	6,4	;volatile
  3528                           
  3529                           ;LED_B1.c: 80: }
  3530  0032  0008               	return
  3531  0033                     l1362:	
  3532                           
  3533                           ;LED_B1.c: 83: else if (led == 2) {
  3534  0033  0877               	movf	setLED@led,w
  3535  0034  3A02               	xorlw	2
  3536  0035  1D03               	skipz
  3537  0036  283B               	goto	l1366
  3538                           
  3539                           ;LED_B1.c: 87: RB5 = 1;
  3540  0037  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0038  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0039  1686               	bsf	6,5	;volatile
  3543                           
  3544                           ;LED_B1.c: 89: }
  3545  003A  0008               	return
  3546  003B                     l1366:	
  3547                           
  3548                           ;LED_B1.c: 101: else if (led == 99) {
  3549  003B  0877               	movf	setLED@led,w
  3550  003C  3A63               	xorlw	99
  3551  003D  1D03               	skipz
  3552  003E  0008               	return
  3553                           
  3554                           ;LED_B1.c: 105: RB3 = 1;
  3555  003F  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0040  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0041  1586               	bsf	6,3	;volatile
  3558                           
  3559                           ;LED_B1.c: 107: }
  3560                           ;LED_B1.c: 109: } else if (command == 1) {
  3561  0042  0008               	return
  3562  0043                     l1370:	
  3563  0043  0876               	movf	setLED@command,w
  3564  0044  3A01               	xorlw	1
  3565  0045  1D03               	skipz
  3566  0046  285F               	goto	l1384
  3567                           
  3568                           ;LED_B1.c: 111: if (led == 1) {
  3569  0047  0877               	movf	setLED@led,w
  3570  0048  3A01               	xorlw	1
  3571  0049  1D03               	skipz
  3572  004A  284F               	goto	l1376
  3573                           
  3574                           ;LED_B1.c: 115: RB4 = 0;
  3575  004B  1283               	bcf	3,5	;RP0=0, select bank0
  3576  004C  1303               	bcf	3,6	;RP1=0, select bank0
  3577  004D  1206               	bcf	6,4	;volatile
  3578                           
  3579                           ;LED_B1.c: 117: }
  3580  004E  0008               	return
  3581  004F                     l1376:	
  3582                           
  3583                           ;LED_B1.c: 120: else if (led == 2) {
  3584  004F  0877               	movf	setLED@led,w
  3585  0050  3A02               	xorlw	2
  3586  0051  1D03               	skipz
  3587  0052  2857               	goto	l1380
  3588                           
  3589                           ;LED_B1.c: 124: RB5 = 0;
  3590  0053  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0054  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0055  1286               	bcf	6,5	;volatile
  3593                           
  3594                           ;LED_B1.c: 126: }
  3595  0056  0008               	return
  3596  0057                     l1380:	
  3597                           
  3598                           ;LED_B1.c: 138: else if (led == 99) {
  3599  0057  0877               	movf	setLED@led,w
  3600  0058  3A63               	xorlw	99
  3601  0059  1D03               	skipz
  3602  005A  0008               	return
  3603                           
  3604                           ;LED_B1.c: 142: RB3 = 0;
  3605  005B  1283               	bcf	3,5	;RP0=0, select bank0
  3606  005C  1303               	bcf	3,6	;RP1=0, select bank0
  3607  005D  1186               	bcf	6,3	;volatile
  3608                           
  3609                           ;LED_B1.c: 144: }
  3610                           ;LED_B1.c: 146: } else if (command == 10) {
  3611  005E  0008               	return
  3612  005F                     l1384:	
  3613  005F  0876               	movf	setLED@command,w
  3614  0060  3A0A               	xorlw	10
  3615  0061  1D03               	skipz
  3616  0062  2884               	goto	l1402
  3617                           
  3618                           ;LED_B1.c: 147: LED->GO = 0;
  3619  0063  0879               	movf	_LED,w
  3620  0064  0084               	movwf	4
  3621  0065  1383               	bcf	3,7	;select IRP bank0
  3622  0066  1080               	bcf	0,1
  3623                           
  3624                           ;LED_B1.c: 148: LED->Time = 0;
  3625  0067  0A79               	incf	_LED,w
  3626  0068  0084               	movwf	4
  3627  0069  0180               	clrf	0
  3628  006A  0A84               	incf	4,f
  3629  006B  0180               	clrf	0
  3630                           
  3631                           ;LED_B1.c: 150: if (led == 1) {
  3632  006C  0877               	movf	setLED@led,w
  3633  006D  3A01               	xorlw	1
  3634  006E  1D03               	skipz
  3635  006F  2874               	goto	l1394
  3636                           
  3637                           ;LED_B1.c: 154: RB4 = 1;
  3638  0070  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0071  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0072  1606               	bsf	6,4	;volatile
  3641                           
  3642                           ;LED_B1.c: 156: }
  3643  0073  0008               	return
  3644  0074                     l1394:	
  3645                           
  3646                           ;LED_B1.c: 159: else if (led == 2) {
  3647  0074  0877               	movf	setLED@led,w
  3648  0075  3A02               	xorlw	2
  3649  0076  1D03               	skipz
  3650  0077  287C               	goto	l1398
  3651                           
  3652                           ;LED_B1.c: 163: RB5 = 1;
  3653  0078  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0079  1303               	bcf	3,6	;RP1=0, select bank0
  3655  007A  1686               	bsf	6,5	;volatile
  3656                           
  3657                           ;LED_B1.c: 165: }
  3658  007B  0008               	return
  3659  007C                     l1398:	
  3660                           
  3661                           ;LED_B1.c: 177: else if (led == 99) {
  3662  007C  0877               	movf	setLED@led,w
  3663  007D  3A63               	xorlw	99
  3664  007E  1D03               	skipz
  3665  007F  0008               	return
  3666                           
  3667                           ;LED_B1.c: 181: RB3 = 1;
  3668  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0081  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0082  1586               	bsf	6,3	;volatile
  3671                           
  3672                           ;LED_B1.c: 183: }
  3673                           ;LED_B1.c: 185: } else if (command == 11) {
  3674  0083  0008               	return
  3675  0084                     l1402:	
  3676  0084  0876               	movf	setLED@command,w
  3677  0085  3A0B               	xorlw	11
  3678  0086  1D03               	skipz
  3679  0087  0008               	return
  3680                           
  3681                           ;LED_B1.c: 186: LED->GO = 1;
  3682  0088  0879               	movf	_LED,w
  3683  0089  0084               	movwf	4
  3684  008A  1383               	bcf	3,7	;select IRP bank0
  3685  008B  1480               	bsf	0,1
  3686  008C  0008               	return
  3687  008D                     __end_of_setLED:	
  3688                           
  3689                           	psect	text24
  3690  02A8                     __ptext24:	
  3691 ;; *************** function _LedPointSelect *****************
  3692 ;; Defined at:
  3693 ;;		line 7 in file "../src/LED_B1.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  led             1    wreg     unsigned char 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  led             1    5[COMMON] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;		None               void
  3700 ;; Registers used:
  3701 ;;		wreg
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3707 ;;      Params:         0       0       0       0
  3708 ;;      Locals:         1       0       0       0
  3709 ;;      Temps:          1       0       0       0
  3710 ;;      Totals:         2       0       0       0
  3711 ;;Total ram usage:        2 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    2
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_setLED_Initialization
  3718 ;;		_setLED
  3719 ;;		_setLED_Main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _LedPointSelect
  3725  02A8                     _LedPointSelect:	
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _LedPointSelect: [wreg]
  3729                           ;LedPointSelect@led stored from wreg
  3730  02A8  00F5               	movwf	LedPointSelect@led
  3731                           
  3732                           ;LED_B1.c: 9: if (led == 1) {
  3733  02A9  0875               	movf	LedPointSelect@led,w
  3734  02AA  3A01               	xorlw	1
  3735  02AB  1D03               	skipz
  3736  02AC  2AB2               	goto	l1346
  3737                           
  3738                           ;LED_B1.c: 10: LED = &VarLED1;
  3739  02AD  304F               	movlw	_VarLED1& (0+255)
  3740  02AE  00F4               	movwf	??_LedPointSelect
  3741  02AF  0874               	movf	??_LedPointSelect,w
  3742  02B0  00F9               	movwf	_LED
  3743                           
  3744                           ;LED_B1.c: 11: }
  3745  02B1  0008               	return
  3746  02B2                     l1346:	
  3747                           
  3748                           ;LED_B1.c: 14: else if (led == 2) {
  3749  02B2  0875               	movf	LedPointSelect@led,w
  3750  02B3  3A02               	xorlw	2
  3751  02B4  1D03               	skipz
  3752  02B5  2ABB               	goto	l1350
  3753                           
  3754                           ;LED_B1.c: 15: LED = &VarLED2;
  3755  02B6  3053               	movlw	_VarLED2& (0+255)
  3756  02B7  00F4               	movwf	??_LedPointSelect
  3757  02B8  0874               	movf	??_LedPointSelect,w
  3758  02B9  00F9               	movwf	_LED
  3759                           
  3760                           ;LED_B1.c: 16: }
  3761  02BA  0008               	return
  3762  02BB                     l1350:	
  3763                           
  3764                           ;LED_B1.c: 24: else if (led == 99) {
  3765  02BB  0875               	movf	LedPointSelect@led,w
  3766  02BC  3A63               	xorlw	99
  3767  02BD  1D03               	skipz
  3768  02BE  0008               	return
  3769                           
  3770                           ;LED_B1.c: 25: LED = &VarErrLED;
  3771  02BF  304B               	movlw	_VarErrLED& (0+255)
  3772  02C0  00F4               	movwf	??_LedPointSelect
  3773  02C1  0874               	movf	??_LedPointSelect,w
  3774  02C2  00F9               	movwf	_LED
  3775  02C3  0008               	return
  3776  02C4                     __end_of_LedPointSelect:	
  3777                           
  3778                           	psect	text25
  3779  017B                     __ptext25:	
  3780 ;; *************** function _Buzzer_Main *****************
  3781 ;; Defined at:
  3782 ;;		line 46 in file "../src/Buzzer_B1.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          1       0       0       0
  3799 ;;      Totals:         1       0       0       0
  3800 ;;Total ram usage:        1 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           
  3811                           ;psect for function _Buzzer_Main
  3812  017B                     _Buzzer_Main:	
  3813                           
  3814                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
  3818  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3819  017C  1303               	bcf	3,6	;RP1=0, select bank0
  3820  017D  1CB2               	btfss	_Buz1,1
  3821  017E  0008               	return
  3822                           
  3823                           ;Buzzer_B1.c: 48: Buz1.Counter++;
  3824  017F  3001               	movlw	1
  3825  0180  07B3               	addwf	_Buz1+1,f
  3826  0181  1803               	skipnc
  3827  0182  0AB4               	incf	_Buz1+2,f
  3828  0183  3000               	movlw	0
  3829  0184  07B4               	addwf	_Buz1+2,f
  3830                           
  3831                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
  3832  0185  0839               	movf	_Buz1+7,w
  3833  0186  0234               	subwf	_Buz1+2,w
  3834  0187  1D03               	skipz
  3835  0188  298B               	goto	u1035
  3836  0189  0838               	movf	_Buz1+6,w
  3837  018A  0233               	subwf	_Buz1+1,w
  3838  018B                     u1035:	
  3839  018B  1C03               	skipc
  3840  018C  0008               	return
  3841                           
  3842                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
  3843  018D  01B3               	clrf	_Buz1+1
  3844  018E  01B4               	clrf	_Buz1+2
  3845                           
  3846                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB1 == 1) ? 1 : 0;
  3847  018F  12B2               	bcf	_Buz1,5
  3848  0190  1886               	btfsc	6,1	;volatile
  3849  0191  16B2               	bsf	_Buz1,5
  3850                           
  3851                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
  3852  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0194  1AB2               	btfsc	_Buz1,5
  3855  0195  29BA               	goto	l40
  3856                           
  3857                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
  3858  0196  08B5               	movf	_Buz1+3,f
  3859  0197  1D03               	skipz
  3860  0198  29B7               	goto	l41
  3861                           
  3862                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
  3863  0199  1DB2               	btfss	_Buz1,3
  3864  019A  29A7               	goto	l42
  3865                           
  3866                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
  3867  019B  11B2               	bcf	_Buz1,3
  3868                           
  3869                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
  3870  019C  0836               	movf	_Buz1+4,w
  3871  019D  00F4               	movwf	??_Buzzer_Main
  3872  019E  0874               	movf	??_Buzzer_Main,w
  3873  019F  00B5               	movwf	_Buz1+3
  3874                           
  3875                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
  3876  01A0  083B               	movf	_Buz1+9,w
  3877  01A1  01B9               	clrf	_Buz1+7
  3878  01A2  07B9               	addwf	_Buz1+7,f
  3879  01A3  083A               	movf	_Buz1+8,w
  3880  01A4  01B8               	clrf	_Buz1+6
  3881  01A5  07B8               	addwf	_Buz1+6,f
  3882                           
  3883                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
  3884  01A6  0008               	return
  3885  01A7                     l42:	
  3886  01A7  1E32               	btfss	_Buz1,4
  3887  01A8  29B5               	goto	l44
  3888                           
  3889                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
  3890  01A9  1232               	bcf	_Buz1,4
  3891                           
  3892                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
  3893  01AA  0837               	movf	_Buz1+5,w
  3894  01AB  00F4               	movwf	??_Buzzer_Main
  3895  01AC  0874               	movf	??_Buzzer_Main,w
  3896  01AD  00B5               	movwf	_Buz1+3
  3897                           
  3898                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
  3899  01AE  083D               	movf	_Buz1+11,w
  3900  01AF  01B9               	clrf	_Buz1+7
  3901  01B0  07B9               	addwf	_Buz1+7,f
  3902  01B1  083C               	movf	_Buz1+10,w
  3903  01B2  01B8               	clrf	_Buz1+6
  3904  01B3  07B8               	addwf	_Buz1+6,f
  3905                           
  3906                           ;Buzzer_B1.c: 62: } else {
  3907  01B4  0008               	return
  3908  01B5                     l44:	
  3909                           
  3910                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
  3911  01B5  10B2               	bcf	_Buz1,1
  3912                           
  3913                           ;Buzzer_B1.c: 64: }
  3914                           ;Buzzer_B1.c: 65: } else {
  3915  01B6  0008               	return
  3916  01B7                     l41:	
  3917                           
  3918                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
  3919  01B7  16B2               	bsf	_Buz1,5
  3920                           
  3921                           ;Buzzer_B1.c: 68: RB1 = 1;
  3922  01B8  1486               	bsf	6,1	;volatile
  3923                           
  3924                           ;Buzzer_B1.c: 69: }
  3925                           ;Buzzer_B1.c: 70: } else {
  3926  01B9  0008               	return
  3927  01BA                     l40:	
  3928                           
  3929                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
  3930  01BA  12B2               	bcf	_Buz1,5
  3931                           
  3932                           ;Buzzer_B1.c: 73: RB1 = 0;
  3933  01BB  1086               	bcf	6,1	;volatile
  3934                           
  3935                           ;Buzzer_B1.c: 75: Buz1.Count--;
  3936  01BC  3001               	movlw	1
  3937  01BD  02B5               	subwf	_Buz1+3,f
  3938  01BE  0008               	return
  3939  01BF                     __end_of_Buzzer_Main:	
  3940                           
  3941                           	psect	text26
  3942  038A                     __ptext26:	
  3943 ;; *************** function _Buzzer_Initialization *****************
  3944 ;; Defined at:
  3945 ;;		line 11 in file "../src/Buzzer_B1.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;		None               void
  3952 ;; Registers used:
  3953 ;;		None
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3959 ;;      Params:         0       0       0       0
  3960 ;;      Locals:         0       0       0       0
  3961 ;;      Temps:          0       0       0       0
  3962 ;;      Totals:         0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    2
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _Buzzer_Initialization
  3975  038A                     _Buzzer_Initialization:	
  3976                           
  3977                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _Buzzer_Initialization: []
  3981  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3982  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3983  038C  1432               	bsf	_Buz1,0
  3984  038D  0008               	return
  3985  038E                     __end_of_Buzzer_Initialization:	
  3986                           
  3987                           	psect	text27
  3988  0316                     __ptext27:	
  3989 ;; *************** function _ISR *****************
  3990 ;; Defined at:
  3991 ;;		line 107 in file "../src/MCU_B1.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4005 ;;      Params:         0       0       0       0
  4006 ;;      Locals:         0       0       0       0
  4007 ;;      Temps:          4       0       0       0
  4008 ;;      Totals:         4       0       0       0
  4009 ;;Total ram usage:        4 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    1
  4012 ;; This function calls:
  4013 ;;		_TMR0_ISR
  4014 ;; This function is called by:
  4015 ;;		Interrupt level 1
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _ISR
  4021  0316                     _ISR:	
  4022                           
  4023                           ;MCU_B1.c: 109: ;;
  4024                           ;MCU_B1.c: 111: TMR0_ISR();
  4025  0316  118A  22C4  118A   	fcall	_TMR0_ISR
  4026  0319  0873               	movf	??_ISR+3,w
  4027  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4028  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4029  031C  00FF               	movwf	127
  4030  031D  0872               	movf	??_ISR+2,w
  4031  031E  008A               	movwf	10
  4032  031F  0871               	movf	??_ISR+1,w
  4033  0320  0084               	movwf	4
  4034  0321  0E70               	swapf	??_ISR^(0+-128),w
  4035  0322  0083               	movwf	3
  4036  0323  0EFE               	swapf	126,f
  4037  0324  0E7E               	swapf	126,w
  4038  0325  0009               	retfie
  4039  0326                     __end_of_ISR:	
  4040                           
  4041                           	psect	intentry
  4042  0004                     __pintentry:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4045                           
  4046  0004                     interrupt_function:	
  4047  007E                     saved_w	set	btemp
  4048  0004  00FE               	movwf	btemp
  4049  0005  0E03               	swapf	3,w
  4050  0006  00F0               	movwf	??_ISR
  4051  0007  0804               	movf	4,w
  4052  0008  00F1               	movwf	??_ISR+1
  4053  0009  080A               	movf	10,w
  4054  000A  00F2               	movwf	??_ISR+2
  4055  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4056  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4057  000D  087F               	movf	btemp+1,w
  4058  000E  00F3               	movwf	??_ISR+3
  4059  000F  118A  2B16         	ljmp	_ISR
  4060                           
  4061                           	psect	text28
  4062  02C4                     __ptext28:	
  4063 ;; *************** function _TMR0_ISR *****************
  4064 ;; Defined at:
  4065 ;;		line 135 in file "../src/MCU_B1.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;		None               void
  4072 ;; Registers used:
  4073 ;;		wreg, status,2
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4079 ;;      Params:         0       0       0       0
  4080 ;;      Locals:         0       0       0       0
  4081 ;;      Temps:          0       0       0       0
  4082 ;;      Totals:         0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_ISR
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _TMR0_ISR
  4094  02C4                     _TMR0_ISR:	
  4095                           
  4096                           ;MCU_B1.c: 136: if (TMR0IE == 1 && TMR0IF == 1) {
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _TMR0_ISR: [wreg+status,2]
  4100  02C4  1E8B               	btfss	11,5	;volatile
  4101  02C5  0008               	return
  4102  02C6  1D0B               	btfss	11,2	;volatile
  4103  02C7  0008               	return
  4104                           
  4105                           ;MCU_B1.c: 138: TMR0 = (256-190);
  4106  02C8  3042               	movlw	66
  4107  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4108  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4109  02CB  0081               	movwf	1	;volatile
  4110                           
  4111                           ;MCU_B1.c: 139: TMR0IF = 0;
  4112  02CC  110B               	bcf	11,2	;volatile
  4113                           
  4114                           ;MCU_B1.c: 160: Timer0.Count++;
  4115  02CD  3001               	movlw	1
  4116  02CE  07BF               	addwf	_Timer0+1,f
  4117  02CF  1803               	skipnc
  4118  02D0  0AC0               	incf	_Timer0+2,f
  4119  02D1  3000               	movlw	0
  4120  02D2  07C0               	addwf	_Timer0+2,f
  4121                           
  4122                           ;MCU_B1.c: 161: if (Timer0.Count == 100) {
  4123  02D3  3064               	movlw	100
  4124  02D4  063F               	xorwf	_Timer0+1,w
  4125  02D5  0440               	iorwf	_Timer0+2,w
  4126  02D6  1D03               	skipz
  4127  02D7  0008               	return
  4128                           
  4129                           ;MCU_B1.c: 162: Timer0.Count = 0;
  4130  02D8  01BF               	clrf	_Timer0+1
  4131  02D9  01C0               	clrf	_Timer0+2
  4132                           
  4133                           ;MCU_B1.c: 163: myMain.T0_Timerout = 1;
  4134  02DA  14A0               	bsf	_myMain,1
  4135  02DB  0008               	return
  4136  02DC                     __end_of_TMR0_ISR:	
  4137  007E                     btemp	set	126	;btemp
  4138  007E                     wtemp	set	126
  4139  007E                     wtemp0	set	126
  4140  0080                     wtemp1	set	128
  4141  0082                     wtemp2	set	130
  4142  0084                     wtemp3	set	132
  4143  0086                     wtemp4	set	134
  4144  0088                     wtemp5	set	136
  4145  007F                     wtemp6	set	127
  4146  007E                     ttemp	set	126
  4147  007E                     ttemp0	set	126
  4148  0081                     ttemp1	set	129
  4149  0084                     ttemp2	set	132
  4150  0087                     ttemp3	set	135
  4151  007F                     ttemp4	set	127
  4152  007E                     ltemp	set	126
  4153  007E                     ltemp0	set	126
  4154  0082                     ltemp1	set	130
  4155  0086                     ltemp2	set	134
  4156  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     14      69
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_PIR_Initialization
    _setBuz->___awdiv
    _getCDS_AD->_getAD
    _PIR_Initialization->_setLED
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _CDS_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _my_MainTime->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4    3906
                                              8 BANK0      6     2      4
              _Buzzer_Initialization
                        _Buzzer_Main
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                        _my_MainTime
 ---------------------------------------------------------------------------------
 (1) _my_MainTime                                          0     0      0     802
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2     802
                                              4 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     478
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            3     1      2     152
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            7     5      2     498
                                              6 COMMON     2     0      2
                                              0 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     222
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0     730
                                              8 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR0_Set
 ---------------------------------------------------------------------------------
 (2) _TMR0_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              6 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0     840
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0     840
                                              8 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0     730
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1     730
                                              6 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      66
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CDS_Initialization
     _setLED
       _LedPointSelect
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR0_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
   _myMain_Initialization
   _my_MainTime
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      7E      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Oct 24 16:40:05 2014

                            l30 015F                              l40 01BA                              l32 016D  
                            l41 01B7                              l42 01A7                              l44 01B5  
                  ___awdiv@sign 0058                              fsr 0004                             l100 0211  
                           l401 0260                             _GIE 005F                             _RB1 0031  
                           _LED 0079                             _RB3 0033                             _RB4 0034  
                           _RB5 0035                             _ISR 0316                             u805 02FF  
                           u845 00AF                             u865 00BB                             u875 00C7  
                           u885 00D1                             fsr0 0004                             indf 0000  
         _Buzzer_Initialization 038A                 __end_of_ADC_Set 037F                            ?_ISR 0070  
                          l1402 0084                            l1350 02BB                            l1430 00A4  
                          l1440 00AC                            l1424 0099                            l1346 02B2  
                          l1362 0033                            l1370 0043                            l1442 00BA  
                          l1380 0057                            l1524 01EC                            l1452 00DB  
                          l1366 003B                            l1376 004F                            l1384 005F  
                          l1528 01F5                            l1456 00E3                            l1448 00D0  
                          l1394 0074                            l1492 0299                            l1398 007C  
                          l1494 029C                            l1584 021B                            l1736 024F  
                          l1498 02A2                            l1762 011B                            l1758 00FD  
         _myMain_Initialization 038E                            u1035 018B                            u1155 022B  
                          _TMR0 0001                            __CDS 0046                            _Buz1 0032  
                          __PIR 00A0                            _main 00EA                            btemp 007E  
                          ltemp 007E                            start 0011                            ttemp 007E  
                          wtemp 007E                __end_of_CDS_Main 0232                           ??_ISR 0070  
                 __CFG_PLLEN$ON 0000                __end_of_LED_Main 035A                           ?_main 005F  
               __end_of___awdiv 00EA                           _ADRES 001E                   __CFG_WDTE$OFF 0000  
               ___awdiv@divisor 0074                 ___awdiv@counter 0057                           _PORTA 0005  
                         _PORTB 0006                           _PORTC 0007                    ?_setLED_Main 0070  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
       __end_of_Timeout_Counter 0305                __end_of_TMR0_ISR 02DC                __end_of_PIR_Main 0391  
              __end_of_TMR0_Set 0370                           _getAD 028C                   ??_Buzzer_Main 0074  
                __CFG_BOREN$OFF 0000                           pclath 000A                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
__size_of_setLED_Initialization 000E   __end_of_setLED_Initialization 0334                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
             getPIR_AD@channel1 0074                    ?_my_MainTime 0070                 __initialization 0013  
                  __end_of_main 0134                __end_of_Fosc_Set 038A                       ??_ADC_Set 0074  
                        ??_main 0063          ?_Buzzer_Initialization 0070                          ?_getAD 0074  
        ?_myMain_Initialization 0070                          _ADCON0 001F                          _ADCON1 009F  
              ___awdiv@dividend 0076                          _ANSELA 0185                          _ANSELB 0186  
                        _FVRCON 009D                          _OSCCON 0090                          _TMR0IE 005D  
                        _TMR0IF 005A                          _IO_Set 02DC      __end_of_Mcu_Initialization 034E  
           __end_of_Buzzer_Main 01BF                          _Timer0 003E     __size_of_CDS_Initialization 000E  
                     ??___awdiv 0078                          _setLED 0023                          _myMain 0020  
              ___awdiv@quotient 0059                          _setBuz 0134                          saved_w 007E  
              ?_Timeout_Counter 0070         __size_of_LedPointSelect 001C                       ?_CDS_Main 0070  
   __size_of_PIR_Initialization 0011         __end_of__initialization 0020                       ?_LED_Main 0070  
                __pcstackCOMMON 0070              __size_of_getCDS_AD 002A                   __end_of_getAD 02A8  
                     ?_TMR0_ISR 0070                       ?_PIR_Main 0070                       ?_TMR0_Set 0070  
            _LED_Initialization 035A              __size_of_getPIR_AD 0001      __end_of_set_TimeoutCleared 0385  
           ?_LED_Initialization 0070            __size_of_setLED_Main 003F                         ??_getAD 0075  
                    ??_CDS_Main 0074                      __pbssBANK0 0020                      __pbssBANK1 00A0  
                     ?_Fosc_Set 0070                     _Buzzer_Main 017B                         ?_IO_Set 0070  
               __CFG_VCAPEN$DIS 0000                      ??_LED_Main 0079            ??_LED_Initialization 0079  
             LedPointSelect@led 0075                     setBuz@count 005E                      __pmaintext 00EA  
          __size_of_my_MainTime 0030                      ??_TMR0_ISR 0070                      ??_PIR_Main 0074  
                    ??_TMR0_Set 0074                      __pintentry 0004                         ?_setLED 0076  
                       _ADC_Set 0378                         ?_setBuz 005B               __end_of_getCDS_AD 028C  
                    ??_Fosc_Set 0074               __end_of_getPIR_AD 0390                 __size_of_IO_Set 0015  
                    getCDS_AD@i 0059                      getCDS_AD@j 005A                         _VarLED1 004F  
                       _VarLED2 0053                         ___awdiv 008D         ??_Buzzer_Initialization 0074  
               __size_of_setLED 006A                 __size_of_setBuz 0047                         __ptext0 0000  
                       __ptext1 0232                         __ptext2 0134                         __ptext3 008D  
                       __ptext4 038E                         __ptext5 038F                         __ptext6 0262  
                       __ptext7 028C                         __ptext8 037F                         __ptext9 02F1  
                  __size_of_ISR 0010         ??_myMain_Initialization 0074                  _LedPointSelect 02A8  
                       clrloop0 0371            end_of_initialization 0020           _setLED_Initialization 0326  
      setLED_Initialization@led 0078              _Mcu_Initialization 0342          __end_of_LedPointSelect 02C4  
           ?_Mcu_Initialization 0070               __size_of_CDS_Main 0034                  __end_of_IO_Set 02F1  
    __end_of_CDS_Initialization 0342               __size_of_LED_Main 000C            ??_Mcu_Initialization 0074  
             __size_of_TMR0_ISR 0018               __size_of_PIR_Main 0001               __size_of_TMR0_Set 000A  
                __end_of_setLED 008D                  __end_of_setBuz 017B                    getCDS_AD@cds 0070  
           start_initialization 0013                 ?_LedPointSelect 0070                     __end_of_ISR 0326  
    __end_of_PIR_Initialization 0316                    ?_Buzzer_Main 0070              _set_TimeoutCleared 037F  
                      ??_IO_Set 0074        __size_of_Timeout_Counter 0014                       _VarErrLED 004B  
        ?_setLED_Initialization 0070               __size_of_Fosc_Set 0005             ?_set_TimeoutCleared 0070  
                      ??_setLED 0077                        ?_ADC_Set 0070                        ??_setBuz 005D  
                 ??_setLED_Main 0076                     __pbssCOMMON 0079                       ___latbits 0001  
                 __pcstackBANK0 0057            ??_set_TimeoutCleared 0074                       _getCDS_AD 0262  
                 ??_my_MainTime 0079                       _getPIR_AD 038F     __size_of_LED_Initialization 000C  
                    setBuz@time 005B                        ?___awdiv 0074  __size_of_Buzzer_Initialization 0004  
 __end_of_Buzzer_Initialization 038E                    getPIR_AD@pir 0070  __size_of_myMain_Initialization 0001  
 __end_of_myMain_Initialization 038F                  __size_of_getAD 001C                        _CDS_Main 01FE  
           __end_of_setLED_Main 01FE               interrupt_function 0004                      ?_getCDS_AD 0076  
                      _LED_Main 034E                       clear_ram0 0370                      ?_getPIR_AD 0074  
                      _GO_nDONE 00F9               ??_Timeout_Counter 0074                        _TMR0_ISR 02C4  
                      _PIR_Main 0390                        _TMR0_Set 0366             __end_of_my_MainTime 0262  
              __size_of_ADC_Set 0007                     getAD@adcon0 0075                     getAD@adcon1 0074  
                setLED_Main@led 0078                        _Fosc_Set 0385            __size_of_Buzzer_Main 0044  
                     setLED@led 0077                __size_of___awdiv 005D                ??_LedPointSelect 0074  
            _CDS_Initialization 0334                     _setLED_Main 01BF             ?_CDS_Initialization 0070  
                      __ptext10 0390                        __ptext11 0305                        __ptext20 0326  
                      __ptext12 0342                        __ptext21 01FE                        __ptext13 0366  
                      __ptext22 0334                        __ptext14 02DC                        __ptext23 0023  
                      __ptext15 0385                        __ptext24 02A8                        __ptext16 0378  
                      __ptext25 017B                        __ptext17 034E                        __ptext26 038A  
                      __ptext18 01BF                        __ptext27 0316                        __ptext19 035A  
                      __ptext28 02C4         ??_setLED_Initialization 0078                     ??_getCDS_AD 0057  
                 setLED@command 0076                   __size_of_main 004A                     ??_getPIR_AD 0076  
            _PIR_Initialization 0305                     _my_MainTime 0232            ??_CDS_Initialization 0078  
   __size_of_Mcu_Initialization 000C             ?_PIR_Initialization 0070                        main@argc 005F  
                      main@argv 0061            ??_PIR_Initialization 0078                        intlevel1 0000  
                    _OPTION_REG 0081     __size_of_set_TimeoutCleared 0006              __CFG_FOSC$INTOSCIO 0000  
               _Timeout_Counter 02F1      __end_of_LED_Initialization 0366           getPIR_AD@charchannel2 0075  
             getCDS_AD@channel1 0076               getCDS_AD@channel2 0077  
