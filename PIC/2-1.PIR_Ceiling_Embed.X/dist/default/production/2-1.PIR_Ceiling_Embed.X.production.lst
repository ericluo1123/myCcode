

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Oct 28 17:32:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009F                     	;# 
   103  0108                     	;# 
   104  0109                     	;# 
   105  010C                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0185                     	;# 
   112  0186                     	;# 
   113  018C                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009F                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0186                     	;# 
   182  018C                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  008F                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0095                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0098                     	;# 
   237  0099                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009F                     	;# 
   241  0108                     	;# 
   242  0109                     	;# 
   243  010C                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  0185                     	;# 
   250  0186                     	;# 
   251  018C                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0096                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009F                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0186                     	;# 
   320  018C                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0096                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009F                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0186                     	;# 
   389  018C                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0096                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009F                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0186                     	;# 
   458  018C                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0096                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009F                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0186                     	;# 
   527  018C                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0009                     	;# 
   537  000A                     	;# 
   538  000B                     	;# 
   539  000C                     	;# 
   540  000D                     	;# 
   541  000E                     	;# 
   542  000E                     	;# 
   543  000F                     	;# 
   544  0010                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0013                     	;# 
   548  0014                     	;# 
   549  0015                     	;# 
   550  0015                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001B                     	;# 
   558  001C                     	;# 
   559  001D                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  0081                     	;# 
   563  0085                     	;# 
   564  0086                     	;# 
   565  0087                     	;# 
   566  0089                     	;# 
   567  008C                     	;# 
   568  008D                     	;# 
   569  008E                     	;# 
   570  008F                     	;# 
   571  0090                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0093                     	;# 
   576  0094                     	;# 
   577  0095                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0096                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009F                     	;# 
   586  0108                     	;# 
   587  0109                     	;# 
   588  010C                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  010F                     	;# 
   594  0185                     	;# 
   595  0186                     	;# 
   596  018C                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  000E                     	;# 
   612  000F                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0013                     	;# 
   617  0014                     	;# 
   618  0015                     	;# 
   619  0015                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001B                     	;# 
   627  001C                     	;# 
   628  001D                     	;# 
   629  001E                     	;# 
   630  001F                     	;# 
   631  0081                     	;# 
   632  0085                     	;# 
   633  0086                     	;# 
   634  0087                     	;# 
   635  0089                     	;# 
   636  008C                     	;# 
   637  008D                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0093                     	;# 
   644  0093                     	;# 
   645  0094                     	;# 
   646  0095                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0096                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009C                     	;# 
   653  009D                     	;# 
   654  009F                     	;# 
   655  0108                     	;# 
   656  0109                     	;# 
   657  010C                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  0185                     	;# 
   664  0186                     	;# 
   665  018C                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000E                     	;# 
   681  000F                     	;# 
   682  0010                     	;# 
   683  0011                     	;# 
   684  0012                     	;# 
   685  0013                     	;# 
   686  0014                     	;# 
   687  0015                     	;# 
   688  0015                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001B                     	;# 
   696  001C                     	;# 
   697  001D                     	;# 
   698  001E                     	;# 
   699  001F                     	;# 
   700  0081                     	;# 
   701  0085                     	;# 
   702  0086                     	;# 
   703  0087                     	;# 
   704  0089                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  008F                     	;# 
   709  0090                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0093                     	;# 
   713  0093                     	;# 
   714  0094                     	;# 
   715  0095                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0096                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009F                     	;# 
   724  0108                     	;# 
   725  0109                     	;# 
   726  010C                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010D                     	;# 
   730  010E                     	;# 
   731  010F                     	;# 
   732  0185                     	;# 
   733  0186                     	;# 
   734  018C                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  000E                     	;# 
   750  000F                     	;# 
   751  0010                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0015                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001D                     	;# 
   767  001E                     	;# 
   768  001F                     	;# 
   769  0081                     	;# 
   770  0085                     	;# 
   771  0086                     	;# 
   772  0087                     	;# 
   773  0089                     	;# 
   774  008C                     	;# 
   775  008D                     	;# 
   776  008E                     	;# 
   777  008F                     	;# 
   778  0090                     	;# 
   779  0091                     	;# 
   780  0092                     	;# 
   781  0093                     	;# 
   782  0093                     	;# 
   783  0094                     	;# 
   784  0095                     	;# 
   785  0095                     	;# 
   786  0096                     	;# 
   787  0096                     	;# 
   788  0098                     	;# 
   789  0099                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009F                     	;# 
   793  0108                     	;# 
   794  0109                     	;# 
   795  010C                     	;# 
   796  010C                     	;# 
   797  010D                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0185                     	;# 
   802  0186                     	;# 
   803  018C                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0014                     	;# 
   825  0015                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0017                     	;# 
   829  0018                     	;# 
   830  0019                     	;# 
   831  001A                     	;# 
   832  001B                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001D                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  0081                     	;# 
   839  0085                     	;# 
   840  0086                     	;# 
   841  0087                     	;# 
   842  0089                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  008F                     	;# 
   847  0090                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0093                     	;# 
   851  0093                     	;# 
   852  0094                     	;# 
   853  0095                     	;# 
   854  0095                     	;# 
   855  0096                     	;# 
   856  0096                     	;# 
   857  0098                     	;# 
   858  0099                     	;# 
   859  009C                     	;# 
   860  009D                     	;# 
   861  009F                     	;# 
   862  0108                     	;# 
   863  0109                     	;# 
   864  010C                     	;# 
   865  010C                     	;# 
   866  010D                     	;# 
   867  010D                     	;# 
   868  010E                     	;# 
   869  010F                     	;# 
   870  0185                     	;# 
   871  0186                     	;# 
   872  018C                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  000E                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001D                     	;# 
   905  001E                     	;# 
   906  001F                     	;# 
   907  0081                     	;# 
   908  0085                     	;# 
   909  0086                     	;# 
   910  0087                     	;# 
   911  0089                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  008E                     	;# 
   915  008F                     	;# 
   916  0090                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0094                     	;# 
   922  0095                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0096                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009F                     	;# 
   931  0108                     	;# 
   932  0109                     	;# 
   933  010C                     	;# 
   934  010C                     	;# 
   935  010D                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  010F                     	;# 
   939  0185                     	;# 
   940  0186                     	;# 
   941  018C                     	;# 
   942  0000                     	;# 
   943  0001                     	;# 
   944  0002                     	;# 
   945  0003                     	;# 
   946  0004                     	;# 
   947  0005                     	;# 
   948  0006                     	;# 
   949  0007                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000D                     	;# 
   955  000E                     	;# 
   956  000E                     	;# 
   957  000F                     	;# 
   958  0010                     	;# 
   959  0011                     	;# 
   960  0012                     	;# 
   961  0013                     	;# 
   962  0014                     	;# 
   963  0015                     	;# 
   964  0015                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001B                     	;# 
   972  001C                     	;# 
   973  001D                     	;# 
   974  001E                     	;# 
   975  001F                     	;# 
   976  0081                     	;# 
   977  0085                     	;# 
   978  0086                     	;# 
   979  0087                     	;# 
   980  0089                     	;# 
   981  008C                     	;# 
   982  008D                     	;# 
   983  008E                     	;# 
   984  008F                     	;# 
   985  0090                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0093                     	;# 
   989  0093                     	;# 
   990  0094                     	;# 
   991  0095                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0096                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009F                     	;# 
  1000  0108                     	;# 
  1001  0109                     	;# 
  1002  010C                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010D                     	;# 
  1006  010E                     	;# 
  1007  010F                     	;# 
  1008  0185                     	;# 
  1009  0186                     	;# 
  1010  018C                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000D                     	;# 
  1024  000E                     	;# 
  1025  000E                     	;# 
  1026  000F                     	;# 
  1027  0010                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0014                     	;# 
  1032  0015                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0017                     	;# 
  1036  0018                     	;# 
  1037  0019                     	;# 
  1038  001A                     	;# 
  1039  001B                     	;# 
  1040  001B                     	;# 
  1041  001C                     	;# 
  1042  001D                     	;# 
  1043  001E                     	;# 
  1044  001F                     	;# 
  1045  0081                     	;# 
  1046  0085                     	;# 
  1047  0086                     	;# 
  1048  0087                     	;# 
  1049  0089                     	;# 
  1050  008C                     	;# 
  1051  008D                     	;# 
  1052  008E                     	;# 
  1053  008F                     	;# 
  1054  0090                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0093                     	;# 
  1058  0093                     	;# 
  1059  0094                     	;# 
  1060  0095                     	;# 
  1061  0095                     	;# 
  1062  0096                     	;# 
  1063  0096                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009F                     	;# 
  1069  0108                     	;# 
  1070  0109                     	;# 
  1071  010C                     	;# 
  1072  010C                     	;# 
  1073  010D                     	;# 
  1074  010D                     	;# 
  1075  010E                     	;# 
  1076  010F                     	;# 
  1077  0185                     	;# 
  1078  0186                     	;# 
  1079  018C                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0009                     	;# 
  1089  000A                     	;# 
  1090  000B                     	;# 
  1091  000C                     	;# 
  1092  000D                     	;# 
  1093  000E                     	;# 
  1094  000E                     	;# 
  1095  000F                     	;# 
  1096  0010                     	;# 
  1097  0011                     	;# 
  1098  0012                     	;# 
  1099  0013                     	;# 
  1100  0014                     	;# 
  1101  0015                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  0081                     	;# 
  1115  0085                     	;# 
  1116  0086                     	;# 
  1117  0087                     	;# 
  1118  0089                     	;# 
  1119  008C                     	;# 
  1120  008D                     	;# 
  1121  008E                     	;# 
  1122  008F                     	;# 
  1123  0090                     	;# 
  1124  0091                     	;# 
  1125  0092                     	;# 
  1126  0093                     	;# 
  1127  0093                     	;# 
  1128  0094                     	;# 
  1129  0095                     	;# 
  1130  0095                     	;# 
  1131  0096                     	;# 
  1132  0096                     	;# 
  1133  0098                     	;# 
  1134  0099                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009F                     	;# 
  1138  0108                     	;# 
  1139  0109                     	;# 
  1140  010C                     	;# 
  1141  010C                     	;# 
  1142  010D                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  010F                     	;# 
  1146  0185                     	;# 
  1147  0186                     	;# 
  1148  018C                     	;# 
  1149  0000                     	;# 
  1150  0001                     	;# 
  1151  0002                     	;# 
  1152  0003                     	;# 
  1153  0004                     	;# 
  1154  0005                     	;# 
  1155  0006                     	;# 
  1156  0007                     	;# 
  1157  0009                     	;# 
  1158  000A                     	;# 
  1159  000B                     	;# 
  1160  000C                     	;# 
  1161  000D                     	;# 
  1162  000E                     	;# 
  1163  000E                     	;# 
  1164  000F                     	;# 
  1165  0010                     	;# 
  1166  0011                     	;# 
  1167  0012                     	;# 
  1168  0013                     	;# 
  1169  0014                     	;# 
  1170  0015                     	;# 
  1171  0015                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001B                     	;# 
  1179  001C                     	;# 
  1180  001D                     	;# 
  1181  001E                     	;# 
  1182  001F                     	;# 
  1183  0081                     	;# 
  1184  0085                     	;# 
  1185  0086                     	;# 
  1186  0087                     	;# 
  1187  0089                     	;# 
  1188  008C                     	;# 
  1189  008D                     	;# 
  1190  008E                     	;# 
  1191  008F                     	;# 
  1192  0090                     	;# 
  1193  0091                     	;# 
  1194  0092                     	;# 
  1195  0093                     	;# 
  1196  0093                     	;# 
  1197  0094                     	;# 
  1198  0095                     	;# 
  1199  0095                     	;# 
  1200  0096                     	;# 
  1201  0096                     	;# 
  1202  0098                     	;# 
  1203  0099                     	;# 
  1204  009C                     	;# 
  1205  009D                     	;# 
  1206  009F                     	;# 
  1207  0108                     	;# 
  1208  0109                     	;# 
  1209  010C                     	;# 
  1210  010C                     	;# 
  1211  010D                     	;# 
  1212  010D                     	;# 
  1213  010E                     	;# 
  1214  010F                     	;# 
  1215  0185                     	;# 
  1216  0186                     	;# 
  1217  018C                     	;# 
  1218  001F                     _ADCON0	set	31
  1219  001E                     _ADRES	set	30
  1220  0005                     _PORTA	set	5
  1221  0006                     _PORTB	set	6
  1222  0007                     _PORTC	set	7
  1223  0010                     _T1CON	set	16
  1224  000F                     _TMR1H	set	15
  1225  000E                     _TMR1L	set	14
  1226  005F                     _GIE	set	95
  1227  00F9                     _GO_nDONE	set	249
  1228  005E                     _PEIE	set	94
  1229  002C                     _RA4	set	44
  1230  0033                     _RB3	set	51
  1231  0034                     _RB4	set	52
  1232  0035                     _RB5	set	53
  1233  0060                     _TMR1IF	set	96
  1234  009F                     _ADCON1	set	159
  1235  009D                     _FVRCON	set	157
  1236  0090                     _OSCCON	set	144
  1237  0085                     _TRISA	set	133
  1238  0086                     _TRISB	set	134
  1239  0087                     _TRISC	set	135
  1240  0408                     _PS0	set	1032
  1241  0409                     _PS1	set	1033
  1242  040A                     _PS2	set	1034
  1243  040B                     _PSA	set	1035
  1244  0460                     _TMR1IE	set	1120
  1245  0185                     _ANSELA	set	389
  1246  0186                     _ANSELB	set	390
  1247                           
  1248                           	psect	text0
  1249  0000                     __ptext0:	
  1250                           ; #config settings
  1251                           
  1252                           
  1253                           ;psect for function _TMR1_ISR
  1254  0000                     
  1255                           	psect	cinit
  1256  0013                     start_initialization:	
  1257  0013                     __initialization:	
  1258                           
  1259                           ; Clear objects allocated to COMMON
  1260  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1261  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1262  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1263                           
  1264                           ; Clear objects allocated to BANK0
  1265  0016  1383               	bcf	3,7	;select IRP bank0
  1266  0017  3020               	movlw	low __pbssBANK0
  1267  0018  0084               	movwf	4
  1268  0019  3047               	movlw	low (__pbssBANK0+39)
  1269  001A  118A  25F2  118A   	fcall	clear_ram0
  1270                           
  1271                           ; Clear objects allocated to BANK1
  1272  001D  30A0               	movlw	low __pbssBANK1
  1273  001E  0084               	movwf	4
  1274  001F  30CF               	movlw	low (__pbssBANK1+47)
  1275  0020  118A  25F2         	fcall	clear_ram0
  1276  0022                     end_of_initialization:	
  1277                           ;End of C runtime variable initialization code
  1278                           
  1279  0022                     __end_of__initialization:	
  1280  0022  0183               	clrf	3
  1281  0023  118A  2BE6         	ljmp	_main	;jump to C main() function
  1282                           
  1283                           	psect	bssCOMMON
  1284  0077                     __pbssCOMMON:	
  1285  0077                     _WDT:	
  1286  0077                     	ds	2
  1287  0079                     _LED:	
  1288  0079                     	ds	1
  1289                           
  1290                           	psect	bssBANK0
  1291  0020                     __pbssBANK0:	
  1292  0020                     _myMain:	
  1293  0020                     	ds	19
  1294  0033                     __CDS:	
  1295  0033                     	ds	5
  1296  0038                     _Timer1:	
  1297  0038                     	ds	3
  1298  003B                     _VarErrLED:	
  1299  003B                     	ds	4
  1300  003F                     _VarLED1:	
  1301  003F                     	ds	4
  1302  0043                     _VarLED2:	
  1303  0043                     	ds	4
  1304                           
  1305                           	psect	bssBANK1
  1306  00A0                     __pbssBANK1:	
  1307  00A0                     __PIR:	
  1308  00A0                     	ds	47
  1309                           
  1310                           	psect	clrtext
  1311  05F2                     clear_ram0:	
  1312                           ;	Called with FSR containing the base address, and
  1313                           ;	W with the last address+1
  1314                           
  1315  05F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1316  05F3                     clrloop0:	
  1317  05F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1318  05F4  0A84               	incf	4,f	;increment pointer
  1319  05F5  0604               	xorwf	4,w	;XOR with final address
  1320  05F6  1903               	btfsc	3,2	;have we reached the end yet?
  1321  05F7  3400               	retlw	0	;all done for this memory range, return
  1322  05F8  0604               	xorwf	4,w	;XOR again to restore value
  1323  05F9  2DF3               	goto	clrloop0	;do the next byte
  1324                           
  1325                           	psect	cstackCOMMON
  1326  0070                     __pcstackCOMMON:	
  1327  0070                     ?_setLED_Initialization:	
  1328  0070                     ?_setLED_Main:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?_Fosc_Set:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_IO_Set:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_TMR1_Set:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_ADC_Set:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?_WDT_Set:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_TMR1_ISR:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ??_TMR1_ISR:	
  1350                           ; 0 bytes @ 0x0
  1351                           
  1352  0070                     ?_Timeout_Counter:	
  1353                           ; 0 bytes @ 0x0
  1354                           
  1355  0070                     ?_set_TimeoutCleared:	
  1356                           ; 0 bytes @ 0x0
  1357                           
  1358  0070                     ?_WDT_Clearing:	
  1359                           ; 0 bytes @ 0x0
  1360                           
  1361  0070                     ?_myMain_Initialization:	
  1362                           ; 0 bytes @ 0x0
  1363                           
  1364  0070                     ?_PIR_Initialization:	
  1365                           ; 0 bytes @ 0x0
  1366                           
  1367  0070                     ?_my_MainTime:	
  1368                           ; 0 bytes @ 0x0
  1369                           
  1370  0070                     ?_PIR_Main:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ?_CDS_Initialization:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0070                     ?_CDS_Main:	
  1377                           ; 0 bytes @ 0x0
  1378                           
  1379  0070                     ?_LedPointSelect:	
  1380                           ; 0 bytes @ 0x0
  1381                           
  1382  0070                     ?_LED_Initialization:	
  1383                           ; 0 bytes @ 0x0
  1384                           
  1385  0070                     ?_LED_Main:	
  1386                           ; 0 bytes @ 0x0
  1387                           
  1388  0070                     ?_Mcu_Initialization:	
  1389                           ; 0 bytes @ 0x0
  1390                           
  1391  0070                     ?_ISR:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0070                     ??_ISR:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0070                     ?_WDT_Main:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0070                     ?_getCDS_Status:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x0
  1405  0070                     	ds	4
  1406  0074                     ??_Fosc_Set:	
  1407  0074                     ??_IO_Set:	
  1408                           ; 0 bytes @ 0x4
  1409                           
  1410  0074                     ??_TMR1_Set:	
  1411                           ; 0 bytes @ 0x4
  1412                           
  1413  0074                     ??_ADC_Set:	
  1414                           ; 0 bytes @ 0x4
  1415                           
  1416  0074                     ??_WDT_Set:	
  1417                           ; 0 bytes @ 0x4
  1418                           
  1419  0074                     ??_Timeout_Counter:	
  1420                           ; 0 bytes @ 0x4
  1421                           
  1422  0074                     ??_set_TimeoutCleared:	
  1423                           ; 0 bytes @ 0x4
  1424                           
  1425  0074                     ??_WDT_Clearing:	
  1426                           ; 0 bytes @ 0x4
  1427                           
  1428  0074                     ??_myMain_Initialization:	
  1429                           ; 0 bytes @ 0x4
  1430                           
  1431  0074                     ??_PIR_Initialization:	
  1432                           ; 0 bytes @ 0x4
  1433                           
  1434  0074                     ??_my_MainTime:	
  1435                           ; 0 bytes @ 0x4
  1436                           
  1437  0074                     ??_CDS_Initialization:	
  1438                           ; 0 bytes @ 0x4
  1439                           
  1440  0074                     ??_CDS_Main:	
  1441                           ; 0 bytes @ 0x4
  1442                           
  1443  0074                     ??_getCDS_Status:	
  1444                           ; 0 bytes @ 0x4
  1445                           
  1446  0074                     ??_LedPointSelect:	
  1447                           ; 0 bytes @ 0x4
  1448                           
  1449  0074                     ??_WDT_Main:	
  1450                           ; 0 bytes @ 0x4
  1451                           
  1452  0074                     ??___awdiv:	
  1453                           ; 0 bytes @ 0x4
  1454                           
  1455  0074                     ??___lwdiv:	
  1456                           ; 0 bytes @ 0x4
  1457                           
  1458  0074                     ?_getAD:	
  1459                           ; 0 bytes @ 0x4
  1460                           
  1461  0074                     getCDS_Status@result:	
  1462                           ; 1 bytes @ 0x4
  1463                           
  1464  0074                     getAD@adcon1:	
  1465                           ; 1 bytes @ 0x4
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x4
  1469  0074                     	ds	1
  1470  0075                     ??_getAD:	
  1471  0075                     ??_Mcu_Initialization:	
  1472                           ; 0 bytes @ 0x5
  1473                           
  1474  0075                     LedPointSelect@led:	
  1475                           ; 0 bytes @ 0x5
  1476                           
  1477  0075                     getAD@adcon0:	
  1478                           ; 1 bytes @ 0x5
  1479                           
  1480                           
  1481                           ; 1 bytes @ 0x5
  1482  0075                     	ds	1
  1483  0076                     ?_setLED:	
  1484  0076                     ?_getPIR_AD:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0076                     ?_getCDS_AD:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0076                     getCDS_AD@channel2:	
  1491                           ; 0 bytes @ 0x6
  1492                           
  1493  0076                     setLED@command:	
  1494                           ; 1 bytes @ 0x6
  1495                           
  1496  0076                     setLED_Main@led:	
  1497                           ; 1 bytes @ 0x6
  1498                           
  1499  0076                     getPIR_AD@channel2:	
  1500                           ; 1 bytes @ 0x6
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x6
  1504  0076                     	ds	1
  1505  0077                     ??_setLED_Initialization:	
  1506  0077                     ??_setLED:	
  1507                           ; 0 bytes @ 0x7
  1508                           
  1509  0077                     ??_LED_Initialization:	
  1510                           ; 0 bytes @ 0x7
  1511                           
  1512  0077                     ??_LED_Main:	
  1513                           ; 0 bytes @ 0x7
  1514                           
  1515                           
  1516                           	psect	cstackBANK0
  1517  0047                     __pcstackBANK0:	
  1518                           ; 0 bytes @ 0x7
  1519                           
  1520  0047                     ??_setLED_Main:	
  1521  0047                     ??_getCDS_AD:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0047                     ?___awdiv:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0047                     ?___lwdiv:	
  1528                           ; 2 bytes @ 0x0
  1529                           
  1530  0047                     setLED@led:	
  1531                           ; 2 bytes @ 0x0
  1532                           
  1533  0047                     ___awdiv@divisor:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0047                     ___lwdiv@divisor:	
  1537                           ; 2 bytes @ 0x0
  1538                           
  1539                           
  1540                           ; 2 bytes @ 0x0
  1541  0047                     	ds	1
  1542  0048                     ??_PIR_Main:	
  1543  0048                     setLED_Initialization@led:	
  1544                           ; 0 bytes @ 0x1
  1545                           
  1546                           
  1547                           ; 1 bytes @ 0x1
  1548  0048                     	ds	1
  1549  0049                     getCDS_AD@i:	
  1550  0049                     ___awdiv@dividend:	
  1551                           ; 1 bytes @ 0x2
  1552                           
  1553  0049                     ___lwdiv@dividend:	
  1554                           ; 2 bytes @ 0x2
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x2
  1558  0049                     	ds	1
  1559  004A                     getCDS_AD@j:	
  1560                           
  1561                           ; 1 bytes @ 0x3
  1562  004A                     	ds	1
  1563  004B                     getCDS_AD@channel1:	
  1564  004B                     ___awdiv@counter:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567  004B                     ___lwdiv@counter:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570                           
  1571                           ; 1 bytes @ 0x4
  1572  004B                     	ds	1
  1573  004C                     ___awdiv@sign:	
  1574  004C                     ___lwdiv@quotient:	
  1575                           ; 1 bytes @ 0x5
  1576                           
  1577                           
  1578                           ; 2 bytes @ 0x5
  1579  004C                     	ds	1
  1580  004D                     ___awdiv@quotient:	
  1581                           
  1582                           ; 2 bytes @ 0x6
  1583  004D                     	ds	2
  1584  004F                     ??_getPIR_AD:	
  1585                           
  1586                           ; 0 bytes @ 0x8
  1587  004F                     	ds	3
  1588  0052                     getPIR_AD@j:	
  1589                           
  1590                           ; 1 bytes @ 0xB
  1591  0052                     	ds	1
  1592  0053                     getPIR_AD@channel1:	
  1593                           
  1594                           ; 1 bytes @ 0xC
  1595  0053                     	ds	1
  1596  0054                     getPIR_AD@i:	
  1597                           
  1598                           ; 1 bytes @ 0xD
  1599  0054                     	ds	1
  1600  0055                     ?_main:	
  1601  0055                     main@argc:	
  1602                           ; 2 bytes @ 0xE
  1603                           
  1604                           
  1605                           ; 2 bytes @ 0xE
  1606  0055                     	ds	2
  1607  0057                     main@argv:	
  1608                           
  1609                           ; 2 bytes @ 0x10
  1610  0057                     	ds	2
  1611  0059                     ??_main:	
  1612                           
  1613                           ; 0 bytes @ 0x12
  1614  0059                     	ds	1
  1615                           
  1616                           	psect	maintext
  1617  03E6                     __pmaintext:	
  1618 ;;
  1619 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1620 ;;
  1621 ;; *************** function _main *****************
  1622 ;; Defined at:
  1623 ;;		line 7 in file "../src/Main_B1.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  argc            2   14[BANK0 ] int 
  1626 ;;  argv            2   16[BANK0 ] PTR PTR unsigned char 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2   14[BANK0 ] int 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 17F/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1638 ;;      Params:         0       4       0       0
  1639 ;;      Locals:         0       0       0       0
  1640 ;;      Temps:          0       1       0       0
  1641 ;;      Totals:         0       5       0       0
  1642 ;;Total ram usage:        5 bytes
  1643 ;; Hardware stack levels required when called:    6
  1644 ;; This function calls:
  1645 ;;		_CDS_Initialization
  1646 ;;		_CDS_Main
  1647 ;;		_LED_Initialization
  1648 ;;		_LED_Main
  1649 ;;		_Mcu_Initialization
  1650 ;;		_PIR_Initialization
  1651 ;;		_PIR_Main
  1652 ;;		_WDT_Main
  1653 ;;		_getCDS_AD
  1654 ;;		_getPIR_AD
  1655 ;;		_myMain_Initialization
  1656 ;;		_my_MainTime
  1657 ;; This function is called by:
  1658 ;;		Startup code after reset
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _main
  1664  03E6                     _main:	
  1665                           
  1666                           ;Main_B1.c: 8: myMain_Initialization();
  1667                           
  1668                           ;incstack = 0
  1669                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1670  03E6  118A  261A  118A   	fcall	_myMain_Initialization
  1671                           
  1672                           ;Main_B1.c: 9: Mcu_Initialization();
  1673  03E9  118A  25B1  118A   	fcall	_Mcu_Initialization
  1674                           
  1675                           ;Main_B1.c: 10: ;;
  1676                           ;Main_B1.c: 11: LED_Initialization();
  1677  03EC  118A  25E6  118A   	fcall	_LED_Initialization
  1678                           
  1679                           ;Main_B1.c: 12: ;;
  1680                           ;Main_B1.c: 14: ;;
  1681                           ;Main_B1.c: 15: ;;
  1682                           ;Main_B1.c: 16: ;;
  1683                           ;Main_B1.c: 17: ;;
  1684                           ;Main_B1.c: 18: ;;
  1685                           ;Main_B1.c: 20: ;;
  1686                           ;Main_B1.c: 21: ;;
  1687                           ;Main_B1.c: 22: CDS_Initialization();
  1688  03EF  118A  2614  118A   	fcall	_CDS_Initialization
  1689                           
  1690                           ;Main_B1.c: 23: PIR_Initialization();
  1691  03F2  118A  2582  118A   	fcall	_PIR_Initialization
  1692                           
  1693                           ;Main_B1.c: 24: ;;
  1694                           ;Main_B1.c: 25: ;;
  1695                           ;Main_B1.c: 26: __nop();
  1696  03F5  0000               	nop
  1697  03F6                     l2469:	
  1698                           ;Main_B1.c: 27: ;;
  1699                           ;Main_B1.c: 29: while (1) {
  1700                           
  1701                           
  1702                           ;Main_B1.c: 31: if (myMain.PowerON) {
  1703  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1704  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1705  03F8  1C20               	btfss	_myMain,0
  1706  03F9  2C0C               	goto	l2475
  1707                           
  1708                           ;Main_B1.c: 33: ;;
  1709                           ;Main_B1.c: 41: ;;
  1710                           ;Main_B1.c: 49: getCDS_AD(0x09, 0x31);
  1711  03FA  3031               	movlw	49
  1712  03FB  00D9               	movwf	??_main
  1713  03FC  0859               	movf	??_main,w
  1714  03FD  00F6               	movwf	getCDS_AD@channel2
  1715  03FE  3009               	movlw	9
  1716  03FF  118A  24C9  118A   	fcall	_getCDS_AD
  1717                           
  1718                           ;Main_B1.c: 53: getPIR_AD(0x05, 0x0d);
  1719  0402  300D               	movlw	13
  1720  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0405  00D9               	movwf	??_main
  1723  0406  0859               	movf	??_main,w
  1724  0407  00F6               	movwf	getPIR_AD@channel2
  1725  0408  3005               	movlw	5
  1726  0409  118A  21AF  118A   	fcall	_getPIR_AD
  1727  040C                     l2475:	
  1728                           
  1729                           ;Main_B1.c: 60: }
  1730                           ;Main_B1.c: 96: if (myMain.T1_Timerout) {
  1731  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1732  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1733  040E  1D20               	btfss	_myMain,2
  1734  040F  2BF6               	goto	l2469
  1735                           
  1736                           ;Main_B1.c: 97: myMain.T1_Timerout = 0;
  1737  0410  1120               	bcf	_myMain,2
  1738                           
  1739                           ;Main_B1.c: 98: my_MainTime();
  1740  0411  118A  2460  118A   	fcall	_my_MainTime
  1741                           
  1742                           ;Main_B1.c: 99: WDT_Main();
  1743  0414  118A  25A2  118A   	fcall	_WDT_Main
  1744                           
  1745                           ;Main_B1.c: 100: ;;
  1746                           ;Main_B1.c: 101: ;;
  1747                           ;Main_B1.c: 102: if (myMain.PowerON) {
  1748  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0419  1C20               	btfss	_myMain,0
  1751  041A  2BF6               	goto	l2469
  1752                           
  1753                           ;Main_B1.c: 103: ;;
  1754                           ;Main_B1.c: 105: LED_Main();
  1755  041B  118A  25DA  118A   	fcall	_LED_Main
  1756                           
  1757                           ;Main_B1.c: 106: ;;
  1758                           ;Main_B1.c: 108: ;;
  1759                           ;Main_B1.c: 109: ;;
  1760                           ;Main_B1.c: 110: ;;
  1761                           ;Main_B1.c: 111: ;;
  1762                           ;Main_B1.c: 113: ;;
  1763                           ;Main_B1.c: 114: ;;
  1764                           ;Main_B1.c: 115: ;;
  1765                           ;Main_B1.c: 116: CDS_Main();
  1766  041E  118A  2495  118A   	fcall	_CDS_Main
  1767                           
  1768                           ;Main_B1.c: 117: PIR_Main();
  1769  0421  118A  2025  118A   	fcall	_PIR_Main
  1770                           
  1771                           ;Main_B1.c: 119: ;;
  1772                           ;Main_B1.c: 120: ;;
  1773                           ;Main_B1.c: 121: ;;
  1774  0424  2BF6               	goto	l2469
  1775  0425                     __end_of_main:	
  1776                           ;Main_B1.c: 129: }
  1777                           ;Main_B1.c: 130: }
  1778                           ;Main_B1.c: 164: }
  1779                           ;Main_B1.c: 165: return (0);
  1780                           ;	Return value of _main is never used
  1781                           
  1782                           
  1783                           	psect	text1
  1784  0460                     __ptext1:	
  1785 ;; *************** function _my_MainTime *****************
  1786 ;; Defined at:
  1787 ;;		line 183 in file "../src/Main_B1.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, status,2
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1801 ;;      Params:         0       0       0       0
  1802 ;;      Locals:         0       0       0       0
  1803 ;;      Temps:          0       0       0       0
  1804 ;;      Totals:         0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _my_MainTime
  1817  0460                     _my_MainTime:	
  1818                           
  1819                           ;Main_B1.c: 185: if (myMain.PowerON == 0) {
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _my_MainTime: [wreg+status,2]
  1823  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0462  1820               	btfsc	_myMain,0
  1826  0463  2C74               	goto	l1403
  1827                           
  1828                           ;Main_B1.c: 186: myMain.PowerCount++;
  1829  0464  3001               	movlw	1
  1830  0465  07A2               	addwf	_myMain+2,f
  1831  0466  1803               	skipnc
  1832  0467  0AA3               	incf	_myMain+3,f
  1833  0468  3000               	movlw	0
  1834  0469  07A3               	addwf	_myMain+3,f
  1835                           
  1836                           ;Main_B1.c: 187: if (myMain.PowerCount == 150)
  1837  046A  3096               	movlw	150
  1838  046B  0622               	xorwf	_myMain+2,w
  1839  046C  0423               	iorwf	_myMain+3,w
  1840  046D  1D03               	skipz
  1841  046E  2C86               	goto	l1411
  1842                           
  1843                           ;Main_B1.c: 188: {
  1844                           ;Main_B1.c: 189: myMain.PowerCount = 0;
  1845  046F  01A2               	clrf	_myMain+2
  1846  0470  01A3               	clrf	_myMain+3
  1847                           
  1848                           ;Main_B1.c: 190: myMain.PowerON = 1;
  1849  0471  1420               	bsf	_myMain,0
  1850                           
  1851                           ;Main_B1.c: 193: ;;
  1852                           ;Main_B1.c: 203: ;;
  1853                           ;Main_B1.c: 204: myMain.SelfTest = 1;
  1854  0472  17A0               	bsf	_myMain,7
  1855                           
  1856                           ;Main_B1.c: 213: }
  1857                           ;Main_B1.c: 214: } else {
  1858                           
  1859                           ;Main_B1.c: 206: ;;
  1860  0473  2C86               	goto	l1411
  1861  0474                     l1403:	
  1862                           
  1863                           ;Main_B1.c: 222: myMain.Count1++;
  1864  0474  3001               	movlw	1
  1865  0475  07A6               	addwf	_myMain+6,f
  1866  0476  1803               	skipnc
  1867  0477  0AA7               	incf	_myMain+7,f
  1868  0478  3000               	movlw	0
  1869  0479  07A7               	addwf	_myMain+7,f
  1870                           
  1871                           ;Main_B1.c: 223: if (myMain.Count1 == 100)
  1872  047A  3064               	movlw	100
  1873  047B  0626               	xorwf	_myMain+6,w
  1874  047C  0427               	iorwf	_myMain+7,w
  1875  047D  1D03               	skipz
  1876  047E  2C86               	goto	l1411
  1877                           
  1878                           ;Main_B1.c: 224: {
  1879                           ;Main_B1.c: 225: myMain.Count1 = 0;
  1880  047F  01A6               	clrf	_myMain+6
  1881  0480  01A7               	clrf	_myMain+7
  1882                           
  1883                           ;Main_B1.c: 237: if (myMain.Flag) {
  1884  0481  1E20               	btfss	_myMain,4
  1885  0482  2C85               	goto	l393
  1886                           
  1887                           ;Main_B1.c: 238: myMain.Flag = 0;
  1888  0483  1220               	bcf	_myMain,4
  1889                           
  1890                           ;Main_B1.c: 247: } else {
  1891  0484  2C86               	goto	l1411
  1892  0485                     l393:	
  1893                           
  1894                           ;Main_B1.c: 248: myMain.Flag = 1;
  1895  0485  1620               	bsf	_myMain,4
  1896  0486                     l1411:	
  1897                           
  1898                           ;Main_B1.c: 257: }
  1899                           ;Main_B1.c: 258: }
  1900                           ;Main_B1.c: 260: }
  1901                           ;Main_B1.c: 262: myMain.Count2++;
  1902  0486  3001               	movlw	1
  1903  0487  07A8               	addwf	_myMain+8,f
  1904  0488  1803               	skipnc
  1905  0489  0AA9               	incf	_myMain+9,f
  1906  048A  3000               	movlw	0
  1907  048B  07A9               	addwf	_myMain+9,f
  1908                           
  1909                           ;Main_B1.c: 263: if (myMain.Count2 == 50) {
  1910  048C  3032               	movlw	50
  1911  048D  0628               	xorwf	_myMain+8,w
  1912  048E  0429               	iorwf	_myMain+9,w
  1913  048F  1D03               	skipz
  1914  0490  0008               	return
  1915                           
  1916                           ;Main_B1.c: 264: myMain.Count2 = 0;
  1917  0491  01A8               	clrf	_myMain+8
  1918  0492  01A9               	clrf	_myMain+9
  1919                           
  1920                           ;Main_B1.c: 265: RA4 = 1;
  1921  0493  1605               	bsf	5,4	;volatile
  1922  0494  0008               	return
  1923  0495                     __end_of_my_MainTime:	
  1924                           
  1925                           	psect	text2
  1926  061A                     __ptext2:	
  1927 ;; *************** function _myMain_Initialization *****************
  1928 ;; Defined at:
  1929 ;;		line 171 in file "../src/Main_B1.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		None
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1943 ;;      Params:         0       0       0       0
  1944 ;;      Locals:         0       0       0       0
  1945 ;;      Temps:          0       0       0       0
  1946 ;;      Totals:         0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    2
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _myMain_Initialization
  1959  061A                     _myMain_Initialization:	
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _myMain_Initialization: []
  1963  061A  0008               	return
  1964  061B                     __end_of_myMain_Initialization:	
  1965                           
  1966                           	psect	text3
  1967  01AF                     __ptext3:	
  1968 ;; *************** function _getPIR_AD *****************
  1969 ;; Defined at:
  1970 ;;		line 166 in file "../src/PIR_B1.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  channel1        1    wreg     unsigned char 
  1973 ;;  channel2        1    6[COMMON] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  channel1        1   12[BANK0 ] unsigned char 
  1976 ;;  i               1   13[BANK0 ] unsigned char 
  1977 ;;  j               1   11[BANK0 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1987 ;;      Params:         1       0       0       0
  1988 ;;      Locals:         0       3       0       0
  1989 ;;      Temps:          0       3       0       0
  1990 ;;      Totals:         1       6       0       0
  1991 ;;Total ram usage:        7 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		___awdiv
  1996 ;;		___lwdiv
  1997 ;;		_getAD
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _getPIR_AD
  2005  01AF                     _getPIR_AD:	
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2009                           ;getPIR_AD@channel1 stored from wreg
  2010  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2011  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2012  01B1  00D3               	movwf	getPIR_AD@channel1
  2013                           
  2014                           ;PIR_B1.c: 167: char i = 0, j = 0;
  2015  01B2  01D4               	clrf	getPIR_AD@i
  2016  01B3  01D2               	clrf	getPIR_AD@j
  2017                           
  2018                           ;PIR_B1.c: 169: if (_PIR.ADtoGO == 1) {
  2019  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2020  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2021  01B6  1CA0               	btfss	__PIR^(0+128),1
  2022  01B7  0008               	return
  2023                           
  2024                           ;PIR_B1.c: 170: _PIR.GO = 1;
  2025  01B8  1520               	bsf	__PIR^(0+128),2
  2026                           
  2027                           ;PIR_B1.c: 171: _PIR.ADRES = getAD(channel1, 0x70);
  2028  01B9  3070               	movlw	112
  2029  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2030  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2031  01BC  00CF               	movwf	??_getPIR_AD
  2032  01BD  084F               	movf	??_getPIR_AD,w
  2033  01BE  00F4               	movwf	getAD@adcon1
  2034  01BF  0853               	movf	getPIR_AD@channel1,w
  2035  01C0  118A  24F3  118A   	fcall	_getAD
  2036  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2037  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2038  01C5  00D0               	movwf	??_getPIR_AD+1
  2039  01C6  0850               	movf	??_getPIR_AD+1,w
  2040  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2041  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2042  01C9  00A2               	movwf	(__PIR^(0+128)+2)
  2043                           
  2044                           ;PIR_B1.c: 172: _PIR.VRAD = _PIR.ADRES / 51;
  2045  01CA  3033               	movlw	51
  2046  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2047  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2048  01CD  00C7               	movwf	___awdiv@divisor
  2049  01CE  3000               	movlw	0
  2050  01CF  00C8               	movwf	___awdiv@divisor+1
  2051  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2052  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2053  01D2  0822               	movf	(__PIR^(0+128)+2),w
  2054  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2055  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2056  01D5  00CF               	movwf	??_getPIR_AD
  2057  01D6  01D0               	clrf	??_getPIR_AD+1
  2058  01D7  084F               	movf	??_getPIR_AD,w
  2059  01D8  00C9               	movwf	___awdiv@dividend
  2060  01D9  0850               	movf	??_getPIR_AD+1,w
  2061  01DA  00CA               	movwf	___awdiv@dividend+1
  2062  01DB  118A  2349  118A   	fcall	___awdiv
  2063  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2064  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2065  01E0  0847               	movf	?___awdiv,w
  2066  01E1  00D1               	movwf	??_getPIR_AD+2
  2067  01E2  0851               	movf	??_getPIR_AD+2,w
  2068  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2069  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2070  01E5  00A3               	movwf	(__PIR^(0+128)+3)
  2071                           
  2072                           ;PIR_B1.c: 173: _PIR.VRAD1 = _PIR.ADRES;
  2073  01E6  0822               	movf	(__PIR^(0+128)+2),w
  2074  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2075  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2076  01E9  00CF               	movwf	??_getPIR_AD
  2077  01EA  084F               	movf	??_getPIR_AD,w
  2078  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2079  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2080  01ED  00A4               	movwf	(__PIR^(0+128)+4)
  2081                           
  2082                           ;PIR_B1.c: 174: _PIR.ADRES = getAD(channel2, 0x70);
  2083  01EE  3070               	movlw	112
  2084  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2085  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2086  01F1  00CF               	movwf	??_getPIR_AD
  2087  01F2  084F               	movf	??_getPIR_AD,w
  2088  01F3  00F4               	movwf	getAD@adcon1
  2089  01F4  0876               	movf	getPIR_AD@channel2,w
  2090  01F5  118A  24F3  118A   	fcall	_getAD
  2091  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2092  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2093  01FA  00D0               	movwf	??_getPIR_AD+1
  2094  01FB  0850               	movf	??_getPIR_AD+1,w
  2095  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2096  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2097  01FE  00A2               	movwf	(__PIR^(0+128)+2)
  2098                           
  2099                           ;PIR_B1.c: 175: _PIR.SignalAD = _PIR.ADRES;
  2100  01FF  0822               	movf	(__PIR^(0+128)+2),w
  2101  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0202  00CF               	movwf	??_getPIR_AD
  2104  0203  084F               	movf	??_getPIR_AD,w
  2105  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2106  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2107  0206  00A1               	movwf	(__PIR^(0+128)+1)
  2108                           
  2109                           ;PIR_B1.c: 177: switch (_PIR.VRAD) {
  2110  0207  2A23               	goto	l2279
  2111  0208                     l2263:	
  2112                           ;PIR_B1.c: 178: case 0:
  2113                           
  2114                           
  2115                           ;PIR_B1.c: 179: if (_PIR.VRAD1 < 10) {
  2116  0208  300A               	movlw	10
  2117  0209  0224               	subwf	(__PIR^(0+128)+4),w
  2118  020A  1803               	skipnc
  2119  020B  2A0E               	goto	l2267
  2120                           
  2121                           ;PIR_B1.c: 180: _PIR.CloseTimeValue = 5;
  2122  020C  3005               	movlw	5
  2123  020D  2A0F               	goto	L1
  2124  020E                     l2267:	
  2125                           ;PIR_B1.c: 181: } else {
  2126                           
  2127                           
  2128                           ;PIR_B1.c: 182: _PIR.CloseTimeValue = 60;
  2129  020E  303C               	movlw	60
  2130  020F                     L1:	
  2131  020F  00C7               	movwf	(__PIR^(0+128)+39)
  2132  0210  3000               	movlw	0
  2133  0211  2A21               	goto	L5
  2134  0212                     l2269:	
  2135                           ;PIR_B1.c: 185: case 1:
  2136                           
  2137                           ;PIR_B1.c: 183: }
  2138                           ;PIR_B1.c: 184: break;
  2139                           
  2140                           
  2141                           ;PIR_B1.c: 186: _PIR.CloseTimeValue = 300;
  2142  0212  302C               	movlw	44
  2143  0213  00C7               	movwf	(__PIR^(0+128)+39)
  2144  0214  3001               	movlw	1
  2145  0215  2A21               	goto	L5
  2146  0216                     l2271:	
  2147                           ;PIR_B1.c: 188: case 2:
  2148                           
  2149                           ;PIR_B1.c: 187: break;
  2150                           
  2151                           
  2152                           ;PIR_B1.c: 189: _PIR.CloseTimeValue = 600;
  2153  0216  3058               	movlw	88
  2154  0217  00C7               	movwf	(__PIR^(0+128)+39)
  2155  0218  3002               	movlw	2
  2156  0219  2A21               	goto	L5
  2157  021A                     l2273:	
  2158                           ;PIR_B1.c: 191: case 3:
  2159                           
  2160                           ;PIR_B1.c: 190: break;
  2161                           
  2162                           
  2163                           ;PIR_B1.c: 192: _PIR.CloseTimeValue = 900;
  2164  021A  3084               	movlw	132
  2165  021B  00C7               	movwf	(__PIR^(0+128)+39)
  2166  021C  3003               	movlw	3
  2167  021D  2A21               	goto	L5
  2168  021E                     l2275:	
  2169                           ;PIR_B1.c: 194: case 4:
  2170                           
  2171                           ;PIR_B1.c: 193: break;
  2172                           
  2173                           
  2174                           ;PIR_B1.c: 195: _PIR.CloseTimeValue = 1200;
  2175  021E  30B0               	movlw	176
  2176  021F  00C7               	movwf	(__PIR^(0+128)+39)
  2177  0220  3004               	movlw	4
  2178  0221                     L5:	
  2179  0221  00C8               	movwf	(__PIR^(0+128)+40)
  2180                           
  2181                           ;PIR_B1.c: 197: }
  2182                           
  2183                           ;PIR_B1.c: 196: break;
  2184  0222  2A34               	goto	l2281
  2185  0223                     l2279:	
  2186  0223  0823               	movf	(__PIR^(0+128)+3),w
  2187                           
  2188                           ; Switch size 1, requested type "space"
  2189                           ; Number of cases is 5, Range of values is 0 to 4
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           16     9 (average)
  2193                           ; direct_byte           17     7 (fixed)
  2194                           ; jumptable            260     6 (fixed)
  2195                           ;	Chosen strategy is simple_byte
  2196  0224  3A00               	xorlw	0	; case 0
  2197  0225  1903               	skipnz
  2198  0226  2A08               	goto	l2263
  2199  0227  3A01               	xorlw	1	; case 1
  2200  0228  1903               	skipnz
  2201  0229  2A12               	goto	l2269
  2202  022A  3A03               	xorlw	3	; case 2
  2203  022B  1903               	skipnz
  2204  022C  2A16               	goto	l2271
  2205  022D  3A01               	xorlw	1	; case 3
  2206  022E  1903               	skipnz
  2207  022F  2A1A               	goto	l2273
  2208  0230  3A07               	xorlw	7	; case 4
  2209  0231  1903               	skipnz
  2210  0232  2A1E               	goto	l2275
  2211  0233  2A34               	goto	l2281
  2212  0234                     l2281:	
  2213                           
  2214                           ;PIR_B1.c: 199: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2215  0234  0821               	movf	(__PIR^(0+128)+1),w
  2216  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0237  00CF               	movwf	??_getPIR_AD
  2219  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2221  023A  0826               	movf	(__PIR^(0+128)+6),w
  2222  023B  3EA9               	addlw	(__PIR+9)& (0+255)
  2223  023C  0084               	movwf	4
  2224  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2225  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2226  023F  084F               	movf	??_getPIR_AD,w
  2227  0240  1383               	bcf	3,7	;select IRP bank1
  2228  0241  0080               	movwf	0
  2229                           
  2230                           ;PIR_B1.c: 200: for (i = 0; i < 10; i++) {
  2231  0242  01D4               	clrf	getPIR_AD@i
  2232  0243  300A               	movlw	10
  2233  0244  0254               	subwf	getPIR_AD@i,w
  2234  0245  1803               	btfsc	3,0
  2235  0246  2A63               	goto	l2295
  2236  0247                     l2289:	
  2237                           
  2238                           ;PIR_B1.c: 201: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2239  0247  0854               	movf	getPIR_AD@i,w
  2240  0248  3EA9               	addlw	(__PIR+9)& (0+255)
  2241  0249  0084               	movwf	4
  2242  024A  0800               	movf	0,w
  2243  024B  00CF               	movwf	??_getPIR_AD
  2244  024C  01D0               	clrf	??_getPIR_AD+1
  2245  024D  084F               	movf	??_getPIR_AD,w
  2246  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2247  024F  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0250  07B3               	addwf	(__PIR^(0+128)+19),f
  2249  0251  1803               	skipnc
  2250  0252  0AB4               	incf	((__PIR+1)^(0+128)+19),f
  2251  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0255  0850               	movf	??_getPIR_AD+1,w
  2254  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0258  07B4               	addwf	((__PIR+1)^(0+128)+19),f
  2257  0259  3001               	movlw	1
  2258  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2259  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2260  025C  00CF               	movwf	??_getPIR_AD
  2261  025D  084F               	movf	??_getPIR_AD,w
  2262  025E  07D4               	addwf	getPIR_AD@i,f
  2263  025F  300A               	movlw	10
  2264  0260  0254               	subwf	getPIR_AD@i,w
  2265  0261  1C03               	skipc
  2266  0262  2A47               	goto	l2289
  2267  0263                     l2295:	
  2268                           
  2269                           ;PIR_B1.c: 202: }
  2270                           ;PIR_B1.c: 203: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2271  0263  300A               	movlw	10
  2272  0264  00C7               	movwf	___lwdiv@divisor
  2273  0265  3000               	movlw	0
  2274  0266  00C8               	movwf	___lwdiv@divisor+1
  2275  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0269  0834               	movf	((__PIR+1)^(0+128)+19),w
  2278  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2279  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2280  026C  01CA               	clrf	___lwdiv@dividend+1
  2281  026D  07CA               	addwf	___lwdiv@dividend+1,f
  2282  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2283  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0270  0833               	movf	(__PIR^(0+128)+19),w
  2285  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0273  01C9               	clrf	___lwdiv@dividend
  2288  0274  07C9               	addwf	___lwdiv@dividend,f
  2289  0275  118A  23A6  118A   	fcall	___lwdiv
  2290  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2292  027A  0847               	movf	?___lwdiv,w
  2293  027B  00CF               	movwf	??_getPIR_AD
  2294  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2295  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2296  027E  0827               	movf	(__PIR^(0+128)+7),w
  2297  027F  3EB5               	addlw	(__PIR+21)& (0+255)
  2298  0280  0084               	movwf	4
  2299  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0283  084F               	movf	??_getPIR_AD,w
  2302  0284  1383               	bcf	3,7	;select IRP bank1
  2303  0285  0080               	movwf	0
  2304                           
  2305                           ;PIR_B1.c: 204: _PIR.TenAverageValue = 0;
  2306  0286  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0287  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0288  01B3               	clrf	(__PIR^(0+128)+19)
  2309  0289  01B4               	clrf	((__PIR+1)^(0+128)+19)
  2310                           
  2311                           ;PIR_B1.c: 206: for (i = 0; i <= 9; i++) {
  2312  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2313  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2314  028C  01D4               	clrf	getPIR_AD@i
  2315  028D  300A               	movlw	10
  2316  028E  0254               	subwf	getPIR_AD@i,w
  2317  028F  1803               	btfsc	3,0
  2318  0290  2AAD               	goto	l2311
  2319  0291                     l2305:	
  2320                           
  2321                           ;PIR_B1.c: 207: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2322  0291  0854               	movf	getPIR_AD@i,w
  2323  0292  3EB5               	addlw	(__PIR+21)& (0+255)
  2324  0293  0084               	movwf	4
  2325  0294  0800               	movf	0,w
  2326  0295  00CF               	movwf	??_getPIR_AD
  2327  0296  01D0               	clrf	??_getPIR_AD+1
  2328  0297  084F               	movf	??_getPIR_AD,w
  2329  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2331  029A  07BF               	addwf	(__PIR^(0+128)+31),f
  2332  029B  1803               	skipnc
  2333  029C  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2334  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2335  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2336  029F  0850               	movf	??_getPIR_AD+1,w
  2337  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2338  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2339  02A2  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2340  02A3  3001               	movlw	1
  2341  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2342  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2343  02A6  00CF               	movwf	??_getPIR_AD
  2344  02A7  084F               	movf	??_getPIR_AD,w
  2345  02A8  07D4               	addwf	getPIR_AD@i,f
  2346  02A9  300A               	movlw	10
  2347  02AA  0254               	subwf	getPIR_AD@i,w
  2348  02AB  1C03               	skipc
  2349  02AC  2A91               	goto	l2305
  2350  02AD                     l2311:	
  2351                           
  2352                           ;PIR_B1.c: 208: }
  2353                           ;PIR_B1.c: 209: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2354  02AD  300A               	movlw	10
  2355  02AE  00C7               	movwf	___lwdiv@divisor
  2356  02AF  3000               	movlw	0
  2357  02B0  00C8               	movwf	___lwdiv@divisor+1
  2358  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2359  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2360  02B3  0840               	movf	((__PIR+1)^(0+128)+31),w
  2361  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2362  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2363  02B6  01CA               	clrf	___lwdiv@dividend+1
  2364  02B7  07CA               	addwf	___lwdiv@dividend+1,f
  2365  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2366  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2367  02BA  083F               	movf	(__PIR^(0+128)+31),w
  2368  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2369  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2370  02BD  01C9               	clrf	___lwdiv@dividend
  2371  02BE  07C9               	addwf	___lwdiv@dividend,f
  2372  02BF  118A  23A6  118A   	fcall	___lwdiv
  2373  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2374  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2375  02C4  0847               	movf	?___lwdiv,w
  2376  02C5  00CF               	movwf	??_getPIR_AD
  2377  02C6  084F               	movf	??_getPIR_AD,w
  2378  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2379  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2380  02C9  00A8               	movwf	(__PIR^(0+128)+8)
  2381                           
  2382                           ;PIR_B1.c: 210: _PIR.HundredAverageValue = 0;
  2383  02CA  01BF               	clrf	(__PIR^(0+128)+31)
  2384  02CB  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2385                           
  2386                           ;PIR_B1.c: 212: if (_PIR.TenCount < 10) {
  2387  02CC  300A               	movlw	10
  2388  02CD  0226               	subwf	(__PIR^(0+128)+6),w
  2389  02CE  1803               	skipnc
  2390  02CF  2AD9               	goto	l2319
  2391                           
  2392                           ;PIR_B1.c: 213: _PIR.TenCount++;
  2393  02D0  3001               	movlw	1
  2394  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2395  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2396  02D3  00CF               	movwf	??_getPIR_AD
  2397  02D4  084F               	movf	??_getPIR_AD,w
  2398  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2399  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2400  02D7  07A6               	addwf	(__PIR^(0+128)+6),f
  2401                           
  2402                           ;PIR_B1.c: 214: } else {
  2403  02D8  0008               	return
  2404  02D9                     l2319:	
  2405                           
  2406                           ;PIR_B1.c: 215: _PIR.TenCount = 0;
  2407  02D9  01A6               	clrf	(__PIR^(0+128)+6)
  2408                           
  2409                           ;PIR_B1.c: 216: if (_PIR.HundreCount < 10)
  2410  02DA  300A               	movlw	10
  2411  02DB  0227               	subwf	(__PIR^(0+128)+7),w
  2412  02DC  1803               	skipnc
  2413  02DD  2AE7               	goto	l2325
  2414                           
  2415                           ;PIR_B1.c: 217: _PIR.HundreCount++;
  2416  02DE  3001               	movlw	1
  2417  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2418  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2419  02E1  00CF               	movwf	??_getPIR_AD
  2420  02E2  084F               	movf	??_getPIR_AD,w
  2421  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2422  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2423  02E5  07A7               	addwf	(__PIR^(0+128)+7),f
  2424  02E6  0008               	return
  2425  02E7                     l2325:	
  2426                           
  2427                           ;PIR_B1.c: 218: else
  2428                           ;PIR_B1.c: 219: _PIR.HundreCount = 0;
  2429  02E7  01A7               	clrf	(__PIR^(0+128)+7)
  2430  02E8  0008               	return
  2431  02E9                     __end_of_getPIR_AD:	
  2432                           
  2433                           	psect	text4
  2434  03A6                     __ptext4:	
  2435 ;; *************** function ___lwdiv *****************
  2436 ;; Defined at:
  2437 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  divisor         2    0[BANK0 ] unsigned int 
  2440 ;;  dividend        2    2[BANK0 ] unsigned int 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  quotient        2    5[BANK0 ] unsigned int 
  2443 ;;  counter         1    4[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    0[BANK0 ] unsigned int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2453 ;;      Params:         0       4       0       0
  2454 ;;      Locals:         0       3       0       0
  2455 ;;      Temps:          1       0       0       0
  2456 ;;      Totals:         1       7       0       0
  2457 ;;Total ram usage:        8 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_getPIR_AD
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function ___lwdiv
  2469  03A6                     ___lwdiv:	
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2473  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2474  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2475  03A8  01CC               	clrf	___lwdiv@quotient
  2476  03A9  01CD               	clrf	___lwdiv@quotient+1
  2477  03AA  0848               	movf	___lwdiv@divisor+1,w
  2478  03AB  0447               	iorwf	___lwdiv@divisor,w
  2479  03AC  1903               	skipnz
  2480  03AD  2BDF               	goto	l2231
  2481  03AE  01CB               	clrf	___lwdiv@counter
  2482  03AF  0ACB               	incf	___lwdiv@counter,f
  2483  03B0                     l2219:	
  2484  03B0  1BC8               	btfsc	___lwdiv@divisor+1,7
  2485  03B1  2BBE               	goto	l2221
  2486  03B2  3001               	movlw	1
  2487  03B3                     u2245:	
  2488  03B3  1003               	clrc
  2489  03B4  0DC7               	rlf	___lwdiv@divisor,f
  2490  03B5  0DC8               	rlf	___lwdiv@divisor+1,f
  2491  03B6  3EFF               	addlw	-1
  2492  03B7  1D03               	skipz
  2493  03B8  2BB3               	goto	u2245
  2494  03B9  3001               	movlw	1
  2495  03BA  00F4               	movwf	??___lwdiv
  2496  03BB  0874               	movf	??___lwdiv,w
  2497  03BC  07CB               	addwf	___lwdiv@counter,f
  2498  03BD  2BB0               	goto	l2219
  2499  03BE                     l2221:	
  2500  03BE  3001               	movlw	1
  2501  03BF                     u2265:	
  2502  03BF  1003               	clrc
  2503  03C0  0DCC               	rlf	___lwdiv@quotient,f
  2504  03C1  0DCD               	rlf	___lwdiv@quotient+1,f
  2505  03C2  3EFF               	addlw	-1
  2506  03C3  1D03               	skipz
  2507  03C4  2BBF               	goto	u2265
  2508  03C5  0848               	movf	___lwdiv@divisor+1,w
  2509  03C6  024A               	subwf	___lwdiv@dividend+1,w
  2510  03C7  1D03               	skipz
  2511  03C8  2BCB               	goto	u2275
  2512  03C9  0847               	movf	___lwdiv@divisor,w
  2513  03CA  0249               	subwf	___lwdiv@dividend,w
  2514  03CB                     u2275:	
  2515  03CB  1C03               	skipc
  2516  03CC  2BD4               	goto	l2227
  2517  03CD  0847               	movf	___lwdiv@divisor,w
  2518  03CE  02C9               	subwf	___lwdiv@dividend,f
  2519  03CF  0848               	movf	___lwdiv@divisor+1,w
  2520  03D0  1C03               	skipc
  2521  03D1  03CA               	decf	___lwdiv@dividend+1,f
  2522  03D2  02CA               	subwf	___lwdiv@dividend+1,f
  2523  03D3  144C               	bsf	___lwdiv@quotient,0
  2524  03D4                     l2227:	
  2525  03D4  3001               	movlw	1
  2526  03D5                     u2285:	
  2527  03D5  1003               	clrc
  2528  03D6  0CC8               	rrf	___lwdiv@divisor+1,f
  2529  03D7  0CC7               	rrf	___lwdiv@divisor,f
  2530  03D8  3EFF               	addlw	-1
  2531  03D9  1D03               	skipz
  2532  03DA  2BD5               	goto	u2285
  2533  03DB  3001               	movlw	1
  2534  03DC  02CB               	subwf	___lwdiv@counter,f
  2535  03DD  1D03               	btfss	3,2
  2536  03DE  2BBE               	goto	l2221
  2537  03DF                     l2231:	
  2538  03DF  084D               	movf	___lwdiv@quotient+1,w
  2539  03E0  01C8               	clrf	?___lwdiv+1
  2540  03E1  07C8               	addwf	?___lwdiv+1,f
  2541  03E2  084C               	movf	___lwdiv@quotient,w
  2542  03E3  01C7               	clrf	?___lwdiv
  2543  03E4  07C7               	addwf	?___lwdiv,f
  2544  03E5  0008               	return
  2545  03E6                     __end_of___lwdiv:	
  2546                           
  2547                           	psect	text5
  2548  0349                     __ptext5:	
  2549 ;; *************** function ___awdiv *****************
  2550 ;; Defined at:
  2551 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  divisor         2    0[BANK0 ] int 
  2554 ;;  dividend        2    2[BANK0 ] int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  quotient        2    6[BANK0 ] int 
  2557 ;;  sign            1    5[BANK0 ] unsigned char 
  2558 ;;  counter         1    4[BANK0 ] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2    0[BANK0 ] int 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2568 ;;      Params:         0       4       0       0
  2569 ;;      Locals:         0       4       0       0
  2570 ;;      Temps:          1       0       0       0
  2571 ;;      Totals:         1       8       0       0
  2572 ;;Total ram usage:        9 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    2
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_getPIR_AD
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function ___awdiv
  2584  0349                     ___awdiv:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2588  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2589  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2590  034B  01CC               	clrf	___awdiv@sign
  2591  034C  1FC8               	btfss	___awdiv@divisor+1,7
  2592  034D  2B55               	goto	l2173
  2593  034E  09C7               	comf	___awdiv@divisor,f
  2594  034F  09C8               	comf	___awdiv@divisor+1,f
  2595  0350  0AC7               	incf	___awdiv@divisor,f
  2596  0351  1903               	skipnz
  2597  0352  0AC8               	incf	___awdiv@divisor+1,f
  2598  0353  01CC               	clrf	___awdiv@sign
  2599  0354  0ACC               	incf	___awdiv@sign,f
  2600  0355                     l2173:	
  2601  0355  1FCA               	btfss	___awdiv@dividend+1,7
  2602  0356  2B60               	goto	l2179
  2603  0357  09C9               	comf	___awdiv@dividend,f
  2604  0358  09CA               	comf	___awdiv@dividend+1,f
  2605  0359  0AC9               	incf	___awdiv@dividend,f
  2606  035A  1903               	skipnz
  2607  035B  0ACA               	incf	___awdiv@dividend+1,f
  2608  035C  3001               	movlw	1
  2609  035D  00F4               	movwf	??___awdiv
  2610  035E  0874               	movf	??___awdiv,w
  2611  035F  06CC               	xorwf	___awdiv@sign,f
  2612  0360                     l2179:	
  2613  0360  01CD               	clrf	___awdiv@quotient
  2614  0361  01CE               	clrf	___awdiv@quotient+1
  2615  0362  0848               	movf	___awdiv@divisor+1,w
  2616  0363  0447               	iorwf	___awdiv@divisor,w
  2617  0364  1903               	skipnz
  2618  0365  2B97               	goto	l2201
  2619  0366  01CB               	clrf	___awdiv@counter
  2620  0367  0ACB               	incf	___awdiv@counter,f
  2621  0368                     l2189:	
  2622  0368  1BC8               	btfsc	___awdiv@divisor+1,7
  2623  0369  2B76               	goto	l2191
  2624  036A  3001               	movlw	1
  2625  036B                     u2165:	
  2626  036B  1003               	clrc
  2627  036C  0DC7               	rlf	___awdiv@divisor,f
  2628  036D  0DC8               	rlf	___awdiv@divisor+1,f
  2629  036E  3EFF               	addlw	-1
  2630  036F  1D03               	skipz
  2631  0370  2B6B               	goto	u2165
  2632  0371  3001               	movlw	1
  2633  0372  00F4               	movwf	??___awdiv
  2634  0373  0874               	movf	??___awdiv,w
  2635  0374  07CB               	addwf	___awdiv@counter,f
  2636  0375  2B68               	goto	l2189
  2637  0376                     l2191:	
  2638  0376  3001               	movlw	1
  2639  0377                     u2185:	
  2640  0377  1003               	clrc
  2641  0378  0DCD               	rlf	___awdiv@quotient,f
  2642  0379  0DCE               	rlf	___awdiv@quotient+1,f
  2643  037A  3EFF               	addlw	-1
  2644  037B  1D03               	skipz
  2645  037C  2B77               	goto	u2185
  2646  037D  0848               	movf	___awdiv@divisor+1,w
  2647  037E  024A               	subwf	___awdiv@dividend+1,w
  2648  037F  1D03               	skipz
  2649  0380  2B83               	goto	u2195
  2650  0381  0847               	movf	___awdiv@divisor,w
  2651  0382  0249               	subwf	___awdiv@dividend,w
  2652  0383                     u2195:	
  2653  0383  1C03               	skipc
  2654  0384  2B8C               	goto	l2197
  2655  0385  0847               	movf	___awdiv@divisor,w
  2656  0386  02C9               	subwf	___awdiv@dividend,f
  2657  0387  0848               	movf	___awdiv@divisor+1,w
  2658  0388  1C03               	skipc
  2659  0389  03CA               	decf	___awdiv@dividend+1,f
  2660  038A  02CA               	subwf	___awdiv@dividend+1,f
  2661  038B  144D               	bsf	___awdiv@quotient,0
  2662  038C                     l2197:	
  2663  038C  3001               	movlw	1
  2664  038D                     u2205:	
  2665  038D  1003               	clrc
  2666  038E  0CC8               	rrf	___awdiv@divisor+1,f
  2667  038F  0CC7               	rrf	___awdiv@divisor,f
  2668  0390  3EFF               	addlw	-1
  2669  0391  1D03               	skipz
  2670  0392  2B8D               	goto	u2205
  2671  0393  3001               	movlw	1
  2672  0394  02CB               	subwf	___awdiv@counter,f
  2673  0395  1D03               	btfss	3,2
  2674  0396  2B76               	goto	l2191
  2675  0397                     l2201:	
  2676  0397  084C               	movf	___awdiv@sign,w
  2677  0398  1903               	btfsc	3,2
  2678  0399  2B9F               	goto	l2205
  2679  039A  09CD               	comf	___awdiv@quotient,f
  2680  039B  09CE               	comf	___awdiv@quotient+1,f
  2681  039C  0ACD               	incf	___awdiv@quotient,f
  2682  039D  1903               	skipnz
  2683  039E  0ACE               	incf	___awdiv@quotient+1,f
  2684  039F                     l2205:	
  2685  039F  084E               	movf	___awdiv@quotient+1,w
  2686  03A0  01C8               	clrf	?___awdiv+1
  2687  03A1  07C8               	addwf	?___awdiv+1,f
  2688  03A2  084D               	movf	___awdiv@quotient,w
  2689  03A3  01C7               	clrf	?___awdiv
  2690  03A4  07C7               	addwf	?___awdiv,f
  2691  03A5  0008               	return
  2692  03A6                     __end_of___awdiv:	
  2693                           
  2694                           	psect	text6
  2695  04C9                     __ptext6:	
  2696 ;; *************** function _getCDS_AD *****************
  2697 ;; Defined at:
  2698 ;;		line 45 in file "../src/CDS_B1.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  channel1        1    wreg     unsigned char 
  2701 ;;  channel2        1    6[COMMON] unsigned char 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  channel1        1    4[BANK0 ] unsigned char 
  2704 ;;  j               1    3[BANK0 ] unsigned char 
  2705 ;;  i               1    2[BANK0 ] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2715 ;;      Params:         1       0       0       0
  2716 ;;      Locals:         0       3       0       0
  2717 ;;      Temps:          0       2       0       0
  2718 ;;      Totals:         1       5       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    4
  2722 ;; This function calls:
  2723 ;;		_getAD
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _getCDS_AD
  2731  04C9                     _getCDS_AD:	
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2735                           ;getCDS_AD@channel1 stored from wreg
  2736  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2737  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2738  04CB  00CB               	movwf	getCDS_AD@channel1
  2739                           
  2740                           ;CDS_B1.c: 46: char i = 0, j = 0;
  2741  04CC  01C9               	clrf	getCDS_AD@i
  2742  04CD  01CA               	clrf	getCDS_AD@j
  2743                           
  2744                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  2745  04CE  1DB3               	btfss	__CDS,3
  2746  04CF  0008               	return
  2747                           
  2748                           ;CDS_B1.c: 48: _CDS.GO = 1;
  2749  04D0  14B3               	bsf	__CDS,1
  2750                           
  2751                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  2752  04D1  3070               	movlw	112
  2753  04D2  00C7               	movwf	??_getCDS_AD
  2754  04D3  0847               	movf	??_getCDS_AD,w
  2755  04D4  00F4               	movwf	getAD@adcon1
  2756  04D5  084B               	movf	getCDS_AD@channel1,w
  2757  04D6  118A  24F3  118A   	fcall	_getAD
  2758  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2759  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2760  04DB  00C8               	movwf	??_getCDS_AD+1
  2761  04DC  0848               	movf	??_getCDS_AD+1,w
  2762  04DD  00B7               	movwf	__CDS+4
  2763                           
  2764                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  2765  04DE  0837               	movf	__CDS+4,w
  2766  04DF  00C7               	movwf	??_getCDS_AD
  2767  04E0  0847               	movf	??_getCDS_AD,w
  2768  04E1  00B5               	movwf	__CDS+2
  2769                           
  2770                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  2771  04E2  3070               	movlw	112
  2772  04E3  00C7               	movwf	??_getCDS_AD
  2773  04E4  0847               	movf	??_getCDS_AD,w
  2774  04E5  00F4               	movwf	getAD@adcon1
  2775  04E6  0876               	movf	getCDS_AD@channel2,w
  2776  04E7  118A  24F3         	fcall	_getAD
  2777  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2778  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2779  04EB  00C8               	movwf	??_getCDS_AD+1
  2780  04EC  0848               	movf	??_getCDS_AD+1,w
  2781  04ED  00B7               	movwf	__CDS+4
  2782                           
  2783                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  2784  04EE  0837               	movf	__CDS+4,w
  2785  04EF  00C7               	movwf	??_getCDS_AD
  2786  04F0  0847               	movf	??_getCDS_AD,w
  2787  04F1  00B6               	movwf	__CDS+3
  2788  04F2  0008               	return
  2789  04F3                     __end_of_getCDS_AD:	
  2790                           
  2791                           	psect	text7
  2792  04F3                     __ptext7:	
  2793 ;; *************** function _getAD *****************
  2794 ;; Defined at:
  2795 ;;		line 426 in file "../src/MCU_B1.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  adcon0          1    wreg     unsigned char 
  2798 ;;  adcon1          1    4[COMMON] unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  adcon0          1    5[COMMON] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      unsigned char 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2810 ;;      Params:         1       0       0       0
  2811 ;;      Locals:         1       0       0       0
  2812 ;;      Temps:          0       0       0       0
  2813 ;;      Totals:         2       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    3
  2817 ;; This function calls:
  2818 ;;		_Timeout_Counter
  2819 ;;		_set_TimeoutCleared
  2820 ;; This function is called by:
  2821 ;;		_getCDS_AD
  2822 ;;		_getPIR_AD
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _getAD
  2828  04F3                     _getAD:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2832                           ;getAD@adcon0 stored from wreg
  2833  04F3  00F5               	movwf	getAD@adcon0
  2834                           
  2835                           ;MCU_B1.c: 427: ADCON0 = adcon0;
  2836  04F4  0875               	movf	getAD@adcon0,w
  2837  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2838  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2839  04F7  009F               	movwf	31	;volatile
  2840                           
  2841                           ;MCU_B1.c: 428: ADCON1 = adcon1;
  2842  04F8  0874               	movf	getAD@adcon1,w
  2843  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2844  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2845  04FB  009F               	movwf	31	;volatile
  2846                           
  2847                           ;MCU_B1.c: 429: GO_nDONE = 1;
  2848  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2849  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2850  04FE  149F               	bsf	31,1	;volatile
  2851                           
  2852                           ;MCU_B1.c: 430: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2853  04FF  2D03               	goto	l1667
  2854  0500                     l1665:	
  2855                           
  2856                           ;MCU_B1.c: 431: Timeout_Counter();
  2857  0500  118A  255C  118A   	fcall	_Timeout_Counter
  2858  0503                     l1667:	
  2859  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0505  1C9F               	btfss	31,1	;volatile
  2862  0506  2D09               	goto	l1671
  2863  0507  1D30               	btfss	_myMain+16,2
  2864  0508  2D00               	goto	l1665
  2865  0509                     l1671:	
  2866                           
  2867                           ;MCU_B1.c: 432: };
  2868                           ;MCU_B1.c: 433: set_TimeoutCleared();
  2869  0509  118A  2609         	fcall	_set_TimeoutCleared
  2870                           
  2871                           ;MCU_B1.c: 434: return ADRES;
  2872  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2873  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2874  050D  081E               	movf	30,w	;volatile
  2875  050E  0008               	return
  2876  050F                     __end_of_getAD:	
  2877                           
  2878                           	psect	text8
  2879  0609                     __ptext8:	
  2880 ;; *************** function _set_TimeoutCleared *****************
  2881 ;; Defined at:
  2882 ;;		line 279 in file "../src/Main_B1.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;		None               void
  2889 ;; Registers used:
  2890 ;;		status,2
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2896 ;;      Params:         0       0       0       0
  2897 ;;      Locals:         0       0       0       0
  2898 ;;      Temps:          0       0       0       0
  2899 ;;      Totals:         0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_getAD
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _set_TimeoutCleared
  2912  0609                     _set_TimeoutCleared:	
  2913                           
  2914                           ;Main_B1.c: 280: myMain.Timeout = 0;
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _set_TimeoutCleared: [status,2]
  2918  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2919  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2920  060B  1130               	bcf	_myMain+16,2
  2921                           
  2922                           ;Main_B1.c: 281: myMain.Timeout_Counter = 0;
  2923  060C  01B1               	clrf	_myMain+17
  2924  060D  01B2               	clrf	_myMain+18
  2925  060E  0008               	return
  2926  060F                     __end_of_set_TimeoutCleared:	
  2927                           
  2928                           	psect	text9
  2929  055C                     __ptext9:	
  2930 ;; *************** function _Timeout_Counter *****************
  2931 ;; Defined at:
  2932 ;;		line 270 in file "../src/Main_B1.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;		None               void
  2939 ;; Registers used:
  2940 ;;		wreg, status,2
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2946 ;;      Params:         0       0       0       0
  2947 ;;      Locals:         0       0       0       0
  2948 ;;      Temps:          0       0       0       0
  2949 ;;      Totals:         0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    2
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_getAD
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _Timeout_Counter
  2962  055C                     _Timeout_Counter:	
  2963                           
  2964                           ;Main_B1.c: 271: myMain.Timeout_Counter++;
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  2968  055C  3001               	movlw	1
  2969  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2970  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2971  055F  07B1               	addwf	_myMain+17,f
  2972  0560  1803               	skipnc
  2973  0561  0AB2               	incf	_myMain+18,f
  2974  0562  3000               	movlw	0
  2975  0563  07B2               	addwf	_myMain+18,f
  2976                           
  2977                           ;Main_B1.c: 272: if (myMain.Timeout_Counter == 10000) {
  2978  0564  3027               	movlw	39
  2979  0565  0632               	xorwf	_myMain+18,w
  2980  0566  1D03               	skipz
  2981  0567  2D6A               	goto	u1165
  2982  0568  3010               	movlw	16
  2983  0569  0631               	xorwf	_myMain+17,w
  2984  056A                     u1165:	
  2985  056A  1D03               	skipz
  2986  056B  0008               	return
  2987                           
  2988                           ;Main_B1.c: 273: myMain.Timeout_Counter = 0;
  2989  056C  01B1               	clrf	_myMain+17
  2990  056D  01B2               	clrf	_myMain+18
  2991                           
  2992                           ;Main_B1.c: 274: myMain.Timeout = 1;
  2993  056E  1530               	bsf	_myMain+16,2
  2994  056F  0008               	return
  2995  0570                     __end_of_Timeout_Counter:	
  2996                           
  2997                           	psect	text10
  2998  05A2                     __ptext10:	
  2999 ;; *************** function _WDT_Main *****************
  3000 ;; Defined at:
  3001 ;;		line 1019 in file "../src/MCU_B1.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3015 ;;      Params:         0       0       0       0
  3016 ;;      Locals:         0       0       0       0
  3017 ;;      Temps:          1       0       0       0
  3018 ;;      Totals:         1       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    3
  3022 ;; This function calls:
  3023 ;;		_WDT_Clearing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _WDT_Main
  3031  05A2                     _WDT_Main:	
  3032                           
  3033                           ;MCU_B1.c: 1020: if (WDT.Enable == 1) {
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3037  05A2  1C77               	btfss	_WDT,0
  3038  05A3  0008               	return
  3039                           
  3040                           ;MCU_B1.c: 1021: if (WDT.Timer-- > 0) {
  3041  05A4  3001               	movlw	1
  3042  05A5  02F8               	subwf	_WDT+1,f
  3043  05A6  0878               	movf	_WDT+1,w
  3044  05A7  3AFF               	xorlw	255
  3045  05A8  1903               	skipnz
  3046  05A9  0008               	return
  3047                           
  3048                           ;MCU_B1.c: 1022: WDT.Timer = 100;
  3049  05AA  3064               	movlw	100
  3050  05AB  00F4               	movwf	??_WDT_Main
  3051  05AC  0874               	movf	??_WDT_Main,w
  3052  05AD  00F8               	movwf	_WDT+1
  3053                           
  3054                           ;MCU_B1.c: 1023: WDT_Clearing();
  3055  05AE  118A  2618         	fcall	_WDT_Clearing
  3056  05B0  0008               	return
  3057  05B1                     __end_of_WDT_Main:	
  3058                           
  3059                           	psect	text11
  3060  0618                     __ptext11:	
  3061 ;; *************** function _WDT_Clearing *****************
  3062 ;; Defined at:
  3063 ;;		line 1029 in file "../src/MCU_B1.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		None
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3077 ;;      Params:         0       0       0       0
  3078 ;;      Locals:         0       0       0       0
  3079 ;;      Temps:          0       0       0       0
  3080 ;;      Totals:         0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_WDT_Main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _WDT_Clearing
  3093  0618                     _WDT_Clearing:	
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in _WDT_Clearing: []
  3097  0618  0064               	clrwdt	;# 
  3098  0619  0008               	return
  3099  061A                     __end_of_WDT_Clearing:	
  3100                           
  3101                           	psect	text12
  3102  0025                     __ptext12:	
  3103 ;; *************** function _PIR_Main *****************
  3104 ;; Defined at:
  3105 ;;		line 14 in file "../src/PIR_B1.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;		None               void
  3112 ;; Registers used:
  3113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3119 ;;      Params:         0       0       0       0
  3120 ;;      Locals:         0       0       0       0
  3121 ;;      Temps:          0       5       0       0
  3122 ;;      Totals:         0       5       0       0
  3123 ;;Total ram usage:        5 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    4
  3126 ;; This function calls:
  3127 ;;		_getCDS_Status
  3128 ;;		_setLED
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _PIR_Main
  3136  0025                     _PIR_Main:	
  3137                           
  3138                           ;PIR_B1.c: 15: if (_PIR.Enable == 1) {
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3142  0025  1683               	bsf	3,5	;RP0=1, select bank1
  3143  0026  1303               	bcf	3,6	;RP1=0, select bank1
  3144  0027  1C20               	btfss	__PIR^(0+128),0
  3145  0028  0008               	return
  3146                           
  3147                           ;PIR_B1.c: 17: if (getCDS_Status() == 1) {
  3148  0029  118A  25FA  118A   	fcall	_getCDS_Status
  3149  002C  3A01               	xorlw	1
  3150  002D  1D03               	skipz
  3151  002E  283E               	goto	l472
  3152                           
  3153                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  3154  002F  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0030  1303               	bcf	3,6	;RP1=0, select bank1
  3156  0031  1A20               	btfsc	__PIR^(0+128),4
  3157  0032  2869               	goto	l2355
  3158                           
  3159                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  3160  0033  1620               	bsf	__PIR^(0+128),4
  3161                           
  3162                           ;PIR_B1.c: 20: _PIR.Available = 1;
  3163  0034  17A0               	bsf	__PIR^(0+128),7
  3164                           
  3165                           ;PIR_B1.c: 21: if (_PIR.OK == 0) {
  3166  0035  19A0               	btfsc	__PIR^(0+128),3
  3167  0036  2869               	goto	l2355
  3168                           
  3169                           ;PIR_B1.c: 22: setLED(2, 1);
  3170  0037  01F6               	clrf	setLED@command
  3171  0038  0AF6               	incf	setLED@command,f
  3172  0039  3002               	movlw	2
  3173  003A  118A  22E9  118A   	fcall	_setLED
  3174                           
  3175                           ;PIR_B1.c: 23: }
  3176                           ;PIR_B1.c: 24: }
  3177                           ;PIR_B1.c: 25: } else {
  3178  003D  2869               	goto	l2355
  3179  003E                     l472:	
  3180                           
  3181                           ;PIR_B1.c: 26: if (_PIR.Detect == 1) {
  3182  003E  1683               	bsf	3,5	;RP0=1, select bank1
  3183  003F  1303               	bcf	3,6	;RP1=0, select bank1
  3184  0040  1E20               	btfss	__PIR^(0+128),4
  3185  0041  2869               	goto	l2355
  3186                           
  3187                           ;PIR_B1.c: 27: _PIR.Detect = 0;
  3188  0042  1220               	bcf	__PIR^(0+128),4
  3189                           
  3190                           ;PIR_B1.c: 28: _PIR.Available = 0;
  3191  0043  13A0               	bcf	__PIR^(0+128),7
  3192                           
  3193                           ;PIR_B1.c: 29: _PIR.Status = 0;
  3194  0044  1320               	bcf	__PIR^(0+128),6
  3195                           
  3196                           ;PIR_B1.c: 30: RB3 = 1;
  3197  0045  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0046  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0047  1586               	bsf	6,3	;volatile
  3200                           
  3201                           ;PIR_B1.c: 32: _PIR.Time = 0;
  3202  0048  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0049  1303               	bcf	3,6	;RP1=0, select bank1
  3204  004A  01A5               	clrf	(__PIR^(0+128)+5)
  3205                           
  3206                           ;PIR_B1.c: 33: _PIR.RangeTime1 = 0;
  3207  004B  01CA               	clrf	(__PIR^(0+128)+42)
  3208                           
  3209                           ;PIR_B1.c: 34: _PIR.RangeValue = 15;
  3210  004C  300F               	movlw	15
  3211  004D  1283               	bcf	3,5	;RP0=0, select bank0
  3212  004E  1303               	bcf	3,6	;RP1=0, select bank0
  3213  004F  00C8               	movwf	??_PIR_Main
  3214  0050  0848               	movf	??_PIR_Main,w
  3215  0051  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0052  1303               	bcf	3,6	;RP1=0, select bank1
  3217  0053  00CC               	movwf	(__PIR^(0+128)+44)
  3218                           
  3219                           ;PIR_B1.c: 35: _PIR.RangeCount = 0;
  3220  0054  01CB               	clrf	(__PIR^(0+128)+43)
  3221                           
  3222                           ;PIR_B1.c: 37: setLED(1, 0);
  3223  0055  01F6               	clrf	setLED@command
  3224  0056  3001               	movlw	1
  3225  0057  118A  22E9  118A   	fcall	_setLED
  3226                           
  3227                           ;PIR_B1.c: 38: setLED(2, 0);
  3228  005A  01F6               	clrf	setLED@command
  3229  005B  3002               	movlw	2
  3230  005C  118A  22E9  118A   	fcall	_setLED
  3231                           
  3232                           ;PIR_B1.c: 39: _PIR.Status = 0;
  3233  005F  1683               	bsf	3,5	;RP0=1, select bank1
  3234  0060  1303               	bcf	3,6	;RP1=0, select bank1
  3235  0061  1320               	bcf	__PIR^(0+128),6
  3236                           
  3237                           ;PIR_B1.c: 40: if (_PIR.OK == 1) {
  3238  0062  1DA0               	btfss	__PIR^(0+128),3
  3239  0063  2866               	goto	l477
  3240                           
  3241                           ;PIR_B1.c: 41: _PIR.Count = 0;
  3242  0064  01C1               	clrf	(__PIR^(0+128)+33)
  3243  0065  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3244  0066                     l477:	
  3245                           
  3246                           ;PIR_B1.c: 42: }
  3247                           ;PIR_B1.c: 43: _PIR.CloseTimeSeconds = 0;
  3248  0066  01C6               	clrf	(__PIR^(0+128)+38)
  3249                           
  3250                           ;PIR_B1.c: 44: _PIR.CloseTimeMinutes = 0;
  3251  0067  01C4               	clrf	(__PIR^(0+128)+36)
  3252  0068  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3253  0069                     l2355:	
  3254                           
  3255                           ;PIR_B1.c: 55: }
  3256                           ;PIR_B1.c: 56: }
  3257                           ;PIR_B1.c: 58: if (_PIR.ADtoGO == 0) {
  3258  0069  1683               	bsf	3,5	;RP0=1, select bank1
  3259  006A  1303               	bcf	3,6	;RP1=0, select bank1
  3260  006B  18A0               	btfsc	__PIR^(0+128),1
  3261  006C  287C               	goto	l478
  3262                           
  3263                           ;PIR_B1.c: 59: _PIR.Time++;
  3264  006D  3001               	movlw	1
  3265  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3266  006F  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0070  00C8               	movwf	??_PIR_Main
  3268  0071  0848               	movf	??_PIR_Main,w
  3269  0072  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0073  1303               	bcf	3,6	;RP1=0, select bank1
  3271  0074  07A5               	addwf	(__PIR^(0+128)+5),f
  3272                           
  3273                           ;PIR_B1.c: 60: if (_PIR.Time == 10) {
  3274  0075  0825               	movf	(__PIR^(0+128)+5),w
  3275  0076  3A0A               	xorlw	10
  3276  0077  1D03               	skipz
  3277  0078  2972               	goto	l2431
  3278                           
  3279                           ;PIR_B1.c: 61: _PIR.Time = 0;
  3280  0079  01A5               	clrf	(__PIR^(0+128)+5)
  3281                           
  3282                           ;PIR_B1.c: 62: _PIR.ADtoGO = 1;
  3283  007A  14A0               	bsf	__PIR^(0+128),1
  3284                           
  3285                           ;PIR_B1.c: 63: }
  3286                           ;PIR_B1.c: 64: } else {
  3287  007B  2972               	goto	l2431
  3288  007C                     l478:	
  3289                           
  3290                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  3291  007C  1D20               	btfss	__PIR^(0+128),2
  3292  007D  2972               	goto	l2431
  3293                           
  3294                           ;PIR_B1.c: 66: _PIR.GO = 0;
  3295  007E  1120               	bcf	__PIR^(0+128),2
  3296                           
  3297                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  3298  007F  1BA0               	btfsc	__PIR^(0+128),7
  3299                           
  3300                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  3301  0080  1DA0               	btfss	__PIR^(0+128),3
  3302  0081  2972               	goto	l2431
  3303                           
  3304                           ;PIR_B1.c: 70: _PIR.Time++;
  3305  0082  3001               	movlw	1
  3306  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0085  00C8               	movwf	??_PIR_Main
  3309  0086  0848               	movf	??_PIR_Main,w
  3310  0087  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0088  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0089  07A5               	addwf	(__PIR^(0+128)+5),f
  3313                           
  3314                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  3315  008A  0825               	movf	(__PIR^(0+128)+5),w
  3316  008B  3A3C               	xorlw	60
  3317  008C  1D03               	skipz
  3318  008D  28C2               	goto	l2405
  3319                           
  3320                           ;PIR_B1.c: 72: _PIR.Time = 0;
  3321  008E  01A5               	clrf	(__PIR^(0+128)+5)
  3322                           
  3323                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  3324  008F  305A               	movlw	90
  3325  0090  024B               	subwf	(__PIR^(0+128)+43),w
  3326  0091  1C03               	skipc
  3327  0092  289E               	goto	l2387
  3328                           
  3329                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  3330  0093  01CA               	clrf	(__PIR^(0+128)+42)
  3331                           
  3332                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 15) {
  3333  0094  084C               	movf	(__PIR^(0+128)+44),w
  3334  0095  3A0F               	xorlw	15
  3335  0096  1903               	btfsc	3,2
  3336  0097  28B3               	goto	L11
  3337                           
  3338                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  3339                           
  3340                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  3341  0098  084C               	movf	(__PIR^(0+128)+44),w
  3342  0099  3A19               	xorlw	25
  3343  009A  1D03               	skipz
  3344  009B  28C1               	goto	l2403
  3345                           
  3346                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  3347  009C  3023               	movlw	35
  3348  009D  28BA               	goto	L8
  3349  009E                     l2387:	
  3350                           ;PIR_B1.c: 80: }
  3351                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  3352                           
  3353  009E  300B               	movlw	11
  3354  009F  024B               	subwf	(__PIR^(0+128)+43),w
  3355  00A0  1803               	skipnc
  3356  00A1  28C1               	goto	l2403
  3357                           
  3358                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  3359  00A2  3001               	movlw	1
  3360  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  3361  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  3362  00A5  00C8               	movwf	??_PIR_Main
  3363  00A6  0848               	movf	??_PIR_Main,w
  3364  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  3365  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  3366  00A9  07CA               	addwf	(__PIR^(0+128)+42),f
  3367                           
  3368                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  3369  00AA  084A               	movf	(__PIR^(0+128)+42),w
  3370  00AB  3A02               	xorlw	2
  3371  00AC  1D03               	skipz
  3372  00AD  28C1               	goto	l2403
  3373                           
  3374                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  3375  00AE  01CA               	clrf	(__PIR^(0+128)+42)
  3376                           
  3377                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  3378  00AF  084C               	movf	(__PIR^(0+128)+44),w
  3379  00B0  3A23               	xorlw	35
  3380  00B1  1D03               	skipz
  3381  00B2  28B5               	goto	l2399
  3382  00B3                     L11:	
  3383                           
  3384                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  3385  00B3  3019               	movlw	25
  3386  00B4  28BA               	goto	L8
  3387  00B5                     l2399:	
  3388                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  3389                           
  3390  00B5  084C               	movf	(__PIR^(0+128)+44),w
  3391  00B6  3A19               	xorlw	25
  3392  00B7  1D03               	skipz
  3393  00B8  28C1               	goto	l2403
  3394                           
  3395                           ;PIR_B1.c: 89: _PIR.RangeValue = 15;
  3396  00B9  300F               	movlw	15
  3397  00BA                     L8:	
  3398  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  3399  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  3400  00BC  00C8               	movwf	??_PIR_Main
  3401  00BD  0848               	movf	??_PIR_Main,w
  3402  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  3403  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  3404  00C0  00CC               	movwf	(__PIR^(0+128)+44)
  3405  00C1                     l2403:	
  3406                           
  3407                           ;PIR_B1.c: 90: }
  3408                           ;PIR_B1.c: 91: }
  3409                           ;PIR_B1.c: 92: }
  3410                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  3411  00C1  01CB               	clrf	(__PIR^(0+128)+43)
  3412  00C2                     l2405:	
  3413                           
  3414                           ;PIR_B1.c: 94: }
  3415                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  3416                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  3417  00C2  084C               	movf	(__PIR^(0+128)+44),w
  3418  00C3  074E               	addwf	(__PIR^(0+128)+46),w
  3419  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3420  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3421  00C6  00C8               	movwf	??_PIR_Main
  3422  00C7  01C9               	clrf	??_PIR_Main+1
  3423  00C8  0DC9               	rlf	??_PIR_Main+1,f
  3424  00C9  09C8               	comf	??_PIR_Main,f
  3425  00CA  09C9               	comf	??_PIR_Main+1,f
  3426  00CB  0AC8               	incf	??_PIR_Main,f
  3427  00CC  1903               	skipnz
  3428  00CD  0AC9               	incf	??_PIR_Main+1,f
  3429  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  3430  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  3431  00D0  0828               	movf	(__PIR^(0+128)+8),w
  3432  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3433  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3434  00D3  0748               	addwf	??_PIR_Main,w
  3435  00D4  00CA               	movwf	??_PIR_Main+2
  3436  00D5  0849               	movf	??_PIR_Main+1,w
  3437  00D6  1803               	skipnc
  3438  00D7  0A49               	incf	??_PIR_Main+1,w
  3439  00D8  00CB               	movwf	??_PIR_Main+3
  3440  00D9  084B               	movf	??_PIR_Main+3,w
  3441  00DA  3A80               	xorlw	128
  3442  00DB  3C80               	sublw	128
  3443  00DC  1D03               	skipz
  3444  00DD  28E2               	goto	u2585
  3445  00DE  084A               	movf	??_PIR_Main+2,w
  3446  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3447  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  3448  00E1  0221               	subwf	(__PIR^(0+128)+1),w
  3449  00E2                     u2585:	
  3450  00E2  1C03               	skipc
  3451  00E3  290E               	goto	l2415
  3452  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  3453  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  3454  00E6  084C               	movf	(__PIR^(0+128)+44),w
  3455  00E7  074E               	addwf	(__PIR^(0+128)+46),w
  3456  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3457  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3458  00EA  00C8               	movwf	??_PIR_Main
  3459  00EB  01C9               	clrf	??_PIR_Main+1
  3460  00EC  0DC9               	rlf	??_PIR_Main+1,f
  3461  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  3462  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  3463  00EF  0828               	movf	(__PIR^(0+128)+8),w
  3464  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3465  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  3466  00F2  0748               	addwf	??_PIR_Main,w
  3467  00F3  00CA               	movwf	??_PIR_Main+2
  3468  00F4  3000               	movlw	0
  3469  00F5  1803               	skipnc
  3470  00F6  3001               	movlw	1
  3471  00F7  0749               	addwf	??_PIR_Main+1,w
  3472  00F8  00CB               	movwf	??_PIR_Main+3
  3473  00F9  084B               	movf	??_PIR_Main+3,w
  3474  00FA  3A80               	xorlw	128
  3475  00FB  00CC               	movwf	??_PIR_Main+4
  3476  00FC  3080               	movlw	128
  3477  00FD  024C               	subwf	??_PIR_Main+4,w
  3478  00FE  1D03               	skipz
  3479  00FF  2906               	goto	u2595
  3480  0100  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0101  1303               	bcf	3,6	;RP1=0, select bank1
  3482  0102  0821               	movf	(__PIR^(0+128)+1),w
  3483  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0105  024A               	subwf	??_PIR_Main+2,w
  3486  0106                     u2595:	
  3487  0106  1C03               	skipc
  3488  0107  290E               	goto	l2415
  3489                           
  3490                           ;PIR_B1.c: 99: _PIR.Count = 0;
  3491  0108  1683               	bsf	3,5	;RP0=1, select bank1
  3492  0109  1303               	bcf	3,6	;RP1=0, select bank1
  3493  010A  01C1               	clrf	(__PIR^(0+128)+33)
  3494  010B  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3495                           
  3496                           ;PIR_B1.c: 100: setLED(1, 0);
  3497  010C  01F6               	clrf	setLED@command
  3498  010D  2961               	goto	L12
  3499  010E                     l2415:	
  3500                           ;PIR_B1.c: 102: } else {
  3501                           
  3502                           ;PIR_B1.c: 101: setLED(2, 0);
  3503                           
  3504                           
  3505                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  3506  010E  3001               	movlw	1
  3507  010F  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0110  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0111  00C8               	movwf	??_PIR_Main
  3510  0112  0848               	movf	??_PIR_Main,w
  3511  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0115  07CB               	addwf	(__PIR^(0+128)+43),f
  3514                           
  3515                           ;PIR_B1.c: 104: _PIR.Count++;
  3516  0116  3001               	movlw	1
  3517  0117  07C1               	addwf	(__PIR^(0+128)+33),f
  3518  0118  1803               	skipnc
  3519  0119  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  3520  011A  3000               	movlw	0
  3521  011B  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  3522                           
  3523                           ;PIR_B1.c: 105: if (_PIR.Count == _PIR.TriggerValue) {
  3524  011C  0843               	movf	(__PIR^(0+128)+35),w
  3525  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3526  011E  1303               	bcf	3,6	;RP1=0, select bank0
  3527  011F  00C8               	movwf	??_PIR_Main
  3528  0120  01C9               	clrf	??_PIR_Main+1
  3529  0121  1683               	bsf	3,5	;RP0=1, select bank1
  3530  0122  1303               	bcf	3,6	;RP1=0, select bank1
  3531  0123  0842               	movf	((__PIR+1)^(0+128)+33),w
  3532  0124  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0125  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0126  0649               	xorwf	??_PIR_Main+1,w
  3535  0127  1D03               	skipz
  3536  0128  292F               	goto	u2605
  3537  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3538  012A  1303               	bcf	3,6	;RP1=0, select bank1
  3539  012B  0841               	movf	(__PIR^(0+128)+33),w
  3540  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3541  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3542  012E  0648               	xorwf	??_PIR_Main,w
  3543  012F                     u2605:	
  3544  012F  1D03               	skipz
  3545  0130  2972               	goto	l2431
  3546                           
  3547                           ;PIR_B1.c: 106: _PIR.Count = 0;
  3548  0131  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0132  1303               	bcf	3,6	;RP1=0, select bank1
  3550  0133  01C1               	clrf	(__PIR^(0+128)+33)
  3551  0134  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3552                           
  3553                           ;PIR_B1.c: 107: _PIR.CloseTimeSeconds = 0;
  3554  0135  01C6               	clrf	(__PIR^(0+128)+38)
  3555                           
  3556                           ;PIR_B1.c: 108: _PIR.CloseTimeMinutes = 0;
  3557  0136  01C4               	clrf	(__PIR^(0+128)+36)
  3558  0137  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3559                           
  3560                           ;PIR_B1.c: 119: _PIR.Status = 1;
  3561  0138  1720               	bsf	__PIR^(0+128),6
  3562                           
  3563                           ;PIR_B1.c: 121: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  3564  0139  084C               	movf	(__PIR^(0+128)+44),w
  3565  013A  074E               	addwf	(__PIR^(0+128)+46),w
  3566  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3567  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3568  013D  00C8               	movwf	??_PIR_Main
  3569  013E  01C9               	clrf	??_PIR_Main+1
  3570  013F  0DC9               	rlf	??_PIR_Main+1,f
  3571  0140  09C8               	comf	??_PIR_Main,f
  3572  0141  09C9               	comf	??_PIR_Main+1,f
  3573  0142  0AC8               	incf	??_PIR_Main,f
  3574  0143  1903               	skipnz
  3575  0144  0AC9               	incf	??_PIR_Main+1,f
  3576  0145  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0146  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0147  0828               	movf	(__PIR^(0+128)+8),w
  3579  0148  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0149  1303               	bcf	3,6	;RP1=0, select bank0
  3581  014A  0748               	addwf	??_PIR_Main,w
  3582  014B  00CA               	movwf	??_PIR_Main+2
  3583  014C  0849               	movf	??_PIR_Main+1,w
  3584  014D  1803               	skipnc
  3585  014E  0A49               	incf	??_PIR_Main+1,w
  3586  014F  00CB               	movwf	??_PIR_Main+3
  3587  0150  084B               	movf	??_PIR_Main+3,w
  3588  0151  3A80               	xorlw	128
  3589  0152  00CC               	movwf	??_PIR_Main+4
  3590  0153  3080               	movlw	128
  3591  0154  024C               	subwf	??_PIR_Main+4,w
  3592  0155  1D03               	skipz
  3593  0156  295D               	goto	u2615
  3594  0157  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0158  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0159  0821               	movf	(__PIR^(0+128)+1),w
  3597  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3598  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3599  015C  024A               	subwf	??_PIR_Main+2,w
  3600  015D                     u2615:	
  3601  015D  1C03               	skipc
  3602  015E  2967               	goto	l2429
  3603                           
  3604                           ;PIR_B1.c: 122: setLED(1, 1);
  3605  015F  01F6               	clrf	setLED@command
  3606  0160  0AF6               	incf	setLED@command,f
  3607  0161                     L12:	
  3608  0161  3001               	movlw	1
  3609  0162  118A  22E9  118A   	fcall	_setLED
  3610                           
  3611                           ;PIR_B1.c: 123: setLED(2, 0);
  3612  0165  01F6               	clrf	setLED@command
  3613  0166  296E               	goto	L9
  3614  0167                     l2429:	
  3615                           ;PIR_B1.c: 124: } else {
  3616                           
  3617                           
  3618                           ;PIR_B1.c: 125: setLED(1, 0);
  3619  0167  01F6               	clrf	setLED@command
  3620  0168  3001               	movlw	1
  3621  0169  118A  22E9  118A   	fcall	_setLED
  3622                           
  3623                           ;PIR_B1.c: 126: setLED(2, 1);
  3624  016C  01F6               	clrf	setLED@command
  3625  016D  0AF6               	incf	setLED@command,f
  3626  016E                     L9:	
  3627  016E  3002               	movlw	2
  3628  016F  118A  22E9  118A   	fcall	_setLED
  3629  0172                     l2431:	
  3630                           
  3631                           ;PIR_B1.c: 127: }
  3632                           ;PIR_B1.c: 128: }
  3633                           ;PIR_B1.c: 129: }
  3634                           ;PIR_B1.c: 130: }
  3635                           ;PIR_B1.c: 131: }
  3636                           ;PIR_B1.c: 132: }
  3637                           ;PIR_B1.c: 133: }
  3638                           ;PIR_B1.c: 134: if (_PIR.OK == 0) {
  3639  0172  1683               	bsf	3,5	;RP0=1, select bank1
  3640  0173  1303               	bcf	3,6	;RP1=0, select bank1
  3641  0174  19A0               	btfsc	__PIR^(0+128),3
  3642  0175  298C               	goto	l2441
  3643                           
  3644                           ;PIR_B1.c: 135: _PIR.Count++;
  3645  0176  3001               	movlw	1
  3646  0177  07C1               	addwf	(__PIR^(0+128)+33),f
  3647  0178  1803               	skipnc
  3648  0179  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  3649  017A  3000               	movlw	0
  3650  017B  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  3651                           
  3652                           ;PIR_B1.c: 136: if (_PIR.Count == 3000) {
  3653  017C  300B               	movlw	11
  3654  017D  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  3655  017E  1D03               	skipz
  3656  017F  2982               	goto	u2635
  3657  0180  30B8               	movlw	184
  3658  0181  0641               	xorwf	(__PIR^(0+128)+33),w
  3659  0182                     u2635:	
  3660  0182  1D03               	skipz
  3661  0183  298C               	goto	l2441
  3662                           
  3663                           ;PIR_B1.c: 137: _PIR.Count = 0;
  3664  0184  01C1               	clrf	(__PIR^(0+128)+33)
  3665  0185  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3666                           
  3667                           ;PIR_B1.c: 138: _PIR.OK = 1;
  3668  0186  15A0               	bsf	__PIR^(0+128),3
  3669                           
  3670                           ;PIR_B1.c: 139: setLED(2, 0);
  3671  0187  01F6               	clrf	setLED@command
  3672  0188  3002               	movlw	2
  3673  0189  118A  22E9  118A   	fcall	_setLED
  3674  018C                     l2441:	
  3675                           
  3676                           ;PIR_B1.c: 140: }
  3677                           ;PIR_B1.c: 141: }
  3678                           ;PIR_B1.c: 142: if (_PIR.Status == 1) {
  3679  018C  1683               	bsf	3,5	;RP0=1, select bank1
  3680  018D  1303               	bcf	3,6	;RP1=0, select bank1
  3681  018E  1F20               	btfss	__PIR^(0+128),6
  3682  018F  0008               	return
  3683                           
  3684                           ;PIR_B1.c: 143: _PIR.CloseTimeSeconds++;
  3685  0190  3001               	movlw	1
  3686  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0192  1303               	bcf	3,6	;RP1=0, select bank0
  3688  0193  00C8               	movwf	??_PIR_Main
  3689  0194  0848               	movf	??_PIR_Main,w
  3690  0195  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0196  1303               	bcf	3,6	;RP1=0, select bank1
  3692  0197  07C6               	addwf	(__PIR^(0+128)+38),f
  3693                           
  3694                           ;PIR_B1.c: 144: if (_PIR.CloseTimeSeconds == 100) {
  3695  0198  0846               	movf	(__PIR^(0+128)+38),w
  3696  0199  3A64               	xorlw	100
  3697  019A  1D03               	skipz
  3698  019B  0008               	return
  3699                           
  3700                           ;PIR_B1.c: 145: _PIR.CloseTimeSeconds = 0;
  3701  019C  01C6               	clrf	(__PIR^(0+128)+38)
  3702                           
  3703                           ;PIR_B1.c: 146: _PIR.CloseTimeMinutes++;
  3704  019D  3001               	movlw	1
  3705  019E  07C4               	addwf	(__PIR^(0+128)+36),f
  3706  019F  1803               	skipnc
  3707  01A0  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  3708  01A1  3000               	movlw	0
  3709  01A2  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  3710                           
  3711                           ;PIR_B1.c: 147: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  3712  01A3  0848               	movf	((__PIR+1)^(0+128)+39),w
  3713  01A4  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  3714  01A5  1D03               	skipz
  3715  01A6  29A9               	goto	u2665
  3716  01A7  0847               	movf	(__PIR^(0+128)+39),w
  3717  01A8  0644               	xorwf	(__PIR^(0+128)+36),w
  3718  01A9                     u2665:	
  3719  01A9  1D03               	skipz
  3720  01AA  0008               	return
  3721                           
  3722                           ;PIR_B1.c: 148: _PIR.CloseTimeMinutes = 0;
  3723  01AB  01C4               	clrf	(__PIR^(0+128)+36)
  3724  01AC  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3725                           
  3726                           ;PIR_B1.c: 149: _PIR.Status = 0;
  3727  01AD  1320               	bcf	__PIR^(0+128),6
  3728  01AE  0008               	return
  3729  01AF                     __end_of_PIR_Main:	
  3730                           
  3731                           	psect	text13
  3732  05FA                     __ptext13:	
  3733 ;; *************** function _getCDS_Status *****************
  3734 ;; Defined at:
  3735 ;;		line 40 in file "../src/CDS_B1.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  result          1    4[COMMON] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      unsigned char 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3749 ;;      Params:         0       0       0       0
  3750 ;;      Locals:         1       0       0       0
  3751 ;;      Temps:          0       0       0       0
  3752 ;;      Totals:         1       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    2
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_PIR_Main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _getCDS_Status
  3765  05FA                     _getCDS_Status:	
  3766                           
  3767                           ;CDS_B1.c: 41: char result = _CDS.Status;
  3768                           
  3769                           ;incstack = 0
  3770                           ; Regs used in _getCDS_Status: [wreg+status,2]
  3771  05FA  3000               	movlw	0
  3772  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3773  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3774  05FD  1A33               	btfsc	__CDS,4
  3775  05FE  3001               	movlw	1
  3776  05FF  00F4               	movwf	getCDS_Status@result
  3777                           
  3778                           ;CDS_B1.c: 42: return result;
  3779  0600  0874               	movf	getCDS_Status@result,w
  3780  0601  0008               	return
  3781  0602                     __end_of_getCDS_Status:	
  3782                           
  3783                           	psect	text14
  3784  0582                     __ptext14:	
  3785 ;; *************** function _PIR_Initialization *****************
  3786 ;; Defined at:
  3787 ;;		line 7 in file "../src/PIR_B1.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;		None               void
  3794 ;; Registers used:
  3795 ;;		wreg
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         0       0       0       0
  3802 ;;      Locals:         0       0       0       0
  3803 ;;      Temps:          1       0       0       0
  3804 ;;      Totals:         1       0       0       0
  3805 ;;Total ram usage:        1 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    2
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _PIR_Initialization
  3817  0582                     _PIR_Initialization:	
  3818                           
  3819                           ;PIR_B1.c: 8: _PIR.Enable = 1;
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _PIR_Initialization: [wreg]
  3823  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3824  0583  1303               	bcf	3,6	;RP1=0, select bank1
  3825  0584  1420               	bsf	__PIR^(0+128),0
  3826                           
  3827                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  3828  0585  300F               	movlw	15
  3829  0586  00F4               	movwf	??_PIR_Initialization
  3830  0587  0874               	movf	??_PIR_Initialization,w
  3831  0588  00CC               	movwf	(__PIR^(0+128)+44)
  3832                           
  3833                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 150;
  3834  0589  3096               	movlw	150
  3835  058A  00C7               	movwf	(__PIR^(0+128)+39)
  3836  058B  3000               	movlw	0
  3837  058C  00C8               	movwf	(__PIR^(0+128)+40)
  3838                           
  3839                           ;PIR_B1.c: 11: _PIR.TriggerValue = 2;
  3840  058D  3002               	movlw	2
  3841  058E  00F4               	movwf	??_PIR_Initialization
  3842  058F  0874               	movf	??_PIR_Initialization,w
  3843  0590  00C3               	movwf	(__PIR^(0+128)+35)
  3844  0591  0008               	return
  3845  0592                     __end_of_PIR_Initialization:	
  3846                           
  3847                           	psect	text15
  3848  05B1                     __ptext15:	
  3849 ;; *************** function _Mcu_Initialization *****************
  3850 ;; Defined at:
  3851 ;;		line 30 in file "../src/MCU_B1.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3865 ;;      Params:         0       0       0       0
  3866 ;;      Locals:         0       0       0       0
  3867 ;;      Temps:          0       0       0       0
  3868 ;;      Totals:         0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    3
  3872 ;; This function calls:
  3873 ;;		_ADC_Set
  3874 ;;		_Fosc_Set
  3875 ;;		_IO_Set
  3876 ;;		_TMR1_Set
  3877 ;;		_WDT_Set
  3878 ;; This function is called by:
  3879 ;;		_main
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _Mcu_Initialization
  3885  05B1                     _Mcu_Initialization:	
  3886                           
  3887                           ;MCU_B1.c: 32: Fosc_Set();
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  3891  05B1  118A  260F  118A   	fcall	_Fosc_Set
  3892                           
  3893                           ;MCU_B1.c: 34: IO_Set();
  3894  05B4  118A  2547  118A   	fcall	_IO_Set
  3895                           
  3896                           ;MCU_B1.c: 36: ;;
  3897                           ;MCU_B1.c: 38: TMR1_Set();
  3898  05B7  118A  25C0  118A   	fcall	_TMR1_Set
  3899                           
  3900                           ;MCU_B1.c: 40: ADC_Set();
  3901  05BA  118A  2602  118A   	fcall	_ADC_Set
  3902                           
  3903                           ;MCU_B1.c: 42: ;;
  3904                           ;MCU_B1.c: 44: ;;
  3905                           ;MCU_B1.c: 46: ;;
  3906                           ;MCU_B1.c: 48: ;;
  3907                           ;MCU_B1.c: 50: ;;
  3908                           ;MCU_B1.c: 52: WDT_Set();
  3909  05BD  118A  25CE         	fcall	_WDT_Set
  3910  05BF  0008               	return
  3911  05C0                     __end_of_Mcu_Initialization:	
  3912                           
  3913                           	psect	text16
  3914  05CE                     __ptext16:	
  3915 ;; *************** function _WDT_Set *****************
  3916 ;; Defined at:
  3917 ;;		line 1005 in file "../src/MCU_B1.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3931 ;;      Params:         0       0       0       0
  3932 ;;      Locals:         0       0       0       0
  3933 ;;      Temps:          1       0       0       0
  3934 ;;      Totals:         1       0       0       0
  3935 ;;Total ram usage:        1 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_Mcu_Initialization
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _WDT_Set
  3947  05CE                     _WDT_Set:	
  3948                           
  3949                           ;MCU_B1.c: 1007: PSA = 1;
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _WDT_Set: [wreg]
  3953  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3954  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3955  05D0  1581               	bsf	1,3	;volatile
  3956                           
  3957                           ;MCU_B1.c: 1008: PS0 = 1;
  3958  05D1  1401               	bsf	1,0	;volatile
  3959                           
  3960                           ;MCU_B1.c: 1009: PS1 = 1;
  3961  05D2  1481               	bsf	1,1	;volatile
  3962                           
  3963                           ;MCU_B1.c: 1010: PS2 = 1;
  3964  05D3  1501               	bsf	1,2	;volatile
  3965                           
  3966                           ;MCU_B1.c: 1014: WDT.Enable = 1;
  3967  05D4  1477               	bsf	_WDT,0
  3968                           
  3969                           ;MCU_B1.c: 1015: WDT.Timer = 10;
  3970  05D5  300A               	movlw	10
  3971  05D6  00F4               	movwf	??_WDT_Set
  3972  05D7  0874               	movf	??_WDT_Set,w
  3973  05D8  00F8               	movwf	_WDT+1
  3974  05D9  0008               	return
  3975  05DA                     __end_of_WDT_Set:	
  3976                           
  3977                           	psect	text17
  3978  05C0                     __ptext17:	
  3979 ;; *************** function _TMR1_Set *****************
  3980 ;; Defined at:
  3981 ;;		line 199 in file "../src/MCU_B1.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;		None               void
  3988 ;; Registers used:
  3989 ;;		wreg
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3995 ;;      Params:         0       0       0       0
  3996 ;;      Locals:         0       0       0       0
  3997 ;;      Temps:          0       0       0       0
  3998 ;;      Totals:         0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    2
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_Mcu_Initialization
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _TMR1_Set
  4011  05C0                     _TMR1_Set:	
  4012                           
  4013                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _TMR1_Set: [wreg]
  4017  05C0  3041               	movlw	65
  4018  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  4019  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  4020  05C3  0090               	movwf	16	;volatile
  4021                           
  4022                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  4023  05C4  30FA               	movlw	250
  4024  05C5  008F               	movwf	15	;volatile
  4025                           
  4026                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  4027  05C6  3038               	movlw	56
  4028  05C7  008E               	movwf	14	;volatile
  4029                           
  4030                           ;MCU_B1.c: 203: TMR1IE = 1;
  4031  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  4032  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  4033  05CA  140C               	bsf	12,0	;volatile
  4034                           
  4035                           ;MCU_B1.c: 204: PEIE = 1;
  4036  05CB  170B               	bsf	11,6	;volatile
  4037                           
  4038                           ;MCU_B1.c: 205: GIE = 1;
  4039  05CC  178B               	bsf	11,7	;volatile
  4040  05CD  0008               	return
  4041  05CE                     __end_of_TMR1_Set:	
  4042                           
  4043                           	psect	text18
  4044  0547                     __ptext18:	
  4045 ;; *************** function _IO_Set *****************
  4046 ;; Defined at:
  4047 ;;		line 60 in file "../src/MCU_B1.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;		None               void
  4054 ;; Registers used:
  4055 ;;		wreg, status,2
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4061 ;;      Params:         0       0       0       0
  4062 ;;      Locals:         0       0       0       0
  4063 ;;      Temps:          0       0       0       0
  4064 ;;      Totals:         0       0       0       0
  4065 ;;Total ram usage:        0 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    2
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_Mcu_Initialization
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function _IO_Set
  4077  0547                     _IO_Set:	
  4078                           
  4079                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  4080                           
  4081                           ;incstack = 0
  4082                           ; Regs used in _IO_Set: [wreg+status,2]
  4083  0547  302F               	movlw	47
  4084  0548  1683               	bsf	3,5	;RP0=1, select bank1
  4085  0549  1303               	bcf	3,6	;RP1=0, select bank1
  4086  054A  0085               	movwf	5	;volatile
  4087                           
  4088                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  4089  054B  3001               	movlw	1
  4090  054C  0086               	movwf	6	;volatile
  4091                           
  4092                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  4093  054D  0187               	clrf	7	;volatile
  4094                           
  4095                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  4096  054E  3007               	movlw	7
  4097  054F  1683               	bsf	3,5	;RP0=1, select bank3
  4098  0550  1703               	bsf	3,6	;RP1=1, select bank3
  4099  0551  0085               	movwf	5	;volatile
  4100                           
  4101                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  4102  0552  3001               	movlw	1
  4103  0553  0086               	movwf	6	;volatile
  4104                           
  4105                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  4106  0554  30AF               	movlw	175
  4107  0555  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0556  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0557  0085               	movwf	5	;volatile
  4110                           
  4111                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  4112  0558  3001               	movlw	1
  4113  0559  0086               	movwf	6	;volatile
  4114                           
  4115                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  4116  055A  0187               	clrf	7	;volatile
  4117  055B  0008               	return
  4118  055C                     __end_of_IO_Set:	
  4119                           
  4120                           	psect	text19
  4121  060F                     __ptext19:	
  4122 ;; *************** function _Fosc_Set *****************
  4123 ;; Defined at:
  4124 ;;		line 56 in file "../src/MCU_B1.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		wreg
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4138 ;;      Params:         0       0       0       0
  4139 ;;      Locals:         0       0       0       0
  4140 ;;      Temps:          0       0       0       0
  4141 ;;      Totals:         0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    2
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_Mcu_Initialization
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _Fosc_Set
  4154  060F                     _Fosc_Set:	
  4155                           
  4156                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _Fosc_Set: [wreg]
  4160  060F  303C               	movlw	60
  4161  0610  1683               	bsf	3,5	;RP0=1, select bank1
  4162  0611  1303               	bcf	3,6	;RP1=0, select bank1
  4163  0612  0090               	movwf	16	;volatile
  4164  0613  0008               	return
  4165  0614                     __end_of_Fosc_Set:	
  4166                           
  4167                           	psect	text20
  4168  0602                     __ptext20:	
  4169 ;; *************** function _ADC_Set *****************
  4170 ;; Defined at:
  4171 ;;		line 419 in file "../src/MCU_B1.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;		None               void
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4185 ;;      Params:         0       0       0       0
  4186 ;;      Locals:         0       0       0       0
  4187 ;;      Temps:          0       0       0       0
  4188 ;;      Totals:         0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_Mcu_Initialization
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _ADC_Set
  4201  0602                     _ADC_Set:	
  4202                           
  4203                           ;MCU_B1.c: 420: ADCON1 = 0x72;
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _ADC_Set: [wreg]
  4207  0602  3072               	movlw	114
  4208  0603  1683               	bsf	3,5	;RP0=1, select bank1
  4209  0604  1303               	bcf	3,6	;RP1=0, select bank1
  4210  0605  009F               	movwf	31	;volatile
  4211                           
  4212                           ;MCU_B1.c: 421: FVRCON = 0xc1;
  4213  0606  30C1               	movlw	193
  4214  0607  009D               	movwf	29	;volatile
  4215  0608  0008               	return
  4216  0609                     __end_of_ADC_Set:	
  4217                           
  4218                           	psect	text21
  4219  05DA                     __ptext21:	
  4220 ;; *************** function _LED_Main *****************
  4221 ;; Defined at:
  4222 ;;		line 47 in file "../src/LED_B1.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;		None               void
  4229 ;; Registers used:
  4230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4236 ;;      Params:         0       0       0       0
  4237 ;;      Locals:         0       0       0       0
  4238 ;;      Temps:          0       0       0       0
  4239 ;;      Totals:         0       0       0       0
  4240 ;;Total ram usage:        0 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    4
  4243 ;; This function calls:
  4244 ;;		_setLED_Main
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _LED_Main
  4252  05DA                     _LED_Main:	
  4253                           
  4254                           ;LED_B1.c: 49: setLED_Main(1);
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4258  05DA  3001               	movlw	1
  4259  05DB  118A  2425  118A   	fcall	_setLED_Main
  4260                           
  4261                           ;LED_B1.c: 52: setLED_Main(2);
  4262  05DE  3002               	movlw	2
  4263  05DF  118A  2425  118A   	fcall	_setLED_Main
  4264                           
  4265                           ;LED_B1.c: 58: setLED_Main(99);
  4266  05E2  3063               	movlw	99
  4267  05E3  118A  2425         	fcall	_setLED_Main
  4268  05E5  0008               	return
  4269  05E6                     __end_of_LED_Main:	
  4270                           
  4271                           	psect	text22
  4272  0425                     __ptext22:	
  4273 ;; *************** function _setLED_Main *****************
  4274 ;; Defined at:
  4275 ;;		line 192 in file "../src/LED_B1.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  led             1    wreg     unsigned char 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  led             1    6[COMMON] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;		None               void
  4282 ;; Registers used:
  4283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4289 ;;      Params:         0       0       0       0
  4290 ;;      Locals:         1       0       0       0
  4291 ;;      Temps:          0       2       0       0
  4292 ;;      Totals:         1       2       0       0
  4293 ;;Total ram usage:        3 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    3
  4296 ;; This function calls:
  4297 ;;		_LedPointSelect
  4298 ;; This function is called by:
  4299 ;;		_LED_Main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _setLED_Main
  4305  0425                     _setLED_Main:	
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4309                           ;setLED_Main@led stored from wreg
  4310  0425  00F6               	movwf	setLED_Main@led
  4311                           
  4312                           ;LED_B1.c: 193: LedPointSelect(led);
  4313  0426  0876               	movf	setLED_Main@led,w
  4314  0427  118A  250F  118A   	fcall	_LedPointSelect
  4315                           
  4316                           ;LED_B1.c: 194: if (LED->GO == 1) {
  4317  042A  0879               	movf	_LED,w
  4318  042B  0084               	movwf	4
  4319  042C  1383               	bcf	3,7	;select IRP bank0
  4320  042D  1C80               	btfss	0,1
  4321  042E  0008               	return
  4322                           
  4323                           ;LED_B1.c: 195: LED->Time++;
  4324  042F  0A79               	incf	_LED,w
  4325  0430  0084               	movwf	4
  4326  0431  3001               	movlw	1
  4327  0432  0780               	addwf	0,f
  4328  0433  0A84               	incf	4,f
  4329  0434  1803               	skipnc
  4330  0435  0A80               	incf	0,f
  4331                           
  4332                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
  4333  0436  0A79               	incf	_LED,w
  4334  0437  0084               	movwf	4
  4335  0438  0800               	movf	0,w
  4336  0439  1283               	bcf	3,5	;RP0=0, select bank0
  4337  043A  1303               	bcf	3,6	;RP1=0, select bank0
  4338  043B  00C7               	movwf	??_setLED_Main
  4339  043C  0A84               	incf	4,f
  4340  043D  0800               	movf	0,w
  4341  043E  00C8               	movwf	??_setLED_Main+1
  4342  043F  3000               	movlw	0
  4343  0440  0248               	subwf	??_setLED_Main+1,w
  4344  0441  3032               	movlw	50
  4345  0442  1903               	skipnz
  4346  0443  0247               	subwf	??_setLED_Main,w
  4347  0444  1C03               	skipc
  4348  0445  0008               	return
  4349                           
  4350                           ;LED_B1.c: 197: LED->Time = 0;
  4351  0446  0A79               	incf	_LED,w
  4352  0447  0084               	movwf	4
  4353  0448  0180               	clrf	0
  4354  0449  0A84               	incf	4,f
  4355  044A  0180               	clrf	0
  4356                           
  4357                           ;LED_B1.c: 199: if (led == 1) {
  4358  044B  0876               	movf	setLED_Main@led,w
  4359  044C  3A01               	xorlw	1
  4360  044D  1D03               	skipz
  4361  044E  2C52               	goto	l2157
  4362                           
  4363                           ;LED_B1.c: 200: RB4 = RB4 == 1 ? 0 : 1;
  4364  044F  3010               	movlw	16
  4365  0450  0686               	xorwf	6,f
  4366                           
  4367                           ;LED_B1.c: 201: }
  4368  0451  0008               	return
  4369  0452                     l2157:	
  4370                           
  4371                           ;LED_B1.c: 204: else if (led == 2) {
  4372  0452  0876               	movf	setLED_Main@led,w
  4373  0453  3A02               	xorlw	2
  4374  0454  1D03               	skipz
  4375  0455  2C59               	goto	l2161
  4376                           
  4377                           ;LED_B1.c: 205: RB5 = RB5 == 1 ? 0 : 1;
  4378  0456  3020               	movlw	32
  4379  0457  0686               	xorwf	6,f
  4380                           
  4381                           ;LED_B1.c: 206: }
  4382  0458  0008               	return
  4383  0459                     l2161:	
  4384                           
  4385                           ;LED_B1.c: 214: else if (led == 99) {
  4386  0459  0876               	movf	setLED_Main@led,w
  4387  045A  3A63               	xorlw	99
  4388  045B  1D03               	skipz
  4389  045C  0008               	return
  4390                           
  4391                           ;LED_B1.c: 215: RB3 = RB3 == 1 ? 0 : 1;
  4392  045D  3008               	movlw	8
  4393  045E  0686               	xorwf	6,f
  4394  045F  0008               	return
  4395  0460                     __end_of_setLED_Main:	
  4396                           
  4397                           	psect	text23
  4398  05E6                     __ptext23:	
  4399 ;; *************** function _LED_Initialization *****************
  4400 ;; Defined at:
  4401 ;;		line 31 in file "../src/LED_B1.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;		None               void
  4408 ;; Registers used:
  4409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4415 ;;      Params:         0       0       0       0
  4416 ;;      Locals:         0       0       0       0
  4417 ;;      Temps:          0       0       0       0
  4418 ;;      Totals:         0       0       0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    5
  4422 ;; This function calls:
  4423 ;;		_setLED_Initialization
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _LED_Initialization
  4431  05E6                     _LED_Initialization:	
  4432                           
  4433                           ;LED_B1.c: 33: setLED_Initialization(1);
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4437  05E6  3001               	movlw	1
  4438  05E7  118A  2570  118A   	fcall	_setLED_Initialization
  4439                           
  4440                           ;LED_B1.c: 36: setLED_Initialization(2);
  4441  05EA  3002               	movlw	2
  4442  05EB  118A  2570  118A   	fcall	_setLED_Initialization
  4443                           
  4444                           ;LED_B1.c: 42: setLED_Initialization(99);
  4445  05EE  3063               	movlw	99
  4446  05EF  118A  2570         	fcall	_setLED_Initialization
  4447  05F1  0008               	return
  4448  05F2                     __end_of_LED_Initialization:	
  4449                           
  4450                           	psect	text24
  4451  0570                     __ptext24:	
  4452 ;; *************** function _setLED_Initialization *****************
  4453 ;; Defined at:
  4454 ;;		line 63 in file "../src/LED_B1.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  led             1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  led             1    1[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4468 ;;      Params:         0       0       0       0
  4469 ;;      Locals:         0       1       0       0
  4470 ;;      Temps:          0       0       0       0
  4471 ;;      Totals:         0       1       0       0
  4472 ;;Total ram usage:        1 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    4
  4475 ;; This function calls:
  4476 ;;		_LedPointSelect
  4477 ;;		_setLED
  4478 ;; This function is called by:
  4479 ;;		_LED_Initialization
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _setLED_Initialization
  4485  0570                     _setLED_Initialization:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4489                           ;setLED_Initialization@led stored from wreg
  4490  0570  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0571  1303               	bcf	3,6	;RP1=0, select bank0
  4492  0572  00C8               	movwf	setLED_Initialization@led
  4493                           
  4494                           ;LED_B1.c: 64: LedPointSelect(led);
  4495  0573  0848               	movf	setLED_Initialization@led,w
  4496  0574  118A  250F  118A   	fcall	_LedPointSelect
  4497                           
  4498                           ;LED_B1.c: 65: LED->Enable = 1;
  4499  0577  0879               	movf	_LED,w
  4500  0578  0084               	movwf	4
  4501  0579  1383               	bcf	3,7	;select IRP bank0
  4502  057A  1400               	bsf	0,0
  4503                           
  4504                           ;LED_B1.c: 66: setLED(led, 0);
  4505  057B  01F6               	clrf	setLED@command
  4506  057C  1283               	bcf	3,5	;RP0=0, select bank0
  4507  057D  1303               	bcf	3,6	;RP1=0, select bank0
  4508  057E  0848               	movf	setLED_Initialization@led,w
  4509  057F  118A  22E9         	fcall	_setLED
  4510  0581  0008               	return
  4511  0582                     __end_of_setLED_Initialization:	
  4512                           
  4513                           	psect	text25
  4514  02E9                     __ptext25:	
  4515 ;; *************** function _setLED *****************
  4516 ;; Defined at:
  4517 ;;		line 70 in file "../src/LED_B1.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  led             1    wreg     unsigned char 
  4520 ;;  command         1    6[COMMON] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  led             1    0[BANK0 ] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4532 ;;      Params:         1       0       0       0
  4533 ;;      Locals:         0       1       0       0
  4534 ;;      Temps:          0       0       0       0
  4535 ;;      Totals:         1       1       0       0
  4536 ;;Total ram usage:        2 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    3
  4539 ;; This function calls:
  4540 ;;		_LedPointSelect
  4541 ;; This function is called by:
  4542 ;;		_setLED_Initialization
  4543 ;;		_PIR_Main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _setLED
  4549  02E9                     _setLED:	
  4550                           
  4551                           ;incstack = 0
  4552                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4553                           ;setLED@led stored from wreg
  4554  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  4555  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  4556  02EB  00C7               	movwf	setLED@led
  4557                           
  4558                           ;LED_B1.c: 71: LedPointSelect(led);
  4559  02EC  0847               	movf	setLED@led,w
  4560  02ED  118A  250F  118A   	fcall	_LedPointSelect
  4561                           
  4562                           ;LED_B1.c: 72: if (command == 0) {
  4563  02F0  08F6               	movf	setLED@command,f
  4564  02F1  1D03               	skipz
  4565  02F2  2B07               	goto	l2101
  4566                           
  4567                           ;LED_B1.c: 74: if (led == 1) {
  4568  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  4569  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  4570  02F5  0847               	movf	setLED@led,w
  4571  02F6  3A01               	xorlw	1
  4572  02F7  1D03               	skipz
  4573  02F8  2AFB               	goto	l2093
  4574                           
  4575                           ;LED_B1.c: 78: RB4 = 1;
  4576  02F9  1606               	bsf	6,4	;volatile
  4577                           
  4578                           ;LED_B1.c: 80: }
  4579  02FA  0008               	return
  4580  02FB                     l2093:	
  4581                           
  4582                           ;LED_B1.c: 83: else if (led == 2) {
  4583  02FB  0847               	movf	setLED@led,w
  4584  02FC  3A02               	xorlw	2
  4585  02FD  1D03               	skipz
  4586  02FE  2B01               	goto	l2097
  4587                           
  4588                           ;LED_B1.c: 87: RB5 = 1;
  4589  02FF  1686               	bsf	6,5	;volatile
  4590                           
  4591                           ;LED_B1.c: 89: }
  4592  0300  0008               	return
  4593  0301                     l2097:	
  4594                           
  4595                           ;LED_B1.c: 101: else if (led == 99) {
  4596  0301  0847               	movf	setLED@led,w
  4597  0302  3A63               	xorlw	99
  4598  0303  1D03               	skipz
  4599  0304  0008               	return
  4600                           
  4601                           ;LED_B1.c: 105: RB3 = 1;
  4602  0305  1586               	bsf	6,3	;volatile
  4603                           
  4604                           ;LED_B1.c: 107: }
  4605                           ;LED_B1.c: 109: } else if (command == 1) {
  4606  0306  0008               	return
  4607  0307                     l2101:	
  4608  0307  0876               	movf	setLED@command,w
  4609  0308  3A01               	xorlw	1
  4610  0309  1D03               	skipz
  4611  030A  2B1F               	goto	l2115
  4612                           
  4613                           ;LED_B1.c: 111: if (led == 1) {
  4614  030B  1283               	bcf	3,5	;RP0=0, select bank0
  4615  030C  1303               	bcf	3,6	;RP1=0, select bank0
  4616  030D  0847               	movf	setLED@led,w
  4617  030E  3A01               	xorlw	1
  4618  030F  1D03               	skipz
  4619  0310  2B13               	goto	l2107
  4620                           
  4621                           ;LED_B1.c: 115: RB4 = 0;
  4622  0311  1206               	bcf	6,4	;volatile
  4623                           
  4624                           ;LED_B1.c: 117: }
  4625  0312  0008               	return
  4626  0313                     l2107:	
  4627                           
  4628                           ;LED_B1.c: 120: else if (led == 2) {
  4629  0313  0847               	movf	setLED@led,w
  4630  0314  3A02               	xorlw	2
  4631  0315  1D03               	skipz
  4632  0316  2B19               	goto	l2111
  4633                           
  4634                           ;LED_B1.c: 124: RB5 = 0;
  4635  0317  1286               	bcf	6,5	;volatile
  4636                           
  4637                           ;LED_B1.c: 126: }
  4638  0318  0008               	return
  4639  0319                     l2111:	
  4640                           
  4641                           ;LED_B1.c: 138: else if (led == 99) {
  4642  0319  0847               	movf	setLED@led,w
  4643  031A  3A63               	xorlw	99
  4644  031B  1D03               	skipz
  4645  031C  0008               	return
  4646                           
  4647                           ;LED_B1.c: 142: RB3 = 0;
  4648  031D  1186               	bcf	6,3	;volatile
  4649                           
  4650                           ;LED_B1.c: 144: }
  4651                           ;LED_B1.c: 146: } else if (command == 10) {
  4652  031E  0008               	return
  4653  031F                     l2115:	
  4654  031F  0876               	movf	setLED@command,w
  4655  0320  3A0A               	xorlw	10
  4656  0321  1D03               	skipz
  4657  0322  2B40               	goto	l2133
  4658                           
  4659                           ;LED_B1.c: 147: LED->GO = 0;
  4660  0323  0879               	movf	_LED,w
  4661  0324  0084               	movwf	4
  4662  0325  1383               	bcf	3,7	;select IRP bank0
  4663  0326  1080               	bcf	0,1
  4664                           
  4665                           ;LED_B1.c: 148: LED->Time = 0;
  4666  0327  0A79               	incf	_LED,w
  4667  0328  0084               	movwf	4
  4668  0329  0180               	clrf	0
  4669  032A  0A84               	incf	4,f
  4670  032B  0180               	clrf	0
  4671                           
  4672                           ;LED_B1.c: 150: if (led == 1) {
  4673  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4674  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4675  032E  0847               	movf	setLED@led,w
  4676  032F  3A01               	xorlw	1
  4677  0330  1D03               	skipz
  4678  0331  2B34               	goto	l2125
  4679                           
  4680                           ;LED_B1.c: 154: RB4 = 1;
  4681  0332  1606               	bsf	6,4	;volatile
  4682                           
  4683                           ;LED_B1.c: 156: }
  4684  0333  0008               	return
  4685  0334                     l2125:	
  4686                           
  4687                           ;LED_B1.c: 159: else if (led == 2) {
  4688  0334  0847               	movf	setLED@led,w
  4689  0335  3A02               	xorlw	2
  4690  0336  1D03               	skipz
  4691  0337  2B3A               	goto	l2129
  4692                           
  4693                           ;LED_B1.c: 163: RB5 = 1;
  4694  0338  1686               	bsf	6,5	;volatile
  4695                           
  4696                           ;LED_B1.c: 165: }
  4697  0339  0008               	return
  4698  033A                     l2129:	
  4699                           
  4700                           ;LED_B1.c: 177: else if (led == 99) {
  4701  033A  0847               	movf	setLED@led,w
  4702  033B  3A63               	xorlw	99
  4703  033C  1D03               	skipz
  4704  033D  0008               	return
  4705                           
  4706                           ;LED_B1.c: 181: RB3 = 1;
  4707  033E  1586               	bsf	6,3	;volatile
  4708                           
  4709                           ;LED_B1.c: 183: }
  4710                           ;LED_B1.c: 185: } else if (command == 11) {
  4711  033F  0008               	return
  4712  0340                     l2133:	
  4713  0340  0876               	movf	setLED@command,w
  4714  0341  3A0B               	xorlw	11
  4715  0342  1D03               	skipz
  4716  0343  0008               	return
  4717                           
  4718                           ;LED_B1.c: 186: LED->GO = 1;
  4719  0344  0879               	movf	_LED,w
  4720  0345  0084               	movwf	4
  4721  0346  1383               	bcf	3,7	;select IRP bank0
  4722  0347  1480               	bsf	0,1
  4723  0348  0008               	return
  4724  0349                     __end_of_setLED:	
  4725                           
  4726                           	psect	text26
  4727  050F                     __ptext26:	
  4728 ;; *************** function _LedPointSelect *****************
  4729 ;; Defined at:
  4730 ;;		line 7 in file "../src/LED_B1.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  led             1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  led             1    5[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4744 ;;      Params:         0       0       0       0
  4745 ;;      Locals:         1       0       0       0
  4746 ;;      Temps:          1       0       0       0
  4747 ;;      Totals:         2       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    2
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_setLED_Initialization
  4755 ;;		_setLED
  4756 ;;		_setLED_Main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _LedPointSelect
  4762  050F                     _LedPointSelect:	
  4763                           
  4764                           ;incstack = 0
  4765                           ; Regs used in _LedPointSelect: [wreg]
  4766                           ;LedPointSelect@led stored from wreg
  4767  050F  00F5               	movwf	LedPointSelect@led
  4768                           
  4769                           ;LED_B1.c: 9: if (led == 1) {
  4770  0510  0875               	movf	LedPointSelect@led,w
  4771  0511  3A01               	xorlw	1
  4772  0512  1D03               	skipz
  4773  0513  2D19               	goto	l2077
  4774                           
  4775                           ;LED_B1.c: 10: LED = &VarLED1;
  4776  0514  303F               	movlw	_VarLED1& (0+255)
  4777  0515  00F4               	movwf	??_LedPointSelect
  4778  0516  0874               	movf	??_LedPointSelect,w
  4779  0517  00F9               	movwf	_LED
  4780                           
  4781                           ;LED_B1.c: 11: }
  4782  0518  0008               	return
  4783  0519                     l2077:	
  4784                           
  4785                           ;LED_B1.c: 14: else if (led == 2) {
  4786  0519  0875               	movf	LedPointSelect@led,w
  4787  051A  3A02               	xorlw	2
  4788  051B  1D03               	skipz
  4789  051C  2D22               	goto	l2081
  4790                           
  4791                           ;LED_B1.c: 15: LED = &VarLED2;
  4792  051D  3043               	movlw	_VarLED2& (0+255)
  4793  051E  00F4               	movwf	??_LedPointSelect
  4794  051F  0874               	movf	??_LedPointSelect,w
  4795  0520  00F9               	movwf	_LED
  4796                           
  4797                           ;LED_B1.c: 16: }
  4798  0521  0008               	return
  4799  0522                     l2081:	
  4800                           
  4801                           ;LED_B1.c: 24: else if (led == 99) {
  4802  0522  0875               	movf	LedPointSelect@led,w
  4803  0523  3A63               	xorlw	99
  4804  0524  1D03               	skipz
  4805  0525  0008               	return
  4806                           
  4807                           ;LED_B1.c: 25: LED = &VarErrLED;
  4808  0526  303B               	movlw	_VarErrLED& (0+255)
  4809  0527  00F4               	movwf	??_LedPointSelect
  4810  0528  0874               	movf	??_LedPointSelect,w
  4811  0529  00F9               	movwf	_LED
  4812  052A  0008               	return
  4813  052B                     __end_of_LedPointSelect:	
  4814                           
  4815                           	psect	text27
  4816  0495                     __ptext27:	
  4817 ;; *************** function _CDS_Main *****************
  4818 ;; Defined at:
  4819 ;;		line 11 in file "../src/CDS_B1.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4833 ;;      Params:         0       0       0       0
  4834 ;;      Locals:         0       0       0       0
  4835 ;;      Temps:          3       0       0       0
  4836 ;;      Totals:         3       0       0       0
  4837 ;;Total ram usage:        3 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    2
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _CDS_Main
  4849  0495                     _CDS_Main:	
  4850                           
  4851                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  4855  0495  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0496  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0497  1C33               	btfss	__CDS,0
  4858  0498  0008               	return
  4859                           
  4860                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  4861  0499  18B3               	btfsc	__CDS,1
  4862  049A  2CA8               	goto	l63
  4863                           
  4864                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  4865  049B  19B3               	btfsc	__CDS,3
  4866  049C  0008               	return
  4867                           
  4868                           ;CDS_B1.c: 16: _CDS.Time++;
  4869  049D  3001               	movlw	1
  4870  049E  00F4               	movwf	??_CDS_Main
  4871  049F  0874               	movf	??_CDS_Main,w
  4872  04A0  07B4               	addwf	__CDS+1,f
  4873                           
  4874                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  4875  04A1  300A               	movlw	10
  4876  04A2  0234               	subwf	__CDS+1,w
  4877  04A3  1C03               	skipc
  4878  04A4  0008               	return
  4879                           
  4880                           ;CDS_B1.c: 18: {
  4881                           ;CDS_B1.c: 19: _CDS.Time = 0;
  4882  04A5  01B4               	clrf	__CDS+1
  4883                           
  4884                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  4885  04A6  15B3               	bsf	__CDS,3
  4886                           
  4887                           ;CDS_B1.c: 21: }
  4888                           ;CDS_B1.c: 22: }
  4889                           ;CDS_B1.c: 23: } else {
  4890  04A7  0008               	return
  4891  04A8                     l63:	
  4892                           
  4893                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  4894  04A8  1CB3               	btfss	__CDS,1
  4895  04A9  0008               	return
  4896                           
  4897                           ;CDS_B1.c: 25: _CDS.GO = 0;
  4898  04AA  10B3               	bcf	__CDS,1
  4899                           
  4900                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  4901  04AB  1A33               	btfsc	__CDS,4
  4902  04AC  2CB3               	goto	l1797
  4903                           
  4904                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  4905  04AD  0835               	movf	__CDS+2,w
  4906  04AE  0236               	subwf	__CDS+3,w
  4907  04AF  1C03               	skipc
  4908  04B0  0008               	return
  4909                           
  4910                           ;CDS_B1.c: 28: _CDS.Status = 1;
  4911  04B1  1633               	bsf	__CDS,4
  4912                           
  4913                           ;CDS_B1.c: 29: }
  4914                           ;CDS_B1.c: 30: } else {
  4915  04B2  0008               	return
  4916  04B3                     l1797:	
  4917                           
  4918                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  4919  04B3  0835               	movf	__CDS+2,w
  4920  04B4  3E9C               	addlw	156
  4921  04B5  00F4               	movwf	??_CDS_Main
  4922  04B6  30FF               	movlw	255
  4923  04B7  1803               	skipnc
  4924  04B8  3000               	movlw	0
  4925  04B9  00F5               	movwf	??_CDS_Main+1
  4926  04BA  0875               	movf	??_CDS_Main+1,w
  4927  04BB  3A80               	xorlw	128
  4928  04BC  00F6               	movwf	??_CDS_Main+2
  4929  04BD  3080               	movlw	128
  4930  04BE  0276               	subwf	??_CDS_Main+2,w
  4931  04BF  1D03               	skipz
  4932  04C0  2CC3               	goto	u1485
  4933  04C1  0836               	movf	__CDS+3,w
  4934  04C2  0274               	subwf	??_CDS_Main,w
  4935  04C3                     u1485:	
  4936  04C3  1C03               	skipc
  4937  04C4  0008               	return
  4938                           
  4939                           ;CDS_B1.c: 32: _CDS.Status = 0;
  4940  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  4941  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  4942  04C7  1233               	bcf	__CDS,4
  4943  04C8  0008               	return
  4944  04C9                     __end_of_CDS_Main:	
  4945                           
  4946                           	psect	text28
  4947  0614                     __ptext28:	
  4948 ;; *************** function _CDS_Initialization *****************
  4949 ;; Defined at:
  4950 ;;		line 7 in file "../src/CDS_B1.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;		None               void
  4957 ;; Registers used:
  4958 ;;		None
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4964 ;;      Params:         0       0       0       0
  4965 ;;      Locals:         0       0       0       0
  4966 ;;      Temps:          0       0       0       0
  4967 ;;      Totals:         0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    2
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_main
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           
  4979                           ;psect for function _CDS_Initialization
  4980  0614                     _CDS_Initialization:	
  4981                           
  4982                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in _CDS_Initialization: []
  4986  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0616  1433               	bsf	__CDS,0
  4989  0617  0008               	return
  4990  0618                     __end_of_CDS_Initialization:	
  4991                           
  4992                           	psect	text29
  4993  0592                     __ptext29:	
  4994 ;; *************** function _ISR *****************
  4995 ;; Defined at:
  4996 ;;		line 107 in file "../src/MCU_B1.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0, pclath, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5010 ;;      Params:         0       0       0       0
  5011 ;;      Locals:         0       0       0       0
  5012 ;;      Temps:          4       0       0       0
  5013 ;;      Totals:         4       0       0       0
  5014 ;;Total ram usage:        4 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    1
  5017 ;; This function calls:
  5018 ;;		_TMR1_ISR
  5019 ;; This function is called by:
  5020 ;;		Interrupt level 1
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _ISR
  5026  0592                     _ISR:	
  5027                           
  5028                           ;MCU_B1.c: 109: ;;
  5029                           ;MCU_B1.c: 111: ;;
  5030                           ;MCU_B1.c: 113: TMR1_ISR();
  5031  0592  118A  252B  118A   	fcall	_TMR1_ISR
  5032  0595  0873               	movf	??_ISR+3,w
  5033  0596  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0597  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0598  00FF               	movwf	127
  5036  0599  0872               	movf	??_ISR+2,w
  5037  059A  008A               	movwf	10
  5038  059B  0871               	movf	??_ISR+1,w
  5039  059C  0084               	movwf	4
  5040  059D  0E70               	swapf	??_ISR^(0+-128),w
  5041  059E  0083               	movwf	3
  5042  059F  0EFE               	swapf	126,f
  5043  05A0  0E7E               	swapf	126,w
  5044  05A1  0009               	retfie
  5045  05A2                     __end_of_ISR:	
  5046                           
  5047                           	psect	intentry
  5048  0004                     __pintentry:	
  5049                           ;incstack = 0
  5050                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5051                           
  5052  0004                     interrupt_function:	
  5053  007E                     saved_w	set	btemp
  5054  0004  00FE               	movwf	btemp
  5055  0005  0E03               	swapf	3,w
  5056  0006  00F0               	movwf	??_ISR
  5057  0007  0804               	movf	4,w
  5058  0008  00F1               	movwf	??_ISR+1
  5059  0009  080A               	movf	10,w
  5060  000A  00F2               	movwf	??_ISR+2
  5061  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5062  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5063  000D  087F               	movf	btemp+1,w
  5064  000E  00F3               	movwf	??_ISR+3
  5065  000F  118A  2D92         	ljmp	_ISR
  5066                           
  5067                           	psect	text30
  5068  052B                     __ptext30:	
  5069 ;; *************** function _TMR1_ISR *****************
  5070 ;; Defined at:
  5071 ;;		line 209 in file "../src/MCU_B1.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		wreg, status,2
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5085 ;;      Params:         0       0       0       0
  5086 ;;      Locals:         0       0       0       0
  5087 ;;      Temps:          0       0       0       0
  5088 ;;      Totals:         0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_ISR
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           
  5099                           ;psect for function _TMR1_ISR
  5100  052B                     _TMR1_ISR:	
  5101                           
  5102                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  5106  052B  1683               	bsf	3,5	;RP0=1, select bank1
  5107  052C  1303               	bcf	3,6	;RP1=0, select bank1
  5108  052D  1C0C               	btfss	12,0	;volatile
  5109  052E  0008               	return
  5110  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0531  1C0C               	btfss	12,0	;volatile
  5113  0532  0008               	return
  5114                           
  5115                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  5116  0533  30FA               	movlw	250
  5117  0534  008F               	movwf	15	;volatile
  5118                           
  5119                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  5120  0535  3038               	movlw	56
  5121  0536  008E               	movwf	14	;volatile
  5122                           
  5123                           ;MCU_B1.c: 214: TMR1IF = 0;
  5124  0537  100C               	bcf	12,0	;volatile
  5125                           
  5126                           ;MCU_B1.c: 234: Timer1.Count++;
  5127  0538  3001               	movlw	1
  5128  0539  07B9               	addwf	_Timer1+1,f
  5129  053A  1803               	skipnc
  5130  053B  0ABA               	incf	_Timer1+2,f
  5131  053C  3000               	movlw	0
  5132  053D  07BA               	addwf	_Timer1+2,f
  5133                           
  5134                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  5135  053E  3064               	movlw	100
  5136  053F  0639               	xorwf	_Timer1+1,w
  5137  0540  043A               	iorwf	_Timer1+2,w
  5138  0541  1D03               	skipz
  5139  0542  0008               	return
  5140                           
  5141                           ;MCU_B1.c: 236: {
  5142                           ;MCU_B1.c: 237: Timer1.Count = 0;
  5143  0543  01B9               	clrf	_Timer1+1
  5144  0544  01BA               	clrf	_Timer1+2
  5145                           
  5146                           ;MCU_B1.c: 238: myMain.T1_Timerout = 1;
  5147  0545  1520               	bsf	_myMain,2
  5148  0546  0008               	return
  5149  0547                     __end_of_TMR1_ISR:	
  5150  007E                     btemp	set	126	;btemp
  5151  007E                     wtemp	set	126
  5152  007E                     wtemp0	set	126
  5153  0080                     wtemp1	set	128
  5154  0082                     wtemp2	set	130
  5155  0084                     wtemp3	set	132
  5156  0086                     wtemp4	set	134
  5157  0088                     wtemp5	set	136
  5158  007F                     wtemp6	set	127
  5159  007E                     ttemp	set	126
  5160  007E                     ttemp0	set	126
  5161  0081                     ttemp1	set	129
  5162  0084                     ttemp2	set	132
  5163  0087                     ttemp3	set	135
  5164  007F                     ttemp4	set	127
  5165  007E                     ltemp	set	126
  5166  007E                     ltemp0	set	126
  5167  0082                     ltemp1	set	130
  5168  0086                     ltemp2	set	134
  5169  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     19      58
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _PIR_Main->_setLED
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _PIR_Main->_setLED
    _LED_Main->_setLED_Main
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    6389
                                             14 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                        _my_MainTime
 ---------------------------------------------------------------------------------
 (1) _my_MainTime                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2080
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     572
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     400
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             5     5      0    1694
                                              1 BANK0      5     5      0
                      _getCDS_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1826
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1826
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    1671
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _setLED
       _LedPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTime

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      73       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      73      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Oct 28 17:32:00 2014

                  _WDT_Clearing 0618                              l63 04A8                    ___awdiv@sign 004C  
                            fsr 0004                             l472 003E                             l393 0485  
                           l477 0066                             l478 007C                             _GIE 005F  
                           _RA4 002C                             _LED 0079                             _RB3 0033  
                           _RB4 0034                             _RB5 0035                             _PS0 0408  
                           _PS1 0409                             _PS2 040A                             _ISR 0592  
                           _PSA 040B                             _WDT 0077                             fsr0 0004  
                           indf 0000                 __end_of_ADC_Set 0609                            ?_ISR 0070  
                          l2101 0307                            l2111 0319                            l2201 0397  
                          l2107 0313                            l2115 031F                            l1411 0486  
                          l1403 0474                            l2125 0334                            l2133 0340  
                          l2205 039F                            l2221 03BE                            l2231 03DF  
                          l2311 02AD                            l2081 0522                            l2129 033A  
                          l2161 0459                            l2305 0291                            l2403 00C1  
                          l2227 03D4                            l2219 03B0                            l2077 0519  
                          l2093 02FB                            l2157 0452                            l2405 00C2  
                          l2173 0355                            l2325 02E7                            l2415 010E  
                          l2431 0172                            l2191 0376                            l2319 02D9  
                          l2271 0216                            l2263 0208                            l2097 0301  
                          l2441 018C                            l2273 021A                            l2281 0234  
                          l2355 0069                            l2179 0360                            l2275 021E  
                          l2267 020E                            l2429 0167                            l2197 038C  
                          l2189 0368                            l2269 0212                            l1671 0509  
                          l2295 0263                            l2279 0223                            l1665 0500  
                          l2289 0247                            l2387 009E                            l1667 0503  
                          l2475 040C                            l2469 03F6                            l2399 00B5  
                          l1797 04B3           _myMain_Initialization 061A                    __CFG_WDTE$ON 0000  
                          u1165 056A                            u2205 038D                            u2165 036B  
                          u2245 03B3                            u2185 0377                            u2265 03BF  
                          u2195 0383                            u2275 03CB                            u1485 04C3  
                          u2605 012F                            u2285 03D5                            u2615 015D  
                          u2635 0182                            u2665 01A9                            u2585 00E2  
                          u2595 0106                            _PEIE 005E                            __CDS 0033  
                          __PIR 00A0                            _main 03E6                            btemp 007E  
               __end_of_WDT_Set 05DA                            ltemp 007E                            start 0011  
                          ttemp 007E                            wtemp 007E                __end_of_CDS_Main 04C9  
                         ??_ISR 0070                   __CFG_PLLEN$ON 0000                __end_of_LED_Main 05E6  
                         ?_main 0055                 __end_of___awdiv 03A6                           _ADRES 001E  
               ___awdiv@divisor 0047                           _T1CON 0010                 __end_of___lwdiv 03E6  
               ___awdiv@counter 004B                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTA 0005                           _PORTB 0006                           _PORTC 0007  
                  ?_setLED_Main 0070                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087         __end_of_Timeout_Counter 0570                __end_of_PIR_Main 01AF  
              __end_of_TMR1_ISR 0547                __end_of_TMR1_Set 05CE                           _getAD 04F3  
              __end_of_WDT_Main 05B1                  __CFG_BOREN$OFF 0000                           pclath 000A  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080  __size_of_setLED_Initialization 0012   __end_of_setLED_Initialization 0582  
                         ttemp0 007E                           ttemp1 0081                           ttemp2 0084  
                         ttemp3 0087                           ttemp4 007F                           status 0003  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F               getPIR_AD@channel1 0053               getPIR_AD@channel2 0076  
                  ?_my_MainTime 0070                 __initialization 0013                    __end_of_main 0425  
              __end_of_Fosc_Set 0614                       ??_ADC_Set 0074                          ??_main 0059  
                        ?_getAD 0074          ?_myMain_Initialization 0070                          _ADCON0 001F  
                        _ADCON1 009F                ___awdiv@dividend 0049                       ??_WDT_Set 0074  
                        _ANSELA 0185                          _ANSELB 0186                          _FVRCON 009D  
                        _OSCCON 0090                          _TMR1IE 0460                          _TMR1IF 0060  
                        _IO_Set 0547      __end_of_Mcu_Initialization 05C0                          _Timer1 0038  
   __size_of_CDS_Initialization 0004                       ??___awdiv 0074                       ??___lwdiv 0074  
                        _setLED 02E9                          _myMain 0020                ___awdiv@quotient 004D  
                        saved_w 007E                ?_Timeout_Counter 0070         __size_of_LedPointSelect 001C  
                     ?_CDS_Main 0070     __size_of_PIR_Initialization 0010         __end_of__initialization 0022  
                     ?_LED_Main 0070                  __pcstackCOMMON 0070              __size_of_getCDS_AD 002A  
                 __end_of_getAD 050F                       ?_PIR_Main 0070                       ?_TMR1_ISR 0070  
                     ?_TMR1_Set 0070              _LED_Initialization 05E6              __size_of_getPIR_AD 013A  
                     ?_WDT_Main 0070      __end_of_set_TimeoutCleared 060F             ?_LED_Initialization 0070  
          __size_of_setLED_Main 003B                         ??_getAD 0075                      ??_CDS_Main 0074  
                    __pbssBANK0 0020                      __pbssBANK1 00A0                       ?_Fosc_Set 0070  
                       ?_IO_Set 0070                 __CFG_VCAPEN$DIS 0000                      ??_LED_Main 0077  
          ??_LED_Initialization 0077               LedPointSelect@led 0075                      __pmaintext 03E6  
          __size_of_my_MainTime 0035                      ??_PIR_Main 0048                      ??_TMR1_ISR 0070  
                    ??_TMR1_Set 0074                      __pintentry 0004                         ?_setLED 0076  
                       _ADC_Set 0602                      ??_WDT_Main 0074          __size_of_getCDS_Status 0008  
             __end_of_getCDS_AD 04F3                         _WDT_Set 05CE                      ??_Fosc_Set 0074  
             __end_of_getPIR_AD 02E9                 __size_of_IO_Set 0015                      getCDS_AD@i 0049  
                    getCDS_AD@j 004A                         _VarLED1 003F                         _VarLED2 0043  
                       ___awdiv 0349                         ___lwdiv 03A6                 __size_of_setLED 0060  
                       __ptext0 0000                         __ptext1 0460                         __ptext2 061A  
                       __ptext3 01AF                         __ptext4 03A6                         __ptext5 0349  
                       __ptext6 04C9                         __ptext7 04F3                         __ptext8 0609  
                       __ptext9 055C                      getPIR_AD@i 0054                      getPIR_AD@j 0052  
                  __size_of_ISR 0010         ??_myMain_Initialization 0074                  _LedPointSelect 050F  
                       clrloop0 05F3            end_of_initialization 0022                   _getCDS_Status 05FA  
         _setLED_Initialization 0570        setLED_Initialization@led 0048              _Mcu_Initialization 05B1  
        __end_of_LedPointSelect 052B             ?_Mcu_Initialization 0070               __size_of_CDS_Main 0034  
                ?_getCDS_Status 0070                  __end_of_IO_Set 055C      __end_of_CDS_Initialization 0618  
             __size_of_LED_Main 000C            ??_Mcu_Initialization 0075                   ?_WDT_Clearing 0070  
             __size_of_PIR_Main 018A               __size_of_TMR1_ISR 001C               __size_of_TMR1_Set 000E  
                __end_of_setLED 0349               __size_of_WDT_Main 000F             start_initialization 0013  
               ?_LedPointSelect 0070                     __end_of_ISR 05A2      __end_of_PIR_Initialization 0592  
           getCDS_Status@result 0074              _set_TimeoutCleared 0609                        ??_IO_Set 0074  
      __size_of_Timeout_Counter 0014                       _VarErrLED 003B          ?_setLED_Initialization 0070  
             __size_of_Fosc_Set 0005             ?_set_TimeoutCleared 0070                  ??_WDT_Clearing 0074  
                      ??_setLED 0077                        ?_ADC_Set 0070                   ??_setLED_Main 0047  
                   __pbssCOMMON 0077                       ___latbits 0001                   __pcstackBANK0 0047  
          ??_set_TimeoutCleared 0074                        ?_WDT_Set 0070                 ??_getCDS_Status 0074  
                     _getCDS_AD 04C9                   ??_my_MainTime 0074                       _getPIR_AD 01AF  
   __size_of_LED_Initialization 000C                ___lwdiv@dividend 0049                        ?___awdiv 0047  
                      ?___lwdiv 0047  __size_of_myMain_Initialization 0001   __end_of_myMain_Initialization 061B  
                __size_of_getAD 001C                ___lwdiv@quotient 004C                        _CDS_Main 0495  
           __end_of_setLED_Main 0460               interrupt_function 0004                      ?_getCDS_AD 0076  
                      _LED_Main 05DA                       clear_ram0 05F2                      ?_getPIR_AD 0076  
                      _GO_nDONE 00F9               ??_Timeout_Counter 0074                        _PIR_Main 0025  
                      _TMR1_ISR 052B                        _TMR1_Set 05C0             __end_of_my_MainTime 0495  
                      _WDT_Main 05A2                __size_of_ADC_Set 0007                     getAD@adcon0 0075  
                   getAD@adcon1 0074                  setLED_Main@led 0076            __end_of_WDT_Clearing 061A  
                      _Fosc_Set 060F                __size_of_WDT_Set 000C                       setLED@led 0047  
              __size_of___awdiv 005D                __size_of___lwdiv 0040                ??_LedPointSelect 0074  
            _CDS_Initialization 0614                     _setLED_Main 0425                 ___lwdiv@divisor 0047  
           ?_CDS_Initialization 0070                 ___lwdiv@counter 004B                        __ptext10 05A2  
                      __ptext11 0618                        __ptext20 0602                        __ptext12 0025  
                      __ptext21 05DA                        __ptext13 05FA                        __ptext30 052B  
                      __ptext22 0425                        __ptext14 0582                        __ptext23 05E6  
                      __ptext15 05B1                        __ptext24 0570                        __ptext16 05CE  
                      __ptext25 02E9                        __ptext17 05C0                        __ptext26 050F  
                      __ptext18 0547                        __ptext27 0495                        __ptext19 060F  
                      __ptext28 0614                        __ptext29 0592         ??_setLED_Initialization 0077  
                   ??_getCDS_AD 0047                   setLED@command 0076                   __size_of_main 003F  
                   ??_getPIR_AD 004F              _PIR_Initialization 0582                     _my_MainTime 0460  
          ??_CDS_Initialization 0074     __size_of_Mcu_Initialization 000F             ?_PIR_Initialization 0070  
                      main@argc 0055                        main@argv 0057            ??_PIR_Initialization 0074  
                      intlevel1 0000           __size_of_WDT_Clearing 0002     __size_of_set_TimeoutCleared 0006  
            __CFG_FOSC$INTOSCIO 0000                 _Timeout_Counter 055C      __end_of_LED_Initialization 05F2  
         __end_of_getCDS_Status 0602               getCDS_AD@channel1 004B               getCDS_AD@channel2 0076  
