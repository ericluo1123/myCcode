

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Nov 28 15:59:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0096                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  018C                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0096                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009F                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0186                     	;# 
   202  018C                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009F                     	;# 
   261  0108                     	;# 
   262  0109                     	;# 
   263  010C                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0186                     	;# 
   271  018C                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  000E                     	;# 
   287  000F                     	;# 
   288  0010                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001D                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  0081                     	;# 
   307  0085                     	;# 
   308  0086                     	;# 
   309  0087                     	;# 
   310  0089                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  008F                     	;# 
   315  0090                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0096                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009F                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0185                     	;# 
   339  0186                     	;# 
   340  018C                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0096                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009F                     	;# 
   399  0108                     	;# 
   400  0109                     	;# 
   401  010C                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0186                     	;# 
   409  018C                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  000E                     	;# 
   425  000F                     	;# 
   426  0010                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001D                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  0081                     	;# 
   445  0085                     	;# 
   446  0086                     	;# 
   447  0087                     	;# 
   448  0089                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0096                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009F                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0186                     	;# 
   478  018C                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0095                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0096                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009F                     	;# 
   537  0108                     	;# 
   538  0109                     	;# 
   539  010C                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  0185                     	;# 
   546  0186                     	;# 
   547  018C                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0096                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009F                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  010F                     	;# 
   614  0185                     	;# 
   615  0186                     	;# 
   616  018C                     	;# 
   617  0000                     	;# 
   618  0001                     	;# 
   619  0002                     	;# 
   620  0003                     	;# 
   621  0004                     	;# 
   622  0005                     	;# 
   623  0006                     	;# 
   624  0007                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  000E                     	;# 
   632  000F                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0015                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001B                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  0081                     	;# 
   652  0085                     	;# 
   653  0086                     	;# 
   654  0087                     	;# 
   655  0089                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0093                     	;# 
   665  0094                     	;# 
   666  0095                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0096                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009F                     	;# 
   675  0108                     	;# 
   676  0109                     	;# 
   677  010C                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0186                     	;# 
   685  018C                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0096                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009F                     	;# 
   744  0108                     	;# 
   745  0109                     	;# 
   746  010C                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0186                     	;# 
   754  018C                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000E                     	;# 
   770  000F                     	;# 
   771  0010                     	;# 
   772  0011                     	;# 
   773  0012                     	;# 
   774  0013                     	;# 
   775  0014                     	;# 
   776  0015                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  0081                     	;# 
   790  0085                     	;# 
   791  0086                     	;# 
   792  0087                     	;# 
   793  0089                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  008F                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0093                     	;# 
   803  0094                     	;# 
   804  0095                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0096                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009C                     	;# 
   811  009D                     	;# 
   812  009F                     	;# 
   813  0108                     	;# 
   814  0109                     	;# 
   815  010C                     	;# 
   816  010C                     	;# 
   817  010D                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  010F                     	;# 
   821  0185                     	;# 
   822  0186                     	;# 
   823  018C                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0009                     	;# 
   833  000A                     	;# 
   834  000B                     	;# 
   835  000C                     	;# 
   836  000D                     	;# 
   837  000E                     	;# 
   838  000E                     	;# 
   839  000F                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0014                     	;# 
   845  0015                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001B                     	;# 
   854  001C                     	;# 
   855  001D                     	;# 
   856  001E                     	;# 
   857  001F                     	;# 
   858  0081                     	;# 
   859  0085                     	;# 
   860  0086                     	;# 
   861  0087                     	;# 
   862  0089                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  008F                     	;# 
   867  0090                     	;# 
   868  0091                     	;# 
   869  0092                     	;# 
   870  0093                     	;# 
   871  0093                     	;# 
   872  0094                     	;# 
   873  0095                     	;# 
   874  0095                     	;# 
   875  0096                     	;# 
   876  0096                     	;# 
   877  0098                     	;# 
   878  0099                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009F                     	;# 
   882  0108                     	;# 
   883  0109                     	;# 
   884  010C                     	;# 
   885  010C                     	;# 
   886  010D                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  010F                     	;# 
   890  0185                     	;# 
   891  0186                     	;# 
   892  018C                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0009                     	;# 
   902  000A                     	;# 
   903  000B                     	;# 
   904  000C                     	;# 
   905  000D                     	;# 
   906  000E                     	;# 
   907  000E                     	;# 
   908  000F                     	;# 
   909  0010                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0013                     	;# 
   913  0014                     	;# 
   914  0015                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0017                     	;# 
   918  0018                     	;# 
   919  0019                     	;# 
   920  001A                     	;# 
   921  001B                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001D                     	;# 
   925  001E                     	;# 
   926  001F                     	;# 
   927  0081                     	;# 
   928  0085                     	;# 
   929  0086                     	;# 
   930  0087                     	;# 
   931  0089                     	;# 
   932  008C                     	;# 
   933  008D                     	;# 
   934  008E                     	;# 
   935  008F                     	;# 
   936  0090                     	;# 
   937  0091                     	;# 
   938  0092                     	;# 
   939  0093                     	;# 
   940  0093                     	;# 
   941  0094                     	;# 
   942  0095                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0096                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009C                     	;# 
   949  009D                     	;# 
   950  009F                     	;# 
   951  0108                     	;# 
   952  0109                     	;# 
   953  010C                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  010F                     	;# 
   959  0185                     	;# 
   960  0186                     	;# 
   961  018C                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  000E                     	;# 
   977  000F                     	;# 
   978  0010                     	;# 
   979  0011                     	;# 
   980  0012                     	;# 
   981  0013                     	;# 
   982  0014                     	;# 
   983  0015                     	;# 
   984  0015                     	;# 
   985  0016                     	;# 
   986  0017                     	;# 
   987  0018                     	;# 
   988  0019                     	;# 
   989  001A                     	;# 
   990  001B                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  001D                     	;# 
   994  001E                     	;# 
   995  001F                     	;# 
   996  0081                     	;# 
   997  0085                     	;# 
   998  0086                     	;# 
   999  0087                     	;# 
  1000  0089                     	;# 
  1001  008C                     	;# 
  1002  008D                     	;# 
  1003  008E                     	;# 
  1004  008F                     	;# 
  1005  0090                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0093                     	;# 
  1010  0094                     	;# 
  1011  0095                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0096                     	;# 
  1015  0098                     	;# 
  1016  0099                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009F                     	;# 
  1020  0108                     	;# 
  1021  0109                     	;# 
  1022  010C                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010D                     	;# 
  1026  010E                     	;# 
  1027  010F                     	;# 
  1028  0185                     	;# 
  1029  0186                     	;# 
  1030  018C                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0009                     	;# 
  1040  000A                     	;# 
  1041  000B                     	;# 
  1042  000C                     	;# 
  1043  000D                     	;# 
  1044  000E                     	;# 
  1045  000E                     	;# 
  1046  000F                     	;# 
  1047  0010                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0014                     	;# 
  1052  0015                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0017                     	;# 
  1056  0018                     	;# 
  1057  0019                     	;# 
  1058  001A                     	;# 
  1059  001B                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001D                     	;# 
  1063  001E                     	;# 
  1064  001F                     	;# 
  1065  0081                     	;# 
  1066  0085                     	;# 
  1067  0086                     	;# 
  1068  0087                     	;# 
  1069  0089                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  008F                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0096                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009C                     	;# 
  1087  009D                     	;# 
  1088  009F                     	;# 
  1089  0108                     	;# 
  1090  0109                     	;# 
  1091  010C                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0186                     	;# 
  1099  018C                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  000E                     	;# 
  1115  000F                     	;# 
  1116  0010                     	;# 
  1117  0011                     	;# 
  1118  0012                     	;# 
  1119  0013                     	;# 
  1120  0014                     	;# 
  1121  0015                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0017                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  0081                     	;# 
  1135  0085                     	;# 
  1136  0086                     	;# 
  1137  0087                     	;# 
  1138  0089                     	;# 
  1139  008C                     	;# 
  1140  008D                     	;# 
  1141  008E                     	;# 
  1142  008F                     	;# 
  1143  0090                     	;# 
  1144  0091                     	;# 
  1145  0092                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0095                     	;# 
  1151  0096                     	;# 
  1152  0096                     	;# 
  1153  0098                     	;# 
  1154  0099                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009F                     	;# 
  1158  0108                     	;# 
  1159  0109                     	;# 
  1160  010C                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010D                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0185                     	;# 
  1167  0186                     	;# 
  1168  018C                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0009                     	;# 
  1178  000A                     	;# 
  1179  000B                     	;# 
  1180  000C                     	;# 
  1181  000D                     	;# 
  1182  000E                     	;# 
  1183  000E                     	;# 
  1184  000F                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0015                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001B                     	;# 
  1199  001C                     	;# 
  1200  001D                     	;# 
  1201  001E                     	;# 
  1202  001F                     	;# 
  1203  0081                     	;# 
  1204  0085                     	;# 
  1205  0086                     	;# 
  1206  0087                     	;# 
  1207  0089                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  008F                     	;# 
  1212  0090                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0095                     	;# 
  1220  0096                     	;# 
  1221  0096                     	;# 
  1222  0098                     	;# 
  1223  0099                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009F                     	;# 
  1227  0108                     	;# 
  1228  0109                     	;# 
  1229  010C                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010D                     	;# 
  1233  010E                     	;# 
  1234  010F                     	;# 
  1235  0185                     	;# 
  1236  0186                     	;# 
  1237  018C                     	;# 
  1238  0000                     	;# 
  1239  0001                     	;# 
  1240  0002                     	;# 
  1241  0003                     	;# 
  1242  0004                     	;# 
  1243  0005                     	;# 
  1244  0006                     	;# 
  1245  0007                     	;# 
  1246  0009                     	;# 
  1247  000A                     	;# 
  1248  000B                     	;# 
  1249  000C                     	;# 
  1250  000D                     	;# 
  1251  000E                     	;# 
  1252  000E                     	;# 
  1253  000F                     	;# 
  1254  0010                     	;# 
  1255  0011                     	;# 
  1256  0012                     	;# 
  1257  0013                     	;# 
  1258  0014                     	;# 
  1259  0015                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0017                     	;# 
  1263  0018                     	;# 
  1264  0019                     	;# 
  1265  001A                     	;# 
  1266  001B                     	;# 
  1267  001B                     	;# 
  1268  001C                     	;# 
  1269  001D                     	;# 
  1270  001E                     	;# 
  1271  001F                     	;# 
  1272  0081                     	;# 
  1273  0085                     	;# 
  1274  0086                     	;# 
  1275  0087                     	;# 
  1276  0089                     	;# 
  1277  008C                     	;# 
  1278  008D                     	;# 
  1279  008E                     	;# 
  1280  008F                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0092                     	;# 
  1284  0093                     	;# 
  1285  0093                     	;# 
  1286  0094                     	;# 
  1287  0095                     	;# 
  1288  0095                     	;# 
  1289  0096                     	;# 
  1290  0096                     	;# 
  1291  0098                     	;# 
  1292  0099                     	;# 
  1293  009C                     	;# 
  1294  009D                     	;# 
  1295  009F                     	;# 
  1296  0108                     	;# 
  1297  0109                     	;# 
  1298  010C                     	;# 
  1299  010C                     	;# 
  1300  010D                     	;# 
  1301  010D                     	;# 
  1302  010E                     	;# 
  1303  010F                     	;# 
  1304  0185                     	;# 
  1305  0186                     	;# 
  1306  018C                     	;# 
  1307  001F                     _ADCON0	set	31
  1308  001E                     _ADRES	set	30
  1309  0005                     _PORTA	set	5
  1310  0006                     _PORTB	set	6
  1311  0007                     _PORTC	set	7
  1312  0010                     _T1CON	set	16
  1313  000F                     _TMR1H	set	15
  1314  000E                     _TMR1L	set	14
  1315  005F                     _GIE	set	95
  1316  00F9                     _GO_nDONE	set	249
  1317  005E                     _PEIE	set	94
  1318  002C                     _RA4	set	44
  1319  0032                     _RB2	set	50
  1320  0033                     _RB3	set	51
  1321  0034                     _RB4	set	52
  1322  0035                     _RB5	set	53
  1323  0060                     _TMR1IF	set	96
  1324  009F                     _ADCON1	set	159
  1325  009D                     _FVRCON	set	157
  1326  0090                     _OSCCON	set	144
  1327  0085                     _TRISA	set	133
  1328  0086                     _TRISB	set	134
  1329  0087                     _TRISC	set	135
  1330  0408                     _PS0	set	1032
  1331  0409                     _PS1	set	1033
  1332  040A                     _PS2	set	1034
  1333  040B                     _PSA	set	1035
  1334  0460                     _TMR1IE	set	1120
  1335  0185                     _ANSELA	set	389
  1336  0186                     _ANSELB	set	390
  1337                           
  1338                           	psect	text0
  1339  0000                     __ptext0:	
  1340                           ; #config settings
  1341                           
  1342                           
  1343                           ;psect for function _TMR1_ISR
  1344  0000                     
  1345                           	psect	cinit
  1346  0013                     start_initialization:	
  1347  0013                     __initialization:	
  1348                           
  1349                           ; Clear objects allocated to COMMON
  1350  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1351  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1352  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1353                           
  1354                           ; Clear objects allocated to BANK0
  1355  0016  1383               	bcf	3,7	;select IRP bank0
  1356  0017  3020               	movlw	low __pbssBANK0
  1357  0018  0084               	movwf	4
  1358  0019  3055               	movlw	low (__pbssBANK0+53)
  1359  001A  158A  26F1  118A   	fcall	clear_ram0
  1360                           
  1361                           ; Clear objects allocated to BANK1
  1362  001D  30A0               	movlw	low __pbssBANK1
  1363  001E  0084               	movwf	4
  1364  001F  30CF               	movlw	low (__pbssBANK1+47)
  1365  0020  158A  26F1         	fcall	clear_ram0
  1366  0022                     end_of_initialization:	
  1367                           ;End of C runtime variable initialization code
  1368                           
  1369  0022                     __end_of__initialization:	
  1370  0022  0183               	clrf	3
  1371  0023  118A  2D4C         	ljmp	_main	;jump to C main() function
  1372                           
  1373                           	psect	bssCOMMON
  1374  0077                     __pbssCOMMON:	
  1375  0077                     _LED:	
  1376  0077                     	ds	1
  1377  0078                     _Lights:	
  1378  0078                     	ds	1
  1379  0079                     _SwDetect:	
  1380  0079                     	ds	1
  1381                           
  1382                           	psect	bssBANK0
  1383  0020                     __pbssBANK0:	
  1384  0020                     _myMain:	
  1385  0020                     	ds	7
  1386  0027                     __CDS:	
  1387  0027                     	ds	5
  1388  002C                     _PIRLED:	
  1389  002C                     	ds	4
  1390  0030                     _Timer1:	
  1391  0030                     	ds	3
  1392  0033                     _WDT:	
  1393  0033                     	ds	2
  1394  0035                     _LightsControl:	
  1395  0035                     	ds	1
  1396  0036                     _Temp:	
  1397  0036                     	ds	12
  1398  0042                     _Lights1:	
  1399  0042                     	ds	7
  1400  0049                     _VarErrLED:	
  1401  0049                     	ds	4
  1402  004D                     _VarLED1:	
  1403  004D                     	ds	4
  1404  0051                     _VarLED2:	
  1405  0051                     	ds	4
  1406                           
  1407                           	psect	bssBANK1
  1408  00A0                     __pbssBANK1:	
  1409  00A0                     __PIR:	
  1410  00A0                     	ds	47
  1411                           
  1412                           	psect	clrtext
  1413  0EF1                     clear_ram0:	
  1414                           ;	Called with FSR containing the base address, and
  1415                           ;	W with the last address+1
  1416                           
  1417  0EF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1418  0EF2                     clrloop0:	
  1419  0EF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1420  0EF3  0A84               	incf	4,f	;increment pointer
  1421  0EF4  0604               	xorwf	4,w	;XOR with final address
  1422  0EF5  1903               	btfsc	3,2	;have we reached the end yet?
  1423  0EF6  3400               	retlw	0	;all done for this memory range, return
  1424  0EF7  0604               	xorwf	4,w	;XOR again to restore value
  1425  0EF8  2EF2               	goto	clrloop0	;do the next byte
  1426                           
  1427                           	psect	cstackCOMMON
  1428  0070                     __pcstackCOMMON:	
  1429  0070                     ?_setLED_Initialization:	
  1430  0070                     ?_setPIRLED_Main:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0070                     ?_Fosc_Set:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0070                     ?_IO_Set:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0070                     ?_TMR1_Set:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0070                     ?_ADC_Set:	
  1443                           ; 0 bytes @ 0x0
  1444                           
  1445  0070                     ?_WDT_Set:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_TMR1_ISR:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ??_TMR1_ISR:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_Timeout_Counter:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_set_TimeoutCleared:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_WDT_Clearing:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_myMain_Initialization:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_Temp_Initialization:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_Lights_Initialization:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_PIR_Initialization:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_getTemp_AD:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_my_MainTimer:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_Temp_Main:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_Lights_Main:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_PIR_Main:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_setTemp_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_setTemp_Main:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_setLights_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_setLights_Main:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Lights_Control:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_Lights_Close:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_setLights_Line:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_CDS_Initialization:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_CDS_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_LedPointSelect:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_LED_Initialization:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_LED_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Mcu_Initialization:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_ISR:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ??_ISR:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_WDT_Main:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setMain_Exception:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_LightsPointSelect:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_getAll_Lights_Line:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_getLights_Status:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_getCDS_Status:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_getMain_LightsStatus:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_getMain_All_Error_Status:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559                           
  1560                           ; 1 bytes @ 0x0
  1561  0070                     	ds	4
  1562  0074                     ??_Fosc_Set:	
  1563  0074                     ??_IO_Set:	
  1564                           ; 0 bytes @ 0x4
  1565                           
  1566  0074                     ??_TMR1_Set:	
  1567                           ; 0 bytes @ 0x4
  1568                           
  1569  0074                     ??_ADC_Set:	
  1570                           ; 0 bytes @ 0x4
  1571                           
  1572  0074                     ??_WDT_Set:	
  1573                           ; 0 bytes @ 0x4
  1574                           
  1575  0074                     ??_Timeout_Counter:	
  1576                           ; 0 bytes @ 0x4
  1577                           
  1578  0074                     ??_set_TimeoutCleared:	
  1579                           ; 0 bytes @ 0x4
  1580                           
  1581  0074                     ??_WDT_Clearing:	
  1582                           ; 0 bytes @ 0x4
  1583                           
  1584  0074                     ??_myMain_Initialization:	
  1585                           ; 0 bytes @ 0x4
  1586                           
  1587  0074                     ??_Temp_Initialization:	
  1588                           ; 0 bytes @ 0x4
  1589                           
  1590  0074                     ??_my_MainTimer:	
  1591                           ; 0 bytes @ 0x4
  1592                           
  1593  0074                     ??_setTemp_Initialization:	
  1594                           ; 0 bytes @ 0x4
  1595                           
  1596  0074                     ??_CDS_Initialization:	
  1597                           ; 0 bytes @ 0x4
  1598                           
  1599  0074                     ??_CDS_Main:	
  1600                           ; 0 bytes @ 0x4
  1601                           
  1602  0074                     ??_getCDS_Status:	
  1603                           ; 0 bytes @ 0x4
  1604                           
  1605  0074                     ??_LedPointSelect:	
  1606                           ; 0 bytes @ 0x4
  1607                           
  1608  0074                     ??_WDT_Main:	
  1609                           ; 0 bytes @ 0x4
  1610                           
  1611  0074                     ??_LightsPointSelect:	
  1612                           ; 0 bytes @ 0x4
  1613                           
  1614  0074                     ??___awdiv:	
  1615                           ; 0 bytes @ 0x4
  1616                           
  1617  0074                     ??___lwdiv:	
  1618                           ; 0 bytes @ 0x4
  1619                           
  1620  0074                     ?_getAD:	
  1621                           ; 0 bytes @ 0x4
  1622                           
  1623  0074                     getCDS_Status@status:	
  1624                           ; 1 bytes @ 0x4
  1625                           
  1626  0074                     getAD@adcon1:	
  1627                           ; 1 bytes @ 0x4
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x4
  1631  0074                     	ds	1
  1632  0075                     ??_getAD:	
  1633  0075                     ??_Mcu_Initialization:	
  1634                           ; 0 bytes @ 0x5
  1635                           
  1636  0075                     ??_getMain_All_Error_Status:	
  1637                           ; 0 bytes @ 0x5
  1638                           
  1639  0075                     LedPointSelect@led:	
  1640                           ; 0 bytes @ 0x5
  1641                           
  1642  0075                     getAD@adcon0:	
  1643                           ; 1 bytes @ 0x5
  1644                           
  1645  0075                     LightsPointSelect@lights:	
  1646                           ; 1 bytes @ 0x5
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x5
  1650  0075                     	ds	1
  1651  0076                     ?_setLED:	
  1652  0076                     ?_getPIR_AD:	
  1653                           ; 0 bytes @ 0x6
  1654                           
  1655  0076                     ??_getAll_Lights_Line:	
  1656                           ; 0 bytes @ 0x6
  1657                           
  1658  0076                     ?_setLights_Trigger:	
  1659                           ; 0 bytes @ 0x6
  1660                           
  1661  0076                     ??_getLights_Status:	
  1662                           ; 0 bytes @ 0x6
  1663                           
  1664  0076                     ??_setLights_Initialization:	
  1665                           ; 0 bytes @ 0x6
  1666                           
  1667  0076                     ??_setLights_Line:	
  1668                           ; 0 bytes @ 0x6
  1669                           
  1670  0076                     ?_getCDS_AD:	
  1671                           ; 0 bytes @ 0x6
  1672                           
  1673  0076                     ??_getMain_LightsStatus:	
  1674                           ; 0 bytes @ 0x6
  1675                           
  1676  0076                     getCDS_AD@channel2:	
  1677                           ; 0 bytes @ 0x6
  1678                           
  1679  0076                     setLED@command:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682  0076                     getTemp_AD@channel:	
  1683                           ; 1 bytes @ 0x6
  1684                           
  1685  0076                     getPIR_AD@channel2:	
  1686                           ; 1 bytes @ 0x6
  1687                           
  1688  0076                     setLights_Initialization@lights:	
  1689                           ; 1 bytes @ 0x6
  1690                           
  1691  0076                     Lights_Control@lights:	
  1692                           ; 1 bytes @ 0x6
  1693                           
  1694  0076                     setLights_Trigger@command:	
  1695                           ; 1 bytes @ 0x6
  1696                           
  1697  0076                     setLights_Line@lights:	
  1698                           ; 1 bytes @ 0x6
  1699                           
  1700  0076                     getAll_Lights_Line@line:	
  1701                           ; 1 bytes @ 0x6
  1702                           
  1703                           
  1704                           ; 1 bytes @ 0x6
  1705  0076                     	ds	1
  1706  0077                     ??_setLED_Initialization:	
  1707  0077                     ??_setLED:	
  1708                           ; 0 bytes @ 0x7
  1709                           
  1710  0077                     ??_Lights_Initialization:	
  1711                           ; 0 bytes @ 0x7
  1712                           
  1713  0077                     ??_Temp_Main:	
  1714                           ; 0 bytes @ 0x7
  1715                           
  1716  0077                     ??_Lights_Main:	
  1717                           ; 0 bytes @ 0x7
  1718                           
  1719  0077                     ??_setLights_Main:	
  1720                           ; 0 bytes @ 0x7
  1721                           
  1722  0077                     ??_LED_Initialization:	
  1723                           ; 0 bytes @ 0x7
  1724                           
  1725  0077                     ??_LED_Main:	
  1726                           ; 0 bytes @ 0x7
  1727                           
  1728                           
  1729                           	psect	cstackBANK0
  1730  0055                     __pcstackBANK0:	
  1731                           ; 0 bytes @ 0x7
  1732                           
  1733  0055                     ??_getTemp_AD:	
  1734  0055                     ??_setLights_Trigger:	
  1735                           ; 0 bytes @ 0x0
  1736                           
  1737  0055                     ??_Lights_Control:	
  1738                           ; 0 bytes @ 0x0
  1739                           
  1740  0055                     ?_setLights:	
  1741                           ; 0 bytes @ 0x0
  1742                           
  1743  0055                     ??_getCDS_AD:	
  1744                           ; 0 bytes @ 0x0
  1745                           
  1746  0055                     ?___awdiv:	
  1747                           ; 0 bytes @ 0x0
  1748                           
  1749  0055                     ?___lwdiv:	
  1750                           ; 2 bytes @ 0x0
  1751                           
  1752  0055                     setLED@led:	
  1753                           ; 2 bytes @ 0x0
  1754                           
  1755  0055                     setLights@status:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0055                     getLights_Status@lights:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0055                     _getMain_All_Error_Status$2073:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0055                     ___awdiv@divisor:	
  1765                           ; 2 bytes @ 0x0
  1766                           
  1767  0055                     ___lwdiv@divisor:	
  1768                           ; 2 bytes @ 0x0
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0x0
  1772  0055                     	ds	1
  1773  0056                     ??_setPIRLED_Main:	
  1774  0056                     ??_PIR_Initialization:	
  1775                           ; 0 bytes @ 0x1
  1776                           
  1777  0056                     ??_setLights:	
  1778                           ; 0 bytes @ 0x1
  1779                           
  1780  0056                     setLED_Initialization@led:	
  1781                           ; 0 bytes @ 0x1
  1782                           
  1783  0056                     getLights_Status@status:	
  1784                           ; 1 bytes @ 0x1
  1785                           
  1786  0056                     setLights_Trigger@lights:	
  1787                           ; 1 bytes @ 0x1
  1788                           
  1789                           
  1790                           ; 1 bytes @ 0x1
  1791  0056                     	ds	1
  1792  0057                     ??_setMain_Exception:	
  1793  0057                     getCDS_AD@i:	
  1794                           ; 0 bytes @ 0x2
  1795                           
  1796  0057                     setPIRLED_Main@count:	
  1797                           ; 1 bytes @ 0x2
  1798                           
  1799  0057                     getMain_LightsStatus@count:	
  1800                           ; 1 bytes @ 0x2
  1801                           
  1802  0057                     setLights@lights:	
  1803                           ; 1 bytes @ 0x2
  1804                           
  1805  0057                     _getMain_All_Error_Status$2075:	
  1806                           ; 1 bytes @ 0x2
  1807                           
  1808  0057                     ___awdiv@dividend:	
  1809                           ; 2 bytes @ 0x2
  1810                           
  1811  0057                     ___lwdiv@dividend:	
  1812                           ; 2 bytes @ 0x2
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x2
  1816  0057                     	ds	1
  1817  0058                     getCDS_AD@j:	
  1818  0058                     setLights_Main@lights:	
  1819                           ; 1 bytes @ 0x3
  1820                           
  1821  0058                     getMain_LightsStatus@i:	
  1822                           ; 1 bytes @ 0x3
  1823                           
  1824                           
  1825                           ; 2 bytes @ 0x3
  1826  0058                     	ds	1
  1827  0059                     getCDS_AD@channel1:	
  1828  0059                     setMain_Exception@buz:	
  1829                           ; 1 bytes @ 0x4
  1830                           
  1831  0059                     getMain_All_Error_Status@command:	
  1832                           ; 1 bytes @ 0x4
  1833                           
  1834  0059                     ___awdiv@counter:	
  1835                           ; 1 bytes @ 0x4
  1836                           
  1837  0059                     ___lwdiv@counter:	
  1838                           ; 1 bytes @ 0x4
  1839                           
  1840                           
  1841                           ; 1 bytes @ 0x4
  1842  0059                     	ds	1
  1843  005A                     setMain_Exception@status:	
  1844  005A                     getMain_LightsStatus@status:	
  1845                           ; 1 bytes @ 0x5
  1846                           
  1847  005A                     getMain_All_Error_Status@status:	
  1848                           ; 1 bytes @ 0x5
  1849                           
  1850  005A                     ___awdiv@sign:	
  1851                           ; 1 bytes @ 0x5
  1852                           
  1853  005A                     ___lwdiv@quotient:	
  1854                           ; 1 bytes @ 0x5
  1855                           
  1856                           
  1857                           ; 2 bytes @ 0x5
  1858  005A                     	ds	1
  1859  005B                     ??_Lights_Close:	
  1860  005B                     _setMain_Exception$2057:	
  1861                           ; 0 bytes @ 0x6
  1862                           
  1863  005B                     ___awdiv@quotient:	
  1864                           ; 2 bytes @ 0x6
  1865                           
  1866                           
  1867                           ; 2 bytes @ 0x6
  1868  005B                     	ds	2
  1869  005D                     ??_getPIR_AD:	
  1870  005D                     ??_setTemp_Main:	
  1871                           ; 0 bytes @ 0x8
  1872                           
  1873  005D                     setMain_Exception@command:	
  1874                           ; 0 bytes @ 0x8
  1875                           
  1876                           
  1877                           ; 1 bytes @ 0x8
  1878  005D                     	ds	1
  1879  005E                     ??_PIR_Main:	
  1880                           
  1881                           ; 0 bytes @ 0x9
  1882  005E                     	ds	2
  1883  0060                     getPIR_AD@j:	
  1884                           
  1885                           ; 1 bytes @ 0xB
  1886  0060                     	ds	1
  1887  0061                     getPIR_AD@channel1:	
  1888                           
  1889                           ; 1 bytes @ 0xC
  1890  0061                     	ds	1
  1891  0062                     getPIR_AD@i:	
  1892                           
  1893                           ; 1 bytes @ 0xD
  1894  0062                     	ds	1
  1895  0063                     _PIR_Main$2728:	
  1896                           
  1897                           ; 2 bytes @ 0xE
  1898  0063                     	ds	2
  1899  0065                     PIR_Main@error:	
  1900                           
  1901                           ; 1 bytes @ 0x10
  1902  0065                     	ds	1
  1903  0066                     ?_main:	
  1904  0066                     main@argc:	
  1905                           ; 2 bytes @ 0x11
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x11
  1909  0066                     	ds	2
  1910  0068                     main@argv:	
  1911                           
  1912                           ; 2 bytes @ 0x13
  1913  0068                     	ds	2
  1914  006A                     ??_main:	
  1915                           
  1916                           ; 0 bytes @ 0x15
  1917  006A                     	ds	1
  1918                           
  1919                           	psect	maintext
  1920  054C                     __pmaintext:	
  1921 ;;
  1922 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1923 ;;
  1924 ;; *************** function _main *****************
  1925 ;; Defined at:
  1926 ;;		line 7 in file "../src/Main_B1.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  argc            2   17[BANK0 ] int 
  1929 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  2   17[BANK0 ] int 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 17F/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1941 ;;      Params:         0       4       0       0
  1942 ;;      Locals:         0       0       0       0
  1943 ;;      Temps:          0       1       0       0
  1944 ;;      Totals:         0       5       0       0
  1945 ;;Total ram usage:        5 bytes
  1946 ;; Hardware stack levels required when called:    7
  1947 ;; This function calls:
  1948 ;;		_CDS_Initialization
  1949 ;;		_CDS_Main
  1950 ;;		_LED_Initialization
  1951 ;;		_LED_Main
  1952 ;;		_Lights_Initialization
  1953 ;;		_Lights_Main
  1954 ;;		_Mcu_Initialization
  1955 ;;		_PIR_Initialization
  1956 ;;		_PIR_Main
  1957 ;;		_Temp_Initialization
  1958 ;;		_Temp_Main
  1959 ;;		_WDT_Main
  1960 ;;		_getCDS_AD
  1961 ;;		_getPIR_AD
  1962 ;;		_getTemp_AD
  1963 ;;		_myMain_Initialization
  1964 ;;		_my_MainTimer
  1965 ;; This function is called by:
  1966 ;;		Startup code after reset
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _main
  1972  054C                     _main:	
  1973                           
  1974                           ;Main_B1.c: 8: myMain_Initialization();
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1978  054C  158A  26C0  118A   	fcall	_myMain_Initialization
  1979                           
  1980                           ;Main_B1.c: 9: Mcu_Initialization();
  1981  054F  158A  2743  118A   	fcall	_Mcu_Initialization
  1982                           
  1983                           ;Main_B1.c: 10: ;;
  1984                           ;Main_B1.c: 11: LED_Initialization();
  1985  0552  158A  270E  118A   	fcall	_LED_Initialization
  1986                           
  1987                           ;Main_B1.c: 12: ;;
  1988                           ;Main_B1.c: 14: ;;
  1989                           ;Main_B1.c: 15: Temp_Initialization();
  1990  0555  158A  26C4  118A   	fcall	_Temp_Initialization
  1991                           
  1992                           ;Main_B1.c: 16: ;;
  1993                           ;Main_B1.c: 17: ;;
  1994                           ;Main_B1.c: 18: ;;
  1995                           ;Main_B1.c: 20: ;;
  1996                           ;Main_B1.c: 21: Lights_Initialization();
  1997  0558  158A  26CE  118A   	fcall	_Lights_Initialization
  1998                           
  1999                           ;Main_B1.c: 22: CDS_Initialization();
  2000  055B  158A  26CA  118A   	fcall	_CDS_Initialization
  2001                           
  2002                           ;Main_B1.c: 23: PIR_Initialization();
  2003  055E  158A  2796  118A   	fcall	_PIR_Initialization
  2004                           
  2005                           ;Main_B1.c: 24: ;;
  2006                           ;Main_B1.c: 25: ;;
  2007                           ;Main_B1.c: 26: __nop();
  2008  0561  0000               	nop
  2009  0562                     l4004:	
  2010                           ;Main_B1.c: 27: ;;
  2011                           ;Main_B1.c: 28: ;;
  2012                           ;Main_B1.c: 30: while (1) {
  2013                           
  2014                           
  2015                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2016  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0564  1C20               	btfss	_myMain,0
  2019  0565  2D7E               	goto	l4010
  2020                           
  2021                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2022  0566  3011               	movlw	17
  2023  0567  118A  275A  118A   	fcall	_getTemp_AD
  2024                           
  2025                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2026  056A  3031               	movlw	49
  2027  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2028  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2029  056D  00EA               	movwf	??_main
  2030  056E  086A               	movf	??_main,w
  2031  056F  00F6               	movwf	getCDS_AD@channel2
  2032  0570  3009               	movlw	9
  2033  0571  118A  2708  118A   	fcall	_getCDS_AD
  2034                           
  2035                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2036  0574  300D               	movlw	13
  2037  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0577  00EA               	movwf	??_main
  2040  0578  086A               	movf	??_main,w
  2041  0579  00F6               	movwf	getPIR_AD@channel2
  2042  057A  3005               	movlw	5
  2043  057B  118A  21F4  118A   	fcall	_getPIR_AD
  2044  057E                     l4010:	
  2045                           
  2046                           ;Main_B1.c: 57: }
  2047                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2048  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2049  057F  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0580  1C30               	btfss	_Timer1,0
  2051  0581  2D62               	goto	l4004
  2052                           
  2053                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2054  0582  1030               	bcf	_Timer1,0
  2055                           
  2056                           ;Main_B1.c: 95: my_MainTimer();
  2057  0583  118A  277F  118A   	fcall	_my_MainTimer
  2058                           
  2059                           ;Main_B1.c: 96: WDT_Main();
  2060  0586  158A  2773  118A   	fcall	_WDT_Main
  2061                           
  2062                           ;Main_B1.c: 97: ;;
  2063                           ;Main_B1.c: 98: ;;
  2064                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  2065  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2066  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2067  058B  1C20               	btfss	_myMain,0
  2068  058C  2D62               	goto	l4004
  2069                           
  2070                           ;Main_B1.c: 100: ;;
  2071                           ;Main_B1.c: 102: LED_Main();
  2072  058D  158A  26C1  118A   	fcall	_LED_Main
  2073                           
  2074                           ;Main_B1.c: 103: ;;
  2075                           ;Main_B1.c: 105: ;;
  2076                           ;Main_B1.c: 106: Temp_Main();
  2077  0590  158A  26C7  118A   	fcall	_Temp_Main
  2078                           
  2079                           ;Main_B1.c: 107: ;;
  2080                           ;Main_B1.c: 108: ;;
  2081                           ;Main_B1.c: 110: Lights_Main();
  2082  0593  158A  2703  118A   	fcall	_Lights_Main
  2083                           
  2084                           ;Main_B1.c: 111: ;;
  2085                           ;Main_B1.c: 112: ;;
  2086                           ;Main_B1.c: 113: CDS_Main();
  2087  0596  118A  26A3  118A   	fcall	_CDS_Main
  2088                           
  2089                           ;Main_B1.c: 114: PIR_Main();
  2090  0599  118A  2025  118A   	fcall	_PIR_Main
  2091                           
  2092                           ;Main_B1.c: 116: ;;
  2093                           ;Main_B1.c: 117: ;;
  2094                           ;Main_B1.c: 118: ;;
  2095                           ;Main_B1.c: 119: ;;
  2096  059C  2D62               	goto	l4004
  2097  059D                     __end_of_main:	
  2098                           ;Main_B1.c: 126: }
  2099                           ;Main_B1.c: 127: }
  2100                           ;Main_B1.c: 161: }
  2101                           ;Main_B1.c: 162: return (0);
  2102                           ;	Return value of _main is never used
  2103                           
  2104                           
  2105                           	psect	text1
  2106  077F                     __ptext1:	
  2107 ;; *************** function _my_MainTimer *****************
  2108 ;; Defined at:
  2109 ;;		line 181 in file "../src/Main_B1.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          0       0       0       0
  2126 ;;      Totals:         0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    2
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _my_MainTimer
  2139  077F                     _my_MainTimer:	
  2140                           
  2141                           ;Main_B1.c: 183: if (myMain.PowerON == 0) {
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _my_MainTimer: [wreg+status,2]
  2145  077F  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0780  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0781  1820               	btfsc	_myMain,0
  2148  0782  2F93               	goto	l3046
  2149                           
  2150                           ;Main_B1.c: 184: myMain.PowerCount++;
  2151  0783  3001               	movlw	1
  2152  0784  07A1               	addwf	_myMain+1,f
  2153  0785  1803               	skipnc
  2154  0786  0AA2               	incf	_myMain+2,f
  2155  0787  3000               	movlw	0
  2156  0788  07A2               	addwf	_myMain+2,f
  2157                           
  2158                           ;Main_B1.c: 185: if (myMain.PowerCount == 150)
  2159  0789  3096               	movlw	150
  2160  078A  0621               	xorwf	_myMain+1,w
  2161  078B  0422               	iorwf	_myMain+2,w
  2162  078C  1D03               	skipz
  2163  078D  0008               	return
  2164                           
  2165                           ;Main_B1.c: 186: {
  2166                           ;Main_B1.c: 187: myMain.PowerCount = 0;
  2167  078E  01A1               	clrf	_myMain+1
  2168  078F  01A2               	clrf	_myMain+2
  2169                           
  2170                           ;Main_B1.c: 188: myMain.PowerON = 1;
  2171  0790  1420               	bsf	_myMain,0
  2172                           
  2173                           ;Main_B1.c: 194: ;;
  2174                           ;Main_B1.c: 195: myMain.SelfTest = 1;
  2175  0791  1620               	bsf	_myMain,4
  2176                           
  2177                           ;Main_B1.c: 204: }
  2178                           ;Main_B1.c: 205: } else {
  2179  0792  0008               	return
  2180  0793                     l3046:	
  2181                           
  2182                           ;Main_B1.c: 206: myMain.PowerCount++;
  2183  0793  3001               	movlw	1
  2184  0794  07A1               	addwf	_myMain+1,f
  2185  0795  1803               	skipnc
  2186  0796  0AA2               	incf	_myMain+2,f
  2187  0797  3000               	movlw	0
  2188  0798  07A2               	addwf	_myMain+2,f
  2189                           
  2190                           ;Main_B1.c: 207: if (myMain.PowerCount == 100) {
  2191  0799  3064               	movlw	100
  2192  079A  0621               	xorwf	_myMain+1,w
  2193  079B  0422               	iorwf	_myMain+2,w
  2194  079C  1D03               	skipz
  2195  079D  0008               	return
  2196                           
  2197                           ;Main_B1.c: 208: myMain.PowerCount = 0;
  2198  079E  01A1               	clrf	_myMain+1
  2199  079F  01A2               	clrf	_myMain+2
  2200                           
  2201                           ;Main_B1.c: 210: ;;
  2202  07A0  0008               	return
  2203  07A1                     __end_of_my_MainTimer:	
  2204                           
  2205                           	psect	text2
  2206  0EC0                     __ptext2:	
  2207 ;; *************** function _myMain_Initialization *****************
  2208 ;; Defined at:
  2209 ;;		line 168 in file "../src/Main_B1.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		None
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2223 ;;      Params:         0       0       0       0
  2224 ;;      Locals:         0       0       0       0
  2225 ;;      Temps:          0       0       0       0
  2226 ;;      Totals:         0       0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _myMain_Initialization
  2239  0EC0                     _myMain_Initialization:	
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _myMain_Initialization: []
  2243  0EC0  0008               	return
  2244  0EC1                     __end_of_myMain_Initialization:	
  2245                           
  2246                           	psect	text3
  2247  075A                     __ptext3:	
  2248 ;; *************** function _getTemp_AD *****************
  2249 ;; Defined at:
  2250 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  channel         1    wreg     unsigned char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  channel         1    6[COMMON] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2264 ;;      Params:         0       0       0       0
  2265 ;;      Locals:         1       0       0       0
  2266 ;;      Temps:          0       2       0       0
  2267 ;;      Totals:         1       2       0       0
  2268 ;;Total ram usage:        3 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    4
  2271 ;; This function calls:
  2272 ;;		_getAD
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _getTemp_AD
  2280  075A                     _getTemp_AD:	
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2284                           ;getTemp_AD@channel stored from wreg
  2285  075A  00F6               	movwf	getTemp_AD@channel
  2286                           
  2287                           ;OverTemperature_B1.c: 32: if (Temp.ADtoGO == 1) {
  2288  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2289  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2290  075D  1D36               	btfss	_Temp,2
  2291  075E  0008               	return
  2292                           
  2293                           ;OverTemperature_B1.c: 33: Temp.GO = 1;
  2294  075F  1636               	bsf	_Temp,4
  2295                           
  2296                           ;OverTemperature_B1.c: 34: Temp.ADRES = getAD(channel, 0x70);
  2297  0760  3070               	movlw	112
  2298  0761  00D5               	movwf	??_getTemp_AD
  2299  0762  0855               	movf	??_getTemp_AD,w
  2300  0763  00F4               	movwf	getAD@adcon1
  2301  0764  0876               	movf	getTemp_AD@channel,w
  2302  0765  118A  27A1  118A   	fcall	_getAD
  2303  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0769  1303               	bcf	3,6	;RP1=0, select bank0
  2305  076A  00D6               	movwf	??_getTemp_AD+1
  2306  076B  0856               	movf	??_getTemp_AD+1,w
  2307  076C  00BF               	movwf	_Temp+9
  2308                           
  2309                           ;OverTemperature_B1.c: 35: if (Temp.ADH[0] < Temp.ADRES) {
  2310  076D  083F               	movf	_Temp+9,w
  2311  076E  023D               	subwf	_Temp+7,w
  2312  076F  1803               	skipnc
  2313  0770  2F76               	goto	l3730
  2314                           
  2315                           ;OverTemperature_B1.c: 36: Temp.ADH[0] = Temp.ADRES;
  2316  0771  083F               	movf	_Temp+9,w
  2317  0772  00D5               	movwf	??_getTemp_AD
  2318  0773  0855               	movf	??_getTemp_AD,w
  2319  0774  00BD               	movwf	_Temp+7
  2320                           
  2321                           ;OverTemperature_B1.c: 37: } else if (Temp.ADH[1] < Temp.ADRES) {
  2322  0775  0008               	return
  2323  0776                     l3730:	
  2324  0776  083F               	movf	_Temp+9,w
  2325  0777  023E               	subwf	_Temp+8,w
  2326  0778  1803               	skipnc
  2327  0779  0008               	return
  2328                           
  2329                           ;OverTemperature_B1.c: 38: Temp.ADH[1] = Temp.ADRES;
  2330  077A  083F               	movf	_Temp+9,w
  2331  077B  00D5               	movwf	??_getTemp_AD
  2332  077C  0855               	movf	??_getTemp_AD,w
  2333  077D  00BE               	movwf	_Temp+8
  2334  077E  0008               	return
  2335  077F                     __end_of_getTemp_AD:	
  2336                           
  2337                           	psect	text4
  2338  01F4                     __ptext4:	
  2339 ;; *************** function _getPIR_AD *****************
  2340 ;; Defined at:
  2341 ;;		line 167 in file "../src/PIR_B1.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  channel1        1    wreg     unsigned char 
  2344 ;;  channel2        1    6[COMMON] unsigned char 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  channel1        1   12[BANK0 ] unsigned char 
  2347 ;;  i               1   13[BANK0 ] unsigned char 
  2348 ;;  j               1   11[BANK0 ] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2358 ;;      Params:         1       0       0       0
  2359 ;;      Locals:         0       3       0       0
  2360 ;;      Temps:          0       3       0       0
  2361 ;;      Totals:         1       6       0       0
  2362 ;;Total ram usage:        7 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    4
  2365 ;; This function calls:
  2366 ;;		___awdiv
  2367 ;;		___lwdiv
  2368 ;;		_getAD
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _getPIR_AD
  2376  01F4                     _getPIR_AD:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2380                           ;getPIR_AD@channel1 stored from wreg
  2381  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2383  01F6  00E1               	movwf	getPIR_AD@channel1
  2384                           
  2385                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2386  01F7  01E2               	clrf	getPIR_AD@i
  2387  01F8  01E0               	clrf	getPIR_AD@j
  2388                           
  2389                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2390  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2391  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2392  01FB  1CA0               	btfss	__PIR^(0+128),1
  2393  01FC  0008               	return
  2394                           
  2395                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2396  01FD  1520               	bsf	__PIR^(0+128),2
  2397                           
  2398                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2399  01FE  3070               	movlw	112
  2400  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0201  00DD               	movwf	??_getPIR_AD
  2403  0202  085D               	movf	??_getPIR_AD,w
  2404  0203  00F4               	movwf	getAD@adcon1
  2405  0204  0861               	movf	getPIR_AD@channel1,w
  2406  0205  118A  27A1  118A   	fcall	_getAD
  2407  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2409  020A  00DE               	movwf	??_getPIR_AD+1
  2410  020B  085E               	movf	??_getPIR_AD+1,w
  2411  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2412  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2413  020E  00A2               	movwf	(__PIR^(0+128)+2)
  2414                           
  2415                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2416  020F  3033               	movlw	51
  2417  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0212  00D5               	movwf	___awdiv@divisor
  2420  0213  3000               	movlw	0
  2421  0214  00D6               	movwf	___awdiv@divisor+1
  2422  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0217  0822               	movf	(__PIR^(0+128)+2),w
  2425  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2427  021A  00DD               	movwf	??_getPIR_AD
  2428  021B  01DE               	clrf	??_getPIR_AD+1
  2429  021C  085D               	movf	??_getPIR_AD,w
  2430  021D  00D7               	movwf	___awdiv@dividend
  2431  021E  085E               	movf	??_getPIR_AD+1,w
  2432  021F  00D8               	movwf	___awdiv@dividend+1
  2433  0220  118A  2498  118A   	fcall	___awdiv
  2434  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0225  0855               	movf	?___awdiv,w
  2437  0226  00DF               	movwf	??_getPIR_AD+2
  2438  0227  085F               	movf	??_getPIR_AD+2,w
  2439  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2441  022A  00A3               	movwf	(__PIR^(0+128)+3)
  2442                           
  2443                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2444  022B  0822               	movf	(__PIR^(0+128)+2),w
  2445  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2446  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2447  022E  00DD               	movwf	??_getPIR_AD
  2448  022F  085D               	movf	??_getPIR_AD,w
  2449  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2451  0232  00A4               	movwf	(__PIR^(0+128)+4)
  2452                           
  2453                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2454  0233  3070               	movlw	112
  2455  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0236  00DD               	movwf	??_getPIR_AD
  2458  0237  085D               	movf	??_getPIR_AD,w
  2459  0238  00F4               	movwf	getAD@adcon1
  2460  0239  0876               	movf	getPIR_AD@channel2,w
  2461  023A  118A  27A1  118A   	fcall	_getAD
  2462  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2463  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2464  023F  00DE               	movwf	??_getPIR_AD+1
  2465  0240  085E               	movf	??_getPIR_AD+1,w
  2466  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0243  00A2               	movwf	(__PIR^(0+128)+2)
  2469                           
  2470                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2471  0244  0822               	movf	(__PIR^(0+128)+2),w
  2472  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0247  00DD               	movwf	??_getPIR_AD
  2475  0248  085D               	movf	??_getPIR_AD,w
  2476  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2477  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2478  024B  00A1               	movwf	(__PIR^(0+128)+1)
  2479                           
  2480                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2481  024C  2A68               	goto	l3762
  2482  024D                     l3746:	
  2483                           ;PIR_B1.c: 179: case 0:
  2484                           
  2485                           
  2486                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2487  024D  300A               	movlw	10
  2488  024E  0224               	subwf	(__PIR^(0+128)+4),w
  2489  024F  1803               	skipnc
  2490  0250  2A53               	goto	l3750
  2491                           
  2492                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2493  0251  3005               	movlw	5
  2494  0252  2A54               	goto	L1
  2495  0253                     l3750:	
  2496                           ;PIR_B1.c: 182: } else {
  2497                           
  2498                           
  2499                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2500  0253  303C               	movlw	60
  2501  0254                     L1:	
  2502  0254  00C7               	movwf	(__PIR^(0+128)+39)
  2503  0255  3000               	movlw	0
  2504  0256  2A66               	goto	L5
  2505  0257                     l3752:	
  2506                           ;PIR_B1.c: 186: case 1:
  2507                           
  2508                           ;PIR_B1.c: 184: }
  2509                           ;PIR_B1.c: 185: break;
  2510                           
  2511                           
  2512                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2513  0257  302C               	movlw	44
  2514  0258  00C7               	movwf	(__PIR^(0+128)+39)
  2515  0259  3001               	movlw	1
  2516  025A  2A66               	goto	L5
  2517  025B                     l3754:	
  2518                           ;PIR_B1.c: 189: case 2:
  2519                           
  2520                           ;PIR_B1.c: 188: break;
  2521                           
  2522                           
  2523                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2524  025B  3058               	movlw	88
  2525  025C  00C7               	movwf	(__PIR^(0+128)+39)
  2526  025D  3002               	movlw	2
  2527  025E  2A66               	goto	L5
  2528  025F                     l3756:	
  2529                           ;PIR_B1.c: 192: case 3:
  2530                           
  2531                           ;PIR_B1.c: 191: break;
  2532                           
  2533                           
  2534                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2535  025F  3084               	movlw	132
  2536  0260  00C7               	movwf	(__PIR^(0+128)+39)
  2537  0261  3003               	movlw	3
  2538  0262  2A66               	goto	L5
  2539  0263                     l3758:	
  2540                           ;PIR_B1.c: 195: case 4:
  2541                           
  2542                           ;PIR_B1.c: 194: break;
  2543                           
  2544                           
  2545                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2546  0263  30B0               	movlw	176
  2547  0264  00C7               	movwf	(__PIR^(0+128)+39)
  2548  0265  3004               	movlw	4
  2549  0266                     L5:	
  2550  0266  00C8               	movwf	(__PIR^(0+128)+40)
  2551                           
  2552                           ;PIR_B1.c: 198: }
  2553                           
  2554                           ;PIR_B1.c: 197: break;
  2555  0267  2A79               	goto	l3764
  2556  0268                     l3762:	
  2557  0268  0823               	movf	(__PIR^(0+128)+3),w
  2558                           
  2559                           ; Switch size 1, requested type "space"
  2560                           ; Number of cases is 5, Range of values is 0 to 4
  2561                           ; switch strategies available:
  2562                           ; Name         Instructions Cycles
  2563                           ; simple_byte           16     9 (average)
  2564                           ; direct_byte           17     7 (fixed)
  2565                           ; jumptable            260     6 (fixed)
  2566                           ;	Chosen strategy is simple_byte
  2567  0269  3A00               	xorlw	0	; case 0
  2568  026A  1903               	skipnz
  2569  026B  2A4D               	goto	l3746
  2570  026C  3A01               	xorlw	1	; case 1
  2571  026D  1903               	skipnz
  2572  026E  2A57               	goto	l3752
  2573  026F  3A03               	xorlw	3	; case 2
  2574  0270  1903               	skipnz
  2575  0271  2A5B               	goto	l3754
  2576  0272  3A01               	xorlw	1	; case 3
  2577  0273  1903               	skipnz
  2578  0274  2A5F               	goto	l3756
  2579  0275  3A07               	xorlw	7	; case 4
  2580  0276  1903               	skipnz
  2581  0277  2A63               	goto	l3758
  2582  0278  2A79               	goto	l3764
  2583  0279                     l3764:	
  2584                           
  2585                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2586  0279  0821               	movf	(__PIR^(0+128)+1),w
  2587  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2588  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2589  027C  00DD               	movwf	??_getPIR_AD
  2590  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2591  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2592  027F  0827               	movf	(__PIR^(0+128)+7),w
  2593  0280  3EA8               	addlw	(__PIR+8)& (0+255)
  2594  0281  0084               	movwf	4
  2595  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0284  085D               	movf	??_getPIR_AD,w
  2598  0285  1383               	bcf	3,7	;select IRP bank1
  2599  0286  0080               	movwf	0
  2600                           
  2601                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2602  0287  01E2               	clrf	getPIR_AD@i
  2603  0288  300A               	movlw	10
  2604  0289  0262               	subwf	getPIR_AD@i,w
  2605  028A  1803               	btfsc	3,0
  2606  028B  2AA8               	goto	l3778
  2607  028C                     l3772:	
  2608                           
  2609                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2610  028C  0862               	movf	getPIR_AD@i,w
  2611  028D  3EA8               	addlw	(__PIR+8)& (0+255)
  2612  028E  0084               	movwf	4
  2613  028F  0800               	movf	0,w
  2614  0290  00DD               	movwf	??_getPIR_AD
  2615  0291  01DE               	clrf	??_getPIR_AD+1
  2616  0292  085D               	movf	??_getPIR_AD,w
  2617  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0295  07B2               	addwf	(__PIR^(0+128)+18),f
  2620  0296  1803               	skipnc
  2621  0297  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2622  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2624  029A  085E               	movf	??_getPIR_AD+1,w
  2625  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2626  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2627  029D  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2628  029E  3001               	movlw	1
  2629  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2630  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2631  02A1  00DD               	movwf	??_getPIR_AD
  2632  02A2  085D               	movf	??_getPIR_AD,w
  2633  02A3  07E2               	addwf	getPIR_AD@i,f
  2634  02A4  300A               	movlw	10
  2635  02A5  0262               	subwf	getPIR_AD@i,w
  2636  02A6  1C03               	skipc
  2637  02A7  2A8C               	goto	l3772
  2638  02A8                     l3778:	
  2639                           
  2640                           ;PIR_B1.c: 204: }
  2641                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2642  02A8  300A               	movlw	10
  2643  02A9  00D5               	movwf	___lwdiv@divisor
  2644  02AA  3000               	movlw	0
  2645  02AB  00D6               	movwf	___lwdiv@divisor+1
  2646  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2647  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2648  02AE  0833               	movf	((__PIR+1)^(0+128)+18),w
  2649  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2650  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2651  02B1  01D8               	clrf	___lwdiv@dividend+1
  2652  02B2  07D8               	addwf	___lwdiv@dividend+1,f
  2653  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2654  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2655  02B5  0832               	movf	(__PIR^(0+128)+18),w
  2656  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2657  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2658  02B8  01D7               	clrf	___lwdiv@dividend
  2659  02B9  07D7               	addwf	___lwdiv@dividend,f
  2660  02BA  118A  25EE  118A   	fcall	___lwdiv
  2661  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2662  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2663  02BF  0855               	movf	?___lwdiv,w
  2664  02C0  00DD               	movwf	??_getPIR_AD
  2665  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2666  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2667  02C3  0834               	movf	(__PIR^(0+128)+20),w
  2668  02C4  3EB5               	addlw	(__PIR+21)& (0+255)
  2669  02C5  0084               	movwf	4
  2670  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2671  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2672  02C8  085D               	movf	??_getPIR_AD,w
  2673  02C9  1383               	bcf	3,7	;select IRP bank1
  2674  02CA  0080               	movwf	0
  2675                           
  2676                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2677  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2678  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2679  02CD  01B2               	clrf	(__PIR^(0+128)+18)
  2680  02CE  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2681                           
  2682                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2683  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2684  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2685  02D1  01E2               	clrf	getPIR_AD@i
  2686  02D2  300A               	movlw	10
  2687  02D3  0262               	subwf	getPIR_AD@i,w
  2688  02D4  1803               	btfsc	3,0
  2689  02D5  2AF2               	goto	l3794
  2690  02D6                     l3788:	
  2691                           
  2692                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2693  02D6  0862               	movf	getPIR_AD@i,w
  2694  02D7  3EB5               	addlw	(__PIR+21)& (0+255)
  2695  02D8  0084               	movwf	4
  2696  02D9  0800               	movf	0,w
  2697  02DA  00DD               	movwf	??_getPIR_AD
  2698  02DB  01DE               	clrf	??_getPIR_AD+1
  2699  02DC  085D               	movf	??_getPIR_AD,w
  2700  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2701  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2702  02DF  07BF               	addwf	(__PIR^(0+128)+31),f
  2703  02E0  1803               	skipnc
  2704  02E1  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2705  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2706  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2707  02E4  085E               	movf	??_getPIR_AD+1,w
  2708  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2709  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2710  02E7  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2711  02E8  3001               	movlw	1
  2712  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2713  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2714  02EB  00DD               	movwf	??_getPIR_AD
  2715  02EC  085D               	movf	??_getPIR_AD,w
  2716  02ED  07E2               	addwf	getPIR_AD@i,f
  2717  02EE  300A               	movlw	10
  2718  02EF  0262               	subwf	getPIR_AD@i,w
  2719  02F0  1C03               	skipc
  2720  02F1  2AD6               	goto	l3788
  2721  02F2                     l3794:	
  2722                           
  2723                           ;PIR_B1.c: 210: }
  2724                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2725  02F2  300A               	movlw	10
  2726  02F3  00D5               	movwf	___lwdiv@divisor
  2727  02F4  3000               	movlw	0
  2728  02F5  00D6               	movwf	___lwdiv@divisor+1
  2729  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2730  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2731  02F8  0840               	movf	((__PIR+1)^(0+128)+31),w
  2732  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2733  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2734  02FB  01D8               	clrf	___lwdiv@dividend+1
  2735  02FC  07D8               	addwf	___lwdiv@dividend+1,f
  2736  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2737  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2738  02FF  083F               	movf	(__PIR^(0+128)+31),w
  2739  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0302  01D7               	clrf	___lwdiv@dividend
  2742  0303  07D7               	addwf	___lwdiv@dividend,f
  2743  0304  118A  25EE  118A   	fcall	___lwdiv
  2744  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2746  0309  0855               	movf	?___lwdiv,w
  2747  030A  00DD               	movwf	??_getPIR_AD
  2748  030B  085D               	movf	??_getPIR_AD,w
  2749  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2750  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2751  030E  00A6               	movwf	(__PIR^(0+128)+6)
  2752                           
  2753                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2754  030F  01BF               	clrf	(__PIR^(0+128)+31)
  2755  0310  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2756                           
  2757                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2758  0311  300A               	movlw	10
  2759  0312  0227               	subwf	(__PIR^(0+128)+7),w
  2760  0313  1803               	skipnc
  2761  0314  2B1E               	goto	l3802
  2762                           
  2763                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2764  0315  3001               	movlw	1
  2765  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0318  00DD               	movwf	??_getPIR_AD
  2768  0319  085D               	movf	??_getPIR_AD,w
  2769  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2770  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2771  031C  07A7               	addwf	(__PIR^(0+128)+7),f
  2772                           
  2773                           ;PIR_B1.c: 216: } else {
  2774  031D  0008               	return
  2775  031E                     l3802:	
  2776                           
  2777                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2778  031E  01A7               	clrf	(__PIR^(0+128)+7)
  2779                           
  2780                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2781  031F  300A               	movlw	10
  2782  0320  0234               	subwf	(__PIR^(0+128)+20),w
  2783  0321  1803               	skipnc
  2784  0322  2B2C               	goto	l3808
  2785                           
  2786                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2787  0323  3001               	movlw	1
  2788  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0326  00DD               	movwf	??_getPIR_AD
  2791  0327  085D               	movf	??_getPIR_AD,w
  2792  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2794  032A  07B4               	addwf	(__PIR^(0+128)+20),f
  2795  032B  0008               	return
  2796  032C                     l3808:	
  2797                           
  2798                           ;PIR_B1.c: 220: else
  2799                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  2800  032C  01B4               	clrf	(__PIR^(0+128)+20)
  2801  032D  0008               	return
  2802  032E                     __end_of_getPIR_AD:	
  2803                           
  2804                           	psect	text5
  2805  05EE                     __ptext5:	
  2806 ;; *************** function ___lwdiv *****************
  2807 ;; Defined at:
  2808 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  divisor         2    0[BANK0 ] unsigned int 
  2811 ;;  dividend        2    2[BANK0 ] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        2    5[BANK0 ] unsigned int 
  2814 ;;  counter         1    4[BANK0 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2    0[BANK0 ] unsigned int 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2824 ;;      Params:         0       4       0       0
  2825 ;;      Locals:         0       3       0       0
  2826 ;;      Temps:          1       0       0       0
  2827 ;;      Totals:         1       7       0       0
  2828 ;;Total ram usage:        8 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    2
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_getPIR_AD
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function ___lwdiv
  2840  05EE                     ___lwdiv:	
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2844  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2845  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2846  05F0  01DA               	clrf	___lwdiv@quotient
  2847  05F1  01DB               	clrf	___lwdiv@quotient+1
  2848  05F2  0856               	movf	___lwdiv@divisor+1,w
  2849  05F3  0455               	iorwf	___lwdiv@divisor,w
  2850  05F4  1903               	skipnz
  2851  05F5  2E27               	goto	l3692
  2852  05F6  01D9               	clrf	___lwdiv@counter
  2853  05F7  0AD9               	incf	___lwdiv@counter,f
  2854  05F8                     l3680:	
  2855  05F8  1BD6               	btfsc	___lwdiv@divisor+1,7
  2856  05F9  2E06               	goto	l3682
  2857  05FA  3001               	movlw	1
  2858  05FB                     u4105:	
  2859  05FB  1003               	clrc
  2860  05FC  0DD5               	rlf	___lwdiv@divisor,f
  2861  05FD  0DD6               	rlf	___lwdiv@divisor+1,f
  2862  05FE  3EFF               	addlw	-1
  2863  05FF  1D03               	skipz
  2864  0600  2DFB               	goto	u4105
  2865  0601  3001               	movlw	1
  2866  0602  00F4               	movwf	??___lwdiv
  2867  0603  0874               	movf	??___lwdiv,w
  2868  0604  07D9               	addwf	___lwdiv@counter,f
  2869  0605  2DF8               	goto	l3680
  2870  0606                     l3682:	
  2871  0606  3001               	movlw	1
  2872  0607                     u4125:	
  2873  0607  1003               	clrc
  2874  0608  0DDA               	rlf	___lwdiv@quotient,f
  2875  0609  0DDB               	rlf	___lwdiv@quotient+1,f
  2876  060A  3EFF               	addlw	-1
  2877  060B  1D03               	skipz
  2878  060C  2E07               	goto	u4125
  2879  060D  0856               	movf	___lwdiv@divisor+1,w
  2880  060E  0258               	subwf	___lwdiv@dividend+1,w
  2881  060F  1D03               	skipz
  2882  0610  2E13               	goto	u4135
  2883  0611  0855               	movf	___lwdiv@divisor,w
  2884  0612  0257               	subwf	___lwdiv@dividend,w
  2885  0613                     u4135:	
  2886  0613  1C03               	skipc
  2887  0614  2E1C               	goto	l3688
  2888  0615  0855               	movf	___lwdiv@divisor,w
  2889  0616  02D7               	subwf	___lwdiv@dividend,f
  2890  0617  0856               	movf	___lwdiv@divisor+1,w
  2891  0618  1C03               	skipc
  2892  0619  03D8               	decf	___lwdiv@dividend+1,f
  2893  061A  02D8               	subwf	___lwdiv@dividend+1,f
  2894  061B  145A               	bsf	___lwdiv@quotient,0
  2895  061C                     l3688:	
  2896  061C  3001               	movlw	1
  2897  061D                     u4145:	
  2898  061D  1003               	clrc
  2899  061E  0CD6               	rrf	___lwdiv@divisor+1,f
  2900  061F  0CD5               	rrf	___lwdiv@divisor,f
  2901  0620  3EFF               	addlw	-1
  2902  0621  1D03               	skipz
  2903  0622  2E1D               	goto	u4145
  2904  0623  3001               	movlw	1
  2905  0624  02D9               	subwf	___lwdiv@counter,f
  2906  0625  1D03               	btfss	3,2
  2907  0626  2E06               	goto	l3682
  2908  0627                     l3692:	
  2909  0627  085B               	movf	___lwdiv@quotient+1,w
  2910  0628  01D6               	clrf	?___lwdiv+1
  2911  0629  07D6               	addwf	?___lwdiv+1,f
  2912  062A  085A               	movf	___lwdiv@quotient,w
  2913  062B  01D5               	clrf	?___lwdiv
  2914  062C  07D5               	addwf	?___lwdiv,f
  2915  062D  0008               	return
  2916  062E                     __end_of___lwdiv:	
  2917                           
  2918                           	psect	text6
  2919  0708                     __ptext6:	
  2920 ;; *************** function _getCDS_AD *****************
  2921 ;; Defined at:
  2922 ;;		line 45 in file "../src/CDS_B1.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  channel1        1    wreg     unsigned char 
  2925 ;;  channel2        1    6[COMMON] unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  channel1        1    4[BANK0 ] unsigned char 
  2928 ;;  j               1    3[BANK0 ] unsigned char 
  2929 ;;  i               1    2[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;		None               void
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2939 ;;      Params:         1       0       0       0
  2940 ;;      Locals:         0       3       0       0
  2941 ;;      Temps:          0       2       0       0
  2942 ;;      Totals:         1       5       0       0
  2943 ;;Total ram usage:        6 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    4
  2946 ;; This function calls:
  2947 ;;		_getAD
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _getCDS_AD
  2955  0708                     _getCDS_AD:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2959                           ;getCDS_AD@channel1 stored from wreg
  2960  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2962  070A  00D9               	movwf	getCDS_AD@channel1
  2963                           
  2964                           ;CDS_B1.c: 46: char i = 0, j = 0;
  2965  070B  01D7               	clrf	getCDS_AD@i
  2966  070C  01D8               	clrf	getCDS_AD@j
  2967                           
  2968                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  2969  070D  1DA7               	btfss	__CDS,3
  2970  070E  0008               	return
  2971                           
  2972                           ;CDS_B1.c: 48: _CDS.GO = 1;
  2973  070F  14A7               	bsf	__CDS,1
  2974                           
  2975                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  2976  0710  3070               	movlw	112
  2977  0711  00D5               	movwf	??_getCDS_AD
  2978  0712  0855               	movf	??_getCDS_AD,w
  2979  0713  00F4               	movwf	getAD@adcon1
  2980  0714  0859               	movf	getCDS_AD@channel1,w
  2981  0715  118A  27A1  118A   	fcall	_getAD
  2982  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2984  071A  00D6               	movwf	??_getCDS_AD+1
  2985  071B  0856               	movf	??_getCDS_AD+1,w
  2986  071C  00AB               	movwf	__CDS+4
  2987                           
  2988                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  2989  071D  082B               	movf	__CDS+4,w
  2990  071E  00D5               	movwf	??_getCDS_AD
  2991  071F  0855               	movf	??_getCDS_AD,w
  2992  0720  00A9               	movwf	__CDS+2
  2993                           
  2994                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  2995  0721  3070               	movlw	112
  2996  0722  00D5               	movwf	??_getCDS_AD
  2997  0723  0855               	movf	??_getCDS_AD,w
  2998  0724  00F4               	movwf	getAD@adcon1
  2999  0725  0876               	movf	getCDS_AD@channel2,w
  3000  0726  118A  27A1         	fcall	_getAD
  3001  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0729  1303               	bcf	3,6	;RP1=0, select bank0
  3003  072A  00D6               	movwf	??_getCDS_AD+1
  3004  072B  0856               	movf	??_getCDS_AD+1,w
  3005  072C  00AB               	movwf	__CDS+4
  3006                           
  3007                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3008  072D  082B               	movf	__CDS+4,w
  3009  072E  00D5               	movwf	??_getCDS_AD
  3010  072F  0855               	movf	??_getCDS_AD,w
  3011  0730  00AA               	movwf	__CDS+3
  3012  0731  0008               	return
  3013  0732                     __end_of_getCDS_AD:	
  3014                           
  3015                           	psect	text7
  3016  07A1                     __ptext7:	
  3017 ;; *************** function _getAD *****************
  3018 ;; Defined at:
  3019 ;;		line 427 in file "../src/MCU_B1.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  adcon0          1    wreg     unsigned char 
  3022 ;;  adcon1          1    4[COMMON] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  adcon0          1    5[COMMON] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      unsigned char 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3034 ;;      Params:         1       0       0       0
  3035 ;;      Locals:         1       0       0       0
  3036 ;;      Temps:          0       0       0       0
  3037 ;;      Totals:         2       0       0       0
  3038 ;;Total ram usage:        2 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    3
  3041 ;; This function calls:
  3042 ;;		_Timeout_Counter
  3043 ;;		_set_TimeoutCleared
  3044 ;; This function is called by:
  3045 ;;		_getCDS_AD
  3046 ;;		_getTemp_AD
  3047 ;;		_getPIR_AD
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _getAD
  3053  07A1                     _getAD:	
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3057                           ;getAD@adcon0 stored from wreg
  3058  07A1  00F5               	movwf	getAD@adcon0
  3059                           
  3060                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3061  07A2  0875               	movf	getAD@adcon0,w
  3062  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  3063  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  3064  07A5  009F               	movwf	31	;volatile
  3065                           
  3066                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3067  07A6  0874               	movf	getAD@adcon1,w
  3068  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3069  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3070  07A9  009F               	movwf	31	;volatile
  3071                           
  3072                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3073  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3074  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3075  07AC  149F               	bsf	31,1	;volatile
  3076                           
  3077                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3078  07AD  2FB1               	goto	l2628
  3079  07AE                     l2626:	
  3080                           
  3081                           ;MCU_B1.c: 432: Timeout_Counter();
  3082  07AE  158A  27A8  118A   	fcall	_Timeout_Counter
  3083  07B1                     l2628:	
  3084  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3085  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3086  07B3  1C9F               	btfss	31,1	;volatile
  3087  07B4  2FB7               	goto	l2632
  3088  07B5  1D24               	btfss	_myMain+4,2
  3089  07B6  2FAE               	goto	l2626
  3090  07B7                     l2632:	
  3091                           
  3092                           ;MCU_B1.c: 433: };
  3093                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3094  07B7  158A  26DC         	fcall	_set_TimeoutCleared
  3095                           
  3096                           ;MCU_B1.c: 435: return ADRES;
  3097  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3098  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3099  07BB  081E               	movf	30,w	;volatile
  3100  07BC  0008               	return
  3101  07BD                     __end_of_getAD:	
  3102                           
  3103                           	psect	text8
  3104  0EDC                     __ptext8:	
  3105 ;; *************** function _set_TimeoutCleared *****************
  3106 ;; Defined at:
  3107 ;;		line 280 in file "../src/Main_B1.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;		None               void
  3114 ;; Registers used:
  3115 ;;		status,2
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3121 ;;      Params:         0       0       0       0
  3122 ;;      Locals:         0       0       0       0
  3123 ;;      Temps:          0       0       0       0
  3124 ;;      Totals:         0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    2
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_getAD
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _set_TimeoutCleared
  3137  0EDC                     _set_TimeoutCleared:	
  3138                           
  3139                           ;Main_B1.c: 281: myMain.Timeout = 0;
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _set_TimeoutCleared: [status,2]
  3143  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0EDE  1124               	bcf	_myMain+4,2
  3146                           
  3147                           ;Main_B1.c: 282: myMain.Timeout_Counter = 0;
  3148  0EDF  01A5               	clrf	_myMain+5
  3149  0EE0  01A6               	clrf	_myMain+6
  3150  0EE1  0008               	return
  3151  0EE2                     __end_of_set_TimeoutCleared:	
  3152                           
  3153                           	psect	text9
  3154  0FA8                     __ptext9:	
  3155 ;; *************** function _Timeout_Counter *****************
  3156 ;; Defined at:
  3157 ;;		line 271 in file "../src/Main_B1.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;		None               void
  3164 ;; Registers used:
  3165 ;;		wreg, status,2
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3171 ;;      Params:         0       0       0       0
  3172 ;;      Locals:         0       0       0       0
  3173 ;;      Temps:          0       0       0       0
  3174 ;;      Totals:         0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_getAD
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _Timeout_Counter
  3187  0FA8                     _Timeout_Counter:	
  3188                           
  3189                           ;Main_B1.c: 272: myMain.Timeout_Counter++;
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3193  0FA8  3001               	movlw	1
  3194  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0FAB  07A5               	addwf	_myMain+5,f
  3197  0FAC  1803               	skipnc
  3198  0FAD  0AA6               	incf	_myMain+6,f
  3199  0FAE  3000               	movlw	0
  3200  0FAF  07A6               	addwf	_myMain+6,f
  3201                           
  3202                           ;Main_B1.c: 273: if (myMain.Timeout_Counter == 10000) {
  3203  0FB0  3027               	movlw	39
  3204  0FB1  0626               	xorwf	_myMain+6,w
  3205  0FB2  1D03               	skipz
  3206  0FB3  2FB6               	goto	u1875
  3207  0FB4  3010               	movlw	16
  3208  0FB5  0625               	xorwf	_myMain+5,w
  3209  0FB6                     u1875:	
  3210  0FB6  1D03               	skipz
  3211  0FB7  0008               	return
  3212                           
  3213                           ;Main_B1.c: 274: myMain.Timeout_Counter = 0;
  3214  0FB8  01A5               	clrf	_myMain+5
  3215  0FB9  01A6               	clrf	_myMain+6
  3216                           
  3217                           ;Main_B1.c: 275: myMain.Timeout = 1;
  3218  0FBA  1524               	bsf	_myMain+4,2
  3219  0FBB  0008               	return
  3220  0FBC                     __end_of_Timeout_Counter:	
  3221                           
  3222                           	psect	text10
  3223  0F73                     __ptext10:	
  3224 ;; *************** function _WDT_Main *****************
  3225 ;; Defined at:
  3226 ;;		line 1036 in file "../src/MCU_B1.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3240 ;;      Params:         0       0       0       0
  3241 ;;      Locals:         0       0       0       0
  3242 ;;      Temps:          1       0       0       0
  3243 ;;      Totals:         1       0       0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		_WDT_Clearing
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _WDT_Main
  3256  0F73                     _WDT_Main:	
  3257                           
  3258                           ;MCU_B1.c: 1037: if (WDT.Enable == 1) {
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3262  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0F75  1C33               	btfss	_WDT,0
  3265  0F76  0008               	return
  3266                           
  3267                           ;MCU_B1.c: 1038: if (WDT.Timer-- > 0) {
  3268  0F77  3001               	movlw	1
  3269  0F78  02B4               	subwf	_WDT+1,f
  3270  0F79  0834               	movf	_WDT+1,w
  3271  0F7A  3AFF               	xorlw	255
  3272  0F7B  1903               	skipnz
  3273  0F7C  0008               	return
  3274                           
  3275                           ;MCU_B1.c: 1039: WDT.Timer = 100;
  3276  0F7D  3064               	movlw	100
  3277  0F7E  00F4               	movwf	??_WDT_Main
  3278  0F7F  0874               	movf	??_WDT_Main,w
  3279  0F80  00B4               	movwf	_WDT+1
  3280                           
  3281                           ;MCU_B1.c: 1040: WDT_Clearing();
  3282  0F81  118A  2002         	fcall	_WDT_Clearing
  3283  0F83  0008               	return
  3284  0F84                     __end_of_WDT_Main:	
  3285                           
  3286                           	psect	text11
  3287  0002                     __ptext11:	
  3288 ;; *************** function _WDT_Clearing *****************
  3289 ;; Defined at:
  3290 ;;		line 1046 in file "../src/MCU_B1.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		None
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3304 ;;      Params:         0       0       0       0
  3305 ;;      Locals:         0       0       0       0
  3306 ;;      Temps:          0       0       0       0
  3307 ;;      Totals:         0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    2
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_WDT_Main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _WDT_Clearing
  3320  0002                     _WDT_Clearing:	
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _WDT_Clearing: []
  3324  0002  0064               	clrwdt	;# 
  3325  0003  0008               	return
  3326  0004                     __end_of_WDT_Clearing:	
  3327                           
  3328                           	psect	text12
  3329  0EC7                     __ptext12:	
  3330 ;; *************** function _Temp_Main *****************
  3331 ;; Defined at:
  3332 ;;		line 50 in file "../src/OverTemperature_B1.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3346 ;;      Params:         0       0       0       0
  3347 ;;      Locals:         0       0       0       0
  3348 ;;      Temps:          0       0       0       0
  3349 ;;      Totals:         0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    6
  3353 ;; This function calls:
  3354 ;;		_setTemp_Main
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _Temp_Main
  3362  0EC7                     _Temp_Main:	
  3363                           
  3364                           ;OverTemperature_B1.c: 52: setTemp_Main();
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3368  0EC7  118A  232E         	fcall	_setTemp_Main
  3369  0EC9  0008               	return
  3370  0ECA                     __end_of_Temp_Main:	
  3371                           
  3372                           	psect	text13
  3373  032E                     __ptext13:	
  3374 ;; *************** function _setTemp_Main *****************
  3375 ;; Defined at:
  3376 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3390 ;;      Params:         0       0       0       0
  3391 ;;      Locals:         0       0       0       0
  3392 ;;      Temps:          0       1       0       0
  3393 ;;      Totals:         0       1       0       0
  3394 ;;Total ram usage:        1 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    5
  3397 ;; This function calls:
  3398 ;;		___awdiv
  3399 ;;		_getMain_All_Error_Status
  3400 ;;		_getMain_LightsStatus
  3401 ;; This function is called by:
  3402 ;;		_Temp_Main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _setTemp_Main
  3408  032E                     _setTemp_Main:	
  3409                           
  3410                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3414  032E  1283               	bcf	3,5	;RP0=0, select bank0
  3415  032F  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0330  1C36               	btfss	_Temp,0
  3417  0331  2BAE               	goto	l655
  3418                           
  3419                           ;OverTemperature_B1.c: 59: if (Temp.ADtoGO == 0) {
  3420  0332  1936               	btfsc	_Temp,2
  3421  0333  2B45               	goto	l3574
  3422                           
  3423                           ;OverTemperature_B1.c: 60: Temp.Time++;
  3424  0334  3001               	movlw	1
  3425  0335  07B7               	addwf	_Temp+1,f
  3426  0336  1803               	skipnc
  3427  0337  0AB8               	incf	_Temp+2,f
  3428  0338  3000               	movlw	0
  3429  0339  07B8               	addwf	_Temp+2,f
  3430                           
  3431                           ;OverTemperature_B1.c: 61: if (Temp.Time >= 500) {
  3432  033A  3001               	movlw	1
  3433  033B  0238               	subwf	_Temp+2,w
  3434  033C  30F4               	movlw	244
  3435  033D  1903               	skipnz
  3436  033E  0237               	subwf	_Temp+1,w
  3437  033F  1C03               	skipc
  3438  0340  0008               	return
  3439                           
  3440                           ;OverTemperature_B1.c: 62: Temp.Time = 0;
  3441  0341  01B7               	clrf	_Temp+1
  3442  0342  01B8               	clrf	_Temp+2
  3443                           
  3444                           ;OverTemperature_B1.c: 63: Temp.ADtoGO = 1;
  3445  0343  1536               	bsf	_Temp,2
  3446                           
  3447                           ;OverTemperature_B1.c: 64: }
  3448                           ;OverTemperature_B1.c: 65: } else {
  3449  0344  0008               	return
  3450  0345                     l3574:	
  3451                           
  3452                           ;OverTemperature_B1.c: 66: if (getMain_All_Error_Status(2) == 0) {
  3453  0345  3002               	movlw	2
  3454  0346  118A  266D  118A   	fcall	_getMain_All_Error_Status
  3455  0349  3800               	iorlw	0
  3456  034A  1D03               	skipz
  3457  034B  0008               	return
  3458                           
  3459                           ;OverTemperature_B1.c: 67: Temp.Time++;
  3460  034C  3001               	movlw	1
  3461  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3462  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3463  034F  07B7               	addwf	_Temp+1,f
  3464  0350  1803               	skipnc
  3465  0351  0AB8               	incf	_Temp+2,f
  3466  0352  3000               	movlw	0
  3467  0353  07B8               	addwf	_Temp+2,f
  3468                           
  3469                           ;OverTemperature_B1.c: 68: if (Temp.Time >= 5) {
  3470  0354  3000               	movlw	0
  3471  0355  0238               	subwf	_Temp+2,w
  3472  0356  3005               	movlw	5
  3473  0357  1903               	skipnz
  3474  0358  0237               	subwf	_Temp+1,w
  3475  0359  1C03               	skipc
  3476  035A  0008               	return
  3477                           
  3478                           ;OverTemperature_B1.c: 69: Temp.Time = 0;
  3479  035B  01B7               	clrf	_Temp+1
  3480  035C  01B8               	clrf	_Temp+2
  3481                           
  3482                           ;OverTemperature_B1.c: 70: if (Temp.GO == 1) {
  3483  035D  1E36               	btfss	_Temp,4
  3484  035E  0008               	return
  3485                           
  3486                           ;OverTemperature_B1.c: 71: Temp.ADtoGO = 0;
  3487  035F  1136               	bcf	_Temp,2
  3488                           
  3489                           ;OverTemperature_B1.c: 72: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3490  0360  3002               	movlw	2
  3491  0361  00D5               	movwf	___awdiv@divisor
  3492  0362  3000               	movlw	0
  3493  0363  00D6               	movwf	___awdiv@divisor+1
  3494  0364  083D               	movf	_Temp+7,w
  3495  0365  073E               	addwf	_Temp+8,w
  3496  0366  00D7               	movwf	___awdiv@dividend
  3497  0367  01D8               	clrf	___awdiv@dividend+1
  3498  0368  0DD8               	rlf	___awdiv@dividend+1,f
  3499  0369  118A  2498  118A   	fcall	___awdiv
  3500  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3501  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3502  036E  0855               	movf	?___awdiv,w
  3503  036F  00DD               	movwf	??_setTemp_Main
  3504  0370  085D               	movf	??_setTemp_Main,w
  3505  0371  00BC               	movwf	_Temp+6
  3506                           
  3507                           ;OverTemperature_B1.c: 74: if (getMain_LightsStatus() == 1) {
  3508  0372  118A  26D7  118A   	fcall	_getMain_LightsStatus
  3509  0375  3A01               	xorlw	1
  3510  0376  1D03               	skipz
  3511  0377  2B80               	goto	l3590
  3512                           
  3513                           ;OverTemperature_B1.c: 75: Temp.SafeValue = 140;
  3514  0378  308C               	movlw	140
  3515  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3516  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3517  037B  00DD               	movwf	??_setTemp_Main
  3518  037C  085D               	movf	??_setTemp_Main,w
  3519  037D  00C0               	movwf	_Temp+10
  3520                           
  3521                           ;OverTemperature_B1.c: 76: Temp.DangerValue = 100;
  3522  037E  3064               	movlw	100
  3523  037F  2B87               	goto	L6
  3524  0380                     l3590:	
  3525                           ;OverTemperature_B1.c: 77: } else {
  3526                           
  3527                           
  3528                           ;OverTemperature_B1.c: 78: Temp.SafeValue = 100;
  3529  0380  3064               	movlw	100
  3530  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0383  00DD               	movwf	??_setTemp_Main
  3533  0384  085D               	movf	??_setTemp_Main,w
  3534  0385  00C0               	movwf	_Temp+10
  3535                           
  3536                           ;OverTemperature_B1.c: 79: Temp.DangerValue = 70;
  3537  0386  3046               	movlw	70
  3538  0387                     L6:	
  3539  0387  00DD               	movwf	??_setTemp_Main
  3540  0388  085D               	movf	??_setTemp_Main,w
  3541  0389  00C1               	movwf	_Temp+11
  3542                           
  3543                           ;OverTemperature_B1.c: 80: }
  3544                           ;OverTemperature_B1.c: 89: if (Temp.ERROR == 1) {
  3545  038A  1CB6               	btfss	_Temp,1
  3546  038B  2B9B               	goto	l3606
  3547                           
  3548                           ;OverTemperature_B1.c: 90: if (Temp.AD >= Temp.SafeValue) {
  3549  038C  0840               	movf	_Temp+10,w
  3550  038D  023C               	subwf	_Temp+6,w
  3551  038E  1C03               	skipc
  3552  038F  2BAA               	goto	l3616
  3553                           
  3554                           ;OverTemperature_B1.c: 91: Temp.Count++;
  3555  0390  3001               	movlw	1
  3556  0391  00DD               	movwf	??_setTemp_Main
  3557  0392  085D               	movf	??_setTemp_Main,w
  3558  0393  07B9               	addwf	_Temp+3,f
  3559                           
  3560                           ;OverTemperature_B1.c: 92: if (Temp.Count >= 3) {
  3561  0394  3003               	movlw	3
  3562  0395  0239               	subwf	_Temp+3,w
  3563  0396  1C03               	skipc
  3564  0397  2BAB               	goto	l668
  3565                           
  3566                           ;OverTemperature_B1.c: 93: Temp.Count = 0;
  3567  0398  01B9               	clrf	_Temp+3
  3568                           
  3569                           ;OverTemperature_B1.c: 94: Temp.ERROR = 0;
  3570  0399  10B6               	bcf	_Temp,1
  3571                           
  3572                           ;OverTemperature_B1.c: 96: }
  3573                           ;OverTemperature_B1.c: 97: } else {
  3574                           
  3575                           ;OverTemperature_B1.c: 95: ;;
  3576  039A  2BAB               	goto	l668
  3577  039B                     l3606:	
  3578                           ;OverTemperature_B1.c: 99: }
  3579                           ;OverTemperature_B1.c: 100: } else {
  3580                           
  3581                           ;OverTemperature_B1.c: 98: Temp.Count = 0;
  3582                           
  3583                           
  3584                           ;OverTemperature_B1.c: 101: if (Temp.AD <= Temp.DangerValue) {
  3585  039B  083C               	movf	_Temp+6,w
  3586  039C  0241               	subwf	_Temp+11,w
  3587  039D  1C03               	skipc
  3588  039E  2BAA               	goto	l3616
  3589                           
  3590                           ;OverTemperature_B1.c: 102: Temp.Count++;
  3591  039F  3001               	movlw	1
  3592  03A0  00DD               	movwf	??_setTemp_Main
  3593  03A1  085D               	movf	??_setTemp_Main,w
  3594  03A2  07B9               	addwf	_Temp+3,f
  3595                           
  3596                           ;OverTemperature_B1.c: 103: if (Temp.Count >= 3) {
  3597  03A3  3003               	movlw	3
  3598  03A4  0239               	subwf	_Temp+3,w
  3599  03A5  1C03               	skipc
  3600  03A6  2BAB               	goto	l668
  3601                           
  3602                           ;OverTemperature_B1.c: 104: Temp.Count = 0;
  3603  03A7  01B9               	clrf	_Temp+3
  3604                           
  3605                           ;OverTemperature_B1.c: 105: Temp.ERROR = 1;
  3606  03A8  14B6               	bsf	_Temp,1
  3607                           
  3608                           ;OverTemperature_B1.c: 106: }
  3609                           ;OverTemperature_B1.c: 107: } else {
  3610  03A9  2BAB               	goto	l668
  3611  03AA                     l3616:	
  3612                           
  3613                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  3614  03AA  01B9               	clrf	_Temp+3
  3615  03AB                     l668:	
  3616                           
  3617                           ;OverTemperature_B1.c: 109: }
  3618                           ;OverTemperature_B1.c: 110: }
  3619                           ;OverTemperature_B1.c: 111: ;;
  3620                           ;OverTemperature_B1.c: 112: ;;
  3621                           ;OverTemperature_B1.c: 118: Temp.ADH[0] = 0;
  3622  03AB  01BD               	clrf	_Temp+7
  3623                           
  3624                           ;OverTemperature_B1.c: 119: Temp.ADH[1] = 0;
  3625  03AC  01BE               	clrf	_Temp+8
  3626                           
  3627                           ;OverTemperature_B1.c: 120: }
  3628                           ;OverTemperature_B1.c: 121: }
  3629                           ;OverTemperature_B1.c: 122: }
  3630                           ;OverTemperature_B1.c: 123: }
  3631                           ;OverTemperature_B1.c: 124: } else {
  3632  03AD  0008               	return
  3633  03AE                     l655:	
  3634                           
  3635                           ;OverTemperature_B1.c: 125: if (myMain.PowerON == 1) {
  3636  03AE  1C20               	btfss	_myMain,0
  3637  03AF  0008               	return
  3638                           
  3639                           ;OverTemperature_B1.c: 126: Temp.Enable = 1;
  3640  03B0  1436               	bsf	_Temp,0
  3641  03B1  0008               	return
  3642  03B2                     __end_of_setTemp_Main:	
  3643                           
  3644                           	psect	text14
  3645  0498                     __ptext14:	
  3646 ;; *************** function ___awdiv *****************
  3647 ;; Defined at:
  3648 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  divisor         2    0[BANK0 ] int 
  3651 ;;  dividend        2    2[BANK0 ] int 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  quotient        2    6[BANK0 ] int 
  3654 ;;  sign            1    5[BANK0 ] unsigned char 
  3655 ;;  counter         1    4[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    0[BANK0 ] int 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3665 ;;      Params:         0       4       0       0
  3666 ;;      Locals:         0       4       0       0
  3667 ;;      Temps:          1       0       0       0
  3668 ;;      Totals:         1       8       0       0
  3669 ;;Total ram usage:        9 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    2
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_setTemp_Main
  3676 ;;		_getPIR_AD
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function ___awdiv
  3682  0498                     ___awdiv:	
  3683                           
  3684                           ;incstack = 0
  3685                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3686  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3688  049A  01DA               	clrf	___awdiv@sign
  3689  049B  1FD6               	btfss	___awdiv@divisor+1,7
  3690  049C  2CA4               	goto	l3458
  3691  049D  09D5               	comf	___awdiv@divisor,f
  3692  049E  09D6               	comf	___awdiv@divisor+1,f
  3693  049F  0AD5               	incf	___awdiv@divisor,f
  3694  04A0  1903               	skipnz
  3695  04A1  0AD6               	incf	___awdiv@divisor+1,f
  3696  04A2  01DA               	clrf	___awdiv@sign
  3697  04A3  0ADA               	incf	___awdiv@sign,f
  3698  04A4                     l3458:	
  3699  04A4  1FD8               	btfss	___awdiv@dividend+1,7
  3700  04A5  2CAF               	goto	l3464
  3701  04A6  09D7               	comf	___awdiv@dividend,f
  3702  04A7  09D8               	comf	___awdiv@dividend+1,f
  3703  04A8  0AD7               	incf	___awdiv@dividend,f
  3704  04A9  1903               	skipnz
  3705  04AA  0AD8               	incf	___awdiv@dividend+1,f
  3706  04AB  3001               	movlw	1
  3707  04AC  00F4               	movwf	??___awdiv
  3708  04AD  0874               	movf	??___awdiv,w
  3709  04AE  06DA               	xorwf	___awdiv@sign,f
  3710  04AF                     l3464:	
  3711  04AF  01DB               	clrf	___awdiv@quotient
  3712  04B0  01DC               	clrf	___awdiv@quotient+1
  3713  04B1  0856               	movf	___awdiv@divisor+1,w
  3714  04B2  0455               	iorwf	___awdiv@divisor,w
  3715  04B3  1903               	skipnz
  3716  04B4  2CE6               	goto	l3486
  3717  04B5  01D9               	clrf	___awdiv@counter
  3718  04B6  0AD9               	incf	___awdiv@counter,f
  3719  04B7                     l3474:	
  3720  04B7  1BD6               	btfsc	___awdiv@divisor+1,7
  3721  04B8  2CC5               	goto	l3476
  3722  04B9  3001               	movlw	1
  3723  04BA                     u3605:	
  3724  04BA  1003               	clrc
  3725  04BB  0DD5               	rlf	___awdiv@divisor,f
  3726  04BC  0DD6               	rlf	___awdiv@divisor+1,f
  3727  04BD  3EFF               	addlw	-1
  3728  04BE  1D03               	skipz
  3729  04BF  2CBA               	goto	u3605
  3730  04C0  3001               	movlw	1
  3731  04C1  00F4               	movwf	??___awdiv
  3732  04C2  0874               	movf	??___awdiv,w
  3733  04C3  07D9               	addwf	___awdiv@counter,f
  3734  04C4  2CB7               	goto	l3474
  3735  04C5                     l3476:	
  3736  04C5  3001               	movlw	1
  3737  04C6                     u3625:	
  3738  04C6  1003               	clrc
  3739  04C7  0DDB               	rlf	___awdiv@quotient,f
  3740  04C8  0DDC               	rlf	___awdiv@quotient+1,f
  3741  04C9  3EFF               	addlw	-1
  3742  04CA  1D03               	skipz
  3743  04CB  2CC6               	goto	u3625
  3744  04CC  0856               	movf	___awdiv@divisor+1,w
  3745  04CD  0258               	subwf	___awdiv@dividend+1,w
  3746  04CE  1D03               	skipz
  3747  04CF  2CD2               	goto	u3635
  3748  04D0  0855               	movf	___awdiv@divisor,w
  3749  04D1  0257               	subwf	___awdiv@dividend,w
  3750  04D2                     u3635:	
  3751  04D2  1C03               	skipc
  3752  04D3  2CDB               	goto	l3482
  3753  04D4  0855               	movf	___awdiv@divisor,w
  3754  04D5  02D7               	subwf	___awdiv@dividend,f
  3755  04D6  0856               	movf	___awdiv@divisor+1,w
  3756  04D7  1C03               	skipc
  3757  04D8  03D8               	decf	___awdiv@dividend+1,f
  3758  04D9  02D8               	subwf	___awdiv@dividend+1,f
  3759  04DA  145B               	bsf	___awdiv@quotient,0
  3760  04DB                     l3482:	
  3761  04DB  3001               	movlw	1
  3762  04DC                     u3645:	
  3763  04DC  1003               	clrc
  3764  04DD  0CD6               	rrf	___awdiv@divisor+1,f
  3765  04DE  0CD5               	rrf	___awdiv@divisor,f
  3766  04DF  3EFF               	addlw	-1
  3767  04E0  1D03               	skipz
  3768  04E1  2CDC               	goto	u3645
  3769  04E2  3001               	movlw	1
  3770  04E3  02D9               	subwf	___awdiv@counter,f
  3771  04E4  1D03               	btfss	3,2
  3772  04E5  2CC5               	goto	l3476
  3773  04E6                     l3486:	
  3774  04E6  085A               	movf	___awdiv@sign,w
  3775  04E7  1903               	btfsc	3,2
  3776  04E8  2CEE               	goto	l3490
  3777  04E9  09DB               	comf	___awdiv@quotient,f
  3778  04EA  09DC               	comf	___awdiv@quotient+1,f
  3779  04EB  0ADB               	incf	___awdiv@quotient,f
  3780  04EC  1903               	skipnz
  3781  04ED  0ADC               	incf	___awdiv@quotient+1,f
  3782  04EE                     l3490:	
  3783  04EE  085C               	movf	___awdiv@quotient+1,w
  3784  04EF  01D6               	clrf	?___awdiv+1
  3785  04F0  07D6               	addwf	?___awdiv+1,f
  3786  04F1  085B               	movf	___awdiv@quotient,w
  3787  04F2  01D5               	clrf	?___awdiv
  3788  04F3  07D5               	addwf	?___awdiv,f
  3789  04F4  0008               	return
  3790  04F5                     __end_of___awdiv:	
  3791                           
  3792                           	psect	text15
  3793  0EC4                     __ptext15:	
  3794 ;; *************** function _Temp_Initialization *****************
  3795 ;; Defined at:
  3796 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3810 ;;      Params:         0       0       0       0
  3811 ;;      Locals:         0       0       0       0
  3812 ;;      Temps:          0       0       0       0
  3813 ;;      Totals:         0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    3
  3817 ;; This function calls:
  3818 ;;		_setTemp_Initialization
  3819 ;; This function is called by:
  3820 ;;		_main
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _Temp_Initialization
  3826  0EC4                     _Temp_Initialization:	
  3827                           
  3828                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3832  0EC4  158A  26BF         	fcall	_setTemp_Initialization
  3833  0EC6  0008               	return
  3834  0EC7                     __end_of_Temp_Initialization:	
  3835                           
  3836                           	psect	text16
  3837  0EBF                     __ptext16:	
  3838 ;; *************** function _setTemp_Initialization *****************
  3839 ;; Defined at:
  3840 ;;		line 45 in file "../src/OverTemperature_B1.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;		None               void
  3847 ;; Registers used:
  3848 ;;		None
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3854 ;;      Params:         0       0       0       0
  3855 ;;      Locals:         0       0       0       0
  3856 ;;      Temps:          0       0       0       0
  3857 ;;      Totals:         0       0       0       0
  3858 ;;Total ram usage:        0 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    2
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_Temp_Initialization
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _setTemp_Initialization
  3870  0EBF                     _setTemp_Initialization:	
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _setTemp_Initialization: []
  3874  0EBF  0008               	return
  3875  0EC0                     __end_of_setTemp_Initialization:	
  3876                           
  3877                           	psect	text17
  3878  0025                     __ptext17:	
  3879 ;; *************** function _PIR_Main *****************
  3880 ;; Defined at:
  3881 ;;		line 14 in file "../src/PIR_B1.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  error           1   16[BANK0 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;		None               void
  3888 ;; Registers used:
  3889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3895 ;;      Params:         0       0       0       0
  3896 ;;      Locals:         0       3       0       0
  3897 ;;      Temps:          0       5       0       0
  3898 ;;      Totals:         0       8       0       0
  3899 ;;Total ram usage:        8 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    5
  3902 ;; This function calls:
  3903 ;;		_getLights_Status
  3904 ;;		_getMain_All_Error_Status
  3905 ;;		_setLED
  3906 ;;		_setLights_Trigger
  3907 ;;		_setMain_Exception
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function _PIR_Main
  3915  0025                     _PIR_Main:	
  3916                           
  3917                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3921  0025  3000               	movlw	0
  3922  0026  118A  266D  118A   	fcall	_getMain_All_Error_Status
  3923  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3924  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3925  002B  00DE               	movwf	??_PIR_Main
  3926  002C  085E               	movf	??_PIR_Main,w
  3927  002D  00E5               	movwf	PIR_Main@error
  3928                           
  3929                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3930  002E  1683               	bsf	3,5	;RP0=1, select bank1
  3931  002F  1303               	bcf	3,6	;RP1=0, select bank1
  3932  0030  1C20               	btfss	__PIR^(0+128),0
  3933  0031  29EC               	goto	l722
  3934                           
  3935                           ;PIR_B1.c: 17: if (error == 0) {
  3936  0032  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0033  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0034  08E5               	movf	PIR_Main@error,f
  3939  0035  1D03               	skipz
  3940  0036  284D               	goto	l723
  3941                           
  3942                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  3943  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3945  0039  1A20               	btfsc	__PIR^(0+128),4
  3946  003A  287B               	goto	l3854
  3947                           
  3948                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  3949  003B  1620               	bsf	__PIR^(0+128),4
  3950                           
  3951                           ;PIR_B1.c: 20: _PIR.Available = 1;
  3952  003C  17A0               	bsf	__PIR^(0+128),7
  3953                           
  3954                           ;PIR_B1.c: 21: setLED(1, 0);
  3955  003D  01F6               	clrf	setLED@command
  3956  003E  3001               	movlw	1
  3957  003F  118A  23B2  118A   	fcall	_setLED
  3958                           
  3959                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  3960  0042  1683               	bsf	3,5	;RP0=1, select bank1
  3961  0043  1303               	bcf	3,6	;RP1=0, select bank1
  3962  0044  19A0               	btfsc	__PIR^(0+128),3
  3963  0045  287B               	goto	l3854
  3964                           
  3965                           ;PIR_B1.c: 23: setLED(2, 1);
  3966  0046  01F6               	clrf	setLED@command
  3967  0047  0AF6               	incf	setLED@command,f
  3968  0048  3002               	movlw	2
  3969  0049  118A  23B2  118A   	fcall	_setLED
  3970                           
  3971                           ;PIR_B1.c: 31: }
  3972                           ;PIR_B1.c: 32: }
  3973                           ;PIR_B1.c: 33: } else {
  3974  004C  287B               	goto	l3854
  3975  004D                     l723:	
  3976                           
  3977                           ;PIR_B1.c: 34: if (_PIR.Detect == 1) {
  3978  004D  1683               	bsf	3,5	;RP0=1, select bank1
  3979  004E  1303               	bcf	3,6	;RP1=0, select bank1
  3980  004F  1E20               	btfss	__PIR^(0+128),4
  3981  0050  287B               	goto	l3854
  3982                           
  3983                           ;PIR_B1.c: 35: setMain_Exception(error);
  3984  0051  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0052  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0053  0865               	movf	PIR_Main@error,w
  3987  0054  118A  262E  118A   	fcall	_setMain_Exception
  3988                           
  3989                           ;PIR_B1.c: 37: _PIR.Detect = 0;
  3990  0057  1683               	bsf	3,5	;RP0=1, select bank1
  3991  0058  1303               	bcf	3,6	;RP1=0, select bank1
  3992  0059  1220               	bcf	__PIR^(0+128),4
  3993                           
  3994                           ;PIR_B1.c: 38: _PIR.Available = 0;
  3995  005A  13A0               	bcf	__PIR^(0+128),7
  3996                           
  3997                           ;PIR_B1.c: 39: _PIR.Status = 0;
  3998  005B  1320               	bcf	__PIR^(0+128),6
  3999                           
  4000                           ;PIR_B1.c: 42: _PIR.Time = 0;
  4001  005C  01A5               	clrf	(__PIR^(0+128)+5)
  4002                           
  4003                           ;PIR_B1.c: 43: _PIR.RangeTime1 = 0;
  4004  005D  01CA               	clrf	(__PIR^(0+128)+42)
  4005                           
  4006                           ;PIR_B1.c: 44: _PIR.RangeValue = 15;
  4007  005E  300F               	movlw	15
  4008  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0061  00DE               	movwf	??_PIR_Main
  4011  0062  085E               	movf	??_PIR_Main,w
  4012  0063  1683               	bsf	3,5	;RP0=1, select bank1
  4013  0064  1303               	bcf	3,6	;RP1=0, select bank1
  4014  0065  00CC               	movwf	(__PIR^(0+128)+44)
  4015                           
  4016                           ;PIR_B1.c: 45: _PIR.RangeCount = 0;
  4017  0066  01CB               	clrf	(__PIR^(0+128)+43)
  4018                           
  4019                           ;PIR_B1.c: 47: setLED(1, 1);
  4020  0067  01F6               	clrf	setLED@command
  4021  0068  0AF6               	incf	setLED@command,f
  4022  0069  3001               	movlw	1
  4023  006A  118A  23B2  118A   	fcall	_setLED
  4024                           
  4025                           ;PIR_B1.c: 48: setLED(2, 0);
  4026  006D  01F6               	clrf	setLED@command
  4027  006E  3002               	movlw	2
  4028  006F  118A  23B2  118A   	fcall	_setLED
  4029                           
  4030                           ;PIR_B1.c: 50: if (_PIR.OK == 1) {
  4031  0072  1683               	bsf	3,5	;RP0=1, select bank1
  4032  0073  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0074  1DA0               	btfss	__PIR^(0+128),3
  4034  0075  2878               	goto	l728
  4035                           
  4036                           ;PIR_B1.c: 51: _PIR.Count = 0;
  4037  0076  01C1               	clrf	(__PIR^(0+128)+33)
  4038  0077  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4039  0078                     l728:	
  4040                           
  4041                           ;PIR_B1.c: 52: }
  4042                           ;PIR_B1.c: 53: _PIR.CloseTimeSeconds = 0;
  4043  0078  01C6               	clrf	(__PIR^(0+128)+38)
  4044                           
  4045                           ;PIR_B1.c: 54: _PIR.CloseTimeMinutes = 0;
  4046  0079  01C4               	clrf	(__PIR^(0+128)+36)
  4047  007A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4048  007B                     l3854:	
  4049                           
  4050                           ;PIR_B1.c: 55: }
  4051                           ;PIR_B1.c: 56: }
  4052                           ;PIR_B1.c: 58: if (_PIR.ADtoGO == 0) {
  4053  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4054  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4055  007D  18A0               	btfsc	__PIR^(0+128),1
  4056  007E  288E               	goto	l729
  4057                           
  4058                           ;PIR_B1.c: 59: _PIR.Time++;
  4059  007F  3001               	movlw	1
  4060  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0082  00DE               	movwf	??_PIR_Main
  4063  0083  085E               	movf	??_PIR_Main,w
  4064  0084  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0085  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0086  07A5               	addwf	(__PIR^(0+128)+5),f
  4067                           
  4068                           ;PIR_B1.c: 60: if (_PIR.Time == 10) {
  4069  0087  0825               	movf	(__PIR^(0+128)+5),w
  4070  0088  3A0A               	xorlw	10
  4071  0089  1D03               	skipz
  4072  008A  29A4               	goto	l3938
  4073                           
  4074                           ;PIR_B1.c: 61: _PIR.Time = 0;
  4075  008B  01A5               	clrf	(__PIR^(0+128)+5)
  4076                           
  4077                           ;PIR_B1.c: 62: _PIR.ADtoGO = 1;
  4078  008C  14A0               	bsf	__PIR^(0+128),1
  4079                           
  4080                           ;PIR_B1.c: 63: }
  4081                           ;PIR_B1.c: 64: } else {
  4082  008D  29A4               	goto	l3938
  4083  008E                     l729:	
  4084                           
  4085                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  4086  008E  1D20               	btfss	__PIR^(0+128),2
  4087  008F  29A4               	goto	l3938
  4088                           
  4089                           ;PIR_B1.c: 66: _PIR.GO = 0;
  4090  0090  1120               	bcf	__PIR^(0+128),2
  4091                           
  4092                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  4093  0091  1BA0               	btfsc	__PIR^(0+128),7
  4094                           
  4095                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  4096  0092  1DA0               	btfss	__PIR^(0+128),3
  4097  0093  29A4               	goto	l3938
  4098                           
  4099                           ;PIR_B1.c: 70: _PIR.Time++;
  4100  0094  3001               	movlw	1
  4101  0095  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0096  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0097  00DE               	movwf	??_PIR_Main
  4104  0098  085E               	movf	??_PIR_Main,w
  4105  0099  1683               	bsf	3,5	;RP0=1, select bank1
  4106  009A  1303               	bcf	3,6	;RP1=0, select bank1
  4107  009B  07A5               	addwf	(__PIR^(0+128)+5),f
  4108                           
  4109                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  4110  009C  0825               	movf	(__PIR^(0+128)+5),w
  4111  009D  3A3C               	xorlw	60
  4112  009E  1D03               	skipz
  4113  009F  28D4               	goto	l3904
  4114                           
  4115                           ;PIR_B1.c: 72: _PIR.Time = 0;
  4116  00A0  01A5               	clrf	(__PIR^(0+128)+5)
  4117                           
  4118                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  4119  00A1  305A               	movlw	90
  4120  00A2  024B               	subwf	(__PIR^(0+128)+43),w
  4121  00A3  1C03               	skipc
  4122  00A4  28B0               	goto	l3886
  4123                           
  4124                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  4125  00A5  01CA               	clrf	(__PIR^(0+128)+42)
  4126                           
  4127                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 15) {
  4128  00A6  084C               	movf	(__PIR^(0+128)+44),w
  4129  00A7  3A0F               	xorlw	15
  4130  00A8  1903               	btfsc	3,2
  4131  00A9  28C5               	goto	L13
  4132                           
  4133                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  4134                           
  4135                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  4136  00AA  084C               	movf	(__PIR^(0+128)+44),w
  4137  00AB  3A19               	xorlw	25
  4138  00AC  1D03               	skipz
  4139  00AD  28D3               	goto	l3902
  4140                           
  4141                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  4142  00AE  3023               	movlw	35
  4143  00AF  28CC               	goto	L9
  4144  00B0                     l3886:	
  4145                           ;PIR_B1.c: 80: }
  4146                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  4147                           
  4148  00B0  300B               	movlw	11
  4149  00B1  024B               	subwf	(__PIR^(0+128)+43),w
  4150  00B2  1803               	skipnc
  4151  00B3  28D3               	goto	l3902
  4152                           
  4153                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  4154  00B4  3001               	movlw	1
  4155  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  4156  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  4157  00B7  00DE               	movwf	??_PIR_Main
  4158  00B8  085E               	movf	??_PIR_Main,w
  4159  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  4160  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  4161  00BB  07CA               	addwf	(__PIR^(0+128)+42),f
  4162                           
  4163                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  4164  00BC  084A               	movf	(__PIR^(0+128)+42),w
  4165  00BD  3A02               	xorlw	2
  4166  00BE  1D03               	skipz
  4167  00BF  28D3               	goto	l3902
  4168                           
  4169                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  4170  00C0  01CA               	clrf	(__PIR^(0+128)+42)
  4171                           
  4172                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  4173  00C1  084C               	movf	(__PIR^(0+128)+44),w
  4174  00C2  3A23               	xorlw	35
  4175  00C3  1D03               	skipz
  4176  00C4  28C7               	goto	l3898
  4177  00C5                     L13:	
  4178                           
  4179                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  4180  00C5  3019               	movlw	25
  4181  00C6  28CC               	goto	L9
  4182  00C7                     l3898:	
  4183                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  4184                           
  4185  00C7  084C               	movf	(__PIR^(0+128)+44),w
  4186  00C8  3A19               	xorlw	25
  4187  00C9  1D03               	skipz
  4188  00CA  28D3               	goto	l3902
  4189                           
  4190                           ;PIR_B1.c: 89: _PIR.RangeValue = 15;
  4191  00CB  300F               	movlw	15
  4192  00CC                     L9:	
  4193  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4194  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4195  00CE  00DE               	movwf	??_PIR_Main
  4196  00CF  085E               	movf	??_PIR_Main,w
  4197  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  4198  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  4199  00D2  00CC               	movwf	(__PIR^(0+128)+44)
  4200  00D3                     l3902:	
  4201                           
  4202                           ;PIR_B1.c: 90: }
  4203                           ;PIR_B1.c: 91: }
  4204                           ;PIR_B1.c: 92: }
  4205                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  4206  00D3  01CB               	clrf	(__PIR^(0+128)+43)
  4207  00D4                     l3904:	
  4208                           
  4209                           ;PIR_B1.c: 94: }
  4210                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4211                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4212  00D4  084C               	movf	(__PIR^(0+128)+44),w
  4213  00D5  074E               	addwf	(__PIR^(0+128)+46),w
  4214  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4215  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4216  00D8  00DE               	movwf	??_PIR_Main
  4217  00D9  01DF               	clrf	??_PIR_Main+1
  4218  00DA  0DDF               	rlf	??_PIR_Main+1,f
  4219  00DB  09DE               	comf	??_PIR_Main,f
  4220  00DC  09DF               	comf	??_PIR_Main+1,f
  4221  00DD  0ADE               	incf	??_PIR_Main,f
  4222  00DE  1903               	skipnz
  4223  00DF  0ADF               	incf	??_PIR_Main+1,f
  4224  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  4225  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  4226  00E2  0826               	movf	(__PIR^(0+128)+6),w
  4227  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  4228  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  4229  00E5  075E               	addwf	??_PIR_Main,w
  4230  00E6  00E0               	movwf	??_PIR_Main+2
  4231  00E7  085F               	movf	??_PIR_Main+1,w
  4232  00E8  1803               	skipnc
  4233  00E9  0A5F               	incf	??_PIR_Main+1,w
  4234  00EA  00E1               	movwf	??_PIR_Main+3
  4235  00EB  0861               	movf	??_PIR_Main+3,w
  4236  00EC  3A80               	xorlw	128
  4237  00ED  3C80               	sublw	128
  4238  00EE  1D03               	skipz
  4239  00EF  28F4               	goto	u4475
  4240  00F0  0860               	movf	??_PIR_Main+2,w
  4241  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  4242  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  4243  00F3  0221               	subwf	(__PIR^(0+128)+1),w
  4244  00F4                     u4475:	
  4245  00F4  1C03               	skipc
  4246  00F5  2920               	goto	l3914
  4247  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  4248  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  4249  00F8  084C               	movf	(__PIR^(0+128)+44),w
  4250  00F9  074E               	addwf	(__PIR^(0+128)+46),w
  4251  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4252  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4253  00FC  00DE               	movwf	??_PIR_Main
  4254  00FD  01DF               	clrf	??_PIR_Main+1
  4255  00FE  0DDF               	rlf	??_PIR_Main+1,f
  4256  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  4257  0100  1303               	bcf	3,6	;RP1=0, select bank1
  4258  0101  0826               	movf	(__PIR^(0+128)+6),w
  4259  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0104  075E               	addwf	??_PIR_Main,w
  4262  0105  00E0               	movwf	??_PIR_Main+2
  4263  0106  3000               	movlw	0
  4264  0107  1803               	skipnc
  4265  0108  3001               	movlw	1
  4266  0109  075F               	addwf	??_PIR_Main+1,w
  4267  010A  00E1               	movwf	??_PIR_Main+3
  4268  010B  0861               	movf	??_PIR_Main+3,w
  4269  010C  3A80               	xorlw	128
  4270  010D  00E2               	movwf	??_PIR_Main+4
  4271  010E  3080               	movlw	128
  4272  010F  0262               	subwf	??_PIR_Main+4,w
  4273  0110  1D03               	skipz
  4274  0111  2918               	goto	u4485
  4275  0112  1683               	bsf	3,5	;RP0=1, select bank1
  4276  0113  1303               	bcf	3,6	;RP1=0, select bank1
  4277  0114  0821               	movf	(__PIR^(0+128)+1),w
  4278  0115  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0116  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0117  0260               	subwf	??_PIR_Main+2,w
  4281  0118                     u4485:	
  4282  0118  1C03               	skipc
  4283  0119  2920               	goto	l3914
  4284                           
  4285                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4286  011A  1683               	bsf	3,5	;RP0=1, select bank1
  4287  011B  1303               	bcf	3,6	;RP1=0, select bank1
  4288  011C  01C1               	clrf	(__PIR^(0+128)+33)
  4289  011D  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4290                           
  4291                           ;PIR_B1.c: 100: setLED(1, 0);
  4292  011E  01F6               	clrf	setLED@command
  4293  011F  2993               	goto	L14
  4294  0120                     l3914:	
  4295                           ;PIR_B1.c: 102: } else {
  4296                           
  4297                           ;PIR_B1.c: 101: setLED(2, 0);
  4298                           
  4299                           
  4300                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  4301  0120  3001               	movlw	1
  4302  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0122  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0123  00DE               	movwf	??_PIR_Main
  4305  0124  085E               	movf	??_PIR_Main,w
  4306  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4307  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4308  0127  07CB               	addwf	(__PIR^(0+128)+43),f
  4309                           
  4310                           ;PIR_B1.c: 104: _PIR.Count++;
  4311  0128  3001               	movlw	1
  4312  0129  07C1               	addwf	(__PIR^(0+128)+33),f
  4313  012A  1803               	skipnc
  4314  012B  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4315  012C  3000               	movlw	0
  4316  012D  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4317                           
  4318                           ;PIR_B1.c: 106: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4319  012E  1B20               	btfsc	__PIR^(0+128),6
  4320  012F  2934               	goto	l3922
  4321  0130  3002               	movlw	2
  4322  0131  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0132  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0133  2936               	goto	L10
  4325  0134                     l3922:	
  4326  0134  3003               	movlw	3
  4327  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0136                     L10:	
  4329  0136  00E3               	movwf	_PIR_Main$2728
  4330  0137  3000               	movlw	0
  4331  0138  00E4               	movwf	_PIR_Main$2728+1
  4332  0139  0863               	movf	_PIR_Main$2728,w
  4333  013A  00DE               	movwf	??_PIR_Main
  4334  013B  085E               	movf	??_PIR_Main,w
  4335  013C  1683               	bsf	3,5	;RP0=1, select bank1
  4336  013D  1303               	bcf	3,6	;RP1=0, select bank1
  4337  013E  00C3               	movwf	(__PIR^(0+128)+35)
  4338                           
  4339                           ;PIR_B1.c: 108: if (_PIR.Count == _PIR.TriggerValue) {
  4340  013F  0843               	movf	(__PIR^(0+128)+35),w
  4341  0140  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0141  1303               	bcf	3,6	;RP1=0, select bank0
  4343  0142  00DE               	movwf	??_PIR_Main
  4344  0143  01DF               	clrf	??_PIR_Main+1
  4345  0144  1683               	bsf	3,5	;RP0=1, select bank1
  4346  0145  1303               	bcf	3,6	;RP1=0, select bank1
  4347  0146  0842               	movf	((__PIR+1)^(0+128)+33),w
  4348  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0149  065F               	xorwf	??_PIR_Main+1,w
  4351  014A  1D03               	skipz
  4352  014B  2952               	goto	u4505
  4353  014C  1683               	bsf	3,5	;RP0=1, select bank1
  4354  014D  1303               	bcf	3,6	;RP1=0, select bank1
  4355  014E  0841               	movf	(__PIR^(0+128)+33),w
  4356  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4358  0151  065E               	xorwf	??_PIR_Main,w
  4359  0152                     u4505:	
  4360  0152  1D03               	skipz
  4361  0153  29A4               	goto	l3938
  4362                           
  4363                           ;PIR_B1.c: 109: _PIR.Count = 0;
  4364  0154  1683               	bsf	3,5	;RP0=1, select bank1
  4365  0155  1303               	bcf	3,6	;RP1=0, select bank1
  4366  0156  01C1               	clrf	(__PIR^(0+128)+33)
  4367  0157  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4368                           
  4369                           ;PIR_B1.c: 110: _PIR.CloseTimeSeconds = 0;
  4370  0158  01C6               	clrf	(__PIR^(0+128)+38)
  4371                           
  4372                           ;PIR_B1.c: 111: _PIR.CloseTimeMinutes = 0;
  4373  0159  01C4               	clrf	(__PIR^(0+128)+36)
  4374  015A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4375                           
  4376                           ;PIR_B1.c: 112: _PIR.Status = 1;
  4377  015B  1720               	bsf	__PIR^(0+128),6
  4378                           
  4379                           ;PIR_B1.c: 115: if (getLights_Status(1) == 0) {
  4380  015C  3001               	movlw	1
  4381  015D  158A  2762  118A   	fcall	_getLights_Status
  4382  0160  3800               	iorlw	0
  4383  0161  1D03               	skipz
  4384  0162  2969               	goto	l3932
  4385                           
  4386                           ;PIR_B1.c: 116: setLights_Trigger(1, 1);
  4387  0163  01F6               	clrf	setLights_Trigger@command
  4388  0164  0AF6               	incf	setLights_Trigger@command,f
  4389  0165  3001               	movlw	1
  4390  0166  118A  27D9  118A   	fcall	_setLights_Trigger
  4391  0169                     l3932:	
  4392                           
  4393                           ;PIR_B1.c: 117: }
  4394                           ;PIR_B1.c: 120: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4395  0169  1683               	bsf	3,5	;RP0=1, select bank1
  4396  016A  1303               	bcf	3,6	;RP1=0, select bank1
  4397  016B  084C               	movf	(__PIR^(0+128)+44),w
  4398  016C  074E               	addwf	(__PIR^(0+128)+46),w
  4399  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4400  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4401  016F  00DE               	movwf	??_PIR_Main
  4402  0170  01DF               	clrf	??_PIR_Main+1
  4403  0171  0DDF               	rlf	??_PIR_Main+1,f
  4404  0172  09DE               	comf	??_PIR_Main,f
  4405  0173  09DF               	comf	??_PIR_Main+1,f
  4406  0174  0ADE               	incf	??_PIR_Main,f
  4407  0175  1903               	skipnz
  4408  0176  0ADF               	incf	??_PIR_Main+1,f
  4409  0177  1683               	bsf	3,5	;RP0=1, select bank1
  4410  0178  1303               	bcf	3,6	;RP1=0, select bank1
  4411  0179  0826               	movf	(__PIR^(0+128)+6),w
  4412  017A  1283               	bcf	3,5	;RP0=0, select bank0
  4413  017B  1303               	bcf	3,6	;RP1=0, select bank0
  4414  017C  075E               	addwf	??_PIR_Main,w
  4415  017D  00E0               	movwf	??_PIR_Main+2
  4416  017E  085F               	movf	??_PIR_Main+1,w
  4417  017F  1803               	skipnc
  4418  0180  0A5F               	incf	??_PIR_Main+1,w
  4419  0181  00E1               	movwf	??_PIR_Main+3
  4420  0182  0861               	movf	??_PIR_Main+3,w
  4421  0183  3A80               	xorlw	128
  4422  0184  00E2               	movwf	??_PIR_Main+4
  4423  0185  3080               	movlw	128
  4424  0186  0262               	subwf	??_PIR_Main+4,w
  4425  0187  1D03               	skipz
  4426  0188  298F               	goto	u4525
  4427  0189  1683               	bsf	3,5	;RP0=1, select bank1
  4428  018A  1303               	bcf	3,6	;RP1=0, select bank1
  4429  018B  0821               	movf	(__PIR^(0+128)+1),w
  4430  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4431  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4432  018E  0260               	subwf	??_PIR_Main+2,w
  4433  018F                     u4525:	
  4434  018F  1C03               	skipc
  4435  0190  2999               	goto	l3936
  4436                           
  4437                           ;PIR_B1.c: 121: setLED(1, 1);
  4438  0191  01F6               	clrf	setLED@command
  4439  0192  0AF6               	incf	setLED@command,f
  4440  0193                     L14:	
  4441  0193  3001               	movlw	1
  4442  0194  118A  23B2  118A   	fcall	_setLED
  4443                           
  4444                           ;PIR_B1.c: 122: setLED(2, 0);
  4445  0197  01F6               	clrf	setLED@command
  4446  0198  29A0               	goto	L11
  4447  0199                     l3936:	
  4448                           ;PIR_B1.c: 123: } else {
  4449                           
  4450                           
  4451                           ;PIR_B1.c: 124: setLED(1, 0);
  4452  0199  01F6               	clrf	setLED@command
  4453  019A  3001               	movlw	1
  4454  019B  118A  23B2  118A   	fcall	_setLED
  4455                           
  4456                           ;PIR_B1.c: 125: setLED(2, 1);
  4457  019E  01F6               	clrf	setLED@command
  4458  019F  0AF6               	incf	setLED@command,f
  4459  01A0                     L11:	
  4460  01A0  3002               	movlw	2
  4461  01A1  118A  23B2  118A   	fcall	_setLED
  4462  01A4                     l3938:	
  4463                           
  4464                           ;PIR_B1.c: 126: }
  4465                           ;PIR_B1.c: 127: }
  4466                           ;PIR_B1.c: 128: }
  4467                           ;PIR_B1.c: 129: }
  4468                           ;PIR_B1.c: 130: }
  4469                           ;PIR_B1.c: 131: }
  4470                           ;PIR_B1.c: 132: }
  4471                           ;PIR_B1.c: 133: if (_PIR.OK == 0) {
  4472  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4473  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4474  01A6  19A0               	btfsc	__PIR^(0+128),3
  4475  01A7  29BE               	goto	l3948
  4476                           
  4477                           ;PIR_B1.c: 134: _PIR.Count++;
  4478  01A8  3001               	movlw	1
  4479  01A9  07C1               	addwf	(__PIR^(0+128)+33),f
  4480  01AA  1803               	skipnc
  4481  01AB  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4482  01AC  3000               	movlw	0
  4483  01AD  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4484                           
  4485                           ;PIR_B1.c: 135: if (_PIR.Count == 3000) {
  4486  01AE  300B               	movlw	11
  4487  01AF  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4488  01B0  1D03               	skipz
  4489  01B1  29B4               	goto	u4545
  4490  01B2  30B8               	movlw	184
  4491  01B3  0641               	xorwf	(__PIR^(0+128)+33),w
  4492  01B4                     u4545:	
  4493  01B4  1D03               	skipz
  4494  01B5  29BE               	goto	l3948
  4495                           
  4496                           ;PIR_B1.c: 136: _PIR.Count = 0;
  4497  01B6  01C1               	clrf	(__PIR^(0+128)+33)
  4498  01B7  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4499                           
  4500                           ;PIR_B1.c: 137: _PIR.OK = 1;
  4501  01B8  15A0               	bsf	__PIR^(0+128),3
  4502                           
  4503                           ;PIR_B1.c: 138: setLED(2, 0);
  4504  01B9  01F6               	clrf	setLED@command
  4505  01BA  3002               	movlw	2
  4506  01BB  118A  23B2  118A   	fcall	_setLED
  4507  01BE                     l3948:	
  4508                           
  4509                           ;PIR_B1.c: 139: }
  4510                           ;PIR_B1.c: 140: }
  4511                           ;PIR_B1.c: 141: if (_PIR.Status == 1) {
  4512  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  4513  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  4514  01C0  1F20               	btfss	__PIR^(0+128),6
  4515  01C1  0008               	return
  4516                           
  4517                           ;PIR_B1.c: 142: _PIR.CloseTimeSeconds++;
  4518  01C2  3001               	movlw	1
  4519  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4520  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4521  01C5  00DE               	movwf	??_PIR_Main
  4522  01C6  085E               	movf	??_PIR_Main,w
  4523  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  4524  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  4525  01C9  07C6               	addwf	(__PIR^(0+128)+38),f
  4526                           
  4527                           ;PIR_B1.c: 143: if (_PIR.CloseTimeSeconds == 100) {
  4528  01CA  0846               	movf	(__PIR^(0+128)+38),w
  4529  01CB  3A64               	xorlw	100
  4530  01CC  1D03               	skipz
  4531  01CD  0008               	return
  4532                           
  4533                           ;PIR_B1.c: 144: _PIR.CloseTimeSeconds = 0;
  4534  01CE  01C6               	clrf	(__PIR^(0+128)+38)
  4535                           
  4536                           ;PIR_B1.c: 145: _PIR.CloseTimeMinutes++;
  4537  01CF  3001               	movlw	1
  4538  01D0  07C4               	addwf	(__PIR^(0+128)+36),f
  4539  01D1  1803               	skipnc
  4540  01D2  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4541  01D3  3000               	movlw	0
  4542  01D4  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4543                           
  4544                           ;PIR_B1.c: 146: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4545  01D5  0848               	movf	((__PIR+1)^(0+128)+39),w
  4546  01D6  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4547  01D7  1D03               	skipz
  4548  01D8  29DB               	goto	u4575
  4549  01D9  0847               	movf	(__PIR^(0+128)+39),w
  4550  01DA  0644               	xorwf	(__PIR^(0+128)+36),w
  4551  01DB                     u4575:	
  4552  01DB  1D03               	skipz
  4553  01DC  0008               	return
  4554                           
  4555                           ;PIR_B1.c: 147: _PIR.CloseTimeMinutes = 0;
  4556  01DD  01C4               	clrf	(__PIR^(0+128)+36)
  4557  01DE  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4558                           
  4559                           ;PIR_B1.c: 148: _PIR.Status = 0;
  4560  01DF  1320               	bcf	__PIR^(0+128),6
  4561                           
  4562                           ;PIR_B1.c: 151: if (getLights_Status(1) == 1) {
  4563  01E0  3001               	movlw	1
  4564  01E1  158A  2762  118A   	fcall	_getLights_Status
  4565  01E4  3A01               	xorlw	1
  4566  01E5  1D03               	skipz
  4567  01E6  0008               	return
  4568                           
  4569                           ;PIR_B1.c: 152: setLights_Trigger(1, 0);
  4570  01E7  01F6               	clrf	setLights_Trigger@command
  4571  01E8  3001               	movlw	1
  4572  01E9  118A  27D9         	fcall	_setLights_Trigger
  4573                           
  4574                           ;PIR_B1.c: 153: }
  4575                           ;PIR_B1.c: 156: }
  4576                           ;PIR_B1.c: 157: }
  4577                           ;PIR_B1.c: 158: }
  4578                           ;PIR_B1.c: 159: } else {
  4579  01EB  0008               	return
  4580  01EC                     l722:	
  4581                           
  4582                           ;PIR_B1.c: 160: if (myMain.PowerON == 1) {
  4583  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  4584  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  4585  01EE  1C20               	btfss	_myMain,0
  4586  01EF  0008               	return
  4587                           
  4588                           ;PIR_B1.c: 161: _PIR.Enable = 1;
  4589  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  4590  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  4591  01F2  1420               	bsf	__PIR^(0+128),0
  4592  01F3  0008               	return
  4593  01F4                     __end_of_PIR_Main:	
  4594                           
  4595                           	psect	text18
  4596  062E                     __ptext18:	
  4597 ;; *************** function _setMain_Exception *****************
  4598 ;; Defined at:
  4599 ;;		line 286 in file "../src/Main_B1.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  command         1    wreg     unsigned char 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  command         1    8[BANK0 ] unsigned char 
  4604 ;;  status          1    5[BANK0 ] unsigned char 
  4605 ;;  buz             1    4[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;		None               void
  4608 ;; Registers used:
  4609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4615 ;;      Params:         0       0       0       0
  4616 ;;      Locals:         0       5       0       0
  4617 ;;      Temps:          0       2       0       0
  4618 ;;      Totals:         0       7       0       0
  4619 ;;Total ram usage:        7 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    4
  4622 ;; This function calls:
  4623 ;;		_getAll_Lights_Line
  4624 ;;		_setLED
  4625 ;;		_setLights_Trigger
  4626 ;; This function is called by:
  4627 ;;		_PIR_Main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _setMain_Exception
  4633  062E                     _setMain_Exception:	
  4634                           
  4635                           ;incstack = 0
  4636                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4637                           ;setMain_Exception@command stored from wreg
  4638  062E  1283               	bcf	3,5	;RP0=0, select bank0
  4639  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0630  00DD               	movwf	setMain_Exception@command
  4641                           
  4642                           ;Main_B1.c: 287: char status = 0, buz = 0;
  4643  0631  01DA               	clrf	setMain_Exception@status
  4644  0632  01D9               	clrf	setMain_Exception@buz
  4645                           
  4646                           ;Main_B1.c: 289: status = command == 3 ? getAll_Lights_Line() : 255;
  4647  0633  085D               	movf	setMain_Exception@command,w
  4648  0634  3A03               	xorlw	3
  4649  0635  1903               	skipnz
  4650  0636  2E3B               	goto	l3546
  4651  0637  30FF               	movlw	255
  4652  0638  00DB               	movwf	_setMain_Exception$2057
  4653  0639  3000               	movlw	0
  4654  063A  2E45               	goto	L15
  4655  063B                     l3546:	
  4656  063B  158A  271A  118A   	fcall	_getAll_Lights_Line
  4657  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4658  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0640  00D7               	movwf	??_setMain_Exception
  4660  0641  01D8               	clrf	??_setMain_Exception+1
  4661  0642  0857               	movf	??_setMain_Exception,w
  4662  0643  00DB               	movwf	_setMain_Exception$2057
  4663  0644  0858               	movf	??_setMain_Exception+1,w
  4664  0645                     L15:	
  4665  0645  00DC               	movwf	_setMain_Exception$2057+1
  4666  0646  085B               	movf	_setMain_Exception$2057,w
  4667  0647  00D7               	movwf	??_setMain_Exception
  4668  0648  0857               	movf	??_setMain_Exception,w
  4669  0649  00DA               	movwf	setMain_Exception@status
  4670                           
  4671                           ;Main_B1.c: 291: if (command == 0) {
  4672  064A  08DD               	movf	setMain_Exception@command,f
  4673  064B  1D03               	skipz
  4674  064C  2E4F               	goto	l3554
  4675                           
  4676                           ;Main_B1.c: 292: setLED(command, 110);
  4677  064D  306E               	movlw	110
  4678  064E  2E5A               	goto	L16
  4679  064F                     l3554:	
  4680                           ;Main_B1.c: 293: } else if (command == 5) {
  4681                           
  4682  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4683  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4684  0651  085D               	movf	setMain_Exception@command,w
  4685  0652  3A05               	xorlw	5
  4686  0653  1D03               	skipz
  4687  0654  2E57               	goto	l3558
  4688                           
  4689                           ;Main_B1.c: 294: __nop();
  4690  0655  0000               	nop
  4691                           
  4692                           ;Main_B1.c: 295: } else {
  4693  0656  2E61               	goto	l3560
  4694  0657                     l3558:	
  4695                           
  4696                           ;Main_B1.c: 296: setLED(command, 111);
  4697  0657  306F               	movlw	111
  4698  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4700  065A                     L16:	
  4701  065A  00D7               	movwf	??_setMain_Exception
  4702  065B  0857               	movf	??_setMain_Exception,w
  4703  065C  00F6               	movwf	setLED@command
  4704  065D  085D               	movf	setMain_Exception@command,w
  4705  065E  118A  23B2  118A   	fcall	_setLED
  4706  0661                     l3560:	
  4707                           
  4708                           ;Main_B1.c: 297: }
  4709                           ;Main_B1.c: 299: if (command != 0) {
  4710  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4711  0662  1303               	bcf	3,6	;RP1=0, select bank0
  4712  0663  085D               	movf	setMain_Exception@command,w
  4713  0664  1903               	btfsc	3,2
  4714  0665  0008               	return
  4715                           
  4716                           ;Main_B1.c: 300: setLights_Trigger(1, 0);
  4717  0666  01F6               	clrf	setLights_Trigger@command
  4718  0667  3001               	movlw	1
  4719  0668  118A  27D9         	fcall	_setLights_Trigger
  4720  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4721  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4722  066C  0008               	return
  4723  066D                     __end_of_setMain_Exception:	
  4724                           
  4725                           	psect	text19
  4726  07D9                     __ptext19:	
  4727 ;; *************** function _setLights_Trigger *****************
  4728 ;; Defined at:
  4729 ;;		line 214 in file "../src/TriacRelay_B1.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  lights          1    wreg     unsigned char 
  4732 ;;  command         1    6[COMMON] unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  lights          1    1[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4744 ;;      Params:         1       0       0       0
  4745 ;;      Locals:         0       1       0       0
  4746 ;;      Temps:          0       1       0       0
  4747 ;;      Totals:         1       2       0       0
  4748 ;;Total ram usage:        3 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    3
  4751 ;; This function calls:
  4752 ;;		_LightsPointSelect
  4753 ;; This function is called by:
  4754 ;;		_setMain_Exception
  4755 ;;		_PIR_Main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function _setLights_Trigger
  4761  07D9                     _setLights_Trigger:	
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4765                           ;setLights_Trigger@lights stored from wreg
  4766  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  4767  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  4768  07DB  00D6               	movwf	setLights_Trigger@lights
  4769                           
  4770                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  4771  07DC  0856               	movf	setLights_Trigger@lights,w
  4772  07DD  158A  26F9         	fcall	_LightsPointSelect
  4773                           
  4774                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  4775  07DF  0878               	movf	_Lights,w
  4776  07E0  0084               	movwf	4
  4777  07E1  1383               	bcf	3,7	;select IRP bank0
  4778  07E2  1580               	bsf	0,3
  4779                           
  4780                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  4781  07E3  0876               	movf	setLights_Trigger@command,w
  4782  07E4  3A01               	xorlw	1
  4783  07E5  3000               	movlw	0
  4784  07E6  1903               	skipnz
  4785  07E7  3001               	movlw	1
  4786  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4787  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4788  07EA  00D5               	movwf	??_setLights_Trigger
  4789  07EB  0878               	movf	_Lights,w
  4790  07EC  0084               	movwf	4
  4791  07ED  0ED5               	swapf	??_setLights_Trigger,f
  4792  07EE  0800               	movf	0,w
  4793  07EF  0655               	xorwf	??_setLights_Trigger,w
  4794  07F0  39EF               	andlw	-17
  4795  07F1  0655               	xorwf	??_setLights_Trigger,w
  4796  07F2  0080               	movwf	0
  4797  07F3  0008               	return
  4798  07F4                     __end_of_setLights_Trigger:	
  4799                           
  4800                           	psect	text20
  4801  0F1A                     __ptext20:	
  4802 ;; *************** function _getAll_Lights_Line *****************
  4803 ;; Defined at:
  4804 ;;		line 236 in file "../src/TriacRelay_B1.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  line            1    6[COMMON] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      unsigned char 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4818 ;;      Params:         0       0       0       0
  4819 ;;      Locals:         1       0       0       0
  4820 ;;      Temps:          0       0       0       0
  4821 ;;      Totals:         1       0       0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    3
  4825 ;; This function calls:
  4826 ;;		_LightsPointSelect
  4827 ;; This function is called by:
  4828 ;;		_setMain_Exception
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _getAll_Lights_Line
  4834  0F1A                     _getAll_Lights_Line:	
  4835                           
  4836                           ;TriacRelay_B1.c: 237: char line = 0;
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4840  0F1A  01F6               	clrf	getAll_Lights_Line@line
  4841                           
  4842                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  4843  0F1B  3001               	movlw	1
  4844  0F1C  158A  26F9         	fcall	_LightsPointSelect
  4845                           
  4846                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  4847  0F1E  0A78               	incf	_Lights,w
  4848  0F1F  0084               	movwf	4
  4849  0F20  3000               	movlw	0
  4850  0F21  1383               	bcf	3,7	;select IRP bank0
  4851  0F22  1800               	btfsc	0,0
  4852  0F23  3001               	movlw	1
  4853  0F24  00F6               	movwf	getAll_Lights_Line@line
  4854                           
  4855                           ;TriacRelay_B1.c: 250: return line;
  4856  0F25  0876               	movf	getAll_Lights_Line@line,w
  4857  0F26  0008               	return
  4858  0F27                     __end_of_getAll_Lights_Line:	
  4859                           
  4860                           	psect	text21
  4861  066D                     __ptext21:	
  4862 ;; *************** function _getMain_All_Error_Status *****************
  4863 ;; Defined at:
  4864 ;;		line 373 in file "../src/Main_B1.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  command         1    wreg     unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  command         1    4[BANK0 ] unsigned char 
  4869 ;;  status          1    5[BANK0 ] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      unsigned char 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4879 ;;      Params:         0       0       0       0
  4880 ;;      Locals:         0       6       0       0
  4881 ;;      Temps:          1       0       0       0
  4882 ;;      Totals:         1       6       0       0
  4883 ;;Total ram usage:        7 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		_getCDS_Status
  4888 ;; This function is called by:
  4889 ;;		_setTemp_Main
  4890 ;;		_PIR_Main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           
  4895                           ;psect for function _getMain_All_Error_Status
  4896  066D                     _getMain_All_Error_Status:	
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  4900                           ;getMain_All_Error_Status@command stored from wreg
  4901  066D  1283               	bcf	3,5	;RP0=0, select bank0
  4902  066E  1303               	bcf	3,6	;RP1=0, select bank0
  4903  066F  00D9               	movwf	getMain_All_Error_Status@command
  4904                           
  4905                           ;Main_B1.c: 374: char status = 0;
  4906  0670  01DA               	clrf	getMain_All_Error_Status@status
  4907                           
  4908                           ;Main_B1.c: 385: if (status == 0 && command != 2) {
  4909  0671  08DA               	movf	getMain_All_Error_Status@status,f
  4910  0672  1D03               	skipz
  4911  0673  2E85               	goto	l2546
  4912  0674  0859               	movf	getMain_All_Error_Status@command,w
  4913  0675  3A02               	xorlw	2
  4914  0676  1903               	skipnz
  4915  0677  2E85               	goto	l2546
  4916                           
  4917                           ;Main_B1.c: 386: status = Temp.ERROR == 1 ? 2 : 0;
  4918  0678  18B6               	btfsc	_Temp,1
  4919  0679  2E7D               	goto	l2544
  4920  067A  01D5               	clrf	_getMain_All_Error_Status$2073
  4921  067B  01D6               	clrf	_getMain_All_Error_Status$2073+1
  4922  067C  2E81               	goto	l554
  4923  067D                     l2544:	
  4924  067D  3002               	movlw	2
  4925  067E  00D5               	movwf	_getMain_All_Error_Status$2073
  4926  067F  3000               	movlw	0
  4927  0680  00D6               	movwf	_getMain_All_Error_Status$2073+1
  4928  0681                     l554:	
  4929  0681  0855               	movf	_getMain_All_Error_Status$2073,w
  4930  0682  00F5               	movwf	??_getMain_All_Error_Status
  4931  0683  0875               	movf	??_getMain_All_Error_Status,w
  4932  0684  00DA               	movwf	getMain_All_Error_Status@status
  4933  0685                     l2546:	
  4934                           
  4935                           ;Main_B1.c: 387: }
  4936                           ;Main_B1.c: 406: if (status == 0 && command != 5) {
  4937  0685  08DA               	movf	getMain_All_Error_Status@status,f
  4938  0686  1D03               	skipz
  4939  0687  2EA1               	goto	l555
  4940  0688  0859               	movf	getMain_All_Error_Status@command,w
  4941  0689  3A05               	xorlw	5
  4942  068A  1903               	skipnz
  4943  068B  2EA1               	goto	l555
  4944                           
  4945                           ;Main_B1.c: 407: status = getCDS_Status() == 0 ? 5 : 0;
  4946  068C  158A  26E9  118A   	fcall	_getCDS_Status
  4947  068F  3A00               	xorlw	0
  4948  0690  1903               	skipnz
  4949  0691  2E97               	goto	l2554
  4950  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0694  01D7               	clrf	_getMain_All_Error_Status$2075
  4953  0695  01D8               	clrf	_getMain_All_Error_Status$2075+1
  4954  0696  2E9D               	goto	l559
  4955  0697                     l2554:	
  4956  0697  3005               	movlw	5
  4957  0698  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0699  1303               	bcf	3,6	;RP1=0, select bank0
  4959  069A  00D7               	movwf	_getMain_All_Error_Status$2075
  4960  069B  3000               	movlw	0
  4961  069C  00D8               	movwf	_getMain_All_Error_Status$2075+1
  4962  069D                     l559:	
  4963  069D  0857               	movf	_getMain_All_Error_Status$2075,w
  4964  069E  00F5               	movwf	??_getMain_All_Error_Status
  4965  069F  0875               	movf	??_getMain_All_Error_Status,w
  4966  06A0  00DA               	movwf	getMain_All_Error_Status@status
  4967  06A1                     l555:	
  4968                           
  4969                           ;Main_B1.c: 408: }
  4970                           ;Main_B1.c: 410: return status;
  4971  06A1  085A               	movf	getMain_All_Error_Status@status,w
  4972  06A2  0008               	return
  4973  06A3                     __end_of_getMain_All_Error_Status:	
  4974                           
  4975                           	psect	text22
  4976  0EE9                     __ptext22:	
  4977 ;; *************** function _getCDS_Status *****************
  4978 ;; Defined at:
  4979 ;;		line 40 in file "../src/CDS_B1.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  status          1    4[COMMON] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      unsigned char 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4993 ;;      Params:         0       0       0       0
  4994 ;;      Locals:         1       0       0       0
  4995 ;;      Temps:          0       0       0       0
  4996 ;;      Totals:         1       0       0       0
  4997 ;;Total ram usage:        1 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    2
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_getMain_All_Error_Status
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           
  5008                           ;psect for function _getCDS_Status
  5009  0EE9                     _getCDS_Status:	
  5010                           
  5011                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  5012                           
  5013                           ;incstack = 0
  5014                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5015  0EE9  3000               	movlw	0
  5016  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0EEC  1A27               	btfsc	__CDS,4
  5019  0EED  3001               	movlw	1
  5020  0EEE  00F4               	movwf	getCDS_Status@status
  5021                           
  5022                           ;CDS_B1.c: 42: return status;
  5023  0EEF  0874               	movf	getCDS_Status@status,w
  5024  0EF0  0008               	return
  5025  0EF1                     __end_of_getCDS_Status:	
  5026                           
  5027                           	psect	text23
  5028  0F96                     __ptext23:	
  5029 ;; *************** function _PIR_Initialization *****************
  5030 ;; Defined at:
  5031 ;;		line 7 in file "../src/PIR_B1.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;		None               void
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5045 ;;      Params:         0       0       0       0
  5046 ;;      Locals:         0       0       0       0
  5047 ;;      Temps:          0       1       0       0
  5048 ;;      Totals:         0       1       0       0
  5049 ;;Total ram usage:        1 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		_setLED
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           
  5060                           ;psect for function _PIR_Initialization
  5061  0F96                     _PIR_Initialization:	
  5062                           
  5063                           ;PIR_B1.c: 8: setLED(1, 1);
  5064                           
  5065                           ;incstack = 0
  5066                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5067  0F96  01F6               	clrf	setLED@command
  5068  0F97  0AF6               	incf	setLED@command,f
  5069  0F98  3001               	movlw	1
  5070  0F99  118A  23B2         	fcall	_setLED
  5071                           
  5072                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  5073  0F9B  300F               	movlw	15
  5074  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0F9E  00D6               	movwf	??_PIR_Initialization
  5077  0F9F  0856               	movf	??_PIR_Initialization,w
  5078  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  5079  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  5080  0FA2  00CC               	movwf	(__PIR^(0+128)+44)
  5081                           
  5082                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  5083  0FA3  3005               	movlw	5
  5084  0FA4  00C7               	movwf	(__PIR^(0+128)+39)
  5085  0FA5  3000               	movlw	0
  5086  0FA6  00C8               	movwf	(__PIR^(0+128)+40)
  5087  0FA7  0008               	return
  5088  0FA8                     __end_of_PIR_Initialization:	
  5089                           
  5090                           	psect	text24
  5091  0F43                     __ptext24:	
  5092 ;; *************** function _Mcu_Initialization *****************
  5093 ;; Defined at:
  5094 ;;		line 30 in file "../src/MCU_B1.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;		None               void
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, pclath, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5108 ;;      Params:         0       0       0       0
  5109 ;;      Locals:         0       0       0       0
  5110 ;;      Temps:          0       0       0       0
  5111 ;;      Totals:         0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    3
  5115 ;; This function calls:
  5116 ;;		_ADC_Set
  5117 ;;		_Fosc_Set
  5118 ;;		_IO_Set
  5119 ;;		_TMR1_Set
  5120 ;;		_WDT_Set
  5121 ;; This function is called by:
  5122 ;;		_main
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _Mcu_Initialization
  5128  0F43                     _Mcu_Initialization:	
  5129                           
  5130                           ;MCU_B1.c: 32: Fosc_Set();
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5134  0F43  158A  26D7  158A   	fcall	_Fosc_Set
  5135                           
  5136                           ;MCU_B1.c: 34: IO_Set();
  5137  0F46  158A  27D1  158A   	fcall	_IO_Set
  5138                           
  5139                           ;MCU_B1.c: 36: ;;
  5140                           ;MCU_B1.c: 38: TMR1_Set();
  5141  0F49  158A  2727  158A   	fcall	_TMR1_Set
  5142                           
  5143                           ;MCU_B1.c: 40: ADC_Set();
  5144  0F4C  158A  26E2  158A   	fcall	_ADC_Set
  5145                           
  5146                           ;MCU_B1.c: 42: ;;
  5147                           ;MCU_B1.c: 44: ;;
  5148                           ;MCU_B1.c: 46: ;;
  5149                           ;MCU_B1.c: 48: ;;
  5150                           ;MCU_B1.c: 50: ;;
  5151                           ;MCU_B1.c: 52: WDT_Set();
  5152  0F4F  158A  2735         	fcall	_WDT_Set
  5153  0F51  0008               	return
  5154  0F52                     __end_of_Mcu_Initialization:	
  5155                           
  5156                           	psect	text25
  5157  0F35                     __ptext25:	
  5158 ;; *************** function _WDT_Set *****************
  5159 ;; Defined at:
  5160 ;;		line 1022 in file "../src/MCU_B1.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;		None               void
  5167 ;; Registers used:
  5168 ;;		wreg
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5174 ;;      Params:         0       0       0       0
  5175 ;;      Locals:         0       0       0       0
  5176 ;;      Temps:          1       0       0       0
  5177 ;;      Totals:         1       0       0       0
  5178 ;;Total ram usage:        1 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    2
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_Mcu_Initialization
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _WDT_Set
  5190  0F35                     _WDT_Set:	
  5191                           
  5192                           ;MCU_B1.c: 1024: PSA = 1;
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _WDT_Set: [wreg]
  5196  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  5197  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  5198  0F37  1581               	bsf	1,3	;volatile
  5199                           
  5200                           ;MCU_B1.c: 1025: PS0 = 1;
  5201  0F38  1401               	bsf	1,0	;volatile
  5202                           
  5203                           ;MCU_B1.c: 1026: PS1 = 1;
  5204  0F39  1481               	bsf	1,1	;volatile
  5205                           
  5206                           ;MCU_B1.c: 1027: PS2 = 1;
  5207  0F3A  1501               	bsf	1,2	;volatile
  5208                           
  5209                           ;MCU_B1.c: 1031: WDT.Enable = 1;
  5210  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0F3D  1433               	bsf	_WDT,0
  5213                           
  5214                           ;MCU_B1.c: 1032: WDT.Timer = 10;
  5215  0F3E  300A               	movlw	10
  5216  0F3F  00F4               	movwf	??_WDT_Set
  5217  0F40  0874               	movf	??_WDT_Set,w
  5218  0F41  00B4               	movwf	_WDT+1
  5219  0F42  0008               	return
  5220  0F43                     __end_of_WDT_Set:	
  5221                           
  5222                           	psect	text26
  5223  0F27                     __ptext26:	
  5224 ;; *************** function _TMR1_Set *****************
  5225 ;; Defined at:
  5226 ;;		line 199 in file "../src/MCU_B1.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		wreg
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5240 ;;      Params:         0       0       0       0
  5241 ;;      Locals:         0       0       0       0
  5242 ;;      Temps:          0       0       0       0
  5243 ;;      Totals:         0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    2
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_Mcu_Initialization
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           
  5255                           ;psect for function _TMR1_Set
  5256  0F27                     _TMR1_Set:	
  5257                           
  5258                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5259                           
  5260                           ;incstack = 0
  5261                           ; Regs used in _TMR1_Set: [wreg]
  5262  0F27  3041               	movlw	65
  5263  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5264  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5265  0F2A  0090               	movwf	16	;volatile
  5266                           
  5267                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5268  0F2B  30FA               	movlw	250
  5269  0F2C  008F               	movwf	15	;volatile
  5270                           
  5271                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5272  0F2D  3038               	movlw	56
  5273  0F2E  008E               	movwf	14	;volatile
  5274                           
  5275                           ;MCU_B1.c: 203: TMR1IE = 1;
  5276  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  5277  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  5278  0F31  140C               	bsf	12,0	;volatile
  5279                           
  5280                           ;MCU_B1.c: 204: PEIE = 1;
  5281  0F32  170B               	bsf	11,6	;volatile
  5282                           
  5283                           ;MCU_B1.c: 205: GIE = 1;
  5284  0F33  178B               	bsf	11,7	;volatile
  5285  0F34  0008               	return
  5286  0F35                     __end_of_TMR1_Set:	
  5287                           
  5288                           	psect	text27
  5289  0FD1                     __ptext27:	
  5290 ;; *************** function _IO_Set *****************
  5291 ;; Defined at:
  5292 ;;		line 60 in file "../src/MCU_B1.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;		None               void
  5299 ;; Registers used:
  5300 ;;		wreg, status,2
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5306 ;;      Params:         0       0       0       0
  5307 ;;      Locals:         0       0       0       0
  5308 ;;      Temps:          0       0       0       0
  5309 ;;      Totals:         0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    2
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_Mcu_Initialization
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function _IO_Set
  5322  0FD1                     _IO_Set:	
  5323                           
  5324                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5325                           
  5326                           ;incstack = 0
  5327                           ; Regs used in _IO_Set: [wreg+status,2]
  5328  0FD1  302F               	movlw	47
  5329  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  5330  0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  5331  0FD4  0085               	movwf	5	;volatile
  5332                           
  5333                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5334  0FD5  3001               	movlw	1
  5335  0FD6  0086               	movwf	6	;volatile
  5336                           
  5337                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5338  0FD7  0187               	clrf	7	;volatile
  5339                           
  5340                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5341  0FD8  3007               	movlw	7
  5342  0FD9  1683               	bsf	3,5	;RP0=1, select bank3
  5343  0FDA  1703               	bsf	3,6	;RP1=1, select bank3
  5344  0FDB  0085               	movwf	5	;volatile
  5345                           
  5346                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5347  0FDC  3001               	movlw	1
  5348  0FDD  0086               	movwf	6	;volatile
  5349                           
  5350                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5351  0FDE  30AF               	movlw	175
  5352  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0FE1  0085               	movwf	5	;volatile
  5355                           
  5356                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5357  0FE2  3001               	movlw	1
  5358  0FE3  0086               	movwf	6	;volatile
  5359                           
  5360                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5361  0FE4  0187               	clrf	7	;volatile
  5362  0FE5  0008               	return
  5363  0FE6                     __end_of_IO_Set:	
  5364                           
  5365                           	psect	text28
  5366  0ED7                     __ptext28:	
  5367 ;; *************** function _Fosc_Set *****************
  5368 ;; Defined at:
  5369 ;;		line 56 in file "../src/MCU_B1.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5383 ;;      Params:         0       0       0       0
  5384 ;;      Locals:         0       0       0       0
  5385 ;;      Temps:          0       0       0       0
  5386 ;;      Totals:         0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    2
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_Mcu_Initialization
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _Fosc_Set
  5399  0ED7                     _Fosc_Set:	
  5400                           
  5401                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in _Fosc_Set: [wreg]
  5405  0ED7  303C               	movlw	60
  5406  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  5407  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  5408  0EDA  0090               	movwf	16	;volatile
  5409  0EDB  0008               	return
  5410  0EDC                     __end_of_Fosc_Set:	
  5411                           
  5412                           	psect	text29
  5413  0EE2                     __ptext29:	
  5414 ;; *************** function _ADC_Set *****************
  5415 ;; Defined at:
  5416 ;;		line 420 in file "../src/MCU_B1.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;		None               void
  5423 ;; Registers used:
  5424 ;;		wreg
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5430 ;;      Params:         0       0       0       0
  5431 ;;      Locals:         0       0       0       0
  5432 ;;      Temps:          0       0       0       0
  5433 ;;      Totals:         0       0       0       0
  5434 ;;Total ram usage:        0 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_Mcu_Initialization
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function _ADC_Set
  5446  0EE2                     _ADC_Set:	
  5447                           
  5448                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  5449                           
  5450                           ;incstack = 0
  5451                           ; Regs used in _ADC_Set: [wreg]
  5452  0EE2  3073               	movlw	115
  5453  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  5454  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  5455  0EE5  009F               	movwf	31	;volatile
  5456                           
  5457                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5458  0EE6  30C1               	movlw	193
  5459  0EE7  009D               	movwf	29	;volatile
  5460  0EE8  0008               	return
  5461  0EE9                     __end_of_ADC_Set:	
  5462                           
  5463                           	psect	text30
  5464  0F03                     __ptext30:	
  5465 ;; *************** function _Lights_Main *****************
  5466 ;; Defined at:
  5467 ;;		line 54 in file "../src/TriacRelay_B1.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;		None               void
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5481 ;;      Params:         0       0       0       0
  5482 ;;      Locals:         0       0       0       0
  5483 ;;      Temps:          0       0       0       0
  5484 ;;      Totals:         0       0       0       0
  5485 ;;Total ram usage:        0 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    6
  5488 ;; This function calls:
  5489 ;;		_Lights_Close
  5490 ;;		_Lights_Control
  5491 ;;		_setLights_Main
  5492 ;; This function is called by:
  5493 ;;		_main
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _Lights_Main
  5499  0F03                     _Lights_Main:	
  5500                           
  5501                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  5502                           
  5503                           ;incstack = 0
  5504                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5505  0F03  3001               	movlw	1
  5506  0F04  118A  2732  158A   	fcall	_setLights_Main
  5507                           
  5508                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  5509  0F07  3001               	movlw	1
  5510  0F08  118A  24F5  158A   	fcall	_Lights_Control
  5511                           
  5512                           ;TriacRelay_B1.c: 81: Lights_Close();
  5513  0F0B  158A  27BC         	fcall	_Lights_Close
  5514  0F0D  0008               	return
  5515  0F0E                     __end_of_Lights_Main:	
  5516                           
  5517                           	psect	text31
  5518  0732                     __ptext31:	
  5519 ;; *************** function _setLights_Main *****************
  5520 ;; Defined at:
  5521 ;;		line 93 in file "../src/TriacRelay_B1.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  lights          1    wreg     unsigned char 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  lights          1    3[BANK0 ] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5535 ;;      Params:         0       0       0       0
  5536 ;;      Locals:         0       1       0       0
  5537 ;;      Temps:          0       0       0       0
  5538 ;;      Totals:         0       1       0       0
  5539 ;;Total ram usage:        1 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    5
  5542 ;; This function calls:
  5543 ;;		_LightsPointSelect
  5544 ;;		_setLights
  5545 ;; This function is called by:
  5546 ;;		_Lights_Main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function _setLights_Main
  5552  0732                     _setLights_Main:	
  5553                           
  5554                           ;incstack = 0
  5555                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5556                           ;setLights_Main@lights stored from wreg
  5557  0732  1283               	bcf	3,5	;RP0=0, select bank0
  5558  0733  1303               	bcf	3,6	;RP1=0, select bank0
  5559  0734  00D8               	movwf	setLights_Main@lights
  5560                           
  5561                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  5562  0735  0858               	movf	setLights_Main@lights,w
  5563  0736  158A  26F9  118A   	fcall	_LightsPointSelect
  5564                           
  5565                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  5566  0739  0878               	movf	_Lights,w
  5567  073A  0084               	movwf	4
  5568  073B  1383               	bcf	3,7	;select IRP bank0
  5569  073C  1880               	btfsc	0,1
  5570  073D  0008               	return
  5571                           
  5572                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  5573  073E  0878               	movf	_Lights,w
  5574  073F  0084               	movwf	4
  5575  0740  1D80               	btfss	0,3
  5576  0741  0008               	return
  5577                           
  5578                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  5579  0742  1283               	bcf	3,5	;RP0=0, select bank0
  5580  0743  1303               	bcf	3,6	;RP1=0, select bank0
  5581  0744  1935               	btfsc	_LightsControl,2
  5582  0745  0008               	return
  5583                           
  5584                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  5585  0746  0878               	movf	_Lights,w
  5586  0747  0084               	movwf	4
  5587  0748  1180               	bcf	0,3
  5588                           
  5589                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  5590  0749  0878               	movf	_Lights,w
  5591  074A  0084               	movwf	4
  5592  074B  1E00               	btfss	0,4
  5593  074C  2F53               	goto	l3634
  5594                           
  5595                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  5596  074D  01D5               	clrf	setLights@status
  5597  074E  0AD5               	incf	setLights@status,f
  5598  074F  0858               	movf	setLights_Main@lights,w
  5599  0750  118A  259D         	fcall	_setLights
  5600                           
  5601                           ;TriacRelay_B1.c: 102: } else {
  5602  0752  0008               	return
  5603  0753                     l3634:	
  5604                           
  5605                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  5606  0753  1283               	bcf	3,5	;RP0=0, select bank0
  5607  0754  1303               	bcf	3,6	;RP1=0, select bank0
  5608  0755  01D5               	clrf	setLights@status
  5609  0756  0858               	movf	setLights_Main@lights,w
  5610  0757  118A  259D         	fcall	_setLights
  5611  0759  0008               	return
  5612  075A                     __end_of_setLights_Main:	
  5613                           
  5614                           	psect	text32
  5615  059D                     __ptext32:	
  5616 ;; *************** function _setLights *****************
  5617 ;; Defined at:
  5618 ;;		line 111 in file "../src/TriacRelay_B1.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  lights          1    wreg     unsigned char 
  5621 ;;  status          1    0[BANK0 ] unsigned char 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  lights          1    2[BANK0 ] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;		None               void
  5626 ;; Registers used:
  5627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5633 ;;      Params:         0       1       0       0
  5634 ;;      Locals:         0       1       0       0
  5635 ;;      Temps:          0       1       0       0
  5636 ;;      Totals:         0       3       0       0
  5637 ;;Total ram usage:        3 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    4
  5640 ;; This function calls:
  5641 ;;		_LightsPointSelect
  5642 ;;		_setLights_Line
  5643 ;; This function is called by:
  5644 ;;		_setLights_Main
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _setLights
  5650  059D                     _setLights:	
  5651                           
  5652                           ;incstack = 0
  5653                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5654                           ;setLights@lights stored from wreg
  5655  059D  1283               	bcf	3,5	;RP0=0, select bank0
  5656  059E  1303               	bcf	3,6	;RP1=0, select bank0
  5657  059F  00D7               	movwf	setLights@lights
  5658                           
  5659                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  5660  05A0  0857               	movf	setLights@lights,w
  5661  05A1  158A  26F9  118A   	fcall	_LightsPointSelect
  5662                           
  5663                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  5664  05A4  0878               	movf	_Lights,w
  5665  05A5  0084               	movwf	4
  5666  05A6  1383               	bcf	3,7	;select IRP bank0
  5667  05A7  1480               	bsf	0,1
  5668                           
  5669                           ;TriacRelay_B1.c: 121: if (status == 1) {
  5670  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  5671  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  5672  05AA  0855               	movf	setLights@status,w
  5673  05AB  3A01               	xorlw	1
  5674  05AC  1D03               	skipz
  5675  05AD  2DCB               	goto	l3442
  5676                           
  5677                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  5678  05AE  0878               	movf	_Lights,w
  5679  05AF  0084               	movwf	4
  5680  05B0  1900               	btfsc	0,2
  5681  05B1  2DE6               	goto	l3446
  5682                           
  5683                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  5684  05B2  0878               	movf	_Lights,w
  5685  05B3  0084               	movwf	4
  5686  05B4  1500               	bsf	0,2
  5687                           
  5688                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  5689  05B5  0A78               	incf	_Lights,w
  5690  05B6  0084               	movwf	4
  5691  05B7  1480               	bsf	0,1
  5692                           
  5693                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  5694  05B8  300A               	movlw	10
  5695  05B9  00D6               	movwf	??_setLights
  5696  05BA  0878               	movf	_Lights,w
  5697  05BB  3E06               	addlw	6
  5698  05BC  0084               	movwf	4
  5699  05BD  0856               	movf	??_setLights,w
  5700  05BE  0080               	movwf	0
  5701                           
  5702                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  5703  05BF  300D               	movlw	13
  5704  05C0  00D6               	movwf	??_setLights
  5705  05C1  0878               	movf	_Lights,w
  5706  05C2  3E04               	addlw	4
  5707  05C3  0084               	movwf	4
  5708  05C4  0856               	movf	??_setLights,w
  5709  05C5  0080               	movwf	0
  5710                           
  5711                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  5712  05C6  0857               	movf	setLights@lights,w
  5713  05C7  118A  27F4  118A   	fcall	_setLights_Line
  5714                           
  5715                           ;TriacRelay_B1.c: 128: }
  5716                           ;TriacRelay_B1.c: 129: } else {
  5717  05CA  2DE6               	goto	l3446
  5718  05CB                     l3442:	
  5719                           
  5720                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  5721  05CB  0878               	movf	_Lights,w
  5722  05CC  0084               	movwf	4
  5723  05CD  1383               	bcf	3,7	;select IRP bank0
  5724  05CE  1D00               	btfss	0,2
  5725  05CF  2DE6               	goto	l3446
  5726                           
  5727                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  5728  05D0  0878               	movf	_Lights,w
  5729  05D1  0084               	movwf	4
  5730  05D2  1100               	bcf	0,2
  5731                           
  5732                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  5733  05D3  0A78               	incf	_Lights,w
  5734  05D4  0084               	movwf	4
  5735  05D5  1080               	bcf	0,1
  5736                           
  5737                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  5738  05D6  3004               	movlw	4
  5739  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  5740  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  5741  05D9  00D6               	movwf	??_setLights
  5742  05DA  0878               	movf	_Lights,w
  5743  05DB  3E06               	addlw	6
  5744  05DC  0084               	movwf	4
  5745  05DD  0856               	movf	??_setLights,w
  5746  05DE  0080               	movwf	0
  5747                           
  5748                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  5749  05DF  3007               	movlw	7
  5750  05E0  00D6               	movwf	??_setLights
  5751  05E1  0878               	movf	_Lights,w
  5752  05E2  3E04               	addlw	4
  5753  05E3  0084               	movwf	4
  5754  05E4  0856               	movf	??_setLights,w
  5755  05E5  0080               	movwf	0
  5756  05E6                     l3446:	
  5757                           
  5758                           ;TriacRelay_B1.c: 135: }
  5759                           ;TriacRelay_B1.c: 136: }
  5760                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  5761  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5762  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5763  05E8  0857               	movf	setLights@lights,w
  5764  05E9  3A01               	xorlw	1
  5765  05EA  1D03               	skipz
  5766  05EB  0008               	return
  5767                           
  5768                           ;TriacRelay_B1.c: 139: RB2 = 1;
  5769  05EC  1506               	bsf	6,2	;volatile
  5770  05ED  0008               	return
  5771  05EE                     __end_of_setLights:	
  5772                           
  5773                           	psect	text33
  5774  07F4                     __ptext33:	
  5775 ;; *************** function _setLights_Line *****************
  5776 ;; Defined at:
  5777 ;;		line 221 in file "../src/TriacRelay_B1.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  lights          1    wreg     unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  lights          1    6[COMMON] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5791 ;;      Params:         0       0       0       0
  5792 ;;      Locals:         1       0       0       0
  5793 ;;      Temps:          0       0       0       0
  5794 ;;      Totals:         1       0       0       0
  5795 ;;Total ram usage:        1 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    3
  5798 ;; This function calls:
  5799 ;;		_LightsPointSelect
  5800 ;; This function is called by:
  5801 ;;		_setLights
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _setLights_Line
  5807  07F4                     _setLights_Line:	
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5811                           ;setLights_Line@lights stored from wreg
  5812  07F4  00F6               	movwf	setLights_Line@lights
  5813                           
  5814                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  5815  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  5816  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  5817  07F7  1043               	bcf	_Lights1+1,0
  5818                           
  5819                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  5820  07F8  0876               	movf	setLights_Line@lights,w
  5821  07F9  158A  26F9         	fcall	_LightsPointSelect
  5822                           
  5823                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  5824  07FB  0A78               	incf	_Lights,w
  5825  07FC  0084               	movwf	4
  5826  07FD  1383               	bcf	3,7	;select IRP bank0
  5827  07FE  1400               	bsf	0,0
  5828  07FF  0008               	return
  5829  0800                     __end_of_setLights_Line:	
  5830                           
  5831                           	psect	text34
  5832  04F5                     __ptext34:	
  5833 ;; *************** function _Lights_Control *****************
  5834 ;; Defined at:
  5835 ;;		line 155 in file "../src/TriacRelay_B1.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  lights          1    wreg     unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  lights          1    6[COMMON] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;		None               void
  5842 ;; Registers used:
  5843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5849 ;;      Params:         0       0       0       0
  5850 ;;      Locals:         1       0       0       0
  5851 ;;      Temps:          0       2       0       0
  5852 ;;      Totals:         1       2       0       0
  5853 ;;Total ram usage:        3 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    3
  5856 ;; This function calls:
  5857 ;;		_LightsPointSelect
  5858 ;; This function is called by:
  5859 ;;		_Lights_Main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _Lights_Control
  5865  04F5                     _Lights_Control:	
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5869                           ;Lights_Control@lights stored from wreg
  5870  04F5  00F6               	movwf	Lights_Control@lights
  5871                           
  5872                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  5873  04F6  0876               	movf	Lights_Control@lights,w
  5874  04F7  158A  26F9  118A   	fcall	_LightsPointSelect
  5875                           
  5876                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  5877  04FA  0878               	movf	_Lights,w
  5878  04FB  0084               	movwf	4
  5879  04FC  1383               	bcf	3,7	;select IRP bank0
  5880  04FD  1C80               	btfss	0,1
  5881  04FE  0008               	return
  5882                           
  5883                           ;TriacRelay_B1.c: 158: Lights->Time++;
  5884  04FF  3001               	movlw	1
  5885  0500  1283               	bcf	3,5	;RP0=0, select bank0
  5886  0501  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0502  00D5               	movwf	??_Lights_Control
  5888  0503  0878               	movf	_Lights,w
  5889  0504  3E02               	addlw	2
  5890  0505  0084               	movwf	4
  5891  0506  0855               	movf	??_Lights_Control,w
  5892  0507  0780               	addwf	0,f
  5893                           
  5894                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5895  0508  0878               	movf	_Lights,w
  5896  0509  3E06               	addlw	6
  5897  050A  0084               	movwf	4
  5898  050B  0800               	movf	0,w
  5899  050C  00D5               	movwf	??_Lights_Control
  5900  050D  0878               	movf	_Lights,w
  5901  050E  3E02               	addlw	2
  5902  050F  0084               	movwf	4
  5903  0510  0800               	movf	0,w
  5904  0511  00D6               	movwf	??_Lights_Control+1
  5905  0512  0855               	movf	??_Lights_Control,w
  5906  0513  0256               	subwf	??_Lights_Control+1,w
  5907  0514  1C03               	skipc
  5908  0515  2D2D               	goto	l3652
  5909  0516  0878               	movf	_Lights,w
  5910  0517  0084               	movwf	4
  5911  0518  1B80               	btfsc	0,7
  5912  0519  2D2D               	goto	l3652
  5913                           
  5914                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  5915  051A  0878               	movf	_Lights,w
  5916  051B  0084               	movwf	4
  5917  051C  1780               	bsf	0,7
  5918                           
  5919                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  5920  051D  0876               	movf	Lights_Control@lights,w
  5921  051E  3A01               	xorlw	1
  5922  051F  1D03               	skipz
  5923  0520  0008               	return
  5924                           
  5925                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  5926  0521  0878               	movf	_Lights,w
  5927  0522  0084               	movwf	4
  5928  0523  1D00               	btfss	0,2
  5929  0524  2D29               	goto	u4040
  5930  0525  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0526  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0527  1605               	bsf	5,4	;volatile
  5933  0528  0008               	return
  5934  0529                     u4040:	
  5935  0529  1283               	bcf	3,5	;RP0=0, select bank0
  5936  052A  1303               	bcf	3,6	;RP1=0, select bank0
  5937  052B  1205               	bcf	5,4	;volatile
  5938                           
  5939                           ;TriacRelay_B1.c: 164: }
  5940                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  5941  052C  0008               	return
  5942  052D                     l3652:	
  5943  052D  0878               	movf	_Lights,w
  5944  052E  3E04               	addlw	4
  5945  052F  0084               	movwf	4
  5946  0530  1383               	bcf	3,7	;select IRP bank0
  5947  0531  0800               	movf	0,w
  5948  0532  00D5               	movwf	??_Lights_Control
  5949  0533  0878               	movf	_Lights,w
  5950  0534  3E02               	addlw	2
  5951  0535  0084               	movwf	4
  5952  0536  0800               	movf	0,w
  5953  0537  00D6               	movwf	??_Lights_Control+1
  5954  0538  0855               	movf	??_Lights_Control,w
  5955  0539  0256               	subwf	??_Lights_Control+1,w
  5956  053A  1C03               	skipc
  5957  053B  0008               	return
  5958                           
  5959                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  5960  053C  0878               	movf	_Lights,w
  5961  053D  3E02               	addlw	2
  5962  053E  0084               	movwf	4
  5963  053F  0180               	clrf	0
  5964                           
  5965                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  5966  0540  0878               	movf	_Lights,w
  5967  0541  0084               	movwf	4
  5968  0542  1080               	bcf	0,1
  5969                           
  5970                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  5971  0543  0878               	movf	_Lights,w
  5972  0544  0084               	movwf	4
  5973  0545  1380               	bcf	0,7
  5974                           
  5975                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  5976  0546  0876               	movf	Lights_Control@lights,w
  5977  0547  3A01               	xorlw	1
  5978  0548  1D03               	skipz
  5979  0549  0008               	return
  5980                           
  5981                           ;TriacRelay_B1.c: 188: RB2 = 0;
  5982  054A  1106               	bcf	6,2	;volatile
  5983  054B  0008               	return
  5984  054C                     __end_of_Lights_Control:	
  5985                           
  5986                           	psect	text35
  5987  0FBC                     __ptext35:	
  5988 ;; *************** function _Lights_Close *****************
  5989 ;; Defined at:
  5990 ;;		line 85 in file "../src/TriacRelay_B1.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;		None               void
  5997 ;; Registers used:
  5998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6004 ;;      Params:         0       0       0       0
  6005 ;;      Locals:         0       0       0       0
  6006 ;;      Temps:          0       1       0       0
  6007 ;;      Totals:         0       1       0       0
  6008 ;;Total ram usage:        1 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    5
  6011 ;; This function calls:
  6012 ;;		_getMain_LightsStatus
  6013 ;; This function is called by:
  6014 ;;		_Lights_Main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _Lights_Close
  6020  0FBC                     _Lights_Close:	
  6021                           
  6022                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6026  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  6028  0FBE  1C35               	btfss	_LightsControl,0
  6029  0FBF  0008               	return
  6030                           
  6031                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  6032  0FC0  1035               	bcf	_LightsControl,0
  6033                           
  6034                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  6035  0FC1  118A  26D7         	fcall	_getMain_LightsStatus
  6036  0FC3  3800               	iorlw	0
  6037  0FC4  3000               	movlw	0
  6038  0FC5  1D03               	skipz
  6039  0FC6  3001               	movlw	1
  6040  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  6041  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  6042  0FC9  00DB               	movwf	??_Lights_Close
  6043  0FCA  0DDB               	rlf	??_Lights_Close,f
  6044  0FCB  0835               	movf	_LightsControl,w
  6045  0FCC  065B               	xorwf	??_Lights_Close,w
  6046  0FCD  39FD               	andlw	-3
  6047  0FCE  065B               	xorwf	??_Lights_Close,w
  6048  0FCF  00B5               	movwf	_LightsControl
  6049  0FD0  0008               	return
  6050  0FD1                     __end_of_Lights_Close:	
  6051                           
  6052                           	psect	text36
  6053  06D7                     __ptext36:	
  6054 ;; *************** function _getMain_LightsStatus *****************
  6055 ;; Defined at:
  6056 ;;		line 346 in file "../src/Main_B1.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;		None
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  i               2    3[BANK0 ] int 
  6061 ;;  status          1    5[BANK0 ] unsigned char 
  6062 ;;  count           1    2[BANK0 ] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6072 ;;      Params:         0       0       0       0
  6073 ;;      Locals:         0       4       0       0
  6074 ;;      Temps:          1       0       0       0
  6075 ;;      Totals:         1       4       0       0
  6076 ;;Total ram usage:        5 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    4
  6079 ;; This function calls:
  6080 ;;		_getLights_Status
  6081 ;; This function is called by:
  6082 ;;		_setTemp_Main
  6083 ;;		_Lights_Close
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function _getMain_LightsStatus
  6089  06D7                     _getMain_LightsStatus:	
  6090                           
  6091                           ;Main_B1.c: 347: char status = 0, count = 0;
  6092                           
  6093                           ;incstack = 0
  6094                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6095  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  6096  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  6097  06D9  01DA               	clrf	getMain_LightsStatus@status
  6098  06DA  01D7               	clrf	getMain_LightsStatus@count
  6099                           
  6100                           ;Main_B1.c: 350: count = 1;
  6101  06DB  01D7               	clrf	getMain_LightsStatus@count
  6102  06DC  0AD7               	incf	getMain_LightsStatus@count,f
  6103                           
  6104                           ;Main_B1.c: 359: for (int i = 0; i < count; i++) {
  6105  06DD  01D8               	clrf	getMain_LightsStatus@i
  6106  06DE  01D9               	clrf	getMain_LightsStatus@i+1
  6107  06DF                     l3424:	
  6108  06DF  0859               	movf	getMain_LightsStatus@i+1,w
  6109  06E0  3A80               	xorlw	128
  6110  06E1  00F6               	movwf	??_getMain_LightsStatus
  6111  06E2  3080               	movlw	128
  6112  06E3  0276               	subwf	??_getMain_LightsStatus,w
  6113  06E4  1D03               	skipz
  6114  06E5  2EE8               	goto	u3525
  6115  06E6  0857               	movf	getMain_LightsStatus@count,w
  6116  06E7  0258               	subwf	getMain_LightsStatus@i,w
  6117  06E8                     u3525:	
  6118  06E8  1803               	btfsc	3,0
  6119  06E9  2F04               	goto	l3426
  6120                           
  6121                           ;Main_B1.c: 360: if (status == 0) {
  6122  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  6123  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  6124  06EC  08DA               	movf	getMain_LightsStatus@status,f
  6125  06ED  1D03               	skipz
  6126  06EE  2EFD               	goto	l3422
  6127                           
  6128                           ;Main_B1.c: 362: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  6129  06EF  0858               	movf	getMain_LightsStatus@i,w
  6130  06F0  3E01               	addlw	1
  6131  06F1  158A  2762  118A   	fcall	_getLights_Status
  6132  06F4  3A01               	xorlw	1
  6133  06F5  3000               	movlw	0
  6134  06F6  1903               	skipnz
  6135  06F7  3001               	movlw	1
  6136  06F8  00F6               	movwf	??_getMain_LightsStatus
  6137  06F9  0876               	movf	??_getMain_LightsStatus,w
  6138  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  6139  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  6140  06FC  00DA               	movwf	getMain_LightsStatus@status
  6141  06FD                     l3422:	
  6142  06FD  3001               	movlw	1
  6143  06FE  07D8               	addwf	getMain_LightsStatus@i,f
  6144  06FF  1803               	skipnc
  6145  0700  0AD9               	incf	getMain_LightsStatus@i+1,f
  6146  0701  3000               	movlw	0
  6147  0702  07D9               	addwf	getMain_LightsStatus@i+1,f
  6148  0703  2EDF               	goto	l3424
  6149  0704                     l3426:	
  6150                           
  6151                           ;Main_B1.c: 367: }
  6152                           ;Main_B1.c: 368: }
  6153                           ;Main_B1.c: 369: return status;
  6154  0704  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0705  1303               	bcf	3,6	;RP1=0, select bank0
  6156  0706  085A               	movf	getMain_LightsStatus@status,w
  6157  0707  0008               	return
  6158  0708                     __end_of_getMain_LightsStatus:	
  6159                           
  6160                           	psect	text37
  6161  0F62                     __ptext37:	
  6162 ;; *************** function _getLights_Status *****************
  6163 ;; Defined at:
  6164 ;;		line 207 in file "../src/TriacRelay_B1.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  lights          1    wreg     unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  lights          1    0[BANK0 ] unsigned char 
  6169 ;;  status          1    1[BANK0 ] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      unsigned char 
  6172 ;; Registers used:
  6173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6179 ;;      Params:         0       0       0       0
  6180 ;;      Locals:         0       2       0       0
  6181 ;;      Temps:          0       0       0       0
  6182 ;;      Totals:         0       2       0       0
  6183 ;;Total ram usage:        2 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    3
  6186 ;; This function calls:
  6187 ;;		_LightsPointSelect
  6188 ;; This function is called by:
  6189 ;;		_getMain_LightsStatus
  6190 ;;		_PIR_Main
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function _getLights_Status
  6196  0F62                     _getLights_Status:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6200                           ;getLights_Status@lights stored from wreg
  6201  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0F64  00D5               	movwf	getLights_Status@lights
  6204                           
  6205                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  6206  0F65  0855               	movf	getLights_Status@lights,w
  6207  0F66  158A  26F9         	fcall	_LightsPointSelect
  6208                           
  6209                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  6210  0F68  0878               	movf	_Lights,w
  6211  0F69  0084               	movwf	4
  6212  0F6A  3000               	movlw	0
  6213  0F6B  1383               	bcf	3,7	;select IRP bank0
  6214  0F6C  1900               	btfsc	0,2
  6215  0F6D  3001               	movlw	1
  6216  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  6217  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  6218  0F70  00D6               	movwf	getLights_Status@status
  6219                           
  6220                           ;TriacRelay_B1.c: 210: return status;
  6221  0F71  0856               	movf	getLights_Status@status,w
  6222  0F72  0008               	return
  6223  0F73                     __end_of_getLights_Status:	
  6224                           
  6225                           	psect	text38
  6226  0ECE                     __ptext38:	
  6227 ;; *************** function _Lights_Initialization *****************
  6228 ;; Defined at:
  6229 ;;		line 34 in file "../src/TriacRelay_B1.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;		None               void
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0, pclath, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6243 ;;      Params:         0       0       0       0
  6244 ;;      Locals:         0       0       0       0
  6245 ;;      Temps:          0       0       0       0
  6246 ;;      Totals:         0       0       0       0
  6247 ;;Total ram usage:        0 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    4
  6250 ;; This function calls:
  6251 ;;		_setLights_Initialization
  6252 ;; This function is called by:
  6253 ;;		_main
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function _Lights_Initialization
  6259  0ECE                     _Lights_Initialization:	
  6260                           
  6261                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6265  0ECE  3001               	movlw	1
  6266  0ECF  158A  26D2         	fcall	_setLights_Initialization
  6267  0ED1  0008               	return
  6268  0ED2                     __end_of_Lights_Initialization:	
  6269                           
  6270                           	psect	text39
  6271  0ED2                     __ptext39:	
  6272 ;; *************** function _setLights_Initialization *****************
  6273 ;; Defined at:
  6274 ;;		line 49 in file "../src/TriacRelay_B1.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  lights          1    wreg     unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  lights          1    6[COMMON] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;		None               void
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, pclath, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6288 ;;      Params:         0       0       0       0
  6289 ;;      Locals:         1       0       0       0
  6290 ;;      Temps:          0       0       0       0
  6291 ;;      Totals:         1       0       0       0
  6292 ;;Total ram usage:        1 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    3
  6295 ;; This function calls:
  6296 ;;		_LightsPointSelect
  6297 ;; This function is called by:
  6298 ;;		_Lights_Initialization
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function _setLights_Initialization
  6304  0ED2                     _setLights_Initialization:	
  6305                           
  6306                           ;incstack = 0
  6307                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6308                           ;setLights_Initialization@lights stored from wreg
  6309  0ED2  00F6               	movwf	setLights_Initialization@lights
  6310                           
  6311                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6312  0ED3  0876               	movf	setLights_Initialization@lights,w
  6313  0ED4  158A  26F9         	fcall	_LightsPointSelect
  6314  0ED6  0008               	return
  6315  0ED7                     __end_of_setLights_Initialization:	
  6316                           
  6317                           	psect	text40
  6318  0EF9                     __ptext40:	
  6319 ;; *************** function _LightsPointSelect *****************
  6320 ;; Defined at:
  6321 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  lights          1    wreg     unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  lights          1    5[COMMON] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;		None               void
  6328 ;; Registers used:
  6329 ;;		wreg
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6335 ;;      Params:         0       0       0       0
  6336 ;;      Locals:         1       0       0       0
  6337 ;;      Temps:          1       0       0       0
  6338 ;;      Totals:         2       0       0       0
  6339 ;;Total ram usage:        2 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    2
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_setLights_Initialization
  6346 ;;		_setLights_Main
  6347 ;;		_setLights
  6348 ;;		_Lights_Control
  6349 ;;		_getLights_Status
  6350 ;;		_setLights_Trigger
  6351 ;;		_setLights_Line
  6352 ;;		_getAll_Lights_Line
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _LightsPointSelect
  6358  0EF9                     _LightsPointSelect:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _LightsPointSelect: [wreg]
  6362                           ;LightsPointSelect@lights stored from wreg
  6363  0EF9  00F5               	movwf	LightsPointSelect@lights
  6364                           
  6365                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6366  0EFA  0875               	movf	LightsPointSelect@lights,w
  6367  0EFB  3A01               	xorlw	1
  6368  0EFC  1D03               	skipz
  6369  0EFD  0008               	return
  6370                           
  6371                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6372  0EFE  3042               	movlw	_Lights1& (0+255)
  6373  0EFF  00F4               	movwf	??_LightsPointSelect
  6374  0F00  0874               	movf	??_LightsPointSelect,w
  6375  0F01  00F8               	movwf	_Lights
  6376  0F02  0008               	return
  6377  0F03                     __end_of_LightsPointSelect:	
  6378                           
  6379                           	psect	text41
  6380  0EC1                     __ptext41:	
  6381 ;; *************** function _LED_Main *****************
  6382 ;; Defined at:
  6383 ;;		line 47 in file "../src/LED_B1.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;		None
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;		None               void
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6397 ;;      Params:         0       0       0       0
  6398 ;;      Locals:         0       0       0       0
  6399 ;;      Temps:          0       0       0       0
  6400 ;;      Totals:         0       0       0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    5
  6404 ;; This function calls:
  6405 ;;		_setPIRLED_Main
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _LED_Main
  6413  0EC1                     _LED_Main:	
  6414                           
  6415                           ;LED_B1.c: 50: setPIRLED_Main();
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6419  0EC1  118A  2429         	fcall	_setPIRLED_Main
  6420  0EC3  0008               	return
  6421  0EC4                     __end_of_LED_Main:	
  6422                           
  6423                           	psect	text42
  6424  0429                     __ptext42:	
  6425 ;; *************** function _setPIRLED_Main *****************
  6426 ;; Defined at:
  6427 ;;		line 253 in file "../src/LED_B1.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  count           1    2[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6441 ;;      Params:         0       0       0       0
  6442 ;;      Locals:         0       1       0       0
  6443 ;;      Temps:          0       1       0       0
  6444 ;;      Totals:         0       2       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    4
  6448 ;; This function calls:
  6449 ;;		_setLED
  6450 ;; This function is called by:
  6451 ;;		_LED_Main
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _setPIRLED_Main
  6457  0429                     _setPIRLED_Main:	
  6458                           
  6459                           ;LED_B1.c: 254: char count;
  6460                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6464  0429  1283               	bcf	3,5	;RP0=0, select bank0
  6465  042A  1303               	bcf	3,6	;RP1=0, select bank0
  6466  042B  1C2C               	btfss	_PIRLED,0
  6467  042C  0008               	return
  6468                           
  6469                           ;LED_B1.c: 256: PIRLED.Time++;
  6470  042D  3001               	movlw	1
  6471  042E  07AE               	addwf	_PIRLED+2,f
  6472  042F  1803               	skipnc
  6473  0430  0AAF               	incf	_PIRLED+3,f
  6474  0431  3000               	movlw	0
  6475  0432  07AF               	addwf	_PIRLED+3,f
  6476                           
  6477                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  6478  0433  3000               	movlw	0
  6479  0434  022F               	subwf	_PIRLED+3,w
  6480  0435  3032               	movlw	50
  6481  0436  1903               	skipnz
  6482  0437  022E               	subwf	_PIRLED+2,w
  6483  0438  1C03               	skipc
  6484  0439  0008               	return
  6485                           
  6486                           ;LED_B1.c: 258: PIRLED.Time = 0;
  6487  043A  01AE               	clrf	_PIRLED+2
  6488  043B  01AF               	clrf	_PIRLED+3
  6489                           
  6490                           ;LED_B1.c: 259: setLED(1, 0);
  6491  043C  01F6               	clrf	setLED@command
  6492  043D  3001               	movlw	1
  6493  043E  118A  23B2  118A   	fcall	_setLED
  6494                           
  6495                           ;LED_B1.c: 260: setLED(2, 0);
  6496  0441  01F6               	clrf	setLED@command
  6497  0442  3002               	movlw	2
  6498  0443  118A  23B2  118A   	fcall	_setLED
  6499                           
  6500                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  6501  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0448  1CAC               	btfss	_PIRLED,1
  6504  0449  2C4E               	goto	l3514
  6505                           
  6506                           ;LED_B1.c: 262: count = 4;
  6507  044A  3004               	movlw	4
  6508  044B  00D6               	movwf	??_setPIRLED_Main
  6509  044C  0856               	movf	??_setPIRLED_Main,w
  6510  044D  00D7               	movwf	setPIRLED_Main@count
  6511  044E                     l3514:	
  6512                           
  6513                           ;LED_B1.c: 263: }
  6514                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  6515  044E  1D2C               	btfss	_PIRLED,2
  6516  044F  2C54               	goto	l3518
  6517                           
  6518                           ;LED_B1.c: 265: count = 6;
  6519  0450  3006               	movlw	6
  6520  0451  00D6               	movwf	??_setPIRLED_Main
  6521  0452  0856               	movf	??_setPIRLED_Main,w
  6522  0453  00D7               	movwf	setPIRLED_Main@count
  6523  0454                     l3518:	
  6524                           
  6525                           ;LED_B1.c: 266: }
  6526                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  6527  0454  1DAC               	btfss	_PIRLED,3
  6528  0455  2C5A               	goto	l3522
  6529                           
  6530                           ;LED_B1.c: 268: count = 8;
  6531  0456  3008               	movlw	8
  6532  0457  00D6               	movwf	??_setPIRLED_Main
  6533  0458  0856               	movf	??_setPIRLED_Main,w
  6534  0459  00D7               	movwf	setPIRLED_Main@count
  6535  045A                     l3522:	
  6536                           
  6537                           ;LED_B1.c: 269: }
  6538                           ;LED_B1.c: 270: PIRLED.Count++;
  6539  045A  3001               	movlw	1
  6540  045B  00D6               	movwf	??_setPIRLED_Main
  6541  045C  0856               	movf	??_setPIRLED_Main,w
  6542  045D  07AD               	addwf	_PIRLED+1,f
  6543                           
  6544                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  6545  045E  082D               	movf	_PIRLED+1,w
  6546  045F  3A01               	xorlw	1
  6547  0460  1903               	skipnz
  6548  0461  2C66               	goto	l3528
  6549  0462  082D               	movf	_PIRLED+1,w
  6550  0463  3A02               	xorlw	2
  6551  0464  1D03               	skipz
  6552  0465  2C7A               	goto	l3532
  6553  0466                     l3528:	
  6554                           
  6555                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6556  0466  1003               	clrc
  6557  0467  1E2C               	btfss	_PIRLED,4
  6558  0468  1403               	setc
  6559  0469  1C03               	btfss	3,0
  6560  046A  2C6F               	goto	u3740
  6561  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6562  046C  1303               	bcf	3,6	;RP1=0, select bank0
  6563  046D  162C               	bsf	_PIRLED,4
  6564  046E  2C72               	goto	l3530
  6565  046F                     u3740:	
  6566  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6567  0470  1303               	bcf	3,6	;RP1=0, select bank0
  6568  0471  122C               	bcf	_PIRLED,4
  6569  0472                     l3530:	
  6570                           
  6571                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  6572  0472  3000               	movlw	0
  6573  0473  1A2C               	btfsc	_PIRLED,4
  6574  0474  3001               	movlw	1
  6575  0475  00F6               	movwf	setLED@command
  6576  0476  3002               	movlw	2
  6577  0477  118A  23B2         	fcall	_setLED
  6578                           
  6579                           ;LED_B1.c: 274: } else {
  6580  0479  0008               	return
  6581  047A                     l3532:	
  6582                           
  6583                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6584  047A  1003               	clrc
  6585  047B  1283               	bcf	3,5	;RP0=0, select bank0
  6586  047C  1303               	bcf	3,6	;RP1=0, select bank0
  6587  047D  1E2C               	btfss	_PIRLED,4
  6588  047E  1403               	setc
  6589  047F  1C03               	btfss	3,0
  6590  0480  2C85               	goto	u3760
  6591  0481  1283               	bcf	3,5	;RP0=0, select bank0
  6592  0482  1303               	bcf	3,6	;RP1=0, select bank0
  6593  0483  162C               	bsf	_PIRLED,4
  6594  0484  2C88               	goto	l3534
  6595  0485                     u3760:	
  6596  0485  1283               	bcf	3,5	;RP0=0, select bank0
  6597  0486  1303               	bcf	3,6	;RP1=0, select bank0
  6598  0487  122C               	bcf	_PIRLED,4
  6599  0488                     l3534:	
  6600                           
  6601                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  6602  0488  3000               	movlw	0
  6603  0489  1A2C               	btfsc	_PIRLED,4
  6604  048A  3001               	movlw	1
  6605  048B  00F6               	movwf	setLED@command
  6606  048C  3001               	movlw	1
  6607  048D  118A  23B2  118A   	fcall	_setLED
  6608                           
  6609                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  6610  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0491  1303               	bcf	3,6	;RP1=0, select bank0
  6612  0492  082D               	movf	_PIRLED+1,w
  6613  0493  0657               	xorwf	setPIRLED_Main@count,w
  6614  0494  1D03               	skipz
  6615  0495  0008               	return
  6616                           
  6617                           ;LED_B1.c: 278: PIRLED.Count = 0;
  6618  0496  01AD               	clrf	_PIRLED+1
  6619  0497  0008               	return
  6620  0498                     __end_of_setPIRLED_Main:	
  6621                           
  6622                           	psect	text43
  6623  0F0E                     __ptext43:	
  6624 ;; *************** function _LED_Initialization *****************
  6625 ;; Defined at:
  6626 ;;		line 31 in file "../src/LED_B1.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;		None               void
  6633 ;; Registers used:
  6634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6640 ;;      Params:         0       0       0       0
  6641 ;;      Locals:         0       0       0       0
  6642 ;;      Temps:          0       0       0       0
  6643 ;;      Totals:         0       0       0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    5
  6647 ;; This function calls:
  6648 ;;		_setLED_Initialization
  6649 ;; This function is called by:
  6650 ;;		_main
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _LED_Initialization
  6656  0F0E                     _LED_Initialization:	
  6657                           
  6658                           ;LED_B1.c: 33: setLED_Initialization(1);
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6662  0F0E  3001               	movlw	1
  6663  0F0F  158A  2784  158A   	fcall	_setLED_Initialization
  6664                           
  6665                           ;LED_B1.c: 36: setLED_Initialization(2);
  6666  0F12  3002               	movlw	2
  6667  0F13  158A  2784  158A   	fcall	_setLED_Initialization
  6668                           
  6669                           ;LED_B1.c: 42: setLED_Initialization(99);
  6670  0F16  3063               	movlw	99
  6671  0F17  158A  2784         	fcall	_setLED_Initialization
  6672  0F19  0008               	return
  6673  0F1A                     __end_of_LED_Initialization:	
  6674                           
  6675                           	psect	text44
  6676  0F84                     __ptext44:	
  6677 ;; *************** function _setLED_Initialization *****************
  6678 ;; Defined at:
  6679 ;;		line 69 in file "../src/LED_B1.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  led             1    wreg     unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  led             1    1[BANK0 ] unsigned char 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;		None               void
  6686 ;; Registers used:
  6687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6693 ;;      Params:         0       0       0       0
  6694 ;;      Locals:         0       1       0       0
  6695 ;;      Temps:          0       0       0       0
  6696 ;;      Totals:         0       1       0       0
  6697 ;;Total ram usage:        1 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    4
  6700 ;; This function calls:
  6701 ;;		_LedPointSelect
  6702 ;;		_setLED
  6703 ;; This function is called by:
  6704 ;;		_LED_Initialization
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           
  6709                           ;psect for function _setLED_Initialization
  6710  0F84                     _setLED_Initialization:	
  6711                           
  6712                           ;incstack = 0
  6713                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6714                           ;setLED_Initialization@led stored from wreg
  6715  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0F86  00D6               	movwf	setLED_Initialization@led
  6718                           
  6719                           ;LED_B1.c: 70: LedPointSelect(led);
  6720  0F87  0856               	movf	setLED_Initialization@led,w
  6721  0F88  158A  27E6  158A   	fcall	_LedPointSelect
  6722                           
  6723                           ;LED_B1.c: 71: LED->Enable = 1;
  6724  0F8B  0877               	movf	_LED,w
  6725  0F8C  0084               	movwf	4
  6726  0F8D  1383               	bcf	3,7	;select IRP bank0
  6727  0F8E  1400               	bsf	0,0
  6728                           
  6729                           ;LED_B1.c: 72: setLED(led, 0);
  6730  0F8F  01F6               	clrf	setLED@command
  6731  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0F92  0856               	movf	setLED_Initialization@led,w
  6734  0F93  118A  23B2         	fcall	_setLED
  6735  0F95  0008               	return
  6736  0F96                     __end_of_setLED_Initialization:	
  6737                           
  6738                           	psect	text45
  6739  03B2                     __ptext45:	
  6740 ;; *************** function _setLED *****************
  6741 ;; Defined at:
  6742 ;;		line 76 in file "../src/LED_B1.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  led             1    wreg     unsigned char 
  6745 ;;  command         1    6[COMMON] unsigned char 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  led             1    0[BANK0 ] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;		None               void
  6750 ;; Registers used:
  6751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6757 ;;      Params:         1       0       0       0
  6758 ;;      Locals:         0       1       0       0
  6759 ;;      Temps:          0       0       0       0
  6760 ;;      Totals:         1       1       0       0
  6761 ;;Total ram usage:        2 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    3
  6764 ;; This function calls:
  6765 ;;		_LedPointSelect
  6766 ;; This function is called by:
  6767 ;;		_setLED_Initialization
  6768 ;;		_setPIRLED_Main
  6769 ;;		_setMain_Exception
  6770 ;;		_PIR_Initialization
  6771 ;;		_PIR_Main
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function _setLED
  6777  03B2                     _setLED:	
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6781                           ;setLED@led stored from wreg
  6782  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  6783  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  6784  03B4  00D5               	movwf	setLED@led
  6785                           
  6786                           ;LED_B1.c: 77: LedPointSelect(led);
  6787  03B5  0855               	movf	setLED@led,w
  6788  03B6  158A  27E6  118A   	fcall	_LedPointSelect
  6789                           
  6790                           ;LED_B1.c: 78: if (command == 0) {
  6791  03B9  08F6               	movf	setLED@command,f
  6792  03BA  1D03               	skipz
  6793  03BB  2BCA               	goto	l3332
  6794                           
  6795                           ;LED_B1.c: 80: if (led == 1) {
  6796  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6797  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6798  03BE  0855               	movf	setLED@led,w
  6799  03BF  3A01               	xorlw	1
  6800  03C0  1903               	btfsc	3,2
  6801                           
  6802                           ;LED_B1.c: 84: RB4 = 1;
  6803  03C1  1606               	bsf	6,4	;volatile
  6804                           
  6805                           ;LED_B1.c: 86: }
  6806                           ;LED_B1.c: 89: if (led == 2) {
  6807  03C2  0855               	movf	setLED@led,w
  6808  03C3  3A02               	xorlw	2
  6809  03C4  1903               	btfsc	3,2
  6810                           
  6811                           ;LED_B1.c: 93: RB5 = 1;
  6812  03C5  1686               	bsf	6,5	;volatile
  6813                           
  6814                           ;LED_B1.c: 95: }
  6815                           ;LED_B1.c: 107: if (led == 99) {
  6816  03C6  0855               	movf	setLED@led,w
  6817  03C7  3A63               	xorlw	99
  6818  03C8  1903               	btfsc	3,2
  6819                           
  6820                           ;LED_B1.c: 111: RB3 = 1;
  6821  03C9  1586               	bsf	6,3	;volatile
  6822  03CA                     l3332:	
  6823                           
  6824                           ;LED_B1.c: 113: }
  6825                           ;LED_B1.c: 115: }
  6826                           ;LED_B1.c: 116: if (command == 1) {
  6827  03CA  0876               	movf	setLED@command,w
  6828  03CB  3A01               	xorlw	1
  6829  03CC  1D03               	skipz
  6830  03CD  2BDC               	goto	l3346
  6831                           
  6832                           ;LED_B1.c: 118: if (led == 1) {
  6833  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6834  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6835  03D0  0855               	movf	setLED@led,w
  6836  03D1  3A01               	xorlw	1
  6837  03D2  1903               	btfsc	3,2
  6838                           
  6839                           ;LED_B1.c: 122: RB4 = 0;
  6840  03D3  1206               	bcf	6,4	;volatile
  6841                           
  6842                           ;LED_B1.c: 124: }
  6843                           ;LED_B1.c: 127: if (led == 2) {
  6844  03D4  0855               	movf	setLED@led,w
  6845  03D5  3A02               	xorlw	2
  6846  03D6  1903               	btfsc	3,2
  6847                           
  6848                           ;LED_B1.c: 131: RB5 = 0;
  6849  03D7  1286               	bcf	6,5	;volatile
  6850                           
  6851                           ;LED_B1.c: 133: }
  6852                           ;LED_B1.c: 145: if (led == 99) {
  6853  03D8  0855               	movf	setLED@led,w
  6854  03D9  3A63               	xorlw	99
  6855  03DA  1903               	btfsc	3,2
  6856                           
  6857                           ;LED_B1.c: 149: RB3 = 0;
  6858  03DB  1186               	bcf	6,3	;volatile
  6859  03DC                     l3346:	
  6860                           
  6861                           ;LED_B1.c: 151: }
  6862                           ;LED_B1.c: 153: }
  6863                           ;LED_B1.c: 154: if (command == 10) {
  6864  03DC  0876               	movf	setLED@command,w
  6865  03DD  3A0A               	xorlw	10
  6866  03DE  1D03               	skipz
  6867  03DF  2BF9               	goto	l3364
  6868                           
  6869                           ;LED_B1.c: 155: LED->GO = 0;
  6870  03E0  0877               	movf	_LED,w
  6871  03E1  0084               	movwf	4
  6872  03E2  1383               	bcf	3,7	;select IRP bank0
  6873  03E3  1080               	bcf	0,1
  6874                           
  6875                           ;LED_B1.c: 156: LED->Time = 0;
  6876  03E4  0A77               	incf	_LED,w
  6877  03E5  0084               	movwf	4
  6878  03E6  0180               	clrf	0
  6879  03E7  0A84               	incf	4,f
  6880  03E8  0180               	clrf	0
  6881                           
  6882                           ;LED_B1.c: 158: if (led == 1) {
  6883  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  6884  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  6885  03EB  0855               	movf	setLED@led,w
  6886  03EC  3A01               	xorlw	1
  6887  03ED  1D03               	skipz
  6888  03EE  2BF1               	goto	l3356
  6889                           
  6890                           ;LED_B1.c: 162: RB4 = 1;
  6891  03EF  1606               	bsf	6,4	;volatile
  6892                           
  6893                           ;LED_B1.c: 164: }
  6894  03F0  2BF5               	goto	l3360
  6895  03F1                     l3356:	
  6896                           
  6897                           ;LED_B1.c: 167: else if (led == 2) {
  6898  03F1  0855               	movf	setLED@led,w
  6899  03F2  3A02               	xorlw	2
  6900  03F3  1903               	btfsc	3,2
  6901                           
  6902                           ;LED_B1.c: 171: RB5 = 1;
  6903  03F4  1686               	bsf	6,5	;volatile
  6904  03F5                     l3360:	
  6905                           
  6906                           ;LED_B1.c: 173: }
  6907                           ;LED_B1.c: 185: if (led == 99) {
  6908  03F5  0855               	movf	setLED@led,w
  6909  03F6  3A63               	xorlw	99
  6910  03F7  1903               	btfsc	3,2
  6911                           
  6912                           ;LED_B1.c: 189: RB3 = 1;
  6913  03F8  1586               	bsf	6,3	;volatile
  6914  03F9                     l3364:	
  6915                           
  6916                           ;LED_B1.c: 191: }
  6917                           ;LED_B1.c: 193: }
  6918                           ;LED_B1.c: 194: if (command == 11) {
  6919  03F9  0876               	movf	setLED@command,w
  6920  03FA  3A0B               	xorlw	11
  6921  03FB  1D03               	skipz
  6922  03FC  2C01               	goto	l3368
  6923                           
  6924                           ;LED_B1.c: 195: LED->GO = 1;
  6925  03FD  0877               	movf	_LED,w
  6926  03FE  0084               	movwf	4
  6927  03FF  1383               	bcf	3,7	;select IRP bank0
  6928  0400  1480               	bsf	0,1
  6929  0401                     l3368:	
  6930                           
  6931                           ;LED_B1.c: 196: }
  6932                           ;LED_B1.c: 198: if (command == 111) {
  6933  0401  0876               	movf	setLED@command,w
  6934  0402  3A6F               	xorlw	111
  6935  0403  1D03               	skipz
  6936  0404  2C21               	goto	l3394
  6937                           
  6938                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6939  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6940  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0407  01AD               	clrf	_PIRLED+1
  6942                           
  6943                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6944  0408  01AE               	clrf	_PIRLED+2
  6945  0409  01AF               	clrf	_PIRLED+3
  6946                           
  6947                           ;LED_B1.c: 201: PIRLED.status = 0;
  6948  040A  122C               	bcf	_PIRLED,4
  6949                           
  6950                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6951  040B  142C               	bsf	_PIRLED,0
  6952                           
  6953                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6954  040C  10AC               	bcf	_PIRLED,1
  6955                           
  6956                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6957  040D  112C               	bcf	_PIRLED,2
  6958                           
  6959                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6960  040E  11AC               	bcf	_PIRLED,3
  6961                           
  6962                           ;LED_B1.c: 206: if (led == 1) {
  6963  040F  0855               	movf	setLED@led,w
  6964  0410  3A01               	xorlw	1
  6965  0411  1D03               	skipz
  6966  0412  2C15               	goto	l3386
  6967                           
  6968                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6969  0413  14AC               	bsf	_PIRLED,1
  6970                           
  6971                           ;LED_B1.c: 208: } else if (led == 2) {
  6972  0414  0008               	return
  6973  0415                     l3386:	
  6974  0415  0855               	movf	setLED@led,w
  6975  0416  3A02               	xorlw	2
  6976  0417  1D03               	skipz
  6977  0418  2C1B               	goto	l3390
  6978                           
  6979                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6980  0419  152C               	bsf	_PIRLED,2
  6981                           
  6982                           ;LED_B1.c: 210: } else if (led == 3) {
  6983  041A  0008               	return
  6984  041B                     l3390:	
  6985  041B  0855               	movf	setLED@led,w
  6986  041C  3A03               	xorlw	3
  6987  041D  1D03               	skipz
  6988  041E  0008               	return
  6989                           
  6990                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6991  041F  15AC               	bsf	_PIRLED,3
  6992                           
  6993                           ;LED_B1.c: 212: }
  6994                           ;LED_B1.c: 213: } else if (command == 110) {
  6995  0420  0008               	return
  6996  0421                     l3394:	
  6997  0421  0876               	movf	setLED@command,w
  6998  0422  3A6E               	xorlw	110
  6999  0423  1D03               	skipz
  7000  0424  0008               	return
  7001                           
  7002                           ;LED_B1.c: 214: PIRLED.GO = 0;
  7003  0425  1283               	bcf	3,5	;RP0=0, select bank0
  7004  0426  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0427  102C               	bcf	_PIRLED,0
  7006  0428  0008               	return
  7007  0429                     __end_of_setLED:	
  7008                           
  7009                           	psect	text46
  7010  0FE6                     __ptext46:	
  7011 ;; *************** function _LedPointSelect *****************
  7012 ;; Defined at:
  7013 ;;		line 7 in file "../src/LED_B1.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  led             1    wreg     unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  led             1    5[COMMON] unsigned char 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;		None               void
  7020 ;; Registers used:
  7021 ;;		wreg
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7027 ;;      Params:         0       0       0       0
  7028 ;;      Locals:         1       0       0       0
  7029 ;;      Temps:          1       0       0       0
  7030 ;;      Totals:         2       0       0       0
  7031 ;;Total ram usage:        2 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    2
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_setLED_Initialization
  7038 ;;		_setLED
  7039 ;;		_setLED_Main
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           
  7044                           ;psect for function _LedPointSelect
  7045  0FE6                     _LedPointSelect:	
  7046                           
  7047                           ;incstack = 0
  7048                           ; Regs used in _LedPointSelect: [wreg]
  7049                           ;LedPointSelect@led stored from wreg
  7050  0FE6  00F5               	movwf	LedPointSelect@led
  7051                           
  7052                           ;LED_B1.c: 9: if (led == 1) {
  7053  0FE7  0875               	movf	LedPointSelect@led,w
  7054  0FE8  3A01               	xorlw	1
  7055  0FE9  1D03               	skipz
  7056  0FEA  2FEF               	goto	l220
  7057                           
  7058                           ;LED_B1.c: 10: LED = &VarLED1;
  7059  0FEB  304D               	movlw	_VarLED1& (0+255)
  7060  0FEC  00F4               	movwf	??_LedPointSelect
  7061  0FED  0874               	movf	??_LedPointSelect,w
  7062  0FEE  00F7               	movwf	_LED
  7063  0FEF                     l220:	
  7064                           
  7065                           ;LED_B1.c: 11: }
  7066                           ;LED_B1.c: 14: if (led == 2) {
  7067  0FEF  0875               	movf	LedPointSelect@led,w
  7068  0FF0  3A02               	xorlw	2
  7069  0FF1  1D03               	skipz
  7070  0FF2  2FF7               	goto	l221
  7071                           
  7072                           ;LED_B1.c: 15: LED = &VarLED2;
  7073  0FF3  3051               	movlw	_VarLED2& (0+255)
  7074  0FF4  00F4               	movwf	??_LedPointSelect
  7075  0FF5  0874               	movf	??_LedPointSelect,w
  7076  0FF6  00F7               	movwf	_LED
  7077  0FF7                     l221:	
  7078                           
  7079                           ;LED_B1.c: 16: }
  7080                           ;LED_B1.c: 24: if (led == 99) {
  7081  0FF7  0875               	movf	LedPointSelect@led,w
  7082  0FF8  3A63               	xorlw	99
  7083  0FF9  1D03               	skipz
  7084  0FFA  0008               	return
  7085                           
  7086                           ;LED_B1.c: 25: LED = &VarErrLED;
  7087  0FFB  3049               	movlw	_VarErrLED& (0+255)
  7088  0FFC  00F4               	movwf	??_LedPointSelect
  7089  0FFD  0874               	movf	??_LedPointSelect,w
  7090  0FFE  00F7               	movwf	_LED
  7091  0FFF  0008               	return
  7092  1000                     __end_of_LedPointSelect:	
  7093                           
  7094                           	psect	text47
  7095  06A3                     __ptext47:	
  7096 ;; *************** function _CDS_Main *****************
  7097 ;; Defined at:
  7098 ;;		line 11 in file "../src/CDS_B1.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;		None               void
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7112 ;;      Params:         0       0       0       0
  7113 ;;      Locals:         0       0       0       0
  7114 ;;      Temps:          3       0       0       0
  7115 ;;      Totals:         3       0       0       0
  7116 ;;Total ram usage:        3 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    2
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _CDS_Main
  7128  06A3                     _CDS_Main:	
  7129                           
  7130                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7131                           
  7132                           ;incstack = 0
  7133                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7134  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  7135  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  7136  06A5  1C27               	btfss	__CDS,0
  7137  06A6  0008               	return
  7138                           
  7139                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7140  06A7  18A7               	btfsc	__CDS,1
  7141  06A8  2EB6               	goto	l99
  7142                           
  7143                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7144  06A9  19A7               	btfsc	__CDS,3
  7145  06AA  0008               	return
  7146                           
  7147                           ;CDS_B1.c: 16: _CDS.Time++;
  7148  06AB  3001               	movlw	1
  7149  06AC  00F4               	movwf	??_CDS_Main
  7150  06AD  0874               	movf	??_CDS_Main,w
  7151  06AE  07A8               	addwf	__CDS+1,f
  7152                           
  7153                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  7154  06AF  300A               	movlw	10
  7155  06B0  0228               	subwf	__CDS+1,w
  7156  06B1  1C03               	skipc
  7157  06B2  0008               	return
  7158                           
  7159                           ;CDS_B1.c: 18: {
  7160                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7161  06B3  01A8               	clrf	__CDS+1
  7162                           
  7163                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7164  06B4  15A7               	bsf	__CDS,3
  7165                           
  7166                           ;CDS_B1.c: 21: }
  7167                           ;CDS_B1.c: 22: }
  7168                           ;CDS_B1.c: 23: } else {
  7169  06B5  0008               	return
  7170  06B6                     l99:	
  7171                           
  7172                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7173  06B6  1CA7               	btfss	__CDS,1
  7174  06B7  0008               	return
  7175                           
  7176                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7177  06B8  10A7               	bcf	__CDS,1
  7178                           
  7179                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7180  06B9  1A27               	btfsc	__CDS,4
  7181  06BA  2EC1               	goto	l2894
  7182                           
  7183                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7184  06BB  0829               	movf	__CDS+2,w
  7185  06BC  022A               	subwf	__CDS+3,w
  7186  06BD  1C03               	skipc
  7187  06BE  0008               	return
  7188                           
  7189                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7190  06BF  1627               	bsf	__CDS,4
  7191                           
  7192                           ;CDS_B1.c: 29: }
  7193                           ;CDS_B1.c: 30: } else {
  7194  06C0  0008               	return
  7195  06C1                     l2894:	
  7196                           
  7197                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7198  06C1  0829               	movf	__CDS+2,w
  7199  06C2  3E9C               	addlw	156
  7200  06C3  00F4               	movwf	??_CDS_Main
  7201  06C4  30FF               	movlw	255
  7202  06C5  1803               	skipnc
  7203  06C6  3000               	movlw	0
  7204  06C7  00F5               	movwf	??_CDS_Main+1
  7205  06C8  0875               	movf	??_CDS_Main+1,w
  7206  06C9  3A80               	xorlw	128
  7207  06CA  00F6               	movwf	??_CDS_Main+2
  7208  06CB  3080               	movlw	128
  7209  06CC  0276               	subwf	??_CDS_Main+2,w
  7210  06CD  1D03               	skipz
  7211  06CE  2ED1               	goto	u2685
  7212  06CF  082A               	movf	__CDS+3,w
  7213  06D0  0274               	subwf	??_CDS_Main,w
  7214  06D1                     u2685:	
  7215  06D1  1C03               	skipc
  7216  06D2  0008               	return
  7217                           
  7218                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7219  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  7220  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  7221  06D5  1227               	bcf	__CDS,4
  7222  06D6  0008               	return
  7223  06D7                     __end_of_CDS_Main:	
  7224                           
  7225                           	psect	text48
  7226  0ECA                     __ptext48:	
  7227 ;; *************** function _CDS_Initialization *****************
  7228 ;; Defined at:
  7229 ;;		line 7 in file "../src/CDS_B1.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;		None
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;		None               void
  7236 ;; Registers used:
  7237 ;;		None
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7243 ;;      Params:         0       0       0       0
  7244 ;;      Locals:         0       0       0       0
  7245 ;;      Temps:          0       0       0       0
  7246 ;;      Totals:         0       0       0       0
  7247 ;;Total ram usage:        0 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    2
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_main
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           
  7258                           ;psect for function _CDS_Initialization
  7259  0ECA                     _CDS_Initialization:	
  7260                           
  7261                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in _CDS_Initialization: []
  7265  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  7266  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  7267  0ECC  1427               	bsf	__CDS,0
  7268  0ECD  0008               	return
  7269  0ECE                     __end_of_CDS_Initialization:	
  7270                           
  7271                           	psect	text49
  7272  0F52                     __ptext49:	
  7273 ;; *************** function _ISR *****************
  7274 ;; Defined at:
  7275 ;;		line 107 in file "../src/MCU_B1.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;		None               void
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, pclath, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7289 ;;      Params:         0       0       0       0
  7290 ;;      Locals:         0       0       0       0
  7291 ;;      Temps:          4       0       0       0
  7292 ;;      Totals:         4       0       0       0
  7293 ;;Total ram usage:        4 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    1
  7296 ;; This function calls:
  7297 ;;		_TMR1_ISR
  7298 ;; This function is called by:
  7299 ;;		Interrupt level 1
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function _ISR
  7305  0F52                     _ISR:	
  7306                           
  7307                           ;MCU_B1.c: 109: ;;
  7308                           ;MCU_B1.c: 111: ;;
  7309                           ;MCU_B1.c: 113: TMR1_ISR();
  7310  0F52  118A  27BD  158A   	fcall	_TMR1_ISR
  7311  0F55  0873               	movf	??_ISR+3,w
  7312  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  7314  0F58  00FF               	movwf	127
  7315  0F59  0872               	movf	??_ISR+2,w
  7316  0F5A  008A               	movwf	10
  7317  0F5B  0871               	movf	??_ISR+1,w
  7318  0F5C  0084               	movwf	4
  7319  0F5D  0E70               	swapf	??_ISR^(0+-128),w
  7320  0F5E  0083               	movwf	3
  7321  0F5F  0EFE               	swapf	126,f
  7322  0F60  0E7E               	swapf	126,w
  7323  0F61  0009               	retfie
  7324  0F62                     __end_of_ISR:	
  7325                           
  7326                           	psect	intentry
  7327  0004                     __pintentry:	
  7328                           ;incstack = 0
  7329                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7330                           
  7331  0004                     interrupt_function:	
  7332  007E                     saved_w	set	btemp
  7333  0004  00FE               	movwf	btemp
  7334  0005  0E03               	swapf	3,w
  7335  0006  00F0               	movwf	??_ISR
  7336  0007  0804               	movf	4,w
  7337  0008  00F1               	movwf	??_ISR+1
  7338  0009  080A               	movf	10,w
  7339  000A  00F2               	movwf	??_ISR+2
  7340  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7341  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7342  000D  087F               	movf	btemp+1,w
  7343  000E  00F3               	movwf	??_ISR+3
  7344  000F  158A  2F52         	ljmp	_ISR
  7345                           
  7346                           	psect	text50
  7347  07BD                     __ptext50:	
  7348 ;; *************** function _TMR1_ISR *****************
  7349 ;; Defined at:
  7350 ;;		line 209 in file "../src/MCU_B1.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;		None               void
  7357 ;; Registers used:
  7358 ;;		wreg, status,2
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7364 ;;      Params:         0       0       0       0
  7365 ;;      Locals:         0       0       0       0
  7366 ;;      Temps:          0       0       0       0
  7367 ;;      Totals:         0       0       0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_ISR
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _TMR1_ISR
  7379  07BD                     _TMR1_ISR:	
  7380                           
  7381                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7385  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  7386  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  7387  07BF  1C0C               	btfss	12,0	;volatile
  7388  07C0  0008               	return
  7389  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7390  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7391  07C3  1C0C               	btfss	12,0	;volatile
  7392  07C4  0008               	return
  7393                           
  7394                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  7395  07C5  30FA               	movlw	250
  7396  07C6  008F               	movwf	15	;volatile
  7397                           
  7398                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  7399  07C7  3038               	movlw	56
  7400  07C8  008E               	movwf	14	;volatile
  7401                           
  7402                           ;MCU_B1.c: 214: TMR1IF = 0;
  7403  07C9  100C               	bcf	12,0	;volatile
  7404                           
  7405                           ;MCU_B1.c: 234: Timer1.Count++;
  7406  07CA  3001               	movlw	1
  7407  07CB  07B1               	addwf	_Timer1+1,f
  7408  07CC  1803               	skipnc
  7409  07CD  0AB2               	incf	_Timer1+2,f
  7410  07CE  3000               	movlw	0
  7411  07CF  07B2               	addwf	_Timer1+2,f
  7412                           
  7413                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  7414  07D0  3064               	movlw	100
  7415  07D1  0631               	xorwf	_Timer1+1,w
  7416  07D2  0432               	iorwf	_Timer1+2,w
  7417  07D3  1D03               	skipz
  7418  07D4  0008               	return
  7419                           
  7420                           ;MCU_B1.c: 236: {
  7421                           ;MCU_B1.c: 237: Timer1.Count = 0;
  7422  07D5  01B1               	clrf	_Timer1+1
  7423  07D6  01B2               	clrf	_Timer1+2
  7424                           
  7425                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  7426  07D7  1430               	bsf	_Timer1,0
  7427  07D8  0008               	return
  7428  07D9                     __end_of_TMR1_ISR:	
  7429  007E                     btemp	set	126	;btemp
  7430  007E                     wtemp	set	126
  7431  007E                     wtemp0	set	126
  7432  0080                     wtemp1	set	128
  7433  0082                     wtemp2	set	130
  7434  0084                     wtemp3	set	132
  7435  0086                     wtemp4	set	134
  7436  0088                     wtemp5	set	136
  7437  007F                     wtemp6	set	127
  7438  007E                     ttemp	set	126
  7439  007E                     ttemp0	set	126
  7440  0081                     ttemp1	set	129
  7441  0084                     ttemp2	set	132
  7442  0087                     ttemp3	set	135
  7443  007F                     ttemp4	set	127
  7444  007E                     ltemp	set	126
  7445  007E                     ltemp0	set	126
  7446  0082                     ltemp1	set	130
  7447  0086                     ltemp2	set	134
  7448  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     22      75
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setTemp_Main->_getMain_LightsStatus
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Trigger
    _setMain_Exception->_getAll_Lights_Line
    _setMain_Exception->_setLED
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Control
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _setPIRLED_Main->_setLED
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _PIR_Initialization->_setLED
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   20853
                                             17 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     520
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2377
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     661
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     489
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1314
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1314
                                              8 BANK0      1     1      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    6808
                                              9 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3363
                                              2 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      68
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     184
                                              5 COMMON     1     1      0
                                              0 BANK0      6     6      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2658
                                              1 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     942
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     549
                                              3 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     425
                                              0 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     269
                                              6 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     269
                                              6 COMMON     1     1      0
                                              2 BANK0      4     4      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2698
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2698
                                              1 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2813
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2813
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2658
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      84      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Nov 28 15:59:11 2014

                     _WDT_Clearing 0002                                 l99 06B6  
                     ___awdiv@sign 005A                                 fsr 0004  
                              l220 0FEF                                l221 0FF7  
                              l554 0681                                l722 01EC  
                              l555 06A1                                l723 004D  
                              l559 069D                                l655 03AE  
                              l728 0078                                l729 008E  
                              l668 03AB                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0077                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0F52  
                              _PSA 040B                                _WDT 0033  
           getAll_Lights_Line@line 0076                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0EE9  
        __end_of_LightsPointSelect 0F03             _setMain_Exception$2057 005B  
                 _getLights_Status 0F62            __size_of_Lights_Control 0057  
                             ?_ISR 0070                               l4010 057E  
                             l4004 0562                               l3046 0793  
                             l3332 03CA                               l3422 06FD  
                             l3360 03F5                               l3424 06DF  
                             l2544 067D                               l2632 07B7  
                             l3346 03DC                               l3530 0472  
                             l3522 045A                               l3514 044E  
                             l3426 0704                               l3442 05CB  
                             l2554 0697                               l2546 0685  
                             l2626 07AE                               l3356 03F1  
                             l3364 03F9                               l3532 047A  
                             l2628 07B1                               l3390 041B  
                             l3534 0488                               l3518 0454  
                             l3446 05E6                               l3606 039B  
                             l3368 0401                               l3528 0466  
                             l3560 0661                               l3464 04AF  
                             l3616 03AA                               l3386 0415  
                             l3394 0421                               l3634 0753  
                             l3554 064F                               l3546 063B  
                             l3490 04EE                               l3482 04DB  
                             l3474 04B7                               l3458 04A4  
                             l3802 031E                               l3730 0776  
                             l3652 052D                               l3476 04C5  
                             l3558 0657                               l3902 00D3  
                             l3486 04E6                               l3590 0380  
                             l3574 0345                               l3750 0253  
                             l3904 00D4                               l3680 05F8  
                             l3808 032C                               l3752 0257  
                             l3922 0134                               l3914 0120  
                             l3682 0606                               l3754 025B  
                             l3746 024D                               l3762 0268  
                             l3932 0169                               l3692 0627  
                             l3772 028C                               l3756 025F  
                             l3764 0279                               l2894 06C1  
                             l3854 007B                               l3758 0263  
                             l3936 0199                               l3688 061C  
                             l3938 01A4                               l3794 02F2  
                             l3778 02A8                               l3948 01BE  
                             l3788 02D6                               l3886 00B0  
                             l3898 00C7              _myMain_Initialization 0EC0  
                     __CFG_WDTE$ON 0000                               u4040 0529  
                             u4105 05FB                               u4125 0607  
                             u4135 0613                               u4145 061D  
                             u3525 06E8                               u3605 04BA  
                             u4505 0152                               u3625 04C6  
                             u3635 04D2                               u1875 0FB6  
                             _PEIE 005E                               u3740 046F  
                             u2685 06D1                               u4525 018F  
                             u3645 04DC                               u3760 0485  
                             u4545 01B4                               u4475 00F4  
                             u4485 0118                               u4575 01DB  
                             __CDS 0027                               __PIR 00A0  
                             _Temp 0036                               _main 054C  
                             btemp 007E                    __end_of_WDT_Set 0F43  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 06D7       __size_of_Temp_Initialization 0003  
                            ??_ISR 0070                  _setLights_Trigger 07D9  
                    ??_Lights_Main 0077                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0EC4                 ?_setLights_Trigger 0076  
                 ??_setPIRLED_Main 0056                              ?_main 0066  
                  __end_of___awdiv 04F5                              _ADRES 001E  
                  ___awdiv@divisor 0055                              _T1CON 0010  
                  __end_of___lwdiv 062E                      ?_Lights_Close 0070  
                  ___awdiv@counter 0059                              _TMR1H 000F  
                            _TMR1L 000E                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087               setMain_Exception@buz 0059  
          __end_of_Timeout_Counter 0FBC                ??_setLights_Trigger 0055  
                 __end_of_PIR_Main 01F4                   __end_of_TMR1_ISR 07D9  
                 __end_of_TMR1_Set 0F35                              _getAD 07A1  
                 __end_of_WDT_Main 0F84                      _LightsControl 0035  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 0708  
    __end_of_setLED_Initialization 0F96                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0061                  getPIR_AD@channel2 0076  
                   _setLights_Main 0732                     _setLights_Line 07F4  
                  __initialization 0013          __end_of_setLights_Trigger 07F4  
                     __end_of_main 059D                   __end_of_Fosc_Set 0EDC  
                        ??_ADC_Set 0074                             ??_main 006A  
                   ??_Lights_Close 005B                __end_of_Lights_Main 0F0E  
       __size_of_LightsPointSelect 000A                             ?_getAD 0074  
           ?_myMain_Initialization 0070                             _ADCON0 001F  
                           _ADCON1 009F                   ___awdiv@dividend 0057  
                        ??_WDT_Set 0074                             _ANSELA 0185  
                           _ANSELB 0186           _getMain_All_Error_Status 066D  
                           _FVRCON 009D             getLights_Status@lights 0055  
                           _PIRLED 002C                             _OSCCON 0090  
                           _TMR1IE 0460                             _TMR1IF 0060  
                           _IO_Set 0FD1             getLights_Status@status 0056  
           __end_of_setLights_Main 075A             __end_of_setLights_Line 0800  
       __end_of_Mcu_Initialization 0F52                             _Lights 0078  
                           _Timer1 0030        __size_of_CDS_Initialization 0004  
          ??_Lights_Initialization 0077                          ??___awdiv 0074  
                        ??___lwdiv 0074                             _setLED 03B2  
                           _myMain 0020                   ___awdiv@quotient 005B  
               __size_of_Temp_Main 0003                             saved_w 007E  
                 ?_Timeout_Counter 0070                     _Lights_Control 04F5  
          __size_of_LedPointSelect 001A                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 0012         getMain_LightsStatus@status 005A  
          __end_of__initialization 0022                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070         __size_of_setLights_Trigger 001B  
                   __pcstackCOMMON 0070                 __size_of_getCDS_AD 002A  
         __end_of_getLights_Status 0F73                      __end_of_getAD 07BD  
                        ?_PIR_Main 0070                          ?_TMR1_ISR 0070  
                        ?_TMR1_Set 0070                 _LED_Initialization 0F0E  
               __size_of_getPIR_AD 013A                        _Lights_Main 0F03  
         _setLights_Initialization 0ED2                          ?_WDT_Main 0070  
             _getMain_LightsStatus 06D7         __end_of_set_TimeoutCleared 0EE2  
              ?_LED_Initialization 0070             __end_of_Lights_Control 054C  
            getMain_LightsStatus@i 0058                            ??_getAD 0075  
              _Temp_Initialization 0EC4                         ??_CDS_Main 0074  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                        ?_Fosc_Set 0070        __size_of_getAll_Lights_Line 000D  
                __end_of_Temp_Main 0ECA                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0074  
                       ??_LED_Main 0077               __end_of_Lights_Close 0FD1  
        getMain_LightsStatus@count 0057               ??_LED_Initialization 0077  
                LedPointSelect@led 0075                         __pmaintext 054C  
             ?_Temp_Initialization 0070                         ??_PIR_Main 005E  
                       ??_TMR1_ISR 0070                      ?_setTemp_Main 0070  
               __size_of_setLights 0051                         ??_TMR1_Set 0074  
                       __pintentry 0004                            ?_setLED 0076  
          setLights_Trigger@lights 0056                            _ADC_Set 0EE2  
                       _getTemp_AD 075A                         ??_WDT_Main 0074  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 0732  
                          _WDT_Set 0F35                         ??_Fosc_Set 0074  
                __end_of_getPIR_AD 032E                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0057                         getCDS_AD@j 0058  
                          _Lights1 0042                            _VarLED1 004D  
                          _VarLED2 0051              ??_Temp_Initialization 0074  
                   ??_setTemp_Main 005D                            ___awdiv 0498  
                          ___lwdiv 05EE                    __size_of_setLED 0077  
                          __ptext0 0000                            __ptext1 077F  
                          __ptext2 0EC0                            __ptext3 075A  
                          __ptext4 01F4                            __ptext5 05EE  
                          __ptext6 0708                            __ptext7 07A1  
                          __ptext8 0EDC                            __ptext9 0FA8  
                       getPIR_AD@i 0062                         getPIR_AD@j 0060  
                     __size_of_ISR 0010         ??_getMain_All_Error_Status 0075  
          ??_myMain_Initialization 0074           ??_setTemp_Initialization 0074  
                   _LedPointSelect 0FE6                            clrloop0 0EF2  
                __end_of_setLights 05EE               end_of_initialization 0022  
                    _getCDS_Status 0EE9              _setLED_Initialization 0F84  
   __size_of_Lights_Initialization 0004      __end_of_Lights_Initialization 0ED2  
           ??_getMain_LightsStatus 0076                        ?_getTemp_AD 0070  
         setLED_Initialization@led 0056                 _Mcu_Initialization 0F43  
             __end_of_my_MainTimer 07A1             __end_of_LedPointSelect 1000  
              setPIRLED_Main@count 0057                ?_Mcu_Initialization 0070  
            __size_of_Lights_Close 0015            __size_of_setPIRLED_Main 006F  
                 ??_setLights_Main 0077                   ??_setLights_Line 0076  
             setLights_Main@lights 0058    getMain_All_Error_Status@command 0059  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0070  
                   __end_of_IO_Set 0FE6         __end_of_CDS_Initialization 0ECE  
       ??_setLights_Initialization 0076                  __size_of_LED_Main 0003  
                _setMain_Exception 062E               ??_Mcu_Initialization 0075  
                    ?_WDT_Clearing 0070                 ?_setMain_Exception 0070  
                ?_getLights_Status 0070           setMain_Exception@command 005D  
                     ?_Lights_Main 0070                  __size_of_PIR_Main 01CF  
                __size_of_TMR1_ISR 001C                 ??_getLights_Status 0076  
                __size_of_TMR1_Set 000E                     __end_of_setLED 0429  
              ??_setMain_Exception 0057                       _Lights_Close 0FBC  
                __size_of_WDT_Main 0011                start_initialization 0013  
                  ?_LedPointSelect 0070               setLights_Line@lights 0076  
                      __end_of_ISR 0F62         __end_of_PIR_Initialization 0FA8  
  __size_of_setTemp_Initialization 0001                getCDS_Status@status 0074  
             __end_of_setTemp_Main 03B2                 _set_TimeoutCleared 0EDC  
                         ??_IO_Set 0074           __size_of_Timeout_Counter 0014  
                        _VarErrLED 0049                __size_of_getTemp_AD 0025  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_setMain_Exception 066D                          _Temp_Main 0EC7  
                  setLights@lights 0057                ?_set_TimeoutCleared 0070  
                   ??_WDT_Clearing 0074                    setLights@status 0055  
                         ??_setLED 0077                           ?_ADC_Set 0070  
                 ??_Lights_Control 0055   __end_of_getMain_All_Error_Status 06A3  
                      __pbssCOMMON 0077                          ___latbits 0001  
                    __pcstackBANK0 0055               ??_set_TimeoutCleared 0074  
       __end_of_getAll_Lights_Line 0F27                           ?_WDT_Set 0070  
                  ??_getCDS_Status 0074                      PIR_Main@error 0065  
                        _getCDS_AD 0708                          _getPIR_AD 01F4  
      __size_of_LED_Initialization 000C                         ?_Temp_Main 0070  
                 ___lwdiv@dividend 0057             _setTemp_Initialization 0EBF  
                    _PIR_Main$2728 0063                           ?___awdiv 0055  
            __size_of_my_MainTimer 0022                           ?___lwdiv 0055  
         setLights_Trigger@command 0076     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0EC1                     __size_of_getAD 001C  
                 ___lwdiv@quotient 005A                     _setPIRLED_Main 0429  
                         _CDS_Main 06A3        __end_of_Temp_Initialization 0EC7  
                interrupt_function 0004                         ?_getCDS_AD 0076  
                         _LED_Main 0EC1                          _setLights 059D  
                        clear_ram0 0EF1   __end_of_setLights_Initialization 0ED7  
       __size_of_setMain_Exception 003F                       _my_MainTimer 077F  
                       ?_getPIR_AD 0076                           _GO_nDONE 00F9  
                ??_Timeout_Counter 0074                           _PIR_Main 0025  
                         _TMR1_ISR 07BD                           _TMR1_Set 0F27  
                     ??_getTemp_AD 0055                           _WDT_Main 0F73  
                 __size_of_ADC_Set 0007               __size_of_Lights_Main 000B  
            __size_of_setTemp_Main 0084             __end_of_setPIRLED_Main 0498  
   getMain_All_Error_Status@status 005A                        getAD@adcon0 0075  
                      getAD@adcon1 0074               __end_of_WDT_Clearing 0004  
                         _Fosc_Set 0ED7                   __size_of_WDT_Set 000E  
          setMain_Exception@status 005A  __size_of_getMain_All_Error_Status 0036  
        ?_getMain_All_Error_Status 0070                         ?_setLights 0055  
               __end_of_getTemp_AD 077F                           _SwDetect 0079  
                      ??_Temp_Main 0077      _getMain_All_Error_Status$2073 0055  
    _getMain_All_Error_Status$2075 0057                          setLED@led 0055  
                     _setTemp_Main 032E                   __size_of___awdiv 005D  
                 __size_of___lwdiv 0040                   ??_LedPointSelect 0074  
               _CDS_Initialization 0ECA              _Lights_Initialization 0ECE  
    __size_of_getMain_LightsStatus 0031                  getTemp_AD@channel 0076  
                  ?_setPIRLED_Main 0070                    ___lwdiv@divisor 0055  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 0059  
                         __ptext10 0F73                           __ptext11 0002  
                         __ptext20 0F1A                           __ptext12 0EC7  
                         __ptext21 066D                           __ptext13 032E  
                         __ptext30 0F03                           __ptext22 0EE9  
                         __ptext14 0498                           __ptext31 0732  
                         __ptext23 0F96                           __ptext15 0EC4  
                         __ptext40 0EF9                           __ptext32 059D  
                         __ptext24 0F43                           __ptext16 0EBF  
                         __ptext41 0EC1                           __ptext33 07F4  
                         __ptext25 0F35                           __ptext17 0025  
                         __ptext50 07BD                           __ptext42 0429  
                         __ptext34 04F5                           __ptext26 0F27  
                         __ptext18 062E                           __ptext43 0F0E  
                         __ptext35 0FBC                           __ptext27 0FD1  
                         __ptext19 07D9                           __ptext44 0F84  
                         __ptext36 06D7                           __ptext28 0ED7  
                         __ptext45 03B2                           __ptext37 0F62  
                         __ptext29 0EE2                           __ptext46 0FE6  
                         __ptext38 0ECE                           __ptext47 06A3  
                         __ptext39 0ED2                           __ptext48 0ECA  
                         __ptext49 0F52          __size_of_getLights_Status 0011  
          ??_setLED_Initialization 0077                        ??_getCDS_AD 0055  
                    setLED@command 0076                      __size_of_main 0051  
                      ??_getPIR_AD 005D                 _PIR_Initialization 0F96  
             ??_CDS_Initialization 0074        __size_of_Mcu_Initialization 000F  
              ?_PIR_Initialization 0070                           main@argc 0066  
                         main@argv 0068  __size_of_setLights_Initialization 0005  
        ?_setLights_Initialization 0070               Lights_Control@lights 0076  
             ??_PIR_Initialization 0056                           intlevel1 0000  
                      ??_setLights 0056            ?_setTemp_Initialization 0070  
          LightsPointSelect@lights 0075                 _getAll_Lights_Line 0F1A  
          __size_of_setLights_Main 0028            __size_of_setLights_Line 000C  
              ?_getAll_Lights_Line 0070             ?_Lights_Initialization 0070  
            __size_of_WDT_Clearing 0002     setLights_Initialization@lights 0076  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 0EF9  
             ??_getAll_Lights_Line 0076                 __CFG_FOSC$INTOSCIO 0000  
               ?_LightsPointSelect 0070                    _Timeout_Counter 0FA8  
       __end_of_LED_Initialization 0F1A              __end_of_getCDS_Status 0EF1  
   __end_of_setTemp_Initialization 0EC0                  getCDS_AD@channel1 0059  
                getCDS_AD@channel2 0076                ??_LightsPointSelect 0074  
