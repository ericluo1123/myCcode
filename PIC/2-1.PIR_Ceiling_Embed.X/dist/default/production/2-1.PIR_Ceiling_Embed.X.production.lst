

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Dec 02 17:46:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0096                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009F                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0186                     	;# 
   141  018C                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0096                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009F                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0186                     	;# 
   210  018C                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0096                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009F                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0186                     	;# 
   279  018C                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000D                     	;# 
   293  000E                     	;# 
   294  000E                     	;# 
   295  000F                     	;# 
   296  0010                     	;# 
   297  0011                     	;# 
   298  0012                     	;# 
   299  0013                     	;# 
   300  0014                     	;# 
   301  0015                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001D                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  0081                     	;# 
   315  0085                     	;# 
   316  0086                     	;# 
   317  0087                     	;# 
   318  0089                     	;# 
   319  008C                     	;# 
   320  008D                     	;# 
   321  008E                     	;# 
   322  008F                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0095                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0096                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009F                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  0185                     	;# 
   347  0186                     	;# 
   348  018C                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0009                     	;# 
   358  000A                     	;# 
   359  000B                     	;# 
   360  000C                     	;# 
   361  000D                     	;# 
   362  000E                     	;# 
   363  000E                     	;# 
   364  000F                     	;# 
   365  0010                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0014                     	;# 
   370  0015                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  001D                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  0081                     	;# 
   384  0085                     	;# 
   385  0086                     	;# 
   386  0087                     	;# 
   387  0089                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  008F                     	;# 
   392  0090                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0095                     	;# 
   399  0095                     	;# 
   400  0096                     	;# 
   401  0096                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009F                     	;# 
   407  0108                     	;# 
   408  0109                     	;# 
   409  010C                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  0185                     	;# 
   416  0186                     	;# 
   417  018C                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  008F                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0095                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0096                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009F                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0186                     	;# 
   486  018C                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000E                     	;# 
   502  000F                     	;# 
   503  0010                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0014                     	;# 
   508  0015                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001D                     	;# 
   519  001E                     	;# 
   520  001F                     	;# 
   521  0081                     	;# 
   522  0085                     	;# 
   523  0086                     	;# 
   524  0087                     	;# 
   525  0089                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  008F                     	;# 
   530  0090                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0095                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0096                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009F                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0186                     	;# 
   555  018C                     	;# 
   556  0000                     	;# 
   557  0001                     	;# 
   558  0002                     	;# 
   559  0003                     	;# 
   560  0004                     	;# 
   561  0005                     	;# 
   562  0006                     	;# 
   563  0007                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  000E                     	;# 
   570  000E                     	;# 
   571  000F                     	;# 
   572  0010                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0014                     	;# 
   577  0015                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001B                     	;# 
   586  001C                     	;# 
   587  001D                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  0081                     	;# 
   591  0085                     	;# 
   592  0086                     	;# 
   593  0087                     	;# 
   594  0089                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  008F                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0096                     	;# 
   609  0098                     	;# 
   610  0099                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009F                     	;# 
   614  0108                     	;# 
   615  0109                     	;# 
   616  010C                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010F                     	;# 
   622  0185                     	;# 
   623  0186                     	;# 
   624  018C                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  000E                     	;# 
   640  000F                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0014                     	;# 
   646  0015                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  0019                     	;# 
   652  001A                     	;# 
   653  001B                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  001D                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  0081                     	;# 
   660  0085                     	;# 
   661  0086                     	;# 
   662  0087                     	;# 
   663  0089                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  008F                     	;# 
   668  0090                     	;# 
   669  0091                     	;# 
   670  0092                     	;# 
   671  0093                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0096                     	;# 
   678  0098                     	;# 
   679  0099                     	;# 
   680  009C                     	;# 
   681  009D                     	;# 
   682  009F                     	;# 
   683  0108                     	;# 
   684  0109                     	;# 
   685  010C                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  0185                     	;# 
   692  0186                     	;# 
   693  018C                     	;# 
   694  0000                     	;# 
   695  0001                     	;# 
   696  0002                     	;# 
   697  0003                     	;# 
   698  0004                     	;# 
   699  0005                     	;# 
   700  0006                     	;# 
   701  0007                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  000E                     	;# 
   708  000E                     	;# 
   709  000F                     	;# 
   710  0010                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0014                     	;# 
   715  0015                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0017                     	;# 
   719  0018                     	;# 
   720  0019                     	;# 
   721  001A                     	;# 
   722  001B                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001D                     	;# 
   726  001E                     	;# 
   727  001F                     	;# 
   728  0081                     	;# 
   729  0085                     	;# 
   730  0086                     	;# 
   731  0087                     	;# 
   732  0089                     	;# 
   733  008C                     	;# 
   734  008D                     	;# 
   735  008E                     	;# 
   736  008F                     	;# 
   737  0090                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0096                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009F                     	;# 
   752  0108                     	;# 
   753  0109                     	;# 
   754  010C                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010D                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0185                     	;# 
   761  0186                     	;# 
   762  018C                     	;# 
   763  0000                     	;# 
   764  0001                     	;# 
   765  0002                     	;# 
   766  0003                     	;# 
   767  0004                     	;# 
   768  0005                     	;# 
   769  0006                     	;# 
   770  0007                     	;# 
   771  0009                     	;# 
   772  000A                     	;# 
   773  000B                     	;# 
   774  000C                     	;# 
   775  000D                     	;# 
   776  000E                     	;# 
   777  000E                     	;# 
   778  000F                     	;# 
   779  0010                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0013                     	;# 
   783  0014                     	;# 
   784  0015                     	;# 
   785  0015                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  001A                     	;# 
   791  001B                     	;# 
   792  001B                     	;# 
   793  001C                     	;# 
   794  001D                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  0081                     	;# 
   798  0085                     	;# 
   799  0086                     	;# 
   800  0087                     	;# 
   801  0089                     	;# 
   802  008C                     	;# 
   803  008D                     	;# 
   804  008E                     	;# 
   805  008F                     	;# 
   806  0090                     	;# 
   807  0091                     	;# 
   808  0092                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0094                     	;# 
   812  0095                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0096                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009C                     	;# 
   819  009D                     	;# 
   820  009F                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010D                     	;# 
   827  010E                     	;# 
   828  010F                     	;# 
   829  0185                     	;# 
   830  0186                     	;# 
   831  018C                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000D                     	;# 
   845  000E                     	;# 
   846  000E                     	;# 
   847  000F                     	;# 
   848  0010                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0013                     	;# 
   852  0014                     	;# 
   853  0015                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  001D                     	;# 
   864  001E                     	;# 
   865  001F                     	;# 
   866  0081                     	;# 
   867  0085                     	;# 
   868  0086                     	;# 
   869  0087                     	;# 
   870  0089                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  008F                     	;# 
   875  0090                     	;# 
   876  0091                     	;# 
   877  0092                     	;# 
   878  0093                     	;# 
   879  0093                     	;# 
   880  0094                     	;# 
   881  0095                     	;# 
   882  0095                     	;# 
   883  0096                     	;# 
   884  0096                     	;# 
   885  0098                     	;# 
   886  0099                     	;# 
   887  009C                     	;# 
   888  009D                     	;# 
   889  009F                     	;# 
   890  0108                     	;# 
   891  0109                     	;# 
   892  010C                     	;# 
   893  010C                     	;# 
   894  010D                     	;# 
   895  010D                     	;# 
   896  010E                     	;# 
   897  010F                     	;# 
   898  0185                     	;# 
   899  0186                     	;# 
   900  018C                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  000D                     	;# 
   914  000E                     	;# 
   915  000E                     	;# 
   916  000F                     	;# 
   917  0010                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001D                     	;# 
   933  001E                     	;# 
   934  001F                     	;# 
   935  0081                     	;# 
   936  0085                     	;# 
   937  0086                     	;# 
   938  0087                     	;# 
   939  0089                     	;# 
   940  008C                     	;# 
   941  008D                     	;# 
   942  008E                     	;# 
   943  008F                     	;# 
   944  0090                     	;# 
   945  0091                     	;# 
   946  0092                     	;# 
   947  0093                     	;# 
   948  0093                     	;# 
   949  0094                     	;# 
   950  0095                     	;# 
   951  0095                     	;# 
   952  0096                     	;# 
   953  0096                     	;# 
   954  0098                     	;# 
   955  0099                     	;# 
   956  009C                     	;# 
   957  009D                     	;# 
   958  009F                     	;# 
   959  0108                     	;# 
   960  0109                     	;# 
   961  010C                     	;# 
   962  010C                     	;# 
   963  010D                     	;# 
   964  010D                     	;# 
   965  010E                     	;# 
   966  010F                     	;# 
   967  0185                     	;# 
   968  0186                     	;# 
   969  018C                     	;# 
   970  0000                     	;# 
   971  0001                     	;# 
   972  0002                     	;# 
   973  0003                     	;# 
   974  0004                     	;# 
   975  0005                     	;# 
   976  0006                     	;# 
   977  0007                     	;# 
   978  0009                     	;# 
   979  000A                     	;# 
   980  000B                     	;# 
   981  000C                     	;# 
   982  000D                     	;# 
   983  000E                     	;# 
   984  000E                     	;# 
   985  000F                     	;# 
   986  0010                     	;# 
   987  0011                     	;# 
   988  0012                     	;# 
   989  0013                     	;# 
   990  0014                     	;# 
   991  0015                     	;# 
   992  0015                     	;# 
   993  0016                     	;# 
   994  0017                     	;# 
   995  0018                     	;# 
   996  0019                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001D                     	;# 
  1002  001E                     	;# 
  1003  001F                     	;# 
  1004  0081                     	;# 
  1005  0085                     	;# 
  1006  0086                     	;# 
  1007  0087                     	;# 
  1008  0089                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  008F                     	;# 
  1013  0090                     	;# 
  1014  0091                     	;# 
  1015  0092                     	;# 
  1016  0093                     	;# 
  1017  0093                     	;# 
  1018  0094                     	;# 
  1019  0095                     	;# 
  1020  0095                     	;# 
  1021  0096                     	;# 
  1022  0096                     	;# 
  1023  0098                     	;# 
  1024  0099                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009F                     	;# 
  1028  0108                     	;# 
  1029  0109                     	;# 
  1030  010C                     	;# 
  1031  010C                     	;# 
  1032  010D                     	;# 
  1033  010D                     	;# 
  1034  010E                     	;# 
  1035  010F                     	;# 
  1036  0185                     	;# 
  1037  0186                     	;# 
  1038  018C                     	;# 
  1039  0000                     	;# 
  1040  0001                     	;# 
  1041  0002                     	;# 
  1042  0003                     	;# 
  1043  0004                     	;# 
  1044  0005                     	;# 
  1045  0006                     	;# 
  1046  0007                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  000E                     	;# 
  1053  000E                     	;# 
  1054  000F                     	;# 
  1055  0010                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0013                     	;# 
  1059  0014                     	;# 
  1060  0015                     	;# 
  1061  0015                     	;# 
  1062  0016                     	;# 
  1063  0017                     	;# 
  1064  0018                     	;# 
  1065  0019                     	;# 
  1066  001A                     	;# 
  1067  001B                     	;# 
  1068  001B                     	;# 
  1069  001C                     	;# 
  1070  001D                     	;# 
  1071  001E                     	;# 
  1072  001F                     	;# 
  1073  0081                     	;# 
  1074  0085                     	;# 
  1075  0086                     	;# 
  1076  0087                     	;# 
  1077  0089                     	;# 
  1078  008C                     	;# 
  1079  008D                     	;# 
  1080  008E                     	;# 
  1081  008F                     	;# 
  1082  0090                     	;# 
  1083  0091                     	;# 
  1084  0092                     	;# 
  1085  0093                     	;# 
  1086  0093                     	;# 
  1087  0094                     	;# 
  1088  0095                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0096                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009C                     	;# 
  1095  009D                     	;# 
  1096  009F                     	;# 
  1097  0108                     	;# 
  1098  0109                     	;# 
  1099  010C                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  010D                     	;# 
  1103  010E                     	;# 
  1104  010F                     	;# 
  1105  0185                     	;# 
  1106  0186                     	;# 
  1107  018C                     	;# 
  1108  0000                     	;# 
  1109  0001                     	;# 
  1110  0002                     	;# 
  1111  0003                     	;# 
  1112  0004                     	;# 
  1113  0005                     	;# 
  1114  0006                     	;# 
  1115  0007                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  000E                     	;# 
  1123  000F                     	;# 
  1124  0010                     	;# 
  1125  0011                     	;# 
  1126  0012                     	;# 
  1127  0013                     	;# 
  1128  0014                     	;# 
  1129  0015                     	;# 
  1130  0015                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  0019                     	;# 
  1135  001A                     	;# 
  1136  001B                     	;# 
  1137  001B                     	;# 
  1138  001C                     	;# 
  1139  001D                     	;# 
  1140  001E                     	;# 
  1141  001F                     	;# 
  1142  0081                     	;# 
  1143  0085                     	;# 
  1144  0086                     	;# 
  1145  0087                     	;# 
  1146  0089                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0093                     	;# 
  1156  0094                     	;# 
  1157  0095                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0096                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009F                     	;# 
  1166  0108                     	;# 
  1167  0109                     	;# 
  1168  010C                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010F                     	;# 
  1174  0185                     	;# 
  1175  0186                     	;# 
  1176  018C                     	;# 
  1177  0000                     	;# 
  1178  0001                     	;# 
  1179  0002                     	;# 
  1180  0003                     	;# 
  1181  0004                     	;# 
  1182  0005                     	;# 
  1183  0006                     	;# 
  1184  0007                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  000E                     	;# 
  1192  000F                     	;# 
  1193  0010                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0014                     	;# 
  1198  0015                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0017                     	;# 
  1202  0018                     	;# 
  1203  0019                     	;# 
  1204  001A                     	;# 
  1205  001B                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001D                     	;# 
  1209  001E                     	;# 
  1210  001F                     	;# 
  1211  0081                     	;# 
  1212  0085                     	;# 
  1213  0086                     	;# 
  1214  0087                     	;# 
  1215  0089                     	;# 
  1216  008C                     	;# 
  1217  008D                     	;# 
  1218  008E                     	;# 
  1219  008F                     	;# 
  1220  0090                     	;# 
  1221  0091                     	;# 
  1222  0092                     	;# 
  1223  0093                     	;# 
  1224  0093                     	;# 
  1225  0094                     	;# 
  1226  0095                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0096                     	;# 
  1230  0098                     	;# 
  1231  0099                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009F                     	;# 
  1235  0108                     	;# 
  1236  0109                     	;# 
  1237  010C                     	;# 
  1238  010C                     	;# 
  1239  010D                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  010F                     	;# 
  1243  0185                     	;# 
  1244  0186                     	;# 
  1245  018C                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  000E                     	;# 
  1261  000F                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0013                     	;# 
  1266  0014                     	;# 
  1267  0015                     	;# 
  1268  0015                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001B                     	;# 
  1275  001B                     	;# 
  1276  001C                     	;# 
  1277  001D                     	;# 
  1278  001E                     	;# 
  1279  001F                     	;# 
  1280  0081                     	;# 
  1281  0085                     	;# 
  1282  0086                     	;# 
  1283  0087                     	;# 
  1284  0089                     	;# 
  1285  008C                     	;# 
  1286  008D                     	;# 
  1287  008E                     	;# 
  1288  008F                     	;# 
  1289  0090                     	;# 
  1290  0091                     	;# 
  1291  0092                     	;# 
  1292  0093                     	;# 
  1293  0093                     	;# 
  1294  0094                     	;# 
  1295  0095                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0096                     	;# 
  1299  0098                     	;# 
  1300  0099                     	;# 
  1301  009C                     	;# 
  1302  009D                     	;# 
  1303  009F                     	;# 
  1304  0108                     	;# 
  1305  0109                     	;# 
  1306  010C                     	;# 
  1307  010C                     	;# 
  1308  010D                     	;# 
  1309  010D                     	;# 
  1310  010E                     	;# 
  1311  010F                     	;# 
  1312  0185                     	;# 
  1313  0186                     	;# 
  1314  018C                     	;# 
  1315  001F                     _ADCON0	set	31
  1316  001E                     _ADRES	set	30
  1317  0005                     _PORTA	set	5
  1318  0006                     _PORTB	set	6
  1319  0007                     _PORTC	set	7
  1320  001A                     _RCREG	set	26
  1321  0018                     _RCSTA	set	24
  1322  0010                     _T1CON	set	16
  1323  000F                     _TMR1H	set	15
  1324  000E                     _TMR1L	set	14
  1325  0019                     _TXREG	set	25
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002C                     _RA4	set	44
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0065                     _RCIF	set	101
  1335  00C6                     _RX9	set	198
  1336  0060                     _TMR1IF	set	96
  1337  0064                     _TXIF	set	100
  1338  009F                     _ADCON1	set	159
  1339  009D                     _FVRCON	set	157
  1340  0090                     _OSCCON	set	144
  1341  0099                     _SPBRG	set	153
  1342  0085                     _TRISA	set	133
  1343  0086                     _TRISB	set	134
  1344  0087                     _TRISC	set	135
  1345  0098                     _TXSTA	set	152
  1346  0408                     _PS0	set	1032
  1347  0409                     _PS1	set	1033
  1348  040A                     _PS2	set	1034
  1349  040B                     _PSA	set	1035
  1350  0465                     _RCIE	set	1125
  1351  0460                     _TMR1IE	set	1120
  1352  043E                     _TRISC6	set	1086
  1353  043F                     _TRISC7	set	1087
  1354  04C6                     _TX9	set	1222
  1355  0464                     _TXIE	set	1124
  1356  0185                     _ANSELA	set	389
  1357  0186                     _ANSELB	set	390
  1358                           
  1359                           	psect	text0
  1360  0000                     __ptext0:	
  1361                           ; #config settings
  1362                           
  1363                           
  1364                           ;psect for function _TMR1_ISR
  1365  0000                     
  1366                           	psect	cinit
  1367  0013                     start_initialization:	
  1368  0013                     __initialization:	
  1369                           
  1370                           ; Clear objects allocated to COMMON
  1371  0013  3070               	movlw	low __pbssCOMMON
  1372  0014  0084               	movwf	4
  1373  0015  3077               	movlw	low (__pbssCOMMON+7)
  1374  0016  118A  27F7  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK0
  1377  0019  1383               	bcf	3,7	;select IRP bank0
  1378  001A  3020               	movlw	low __pbssBANK0
  1379  001B  0084               	movwf	4
  1380  001C  3056               	movlw	low (__pbssBANK0+54)
  1381  001D  118A  27F7  118A   	fcall	clear_ram0
  1382                           
  1383                           ; Clear objects allocated to BANK1
  1384  0020  30A0               	movlw	low __pbssBANK1
  1385  0021  0084               	movwf	4
  1386  0022  30D6               	movlw	low (__pbssBANK1+54)
  1387  0023  118A  27F7         	fcall	clear_ram0
  1388  0025                     end_of_initialization:	
  1389                           ;End of C runtime variable initialization code
  1390                           
  1391  0025                     __end_of__initialization:	
  1392  0025  0183               	clrf	3
  1393  0026  118A  2D65         	ljmp	_main	;jump to C main() function
  1394                           
  1395                           	psect	bssCOMMON
  1396  0070                     __pbssCOMMON:	
  1397  0070                     _WDT:	
  1398  0070                     	ds	2
  1399  0072                     _SwDetect:	
  1400  0072                     	ds	1
  1401  0073                     _VarLED2:	
  1402  0073                     	ds	4
  1403                           
  1404                           	psect	bssBANK0
  1405  0020                     __pbssBANK0:	
  1406  0020                     _myMain:	
  1407  0020                     	ds	7
  1408  0027                     __CDS:	
  1409  0027                     	ds	5
  1410  002C                     _PIRLED:	
  1411  002C                     	ds	4
  1412  0030                     _Timer1:	
  1413  0030                     	ds	3
  1414  0033                     _LED:	
  1415  0033                     	ds	1
  1416  0034                     _Lights:	
  1417  0034                     	ds	1
  1418  0035                     _LightsControl:	
  1419  0035                     	ds	1
  1420  0036                     _Temp:	
  1421  0036                     	ds	12
  1422  0042                     _UART:	
  1423  0042                     	ds	12
  1424  004E                     _VarErrLED:	
  1425  004E                     	ds	4
  1426  0052                     _VarLED1:	
  1427  0052                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	47
  1433  00CF                     _Lights1:	
  1434  00CF                     	ds	7
  1435                           
  1436                           	psect	clrtext
  1437  07F7                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  07F8                     clrloop0:	
  1443  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  07F9  0A84               	incf	4,f	;increment pointer
  1445  07FA  0604               	xorwf	4,w	;XOR with final address
  1446  07FB  1903               	btfsc	3,2	;have we reached the end yet?
  1447  07FC  3400               	retlw	0	;all done for this memory range, return
  1448  07FD  0604               	xorwf	4,w	;XOR again to restore value
  1449  07FE  2FF8               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0077                     __pcstackCOMMON:	
  1453  0077                     ?_setLED_Initialization:	
  1454  0077                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0077                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0077                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0077                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0077                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0077                     ?_UART_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0077                     ?_WDT_Set:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0077                     ?_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0077                     ??_TMR1_ISR:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0077                     ?_UART_ISR:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0077                     ??_UART_ISR:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0077                     ?_Timeout_Counter:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0077                     ?_set_TimeoutCleared:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0077                     ??_getch:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0077                     ?_UART_Receive:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0077                     ?_UART_Transmit:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0077                     ?_putch:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0077                     ?_WDT_Clearing:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0077                     ?_myMain_Initialization:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0077                     ?_Temp_Initialization:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0077                     ?_Lights_Initialization:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0077                     ?_PIR_Initialization:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0077                     ?_getTemp_AD:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0077                     ?_my_MainTimer:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0077                     ?_Temp_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0077                     ?_Lights_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0077                     ?_PIR_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0077                     ?_setTemp_Initialization:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0077                     ?_setTemp_Main:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0077                     ?_setLights_Initialization:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0077                     ?_setLights_Main:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0077                     ?_Lights_Control:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0077                     ?_Lights_Close:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0077                     ?_setLights_Line:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0077                     ?_CDS_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0077                     ?_CDS_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0077                     ?_LedPointSelect:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0077                     ?_LED_Initialization:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0077                     ?_LED_Main:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0077                     ?_Mcu_Initialization:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0077                     ?_ISR:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0077                     ?_UART_Main:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0077                     ?_UART_SetData:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0077                     ?_WDT_Main:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0077                     ?_setMain_Exception:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0077                     ?_LightsPointSelect:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0077                     ?_getch:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0077                     ?_getAll_Lights_Line:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0077                     ?_getLights_Status:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0077                     ?_getCDS_Status:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0077                     ?_getMain_LightsStatus:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0077                     ?_getMain_All_Error_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x0
  1612  0077                     	ds	1
  1613  0078                     UART_ISR@i:	
  1614                           
  1615                           ; 2 bytes @ 0x1
  1616  0078                     	ds	2
  1617  007A                     ??_ISR:	
  1618                           
  1619                           ; 0 bytes @ 0x3
  1620  007A                     	ds	4
  1621                           
  1622                           	psect	cstackBANK0
  1623  0056                     __pcstackBANK0:	
  1624  0056                     ??_Fosc_Set:	
  1625  0056                     ??_IO_Set:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0056                     ??_TMR1_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0056                     ??_ADC_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0056                     ??_UART_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0056                     ??_WDT_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0056                     ??_Timeout_Counter:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0056                     ??_set_TimeoutCleared:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0056                     ??_UART_Receive:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0056                     ??_putch:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0056                     ??_WDT_Clearing:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0056                     ??_myMain_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0056                     ??_Temp_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0056                     ??_setTemp_Initialization:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0056                     ??_CDS_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0056                     ??_CDS_Main:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0056                     ??_getCDS_Status:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0056                     ??_LedPointSelect:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0056                     ??_UART_SetData:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0056                     ??_WDT_Main:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0056                     ??_LightsPointSelect:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0056                     ?_getAD:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0056                     ?___awdiv:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0056                     ?___lwdiv:	
  1692                           ; 2 bytes @ 0x0
  1693                           
  1694  0056                     getCDS_Status@status:	
  1695                           ; 2 bytes @ 0x0
  1696                           
  1697  0056                     getAD@adcon1:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0056                     putch@byte:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0056                     ___awdiv@divisor:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0056                     ___lwdiv@divisor:	
  1707                           ; 2 bytes @ 0x0
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x0
  1711  0056                     	ds	1
  1712  0057                     ??_getAD:	
  1713  0057                     ??_UART_Transmit:	
  1714                           ; 0 bytes @ 0x1
  1715                           
  1716  0057                     ??_my_MainTimer:	
  1717                           ; 0 bytes @ 0x1
  1718                           
  1719  0057                     ??_Mcu_Initialization:	
  1720                           ; 0 bytes @ 0x1
  1721                           
  1722  0057                     ??_getMain_All_Error_Status:	
  1723                           ; 0 bytes @ 0x1
  1724                           
  1725  0057                     LedPointSelect@led:	
  1726                           ; 0 bytes @ 0x1
  1727                           
  1728  0057                     getAD@adcon0:	
  1729                           ; 1 bytes @ 0x1
  1730                           
  1731  0057                     LightsPointSelect@lights:	
  1732                           ; 1 bytes @ 0x1
  1733                           
  1734  0057                     UART_Transmit@i:	
  1735                           ; 1 bytes @ 0x1
  1736                           
  1737                           
  1738                           ; 2 bytes @ 0x1
  1739  0057                     	ds	1
  1740  0058                     ?_setLED:	
  1741  0058                     ??_getTemp_AD:	
  1742                           ; 0 bytes @ 0x2
  1743                           
  1744  0058                     ??_getAll_Lights_Line:	
  1745                           ; 0 bytes @ 0x2
  1746                           
  1747  0058                     ?_setLights_Trigger:	
  1748                           ; 0 bytes @ 0x2
  1749                           
  1750  0058                     ??_getLights_Status:	
  1751                           ; 0 bytes @ 0x2
  1752                           
  1753  0058                     ??_setLights_Initialization:	
  1754                           ; 0 bytes @ 0x2
  1755                           
  1756  0058                     ??_Lights_Control:	
  1757                           ; 0 bytes @ 0x2
  1758                           
  1759  0058                     ??_setLights_Line:	
  1760                           ; 0 bytes @ 0x2
  1761                           
  1762  0058                     ?_getCDS_AD:	
  1763                           ; 0 bytes @ 0x2
  1764                           
  1765  0058                     getCDS_AD@channel2:	
  1766                           ; 0 bytes @ 0x2
  1767                           
  1768  0058                     setLED@command:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0058                     setLights_Initialization@lights:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774  0058                     getLights_Status@lights:	
  1775                           ; 1 bytes @ 0x2
  1776                           
  1777  0058                     setLights_Trigger@command:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0058                     setLights_Line@lights:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783  0058                     getAll_Lights_Line@line:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786  0058                     _getMain_All_Error_Status$2245:	
  1787                           ; 1 bytes @ 0x2
  1788                           
  1789  0058                     ___awdiv@dividend:	
  1790                           ; 2 bytes @ 0x2
  1791                           
  1792  0058                     ___lwdiv@dividend:	
  1793                           ; 2 bytes @ 0x2
  1794                           
  1795                           
  1796                           ; 2 bytes @ 0x2
  1797  0058                     	ds	1
  1798  0059                     ??_setLED:	
  1799  0059                     ??_Lights_Initialization:	
  1800                           ; 0 bytes @ 0x3
  1801                           
  1802  0059                     ??_setLights_Trigger:	
  1803                           ; 0 bytes @ 0x3
  1804                           
  1805  0059                     ?_setLights:	
  1806                           ; 0 bytes @ 0x3
  1807                           
  1808  0059                     ??_getCDS_AD:	
  1809                           ; 0 bytes @ 0x3
  1810                           
  1811  0059                     ??_UART_Main:	
  1812                           ; 0 bytes @ 0x3
  1813                           
  1814  0059                     setLED@led:	
  1815                           ; 0 bytes @ 0x3
  1816                           
  1817  0059                     setLights@status:	
  1818                           ; 1 bytes @ 0x3
  1819                           
  1820  0059                     getLights_Status@status:	
  1821                           ; 1 bytes @ 0x3
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0x3
  1825  0059                     	ds	1
  1826  005A                     ??_setLED_Initialization:	
  1827  005A                     ??_setPIRLED_Main:	
  1828                           ; 0 bytes @ 0x4
  1829                           
  1830  005A                     ??_PIR_Initialization:	
  1831                           ; 0 bytes @ 0x4
  1832                           
  1833  005A                     ??_setLights:	
  1834                           ; 0 bytes @ 0x4
  1835                           
  1836  005A                     ??_getMain_LightsStatus:	
  1837                           ; 0 bytes @ 0x4
  1838                           
  1839  005A                     ??___awdiv:	
  1840                           ; 0 bytes @ 0x4
  1841                           
  1842  005A                     ??___lwdiv:	
  1843                           ; 0 bytes @ 0x4
  1844                           
  1845  005A                     setLED_Initialization@led:	
  1846                           ; 0 bytes @ 0x4
  1847                           
  1848  005A                     getTemp_AD@channel:	
  1849                           ; 1 bytes @ 0x4
  1850                           
  1851  005A                     Lights_Control@lights:	
  1852                           ; 1 bytes @ 0x4
  1853                           
  1854  005A                     setLights_Trigger@lights:	
  1855                           ; 1 bytes @ 0x4
  1856                           
  1857  005A                     _getMain_All_Error_Status$2247:	
  1858                           ; 1 bytes @ 0x4
  1859                           
  1860                           
  1861                           ; 2 bytes @ 0x4
  1862  005A                     	ds	1
  1863  005B                     ??_LED_Initialization:	
  1864  005B                     ??_setMain_Exception:	
  1865                           ; 0 bytes @ 0x5
  1866                           
  1867  005B                     getCDS_AD@i:	
  1868                           ; 0 bytes @ 0x5
  1869                           
  1870  005B                     setPIRLED_Main@count:	
  1871                           ; 1 bytes @ 0x5
  1872                           
  1873  005B                     getMain_LightsStatus@count:	
  1874                           ; 1 bytes @ 0x5
  1875                           
  1876  005B                     setLights@lights:	
  1877                           ; 1 bytes @ 0x5
  1878                           
  1879  005B                     ___awdiv@counter:	
  1880                           ; 1 bytes @ 0x5
  1881                           
  1882  005B                     ___lwdiv@quotient:	
  1883                           ; 1 bytes @ 0x5
  1884                           
  1885                           
  1886                           ; 2 bytes @ 0x5
  1887  005B                     	ds	1
  1888  005C                     ??_setLights_Main:	
  1889  005C                     ??_LED_Main:	
  1890                           ; 0 bytes @ 0x6
  1891                           
  1892  005C                     getCDS_AD@j:	
  1893                           ; 0 bytes @ 0x6
  1894                           
  1895  005C                     getMain_All_Error_Status@command:	
  1896                           ; 1 bytes @ 0x6
  1897                           
  1898  005C                     setLights_Main@lights:	
  1899                           ; 1 bytes @ 0x6
  1900                           
  1901  005C                     ___awdiv@sign:	
  1902                           ; 1 bytes @ 0x6
  1903                           
  1904  005C                     getMain_LightsStatus@i:	
  1905                           ; 1 bytes @ 0x6
  1906                           
  1907                           
  1908                           ; 2 bytes @ 0x6
  1909  005C                     	ds	1
  1910  005D                     getCDS_AD@channel1:	
  1911  005D                     setMain_Exception@buz:	
  1912                           ; 1 bytes @ 0x7
  1913                           
  1914  005D                     getMain_All_Error_Status@status:	
  1915                           ; 1 bytes @ 0x7
  1916                           
  1917  005D                     ___lwdiv@counter:	
  1918                           ; 1 bytes @ 0x7
  1919                           
  1920  005D                     ___awdiv@quotient:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923                           
  1924                           ; 2 bytes @ 0x7
  1925  005D                     	ds	1
  1926  005E                     setMain_Exception@status:	
  1927  005E                     getMain_LightsStatus@status:	
  1928                           ; 1 bytes @ 0x8
  1929                           
  1930                           
  1931                           ; 1 bytes @ 0x8
  1932  005E                     	ds	1
  1933  005F                     ?_getPIR_AD:	
  1934  005F                     ??_setTemp_Main:	
  1935                           ; 0 bytes @ 0x9
  1936                           
  1937  005F                     ??_Lights_Close:	
  1938                           ; 0 bytes @ 0x9
  1939                           
  1940  005F                     getPIR_AD@channel2:	
  1941                           ; 0 bytes @ 0x9
  1942                           
  1943  005F                     _setMain_Exception$2229:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946                           
  1947                           ; 2 bytes @ 0x9
  1948  005F                     	ds	1
  1949  0060                     ??_getPIR_AD:	
  1950  0060                     ??_Temp_Main:	
  1951                           ; 0 bytes @ 0xA
  1952                           
  1953  0060                     ??_Lights_Main:	
  1954                           ; 0 bytes @ 0xA
  1955                           
  1956                           
  1957                           ; 0 bytes @ 0xA
  1958  0060                     	ds	1
  1959  0061                     setMain_Exception@command:	
  1960                           
  1961                           ; 1 bytes @ 0xB
  1962  0061                     	ds	1
  1963  0062                     ??_PIR_Main:	
  1964                           
  1965                           ; 0 bytes @ 0xC
  1966  0062                     	ds	1
  1967  0063                     getPIR_AD@j:	
  1968                           
  1969                           ; 1 bytes @ 0xD
  1970  0063                     	ds	1
  1971  0064                     getPIR_AD@channel1:	
  1972                           
  1973                           ; 1 bytes @ 0xE
  1974  0064                     	ds	1
  1975  0065                     getPIR_AD@i:	
  1976                           
  1977                           ; 1 bytes @ 0xF
  1978  0065                     	ds	2
  1979  0067                     _PIR_Main$2939:	
  1980                           
  1981                           ; 2 bytes @ 0x11
  1982  0067                     	ds	2
  1983  0069                     PIR_Main@error:	
  1984                           
  1985                           ; 1 bytes @ 0x13
  1986  0069                     	ds	1
  1987  006A                     ?_main:	
  1988  006A                     main@argc:	
  1989                           ; 2 bytes @ 0x14
  1990                           
  1991                           
  1992                           ; 2 bytes @ 0x14
  1993  006A                     	ds	2
  1994  006C                     main@argv:	
  1995                           
  1996                           ; 2 bytes @ 0x16
  1997  006C                     	ds	2
  1998  006E                     ??_main:	
  1999                           
  2000                           ; 0 bytes @ 0x18
  2001  006E                     	ds	1
  2002                           
  2003                           	psect	maintext
  2004  0565                     __pmaintext:	
  2005 ;;
  2006 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2007 ;;
  2008 ;; *************** function _main *****************
  2009 ;; Defined at:
  2010 ;;		line 7 in file "../src/Main_B1.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  argc            2   20[BANK0 ] int 
  2013 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2   20[BANK0 ] int 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 17F/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       4       0       0
  2026 ;;      Locals:         0       0       0       0
  2027 ;;      Temps:          0       1       0       0
  2028 ;;      Totals:         0       5       0       0
  2029 ;;Total ram usage:        5 bytes
  2030 ;; Hardware stack levels required when called:    8
  2031 ;; This function calls:
  2032 ;;		_CDS_Initialization
  2033 ;;		_CDS_Main
  2034 ;;		_LED_Initialization
  2035 ;;		_LED_Main
  2036 ;;		_Lights_Initialization
  2037 ;;		_Lights_Main
  2038 ;;		_Mcu_Initialization
  2039 ;;		_PIR_Initialization
  2040 ;;		_PIR_Main
  2041 ;;		_Temp_Initialization
  2042 ;;		_Temp_Main
  2043 ;;		_UART_Main
  2044 ;;		_WDT_Main
  2045 ;;		_getCDS_AD
  2046 ;;		_getPIR_AD
  2047 ;;		_getTemp_AD
  2048 ;;		_myMain_Initialization
  2049 ;;		_my_MainTimer
  2050 ;; This function is called by:
  2051 ;;		Startup code after reset
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _main
  2057  0565                     _main:	
  2058                           
  2059                           ;Main_B1.c: 8: myMain_Initialization();
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2063  0565  118A  27FF  118A   	fcall	_myMain_Initialization
  2064                           
  2065                           ;Main_B1.c: 9: Mcu_Initialization();
  2066  0568  158A  26BA  118A   	fcall	_Mcu_Initialization
  2067                           
  2068                           ;Main_B1.c: 10: ;;
  2069                           ;Main_B1.c: 11: LED_Initialization();
  2070  056B  158A  2621  118A   	fcall	_LED_Initialization
  2071                           
  2072                           ;Main_B1.c: 12: ;;
  2073                           ;Main_B1.c: 14: ;;
  2074                           ;Main_B1.c: 15: Temp_Initialization();
  2075  056E  158A  25D5  118A   	fcall	_Temp_Initialization
  2076                           
  2077                           ;Main_B1.c: 16: ;;
  2078                           ;Main_B1.c: 17: ;;
  2079                           ;Main_B1.c: 18: ;;
  2080                           ;Main_B1.c: 20: ;;
  2081                           ;Main_B1.c: 21: Lights_Initialization();
  2082  0571  158A  25DF  118A   	fcall	_Lights_Initialization
  2083                           
  2084                           ;Main_B1.c: 22: CDS_Initialization();
  2085  0574  158A  25DB  118A   	fcall	_CDS_Initialization
  2086                           
  2087                           ;Main_B1.c: 23: PIR_Initialization();
  2088  0577  158A  26DF  118A   	fcall	_PIR_Initialization
  2089                           
  2090                           ;Main_B1.c: 24: ;;
  2091                           ;Main_B1.c: 25: ;;
  2092                           ;Main_B1.c: 26: __nop();
  2093  057A  0000               	nop
  2094  057B                     l4329:	
  2095                           ;Main_B1.c: 27: ;;
  2096                           ;Main_B1.c: 28: ;;
  2097                           ;Main_B1.c: 30: while (1) {
  2098                           
  2099                           
  2100                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2101  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2102  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2103  057D  1C20               	btfss	_myMain,0
  2104  057E  2D97               	goto	l4335
  2105                           
  2106                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2107  057F  3011               	movlw	17
  2108  0580  158A  27DB  118A   	fcall	_getTemp_AD
  2109                           
  2110                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2111  0583  3031               	movlw	49
  2112  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0586  00EE               	movwf	??_main
  2115  0587  086E               	movf	??_main,w
  2116  0588  00D8               	movwf	getCDS_AD@channel2
  2117  0589  3009               	movlw	9
  2118  058A  118A  2759  118A   	fcall	_getCDS_AD
  2119                           
  2120                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2121  058D  300D               	movlw	13
  2122  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2123  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0590  00EE               	movwf	??_main
  2125  0591  086E               	movf	??_main,w
  2126  0592  00DF               	movwf	getPIR_AD@channel2
  2127  0593  3005               	movlw	5
  2128  0594  118A  220F  118A   	fcall	_getPIR_AD
  2129  0597                     l4335:	
  2130                           
  2131                           ;Main_B1.c: 57: }
  2132                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2133  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0599  1C30               	btfss	_Timer1,0
  2136  059A  2D7B               	goto	l4329
  2137                           
  2138                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2139  059B  1030               	bcf	_Timer1,0
  2140                           
  2141                           ;Main_B1.c: 95: my_MainTimer();
  2142  059C  118A  27AB  118A   	fcall	_my_MainTimer
  2143                           
  2144                           ;Main_B1.c: 96: WDT_Main();
  2145  059F  158A  2685  118A   	fcall	_WDT_Main
  2146                           
  2147                           ;Main_B1.c: 97: ;;
  2148                           ;Main_B1.c: 98: UART_Main();
  2149  05A2  158A  2655  118A   	fcall	_UART_Main
  2150                           
  2151                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  2152  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05A7  1C20               	btfss	_myMain,0
  2155  05A8  2D7B               	goto	l4329
  2156                           
  2157                           ;Main_B1.c: 100: ;;
  2158                           ;Main_B1.c: 102: LED_Main();
  2159  05A9  158A  25D2  118A   	fcall	_LED_Main
  2160                           
  2161                           ;Main_B1.c: 103: ;;
  2162                           ;Main_B1.c: 105: ;;
  2163                           ;Main_B1.c: 106: Temp_Main();
  2164  05AC  158A  25D8  118A   	fcall	_Temp_Main
  2165                           
  2166                           ;Main_B1.c: 107: ;;
  2167                           ;Main_B1.c: 108: ;;
  2168                           ;Main_B1.c: 110: Lights_Main();
  2169  05AF  158A  2616  118A   	fcall	_Lights_Main
  2170                           
  2171                           ;Main_B1.c: 111: ;;
  2172                           ;Main_B1.c: 112: ;;
  2173                           ;Main_B1.c: 113: CDS_Main();
  2174  05B2  118A  26F4  118A   	fcall	_CDS_Main
  2175                           
  2176                           ;Main_B1.c: 114: PIR_Main();
  2177  05B5  118A  2028  118A   	fcall	_PIR_Main
  2178                           
  2179                           ;Main_B1.c: 116: ;;
  2180                           ;Main_B1.c: 117: ;;
  2181                           ;Main_B1.c: 118: ;;
  2182                           ;Main_B1.c: 119: ;;
  2183  05B8  2D7B               	goto	l4329
  2184  05B9                     __end_of_main:	
  2185                           ;Main_B1.c: 126: }
  2186                           ;Main_B1.c: 127: }
  2187                           ;Main_B1.c: 161: }
  2188                           ;Main_B1.c: 162: return (0);
  2189                           ;	Return value of _main is never used
  2190                           
  2191                           
  2192                           	psect	text1
  2193  07AB                     __ptext1:	
  2194 ;; *************** function _my_MainTimer *****************
  2195 ;; Defined at:
  2196 ;;		line 181 in file "../src/Main_B1.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;		None               void
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2210 ;;      Params:         0       0       0       0
  2211 ;;      Locals:         0       0       0       0
  2212 ;;      Temps:          0       0       0       0
  2213 ;;      Totals:         0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    4
  2217 ;; This function calls:
  2218 ;;		_UART_SetData
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _my_MainTimer
  2226  07AB                     _my_MainTimer:	
  2227                           
  2228                           ;Main_B1.c: 183: if (myMain.PowerON == 0) {
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0+pclath+cstack]
  2232  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2233  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2234  07AD  1820               	btfsc	_myMain,0
  2235  07AE  2FBF               	goto	l4141
  2236                           
  2237                           ;Main_B1.c: 184: myMain.PowerCount++;
  2238  07AF  3001               	movlw	1
  2239  07B0  07A1               	addwf	_myMain+1,f
  2240  07B1  1803               	skipnc
  2241  07B2  0AA2               	incf	_myMain+2,f
  2242  07B3  3000               	movlw	0
  2243  07B4  07A2               	addwf	_myMain+2,f
  2244                           
  2245                           ;Main_B1.c: 185: if (myMain.PowerCount == 150)
  2246  07B5  3096               	movlw	150
  2247  07B6  0621               	xorwf	_myMain+1,w
  2248  07B7  0422               	iorwf	_myMain+2,w
  2249  07B8  1D03               	skipz
  2250  07B9  0008               	return
  2251                           
  2252                           ;Main_B1.c: 186: {
  2253                           ;Main_B1.c: 187: myMain.PowerCount = 0;
  2254  07BA  01A1               	clrf	_myMain+1
  2255  07BB  01A2               	clrf	_myMain+2
  2256                           
  2257                           ;Main_B1.c: 188: myMain.PowerON = 1;
  2258  07BC  1420               	bsf	_myMain,0
  2259                           
  2260                           ;Main_B1.c: 193: ;;
  2261                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2262  07BD  1620               	bsf	_myMain,4
  2263                           
  2264                           ;Main_B1.c: 203: }
  2265                           ;Main_B1.c: 204: } else {
  2266  07BE  0008               	return
  2267  07BF                     l4141:	
  2268                           
  2269                           ;Main_B1.c: 205: myMain.PowerCount++;
  2270  07BF  3001               	movlw	1
  2271  07C0  07A1               	addwf	_myMain+1,f
  2272  07C1  1803               	skipnc
  2273  07C2  0AA2               	incf	_myMain+2,f
  2274  07C3  3000               	movlw	0
  2275  07C4  07A2               	addwf	_myMain+2,f
  2276                           
  2277                           ;Main_B1.c: 206: if (myMain.PowerCount == 100) {
  2278  07C5  3064               	movlw	100
  2279  07C6  0621               	xorwf	_myMain+1,w
  2280  07C7  0422               	iorwf	_myMain+2,w
  2281  07C8  1D03               	skipz
  2282  07C9  0008               	return
  2283                           
  2284                           ;Main_B1.c: 207: myMain.PowerCount = 0;
  2285  07CA  01A1               	clrf	_myMain+1
  2286  07CB  01A2               	clrf	_myMain+2
  2287                           
  2288                           ;Main_B1.c: 210: if (UART.TxGO == 0) {
  2289  07CC  184D               	btfsc	_UART+11,0
  2290  07CD  0008               	return
  2291                           
  2292                           ;Main_B1.c: 211: UART_SetData();
  2293  07CE  118A  27D1         	fcall	_UART_SetData
  2294  07D0  0008               	return
  2295  07D1                     __end_of_my_MainTimer:	
  2296                           
  2297                           	psect	text2
  2298  07D1                     __ptext2:	
  2299 ;; *************** function _UART_SetData *****************
  2300 ;; Defined at:
  2301 ;;		line 828 in file "../src/MCU_B1.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2315 ;;      Params:         0       0       0       0
  2316 ;;      Locals:         0       0       0       0
  2317 ;;      Temps:          0       1       0       0
  2318 ;;      Totals:         0       1       0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    3
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_my_MainTimer
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _UART_SetData
  2331  07D1                     _UART_SetData:	
  2332                           
  2333                           ;MCU_B1.c: 838: if (UART.TxGO == 0) {
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _UART_SetData: [wreg]
  2337  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2338  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2339  07D3  184D               	btfsc	_UART+11,0
  2340  07D4  0008               	return
  2341                           
  2342                           ;MCU_B1.c: 839: UART.Data[0] = 1;
  2343  07D5  01C2               	clrf	_UART
  2344  07D6  0AC2               	incf	_UART,f
  2345                           
  2346                           ;MCU_B1.c: 840: UART.Data[1] = 2;
  2347  07D7  3002               	movlw	2
  2348  07D8  00D6               	movwf	??_UART_SetData
  2349  07D9  0856               	movf	??_UART_SetData,w
  2350  07DA  00C3               	movwf	_UART+1
  2351                           
  2352                           ;MCU_B1.c: 841: UART.Data[2] = 3;
  2353  07DB  3003               	movlw	3
  2354  07DC  00D6               	movwf	??_UART_SetData
  2355  07DD  0856               	movf	??_UART_SetData,w
  2356  07DE  00C4               	movwf	_UART+2
  2357                           
  2358                           ;MCU_B1.c: 842: UART.Data[3] = 4;
  2359  07DF  3004               	movlw	4
  2360  07E0  00D6               	movwf	??_UART_SetData
  2361  07E1  0856               	movf	??_UART_SetData,w
  2362  07E2  00C5               	movwf	_UART+3
  2363                           
  2364                           ;MCU_B1.c: 843: UART.Data[4] = 5;
  2365  07E3  3005               	movlw	5
  2366  07E4  00D6               	movwf	??_UART_SetData
  2367  07E5  0856               	movf	??_UART_SetData,w
  2368  07E6  00C6               	movwf	_UART+4
  2369                           
  2370                           ;MCU_B1.c: 844: UART.Data[5] = 6;
  2371  07E7  3006               	movlw	6
  2372  07E8  00D6               	movwf	??_UART_SetData
  2373  07E9  0856               	movf	??_UART_SetData,w
  2374  07EA  00C7               	movwf	_UART+5
  2375                           
  2376                           ;MCU_B1.c: 845: UART.Data[6] = 7;
  2377  07EB  3007               	movlw	7
  2378  07EC  00D6               	movwf	??_UART_SetData
  2379  07ED  0856               	movf	??_UART_SetData,w
  2380  07EE  00C8               	movwf	_UART+6
  2381                           
  2382                           ;MCU_B1.c: 846: UART.Data[7] = 8;
  2383  07EF  3008               	movlw	8
  2384  07F0  00D6               	movwf	??_UART_SetData
  2385  07F1  0856               	movf	??_UART_SetData,w
  2386  07F2  00C9               	movwf	_UART+7
  2387                           
  2388                           ;MCU_B1.c: 847: RB3 = RB3 == 1 ? 0 : 1;
  2389  07F3  3008               	movlw	8
  2390  07F4  0686               	xorwf	6,f
  2391                           
  2392                           ;MCU_B1.c: 849: UART.TxGO = 1;
  2393  07F5  144D               	bsf	_UART+11,0
  2394  07F6  0008               	return
  2395  07F7                     __end_of_UART_SetData:	
  2396                           
  2397                           	psect	text3
  2398  07FF                     __ptext3:	
  2399 ;; *************** function _myMain_Initialization *****************
  2400 ;; Defined at:
  2401 ;;		line 168 in file "../src/Main_B1.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;		None               void
  2408 ;; Registers used:
  2409 ;;		None
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2415 ;;      Params:         0       0       0       0
  2416 ;;      Locals:         0       0       0       0
  2417 ;;      Temps:          0       0       0       0
  2418 ;;      Totals:         0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    3
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _myMain_Initialization
  2431  07FF                     _myMain_Initialization:	
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in _myMain_Initialization: []
  2435  07FF  0008               	return
  2436  0800                     __end_of_myMain_Initialization:	
  2437                           
  2438                           	psect	text4
  2439  0FDB                     __ptext4:	
  2440 ;; *************** function _getTemp_AD *****************
  2441 ;; Defined at:
  2442 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  channel         1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  channel         1    4[BANK0 ] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;		None               void
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2456 ;;      Params:         0       0       0       0
  2457 ;;      Locals:         0       1       0       0
  2458 ;;      Temps:          0       2       0       0
  2459 ;;      Totals:         0       3       0       0
  2460 ;;Total ram usage:        3 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    5
  2463 ;; This function calls:
  2464 ;;		_getAD
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _getTemp_AD
  2472  0FDB                     _getTemp_AD:	
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2476                           ;getTemp_AD@channel stored from wreg
  2477  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0FDD  00DA               	movwf	getTemp_AD@channel
  2480                           
  2481                           ;OverTemperature_B1.c: 32: if (Temp.ADtoGO == 1) {
  2482  0FDE  1D36               	btfss	_Temp,2
  2483  0FDF  0008               	return
  2484                           
  2485                           ;OverTemperature_B1.c: 33: Temp.GO = 1;
  2486  0FE0  1636               	bsf	_Temp,4
  2487                           
  2488                           ;OverTemperature_B1.c: 34: Temp.ADRES = getAD(channel, 0x70);
  2489  0FE1  3070               	movlw	112
  2490  0FE2  00D8               	movwf	??_getTemp_AD
  2491  0FE3  0858               	movf	??_getTemp_AD,w
  2492  0FE4  00D6               	movwf	getAD@adcon1
  2493  0FE5  085A               	movf	getTemp_AD@channel,w
  2494  0FE6  158A  279D  158A   	fcall	_getAD
  2495  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0FEB  00D9               	movwf	??_getTemp_AD+1
  2498  0FEC  0859               	movf	??_getTemp_AD+1,w
  2499  0FED  00BF               	movwf	_Temp+9
  2500                           
  2501                           ;OverTemperature_B1.c: 35: if (Temp.ADH[0] < Temp.ADRES) {
  2502  0FEE  083F               	movf	_Temp+9,w
  2503  0FEF  023D               	subwf	_Temp+7,w
  2504  0FF0  1803               	skipnc
  2505  0FF1  2FF7               	goto	l4051
  2506                           
  2507                           ;OverTemperature_B1.c: 36: Temp.ADH[0] = Temp.ADRES;
  2508  0FF2  083F               	movf	_Temp+9,w
  2509  0FF3  00D8               	movwf	??_getTemp_AD
  2510  0FF4  0858               	movf	??_getTemp_AD,w
  2511  0FF5  00BD               	movwf	_Temp+7
  2512                           
  2513                           ;OverTemperature_B1.c: 37: } else if (Temp.ADH[1] < Temp.ADRES) {
  2514  0FF6  0008               	return
  2515  0FF7                     l4051:	
  2516  0FF7  083F               	movf	_Temp+9,w
  2517  0FF8  023E               	subwf	_Temp+8,w
  2518  0FF9  1803               	skipnc
  2519  0FFA  0008               	return
  2520                           
  2521                           ;OverTemperature_B1.c: 38: Temp.ADH[1] = Temp.ADRES;
  2522  0FFB  083F               	movf	_Temp+9,w
  2523  0FFC  00D8               	movwf	??_getTemp_AD
  2524  0FFD  0858               	movf	??_getTemp_AD,w
  2525  0FFE  00BE               	movwf	_Temp+8
  2526  0FFF  0008               	return
  2527  1000                     __end_of_getTemp_AD:	
  2528                           
  2529                           	psect	text5
  2530  020F                     __ptext5:	
  2531 ;; *************** function _getPIR_AD *****************
  2532 ;; Defined at:
  2533 ;;		line 167 in file "../src/PIR_B1.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  channel1        1    wreg     unsigned char 
  2536 ;;  channel2        1    9[BANK0 ] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  channel1        1   14[BANK0 ] unsigned char 
  2539 ;;  i               1   15[BANK0 ] unsigned char 
  2540 ;;  j               1   13[BANK0 ] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;		None               void
  2543 ;; Registers used:
  2544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2550 ;;      Params:         0       1       0       0
  2551 ;;      Locals:         0       3       0       0
  2552 ;;      Temps:          0       3       0       0
  2553 ;;      Totals:         0       7       0       0
  2554 ;;Total ram usage:        7 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    5
  2557 ;; This function calls:
  2558 ;;		___awdiv
  2559 ;;		___lwdiv
  2560 ;;		_getAD
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _getPIR_AD
  2568  020F                     _getPIR_AD:	
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2572                           ;getPIR_AD@channel1 stored from wreg
  2573  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0211  00E4               	movwf	getPIR_AD@channel1
  2576                           
  2577                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2578  0212  01E5               	clrf	getPIR_AD@i
  2579  0213  01E3               	clrf	getPIR_AD@j
  2580                           
  2581                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2582  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2583  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2584  0216  1CA0               	btfss	__PIR^(0+128),1
  2585  0217  0008               	return
  2586                           
  2587                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2588  0218  1520               	bsf	__PIR^(0+128),2
  2589                           
  2590                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2591  0219  3070               	movlw	112
  2592  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2593  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2594  021C  00E0               	movwf	??_getPIR_AD
  2595  021D  0860               	movf	??_getPIR_AD,w
  2596  021E  00D6               	movwf	getAD@adcon1
  2597  021F  0864               	movf	getPIR_AD@channel1,w
  2598  0220  158A  279D  118A   	fcall	_getAD
  2599  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0225  00E1               	movwf	??_getPIR_AD+1
  2602  0226  0861               	movf	??_getPIR_AD+1,w
  2603  0227  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0228  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0229  00A2               	movwf	(__PIR^(0+128)+2)
  2606                           
  2607                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2608  022A  3033               	movlw	51
  2609  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2610  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2611  022D  00D6               	movwf	___awdiv@divisor
  2612  022E  3000               	movlw	0
  2613  022F  00D7               	movwf	___awdiv@divisor+1
  2614  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2616  0232  0822               	movf	(__PIR^(0+128)+2),w
  2617  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0235  00E0               	movwf	??_getPIR_AD
  2620  0236  01E1               	clrf	??_getPIR_AD+1
  2621  0237  0860               	movf	??_getPIR_AD,w
  2622  0238  00D8               	movwf	___awdiv@dividend
  2623  0239  0861               	movf	??_getPIR_AD+1,w
  2624  023A  00D9               	movwf	___awdiv@dividend+1
  2625  023B  118A  24AF  118A   	fcall	___awdiv
  2626  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2627  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0240  0856               	movf	?___awdiv,w
  2629  0241  00E2               	movwf	??_getPIR_AD+2
  2630  0242  0862               	movf	??_getPIR_AD+2,w
  2631  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0245  00A3               	movwf	(__PIR^(0+128)+3)
  2634                           
  2635                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2636  0246  0822               	movf	(__PIR^(0+128)+2),w
  2637  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0249  00E0               	movwf	??_getPIR_AD
  2640  024A  0860               	movf	??_getPIR_AD,w
  2641  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2642  024C  1303               	bcf	3,6	;RP1=0, select bank1
  2643  024D  00A4               	movwf	(__PIR^(0+128)+4)
  2644                           
  2645                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2646  024E  3070               	movlw	112
  2647  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0251  00E0               	movwf	??_getPIR_AD
  2650  0252  0860               	movf	??_getPIR_AD,w
  2651  0253  00D6               	movwf	getAD@adcon1
  2652  0254  085F               	movf	getPIR_AD@channel2,w
  2653  0255  158A  279D  118A   	fcall	_getAD
  2654  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2656  025A  00E1               	movwf	??_getPIR_AD+1
  2657  025B  0861               	movf	??_getPIR_AD+1,w
  2658  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2659  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2660  025E  00A2               	movwf	(__PIR^(0+128)+2)
  2661                           
  2662                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2663  025F  0822               	movf	(__PIR^(0+128)+2),w
  2664  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0262  00E0               	movwf	??_getPIR_AD
  2667  0263  0860               	movf	??_getPIR_AD,w
  2668  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2669  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2670  0266  00A1               	movwf	(__PIR^(0+128)+1)
  2671                           
  2672                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2673  0267  2A83               	goto	l4083
  2674  0268                     l4067:	
  2675                           ;PIR_B1.c: 179: case 0:
  2676                           
  2677                           
  2678                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2679  0268  300A               	movlw	10
  2680  0269  0224               	subwf	(__PIR^(0+128)+4),w
  2681  026A  1803               	skipnc
  2682  026B  2A6E               	goto	l4071
  2683                           
  2684                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2685  026C  3005               	movlw	5
  2686  026D  2A6F               	goto	L1
  2687  026E                     l4071:	
  2688                           ;PIR_B1.c: 182: } else {
  2689                           
  2690                           
  2691                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2692  026E  303C               	movlw	60
  2693  026F                     L1:	
  2694  026F  00C7               	movwf	(__PIR^(0+128)+39)
  2695  0270  3000               	movlw	0
  2696  0271  2A81               	goto	L5
  2697  0272                     l4073:	
  2698                           ;PIR_B1.c: 186: case 1:
  2699                           
  2700                           ;PIR_B1.c: 184: }
  2701                           ;PIR_B1.c: 185: break;
  2702                           
  2703                           
  2704                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2705  0272  302C               	movlw	44
  2706  0273  00C7               	movwf	(__PIR^(0+128)+39)
  2707  0274  3001               	movlw	1
  2708  0275  2A81               	goto	L5
  2709  0276                     l4075:	
  2710                           ;PIR_B1.c: 189: case 2:
  2711                           
  2712                           ;PIR_B1.c: 188: break;
  2713                           
  2714                           
  2715                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2716  0276  3058               	movlw	88
  2717  0277  00C7               	movwf	(__PIR^(0+128)+39)
  2718  0278  3002               	movlw	2
  2719  0279  2A81               	goto	L5
  2720  027A                     l4077:	
  2721                           ;PIR_B1.c: 192: case 3:
  2722                           
  2723                           ;PIR_B1.c: 191: break;
  2724                           
  2725                           
  2726                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2727  027A  3084               	movlw	132
  2728  027B  00C7               	movwf	(__PIR^(0+128)+39)
  2729  027C  3003               	movlw	3
  2730  027D  2A81               	goto	L5
  2731  027E                     l4079:	
  2732                           ;PIR_B1.c: 195: case 4:
  2733                           
  2734                           ;PIR_B1.c: 194: break;
  2735                           
  2736                           
  2737                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2738  027E  30B0               	movlw	176
  2739  027F  00C7               	movwf	(__PIR^(0+128)+39)
  2740  0280  3004               	movlw	4
  2741  0281                     L5:	
  2742  0281  00C8               	movwf	(__PIR^(0+128)+40)
  2743                           
  2744                           ;PIR_B1.c: 198: }
  2745                           
  2746                           ;PIR_B1.c: 197: break;
  2747  0282  2A94               	goto	l4085
  2748  0283                     l4083:	
  2749  0283  0823               	movf	(__PIR^(0+128)+3),w
  2750                           
  2751                           ; Switch size 1, requested type "space"
  2752                           ; Number of cases is 5, Range of values is 0 to 4
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte           16     9 (average)
  2756                           ; direct_byte           17     7 (fixed)
  2757                           ; jumptable            260     6 (fixed)
  2758                           ;	Chosen strategy is simple_byte
  2759  0284  3A00               	xorlw	0	; case 0
  2760  0285  1903               	skipnz
  2761  0286  2A68               	goto	l4067
  2762  0287  3A01               	xorlw	1	; case 1
  2763  0288  1903               	skipnz
  2764  0289  2A72               	goto	l4073
  2765  028A  3A03               	xorlw	3	; case 2
  2766  028B  1903               	skipnz
  2767  028C  2A76               	goto	l4075
  2768  028D  3A01               	xorlw	1	; case 3
  2769  028E  1903               	skipnz
  2770  028F  2A7A               	goto	l4077
  2771  0290  3A07               	xorlw	7	; case 4
  2772  0291  1903               	skipnz
  2773  0292  2A7E               	goto	l4079
  2774  0293  2A94               	goto	l4085
  2775  0294                     l4085:	
  2776                           
  2777                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2778  0294  0821               	movf	(__PIR^(0+128)+1),w
  2779  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0297  00E0               	movwf	??_getPIR_AD
  2782  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2784  029A  0827               	movf	(__PIR^(0+128)+7),w
  2785  029B  3EA8               	addlw	(__PIR+8)& (0+255)
  2786  029C  0084               	movwf	4
  2787  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2788  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2789  029F  0860               	movf	??_getPIR_AD,w
  2790  02A0  1383               	bcf	3,7	;select IRP bank1
  2791  02A1  0080               	movwf	0
  2792                           
  2793                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2794  02A2  01E5               	clrf	getPIR_AD@i
  2795  02A3  300A               	movlw	10
  2796  02A4  0265               	subwf	getPIR_AD@i,w
  2797  02A5  1803               	btfsc	3,0
  2798  02A6  2AC3               	goto	l4099
  2799  02A7                     l4093:	
  2800                           
  2801                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2802  02A7  0865               	movf	getPIR_AD@i,w
  2803  02A8  3EA8               	addlw	(__PIR+8)& (0+255)
  2804  02A9  0084               	movwf	4
  2805  02AA  0800               	movf	0,w
  2806  02AB  00E0               	movwf	??_getPIR_AD
  2807  02AC  01E1               	clrf	??_getPIR_AD+1
  2808  02AD  0860               	movf	??_getPIR_AD,w
  2809  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2810  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2811  02B0  07B2               	addwf	(__PIR^(0+128)+18),f
  2812  02B1  1803               	skipnc
  2813  02B2  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2814  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2815  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2816  02B5  0861               	movf	??_getPIR_AD+1,w
  2817  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2818  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2819  02B8  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2820  02B9  3001               	movlw	1
  2821  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02BC  00E0               	movwf	??_getPIR_AD
  2824  02BD  0860               	movf	??_getPIR_AD,w
  2825  02BE  07E5               	addwf	getPIR_AD@i,f
  2826  02BF  300A               	movlw	10
  2827  02C0  0265               	subwf	getPIR_AD@i,w
  2828  02C1  1C03               	skipc
  2829  02C2  2AA7               	goto	l4093
  2830  02C3                     l4099:	
  2831                           
  2832                           ;PIR_B1.c: 204: }
  2833                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2834  02C3  300A               	movlw	10
  2835  02C4  00D6               	movwf	___lwdiv@divisor
  2836  02C5  3000               	movlw	0
  2837  02C6  00D7               	movwf	___lwdiv@divisor+1
  2838  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2839  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2840  02C9  0833               	movf	((__PIR+1)^(0+128)+18),w
  2841  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2842  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2843  02CC  01D9               	clrf	___lwdiv@dividend+1
  2844  02CD  07D9               	addwf	___lwdiv@dividend+1,f
  2845  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2846  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2847  02D0  0832               	movf	(__PIR^(0+128)+18),w
  2848  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2849  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2850  02D3  01D8               	clrf	___lwdiv@dividend
  2851  02D4  07D8               	addwf	___lwdiv@dividend,f
  2852  02D5  118A  260A  118A   	fcall	___lwdiv
  2853  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2854  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2855  02DA  0856               	movf	?___lwdiv,w
  2856  02DB  00E0               	movwf	??_getPIR_AD
  2857  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2858  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2859  02DE  0834               	movf	(__PIR^(0+128)+20),w
  2860  02DF  3EB5               	addlw	(__PIR+21)& (0+255)
  2861  02E0  0084               	movwf	4
  2862  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2863  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2864  02E3  0860               	movf	??_getPIR_AD,w
  2865  02E4  1383               	bcf	3,7	;select IRP bank1
  2866  02E5  0080               	movwf	0
  2867                           
  2868                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2869  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2870  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2871  02E8  01B2               	clrf	(__PIR^(0+128)+18)
  2872  02E9  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2873                           
  2874                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2875  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2876  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2877  02EC  01E5               	clrf	getPIR_AD@i
  2878  02ED  300A               	movlw	10
  2879  02EE  0265               	subwf	getPIR_AD@i,w
  2880  02EF  1803               	btfsc	3,0
  2881  02F0  2B0D               	goto	l4115
  2882  02F1                     l4109:	
  2883                           
  2884                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2885  02F1  0865               	movf	getPIR_AD@i,w
  2886  02F2  3EB5               	addlw	(__PIR+21)& (0+255)
  2887  02F3  0084               	movwf	4
  2888  02F4  0800               	movf	0,w
  2889  02F5  00E0               	movwf	??_getPIR_AD
  2890  02F6  01E1               	clrf	??_getPIR_AD+1
  2891  02F7  0860               	movf	??_getPIR_AD,w
  2892  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2893  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  2894  02FA  07BF               	addwf	(__PIR^(0+128)+31),f
  2895  02FB  1803               	skipnc
  2896  02FC  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2897  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2898  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2899  02FF  0861               	movf	??_getPIR_AD+1,w
  2900  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0302  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2903  0303  3001               	movlw	1
  2904  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0306  00E0               	movwf	??_getPIR_AD
  2907  0307  0860               	movf	??_getPIR_AD,w
  2908  0308  07E5               	addwf	getPIR_AD@i,f
  2909  0309  300A               	movlw	10
  2910  030A  0265               	subwf	getPIR_AD@i,w
  2911  030B  1C03               	skipc
  2912  030C  2AF1               	goto	l4109
  2913  030D                     l4115:	
  2914                           
  2915                           ;PIR_B1.c: 210: }
  2916                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2917  030D  300A               	movlw	10
  2918  030E  00D6               	movwf	___lwdiv@divisor
  2919  030F  3000               	movlw	0
  2920  0310  00D7               	movwf	___lwdiv@divisor+1
  2921  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0313  0840               	movf	((__PIR+1)^(0+128)+31),w
  2924  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0316  01D9               	clrf	___lwdiv@dividend+1
  2927  0317  07D9               	addwf	___lwdiv@dividend+1,f
  2928  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2930  031A  083F               	movf	(__PIR^(0+128)+31),w
  2931  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2932  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2933  031D  01D8               	clrf	___lwdiv@dividend
  2934  031E  07D8               	addwf	___lwdiv@dividend,f
  2935  031F  118A  260A  118A   	fcall	___lwdiv
  2936  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0324  0856               	movf	?___lwdiv,w
  2939  0325  00E0               	movwf	??_getPIR_AD
  2940  0326  0860               	movf	??_getPIR_AD,w
  2941  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0329  00A6               	movwf	(__PIR^(0+128)+6)
  2944                           
  2945                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2946  032A  01BF               	clrf	(__PIR^(0+128)+31)
  2947  032B  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2948                           
  2949                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2950  032C  300A               	movlw	10
  2951  032D  0227               	subwf	(__PIR^(0+128)+7),w
  2952  032E  1803               	skipnc
  2953  032F  2B39               	goto	l4123
  2954                           
  2955                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2956  0330  3001               	movlw	1
  2957  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0333  00E0               	movwf	??_getPIR_AD
  2960  0334  0860               	movf	??_getPIR_AD,w
  2961  0335  1683               	bsf	3,5	;RP0=1, select bank1
  2962  0336  1303               	bcf	3,6	;RP1=0, select bank1
  2963  0337  07A7               	addwf	(__PIR^(0+128)+7),f
  2964                           
  2965                           ;PIR_B1.c: 216: } else {
  2966  0338  0008               	return
  2967  0339                     l4123:	
  2968                           
  2969                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2970  0339  01A7               	clrf	(__PIR^(0+128)+7)
  2971                           
  2972                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2973  033A  300A               	movlw	10
  2974  033B  0234               	subwf	(__PIR^(0+128)+20),w
  2975  033C  1803               	skipnc
  2976  033D  2B47               	goto	l4129
  2977                           
  2978                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2979  033E  3001               	movlw	1
  2980  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0341  00E0               	movwf	??_getPIR_AD
  2983  0342  0860               	movf	??_getPIR_AD,w
  2984  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2985  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2986  0345  07B4               	addwf	(__PIR^(0+128)+20),f
  2987  0346  0008               	return
  2988  0347                     l4129:	
  2989                           
  2990                           ;PIR_B1.c: 220: else
  2991                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  2992  0347  01B4               	clrf	(__PIR^(0+128)+20)
  2993  0348  0008               	return
  2994  0349                     __end_of_getPIR_AD:	
  2995                           
  2996                           	psect	text6
  2997  060A                     __ptext6:	
  2998 ;; *************** function ___lwdiv *****************
  2999 ;; Defined at:
  3000 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  divisor         2    0[BANK0 ] unsigned int 
  3003 ;;  dividend        2    2[BANK0 ] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  quotient        2    5[BANK0 ] unsigned int 
  3006 ;;  counter         1    7[BANK0 ] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    0[BANK0 ] unsigned int 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3016 ;;      Params:         0       4       0       0
  3017 ;;      Locals:         0       3       0       0
  3018 ;;      Temps:          0       1       0       0
  3019 ;;      Totals:         0       8       0       0
  3020 ;;Total ram usage:        8 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    3
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_getPIR_AD
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function ___lwdiv
  3032  060A                     ___lwdiv:	
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3036  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3037  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3038  060C  01DB               	clrf	___lwdiv@quotient
  3039  060D  01DC               	clrf	___lwdiv@quotient+1
  3040  060E  0857               	movf	___lwdiv@divisor+1,w
  3041  060F  0456               	iorwf	___lwdiv@divisor,w
  3042  0610  1903               	skipnz
  3043  0611  2E43               	goto	l3125
  3044  0612  01DD               	clrf	___lwdiv@counter
  3045  0613  0ADD               	incf	___lwdiv@counter,f
  3046  0614                     l3113:	
  3047  0614  1BD7               	btfsc	___lwdiv@divisor+1,7
  3048  0615  2E22               	goto	l3115
  3049  0616  3001               	movlw	1
  3050  0617                     u2725:	
  3051  0617  1003               	clrc
  3052  0618  0DD6               	rlf	___lwdiv@divisor,f
  3053  0619  0DD7               	rlf	___lwdiv@divisor+1,f
  3054  061A  3EFF               	addlw	-1
  3055  061B  1D03               	skipz
  3056  061C  2E17               	goto	u2725
  3057  061D  3001               	movlw	1
  3058  061E  00DA               	movwf	??___lwdiv
  3059  061F  085A               	movf	??___lwdiv,w
  3060  0620  07DD               	addwf	___lwdiv@counter,f
  3061  0621  2E14               	goto	l3113
  3062  0622                     l3115:	
  3063  0622  3001               	movlw	1
  3064  0623                     u2745:	
  3065  0623  1003               	clrc
  3066  0624  0DDB               	rlf	___lwdiv@quotient,f
  3067  0625  0DDC               	rlf	___lwdiv@quotient+1,f
  3068  0626  3EFF               	addlw	-1
  3069  0627  1D03               	skipz
  3070  0628  2E23               	goto	u2745
  3071  0629  0857               	movf	___lwdiv@divisor+1,w
  3072  062A  0259               	subwf	___lwdiv@dividend+1,w
  3073  062B  1D03               	skipz
  3074  062C  2E2F               	goto	u2755
  3075  062D  0856               	movf	___lwdiv@divisor,w
  3076  062E  0258               	subwf	___lwdiv@dividend,w
  3077  062F                     u2755:	
  3078  062F  1C03               	skipc
  3079  0630  2E38               	goto	l3121
  3080  0631  0856               	movf	___lwdiv@divisor,w
  3081  0632  02D8               	subwf	___lwdiv@dividend,f
  3082  0633  0857               	movf	___lwdiv@divisor+1,w
  3083  0634  1C03               	skipc
  3084  0635  03D9               	decf	___lwdiv@dividend+1,f
  3085  0636  02D9               	subwf	___lwdiv@dividend+1,f
  3086  0637  145B               	bsf	___lwdiv@quotient,0
  3087  0638                     l3121:	
  3088  0638  3001               	movlw	1
  3089  0639                     u2765:	
  3090  0639  1003               	clrc
  3091  063A  0CD7               	rrf	___lwdiv@divisor+1,f
  3092  063B  0CD6               	rrf	___lwdiv@divisor,f
  3093  063C  3EFF               	addlw	-1
  3094  063D  1D03               	skipz
  3095  063E  2E39               	goto	u2765
  3096  063F  3001               	movlw	1
  3097  0640  02DD               	subwf	___lwdiv@counter,f
  3098  0641  1D03               	btfss	3,2
  3099  0642  2E22               	goto	l3115
  3100  0643                     l3125:	
  3101  0643  085C               	movf	___lwdiv@quotient+1,w
  3102  0644  01D7               	clrf	?___lwdiv+1
  3103  0645  07D7               	addwf	?___lwdiv+1,f
  3104  0646  085B               	movf	___lwdiv@quotient,w
  3105  0647  01D6               	clrf	?___lwdiv
  3106  0648  07D6               	addwf	?___lwdiv,f
  3107  0649  0008               	return
  3108  064A                     __end_of___lwdiv:	
  3109                           
  3110                           	psect	text7
  3111  0759                     __ptext7:	
  3112 ;; *************** function _getCDS_AD *****************
  3113 ;; Defined at:
  3114 ;;		line 45 in file "../src/CDS_B1.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  channel1        1    wreg     unsigned char 
  3117 ;;  channel2        1    2[BANK0 ] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  channel1        1    7[BANK0 ] unsigned char 
  3120 ;;  j               1    6[BANK0 ] unsigned char 
  3121 ;;  i               1    5[BANK0 ] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;		None               void
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3131 ;;      Params:         0       1       0       0
  3132 ;;      Locals:         0       3       0       0
  3133 ;;      Temps:          0       2       0       0
  3134 ;;      Totals:         0       6       0       0
  3135 ;;Total ram usage:        6 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    5
  3138 ;; This function calls:
  3139 ;;		_getAD
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _getCDS_AD
  3147  0759                     _getCDS_AD:	
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3151                           ;getCDS_AD@channel1 stored from wreg
  3152  0759  1283               	bcf	3,5	;RP0=0, select bank0
  3153  075A  1303               	bcf	3,6	;RP1=0, select bank0
  3154  075B  00DD               	movwf	getCDS_AD@channel1
  3155                           
  3156                           ;CDS_B1.c: 46: char i = 0, j = 0;
  3157  075C  01DB               	clrf	getCDS_AD@i
  3158  075D  01DC               	clrf	getCDS_AD@j
  3159                           
  3160                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  3161  075E  1DA7               	btfss	__CDS,3
  3162  075F  0008               	return
  3163                           
  3164                           ;CDS_B1.c: 48: _CDS.GO = 1;
  3165  0760  14A7               	bsf	__CDS,1
  3166                           
  3167                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  3168  0761  3070               	movlw	112
  3169  0762  00D9               	movwf	??_getCDS_AD
  3170  0763  0859               	movf	??_getCDS_AD,w
  3171  0764  00D6               	movwf	getAD@adcon1
  3172  0765  085D               	movf	getCDS_AD@channel1,w
  3173  0766  158A  279D  118A   	fcall	_getAD
  3174  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3175  076A  1303               	bcf	3,6	;RP1=0, select bank0
  3176  076B  00DA               	movwf	??_getCDS_AD+1
  3177  076C  085A               	movf	??_getCDS_AD+1,w
  3178  076D  00AB               	movwf	__CDS+4
  3179                           
  3180                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  3181  076E  082B               	movf	__CDS+4,w
  3182  076F  00D9               	movwf	??_getCDS_AD
  3183  0770  0859               	movf	??_getCDS_AD,w
  3184  0771  00A9               	movwf	__CDS+2
  3185                           
  3186                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  3187  0772  3070               	movlw	112
  3188  0773  00D9               	movwf	??_getCDS_AD
  3189  0774  0859               	movf	??_getCDS_AD,w
  3190  0775  00D6               	movwf	getAD@adcon1
  3191  0776  0858               	movf	getCDS_AD@channel2,w
  3192  0777  158A  279D         	fcall	_getAD
  3193  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3194  077A  1303               	bcf	3,6	;RP1=0, select bank0
  3195  077B  00DA               	movwf	??_getCDS_AD+1
  3196  077C  085A               	movf	??_getCDS_AD+1,w
  3197  077D  00AB               	movwf	__CDS+4
  3198                           
  3199                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3200  077E  082B               	movf	__CDS+4,w
  3201  077F  00D9               	movwf	??_getCDS_AD
  3202  0780  0859               	movf	??_getCDS_AD,w
  3203  0781  00AA               	movwf	__CDS+3
  3204  0782  0008               	return
  3205  0783                     __end_of_getCDS_AD:	
  3206                           
  3207                           	psect	text8
  3208  0F9D                     __ptext8:	
  3209 ;; *************** function _getAD *****************
  3210 ;; Defined at:
  3211 ;;		line 427 in file "../src/MCU_B1.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  adcon0          1    wreg     unsigned char 
  3214 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      unsigned char 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3226 ;;      Params:         0       1       0       0
  3227 ;;      Locals:         0       1       0       0
  3228 ;;      Temps:          0       0       0       0
  3229 ;;      Totals:         0       2       0       0
  3230 ;;Total ram usage:        2 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    4
  3233 ;; This function calls:
  3234 ;;		_Timeout_Counter
  3235 ;;		_set_TimeoutCleared
  3236 ;; This function is called by:
  3237 ;;		_getCDS_AD
  3238 ;;		_getTemp_AD
  3239 ;;		_getPIR_AD
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _getAD
  3245  0F9D                     _getAD:	
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3249                           ;getAD@adcon0 stored from wreg
  3250  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0F9F  00D7               	movwf	getAD@adcon0
  3253                           
  3254                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3255  0FA0  0857               	movf	getAD@adcon0,w
  3256  0FA1  009F               	movwf	31	;volatile
  3257                           
  3258                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3259  0FA2  0856               	movf	getAD@adcon1,w
  3260  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0FA5  009F               	movwf	31	;volatile
  3263                           
  3264                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3265  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0FA8  149F               	bsf	31,1	;volatile
  3268                           
  3269                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3270  0FA9  2FAD               	goto	l3777
  3271  0FAA                     l3775:	
  3272                           
  3273                           ;MCU_B1.c: 432: Timeout_Counter();
  3274  0FAA  158A  26F3  158A   	fcall	_Timeout_Counter
  3275  0FAD                     l3777:	
  3276  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0FAF  1C9F               	btfss	31,1	;volatile
  3279  0FB0  2FB3               	goto	l3781
  3280  0FB1  1D24               	btfss	_myMain+4,2
  3281  0FB2  2FAA               	goto	l3775
  3282  0FB3                     l3781:	
  3283                           
  3284                           ;MCU_B1.c: 433: };
  3285                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3286  0FB3  158A  25F2         	fcall	_set_TimeoutCleared
  3287                           
  3288                           ;MCU_B1.c: 435: return ADRES;
  3289  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0FB7  081E               	movf	30,w	;volatile
  3292  0FB8  0008               	return
  3293  0FB9                     __end_of_getAD:	
  3294                           
  3295                           	psect	text9
  3296  0DF2                     __ptext9:	
  3297 ;; *************** function _set_TimeoutCleared *****************
  3298 ;; Defined at:
  3299 ;;		line 283 in file "../src/Main_B1.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;		None               void
  3306 ;; Registers used:
  3307 ;;		status,2
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3313 ;;      Params:         0       0       0       0
  3314 ;;      Locals:         0       0       0       0
  3315 ;;      Temps:          0       0       0       0
  3316 ;;      Totals:         0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    3
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_getAD
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           
  3328                           ;psect for function _set_TimeoutCleared
  3329  0DF2                     _set_TimeoutCleared:	
  3330                           
  3331                           ;Main_B1.c: 284: myMain.Timeout = 0;
  3332                           
  3333                           ;incstack = 0
  3334                           ; Regs used in _set_TimeoutCleared: [status,2]
  3335  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0DF4  1124               	bcf	_myMain+4,2
  3338                           
  3339                           ;Main_B1.c: 285: myMain.Timeout_Counter = 0;
  3340  0DF5  01A5               	clrf	_myMain+5
  3341  0DF6  01A6               	clrf	_myMain+6
  3342  0DF7  0008               	return
  3343  0DF8                     __end_of_set_TimeoutCleared:	
  3344                           
  3345                           	psect	text10
  3346  0EF3                     __ptext10:	
  3347 ;; *************** function _Timeout_Counter *****************
  3348 ;; Defined at:
  3349 ;;		line 274 in file "../src/Main_B1.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg, status,2
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3363 ;;      Params:         0       0       0       0
  3364 ;;      Locals:         0       0       0       0
  3365 ;;      Temps:          0       0       0       0
  3366 ;;      Totals:         0       0       0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    3
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_getAD
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           
  3378                           ;psect for function _Timeout_Counter
  3379  0EF3                     _Timeout_Counter:	
  3380                           
  3381                           ;Main_B1.c: 275: myMain.Timeout_Counter++;
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3385  0EF3  3001               	movlw	1
  3386  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0EF6  07A5               	addwf	_myMain+5,f
  3389  0EF7  1803               	skipnc
  3390  0EF8  0AA6               	incf	_myMain+6,f
  3391  0EF9  3000               	movlw	0
  3392  0EFA  07A6               	addwf	_myMain+6,f
  3393                           
  3394                           ;Main_B1.c: 276: if (myMain.Timeout_Counter == 10000) {
  3395  0EFB  3027               	movlw	39
  3396  0EFC  0626               	xorwf	_myMain+6,w
  3397  0EFD  1D03               	skipz
  3398  0EFE  2F01               	goto	u3715
  3399  0EFF  3010               	movlw	16
  3400  0F00  0625               	xorwf	_myMain+5,w
  3401  0F01                     u3715:	
  3402  0F01  1D03               	skipz
  3403  0F02  0008               	return
  3404                           
  3405                           ;Main_B1.c: 277: myMain.Timeout_Counter = 0;
  3406  0F03  01A5               	clrf	_myMain+5
  3407  0F04  01A6               	clrf	_myMain+6
  3408                           
  3409                           ;Main_B1.c: 278: myMain.Timeout = 1;
  3410  0F05  1524               	bsf	_myMain+4,2
  3411  0F06  0008               	return
  3412  0F07                     __end_of_Timeout_Counter:	
  3413                           
  3414                           	psect	text11
  3415  0E85                     __ptext11:	
  3416 ;; *************** function _WDT_Main *****************
  3417 ;; Defined at:
  3418 ;;		line 1057 in file "../src/MCU_B1.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3432 ;;      Params:         0       0       0       0
  3433 ;;      Locals:         0       0       0       0
  3434 ;;      Temps:          0       1       0       0
  3435 ;;      Totals:         0       1       0       0
  3436 ;;Total ram usage:        1 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    4
  3439 ;; This function calls:
  3440 ;;		_WDT_Clearing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _WDT_Main
  3448  0E85                     _WDT_Main:	
  3449                           
  3450                           ;MCU_B1.c: 1058: if (WDT.Enable == 1) {
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3454  0E85  1C70               	btfss	_WDT,0
  3455  0E86  0008               	return
  3456                           
  3457                           ;MCU_B1.c: 1059: if (WDT.Timer-- > 0) {
  3458  0E87  3001               	movlw	1
  3459  0E88  02F1               	subwf	_WDT+1,f
  3460  0E89  0871               	movf	_WDT+1,w
  3461  0E8A  3AFF               	xorlw	255
  3462  0E8B  1903               	skipnz
  3463  0E8C  0008               	return
  3464                           
  3465                           ;MCU_B1.c: 1060: WDT.Timer = 100;
  3466  0E8D  3064               	movlw	100
  3467  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0E90  00D6               	movwf	??_WDT_Main
  3470  0E91  0856               	movf	??_WDT_Main,w
  3471  0E92  00F1               	movwf	_WDT+1
  3472                           
  3473                           ;MCU_B1.c: 1061: WDT_Clearing();
  3474  0E93  118A  2002         	fcall	_WDT_Clearing
  3475  0E95  0008               	return
  3476  0E96                     __end_of_WDT_Main:	
  3477                           
  3478                           	psect	text12
  3479  0002                     __ptext12:	
  3480 ;; *************** function _WDT_Clearing *****************
  3481 ;; Defined at:
  3482 ;;		line 1067 in file "../src/MCU_B1.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3496 ;;      Params:         0       0       0       0
  3497 ;;      Locals:         0       0       0       0
  3498 ;;      Temps:          0       0       0       0
  3499 ;;      Totals:         0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_WDT_Main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _WDT_Clearing
  3512  0002                     _WDT_Clearing:	
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _WDT_Clearing: []
  3516  0002  0064               	clrwdt	;# 
  3517  0003  0008               	return
  3518  0004                     __end_of_WDT_Clearing:	
  3519                           
  3520                           	psect	text13
  3521  0E55                     __ptext13:	
  3522 ;; *************** function _UART_Main *****************
  3523 ;; Defined at:
  3524 ;;		line 756 in file "../src/MCU_B1.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3538 ;;      Params:         0       0       0       0
  3539 ;;      Locals:         0       0       0       0
  3540 ;;      Temps:          0       0       0       0
  3541 ;;      Totals:         0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    5
  3545 ;; This function calls:
  3546 ;;		_UART_Receive
  3547 ;;		_UART_Transmit
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _UART_Main
  3555  0E55                     _UART_Main:	
  3556                           
  3557                           ;MCU_B1.c: 757: if (UART.RxGO == 1) {
  3558                           
  3559                           ;incstack = 0
  3560                           ; Regs used in _UART_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3561  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0E57  1CCD               	btfss	_UART+11,1
  3564  0E58  2E5D               	goto	l476
  3565                           
  3566                           ;MCU_B1.c: 758: UART.RxGO = 0;
  3567  0E59  10CD               	bcf	_UART+11,1
  3568                           
  3569                           ;MCU_B1.c: 759: UART_Receive();
  3570  0E5A  158A  25E3         	fcall	_UART_Receive
  3571                           
  3572                           ;MCU_B1.c: 760: ;;
  3573                           ;MCU_B1.c: 763: } else {
  3574  0E5C  0008               	return
  3575  0E5D                     l476:	
  3576                           
  3577                           ;MCU_B1.c: 764: if (UART.TxGO == 1) {
  3578  0E5D  1C4D               	btfss	_UART+11,0
  3579  0E5E  0008               	return
  3580                           
  3581                           ;MCU_B1.c: 765: UART.TxGO = 0;
  3582  0E5F  104D               	bcf	_UART+11,0
  3583                           
  3584                           ;MCU_B1.c: 766: UART_Transmit();
  3585  0E60  158A  27B9         	fcall	_UART_Transmit
  3586  0E62  0008               	return
  3587  0E63                     __end_of_UART_Main:	
  3588                           
  3589                           	psect	text14
  3590  0FB9                     __ptext14:	
  3591 ;; *************** function _UART_Transmit *****************
  3592 ;; Defined at:
  3593 ;;		line 771 in file "../src/MCU_B1.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  i               2    1[BANK0 ] int 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;		None               void
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3607 ;;      Params:         0       0       0       0
  3608 ;;      Locals:         0       2       0       0
  3609 ;;      Temps:          0       0       0       0
  3610 ;;      Totals:         0       2       0       0
  3611 ;;Total ram usage:        2 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    4
  3614 ;; This function calls:
  3615 ;;		_putch
  3616 ;; This function is called by:
  3617 ;;		_UART_Main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _UART_Transmit
  3623  0FB9                     _UART_Transmit:	
  3624                           
  3625                           ;MCU_B1.c: 774: for (int i = 0; i < 8; i++) {
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _UART_Transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3629  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0FBB  01D7               	clrf	UART_Transmit@i
  3632  0FBC  01D8               	clrf	UART_Transmit@i+1
  3633  0FBD                     L6:	
  3634  0FBD  0858               	movf	UART_Transmit@i+1,w
  3635  0FBE  3A80               	xorlw	128
  3636  0FBF  00FF               	movwf	127
  3637  0FC0  3080               	movlw	128
  3638  0FC1  027F               	subwf	127,w
  3639  0FC2  1D03               	skipz
  3640  0FC3  2FC6               	goto	u3995
  3641  0FC4  3008               	movlw	8
  3642  0FC5  0257               	subwf	UART_Transmit@i,w
  3643  0FC6                     u3995:	
  3644  0FC6  1803               	btfsc	3,0
  3645  0FC7  0008               	return
  3646                           
  3647                           ;MCU_B1.c: 776: putch(UART.Data[i]);
  3648  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0FCA  0857               	movf	UART_Transmit@i,w
  3651  0FCB  3E42               	addlw	_UART& (0+255)
  3652  0FCC  0084               	movwf	4
  3653  0FCD  1383               	bcf	3,7	;select IRP bank0
  3654  0FCE  0800               	movf	0,w
  3655  0FCF  158A  260E  158A   	fcall	_putch
  3656  0FD2  3001               	movlw	1
  3657  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0FD5  07D7               	addwf	UART_Transmit@i,f
  3660  0FD6  1803               	skipnc
  3661  0FD7  0AD8               	incf	UART_Transmit@i+1,f
  3662  0FD8  3000               	movlw	0
  3663  0FD9  07D8               	addwf	UART_Transmit@i+1,f
  3664  0FDA  2FBD               	goto	L6
  3665  0FDB                     __end_of_UART_Transmit:	
  3666                           
  3667                           	psect	text15
  3668  0E0E                     __ptext15:	
  3669 ;; *************** function _putch *****************
  3670 ;; Defined at:
  3671 ;;		line 855 in file "../src/MCU_B1.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  byte            1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  byte            1    0[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3685 ;;      Params:         0       0       0       0
  3686 ;;      Locals:         0       1       0       0
  3687 ;;      Temps:          0       0       0       0
  3688 ;;      Totals:         0       1       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_UART_Transmit
  3696 ;;		_getche
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _putch
  3702  0E0E                     _putch:	
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _putch: [wreg]
  3706                           ;putch@byte stored from wreg
  3707  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0E10  00D6               	movwf	putch@byte
  3710  0E11                     l494:	
  3711                           ;MCU_B1.c: 858: continue;
  3712                           
  3713                           ;MCU_B1.c: 857: while (!TXIF)
  3714                           
  3715  0E11  1E0C               	btfss	12,4	;volatile
  3716  0E12  2E11               	goto	l494
  3717                           
  3718                           ;MCU_B1.c: 859: TXREG = byte;
  3719  0E13  0856               	movf	putch@byte,w
  3720  0E14  0099               	movwf	25	;volatile
  3721  0E15  0008               	return
  3722  0E16                     __end_of_putch:	
  3723                           
  3724                           	psect	text16
  3725  0DE3                     __ptext16:	
  3726 ;; *************** function _UART_Receive *****************
  3727 ;; Defined at:
  3728 ;;		line 790 in file "../src/MCU_B1.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;		None               void
  3735 ;; Registers used:
  3736 ;;		None
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3742 ;;      Params:         0       0       0       0
  3743 ;;      Locals:         0       0       0       0
  3744 ;;      Temps:          0       0       0       0
  3745 ;;      Totals:         0       0       0       0
  3746 ;;Total ram usage:        0 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_UART_Main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _UART_Receive
  3758  0DE3                     _UART_Receive:	
  3759                           
  3760                           ;MCU_B1.c: 812: myMain.Test = 1;
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _UART_Receive: []
  3764  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0DE5  1720               	bsf	_myMain,6
  3767  0DE6  0008               	return
  3768  0DE7                     __end_of_UART_Receive:	
  3769                           
  3770                           	psect	text17
  3771  0DD8                     __ptext17:	
  3772 ;; *************** function _Temp_Main *****************
  3773 ;; Defined at:
  3774 ;;		line 50 in file "../src/OverTemperature_B1.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;		None               void
  3781 ;; Registers used:
  3782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3788 ;;      Params:         0       0       0       0
  3789 ;;      Locals:         0       0       0       0
  3790 ;;      Temps:          0       0       0       0
  3791 ;;      Totals:         0       0       0       0
  3792 ;;Total ram usage:        0 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    7
  3795 ;; This function calls:
  3796 ;;		_setTemp_Main
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function _Temp_Main
  3804  0DD8                     _Temp_Main:	
  3805                           
  3806                           ;OverTemperature_B1.c: 52: setTemp_Main();
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3810  0DD8  118A  2349         	fcall	_setTemp_Main
  3811  0DDA  0008               	return
  3812  0DDB                     __end_of_Temp_Main:	
  3813                           
  3814                           	psect	text18
  3815  0349                     __ptext18:	
  3816 ;; *************** function _setTemp_Main *****************
  3817 ;; Defined at:
  3818 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;		None               void
  3825 ;; Registers used:
  3826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3832 ;;      Params:         0       0       0       0
  3833 ;;      Locals:         0       0       0       0
  3834 ;;      Temps:          0       1       0       0
  3835 ;;      Totals:         0       1       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    6
  3839 ;; This function calls:
  3840 ;;		___awdiv
  3841 ;;		_getMain_All_Error_Status
  3842 ;;		_getMain_LightsStatus
  3843 ;; This function is called by:
  3844 ;;		_Temp_Main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _setTemp_Main
  3850  0349                     _setTemp_Main:	
  3851                           
  3852                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3853                           
  3854                           ;incstack = 0
  3855                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3856  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3857  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3858  034B  1C36               	btfss	_Temp,0
  3859  034C  2BC9               	goto	l762
  3860                           
  3861                           ;OverTemperature_B1.c: 59: if (Temp.ADtoGO == 0) {
  3862  034D  1936               	btfsc	_Temp,2
  3863  034E  2B60               	goto	l3925
  3864                           
  3865                           ;OverTemperature_B1.c: 60: Temp.Time++;
  3866  034F  3001               	movlw	1
  3867  0350  07B7               	addwf	_Temp+1,f
  3868  0351  1803               	skipnc
  3869  0352  0AB8               	incf	_Temp+2,f
  3870  0353  3000               	movlw	0
  3871  0354  07B8               	addwf	_Temp+2,f
  3872                           
  3873                           ;OverTemperature_B1.c: 61: if (Temp.Time >= 500) {
  3874  0355  3001               	movlw	1
  3875  0356  0238               	subwf	_Temp+2,w
  3876  0357  30F4               	movlw	244
  3877  0358  1903               	skipnz
  3878  0359  0237               	subwf	_Temp+1,w
  3879  035A  1C03               	skipc
  3880  035B  0008               	return
  3881                           
  3882                           ;OverTemperature_B1.c: 62: Temp.Time = 0;
  3883  035C  01B7               	clrf	_Temp+1
  3884  035D  01B8               	clrf	_Temp+2
  3885                           
  3886                           ;OverTemperature_B1.c: 63: Temp.ADtoGO = 1;
  3887  035E  1536               	bsf	_Temp,2
  3888                           
  3889                           ;OverTemperature_B1.c: 64: }
  3890                           ;OverTemperature_B1.c: 65: } else {
  3891  035F  0008               	return
  3892  0360                     l3925:	
  3893                           
  3894                           ;OverTemperature_B1.c: 66: if (getMain_All_Error_Status(2) == 0) {
  3895  0360  3002               	movlw	2
  3896  0361  118A  2689  118A   	fcall	_getMain_All_Error_Status
  3897  0364  3800               	iorlw	0
  3898  0365  1D03               	skipz
  3899  0366  0008               	return
  3900                           
  3901                           ;OverTemperature_B1.c: 67: Temp.Time++;
  3902  0367  3001               	movlw	1
  3903  0368  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0369  1303               	bcf	3,6	;RP1=0, select bank0
  3905  036A  07B7               	addwf	_Temp+1,f
  3906  036B  1803               	skipnc
  3907  036C  0AB8               	incf	_Temp+2,f
  3908  036D  3000               	movlw	0
  3909  036E  07B8               	addwf	_Temp+2,f
  3910                           
  3911                           ;OverTemperature_B1.c: 68: if (Temp.Time >= 5) {
  3912  036F  3000               	movlw	0
  3913  0370  0238               	subwf	_Temp+2,w
  3914  0371  3005               	movlw	5
  3915  0372  1903               	skipnz
  3916  0373  0237               	subwf	_Temp+1,w
  3917  0374  1C03               	skipc
  3918  0375  0008               	return
  3919                           
  3920                           ;OverTemperature_B1.c: 69: Temp.Time = 0;
  3921  0376  01B7               	clrf	_Temp+1
  3922  0377  01B8               	clrf	_Temp+2
  3923                           
  3924                           ;OverTemperature_B1.c: 70: if (Temp.GO == 1) {
  3925  0378  1E36               	btfss	_Temp,4
  3926  0379  0008               	return
  3927                           
  3928                           ;OverTemperature_B1.c: 71: Temp.ADtoGO = 0;
  3929  037A  1136               	bcf	_Temp,2
  3930                           
  3931                           ;OverTemperature_B1.c: 72: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3932  037B  3002               	movlw	2
  3933  037C  00D6               	movwf	___awdiv@divisor
  3934  037D  3000               	movlw	0
  3935  037E  00D7               	movwf	___awdiv@divisor+1
  3936  037F  083D               	movf	_Temp+7,w
  3937  0380  073E               	addwf	_Temp+8,w
  3938  0381  00D8               	movwf	___awdiv@dividend
  3939  0382  01D9               	clrf	___awdiv@dividend+1
  3940  0383  0DD9               	rlf	___awdiv@dividend+1,f
  3941  0384  118A  24AF  118A   	fcall	___awdiv
  3942  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0389  0856               	movf	?___awdiv,w
  3945  038A  00DF               	movwf	??_setTemp_Main
  3946  038B  085F               	movf	??_setTemp_Main,w
  3947  038C  00BC               	movwf	_Temp+6
  3948                           
  3949                           ;OverTemperature_B1.c: 74: if (getMain_LightsStatus() == 1) {
  3950  038D  118A  2728  118A   	fcall	_getMain_LightsStatus
  3951  0390  3A01               	xorlw	1
  3952  0391  1D03               	skipz
  3953  0392  2B9B               	goto	l3941
  3954                           
  3955                           ;OverTemperature_B1.c: 75: Temp.SafeValue = 140;
  3956  0393  308C               	movlw	140
  3957  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0396  00DF               	movwf	??_setTemp_Main
  3960  0397  085F               	movf	??_setTemp_Main,w
  3961  0398  00C0               	movwf	_Temp+10
  3962                           
  3963                           ;OverTemperature_B1.c: 76: Temp.DangerValue = 100;
  3964  0399  3064               	movlw	100
  3965  039A  2BA2               	goto	L7
  3966  039B                     l3941:	
  3967                           ;OverTemperature_B1.c: 77: } else {
  3968                           
  3969                           
  3970                           ;OverTemperature_B1.c: 78: Temp.SafeValue = 100;
  3971  039B  3064               	movlw	100
  3972  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3973  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3974  039E  00DF               	movwf	??_setTemp_Main
  3975  039F  085F               	movf	??_setTemp_Main,w
  3976  03A0  00C0               	movwf	_Temp+10
  3977                           
  3978                           ;OverTemperature_B1.c: 79: Temp.DangerValue = 70;
  3979  03A1  3046               	movlw	70
  3980  03A2                     L7:	
  3981  03A2  00DF               	movwf	??_setTemp_Main
  3982  03A3  085F               	movf	??_setTemp_Main,w
  3983  03A4  00C1               	movwf	_Temp+11
  3984                           
  3985                           ;OverTemperature_B1.c: 80: }
  3986                           ;OverTemperature_B1.c: 89: if (Temp.ERROR == 1) {
  3987  03A5  1CB6               	btfss	_Temp,1
  3988  03A6  2BB6               	goto	l3957
  3989                           
  3990                           ;OverTemperature_B1.c: 90: if (Temp.AD >= Temp.SafeValue) {
  3991  03A7  0840               	movf	_Temp+10,w
  3992  03A8  023C               	subwf	_Temp+6,w
  3993  03A9  1C03               	skipc
  3994  03AA  2BC5               	goto	l3967
  3995                           
  3996                           ;OverTemperature_B1.c: 91: Temp.Count++;
  3997  03AB  3001               	movlw	1
  3998  03AC  00DF               	movwf	??_setTemp_Main
  3999  03AD  085F               	movf	??_setTemp_Main,w
  4000  03AE  07B9               	addwf	_Temp+3,f
  4001                           
  4002                           ;OverTemperature_B1.c: 92: if (Temp.Count >= 3) {
  4003  03AF  3003               	movlw	3
  4004  03B0  0239               	subwf	_Temp+3,w
  4005  03B1  1C03               	skipc
  4006  03B2  2BC6               	goto	l775
  4007                           
  4008                           ;OverTemperature_B1.c: 93: Temp.Count = 0;
  4009  03B3  01B9               	clrf	_Temp+3
  4010                           
  4011                           ;OverTemperature_B1.c: 94: Temp.ERROR = 0;
  4012  03B4  10B6               	bcf	_Temp,1
  4013                           
  4014                           ;OverTemperature_B1.c: 96: }
  4015                           ;OverTemperature_B1.c: 97: } else {
  4016                           
  4017                           ;OverTemperature_B1.c: 95: ;;
  4018  03B5  2BC6               	goto	l775
  4019  03B6                     l3957:	
  4020                           ;OverTemperature_B1.c: 99: }
  4021                           ;OverTemperature_B1.c: 100: } else {
  4022                           
  4023                           ;OverTemperature_B1.c: 98: Temp.Count = 0;
  4024                           
  4025                           
  4026                           ;OverTemperature_B1.c: 101: if (Temp.AD <= Temp.DangerValue) {
  4027  03B6  083C               	movf	_Temp+6,w
  4028  03B7  0241               	subwf	_Temp+11,w
  4029  03B8  1C03               	skipc
  4030  03B9  2BC5               	goto	l3967
  4031                           
  4032                           ;OverTemperature_B1.c: 102: Temp.Count++;
  4033  03BA  3001               	movlw	1
  4034  03BB  00DF               	movwf	??_setTemp_Main
  4035  03BC  085F               	movf	??_setTemp_Main,w
  4036  03BD  07B9               	addwf	_Temp+3,f
  4037                           
  4038                           ;OverTemperature_B1.c: 103: if (Temp.Count >= 3) {
  4039  03BE  3003               	movlw	3
  4040  03BF  0239               	subwf	_Temp+3,w
  4041  03C0  1C03               	skipc
  4042  03C1  2BC6               	goto	l775
  4043                           
  4044                           ;OverTemperature_B1.c: 104: Temp.Count = 0;
  4045  03C2  01B9               	clrf	_Temp+3
  4046                           
  4047                           ;OverTemperature_B1.c: 105: Temp.ERROR = 1;
  4048  03C3  14B6               	bsf	_Temp,1
  4049                           
  4050                           ;OverTemperature_B1.c: 106: }
  4051                           ;OverTemperature_B1.c: 107: } else {
  4052  03C4  2BC6               	goto	l775
  4053  03C5                     l3967:	
  4054                           
  4055                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  4056  03C5  01B9               	clrf	_Temp+3
  4057  03C6                     l775:	
  4058                           
  4059                           ;OverTemperature_B1.c: 109: }
  4060                           ;OverTemperature_B1.c: 110: }
  4061                           ;OverTemperature_B1.c: 111: ;;
  4062                           ;OverTemperature_B1.c: 112: ;;
  4063                           ;OverTemperature_B1.c: 118: Temp.ADH[0] = 0;
  4064  03C6  01BD               	clrf	_Temp+7
  4065                           
  4066                           ;OverTemperature_B1.c: 119: Temp.ADH[1] = 0;
  4067  03C7  01BE               	clrf	_Temp+8
  4068                           
  4069                           ;OverTemperature_B1.c: 120: }
  4070                           ;OverTemperature_B1.c: 121: }
  4071                           ;OverTemperature_B1.c: 122: }
  4072                           ;OverTemperature_B1.c: 123: }
  4073                           ;OverTemperature_B1.c: 124: } else {
  4074  03C8  0008               	return
  4075  03C9                     l762:	
  4076                           
  4077                           ;OverTemperature_B1.c: 125: if (myMain.PowerON == 1) {
  4078  03C9  1C20               	btfss	_myMain,0
  4079  03CA  0008               	return
  4080                           
  4081                           ;OverTemperature_B1.c: 126: Temp.Enable = 1;
  4082  03CB  1436               	bsf	_Temp,0
  4083  03CC  0008               	return
  4084  03CD                     __end_of_setTemp_Main:	
  4085                           
  4086                           	psect	text19
  4087  04AF                     __ptext19:	
  4088 ;; *************** function ___awdiv *****************
  4089 ;; Defined at:
  4090 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  divisor         2    0[BANK0 ] int 
  4093 ;;  dividend        2    2[BANK0 ] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  quotient        2    7[BANK0 ] int 
  4096 ;;  sign            1    6[BANK0 ] unsigned char 
  4097 ;;  counter         1    5[BANK0 ] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    0[BANK0 ] int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4107 ;;      Params:         0       4       0       0
  4108 ;;      Locals:         0       4       0       0
  4109 ;;      Temps:          0       1       0       0
  4110 ;;      Totals:         0       9       0       0
  4111 ;;Total ram usage:        9 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    3
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_setTemp_Main
  4118 ;;		_getPIR_AD
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function ___awdiv
  4124  04AF                     ___awdiv:	
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4128  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4129  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4130  04B1  01DC               	clrf	___awdiv@sign
  4131  04B2  1FD7               	btfss	___awdiv@divisor+1,7
  4132  04B3  2CBB               	goto	l2799
  4133  04B4  09D6               	comf	___awdiv@divisor,f
  4134  04B5  09D7               	comf	___awdiv@divisor+1,f
  4135  04B6  0AD6               	incf	___awdiv@divisor,f
  4136  04B7  1903               	skipnz
  4137  04B8  0AD7               	incf	___awdiv@divisor+1,f
  4138  04B9  01DC               	clrf	___awdiv@sign
  4139  04BA  0ADC               	incf	___awdiv@sign,f
  4140  04BB                     l2799:	
  4141  04BB  1FD9               	btfss	___awdiv@dividend+1,7
  4142  04BC  2CC6               	goto	l2805
  4143  04BD  09D8               	comf	___awdiv@dividend,f
  4144  04BE  09D9               	comf	___awdiv@dividend+1,f
  4145  04BF  0AD8               	incf	___awdiv@dividend,f
  4146  04C0  1903               	skipnz
  4147  04C1  0AD9               	incf	___awdiv@dividend+1,f
  4148  04C2  3001               	movlw	1
  4149  04C3  00DA               	movwf	??___awdiv
  4150  04C4  085A               	movf	??___awdiv,w
  4151  04C5  06DC               	xorwf	___awdiv@sign,f
  4152  04C6                     l2805:	
  4153  04C6  01DD               	clrf	___awdiv@quotient
  4154  04C7  01DE               	clrf	___awdiv@quotient+1
  4155  04C8  0857               	movf	___awdiv@divisor+1,w
  4156  04C9  0456               	iorwf	___awdiv@divisor,w
  4157  04CA  1903               	skipnz
  4158  04CB  2CFD               	goto	l2827
  4159  04CC  01DB               	clrf	___awdiv@counter
  4160  04CD  0ADB               	incf	___awdiv@counter,f
  4161  04CE                     l2815:	
  4162  04CE  1BD7               	btfsc	___awdiv@divisor+1,7
  4163  04CF  2CDC               	goto	l2817
  4164  04D0  3001               	movlw	1
  4165  04D1                     u2165:	
  4166  04D1  1003               	clrc
  4167  04D2  0DD6               	rlf	___awdiv@divisor,f
  4168  04D3  0DD7               	rlf	___awdiv@divisor+1,f
  4169  04D4  3EFF               	addlw	-1
  4170  04D5  1D03               	skipz
  4171  04D6  2CD1               	goto	u2165
  4172  04D7  3001               	movlw	1
  4173  04D8  00DA               	movwf	??___awdiv
  4174  04D9  085A               	movf	??___awdiv,w
  4175  04DA  07DB               	addwf	___awdiv@counter,f
  4176  04DB  2CCE               	goto	l2815
  4177  04DC                     l2817:	
  4178  04DC  3001               	movlw	1
  4179  04DD                     u2185:	
  4180  04DD  1003               	clrc
  4181  04DE  0DDD               	rlf	___awdiv@quotient,f
  4182  04DF  0DDE               	rlf	___awdiv@quotient+1,f
  4183  04E0  3EFF               	addlw	-1
  4184  04E1  1D03               	skipz
  4185  04E2  2CDD               	goto	u2185
  4186  04E3  0857               	movf	___awdiv@divisor+1,w
  4187  04E4  0259               	subwf	___awdiv@dividend+1,w
  4188  04E5  1D03               	skipz
  4189  04E6  2CE9               	goto	u2195
  4190  04E7  0856               	movf	___awdiv@divisor,w
  4191  04E8  0258               	subwf	___awdiv@dividend,w
  4192  04E9                     u2195:	
  4193  04E9  1C03               	skipc
  4194  04EA  2CF2               	goto	l2823
  4195  04EB  0856               	movf	___awdiv@divisor,w
  4196  04EC  02D8               	subwf	___awdiv@dividend,f
  4197  04ED  0857               	movf	___awdiv@divisor+1,w
  4198  04EE  1C03               	skipc
  4199  04EF  03D9               	decf	___awdiv@dividend+1,f
  4200  04F0  02D9               	subwf	___awdiv@dividend+1,f
  4201  04F1  145D               	bsf	___awdiv@quotient,0
  4202  04F2                     l2823:	
  4203  04F2  3001               	movlw	1
  4204  04F3                     u2205:	
  4205  04F3  1003               	clrc
  4206  04F4  0CD7               	rrf	___awdiv@divisor+1,f
  4207  04F5  0CD6               	rrf	___awdiv@divisor,f
  4208  04F6  3EFF               	addlw	-1
  4209  04F7  1D03               	skipz
  4210  04F8  2CF3               	goto	u2205
  4211  04F9  3001               	movlw	1
  4212  04FA  02DB               	subwf	___awdiv@counter,f
  4213  04FB  1D03               	btfss	3,2
  4214  04FC  2CDC               	goto	l2817
  4215  04FD                     l2827:	
  4216  04FD  085C               	movf	___awdiv@sign,w
  4217  04FE  1903               	btfsc	3,2
  4218  04FF  2D05               	goto	l2831
  4219  0500  09DD               	comf	___awdiv@quotient,f
  4220  0501  09DE               	comf	___awdiv@quotient+1,f
  4221  0502  0ADD               	incf	___awdiv@quotient,f
  4222  0503  1903               	skipnz
  4223  0504  0ADE               	incf	___awdiv@quotient+1,f
  4224  0505                     l2831:	
  4225  0505  085E               	movf	___awdiv@quotient+1,w
  4226  0506  01D7               	clrf	?___awdiv+1
  4227  0507  07D7               	addwf	?___awdiv+1,f
  4228  0508  085D               	movf	___awdiv@quotient,w
  4229  0509  01D6               	clrf	?___awdiv
  4230  050A  07D6               	addwf	?___awdiv,f
  4231  050B  0008               	return
  4232  050C                     __end_of___awdiv:	
  4233                           
  4234                           	psect	text20
  4235  0DD5                     __ptext20:	
  4236 ;; *************** function _Temp_Initialization *****************
  4237 ;; Defined at:
  4238 ;;		line 8 in file "../src/OverTemperature_B1.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4252 ;;      Params:         0       0       0       0
  4253 ;;      Locals:         0       0       0       0
  4254 ;;      Temps:          0       0       0       0
  4255 ;;      Totals:         0       0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		_setTemp_Initialization
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function _Temp_Initialization
  4268  0DD5                     _Temp_Initialization:	
  4269                           
  4270                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  4271                           
  4272                           ;incstack = 0
  4273                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4274  0DD5  158A  25D1         	fcall	_setTemp_Initialization
  4275  0DD7  0008               	return
  4276  0DD8                     __end_of_Temp_Initialization:	
  4277                           
  4278                           	psect	text21
  4279  0DD1                     __ptext21:	
  4280 ;; *************** function _setTemp_Initialization *****************
  4281 ;; Defined at:
  4282 ;;		line 45 in file "../src/OverTemperature_B1.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;		None               void
  4289 ;; Registers used:
  4290 ;;		None
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4296 ;;      Params:         0       0       0       0
  4297 ;;      Locals:         0       0       0       0
  4298 ;;      Temps:          0       0       0       0
  4299 ;;      Totals:         0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    3
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_Temp_Initialization
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           
  4311                           ;psect for function _setTemp_Initialization
  4312  0DD1                     _setTemp_Initialization:	
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in _setTemp_Initialization: []
  4316  0DD1  0008               	return
  4317  0DD2                     __end_of_setTemp_Initialization:	
  4318                           
  4319                           	psect	text22
  4320  0028                     __ptext22:	
  4321 ;; *************** function _PIR_Main *****************
  4322 ;; Defined at:
  4323 ;;		line 14 in file "../src/PIR_B1.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  error           1   19[BANK0 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;		None               void
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4337 ;;      Params:         0       0       0       0
  4338 ;;      Locals:         0       3       0       0
  4339 ;;      Temps:          0       5       0       0
  4340 ;;      Totals:         0       8       0       0
  4341 ;;Total ram usage:        8 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    6
  4344 ;; This function calls:
  4345 ;;		_getLights_Status
  4346 ;;		_getMain_All_Error_Status
  4347 ;;		_setLED
  4348 ;;		_setLights_Trigger
  4349 ;;		_setMain_Exception
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _PIR_Main
  4357  0028                     _PIR_Main:	
  4358                           
  4359                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4363  0028  3000               	movlw	0
  4364  0029  118A  2689  118A   	fcall	_getMain_All_Error_Status
  4365  002C  1283               	bcf	3,5	;RP0=0, select bank0
  4366  002D  1303               	bcf	3,6	;RP1=0, select bank0
  4367  002E  00E2               	movwf	??_PIR_Main
  4368  002F  0862               	movf	??_PIR_Main,w
  4369  0030  00E9               	movwf	PIR_Main@error
  4370                           
  4371                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  4372  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0032  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0033  1C20               	btfss	__PIR^(0+128),0
  4375  0034  2A07               	goto	l831
  4376                           
  4377                           ;PIR_B1.c: 17: if (error == 0) {
  4378  0035  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0036  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0037  08E9               	movf	PIR_Main@error,f
  4381  0038  1D03               	skipz
  4382  0039  2854               	goto	l832
  4383                           
  4384                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  4385  003A  1683               	bsf	3,5	;RP0=1, select bank1
  4386  003B  1303               	bcf	3,6	;RP1=0, select bank1
  4387  003C  1A20               	btfsc	__PIR^(0+128),4
  4388  003D  2886               	goto	l4193
  4389                           
  4390                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  4391  003E  1620               	bsf	__PIR^(0+128),4
  4392                           
  4393                           ;PIR_B1.c: 20: _PIR.Available = 1;
  4394  003F  17A0               	bsf	__PIR^(0+128),7
  4395                           
  4396                           ;PIR_B1.c: 21: setLED(1, 0);
  4397  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0042  01D8               	clrf	setLED@command
  4400  0043  3001               	movlw	1
  4401  0044  118A  243E  118A   	fcall	_setLED
  4402                           
  4403                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  4404  0047  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0048  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0049  19A0               	btfsc	__PIR^(0+128),3
  4407  004A  2886               	goto	l4193
  4408                           
  4409                           ;PIR_B1.c: 23: setLED(2, 1);
  4410  004B  1283               	bcf	3,5	;RP0=0, select bank0
  4411  004C  1303               	bcf	3,6	;RP1=0, select bank0
  4412  004D  01D8               	clrf	setLED@command
  4413  004E  0AD8               	incf	setLED@command,f
  4414  004F  3002               	movlw	2
  4415  0050  118A  243E  118A   	fcall	_setLED
  4416                           
  4417                           ;PIR_B1.c: 31: }
  4418                           ;PIR_B1.c: 32: }
  4419                           ;PIR_B1.c: 33: } else {
  4420  0053  2886               	goto	l4193
  4421  0054                     l832:	
  4422                           
  4423                           ;PIR_B1.c: 34: if (_PIR.Detect == 1) {
  4424  0054  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0055  1303               	bcf	3,6	;RP1=0, select bank1
  4426  0056  1E20               	btfss	__PIR^(0+128),4
  4427  0057  2886               	goto	l4193
  4428                           
  4429                           ;PIR_B1.c: 35: setMain_Exception(error);
  4430  0058  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0059  1303               	bcf	3,6	;RP1=0, select bank0
  4432  005A  0869               	movf	PIR_Main@error,w
  4433  005B  118A  264A  118A   	fcall	_setMain_Exception
  4434                           
  4435                           ;PIR_B1.c: 37: _PIR.Detect = 0;
  4436  005E  1683               	bsf	3,5	;RP0=1, select bank1
  4437  005F  1303               	bcf	3,6	;RP1=0, select bank1
  4438  0060  1220               	bcf	__PIR^(0+128),4
  4439                           
  4440                           ;PIR_B1.c: 38: _PIR.Available = 0;
  4441  0061  13A0               	bcf	__PIR^(0+128),7
  4442                           
  4443                           ;PIR_B1.c: 39: _PIR.Status = 0;
  4444  0062  1320               	bcf	__PIR^(0+128),6
  4445                           
  4446                           ;PIR_B1.c: 42: _PIR.Time = 0;
  4447  0063  01A5               	clrf	(__PIR^(0+128)+5)
  4448                           
  4449                           ;PIR_B1.c: 43: _PIR.RangeTime1 = 0;
  4450  0064  01CA               	clrf	(__PIR^(0+128)+42)
  4451                           
  4452                           ;PIR_B1.c: 44: _PIR.RangeValue = 15;
  4453  0065  300F               	movlw	15
  4454  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0068  00E2               	movwf	??_PIR_Main
  4457  0069  0862               	movf	??_PIR_Main,w
  4458  006A  1683               	bsf	3,5	;RP0=1, select bank1
  4459  006B  1303               	bcf	3,6	;RP1=0, select bank1
  4460  006C  00CC               	movwf	(__PIR^(0+128)+44)
  4461                           
  4462                           ;PIR_B1.c: 45: _PIR.RangeCount = 0;
  4463  006D  01CB               	clrf	(__PIR^(0+128)+43)
  4464                           
  4465                           ;PIR_B1.c: 47: setLED(1, 1);
  4466  006E  1283               	bcf	3,5	;RP0=0, select bank0
  4467  006F  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0070  01D8               	clrf	setLED@command
  4469  0071  0AD8               	incf	setLED@command,f
  4470  0072  3001               	movlw	1
  4471  0073  118A  243E  118A   	fcall	_setLED
  4472                           
  4473                           ;PIR_B1.c: 48: setLED(2, 0);
  4474  0076  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0077  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0078  01D8               	clrf	setLED@command
  4477  0079  3002               	movlw	2
  4478  007A  118A  243E  118A   	fcall	_setLED
  4479                           
  4480                           ;PIR_B1.c: 50: if (_PIR.OK == 1) {
  4481  007D  1683               	bsf	3,5	;RP0=1, select bank1
  4482  007E  1303               	bcf	3,6	;RP1=0, select bank1
  4483  007F  1DA0               	btfss	__PIR^(0+128),3
  4484  0080  2883               	goto	l837
  4485                           
  4486                           ;PIR_B1.c: 51: _PIR.Count = 0;
  4487  0081  01C1               	clrf	(__PIR^(0+128)+33)
  4488  0082  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4489  0083                     l837:	
  4490                           
  4491                           ;PIR_B1.c: 52: }
  4492                           ;PIR_B1.c: 53: _PIR.CloseTimeSeconds = 0;
  4493  0083  01C6               	clrf	(__PIR^(0+128)+38)
  4494                           
  4495                           ;PIR_B1.c: 54: _PIR.CloseTimeMinutes = 0;
  4496  0084  01C4               	clrf	(__PIR^(0+128)+36)
  4497  0085  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4498  0086                     l4193:	
  4499                           
  4500                           ;PIR_B1.c: 55: }
  4501                           ;PIR_B1.c: 56: }
  4502                           ;PIR_B1.c: 58: if (_PIR.ADtoGO == 0) {
  4503  0086  1683               	bsf	3,5	;RP0=1, select bank1
  4504  0087  1303               	bcf	3,6	;RP1=0, select bank1
  4505  0088  18A0               	btfsc	__PIR^(0+128),1
  4506  0089  2899               	goto	l838
  4507                           
  4508                           ;PIR_B1.c: 59: _PIR.Time++;
  4509  008A  3001               	movlw	1
  4510  008B  1283               	bcf	3,5	;RP0=0, select bank0
  4511  008C  1303               	bcf	3,6	;RP1=0, select bank0
  4512  008D  00E2               	movwf	??_PIR_Main
  4513  008E  0862               	movf	??_PIR_Main,w
  4514  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4515  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4516  0091  07A5               	addwf	(__PIR^(0+128)+5),f
  4517                           
  4518                           ;PIR_B1.c: 60: if (_PIR.Time == 10) {
  4519  0092  0825               	movf	(__PIR^(0+128)+5),w
  4520  0093  3A0A               	xorlw	10
  4521  0094  1D03               	skipz
  4522  0095  29BB               	goto	l4277
  4523                           
  4524                           ;PIR_B1.c: 61: _PIR.Time = 0;
  4525  0096  01A5               	clrf	(__PIR^(0+128)+5)
  4526                           
  4527                           ;PIR_B1.c: 62: _PIR.ADtoGO = 1;
  4528  0097  14A0               	bsf	__PIR^(0+128),1
  4529                           
  4530                           ;PIR_B1.c: 63: }
  4531                           ;PIR_B1.c: 64: } else {
  4532  0098  29BB               	goto	l4277
  4533  0099                     l838:	
  4534                           
  4535                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  4536  0099  1D20               	btfss	__PIR^(0+128),2
  4537  009A  29BB               	goto	l4277
  4538                           
  4539                           ;PIR_B1.c: 66: _PIR.GO = 0;
  4540  009B  1120               	bcf	__PIR^(0+128),2
  4541                           
  4542                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  4543  009C  1BA0               	btfsc	__PIR^(0+128),7
  4544                           
  4545                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  4546  009D  1DA0               	btfss	__PIR^(0+128),3
  4547  009E  29BB               	goto	l4277
  4548                           
  4549                           ;PIR_B1.c: 70: _PIR.Time++;
  4550  009F  3001               	movlw	1
  4551  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4552  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4553  00A2  00E2               	movwf	??_PIR_Main
  4554  00A3  0862               	movf	??_PIR_Main,w
  4555  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  4556  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  4557  00A6  07A5               	addwf	(__PIR^(0+128)+5),f
  4558                           
  4559                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  4560  00A7  0825               	movf	(__PIR^(0+128)+5),w
  4561  00A8  3A3C               	xorlw	60
  4562  00A9  1D03               	skipz
  4563  00AA  28DF               	goto	l4243
  4564                           
  4565                           ;PIR_B1.c: 72: _PIR.Time = 0;
  4566  00AB  01A5               	clrf	(__PIR^(0+128)+5)
  4567                           
  4568                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  4569  00AC  305A               	movlw	90
  4570  00AD  024B               	subwf	(__PIR^(0+128)+43),w
  4571  00AE  1C03               	skipc
  4572  00AF  28BB               	goto	l4225
  4573                           
  4574                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  4575  00B0  01CA               	clrf	(__PIR^(0+128)+42)
  4576                           
  4577                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 15) {
  4578  00B1  084C               	movf	(__PIR^(0+128)+44),w
  4579  00B2  3A0F               	xorlw	15
  4580  00B3  1903               	btfsc	3,2
  4581  00B4  28D0               	goto	L14
  4582                           
  4583                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  4584                           
  4585                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  4586  00B5  084C               	movf	(__PIR^(0+128)+44),w
  4587  00B6  3A19               	xorlw	25
  4588  00B7  1D03               	skipz
  4589  00B8  28DE               	goto	l4241
  4590                           
  4591                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  4592  00B9  3023               	movlw	35
  4593  00BA  28D7               	goto	L10
  4594  00BB                     l4225:	
  4595                           ;PIR_B1.c: 80: }
  4596                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  4597                           
  4598  00BB  300B               	movlw	11
  4599  00BC  024B               	subwf	(__PIR^(0+128)+43),w
  4600  00BD  1803               	skipnc
  4601  00BE  28DE               	goto	l4241
  4602                           
  4603                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  4604  00BF  3001               	movlw	1
  4605  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  4606  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  4607  00C2  00E2               	movwf	??_PIR_Main
  4608  00C3  0862               	movf	??_PIR_Main,w
  4609  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  4610  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  4611  00C6  07CA               	addwf	(__PIR^(0+128)+42),f
  4612                           
  4613                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  4614  00C7  084A               	movf	(__PIR^(0+128)+42),w
  4615  00C8  3A02               	xorlw	2
  4616  00C9  1D03               	skipz
  4617  00CA  28DE               	goto	l4241
  4618                           
  4619                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  4620  00CB  01CA               	clrf	(__PIR^(0+128)+42)
  4621                           
  4622                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  4623  00CC  084C               	movf	(__PIR^(0+128)+44),w
  4624  00CD  3A23               	xorlw	35
  4625  00CE  1D03               	skipz
  4626  00CF  28D2               	goto	l4237
  4627  00D0                     L14:	
  4628                           
  4629                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  4630  00D0  3019               	movlw	25
  4631  00D1  28D7               	goto	L10
  4632  00D2                     l4237:	
  4633                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  4634                           
  4635  00D2  084C               	movf	(__PIR^(0+128)+44),w
  4636  00D3  3A19               	xorlw	25
  4637  00D4  1D03               	skipz
  4638  00D5  28DE               	goto	l4241
  4639                           
  4640                           ;PIR_B1.c: 89: _PIR.RangeValue = 15;
  4641  00D6  300F               	movlw	15
  4642  00D7                     L10:	
  4643  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4644  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4645  00D9  00E2               	movwf	??_PIR_Main
  4646  00DA  0862               	movf	??_PIR_Main,w
  4647  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4648  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4649  00DD  00CC               	movwf	(__PIR^(0+128)+44)
  4650  00DE                     l4241:	
  4651                           
  4652                           ;PIR_B1.c: 90: }
  4653                           ;PIR_B1.c: 91: }
  4654                           ;PIR_B1.c: 92: }
  4655                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  4656  00DE  01CB               	clrf	(__PIR^(0+128)+43)
  4657  00DF                     l4243:	
  4658                           
  4659                           ;PIR_B1.c: 94: }
  4660                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4661                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4662  00DF  084C               	movf	(__PIR^(0+128)+44),w
  4663  00E0  074E               	addwf	(__PIR^(0+128)+46),w
  4664  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4665  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4666  00E3  00E2               	movwf	??_PIR_Main
  4667  00E4  01E3               	clrf	??_PIR_Main+1
  4668  00E5  0DE3               	rlf	??_PIR_Main+1,f
  4669  00E6  09E2               	comf	??_PIR_Main,f
  4670  00E7  09E3               	comf	??_PIR_Main+1,f
  4671  00E8  0AE2               	incf	??_PIR_Main,f
  4672  00E9  1903               	skipnz
  4673  00EA  0AE3               	incf	??_PIR_Main+1,f
  4674  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  4675  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  4676  00ED  0826               	movf	(__PIR^(0+128)+6),w
  4677  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4678  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4679  00F0  0762               	addwf	??_PIR_Main,w
  4680  00F1  00E4               	movwf	??_PIR_Main+2
  4681  00F2  0863               	movf	??_PIR_Main+1,w
  4682  00F3  1803               	skipnc
  4683  00F4  0A63               	incf	??_PIR_Main+1,w
  4684  00F5  00E5               	movwf	??_PIR_Main+3
  4685  00F6  0865               	movf	??_PIR_Main+3,w
  4686  00F7  3A80               	xorlw	128
  4687  00F8  3C80               	sublw	128
  4688  00F9  1D03               	skipz
  4689  00FA  28FF               	goto	u4625
  4690  00FB  0864               	movf	??_PIR_Main+2,w
  4691  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  4692  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  4693  00FE  0221               	subwf	(__PIR^(0+128)+1),w
  4694  00FF                     u4625:	
  4695  00FF  1C03               	skipc
  4696  0100  292D               	goto	l4253
  4697  0101  1683               	bsf	3,5	;RP0=1, select bank1
  4698  0102  1303               	bcf	3,6	;RP1=0, select bank1
  4699  0103  084C               	movf	(__PIR^(0+128)+44),w
  4700  0104  074E               	addwf	(__PIR^(0+128)+46),w
  4701  0105  1283               	bcf	3,5	;RP0=0, select bank0
  4702  0106  1303               	bcf	3,6	;RP1=0, select bank0
  4703  0107  00E2               	movwf	??_PIR_Main
  4704  0108  01E3               	clrf	??_PIR_Main+1
  4705  0109  0DE3               	rlf	??_PIR_Main+1,f
  4706  010A  1683               	bsf	3,5	;RP0=1, select bank1
  4707  010B  1303               	bcf	3,6	;RP1=0, select bank1
  4708  010C  0826               	movf	(__PIR^(0+128)+6),w
  4709  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4710  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4711  010F  0762               	addwf	??_PIR_Main,w
  4712  0110  00E4               	movwf	??_PIR_Main+2
  4713  0111  3000               	movlw	0
  4714  0112  1803               	skipnc
  4715  0113  3001               	movlw	1
  4716  0114  0763               	addwf	??_PIR_Main+1,w
  4717  0115  00E5               	movwf	??_PIR_Main+3
  4718  0116  0865               	movf	??_PIR_Main+3,w
  4719  0117  3A80               	xorlw	128
  4720  0118  00E6               	movwf	??_PIR_Main+4
  4721  0119  3080               	movlw	128
  4722  011A  0266               	subwf	??_PIR_Main+4,w
  4723  011B  1D03               	skipz
  4724  011C  2923               	goto	u4635
  4725  011D  1683               	bsf	3,5	;RP0=1, select bank1
  4726  011E  1303               	bcf	3,6	;RP1=0, select bank1
  4727  011F  0821               	movf	(__PIR^(0+128)+1),w
  4728  0120  1283               	bcf	3,5	;RP0=0, select bank0
  4729  0121  1303               	bcf	3,6	;RP1=0, select bank0
  4730  0122  0264               	subwf	??_PIR_Main+2,w
  4731  0123                     u4635:	
  4732  0123  1C03               	skipc
  4733  0124  292D               	goto	l4253
  4734                           
  4735                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4736  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4737  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4738  0127  01C1               	clrf	(__PIR^(0+128)+33)
  4739  0128  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4740                           
  4741                           ;PIR_B1.c: 100: setLED(1, 0);
  4742  0129  1283               	bcf	3,5	;RP0=0, select bank0
  4743  012A  1303               	bcf	3,6	;RP1=0, select bank0
  4744  012B  01D8               	clrf	setLED@command
  4745  012C  29A4               	goto	L15
  4746  012D                     l4253:	
  4747                           ;PIR_B1.c: 102: } else {
  4748                           
  4749                           ;PIR_B1.c: 101: setLED(2, 0);
  4750                           
  4751                           
  4752                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  4753  012D  3001               	movlw	1
  4754  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4755  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0130  00E2               	movwf	??_PIR_Main
  4757  0131  0862               	movf	??_PIR_Main,w
  4758  0132  1683               	bsf	3,5	;RP0=1, select bank1
  4759  0133  1303               	bcf	3,6	;RP1=0, select bank1
  4760  0134  07CB               	addwf	(__PIR^(0+128)+43),f
  4761                           
  4762                           ;PIR_B1.c: 104: _PIR.Count++;
  4763  0135  3001               	movlw	1
  4764  0136  07C1               	addwf	(__PIR^(0+128)+33),f
  4765  0137  1803               	skipnc
  4766  0138  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4767  0139  3000               	movlw	0
  4768  013A  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4769                           
  4770                           ;PIR_B1.c: 106: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4771  013B  1B20               	btfsc	__PIR^(0+128),6
  4772  013C  2941               	goto	l4261
  4773  013D  3002               	movlw	2
  4774  013E  1283               	bcf	3,5	;RP0=0, select bank0
  4775  013F  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0140  2943               	goto	L11
  4777  0141                     l4261:	
  4778  0141  3003               	movlw	3
  4779  0142  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0143                     L11:	
  4781  0143  00E7               	movwf	_PIR_Main$2939
  4782  0144  3000               	movlw	0
  4783  0145  00E8               	movwf	_PIR_Main$2939+1
  4784  0146  0867               	movf	_PIR_Main$2939,w
  4785  0147  00E2               	movwf	??_PIR_Main
  4786  0148  0862               	movf	??_PIR_Main,w
  4787  0149  1683               	bsf	3,5	;RP0=1, select bank1
  4788  014A  1303               	bcf	3,6	;RP1=0, select bank1
  4789  014B  00C3               	movwf	(__PIR^(0+128)+35)
  4790                           
  4791                           ;PIR_B1.c: 108: if (_PIR.Count == _PIR.TriggerValue) {
  4792  014C  0843               	movf	(__PIR^(0+128)+35),w
  4793  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4794  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4795  014F  00E2               	movwf	??_PIR_Main
  4796  0150  01E3               	clrf	??_PIR_Main+1
  4797  0151  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0152  1303               	bcf	3,6	;RP1=0, select bank1
  4799  0153  0842               	movf	((__PIR+1)^(0+128)+33),w
  4800  0154  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0155  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0156  0663               	xorwf	??_PIR_Main+1,w
  4803  0157  1D03               	skipz
  4804  0158  295F               	goto	u4655
  4805  0159  1683               	bsf	3,5	;RP0=1, select bank1
  4806  015A  1303               	bcf	3,6	;RP1=0, select bank1
  4807  015B  0841               	movf	(__PIR^(0+128)+33),w
  4808  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4809  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4810  015E  0662               	xorwf	??_PIR_Main,w
  4811  015F                     u4655:	
  4812  015F  1D03               	skipz
  4813  0160  29BB               	goto	l4277
  4814                           
  4815                           ;PIR_B1.c: 109: _PIR.Count = 0;
  4816  0161  1683               	bsf	3,5	;RP0=1, select bank1
  4817  0162  1303               	bcf	3,6	;RP1=0, select bank1
  4818  0163  01C1               	clrf	(__PIR^(0+128)+33)
  4819  0164  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4820                           
  4821                           ;PIR_B1.c: 110: _PIR.CloseTimeSeconds = 0;
  4822  0165  01C6               	clrf	(__PIR^(0+128)+38)
  4823                           
  4824                           ;PIR_B1.c: 111: _PIR.CloseTimeMinutes = 0;
  4825  0166  01C4               	clrf	(__PIR^(0+128)+36)
  4826  0167  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4827                           
  4828                           ;PIR_B1.c: 112: _PIR.Status = 1;
  4829  0168  1720               	bsf	__PIR^(0+128),6
  4830                           
  4831                           ;PIR_B1.c: 115: if (getLights_Status(1) == 0) {
  4832  0169  3001               	movlw	1
  4833  016A  158A  2663  118A   	fcall	_getLights_Status
  4834  016D  3800               	iorlw	0
  4835  016E  1D03               	skipz
  4836  016F  2978               	goto	l4271
  4837                           
  4838                           ;PIR_B1.c: 116: setLights_Trigger(1, 1);
  4839  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4840  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4841  0172  01D8               	clrf	setLights_Trigger@command
  4842  0173  0AD8               	incf	setLights_Trigger@command,f
  4843  0174  3001               	movlw	1
  4844  0175  158A  274A  118A   	fcall	_setLights_Trigger
  4845  0178                     l4271:	
  4846                           
  4847                           ;PIR_B1.c: 117: }
  4848                           ;PIR_B1.c: 120: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4849  0178  1683               	bsf	3,5	;RP0=1, select bank1
  4850  0179  1303               	bcf	3,6	;RP1=0, select bank1
  4851  017A  084C               	movf	(__PIR^(0+128)+44),w
  4852  017B  074E               	addwf	(__PIR^(0+128)+46),w
  4853  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4854  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4855  017E  00E2               	movwf	??_PIR_Main
  4856  017F  01E3               	clrf	??_PIR_Main+1
  4857  0180  0DE3               	rlf	??_PIR_Main+1,f
  4858  0181  09E2               	comf	??_PIR_Main,f
  4859  0182  09E3               	comf	??_PIR_Main+1,f
  4860  0183  0AE2               	incf	??_PIR_Main,f
  4861  0184  1903               	skipnz
  4862  0185  0AE3               	incf	??_PIR_Main+1,f
  4863  0186  1683               	bsf	3,5	;RP0=1, select bank1
  4864  0187  1303               	bcf	3,6	;RP1=0, select bank1
  4865  0188  0826               	movf	(__PIR^(0+128)+6),w
  4866  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4867  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4868  018B  0762               	addwf	??_PIR_Main,w
  4869  018C  00E4               	movwf	??_PIR_Main+2
  4870  018D  0863               	movf	??_PIR_Main+1,w
  4871  018E  1803               	skipnc
  4872  018F  0A63               	incf	??_PIR_Main+1,w
  4873  0190  00E5               	movwf	??_PIR_Main+3
  4874  0191  0865               	movf	??_PIR_Main+3,w
  4875  0192  3A80               	xorlw	128
  4876  0193  00E6               	movwf	??_PIR_Main+4
  4877  0194  3080               	movlw	128
  4878  0195  0266               	subwf	??_PIR_Main+4,w
  4879  0196  1D03               	skipz
  4880  0197  299E               	goto	u4675
  4881  0198  1683               	bsf	3,5	;RP0=1, select bank1
  4882  0199  1303               	bcf	3,6	;RP1=0, select bank1
  4883  019A  0821               	movf	(__PIR^(0+128)+1),w
  4884  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4885  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4886  019D  0264               	subwf	??_PIR_Main+2,w
  4887  019E                     u4675:	
  4888  019E  1C03               	skipc
  4889  019F  29AC               	goto	l4275
  4890                           
  4891                           ;PIR_B1.c: 121: setLED(1, 1);
  4892  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4893  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4894  01A2  01D8               	clrf	setLED@command
  4895  01A3  0AD8               	incf	setLED@command,f
  4896  01A4                     L15:	
  4897  01A4  3001               	movlw	1
  4898  01A5  118A  243E  118A   	fcall	_setLED
  4899                           
  4900                           ;PIR_B1.c: 122: setLED(2, 0);
  4901  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  4902  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  4903  01AA  01D8               	clrf	setLED@command
  4904  01AB  29B7               	goto	L12
  4905  01AC                     l4275:	
  4906                           ;PIR_B1.c: 123: } else {
  4907                           
  4908                           
  4909                           ;PIR_B1.c: 124: setLED(1, 0);
  4910  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4911  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4912  01AE  01D8               	clrf	setLED@command
  4913  01AF  3001               	movlw	1
  4914  01B0  118A  243E  118A   	fcall	_setLED
  4915                           
  4916                           ;PIR_B1.c: 125: setLED(2, 1);
  4917  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4918  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4919  01B5  01D8               	clrf	setLED@command
  4920  01B6  0AD8               	incf	setLED@command,f
  4921  01B7                     L12:	
  4922  01B7  3002               	movlw	2
  4923  01B8  118A  243E  118A   	fcall	_setLED
  4924  01BB                     l4277:	
  4925                           
  4926                           ;PIR_B1.c: 126: }
  4927                           ;PIR_B1.c: 127: }
  4928                           ;PIR_B1.c: 128: }
  4929                           ;PIR_B1.c: 129: }
  4930                           ;PIR_B1.c: 130: }
  4931                           ;PIR_B1.c: 131: }
  4932                           ;PIR_B1.c: 132: }
  4933                           ;PIR_B1.c: 133: if (_PIR.OK == 0) {
  4934  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  4935  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  4936  01BD  19A0               	btfsc	__PIR^(0+128),3
  4937  01BE  29D7               	goto	l4287
  4938                           
  4939                           ;PIR_B1.c: 134: _PIR.Count++;
  4940  01BF  3001               	movlw	1
  4941  01C0  07C1               	addwf	(__PIR^(0+128)+33),f
  4942  01C1  1803               	skipnc
  4943  01C2  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4944  01C3  3000               	movlw	0
  4945  01C4  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4946                           
  4947                           ;PIR_B1.c: 135: if (_PIR.Count == 3000) {
  4948  01C5  300B               	movlw	11
  4949  01C6  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4950  01C7  1D03               	skipz
  4951  01C8  29CB               	goto	u4695
  4952  01C9  30B8               	movlw	184
  4953  01CA  0641               	xorwf	(__PIR^(0+128)+33),w
  4954  01CB                     u4695:	
  4955  01CB  1D03               	skipz
  4956  01CC  29D7               	goto	l4287
  4957                           
  4958                           ;PIR_B1.c: 136: _PIR.Count = 0;
  4959  01CD  01C1               	clrf	(__PIR^(0+128)+33)
  4960  01CE  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4961                           
  4962                           ;PIR_B1.c: 137: _PIR.OK = 1;
  4963  01CF  15A0               	bsf	__PIR^(0+128),3
  4964                           
  4965                           ;PIR_B1.c: 138: setLED(2, 0);
  4966  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  4967  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  4968  01D2  01D8               	clrf	setLED@command
  4969  01D3  3002               	movlw	2
  4970  01D4  118A  243E  118A   	fcall	_setLED
  4971  01D7                     l4287:	
  4972                           
  4973                           ;PIR_B1.c: 139: }
  4974                           ;PIR_B1.c: 140: }
  4975                           ;PIR_B1.c: 141: if (_PIR.Status == 1) {
  4976  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4977  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4978  01D9  1F20               	btfss	__PIR^(0+128),6
  4979  01DA  0008               	return
  4980                           
  4981                           ;PIR_B1.c: 142: _PIR.CloseTimeSeconds++;
  4982  01DB  3001               	movlw	1
  4983  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  4984  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  4985  01DE  00E2               	movwf	??_PIR_Main
  4986  01DF  0862               	movf	??_PIR_Main,w
  4987  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  4988  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  4989  01E2  07C6               	addwf	(__PIR^(0+128)+38),f
  4990                           
  4991                           ;PIR_B1.c: 143: if (_PIR.CloseTimeSeconds == 100) {
  4992  01E3  0846               	movf	(__PIR^(0+128)+38),w
  4993  01E4  3A64               	xorlw	100
  4994  01E5  1D03               	skipz
  4995  01E6  0008               	return
  4996                           
  4997                           ;PIR_B1.c: 144: _PIR.CloseTimeSeconds = 0;
  4998  01E7  01C6               	clrf	(__PIR^(0+128)+38)
  4999                           
  5000                           ;PIR_B1.c: 145: _PIR.CloseTimeMinutes++;
  5001  01E8  3001               	movlw	1
  5002  01E9  07C4               	addwf	(__PIR^(0+128)+36),f
  5003  01EA  1803               	skipnc
  5004  01EB  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  5005  01EC  3000               	movlw	0
  5006  01ED  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  5007                           
  5008                           ;PIR_B1.c: 146: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  5009  01EE  0848               	movf	((__PIR+1)^(0+128)+39),w
  5010  01EF  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  5011  01F0  1D03               	skipz
  5012  01F1  29F4               	goto	u4725
  5013  01F2  0847               	movf	(__PIR^(0+128)+39),w
  5014  01F3  0644               	xorwf	(__PIR^(0+128)+36),w
  5015  01F4                     u4725:	
  5016  01F4  1D03               	skipz
  5017  01F5  0008               	return
  5018                           
  5019                           ;PIR_B1.c: 147: _PIR.CloseTimeMinutes = 0;
  5020  01F6  01C4               	clrf	(__PIR^(0+128)+36)
  5021  01F7  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5022                           
  5023                           ;PIR_B1.c: 148: _PIR.Status = 0;
  5024  01F8  1320               	bcf	__PIR^(0+128),6
  5025                           
  5026                           ;PIR_B1.c: 151: if (getLights_Status(1) == 1) {
  5027  01F9  3001               	movlw	1
  5028  01FA  158A  2663  118A   	fcall	_getLights_Status
  5029  01FD  3A01               	xorlw	1
  5030  01FE  1D03               	skipz
  5031  01FF  0008               	return
  5032                           
  5033                           ;PIR_B1.c: 152: setLights_Trigger(1, 0);
  5034  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0201  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0202  01D8               	clrf	setLights_Trigger@command
  5037  0203  3001               	movlw	1
  5038  0204  158A  274A         	fcall	_setLights_Trigger
  5039                           
  5040                           ;PIR_B1.c: 153: }
  5041                           ;PIR_B1.c: 156: }
  5042                           ;PIR_B1.c: 157: }
  5043                           ;PIR_B1.c: 158: }
  5044                           ;PIR_B1.c: 159: } else {
  5045  0206  0008               	return
  5046  0207                     l831:	
  5047                           
  5048                           ;PIR_B1.c: 160: if (myMain.PowerON == 1) {
  5049  0207  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0208  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0209  1C20               	btfss	_myMain,0
  5052  020A  0008               	return
  5053                           
  5054                           ;PIR_B1.c: 161: _PIR.Enable = 1;
  5055  020B  1683               	bsf	3,5	;RP0=1, select bank1
  5056  020C  1303               	bcf	3,6	;RP1=0, select bank1
  5057  020D  1420               	bsf	__PIR^(0+128),0
  5058  020E  0008               	return
  5059  020F                     __end_of_PIR_Main:	
  5060                           
  5061                           	psect	text23
  5062  064A                     __ptext23:	
  5063 ;; *************** function _setMain_Exception *****************
  5064 ;; Defined at:
  5065 ;;		line 289 in file "../src/Main_B1.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  command         1    wreg     unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  command         1   11[BANK0 ] unsigned char 
  5070 ;;  status          1    8[BANK0 ] unsigned char 
  5071 ;;  buz             1    7[BANK0 ] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;		None               void
  5074 ;; Registers used:
  5075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5081 ;;      Params:         0       0       0       0
  5082 ;;      Locals:         0       5       0       0
  5083 ;;      Temps:          0       2       0       0
  5084 ;;      Totals:         0       7       0       0
  5085 ;;Total ram usage:        7 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    5
  5088 ;; This function calls:
  5089 ;;		_getAll_Lights_Line
  5090 ;;		_setLED
  5091 ;;		_setLights_Trigger
  5092 ;; This function is called by:
  5093 ;;		_PIR_Main
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _setMain_Exception
  5099  064A                     _setMain_Exception:	
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5103                           ;setMain_Exception@command stored from wreg
  5104  064A  1283               	bcf	3,5	;RP0=0, select bank0
  5105  064B  1303               	bcf	3,6	;RP1=0, select bank0
  5106  064C  00E1               	movwf	setMain_Exception@command
  5107                           
  5108                           ;Main_B1.c: 290: char status = 0, buz = 0;
  5109  064D  01DE               	clrf	setMain_Exception@status
  5110  064E  01DD               	clrf	setMain_Exception@buz
  5111                           
  5112                           ;Main_B1.c: 292: status = command == 3 ? getAll_Lights_Line() : 255;
  5113  064F  0861               	movf	setMain_Exception@command,w
  5114  0650  3A03               	xorlw	3
  5115  0651  1903               	skipnz
  5116  0652  2E57               	goto	l3897
  5117  0653  30FF               	movlw	255
  5118  0654  00DF               	movwf	_setMain_Exception$2229
  5119  0655  3000               	movlw	0
  5120  0656  2E61               	goto	L16
  5121  0657                     l3897:	
  5122  0657  158A  2674  118A   	fcall	_getAll_Lights_Line
  5123  065A  1283               	bcf	3,5	;RP0=0, select bank0
  5124  065B  1303               	bcf	3,6	;RP1=0, select bank0
  5125  065C  00DB               	movwf	??_setMain_Exception
  5126  065D  01DC               	clrf	??_setMain_Exception+1
  5127  065E  085B               	movf	??_setMain_Exception,w
  5128  065F  00DF               	movwf	_setMain_Exception$2229
  5129  0660  085C               	movf	??_setMain_Exception+1,w
  5130  0661                     L16:	
  5131  0661  00E0               	movwf	_setMain_Exception$2229+1
  5132  0662  085F               	movf	_setMain_Exception$2229,w
  5133  0663  00DB               	movwf	??_setMain_Exception
  5134  0664  085B               	movf	??_setMain_Exception,w
  5135  0665  00DE               	movwf	setMain_Exception@status
  5136                           
  5137                           ;Main_B1.c: 294: if (command == 0) {
  5138  0666  08E1               	movf	setMain_Exception@command,f
  5139  0667  1D03               	skipz
  5140  0668  2E6B               	goto	l3905
  5141                           
  5142                           ;Main_B1.c: 295: setLED(command, 110);
  5143  0669  306E               	movlw	110
  5144  066A  2E76               	goto	L17
  5145  066B                     l3905:	
  5146                           ;Main_B1.c: 296: } else if (command == 5) {
  5147                           
  5148  066B  1283               	bcf	3,5	;RP0=0, select bank0
  5149  066C  1303               	bcf	3,6	;RP1=0, select bank0
  5150  066D  0861               	movf	setMain_Exception@command,w
  5151  066E  3A05               	xorlw	5
  5152  066F  1D03               	skipz
  5153  0670  2E73               	goto	l3909
  5154                           
  5155                           ;Main_B1.c: 297: __nop();
  5156  0671  0000               	nop
  5157                           
  5158                           ;Main_B1.c: 298: } else {
  5159  0672  2E7D               	goto	l3911
  5160  0673                     l3909:	
  5161                           
  5162                           ;Main_B1.c: 299: setLED(command, 111);
  5163  0673  306F               	movlw	111
  5164  0674  1283               	bcf	3,5	;RP0=0, select bank0
  5165  0675  1303               	bcf	3,6	;RP1=0, select bank0
  5166  0676                     L17:	
  5167  0676  00DB               	movwf	??_setMain_Exception
  5168  0677  085B               	movf	??_setMain_Exception,w
  5169  0678  00D8               	movwf	setLED@command
  5170  0679  0861               	movf	setMain_Exception@command,w
  5171  067A  118A  243E  118A   	fcall	_setLED
  5172  067D                     l3911:	
  5173                           
  5174                           ;Main_B1.c: 300: }
  5175                           ;Main_B1.c: 302: if (command != 0) {
  5176  067D  1283               	bcf	3,5	;RP0=0, select bank0
  5177  067E  1303               	bcf	3,6	;RP1=0, select bank0
  5178  067F  0861               	movf	setMain_Exception@command,w
  5179  0680  1903               	btfsc	3,2
  5180  0681  0008               	return
  5181                           
  5182                           ;Main_B1.c: 303: setLights_Trigger(1, 0);
  5183  0682  01D8               	clrf	setLights_Trigger@command
  5184  0683  3001               	movlw	1
  5185  0684  158A  274A         	fcall	_setLights_Trigger
  5186  0686  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0687  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0688  0008               	return
  5189  0689                     __end_of_setMain_Exception:	
  5190                           
  5191                           	psect	text24
  5192  0F4A                     __ptext24:	
  5193 ;; *************** function _setLights_Trigger *****************
  5194 ;; Defined at:
  5195 ;;		line 214 in file "../src/TriacRelay_B1.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  lights          1    wreg     unsigned char 
  5198 ;;  command         1    2[BANK0 ] unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  lights          1    4[BANK0 ] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;		None               void
  5203 ;; Registers used:
  5204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5210 ;;      Params:         0       1       0       0
  5211 ;;      Locals:         0       1       0       0
  5212 ;;      Temps:          0       1       0       0
  5213 ;;      Totals:         0       3       0       0
  5214 ;;Total ram usage:        3 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    4
  5217 ;; This function calls:
  5218 ;;		_LightsPointSelect
  5219 ;; This function is called by:
  5220 ;;		_setMain_Exception
  5221 ;;		_PIR_Main
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function _setLights_Trigger
  5227  0F4A                     _setLights_Trigger:	
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5231                           ;setLights_Trigger@lights stored from wreg
  5232  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5233  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5234  0F4C  00DA               	movwf	setLights_Trigger@lights
  5235                           
  5236                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  5237  0F4D  085A               	movf	setLights_Trigger@lights,w
  5238  0F4E  158A  262D         	fcall	_LightsPointSelect
  5239                           
  5240                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  5241  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  5242  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  5243  0F52  0834               	movf	_Lights,w
  5244  0F53  0084               	movwf	4
  5245  0F54  1383               	bcf	3,7	;select IRP bank0
  5246  0F55  1580               	bsf	0,3
  5247                           
  5248                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  5249  0F56  0858               	movf	setLights_Trigger@command,w
  5250  0F57  3A01               	xorlw	1
  5251  0F58  3000               	movlw	0
  5252  0F59  1903               	skipnz
  5253  0F5A  3001               	movlw	1
  5254  0F5B  00D9               	movwf	??_setLights_Trigger
  5255  0F5C  0834               	movf	_Lights,w
  5256  0F5D  0084               	movwf	4
  5257  0F5E  0ED9               	swapf	??_setLights_Trigger,f
  5258  0F5F  0800               	movf	0,w
  5259  0F60  0659               	xorwf	??_setLights_Trigger,w
  5260  0F61  39EF               	andlw	-17
  5261  0F62  0659               	xorwf	??_setLights_Trigger,w
  5262  0F63  0080               	movwf	0
  5263  0F64  0008               	return
  5264  0F65                     __end_of_setLights_Trigger:	
  5265                           
  5266                           	psect	text25
  5267  0E74                     __ptext25:	
  5268 ;; *************** function _getAll_Lights_Line *****************
  5269 ;; Defined at:
  5270 ;;		line 236 in file "../src/TriacRelay_B1.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  line            1    2[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      unsigned char 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5284 ;;      Params:         0       0       0       0
  5285 ;;      Locals:         0       1       0       0
  5286 ;;      Temps:          0       0       0       0
  5287 ;;      Totals:         0       1       0       0
  5288 ;;Total ram usage:        1 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    4
  5291 ;; This function calls:
  5292 ;;		_LightsPointSelect
  5293 ;; This function is called by:
  5294 ;;		_setMain_Exception
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _getAll_Lights_Line
  5300  0E74                     _getAll_Lights_Line:	
  5301                           
  5302                           ;TriacRelay_B1.c: 237: char line = 0;
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5306  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0E76  01D8               	clrf	getAll_Lights_Line@line
  5309                           
  5310                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  5311  0E77  3001               	movlw	1
  5312  0E78  158A  262D         	fcall	_LightsPointSelect
  5313                           
  5314                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  5315  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0E7C  0A34               	incf	_Lights,w
  5318  0E7D  0084               	movwf	4
  5319  0E7E  3000               	movlw	0
  5320  0E7F  1383               	bcf	3,7	;select IRP bank0
  5321  0E80  1800               	btfsc	0,0
  5322  0E81  3001               	movlw	1
  5323  0E82  00D8               	movwf	getAll_Lights_Line@line
  5324                           
  5325                           ;TriacRelay_B1.c: 250: return line;
  5326  0E83  0858               	movf	getAll_Lights_Line@line,w
  5327  0E84  0008               	return
  5328  0E85                     __end_of_getAll_Lights_Line:	
  5329                           
  5330                           	psect	text26
  5331  0689                     __ptext26:	
  5332 ;; *************** function _getMain_All_Error_Status *****************
  5333 ;; Defined at:
  5334 ;;		line 376 in file "../src/Main_B1.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  command         1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  command         1    6[BANK0 ] unsigned char 
  5339 ;;  status          1    7[BANK0 ] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      unsigned char 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0, pclath, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5349 ;;      Params:         0       0       0       0
  5350 ;;      Locals:         0       6       0       0
  5351 ;;      Temps:          0       1       0       0
  5352 ;;      Totals:         0       7       0       0
  5353 ;;Total ram usage:        7 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    4
  5356 ;; This function calls:
  5357 ;;		_getCDS_Status
  5358 ;; This function is called by:
  5359 ;;		_setTemp_Main
  5360 ;;		_PIR_Main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           
  5365                           ;psect for function _getMain_All_Error_Status
  5366  0689                     _getMain_All_Error_Status:	
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  5370                           ;getMain_All_Error_Status@command stored from wreg
  5371  0689  1283               	bcf	3,5	;RP0=0, select bank0
  5372  068A  1303               	bcf	3,6	;RP1=0, select bank0
  5373  068B  00DC               	movwf	getMain_All_Error_Status@command
  5374                           
  5375                           ;Main_B1.c: 377: char status = 0;
  5376  068C  01DD               	clrf	getMain_All_Error_Status@status
  5377                           
  5378                           ;Main_B1.c: 388: if (status == 0 && command != 2) {
  5379  068D  08DD               	movf	getMain_All_Error_Status@status,f
  5380  068E  1D03               	skipz
  5381  068F  2EA1               	goto	l3739
  5382  0690  085C               	movf	getMain_All_Error_Status@command,w
  5383  0691  3A02               	xorlw	2
  5384  0692  1903               	skipnz
  5385  0693  2EA1               	goto	l3739
  5386                           
  5387                           ;Main_B1.c: 389: status = Temp.ERROR == 1 ? 2 : 0;
  5388  0694  18B6               	btfsc	_Temp,1
  5389  0695  2E99               	goto	l3737
  5390  0696  01D8               	clrf	_getMain_All_Error_Status$2245
  5391  0697  01D9               	clrf	_getMain_All_Error_Status$2245+1
  5392  0698  2E9D               	goto	l657
  5393  0699                     l3737:	
  5394  0699  3002               	movlw	2
  5395  069A  00D8               	movwf	_getMain_All_Error_Status$2245
  5396  069B  3000               	movlw	0
  5397  069C  00D9               	movwf	_getMain_All_Error_Status$2245+1
  5398  069D                     l657:	
  5399  069D  0858               	movf	_getMain_All_Error_Status$2245,w
  5400  069E  00D7               	movwf	??_getMain_All_Error_Status
  5401  069F  0857               	movf	??_getMain_All_Error_Status,w
  5402  06A0  00DD               	movwf	getMain_All_Error_Status@status
  5403  06A1                     l3739:	
  5404                           
  5405                           ;Main_B1.c: 390: }
  5406                           ;Main_B1.c: 409: if (status == 0 && command != 5) {
  5407  06A1  08DD               	movf	getMain_All_Error_Status@status,f
  5408  06A2  1D03               	skipz
  5409  06A3  2EBD               	goto	l658
  5410  06A4  085C               	movf	getMain_All_Error_Status@command,w
  5411  06A5  3A05               	xorlw	5
  5412  06A6  1903               	skipnz
  5413  06A7  2EBD               	goto	l658
  5414                           
  5415                           ;Main_B1.c: 410: status = getCDS_Status() == 0 ? 5 : 0;
  5416  06A8  158A  2606  118A   	fcall	_getCDS_Status
  5417  06AB  3A00               	xorlw	0
  5418  06AC  1903               	skipnz
  5419  06AD  2EB3               	goto	l3747
  5420  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  5421  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  5422  06B0  01DA               	clrf	_getMain_All_Error_Status$2247
  5423  06B1  01DB               	clrf	_getMain_All_Error_Status$2247+1
  5424  06B2  2EB9               	goto	l662
  5425  06B3                     l3747:	
  5426  06B3  3005               	movlw	5
  5427  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  5428  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  5429  06B6  00DA               	movwf	_getMain_All_Error_Status$2247
  5430  06B7  3000               	movlw	0
  5431  06B8  00DB               	movwf	_getMain_All_Error_Status$2247+1
  5432  06B9                     l662:	
  5433  06B9  085A               	movf	_getMain_All_Error_Status$2247,w
  5434  06BA  00D7               	movwf	??_getMain_All_Error_Status
  5435  06BB  0857               	movf	??_getMain_All_Error_Status,w
  5436  06BC  00DD               	movwf	getMain_All_Error_Status@status
  5437  06BD                     l658:	
  5438                           
  5439                           ;Main_B1.c: 411: }
  5440                           ;Main_B1.c: 413: return status;
  5441  06BD  085D               	movf	getMain_All_Error_Status@status,w
  5442  06BE  0008               	return
  5443  06BF                     __end_of_getMain_All_Error_Status:	
  5444                           
  5445                           	psect	text27
  5446  0E06                     __ptext27:	
  5447 ;; *************** function _getCDS_Status *****************
  5448 ;; Defined at:
  5449 ;;		line 40 in file "../src/CDS_B1.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;		None
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  status          1    0[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      unsigned char 
  5456 ;; Registers used:
  5457 ;;		wreg, status,2
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5463 ;;      Params:         0       0       0       0
  5464 ;;      Locals:         0       1       0       0
  5465 ;;      Temps:          0       0       0       0
  5466 ;;      Totals:         0       1       0       0
  5467 ;;Total ram usage:        1 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    3
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_getMain_All_Error_Status
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _getCDS_Status
  5479  0E06                     _getCDS_Status:	
  5480                           
  5481                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5485  0E06  3000               	movlw	0
  5486  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0E09  1A27               	btfsc	__CDS,4
  5489  0E0A  3001               	movlw	1
  5490  0E0B  00D6               	movwf	getCDS_Status@status
  5491                           
  5492                           ;CDS_B1.c: 42: return status;
  5493  0E0C  0856               	movf	getCDS_Status@status,w
  5494  0E0D  0008               	return
  5495  0E0E                     __end_of_getCDS_Status:	
  5496                           
  5497                           	psect	text28
  5498  0EDF                     __ptext28:	
  5499 ;; *************** function _PIR_Initialization *****************
  5500 ;; Defined at:
  5501 ;;		line 7 in file "../src/PIR_B1.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5515 ;;      Params:         0       0       0       0
  5516 ;;      Locals:         0       0       0       0
  5517 ;;      Temps:          0       1       0       0
  5518 ;;      Totals:         0       1       0       0
  5519 ;;Total ram usage:        1 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    5
  5522 ;; This function calls:
  5523 ;;		_setLED
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _PIR_Initialization
  5531  0EDF                     _PIR_Initialization:	
  5532                           
  5533                           ;PIR_B1.c: 8: setLED(1, 1);
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5537  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5538  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  5539  0EE1  01D8               	clrf	setLED@command
  5540  0EE2  0AD8               	incf	setLED@command,f
  5541  0EE3  3001               	movlw	1
  5542  0EE4  118A  243E         	fcall	_setLED
  5543                           
  5544                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  5545  0EE6  300F               	movlw	15
  5546  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0EE9  00DA               	movwf	??_PIR_Initialization
  5549  0EEA  085A               	movf	??_PIR_Initialization,w
  5550  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  5551  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  5552  0EED  00CC               	movwf	(__PIR^(0+128)+44)
  5553                           
  5554                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  5555  0EEE  3005               	movlw	5
  5556  0EEF  00C7               	movwf	(__PIR^(0+128)+39)
  5557  0EF0  3000               	movlw	0
  5558  0EF1  00C8               	movwf	(__PIR^(0+128)+40)
  5559  0EF2  0008               	return
  5560  0EF3                     __end_of_PIR_Initialization:	
  5561                           
  5562                           	psect	text29
  5563  0EBA                     __ptext29:	
  5564 ;; *************** function _Mcu_Initialization *****************
  5565 ;; Defined at:
  5566 ;;		line 30 in file "../src/MCU_B1.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;		None               void
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5580 ;;      Params:         0       0       0       0
  5581 ;;      Locals:         0       0       0       0
  5582 ;;      Temps:          0       0       0       0
  5583 ;;      Totals:         0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    4
  5587 ;; This function calls:
  5588 ;;		_ADC_Set
  5589 ;;		_Fosc_Set
  5590 ;;		_IO_Set
  5591 ;;		_TMR1_Set
  5592 ;;		_UART_Set
  5593 ;;		_WDT_Set
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _Mcu_Initialization
  5601  0EBA                     _Mcu_Initialization:	
  5602                           
  5603                           ;MCU_B1.c: 32: Fosc_Set();
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5607  0EBA  158A  25E7  158A   	fcall	_Fosc_Set
  5608                           
  5609                           ;MCU_B1.c: 34: IO_Set();
  5610  0EBD  158A  271C  158A   	fcall	_IO_Set
  5611                           
  5612                           ;MCU_B1.c: 36: ;;
  5613                           ;MCU_B1.c: 38: TMR1_Set();
  5614  0EC0  158A  2639  158A   	fcall	_TMR1_Set
  5615                           
  5616                           ;MCU_B1.c: 40: ADC_Set();
  5617  0EC3  158A  25FF  158A   	fcall	_ADC_Set
  5618                           
  5619                           ;MCU_B1.c: 42: ;;
  5620                           ;MCU_B1.c: 44: ;;
  5621                           ;MCU_B1.c: 46: ;;
  5622                           ;MCU_B1.c: 48: ;;
  5623                           ;MCU_B1.c: 50: UART_Set();
  5624  0EC6  158A  2731  158A   	fcall	_UART_Set
  5625                           
  5626                           ;MCU_B1.c: 52: WDT_Set();
  5627  0EC9  158A  2647         	fcall	_WDT_Set
  5628  0ECB  0008               	return
  5629  0ECC                     __end_of_Mcu_Initialization:	
  5630                           
  5631                           	psect	text30
  5632  0E47                     __ptext30:	
  5633 ;; *************** function _WDT_Set *****************
  5634 ;; Defined at:
  5635 ;;		line 1043 in file "../src/MCU_B1.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;		None               void
  5642 ;; Registers used:
  5643 ;;		wreg
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5649 ;;      Params:         0       0       0       0
  5650 ;;      Locals:         0       0       0       0
  5651 ;;      Temps:          0       1       0       0
  5652 ;;      Totals:         0       1       0       0
  5653 ;;Total ram usage:        1 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    3
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_Mcu_Initialization
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function _WDT_Set
  5665  0E47                     _WDT_Set:	
  5666                           
  5667                           ;MCU_B1.c: 1045: PSA = 1;
  5668                           
  5669                           ;incstack = 0
  5670                           ; Regs used in _WDT_Set: [wreg]
  5671  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  5673  0E49  1581               	bsf	1,3	;volatile
  5674                           
  5675                           ;MCU_B1.c: 1046: PS0 = 1;
  5676  0E4A  1401               	bsf	1,0	;volatile
  5677                           
  5678                           ;MCU_B1.c: 1047: PS1 = 1;
  5679  0E4B  1481               	bsf	1,1	;volatile
  5680                           
  5681                           ;MCU_B1.c: 1048: PS2 = 1;
  5682  0E4C  1501               	bsf	1,2	;volatile
  5683                           
  5684                           ;MCU_B1.c: 1052: WDT.Enable = 1;
  5685  0E4D  1470               	bsf	_WDT,0
  5686                           
  5687                           ;MCU_B1.c: 1053: WDT.Timer = 10;
  5688  0E4E  300A               	movlw	10
  5689  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0E51  00D6               	movwf	??_WDT_Set
  5692  0E52  0856               	movf	??_WDT_Set,w
  5693  0E53  00F1               	movwf	_WDT+1
  5694  0E54  0008               	return
  5695  0E55                     __end_of_WDT_Set:	
  5696                           
  5697                           	psect	text31
  5698  0F31                     __ptext31:	
  5699 ;; *************** function _UART_Set *****************
  5700 ;; Defined at:
  5701 ;;		line 719 in file "../src/MCU_B1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;		None               void
  5708 ;; Registers used:
  5709 ;;		wreg
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5715 ;;      Params:         0       0       0       0
  5716 ;;      Locals:         0       0       0       0
  5717 ;;      Temps:          0       0       0       0
  5718 ;;      Totals:         0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    3
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_Mcu_Initialization
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _UART_Set
  5731  0F31                     _UART_Set:	
  5732                           
  5733                           ;MCU_B1.c: 721: TRISC7 = 1;
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in _UART_Set: [wreg]
  5737  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  5738  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  5739  0F33  1787               	bsf	7,7	;volatile
  5740                           
  5741                           ;MCU_B1.c: 722: TRISC6 = 1;
  5742  0F34  1707               	bsf	7,6	;volatile
  5743                           
  5744                           ;MCU_B1.c: 723: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  5745  0F35  3033               	movlw	51
  5746  0F36  0099               	movwf	25	;volatile
  5747                           
  5748                           ;MCU_B1.c: 728: RCSTA = (0 | 0x90);
  5749  0F37  3090               	movlw	144
  5750  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5751  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5752  0F3A  0098               	movwf	24	;volatile
  5753                           
  5754                           ;MCU_B1.c: 729: TXSTA = (0x4 | 0 | 0x20);
  5755  0F3B  3024               	movlw	36
  5756  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  5758  0F3E  0098               	movwf	24	;volatile
  5759                           
  5760                           ;MCU_B1.c: 730: TX9 = 0;
  5761  0F3F  1318               	bcf	24,6	;volatile
  5762                           
  5763                           ;MCU_B1.c: 731: RX9 = 0;
  5764  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  5765  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  5766  0F42  1318               	bcf	24,6	;volatile
  5767                           
  5768                           ;MCU_B1.c: 732: TXIE = 0;
  5769  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0F45  120C               	bcf	12,4	;volatile
  5772                           
  5773                           ;MCU_B1.c: 733: RCIE = 1;
  5774  0F46  168C               	bsf	12,5	;volatile
  5775                           
  5776                           ;MCU_B1.c: 734: PEIE = 1;
  5777  0F47  170B               	bsf	11,6	;volatile
  5778                           
  5779                           ;MCU_B1.c: 735: GIE = 1;
  5780  0F48  178B               	bsf	11,7	;volatile
  5781  0F49  0008               	return
  5782  0F4A                     __end_of_UART_Set:	
  5783                           
  5784                           	psect	text32
  5785  0E39                     __ptext32:	
  5786 ;; *************** function _TMR1_Set *****************
  5787 ;; Defined at:
  5788 ;;		line 199 in file "../src/MCU_B1.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5802 ;;      Params:         0       0       0       0
  5803 ;;      Locals:         0       0       0       0
  5804 ;;      Temps:          0       0       0       0
  5805 ;;      Totals:         0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    3
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_Mcu_Initialization
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _TMR1_Set
  5818  0E39                     _TMR1_Set:	
  5819                           
  5820                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in _TMR1_Set: [wreg]
  5824  0E39  3041               	movlw	65
  5825  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  5826  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  5827  0E3C  0090               	movwf	16	;volatile
  5828                           
  5829                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5830  0E3D  30FA               	movlw	250
  5831  0E3E  008F               	movwf	15	;volatile
  5832                           
  5833                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5834  0E3F  3038               	movlw	56
  5835  0E40  008E               	movwf	14	;volatile
  5836                           
  5837                           ;MCU_B1.c: 203: TMR1IE = 1;
  5838  0E41  1683               	bsf	3,5	;RP0=1, select bank1
  5839  0E42  1303               	bcf	3,6	;RP1=0, select bank1
  5840  0E43  140C               	bsf	12,0	;volatile
  5841                           
  5842                           ;MCU_B1.c: 204: PEIE = 1;
  5843  0E44  170B               	bsf	11,6	;volatile
  5844                           
  5845                           ;MCU_B1.c: 205: GIE = 1;
  5846  0E45  178B               	bsf	11,7	;volatile
  5847  0E46  0008               	return
  5848  0E47                     __end_of_TMR1_Set:	
  5849                           
  5850                           	psect	text33
  5851  0F1C                     __ptext33:	
  5852 ;; *************** function _IO_Set *****************
  5853 ;; Defined at:
  5854 ;;		line 60 in file "../src/MCU_B1.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;		None               void
  5861 ;; Registers used:
  5862 ;;		wreg, status,2
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5868 ;;      Params:         0       0       0       0
  5869 ;;      Locals:         0       0       0       0
  5870 ;;      Temps:          0       0       0       0
  5871 ;;      Totals:         0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    3
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_Mcu_Initialization
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _IO_Set
  5884  0F1C                     _IO_Set:	
  5885                           
  5886                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _IO_Set: [wreg+status,2]
  5890  0F1C  302F               	movlw	47
  5891  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  5892  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  5893  0F1F  0085               	movwf	5	;volatile
  5894                           
  5895                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5896  0F20  3001               	movlw	1
  5897  0F21  0086               	movwf	6	;volatile
  5898                           
  5899                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5900  0F22  0187               	clrf	7	;volatile
  5901                           
  5902                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5903  0F23  3007               	movlw	7
  5904  0F24  1683               	bsf	3,5	;RP0=1, select bank3
  5905  0F25  1703               	bsf	3,6	;RP1=1, select bank3
  5906  0F26  0085               	movwf	5	;volatile
  5907                           
  5908                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5909  0F27  3001               	movlw	1
  5910  0F28  0086               	movwf	6	;volatile
  5911                           
  5912                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5913  0F29  30AF               	movlw	175
  5914  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5915  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  5916  0F2C  0085               	movwf	5	;volatile
  5917                           
  5918                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5919  0F2D  3001               	movlw	1
  5920  0F2E  0086               	movwf	6	;volatile
  5921                           
  5922                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5923  0F2F  0187               	clrf	7	;volatile
  5924  0F30  0008               	return
  5925  0F31                     __end_of_IO_Set:	
  5926                           
  5927                           	psect	text34
  5928  0DE7                     __ptext34:	
  5929 ;; *************** function _Fosc_Set *****************
  5930 ;; Defined at:
  5931 ;;		line 56 in file "../src/MCU_B1.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;		None               void
  5938 ;; Registers used:
  5939 ;;		wreg
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5945 ;;      Params:         0       0       0       0
  5946 ;;      Locals:         0       0       0       0
  5947 ;;      Temps:          0       0       0       0
  5948 ;;      Totals:         0       0       0       0
  5949 ;;Total ram usage:        0 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    3
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_Mcu_Initialization
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _Fosc_Set
  5961  0DE7                     _Fosc_Set:	
  5962                           
  5963                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5964                           
  5965                           ;incstack = 0
  5966                           ; Regs used in _Fosc_Set: [wreg]
  5967  0DE7  303C               	movlw	60
  5968  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  5969  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  5970  0DEA  0090               	movwf	16	;volatile
  5971  0DEB  0008               	return
  5972  0DEC                     __end_of_Fosc_Set:	
  5973                           
  5974                           	psect	text35
  5975  0DFF                     __ptext35:	
  5976 ;; *************** function _ADC_Set *****************
  5977 ;; Defined at:
  5978 ;;		line 420 in file "../src/MCU_B1.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;		None               void
  5985 ;; Registers used:
  5986 ;;		wreg
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5992 ;;      Params:         0       0       0       0
  5993 ;;      Locals:         0       0       0       0
  5994 ;;      Temps:          0       0       0       0
  5995 ;;      Totals:         0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    3
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_Mcu_Initialization
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function _ADC_Set
  6008  0DFF                     _ADC_Set:	
  6009                           
  6010                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in _ADC_Set: [wreg]
  6014  0DFF  3073               	movlw	115
  6015  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  6016  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  6017  0E02  009F               	movwf	31	;volatile
  6018                           
  6019                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  6020  0E03  30C1               	movlw	193
  6021  0E04  009D               	movwf	29	;volatile
  6022  0E05  0008               	return
  6023  0E06                     __end_of_ADC_Set:	
  6024                           
  6025                           	psect	text36
  6026  0E16                     __ptext36:	
  6027 ;; *************** function _Lights_Main *****************
  6028 ;; Defined at:
  6029 ;;		line 54 in file "../src/TriacRelay_B1.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;		None               void
  6036 ;; Registers used:
  6037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6043 ;;      Params:         0       0       0       0
  6044 ;;      Locals:         0       0       0       0
  6045 ;;      Temps:          0       0       0       0
  6046 ;;      Totals:         0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    7
  6050 ;; This function calls:
  6051 ;;		_Lights_Close
  6052 ;;		_Lights_Control
  6053 ;;		_setLights_Main
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function _Lights_Main
  6061  0E16                     _Lights_Main:	
  6062                           
  6063                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6067  0E16  3001               	movlw	1
  6068  0E17  118A  2783  158A   	fcall	_setLights_Main
  6069                           
  6070                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  6071  0E1A  3001               	movlw	1
  6072  0E1B  118A  250C  158A   	fcall	_Lights_Control
  6073                           
  6074                           ;TriacRelay_B1.c: 81: Lights_Close();
  6075  0E1E  158A  2707         	fcall	_Lights_Close
  6076  0E20  0008               	return
  6077  0E21                     __end_of_Lights_Main:	
  6078                           
  6079                           	psect	text37
  6080  0783                     __ptext37:	
  6081 ;; *************** function _setLights_Main *****************
  6082 ;; Defined at:
  6083 ;;		line 93 in file "../src/TriacRelay_B1.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  lights          1    wreg     unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  lights          1    6[BANK0 ] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;		None               void
  6090 ;; Registers used:
  6091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6097 ;;      Params:         0       0       0       0
  6098 ;;      Locals:         0       1       0       0
  6099 ;;      Temps:          0       0       0       0
  6100 ;;      Totals:         0       1       0       0
  6101 ;;Total ram usage:        1 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    6
  6104 ;; This function calls:
  6105 ;;		_LightsPointSelect
  6106 ;;		_setLights
  6107 ;; This function is called by:
  6108 ;;		_Lights_Main
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _setLights_Main
  6114  0783                     _setLights_Main:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6118                           ;setLights_Main@lights stored from wreg
  6119  0783  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0784  1303               	bcf	3,6	;RP1=0, select bank0
  6121  0785  00DC               	movwf	setLights_Main@lights
  6122                           
  6123                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  6124  0786  085C               	movf	setLights_Main@lights,w
  6125  0787  158A  262D  118A   	fcall	_LightsPointSelect
  6126                           
  6127                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  6128  078A  1283               	bcf	3,5	;RP0=0, select bank0
  6129  078B  1303               	bcf	3,6	;RP1=0, select bank0
  6130  078C  0834               	movf	_Lights,w
  6131  078D  0084               	movwf	4
  6132  078E  1383               	bcf	3,7	;select IRP bank0
  6133  078F  1880               	btfsc	0,1
  6134  0790  0008               	return
  6135                           
  6136                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  6137  0791  0834               	movf	_Lights,w
  6138  0792  0084               	movwf	4
  6139  0793  1D80               	btfss	0,3
  6140  0794  0008               	return
  6141                           
  6142                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  6143  0795  1935               	btfsc	_LightsControl,2
  6144  0796  0008               	return
  6145                           
  6146                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  6147  0797  0834               	movf	_Lights,w
  6148  0798  0084               	movwf	4
  6149  0799  1180               	bcf	0,3
  6150                           
  6151                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  6152  079A  0834               	movf	_Lights,w
  6153  079B  0084               	movwf	4
  6154  079C  1E00               	btfss	0,4
  6155  079D  2FA4               	goto	l3985
  6156                           
  6157                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  6158  079E  01D9               	clrf	setLights@status
  6159  079F  0AD9               	incf	setLights@status,f
  6160  07A0  085C               	movf	setLights_Main@lights,w
  6161  07A1  118A  25B9         	fcall	_setLights
  6162                           
  6163                           ;TriacRelay_B1.c: 102: } else {
  6164  07A3  0008               	return
  6165  07A4                     l3985:	
  6166                           
  6167                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  6168  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  6169  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  6170  07A6  01D9               	clrf	setLights@status
  6171  07A7  085C               	movf	setLights_Main@lights,w
  6172  07A8  118A  25B9         	fcall	_setLights
  6173  07AA  0008               	return
  6174  07AB                     __end_of_setLights_Main:	
  6175                           
  6176                           	psect	text38
  6177  05B9                     __ptext38:	
  6178 ;; *************** function _setLights *****************
  6179 ;; Defined at:
  6180 ;;		line 111 in file "../src/TriacRelay_B1.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  lights          1    wreg     unsigned char 
  6183 ;;  status          1    3[BANK0 ] unsigned char 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  lights          1    5[BANK0 ] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;		None               void
  6188 ;; Registers used:
  6189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6195 ;;      Params:         0       1       0       0
  6196 ;;      Locals:         0       1       0       0
  6197 ;;      Temps:          0       1       0       0
  6198 ;;      Totals:         0       3       0       0
  6199 ;;Total ram usage:        3 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    5
  6202 ;; This function calls:
  6203 ;;		_LightsPointSelect
  6204 ;;		_setLights_Line
  6205 ;; This function is called by:
  6206 ;;		_setLights_Main
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _setLights
  6212  05B9                     _setLights:	
  6213                           
  6214                           ;incstack = 0
  6215                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6216                           ;setLights@lights stored from wreg
  6217  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  6218  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  6219  05BB  00DB               	movwf	setLights@lights
  6220                           
  6221                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  6222  05BC  085B               	movf	setLights@lights,w
  6223  05BD  158A  262D  118A   	fcall	_LightsPointSelect
  6224                           
  6225                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  6226  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  6227  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  6228  05C2  0834               	movf	_Lights,w
  6229  05C3  0084               	movwf	4
  6230  05C4  1383               	bcf	3,7	;select IRP bank0
  6231  05C5  1480               	bsf	0,1
  6232                           
  6233                           ;TriacRelay_B1.c: 121: if (status == 1) {
  6234  05C6  0859               	movf	setLights@status,w
  6235  05C7  3A01               	xorlw	1
  6236  05C8  1D03               	skipz
  6237  05C9  2DE7               	goto	l3763
  6238                           
  6239                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  6240  05CA  0834               	movf	_Lights,w
  6241  05CB  0084               	movwf	4
  6242  05CC  1900               	btfsc	0,2
  6243  05CD  2E02               	goto	l3767
  6244                           
  6245                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  6246  05CE  0834               	movf	_Lights,w
  6247  05CF  0084               	movwf	4
  6248  05D0  1500               	bsf	0,2
  6249                           
  6250                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  6251  05D1  0A34               	incf	_Lights,w
  6252  05D2  0084               	movwf	4
  6253  05D3  1480               	bsf	0,1
  6254                           
  6255                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  6256  05D4  300A               	movlw	10
  6257  05D5  00DA               	movwf	??_setLights
  6258  05D6  0834               	movf	_Lights,w
  6259  05D7  3E06               	addlw	6
  6260  05D8  0084               	movwf	4
  6261  05D9  085A               	movf	??_setLights,w
  6262  05DA  0080               	movwf	0
  6263                           
  6264                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  6265  05DB  300D               	movlw	13
  6266  05DC  00DA               	movwf	??_setLights
  6267  05DD  0834               	movf	_Lights,w
  6268  05DE  3E04               	addlw	4
  6269  05DF  0084               	movwf	4
  6270  05E0  085A               	movf	??_setLights,w
  6271  05E1  0080               	movwf	0
  6272                           
  6273                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  6274  05E2  085B               	movf	setLights@lights,w
  6275  05E3  158A  26A8  118A   	fcall	_setLights_Line
  6276                           
  6277                           ;TriacRelay_B1.c: 128: }
  6278                           ;TriacRelay_B1.c: 129: } else {
  6279  05E6  2E02               	goto	l3767
  6280  05E7                     l3763:	
  6281                           
  6282                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  6283  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  6284  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  6285  05E9  0834               	movf	_Lights,w
  6286  05EA  0084               	movwf	4
  6287  05EB  1383               	bcf	3,7	;select IRP bank0
  6288  05EC  1D00               	btfss	0,2
  6289  05ED  2E02               	goto	l3767
  6290                           
  6291                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  6292  05EE  0834               	movf	_Lights,w
  6293  05EF  0084               	movwf	4
  6294  05F0  1100               	bcf	0,2
  6295                           
  6296                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  6297  05F1  0A34               	incf	_Lights,w
  6298  05F2  0084               	movwf	4
  6299  05F3  1080               	bcf	0,1
  6300                           
  6301                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  6302  05F4  3004               	movlw	4
  6303  05F5  00DA               	movwf	??_setLights
  6304  05F6  0834               	movf	_Lights,w
  6305  05F7  3E06               	addlw	6
  6306  05F8  0084               	movwf	4
  6307  05F9  085A               	movf	??_setLights,w
  6308  05FA  0080               	movwf	0
  6309                           
  6310                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  6311  05FB  3007               	movlw	7
  6312  05FC  00DA               	movwf	??_setLights
  6313  05FD  0834               	movf	_Lights,w
  6314  05FE  3E04               	addlw	4
  6315  05FF  0084               	movwf	4
  6316  0600  085A               	movf	??_setLights,w
  6317  0601  0080               	movwf	0
  6318  0602                     l3767:	
  6319                           
  6320                           ;TriacRelay_B1.c: 135: }
  6321                           ;TriacRelay_B1.c: 136: }
  6322                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  6323  0602  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0603  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0604  085B               	movf	setLights@lights,w
  6326  0605  3A01               	xorlw	1
  6327  0606  1D03               	skipz
  6328  0607  0008               	return
  6329                           
  6330                           ;TriacRelay_B1.c: 139: RB2 = 1;
  6331  0608  1506               	bsf	6,2	;volatile
  6332  0609  0008               	return
  6333  060A                     __end_of_setLights:	
  6334                           
  6335                           	psect	text39
  6336  0EA8                     __ptext39:	
  6337 ;; *************** function _setLights_Line *****************
  6338 ;; Defined at:
  6339 ;;		line 221 in file "../src/TriacRelay_B1.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  lights          1    wreg     unsigned char 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  lights          1    2[BANK0 ] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;		None               void
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6353 ;;      Params:         0       0       0       0
  6354 ;;      Locals:         0       1       0       0
  6355 ;;      Temps:          0       0       0       0
  6356 ;;      Totals:         0       1       0       0
  6357 ;;Total ram usage:        1 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    4
  6360 ;; This function calls:
  6361 ;;		_LightsPointSelect
  6362 ;; This function is called by:
  6363 ;;		_setLights
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function _setLights_Line
  6369  0EA8                     _setLights_Line:	
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6373                           ;setLights_Line@lights stored from wreg
  6374  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0EAA  00D8               	movwf	setLights_Line@lights
  6377                           
  6378                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  6379  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  6380  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  6381  0EAD  1050               	bcf	(_Lights1^(0+128)+1),0
  6382                           
  6383                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  6384  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6385  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6386  0EB0  0858               	movf	setLights_Line@lights,w
  6387  0EB1  158A  262D         	fcall	_LightsPointSelect
  6388                           
  6389                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  6390  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0EB5  0A34               	incf	_Lights,w
  6393  0EB6  0084               	movwf	4
  6394  0EB7  1383               	bcf	3,7	;select IRP bank0
  6395  0EB8  1400               	bsf	0,0
  6396  0EB9  0008               	return
  6397  0EBA                     __end_of_setLights_Line:	
  6398                           
  6399                           	psect	text40
  6400  050C                     __ptext40:	
  6401 ;; *************** function _Lights_Control *****************
  6402 ;; Defined at:
  6403 ;;		line 155 in file "../src/TriacRelay_B1.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  lights          1    wreg     unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  lights          1    4[BANK0 ] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;		None               void
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6417 ;;      Params:         0       0       0       0
  6418 ;;      Locals:         0       1       0       0
  6419 ;;      Temps:          0       2       0       0
  6420 ;;      Totals:         0       3       0       0
  6421 ;;Total ram usage:        3 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    4
  6424 ;; This function calls:
  6425 ;;		_LightsPointSelect
  6426 ;; This function is called by:
  6427 ;;		_Lights_Main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _Lights_Control
  6433  050C                     _Lights_Control:	
  6434                           
  6435                           ;incstack = 0
  6436                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6437                           ;Lights_Control@lights stored from wreg
  6438  050C  1283               	bcf	3,5	;RP0=0, select bank0
  6439  050D  1303               	bcf	3,6	;RP1=0, select bank0
  6440  050E  00DA               	movwf	Lights_Control@lights
  6441                           
  6442                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  6443  050F  085A               	movf	Lights_Control@lights,w
  6444  0510  158A  262D  118A   	fcall	_LightsPointSelect
  6445                           
  6446                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  6447  0513  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0514  1303               	bcf	3,6	;RP1=0, select bank0
  6449  0515  0834               	movf	_Lights,w
  6450  0516  0084               	movwf	4
  6451  0517  1383               	bcf	3,7	;select IRP bank0
  6452  0518  1C80               	btfss	0,1
  6453  0519  0008               	return
  6454                           
  6455                           ;TriacRelay_B1.c: 158: Lights->Time++;
  6456  051A  3001               	movlw	1
  6457  051B  00D8               	movwf	??_Lights_Control
  6458  051C  0834               	movf	_Lights,w
  6459  051D  3E02               	addlw	2
  6460  051E  0084               	movwf	4
  6461  051F  0858               	movf	??_Lights_Control,w
  6462  0520  0780               	addwf	0,f
  6463                           
  6464                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  6465  0521  0834               	movf	_Lights,w
  6466  0522  3E06               	addlw	6
  6467  0523  0084               	movwf	4
  6468  0524  0800               	movf	0,w
  6469  0525  00D8               	movwf	??_Lights_Control
  6470  0526  0834               	movf	_Lights,w
  6471  0527  3E02               	addlw	2
  6472  0528  0084               	movwf	4
  6473  0529  0800               	movf	0,w
  6474  052A  00D9               	movwf	??_Lights_Control+1
  6475  052B  0858               	movf	??_Lights_Control,w
  6476  052C  0259               	subwf	??_Lights_Control+1,w
  6477  052D  1C03               	skipc
  6478  052E  2D46               	goto	l3085
  6479  052F  0834               	movf	_Lights,w
  6480  0530  0084               	movwf	4
  6481  0531  1B80               	btfsc	0,7
  6482  0532  2D46               	goto	l3085
  6483                           
  6484                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  6485  0533  0834               	movf	_Lights,w
  6486  0534  0084               	movwf	4
  6487  0535  1780               	bsf	0,7
  6488                           
  6489                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  6490  0536  085A               	movf	Lights_Control@lights,w
  6491  0537  3A01               	xorlw	1
  6492  0538  1D03               	skipz
  6493  0539  0008               	return
  6494                           
  6495                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  6496  053A  0834               	movf	_Lights,w
  6497  053B  0084               	movwf	4
  6498  053C  1D00               	btfss	0,2
  6499  053D  2D42               	goto	u2660
  6500  053E  1283               	bcf	3,5	;RP0=0, select bank0
  6501  053F  1303               	bcf	3,6	;RP1=0, select bank0
  6502  0540  1605               	bsf	5,4	;volatile
  6503  0541  0008               	return
  6504  0542                     u2660:	
  6505  0542  1283               	bcf	3,5	;RP0=0, select bank0
  6506  0543  1303               	bcf	3,6	;RP1=0, select bank0
  6507  0544  1205               	bcf	5,4	;volatile
  6508                           
  6509                           ;TriacRelay_B1.c: 164: }
  6510                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  6511  0545  0008               	return
  6512  0546                     l3085:	
  6513  0546  0834               	movf	_Lights,w
  6514  0547  3E04               	addlw	4
  6515  0548  0084               	movwf	4
  6516  0549  1383               	bcf	3,7	;select IRP bank0
  6517  054A  0800               	movf	0,w
  6518  054B  00D8               	movwf	??_Lights_Control
  6519  054C  0834               	movf	_Lights,w
  6520  054D  3E02               	addlw	2
  6521  054E  0084               	movwf	4
  6522  054F  0800               	movf	0,w
  6523  0550  00D9               	movwf	??_Lights_Control+1
  6524  0551  0858               	movf	??_Lights_Control,w
  6525  0552  0259               	subwf	??_Lights_Control+1,w
  6526  0553  1C03               	skipc
  6527  0554  0008               	return
  6528                           
  6529                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  6530  0555  0834               	movf	_Lights,w
  6531  0556  3E02               	addlw	2
  6532  0557  0084               	movwf	4
  6533  0558  0180               	clrf	0
  6534                           
  6535                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  6536  0559  0834               	movf	_Lights,w
  6537  055A  0084               	movwf	4
  6538  055B  1080               	bcf	0,1
  6539                           
  6540                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  6541  055C  0834               	movf	_Lights,w
  6542  055D  0084               	movwf	4
  6543  055E  1380               	bcf	0,7
  6544                           
  6545                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  6546  055F  085A               	movf	Lights_Control@lights,w
  6547  0560  3A01               	xorlw	1
  6548  0561  1D03               	skipz
  6549  0562  0008               	return
  6550                           
  6551                           ;TriacRelay_B1.c: 188: RB2 = 0;
  6552  0563  1106               	bcf	6,2	;volatile
  6553  0564  0008               	return
  6554  0565                     __end_of_Lights_Control:	
  6555                           
  6556                           	psect	text41
  6557  0F07                     __ptext41:	
  6558 ;; *************** function _Lights_Close *****************
  6559 ;; Defined at:
  6560 ;;		line 85 in file "../src/TriacRelay_B1.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;		None               void
  6567 ;; Registers used:
  6568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6574 ;;      Params:         0       0       0       0
  6575 ;;      Locals:         0       0       0       0
  6576 ;;      Temps:          0       1       0       0
  6577 ;;      Totals:         0       1       0       0
  6578 ;;Total ram usage:        1 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    6
  6581 ;; This function calls:
  6582 ;;		_getMain_LightsStatus
  6583 ;; This function is called by:
  6584 ;;		_Lights_Main
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _Lights_Close
  6590  0F07                     _Lights_Close:	
  6591                           
  6592                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  6593                           
  6594                           ;incstack = 0
  6595                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6596  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  6597  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  6598  0F09  1C35               	btfss	_LightsControl,0
  6599  0F0A  0008               	return
  6600                           
  6601                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  6602  0F0B  1035               	bcf	_LightsControl,0
  6603                           
  6604                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  6605  0F0C  118A  2728         	fcall	_getMain_LightsStatus
  6606  0F0E  3800               	iorlw	0
  6607  0F0F  3000               	movlw	0
  6608  0F10  1D03               	skipz
  6609  0F11  3001               	movlw	1
  6610  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  6612  0F14  00DF               	movwf	??_Lights_Close
  6613  0F15  0DDF               	rlf	??_Lights_Close,f
  6614  0F16  0835               	movf	_LightsControl,w
  6615  0F17  065F               	xorwf	??_Lights_Close,w
  6616  0F18  39FD               	andlw	-3
  6617  0F19  065F               	xorwf	??_Lights_Close,w
  6618  0F1A  00B5               	movwf	_LightsControl
  6619  0F1B  0008               	return
  6620  0F1C                     __end_of_Lights_Close:	
  6621                           
  6622                           	psect	text42
  6623  0728                     __ptext42:	
  6624 ;; *************** function _getMain_LightsStatus *****************
  6625 ;; Defined at:
  6626 ;;		line 349 in file "../src/Main_B1.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  i               2    6[BANK0 ] int 
  6631 ;;  status          1    8[BANK0 ] unsigned char 
  6632 ;;  count           1    5[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      unsigned char 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6642 ;;      Params:         0       0       0       0
  6643 ;;      Locals:         0       4       0       0
  6644 ;;      Temps:          0       1       0       0
  6645 ;;      Totals:         0       5       0       0
  6646 ;;Total ram usage:        5 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    5
  6649 ;; This function calls:
  6650 ;;		_getLights_Status
  6651 ;; This function is called by:
  6652 ;;		_setTemp_Main
  6653 ;;		_Lights_Close
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           
  6658                           ;psect for function _getMain_LightsStatus
  6659  0728                     _getMain_LightsStatus:	
  6660                           
  6661                           ;Main_B1.c: 350: char status = 0, count = 0;
  6662                           
  6663                           ;incstack = 0
  6664                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6665  0728  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0729  1303               	bcf	3,6	;RP1=0, select bank0
  6667  072A  01DE               	clrf	getMain_LightsStatus@status
  6668  072B  01DB               	clrf	getMain_LightsStatus@count
  6669                           
  6670                           ;Main_B1.c: 353: count = 1;
  6671  072C  01DB               	clrf	getMain_LightsStatus@count
  6672  072D  0ADB               	incf	getMain_LightsStatus@count,f
  6673                           
  6674                           ;Main_B1.c: 362: for (int i = 0; i < count; i++) {
  6675  072E  01DC               	clrf	getMain_LightsStatus@i
  6676  072F  01DD               	clrf	getMain_LightsStatus@i+1
  6677  0730                     l3721:	
  6678  0730  085D               	movf	getMain_LightsStatus@i+1,w
  6679  0731  3A80               	xorlw	128
  6680  0732  00DA               	movwf	??_getMain_LightsStatus
  6681  0733  3080               	movlw	128
  6682  0734  025A               	subwf	??_getMain_LightsStatus,w
  6683  0735  1D03               	skipz
  6684  0736  2F39               	goto	u3745
  6685  0737  085B               	movf	getMain_LightsStatus@count,w
  6686  0738  025C               	subwf	getMain_LightsStatus@i,w
  6687  0739                     u3745:	
  6688  0739  1803               	btfsc	3,0
  6689  073A  2F55               	goto	l3723
  6690                           
  6691                           ;Main_B1.c: 363: if (status == 0) {
  6692  073B  1283               	bcf	3,5	;RP0=0, select bank0
  6693  073C  1303               	bcf	3,6	;RP1=0, select bank0
  6694  073D  08DE               	movf	getMain_LightsStatus@status,f
  6695  073E  1D03               	skipz
  6696  073F  2F4E               	goto	l3719
  6697                           
  6698                           ;Main_B1.c: 365: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  6699  0740  085C               	movf	getMain_LightsStatus@i,w
  6700  0741  3E01               	addlw	1
  6701  0742  158A  2663  118A   	fcall	_getLights_Status
  6702  0745  3A01               	xorlw	1
  6703  0746  3000               	movlw	0
  6704  0747  1903               	skipnz
  6705  0748  3001               	movlw	1
  6706  0749  1283               	bcf	3,5	;RP0=0, select bank0
  6707  074A  1303               	bcf	3,6	;RP1=0, select bank0
  6708  074B  00DA               	movwf	??_getMain_LightsStatus
  6709  074C  085A               	movf	??_getMain_LightsStatus,w
  6710  074D  00DE               	movwf	getMain_LightsStatus@status
  6711  074E                     l3719:	
  6712  074E  3001               	movlw	1
  6713  074F  07DC               	addwf	getMain_LightsStatus@i,f
  6714  0750  1803               	skipnc
  6715  0751  0ADD               	incf	getMain_LightsStatus@i+1,f
  6716  0752  3000               	movlw	0
  6717  0753  07DD               	addwf	getMain_LightsStatus@i+1,f
  6718  0754  2F30               	goto	l3721
  6719  0755                     l3723:	
  6720                           
  6721                           ;Main_B1.c: 370: }
  6722                           ;Main_B1.c: 371: }
  6723                           ;Main_B1.c: 372: return status;
  6724  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0756  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0757  085E               	movf	getMain_LightsStatus@status,w
  6727  0758  0008               	return
  6728  0759                     __end_of_getMain_LightsStatus:	
  6729                           
  6730                           	psect	text43
  6731  0E63                     __ptext43:	
  6732 ;; *************** function _getLights_Status *****************
  6733 ;; Defined at:
  6734 ;;		line 207 in file "../src/TriacRelay_B1.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  lights          1    wreg     unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  lights          1    2[BANK0 ] unsigned char 
  6739 ;;  status          1    3[BANK0 ] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      unsigned char 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6749 ;;      Params:         0       0       0       0
  6750 ;;      Locals:         0       2       0       0
  6751 ;;      Temps:          0       0       0       0
  6752 ;;      Totals:         0       2       0       0
  6753 ;;Total ram usage:        2 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    4
  6756 ;; This function calls:
  6757 ;;		_LightsPointSelect
  6758 ;; This function is called by:
  6759 ;;		_getMain_LightsStatus
  6760 ;;		_PIR_Main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function _getLights_Status
  6766  0E63                     _getLights_Status:	
  6767                           
  6768                           ;incstack = 0
  6769                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6770                           ;getLights_Status@lights stored from wreg
  6771  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  6772  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  6773  0E65  00D8               	movwf	getLights_Status@lights
  6774                           
  6775                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  6776  0E66  0858               	movf	getLights_Status@lights,w
  6777  0E67  158A  262D         	fcall	_LightsPointSelect
  6778                           
  6779                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  6780  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  6782  0E6B  0834               	movf	_Lights,w
  6783  0E6C  0084               	movwf	4
  6784  0E6D  3000               	movlw	0
  6785  0E6E  1383               	bcf	3,7	;select IRP bank0
  6786  0E6F  1900               	btfsc	0,2
  6787  0E70  3001               	movlw	1
  6788  0E71  00D9               	movwf	getLights_Status@status
  6789                           
  6790                           ;TriacRelay_B1.c: 210: return status;
  6791  0E72  0859               	movf	getLights_Status@status,w
  6792  0E73  0008               	return
  6793  0E74                     __end_of_getLights_Status:	
  6794                           
  6795                           	psect	text44
  6796  0DDF                     __ptext44:	
  6797 ;; *************** function _Lights_Initialization *****************
  6798 ;; Defined at:
  6799 ;;		line 34 in file "../src/TriacRelay_B1.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;		None               void
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, pclath, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6813 ;;      Params:         0       0       0       0
  6814 ;;      Locals:         0       0       0       0
  6815 ;;      Temps:          0       0       0       0
  6816 ;;      Totals:         0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    5
  6820 ;; This function calls:
  6821 ;;		_setLights_Initialization
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _Lights_Initialization
  6829  0DDF                     _Lights_Initialization:	
  6830                           
  6831                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  6832                           
  6833                           ;incstack = 0
  6834                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6835  0DDF  3001               	movlw	1
  6836  0DE0  158A  25F8         	fcall	_setLights_Initialization
  6837  0DE2  0008               	return
  6838  0DE3                     __end_of_Lights_Initialization:	
  6839                           
  6840                           	psect	text45
  6841  0DF8                     __ptext45:	
  6842 ;; *************** function _setLights_Initialization *****************
  6843 ;; Defined at:
  6844 ;;		line 49 in file "../src/TriacRelay_B1.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  lights          1    wreg     unsigned char 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  lights          1    2[BANK0 ] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;		None               void
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, pclath, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6858 ;;      Params:         0       0       0       0
  6859 ;;      Locals:         0       1       0       0
  6860 ;;      Temps:          0       0       0       0
  6861 ;;      Totals:         0       1       0       0
  6862 ;;Total ram usage:        1 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    4
  6865 ;; This function calls:
  6866 ;;		_LightsPointSelect
  6867 ;; This function is called by:
  6868 ;;		_Lights_Initialization
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           
  6873                           ;psect for function _setLights_Initialization
  6874  0DF8                     _setLights_Initialization:	
  6875                           
  6876                           ;incstack = 0
  6877                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6878                           ;setLights_Initialization@lights stored from wreg
  6879  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  6880  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  6881  0DFA  00D8               	movwf	setLights_Initialization@lights
  6882                           
  6883                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6884  0DFB  0858               	movf	setLights_Initialization@lights,w
  6885  0DFC  158A  262D         	fcall	_LightsPointSelect
  6886  0DFE  0008               	return
  6887  0DFF                     __end_of_setLights_Initialization:	
  6888                           
  6889                           	psect	text46
  6890  0E2D                     __ptext46:	
  6891 ;; *************** function _LightsPointSelect *****************
  6892 ;; Defined at:
  6893 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  lights          1    wreg     unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  lights          1    1[BANK0 ] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;		None               void
  6900 ;; Registers used:
  6901 ;;		wreg
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6907 ;;      Params:         0       0       0       0
  6908 ;;      Locals:         0       1       0       0
  6909 ;;      Temps:          0       1       0       0
  6910 ;;      Totals:         0       2       0       0
  6911 ;;Total ram usage:        2 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    3
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		_setLights_Initialization
  6918 ;;		_setLights_Main
  6919 ;;		_setLights
  6920 ;;		_Lights_Control
  6921 ;;		_getLights_Status
  6922 ;;		_setLights_Trigger
  6923 ;;		_setLights_Line
  6924 ;;		_getAll_Lights_Line
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function _LightsPointSelect
  6930  0E2D                     _LightsPointSelect:	
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _LightsPointSelect: [wreg]
  6934                           ;LightsPointSelect@lights stored from wreg
  6935  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  6936  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  6937  0E2F  00D7               	movwf	LightsPointSelect@lights
  6938                           
  6939                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6940  0E30  0857               	movf	LightsPointSelect@lights,w
  6941  0E31  3A01               	xorlw	1
  6942  0E32  1D03               	skipz
  6943  0E33  0008               	return
  6944                           
  6945                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6946  0E34  30CF               	movlw	_Lights1& (0+255)
  6947  0E35  00D6               	movwf	??_LightsPointSelect
  6948  0E36  0856               	movf	??_LightsPointSelect,w
  6949  0E37  00B4               	movwf	_Lights
  6950  0E38  0008               	return
  6951  0E39                     __end_of_LightsPointSelect:	
  6952                           
  6953                           	psect	text47
  6954  0DD2                     __ptext47:	
  6955 ;; *************** function _LED_Main *****************
  6956 ;; Defined at:
  6957 ;;		line 47 in file "../src/LED_B1.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;		None               void
  6964 ;; Registers used:
  6965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6971 ;;      Params:         0       0       0       0
  6972 ;;      Locals:         0       0       0       0
  6973 ;;      Temps:          0       0       0       0
  6974 ;;      Totals:         0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    6
  6978 ;; This function calls:
  6979 ;;		_setPIRLED_Main
  6980 ;; This function is called by:
  6981 ;;		_main
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function _LED_Main
  6987  0DD2                     _LED_Main:	
  6988                           
  6989                           ;LED_B1.c: 50: setPIRLED_Main();
  6990                           
  6991                           ;incstack = 0
  6992                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6993  0DD2  118A  23CD         	fcall	_setPIRLED_Main
  6994  0DD4  0008               	return
  6995  0DD5                     __end_of_LED_Main:	
  6996                           
  6997                           	psect	text48
  6998  03CD                     __ptext48:	
  6999 ;; *************** function _setPIRLED_Main *****************
  7000 ;; Defined at:
  7001 ;;		line 253 in file "../src/LED_B1.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  count           1    5[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7015 ;;      Params:         0       0       0       0
  7016 ;;      Locals:         0       1       0       0
  7017 ;;      Temps:          0       1       0       0
  7018 ;;      Totals:         0       2       0       0
  7019 ;;Total ram usage:        2 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    5
  7022 ;; This function calls:
  7023 ;;		_setLED
  7024 ;; This function is called by:
  7025 ;;		_LED_Main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _setPIRLED_Main
  7031  03CD                     _setPIRLED_Main:	
  7032                           
  7033                           ;LED_B1.c: 254: char count;
  7034                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  7035                           
  7036                           ;incstack = 0
  7037                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7038  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  7039  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  7040  03CF  1C2C               	btfss	_PIRLED,0
  7041  03D0  0008               	return
  7042                           
  7043                           ;LED_B1.c: 256: PIRLED.Time++;
  7044  03D1  3001               	movlw	1
  7045  03D2  07AE               	addwf	_PIRLED+2,f
  7046  03D3  1803               	skipnc
  7047  03D4  0AAF               	incf	_PIRLED+3,f
  7048  03D5  3000               	movlw	0
  7049  03D6  07AF               	addwf	_PIRLED+3,f
  7050                           
  7051                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  7052  03D7  3000               	movlw	0
  7053  03D8  022F               	subwf	_PIRLED+3,w
  7054  03D9  3032               	movlw	50
  7055  03DA  1903               	skipnz
  7056  03DB  022E               	subwf	_PIRLED+2,w
  7057  03DC  1C03               	skipc
  7058  03DD  0008               	return
  7059                           
  7060                           ;LED_B1.c: 258: PIRLED.Time = 0;
  7061  03DE  01AE               	clrf	_PIRLED+2
  7062  03DF  01AF               	clrf	_PIRLED+3
  7063                           
  7064                           ;LED_B1.c: 259: setLED(1, 0);
  7065  03E0  01D8               	clrf	setLED@command
  7066  03E1  3001               	movlw	1
  7067  03E2  118A  243E  118A   	fcall	_setLED
  7068                           
  7069                           ;LED_B1.c: 260: setLED(2, 0);
  7070  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  7071  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  7072  03E7  01D8               	clrf	setLED@command
  7073  03E8  3002               	movlw	2
  7074  03E9  118A  243E  118A   	fcall	_setLED
  7075                           
  7076                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  7077  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  7078  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  7079  03EE  1CAC               	btfss	_PIRLED,1
  7080  03EF  2BF4               	goto	l3807
  7081                           
  7082                           ;LED_B1.c: 262: count = 4;
  7083  03F0  3004               	movlw	4
  7084  03F1  00DA               	movwf	??_setPIRLED_Main
  7085  03F2  085A               	movf	??_setPIRLED_Main,w
  7086  03F3  00DB               	movwf	setPIRLED_Main@count
  7087  03F4                     l3807:	
  7088                           
  7089                           ;LED_B1.c: 263: }
  7090                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  7091  03F4  1D2C               	btfss	_PIRLED,2
  7092  03F5  2BFA               	goto	l3811
  7093                           
  7094                           ;LED_B1.c: 265: count = 6;
  7095  03F6  3006               	movlw	6
  7096  03F7  00DA               	movwf	??_setPIRLED_Main
  7097  03F8  085A               	movf	??_setPIRLED_Main,w
  7098  03F9  00DB               	movwf	setPIRLED_Main@count
  7099  03FA                     l3811:	
  7100                           
  7101                           ;LED_B1.c: 266: }
  7102                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  7103  03FA  1DAC               	btfss	_PIRLED,3
  7104  03FB  2C00               	goto	l3815
  7105                           
  7106                           ;LED_B1.c: 268: count = 8;
  7107  03FC  3008               	movlw	8
  7108  03FD  00DA               	movwf	??_setPIRLED_Main
  7109  03FE  085A               	movf	??_setPIRLED_Main,w
  7110  03FF  00DB               	movwf	setPIRLED_Main@count
  7111  0400                     l3815:	
  7112                           
  7113                           ;LED_B1.c: 269: }
  7114                           ;LED_B1.c: 270: PIRLED.Count++;
  7115  0400  3001               	movlw	1
  7116  0401  00DA               	movwf	??_setPIRLED_Main
  7117  0402  085A               	movf	??_setPIRLED_Main,w
  7118  0403  07AD               	addwf	_PIRLED+1,f
  7119                           
  7120                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7121  0404  082D               	movf	_PIRLED+1,w
  7122  0405  3A01               	xorlw	1
  7123  0406  1903               	skipnz
  7124  0407  2C0C               	goto	l3821
  7125  0408  082D               	movf	_PIRLED+1,w
  7126  0409  3A02               	xorlw	2
  7127  040A  1D03               	skipz
  7128  040B  2C20               	goto	l3825
  7129  040C                     l3821:	
  7130                           
  7131                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7132  040C  1003               	clrc
  7133  040D  1E2C               	btfss	_PIRLED,4
  7134  040E  1403               	setc
  7135  040F  1C03               	btfss	3,0
  7136  0410  2C15               	goto	u3940
  7137  0411  1283               	bcf	3,5	;RP0=0, select bank0
  7138  0412  1303               	bcf	3,6	;RP1=0, select bank0
  7139  0413  162C               	bsf	_PIRLED,4
  7140  0414  2C18               	goto	l3823
  7141  0415                     u3940:	
  7142  0415  1283               	bcf	3,5	;RP0=0, select bank0
  7143  0416  1303               	bcf	3,6	;RP1=0, select bank0
  7144  0417  122C               	bcf	_PIRLED,4
  7145  0418                     l3823:	
  7146                           
  7147                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  7148  0418  3000               	movlw	0
  7149  0419  1A2C               	btfsc	_PIRLED,4
  7150  041A  3001               	movlw	1
  7151  041B  00D8               	movwf	setLED@command
  7152  041C  3002               	movlw	2
  7153  041D  118A  243E         	fcall	_setLED
  7154                           
  7155                           ;LED_B1.c: 274: } else {
  7156  041F  0008               	return
  7157  0420                     l3825:	
  7158                           
  7159                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7160  0420  1003               	clrc
  7161  0421  1283               	bcf	3,5	;RP0=0, select bank0
  7162  0422  1303               	bcf	3,6	;RP1=0, select bank0
  7163  0423  1E2C               	btfss	_PIRLED,4
  7164  0424  1403               	setc
  7165  0425  1C03               	btfss	3,0
  7166  0426  2C2B               	goto	u3960
  7167  0427  1283               	bcf	3,5	;RP0=0, select bank0
  7168  0428  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0429  162C               	bsf	_PIRLED,4
  7170  042A  2C2E               	goto	l3827
  7171  042B                     u3960:	
  7172  042B  1283               	bcf	3,5	;RP0=0, select bank0
  7173  042C  1303               	bcf	3,6	;RP1=0, select bank0
  7174  042D  122C               	bcf	_PIRLED,4
  7175  042E                     l3827:	
  7176                           
  7177                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  7178  042E  3000               	movlw	0
  7179  042F  1A2C               	btfsc	_PIRLED,4
  7180  0430  3001               	movlw	1
  7181  0431  00D8               	movwf	setLED@command
  7182  0432  3001               	movlw	1
  7183  0433  118A  243E  118A   	fcall	_setLED
  7184                           
  7185                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  7186  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7188  0438  082D               	movf	_PIRLED+1,w
  7189  0439  065B               	xorwf	setPIRLED_Main@count,w
  7190  043A  1D03               	skipz
  7191  043B  0008               	return
  7192                           
  7193                           ;LED_B1.c: 278: PIRLED.Count = 0;
  7194  043C  01AD               	clrf	_PIRLED+1
  7195  043D  0008               	return
  7196  043E                     __end_of_setPIRLED_Main:	
  7197                           
  7198                           	psect	text49
  7199  0E21                     __ptext49:	
  7200 ;; *************** function _LED_Initialization *****************
  7201 ;; Defined at:
  7202 ;;		line 31 in file "../src/LED_B1.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;		None               void
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7216 ;;      Params:         0       0       0       0
  7217 ;;      Locals:         0       0       0       0
  7218 ;;      Temps:          0       0       0       0
  7219 ;;      Totals:         0       0       0       0
  7220 ;;Total ram usage:        0 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    6
  7223 ;; This function calls:
  7224 ;;		_setLED_Initialization
  7225 ;; This function is called by:
  7226 ;;		_main
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           
  7231                           ;psect for function _LED_Initialization
  7232  0E21                     _LED_Initialization:	
  7233                           
  7234                           ;LED_B1.c: 33: setLED_Initialization(1);
  7235                           
  7236                           ;incstack = 0
  7237                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7238  0E21  3001               	movlw	1
  7239  0E22  158A  2696  158A   	fcall	_setLED_Initialization
  7240                           
  7241                           ;LED_B1.c: 36: setLED_Initialization(2);
  7242  0E25  3002               	movlw	2
  7243  0E26  158A  2696  158A   	fcall	_setLED_Initialization
  7244                           
  7245                           ;LED_B1.c: 42: setLED_Initialization(99);
  7246  0E29  3063               	movlw	99
  7247  0E2A  158A  2696         	fcall	_setLED_Initialization
  7248  0E2C  0008               	return
  7249  0E2D                     __end_of_LED_Initialization:	
  7250                           
  7251                           	psect	text50
  7252  0E96                     __ptext50:	
  7253 ;; *************** function _setLED_Initialization *****************
  7254 ;; Defined at:
  7255 ;;		line 69 in file "../src/LED_B1.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  led             1    wreg     unsigned char 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  led             1    4[BANK0 ] unsigned char 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;		None               void
  7262 ;; Registers used:
  7263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7269 ;;      Params:         0       0       0       0
  7270 ;;      Locals:         0       1       0       0
  7271 ;;      Temps:          0       0       0       0
  7272 ;;      Totals:         0       1       0       0
  7273 ;;Total ram usage:        1 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    5
  7276 ;; This function calls:
  7277 ;;		_LedPointSelect
  7278 ;;		_setLED
  7279 ;; This function is called by:
  7280 ;;		_LED_Initialization
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _setLED_Initialization
  7286  0E96                     _setLED_Initialization:	
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7290                           ;setLED_Initialization@led stored from wreg
  7291  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  7292  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  7293  0E98  00DA               	movwf	setLED_Initialization@led
  7294                           
  7295                           ;LED_B1.c: 70: LedPointSelect(led);
  7296  0E99  085A               	movf	setLED_Initialization@led,w
  7297  0E9A  158A  2781  158A   	fcall	_LedPointSelect
  7298                           
  7299                           ;LED_B1.c: 71: LED->Enable = 1;
  7300  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  7301  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  7302  0E9F  0833               	movf	_LED,w
  7303  0EA0  0084               	movwf	4
  7304  0EA1  1383               	bcf	3,7	;select IRP bank0
  7305  0EA2  1400               	bsf	0,0
  7306                           
  7307                           ;LED_B1.c: 72: setLED(led, 0);
  7308  0EA3  01D8               	clrf	setLED@command
  7309  0EA4  085A               	movf	setLED_Initialization@led,w
  7310  0EA5  118A  243E         	fcall	_setLED
  7311  0EA7  0008               	return
  7312  0EA8                     __end_of_setLED_Initialization:	
  7313                           
  7314                           	psect	text51
  7315  043E                     __ptext51:	
  7316 ;; *************** function _setLED *****************
  7317 ;; Defined at:
  7318 ;;		line 76 in file "../src/LED_B1.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  led             1    wreg     unsigned char 
  7321 ;;  command         1    2[BANK0 ] unsigned char 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  led             1    3[BANK0 ] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;		None               void
  7326 ;; Registers used:
  7327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7333 ;;      Params:         0       1       0       0
  7334 ;;      Locals:         0       1       0       0
  7335 ;;      Temps:          0       0       0       0
  7336 ;;      Totals:         0       2       0       0
  7337 ;;Total ram usage:        2 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    4
  7340 ;; This function calls:
  7341 ;;		_LedPointSelect
  7342 ;; This function is called by:
  7343 ;;		_setLED_Initialization
  7344 ;;		_setPIRLED_Main
  7345 ;;		_setMain_Exception
  7346 ;;		_PIR_Initialization
  7347 ;;		_PIR_Main
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _setLED
  7353  043E                     _setLED:	
  7354                           
  7355                           ;incstack = 0
  7356                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7357                           ;setLED@led stored from wreg
  7358  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7359  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7360  0440  00D9               	movwf	setLED@led
  7361                           
  7362                           ;LED_B1.c: 77: LedPointSelect(led);
  7363  0441  0859               	movf	setLED@led,w
  7364  0442  158A  2781  118A   	fcall	_LedPointSelect
  7365                           
  7366                           ;LED_B1.c: 78: if (command == 0) {
  7367  0445  1283               	bcf	3,5	;RP0=0, select bank0
  7368  0446  1303               	bcf	3,6	;RP1=0, select bank0
  7369  0447  08D8               	movf	setLED@command,f
  7370  0448  1D03               	skipz
  7371  0449  2C57               	goto	l3621
  7372                           
  7373                           ;LED_B1.c: 80: if (led == 1) {
  7374  044A  0859               	movf	setLED@led,w
  7375  044B  3A01               	xorlw	1
  7376  044C  1D03               	skipz
  7377  044D  2C4F               	goto	l3613
  7378                           
  7379                           ;LED_B1.c: 84: RB4 = 1;
  7380  044E  1606               	bsf	6,4	;volatile
  7381  044F                     l3613:	
  7382                           
  7383                           ;LED_B1.c: 86: }
  7384                           ;LED_B1.c: 89: if (led == 2) {
  7385  044F  0859               	movf	setLED@led,w
  7386  0450  3A02               	xorlw	2
  7387  0451  1903               	btfsc	3,2
  7388                           
  7389                           ;LED_B1.c: 93: RB5 = 1;
  7390  0452  1686               	bsf	6,5	;volatile
  7391                           
  7392                           ;LED_B1.c: 95: }
  7393                           ;LED_B1.c: 107: if (led == 99) {
  7394  0453  0859               	movf	setLED@led,w
  7395  0454  3A63               	xorlw	99
  7396  0455  1903               	btfsc	3,2
  7397                           
  7398                           ;LED_B1.c: 111: RB3 = 1;
  7399  0456  1586               	bsf	6,3	;volatile
  7400  0457                     l3621:	
  7401                           
  7402                           ;LED_B1.c: 113: }
  7403                           ;LED_B1.c: 115: }
  7404                           ;LED_B1.c: 116: if (command == 1) {
  7405  0457  0858               	movf	setLED@command,w
  7406  0458  3A01               	xorlw	1
  7407  0459  1D03               	skipz
  7408  045A  2C68               	goto	l3635
  7409                           
  7410                           ;LED_B1.c: 118: if (led == 1) {
  7411  045B  0859               	movf	setLED@led,w
  7412  045C  3A01               	xorlw	1
  7413  045D  1D03               	skipz
  7414  045E  2C60               	goto	l3627
  7415                           
  7416                           ;LED_B1.c: 122: RB4 = 0;
  7417  045F  1206               	bcf	6,4	;volatile
  7418  0460                     l3627:	
  7419                           
  7420                           ;LED_B1.c: 124: }
  7421                           ;LED_B1.c: 127: if (led == 2) {
  7422  0460  0859               	movf	setLED@led,w
  7423  0461  3A02               	xorlw	2
  7424  0462  1903               	btfsc	3,2
  7425                           
  7426                           ;LED_B1.c: 131: RB5 = 0;
  7427  0463  1286               	bcf	6,5	;volatile
  7428                           
  7429                           ;LED_B1.c: 133: }
  7430                           ;LED_B1.c: 145: if (led == 99) {
  7431  0464  0859               	movf	setLED@led,w
  7432  0465  3A63               	xorlw	99
  7433  0466  1903               	btfsc	3,2
  7434                           
  7435                           ;LED_B1.c: 149: RB3 = 0;
  7436  0467  1186               	bcf	6,3	;volatile
  7437  0468                     l3635:	
  7438                           
  7439                           ;LED_B1.c: 151: }
  7440                           ;LED_B1.c: 153: }
  7441                           ;LED_B1.c: 154: if (command == 10) {
  7442  0468  0858               	movf	setLED@command,w
  7443  0469  3A0A               	xorlw	10
  7444  046A  1D03               	skipz
  7445  046B  2C83               	goto	l3653
  7446                           
  7447                           ;LED_B1.c: 155: LED->GO = 0;
  7448  046C  0833               	movf	_LED,w
  7449  046D  0084               	movwf	4
  7450  046E  1383               	bcf	3,7	;select IRP bank0
  7451  046F  1080               	bcf	0,1
  7452                           
  7453                           ;LED_B1.c: 156: LED->Time = 0;
  7454  0470  0A33               	incf	_LED,w
  7455  0471  0084               	movwf	4
  7456  0472  0180               	clrf	0
  7457  0473  0A84               	incf	4,f
  7458  0474  0180               	clrf	0
  7459                           
  7460                           ;LED_B1.c: 158: if (led == 1) {
  7461  0475  0859               	movf	setLED@led,w
  7462  0476  3A01               	xorlw	1
  7463  0477  1D03               	skipz
  7464  0478  2C7B               	goto	l3645
  7465                           
  7466                           ;LED_B1.c: 162: RB4 = 1;
  7467  0479  1606               	bsf	6,4	;volatile
  7468                           
  7469                           ;LED_B1.c: 164: }
  7470  047A  2C7F               	goto	l3649
  7471  047B                     l3645:	
  7472                           
  7473                           ;LED_B1.c: 167: else if (led == 2) {
  7474  047B  0859               	movf	setLED@led,w
  7475  047C  3A02               	xorlw	2
  7476  047D  1903               	btfsc	3,2
  7477                           
  7478                           ;LED_B1.c: 171: RB5 = 1;
  7479  047E  1686               	bsf	6,5	;volatile
  7480  047F                     l3649:	
  7481                           
  7482                           ;LED_B1.c: 173: }
  7483                           ;LED_B1.c: 185: if (led == 99) {
  7484  047F  0859               	movf	setLED@led,w
  7485  0480  3A63               	xorlw	99
  7486  0481  1903               	btfsc	3,2
  7487                           
  7488                           ;LED_B1.c: 189: RB3 = 1;
  7489  0482  1586               	bsf	6,3	;volatile
  7490  0483                     l3653:	
  7491                           
  7492                           ;LED_B1.c: 191: }
  7493                           ;LED_B1.c: 193: }
  7494                           ;LED_B1.c: 194: if (command == 11) {
  7495  0483  0858               	movf	setLED@command,w
  7496  0484  3A0B               	xorlw	11
  7497  0485  1D03               	skipz
  7498  0486  2C8B               	goto	l3657
  7499                           
  7500                           ;LED_B1.c: 195: LED->GO = 1;
  7501  0487  0833               	movf	_LED,w
  7502  0488  0084               	movwf	4
  7503  0489  1383               	bcf	3,7	;select IRP bank0
  7504  048A  1480               	bsf	0,1
  7505  048B                     l3657:	
  7506                           
  7507                           ;LED_B1.c: 196: }
  7508                           ;LED_B1.c: 198: if (command == 111) {
  7509  048B  0858               	movf	setLED@command,w
  7510  048C  3A6F               	xorlw	111
  7511  048D  1D03               	skipz
  7512  048E  2CA9               	goto	l3683
  7513                           
  7514                           ;LED_B1.c: 199: PIRLED.Count = 0;
  7515  048F  01AD               	clrf	_PIRLED+1
  7516                           
  7517                           ;LED_B1.c: 200: PIRLED.Time = 0;
  7518  0490  01AE               	clrf	_PIRLED+2
  7519  0491  01AF               	clrf	_PIRLED+3
  7520                           
  7521                           ;LED_B1.c: 201: PIRLED.status = 0;
  7522  0492  122C               	bcf	_PIRLED,4
  7523                           
  7524                           ;LED_B1.c: 202: PIRLED.GO = 1;
  7525  0493  142C               	bsf	_PIRLED,0
  7526                           
  7527                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  7528  0494  10AC               	bcf	_PIRLED,1
  7529                           
  7530                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  7531  0495  112C               	bcf	_PIRLED,2
  7532                           
  7533                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  7534  0496  11AC               	bcf	_PIRLED,3
  7535                           
  7536                           ;LED_B1.c: 206: if (led == 1) {
  7537  0497  0859               	movf	setLED@led,w
  7538  0498  3A01               	xorlw	1
  7539  0499  1D03               	skipz
  7540  049A  2C9D               	goto	l3675
  7541                           
  7542                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  7543  049B  14AC               	bsf	_PIRLED,1
  7544                           
  7545                           ;LED_B1.c: 208: } else if (led == 2) {
  7546  049C  0008               	return
  7547  049D                     l3675:	
  7548  049D  0859               	movf	setLED@led,w
  7549  049E  3A02               	xorlw	2
  7550  049F  1D03               	skipz
  7551  04A0  2CA3               	goto	l3679
  7552                           
  7553                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  7554  04A1  152C               	bsf	_PIRLED,2
  7555                           
  7556                           ;LED_B1.c: 210: } else if (led == 3) {
  7557  04A2  0008               	return
  7558  04A3                     l3679:	
  7559  04A3  0859               	movf	setLED@led,w
  7560  04A4  3A03               	xorlw	3
  7561  04A5  1D03               	skipz
  7562  04A6  0008               	return
  7563                           
  7564                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  7565  04A7  15AC               	bsf	_PIRLED,3
  7566                           
  7567                           ;LED_B1.c: 212: }
  7568                           ;LED_B1.c: 213: } else if (command == 110) {
  7569  04A8  0008               	return
  7570  04A9                     l3683:	
  7571  04A9  0858               	movf	setLED@command,w
  7572  04AA  3A6E               	xorlw	110
  7573  04AB  1D03               	skipz
  7574  04AC  0008               	return
  7575                           
  7576                           ;LED_B1.c: 214: PIRLED.GO = 0;
  7577  04AD  102C               	bcf	_PIRLED,0
  7578  04AE  0008               	return
  7579  04AF                     __end_of_setLED:	
  7580                           
  7581                           	psect	text52
  7582  0F81                     __ptext52:	
  7583 ;; *************** function _LedPointSelect *****************
  7584 ;; Defined at:
  7585 ;;		line 7 in file "../src/LED_B1.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  led             1    wreg     unsigned char 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  led             1    1[BANK0 ] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;		None               void
  7592 ;; Registers used:
  7593 ;;		wreg
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7599 ;;      Params:         0       0       0       0
  7600 ;;      Locals:         0       1       0       0
  7601 ;;      Temps:          0       1       0       0
  7602 ;;      Totals:         0       2       0       0
  7603 ;;Total ram usage:        2 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    3
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_setLED_Initialization
  7610 ;;		_setLED
  7611 ;;		_setLED_Main
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _LedPointSelect
  7617  0F81                     _LedPointSelect:	
  7618                           
  7619                           ;incstack = 0
  7620                           ; Regs used in _LedPointSelect: [wreg]
  7621                           ;LedPointSelect@led stored from wreg
  7622  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  7623  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  7624  0F83  00D7               	movwf	LedPointSelect@led
  7625                           
  7626                           ;LED_B1.c: 9: if (led == 1) {
  7627  0F84  0857               	movf	LedPointSelect@led,w
  7628  0F85  3A01               	xorlw	1
  7629  0F86  1D03               	skipz
  7630  0F87  2F8C               	goto	l232
  7631                           
  7632                           ;LED_B1.c: 10: LED = &VarLED1;
  7633  0F88  3052               	movlw	_VarLED1& (0+255)
  7634  0F89  00D6               	movwf	??_LedPointSelect
  7635  0F8A  0856               	movf	??_LedPointSelect,w
  7636  0F8B  00B3               	movwf	_LED
  7637  0F8C                     l232:	
  7638                           
  7639                           ;LED_B1.c: 11: }
  7640                           ;LED_B1.c: 14: if (led == 2) {
  7641  0F8C  0857               	movf	LedPointSelect@led,w
  7642  0F8D  3A02               	xorlw	2
  7643  0F8E  1D03               	skipz
  7644  0F8F  2F94               	goto	l233
  7645                           
  7646                           ;LED_B1.c: 15: LED = &VarLED2;
  7647  0F90  3073               	movlw	_VarLED2& (0+255)
  7648  0F91  00D6               	movwf	??_LedPointSelect
  7649  0F92  0856               	movf	??_LedPointSelect,w
  7650  0F93  00B3               	movwf	_LED
  7651  0F94                     l233:	
  7652                           
  7653                           ;LED_B1.c: 16: }
  7654                           ;LED_B1.c: 24: if (led == 99) {
  7655  0F94  0857               	movf	LedPointSelect@led,w
  7656  0F95  3A63               	xorlw	99
  7657  0F96  1D03               	skipz
  7658  0F97  0008               	return
  7659                           
  7660                           ;LED_B1.c: 25: LED = &VarErrLED;
  7661  0F98  304E               	movlw	_VarErrLED& (0+255)
  7662  0F99  00D6               	movwf	??_LedPointSelect
  7663  0F9A  0856               	movf	??_LedPointSelect,w
  7664  0F9B  00B3               	movwf	_LED
  7665  0F9C  0008               	return
  7666  0F9D                     __end_of_LedPointSelect:	
  7667                           
  7668                           	psect	text53
  7669  06F4                     __ptext53:	
  7670 ;; *************** function _CDS_Main *****************
  7671 ;; Defined at:
  7672 ;;		line 11 in file "../src/CDS_B1.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;		None               void
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7686 ;;      Params:         0       0       0       0
  7687 ;;      Locals:         0       0       0       0
  7688 ;;      Temps:          0       3       0       0
  7689 ;;      Totals:         0       3       0       0
  7690 ;;Total ram usage:        3 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    3
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_main
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function _CDS_Main
  7702  06F4                     _CDS_Main:	
  7703                           
  7704                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7708  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  7709  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  7710  06F6  1C27               	btfss	__CDS,0
  7711  06F7  0008               	return
  7712                           
  7713                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7714  06F8  18A7               	btfsc	__CDS,1
  7715  06F9  2F07               	goto	l105
  7716                           
  7717                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7718  06FA  19A7               	btfsc	__CDS,3
  7719  06FB  0008               	return
  7720                           
  7721                           ;CDS_B1.c: 16: _CDS.Time++;
  7722  06FC  3001               	movlw	1
  7723  06FD  00D6               	movwf	??_CDS_Main
  7724  06FE  0856               	movf	??_CDS_Main,w
  7725  06FF  07A8               	addwf	__CDS+1,f
  7726                           
  7727                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  7728  0700  300A               	movlw	10
  7729  0701  0228               	subwf	__CDS+1,w
  7730  0702  1C03               	skipc
  7731  0703  0008               	return
  7732                           
  7733                           ;CDS_B1.c: 18: {
  7734                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7735  0704  01A8               	clrf	__CDS+1
  7736                           
  7737                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7738  0705  15A7               	bsf	__CDS,3
  7739                           
  7740                           ;CDS_B1.c: 21: }
  7741                           ;CDS_B1.c: 22: }
  7742                           ;CDS_B1.c: 23: } else {
  7743  0706  0008               	return
  7744  0707                     l105:	
  7745                           
  7746                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7747  0707  1CA7               	btfss	__CDS,1
  7748  0708  0008               	return
  7749                           
  7750                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7751  0709  10A7               	bcf	__CDS,1
  7752                           
  7753                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7754  070A  1A27               	btfsc	__CDS,4
  7755  070B  2F12               	goto	l3151
  7756                           
  7757                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7758  070C  0829               	movf	__CDS+2,w
  7759  070D  022A               	subwf	__CDS+3,w
  7760  070E  1C03               	skipc
  7761  070F  0008               	return
  7762                           
  7763                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7764  0710  1627               	bsf	__CDS,4
  7765                           
  7766                           ;CDS_B1.c: 29: }
  7767                           ;CDS_B1.c: 30: } else {
  7768  0711  0008               	return
  7769  0712                     l3151:	
  7770                           
  7771                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7772  0712  0829               	movf	__CDS+2,w
  7773  0713  3E9C               	addlw	156
  7774  0714  00D6               	movwf	??_CDS_Main
  7775  0715  30FF               	movlw	255
  7776  0716  1803               	skipnc
  7777  0717  3000               	movlw	0
  7778  0718  00D7               	movwf	??_CDS_Main+1
  7779  0719  0857               	movf	??_CDS_Main+1,w
  7780  071A  3A80               	xorlw	128
  7781  071B  00D8               	movwf	??_CDS_Main+2
  7782  071C  3080               	movlw	128
  7783  071D  0258               	subwf	??_CDS_Main+2,w
  7784  071E  1D03               	skipz
  7785  071F  2F22               	goto	u2855
  7786  0720  082A               	movf	__CDS+3,w
  7787  0721  0256               	subwf	??_CDS_Main,w
  7788  0722                     u2855:	
  7789  0722  1C03               	skipc
  7790  0723  0008               	return
  7791                           
  7792                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7793  0724  1283               	bcf	3,5	;RP0=0, select bank0
  7794  0725  1303               	bcf	3,6	;RP1=0, select bank0
  7795  0726  1227               	bcf	__CDS,4
  7796  0727  0008               	return
  7797  0728                     __end_of_CDS_Main:	
  7798                           
  7799                           	psect	text54
  7800  0DDB                     __ptext54:	
  7801 ;; *************** function _CDS_Initialization *****************
  7802 ;; Defined at:
  7803 ;;		line 7 in file "../src/CDS_B1.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;		None               void
  7810 ;; Registers used:
  7811 ;;		None
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7817 ;;      Params:         0       0       0       0
  7818 ;;      Locals:         0       0       0       0
  7819 ;;      Temps:          0       0       0       0
  7820 ;;      Totals:         0       0       0       0
  7821 ;;Total ram usage:        0 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    3
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_main
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function _CDS_Initialization
  7833  0DDB                     _CDS_Initialization:	
  7834                           
  7835                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in _CDS_Initialization: []
  7839  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7840  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  7841  0DDD  1427               	bsf	__CDS,0
  7842  0DDE  0008               	return
  7843  0DDF                     __end_of_CDS_Initialization:	
  7844                           
  7845                           	psect	text55
  7846  0ECC                     __ptext55:	
  7847 ;; *************** function _ISR *****************
  7848 ;; Defined at:
  7849 ;;		line 107 in file "../src/MCU_B1.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7863 ;;      Params:         0       0       0       0
  7864 ;;      Locals:         0       0       0       0
  7865 ;;      Temps:          4       0       0       0
  7866 ;;      Totals:         4       0       0       0
  7867 ;;Total ram usage:        4 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    2
  7870 ;; This function calls:
  7871 ;;		_TMR1_ISR
  7872 ;;		_UART_ISR
  7873 ;; This function is called by:
  7874 ;;		Interrupt level 1
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _ISR
  7880  0ECC                     _ISR:	
  7881                           
  7882                           ;MCU_B1.c: 109: ;;
  7883                           ;MCU_B1.c: 111: ;;
  7884                           ;MCU_B1.c: 113: TMR1_ISR();
  7885  0ECC  158A  2765  158A   	fcall	_TMR1_ISR
  7886                           
  7887                           ;MCU_B1.c: 115: ;;
  7888                           ;MCU_B1.c: 117: ;;
  7889                           ;MCU_B1.c: 119: UART_ISR();
  7890  0ECF  118A  26BF  158A   	fcall	_UART_ISR
  7891  0ED2  087D               	movf	??_ISR+3,w
  7892  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  7893  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  7894  0ED5  00FF               	movwf	127
  7895  0ED6  087C               	movf	??_ISR+2,w
  7896  0ED7  008A               	movwf	10
  7897  0ED8  087B               	movf	??_ISR+1,w
  7898  0ED9  0084               	movwf	4
  7899  0EDA  0E7A               	swapf	??_ISR^(0+-128),w
  7900  0EDB  0083               	movwf	3
  7901  0EDC  0EFE               	swapf	126,f
  7902  0EDD  0E7E               	swapf	126,w
  7903  0EDE  0009               	retfie
  7904  0EDF                     __end_of_ISR:	
  7905                           
  7906                           	psect	intentry
  7907  0004                     __pintentry:	
  7908                           ;incstack = 0
  7909                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7910                           
  7911  0004                     interrupt_function:	
  7912  007E                     saved_w	set	btemp
  7913  0004  00FE               	movwf	btemp
  7914  0005  0E03               	swapf	3,w
  7915  0006  00FA               	movwf	??_ISR
  7916  0007  0804               	movf	4,w
  7917  0008  00FB               	movwf	??_ISR+1
  7918  0009  080A               	movf	10,w
  7919  000A  00FC               	movwf	??_ISR+2
  7920  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7921  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7922  000D  087F               	movf	btemp+1,w
  7923  000E  00FD               	movwf	??_ISR+3
  7924  000F  158A  2ECC         	ljmp	_ISR
  7925                           
  7926                           	psect	text56
  7927  06BF                     __ptext56:	
  7928 ;; *************** function _UART_ISR *****************
  7929 ;; Defined at:
  7930 ;;		line 739 in file "../src/MCU_B1.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  i               2    1[COMMON] int 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;		None               void
  7937 ;; Registers used:
  7938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7944 ;;      Params:         0       0       0       0
  7945 ;;      Locals:         2       0       0       0
  7946 ;;      Temps:          1       0       0       0
  7947 ;;      Totals:         3       0       0       0
  7948 ;;Total ram usage:        3 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    1
  7951 ;; This function calls:
  7952 ;;		_getch
  7953 ;; This function is called by:
  7954 ;;		_ISR
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function _UART_ISR
  7960  06BF                     _UART_ISR:	
  7961                           
  7962                           ;MCU_B1.c: 740: if (RCIE == 1 && RCIF == 1) {
  7963                           
  7964                           ;incstack = 0
  7965                           ; Regs used in _UART_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7966  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  7967  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  7968  06C1  1E8C               	btfss	12,5	;volatile
  7969  06C2  0008               	return
  7970  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  7971  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  7972  06C5  1E8C               	btfss	12,5	;volatile
  7973  06C6  0008               	return
  7974                           
  7975                           ;MCU_B1.c: 742: for (int i = 0; i < 8; i++) {
  7976  06C7  01F8               	clrf	UART_ISR@i
  7977  06C8  01F9               	clrf	UART_ISR@i+1
  7978  06C9  0879               	movf	UART_ISR@i+1,w
  7979  06CA  3A80               	xorlw	128
  7980  06CB  00FF               	movwf	127
  7981  06CC  3080               	movlw	128
  7982  06CD  027F               	subwf	127,w
  7983  06CE  1D03               	skipz
  7984  06CF  2ED2               	goto	u292_25
  7985  06D0  3008               	movlw	8
  7986  06D1  0278               	subwf	UART_ISR@i,w
  7987  06D2                     u292_25:	
  7988  06D2  1803               	btfsc	3,0
  7989  06D3  2EEF               	goto	i1l472
  7990  06D4                     i1l3195:	
  7991                           
  7992                           ;MCU_B1.c: 743: UART.Data[i] = getch();
  7993  06D4  158A  25EC  118A   	fcall	_getch
  7994  06D7  00F7               	movwf	??_UART_ISR
  7995  06D8  0878               	movf	UART_ISR@i,w
  7996  06D9  3E42               	addlw	_UART& (0+255)
  7997  06DA  0084               	movwf	4
  7998  06DB  0877               	movf	??_UART_ISR,w
  7999  06DC  1383               	bcf	3,7	;select IRP bank0
  8000  06DD  0080               	movwf	0
  8001  06DE  3001               	movlw	1
  8002  06DF  07F8               	addwf	UART_ISR@i,f
  8003  06E0  1803               	skipnc
  8004  06E1  0AF9               	incf	UART_ISR@i+1,f
  8005  06E2  3000               	movlw	0
  8006  06E3  07F9               	addwf	UART_ISR@i+1,f
  8007  06E4  0879               	movf	UART_ISR@i+1,w
  8008  06E5  3A80               	xorlw	128
  8009  06E6  00FF               	movwf	127
  8010  06E7  3080               	movlw	128
  8011  06E8  027F               	subwf	127,w
  8012  06E9  1D03               	skipz
  8013  06EA  2EED               	goto	u293_25
  8014  06EB  3008               	movlw	8
  8015  06EC  0278               	subwf	UART_ISR@i,w
  8016  06ED                     u293_25:	
  8017  06ED  1C03               	skipc
  8018  06EE  2ED4               	goto	i1l3195
  8019  06EF                     i1l472:	
  8020                           
  8021                           ;MCU_B1.c: 744: }
  8022                           ;MCU_B1.c: 745: UART.RxGO = 1;
  8023  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  8024  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  8025  06F1  14CD               	bsf	_UART+11,1
  8026                           
  8027                           ;MCU_B1.c: 752: RCIF = 0;
  8028  06F2  128C               	bcf	12,5	;volatile
  8029  06F3  0008               	return
  8030  06F4                     __end_of_UART_ISR:	
  8031                           
  8032                           	psect	text57
  8033  0DEC                     __ptext57:	
  8034 ;; *************** function _getch *****************
  8035 ;; Defined at:
  8036 ;;		line 863 in file "../src/MCU_B1.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      unsigned char 
  8043 ;; Registers used:
  8044 ;;		wreg
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8050 ;;      Params:         0       0       0       0
  8051 ;;      Locals:         0       0       0       0
  8052 ;;      Temps:          0       0       0       0
  8053 ;;      Totals:         0       0       0       0
  8054 ;;Total ram usage:        0 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_UART_ISR
  8060 ;;		_getche
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           
  8065                           ;psect for function _getch
  8066  0DEC                     _getch:	
  8067  0DEC                     i1l500:	
  8068                           ;MCU_B1.c: 866: continue;
  8069                           
  8070                           ;MCU_B1.c: 865: while (!RCIF)
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _getch: [wreg]
  8074                           
  8075  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0DEE  1E8C               	btfss	12,5	;volatile
  8078  0DEF  2DEC               	goto	i1l500
  8079                           
  8080                           ;MCU_B1.c: 867: return RCREG;
  8081  0DF0  081A               	movf	26,w	;volatile
  8082  0DF1  0008               	return
  8083  0DF2                     __end_of_getch:	
  8084                           
  8085                           	psect	text58
  8086  0F65                     __ptext58:	
  8087 ;; *************** function _TMR1_ISR *****************
  8088 ;; Defined at:
  8089 ;;		line 209 in file "../src/MCU_B1.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		wreg, status,2
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8103 ;;      Params:         0       0       0       0
  8104 ;;      Locals:         0       0       0       0
  8105 ;;      Temps:          0       0       0       0
  8106 ;;      Totals:         0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_ISR
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function _TMR1_ISR
  8118  0F65                     _TMR1_ISR:	
  8119                           
  8120                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  8121                           
  8122                           ;incstack = 0
  8123                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  8124  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  8125  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  8126  0F67  1C0C               	btfss	12,0	;volatile
  8127  0F68  0008               	return
  8128  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  8129  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  8130  0F6B  1C0C               	btfss	12,0	;volatile
  8131  0F6C  0008               	return
  8132                           
  8133                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  8134  0F6D  30FA               	movlw	250
  8135  0F6E  008F               	movwf	15	;volatile
  8136                           
  8137                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  8138  0F6F  3038               	movlw	56
  8139  0F70  008E               	movwf	14	;volatile
  8140                           
  8141                           ;MCU_B1.c: 214: TMR1IF = 0;
  8142  0F71  100C               	bcf	12,0	;volatile
  8143                           
  8144                           ;MCU_B1.c: 234: Timer1.Count++;
  8145  0F72  3001               	movlw	1
  8146  0F73  07B1               	addwf	_Timer1+1,f
  8147  0F74  1803               	skipnc
  8148  0F75  0AB2               	incf	_Timer1+2,f
  8149  0F76  3000               	movlw	0
  8150  0F77  07B2               	addwf	_Timer1+2,f
  8151                           
  8152                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  8153  0F78  3064               	movlw	100
  8154  0F79  0631               	xorwf	_Timer1+1,w
  8155  0F7A  0432               	iorwf	_Timer1+2,w
  8156  0F7B  1D03               	skipz
  8157  0F7C  0008               	return
  8158                           
  8159                           ;MCU_B1.c: 236: {
  8160                           ;MCU_B1.c: 237: Timer1.Count = 0;
  8161  0F7D  01B1               	clrf	_Timer1+1
  8162  0F7E  01B2               	clrf	_Timer1+2
  8163                           
  8164                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  8165  0F7F  1430               	bsf	_Timer1,0
  8166  0F80  0008               	return
  8167  0F81                     __end_of_TMR1_ISR:	
  8168  007E                     btemp	set	126	;btemp
  8169  007E                     wtemp	set	126
  8170  007E                     wtemp0	set	126
  8171  0080                     wtemp1	set	128
  8172  0082                     wtemp2	set	130
  8173  0084                     wtemp3	set	132
  8174  0086                     wtemp4	set	134
  8175  0088                     wtemp5	set	136
  8176  007F                     wtemp6	set	127
  8177  007E                     ttemp	set	126
  8178  007E                     ttemp0	set	126
  8179  0081                     ttemp1	set	129
  8180  0084                     ttemp2	set	132
  8181  0087                     ttemp3	set	135
  8182  007F                     ttemp4	set	127
  8183  007E                     ltemp	set	126
  8184  007E                     ltemp0	set	126
  8185  0082                     ltemp1	set	130
  8186  0086                     ltemp2	set	134
  8187  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     25      79
    BANK1            80      0      54
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(COMMON[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _my_MainTimer->_UART_SetData
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _setTemp_Main->_getMain_LightsStatus
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   20475
                                             20 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                          _UART_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
                       _UART_SetData
 ---------------------------------------------------------------------------------
 (2) _UART_SetData                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     613
                                              2 BANK0      3     3      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2126
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     518
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        2     2      0     130
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1188
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1188
                                              9 BANK0      1     1      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     656
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    6680
                                             12 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3255
                                              5 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     333
                                              2 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      59
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     272
                                              1 BANK0      7     7      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2631
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     870
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     522
                                              6 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     407
                                              3 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0      88
                                              2 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     260
                                              9 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     260
                                              4 BANK0      5     5      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      87
                                              2 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      53
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2671
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2671
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2759
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2759
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2631
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      68
                                              3 COMMON     4     4      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             3     3      0      68
                                              0 COMMON     3     3      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _putch
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _UART_SetData

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      93       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      93      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Dec 02 17:46:01 2014

                     _WDT_Clearing 0002                       ___awdiv@sign 005C  
                               fsr 0004                                l105 0707  
                              l232 0F8C                                l233 0F94  
                              l476 0E5D                                l662 06B9  
                              l494 0E11                                l831 0207  
                              l832 0054                                l657 069D  
                              l658 06BD                                l762 03C9  
                              l837 0083                                l838 0099  
                              l775 03C6                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0033                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0ECC  
                              _PSA 040B                                _RX9 00C6  
                              _WDT 0070                                _TX9 04C6  
           getAll_Lights_Line@line 0058                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0E06  
        __end_of_LightsPointSelect 0E39             _setMain_Exception$2229 005F  
                 _getLights_Status 0E63            __size_of_Lights_Control 0059  
                             ?_ISR 0077                               l3121 0638  
                             l3113 0614                               l3115 0622  
                             l3125 0643                               l3151 0712  
                             l4123 0339                               l4115 030D  
                             l4051 0FF7                               l3085 0546  
                             l4109 02F1                               l4141 07BF  
                             l4071 026E                               l4241 00DE  
                             l4225 00BB                               l4129 0347  
                             l4073 0272                               l4243 00DF  
                             l4075 0276                               l4067 0268  
                             l4083 0283                               l3613 044F  
                             l3621 0457                               l4261 0141  
                             l4253 012D                               l4237 00D2  
                             l2805 04C6                               l4093 02A7  
                             l4077 027A                               l4085 0294  
                             l4271 0178                               l2831 0505  
                             l2823 04F2                               l2815 04CE  
                             l4079 027E                               l4335 0597  
                             l3721 0730                               l4193 0086  
                             l2817 04DC                               l4329 057B  
                             l3627 0460                               l3635 0468  
                             l3811 03FA                               l3723 0755  
                             l4275 01AC                               l2827 04FD  
                             l4099 02C3                               l3645 047B  
                             l3653 0483                               l3821 040C  
                             l4277 01BB                               l3823 0418  
                             l3815 0400                               l3807 03F4  
                             l3719 074E                               l3911 067D  
                             l4287 01D7                               l3657 048B  
                             l3649 047F                               l3825 0420  
                             l3737 0699                               l3905 066B  
                             l3675 049D                               l3683 04A9  
                             l3827 042E                               l3763 05E7  
                             l3747 06B3                               l3739 06A1  
                             l3909 0673                               l3941 039B  
                             l3925 0360                               l3781 0FB3  
                             l3679 04A3                               l3767 0602  
                             l2799 04BB                               l3775 0FAA  
                             l3777 0FAD                               l3957 03B6  
                             l3967 03C5                               l3985 07A4  
                             l3897 0657              _myMain_Initialization 07FF  
                     __CFG_WDTE$ON 0000                               u2205 04F3  
                             u2165 04D1                               u2185 04DD  
                             u2195 04E9                               u2660 0542  
                             u2725 0617                               u2745 0623  
                             u3715 0F01                               u2755 062F  
                             _PEIE 005E                               u2765 0639  
                             u2855 0722                               u3745 0739  
                             u4625 00FF                               u4635 0123  
                             _RCIE 0465                               u3940 0415  
                             _RCIF 0065                               u4725 01F4  
                             u4655 015F                               u3960 042B  
                             u4675 019E                               u4695 01CB  
                             u3995 0FC6                               _UART 0042  
                             _TXIE 0464                               _TXIF 0064  
                             __CDS 0027                               __PIR 00A0  
                             _Temp 0036                               _main 0565  
                             btemp 007E                    __end_of_WDT_Set 0E55  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 0728       __size_of_Temp_Initialization 0003  
                            ??_ISR 007A                  _setLights_Trigger 0F4A  
                    ??_Lights_Main 0060                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0DD5                 ?_setLights_Trigger 0058  
                 ??_setPIRLED_Main 005A                              ?_main 006A  
                  __end_of___awdiv 050C                              _ADRES 001E  
                  ___awdiv@divisor 0056                              _T1CON 0010  
                  __end_of___lwdiv 064A                      ?_Lights_Close 0077  
                            i1l500 0DEC                              i1l472 06EF  
                  ___awdiv@counter 005B                              _RCREG 001A  
                            _RCSTA 0018                              _TMR1H 000F  
                            _TMR1L 000E                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TXREG 0019                              _TXSTA 0098  
             setMain_Exception@buz 005D            __end_of_Timeout_Counter 0F07  
                 __end_of_UART_ISR 06F4                 __size_of_UART_Main 000E  
              ??_setLights_Trigger 0059                   __end_of_PIR_Main 020F  
                 __end_of_TMR1_ISR 0F81                   __end_of_UART_Set 0F4A  
                 __end_of_TMR1_Set 0E47                              _getAD 0F9D  
                            _getch 0DEC                              _putch 0E0E  
                 __end_of_WDT_Main 0E96                      _LightsControl 0035  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 0759  
    __end_of_setLED_Initialization 0EA8                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0064                  getPIR_AD@channel2 005F  
                   _setLights_Main 0783                     _setLights_Line 0EA8  
                  __initialization 0013          __end_of_setLights_Trigger 0F65  
                     __end_of_main 05B9                   __end_of_Fosc_Set 0DEC  
                        ??_ADC_Set 0056                             ??_main 006E  
                   ??_Lights_Close 005F                __end_of_Lights_Main 0E21  
       __size_of_LightsPointSelect 000C                             ?_getAD 0056  
           ?_myMain_Initialization 0077                             ?_getch 0077  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 0058                          ??_WDT_Set 0056  
                           _ANSELA 0185                             ?_putch 0077  
                           _ANSELB 0186           _getMain_All_Error_Status 0689  
                           i1l3195 06D4                             _FVRCON 009D  
                           u292_25 06D2                             u293_25 06ED  
           getLights_Status@lights 0058                             _PIRLED 002C  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0F1C  
                           _TRISC6 043E                             _TRISC7 043F  
           getLights_Status@status 0059             __end_of_setLights_Main 07AB  
           __end_of_setLights_Line 0EBA         __end_of_Mcu_Initialization 0ECC  
                           _Lights 0034                             _Timer1 0030  
                __end_of_UART_Main 0E63        __size_of_CDS_Initialization 0004  
          ??_Lights_Initialization 0059                          ??___awdiv 005A  
                        ??___lwdiv 005A                             _setLED 043E  
                           _myMain 0020                   ___awdiv@quotient 005D  
               __size_of_Temp_Main 0003                             saved_w 007E  
                 ?_Timeout_Counter 0077                     _Lights_Control 050C  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0077  
      __size_of_PIR_Initialization 0014         getMain_LightsStatus@status 005E  
          __end_of__initialization 0025                          ?_LED_Main 0077  
                    ?_my_MainTimer 0077                    ?_setLights_Main 0077  
                  ?_setLights_Line 0077              __end_of_UART_Transmit 0FDB  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0077  
               __size_of_getCDS_AD 002A                          ?_UART_ISR 0077  
         __end_of_getLights_Status 0E74                      __end_of_getAD 0FB9  
                        ?_PIR_Main 0077                          ?_TMR1_ISR 0077  
                        ?_UART_Set 0077                      __end_of_getch 0DF2  
                        ?_TMR1_Set 0077                 _LED_Initialization 0E21  
               __size_of_getPIR_AD 013A                        _Lights_Main 0E16  
                    __end_of_putch 0E16           _setLights_Initialization 0DF8  
                        ?_WDT_Main 0077               _getMain_LightsStatus 0728  
       __end_of_set_TimeoutCleared 0DF8                ?_LED_Initialization 0077  
           __end_of_Lights_Control 0565              getMain_LightsStatus@i 005C  
                          ??_getAD 0057                _Temp_Initialization 0DD5  
                          ??_getch 0077                         ??_CDS_Main 0056  
                          ??_putch 0056                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0077  
      __size_of_getAll_Lights_Line 0011                  __end_of_Temp_Main 0DDB  
                          ?_IO_Set 0077                    __CFG_VCAPEN$DIS 0000  
                   ??_my_MainTimer 0057                         ??_LED_Main 005C  
             __end_of_Lights_Close 0F1C          getMain_LightsStatus@count 005B  
             ??_LED_Initialization 005B                  LedPointSelect@led 0057  
                       __pmaintext 0565               ?_Temp_Initialization 0077  
                       ??_UART_ISR 0077                         ??_PIR_Main 0062  
                       ??_TMR1_ISR 0077                         ??_UART_Set 0056  
                    ?_setTemp_Main 0077                 __size_of_setLights 0051  
                       ??_TMR1_Set 0056                         __pintentry 0004  
                          ?_setLED 0058            setLights_Trigger@lights 005A  
                        UART_ISR@i 0078                            _ADC_Set 0DFF  
                       _getTemp_AD 0FDB                         ??_WDT_Main 0056  
            ?_getMain_LightsStatus 0077             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0077                  __end_of_getCDS_AD 0783  
                          _WDT_Set 0E47                         ??_Fosc_Set 0056  
                __end_of_getPIR_AD 0349                      ?_UART_Receive 0077  
                    ?_UART_SetData 0077                    __size_of_IO_Set 0015  
                       getCDS_AD@i 005B                         getCDS_AD@j 005C  
                          _Lights1 00CF                            _VarLED1 0052  
                          _VarLED2 0073              ??_Temp_Initialization 0056  
                   ??_setTemp_Main 005F                            ___awdiv 04AF  
                          ___lwdiv 060A                    __size_of_setLED 0071  
                          __ptext0 0000                            __ptext1 07AB  
                          __ptext2 07D1                            __ptext3 07FF  
                          __ptext4 0FDB                            __ptext5 020F  
                          __ptext6 060A                            __ptext7 0759  
                          __ptext8 0F9D                            __ptext9 0DF2  
                       getPIR_AD@i 0065                         getPIR_AD@j 0063  
                     __size_of_ISR 0013         ??_getMain_All_Error_Status 0057  
          ??_myMain_Initialization 0056           ??_setTemp_Initialization 0056  
                   _LedPointSelect 0F81                            clrloop0 07F8  
                __end_of_setLights 060A               end_of_initialization 0025  
                   ??_UART_Receive 0056                     ??_UART_SetData 0056  
                    _getCDS_Status 0E06                     UART_Transmit@i 0057  
            _setLED_Initialization 0E96     __size_of_Lights_Initialization 0004  
    __end_of_Lights_Initialization 0DE3             ??_getMain_LightsStatus 005A  
                        _UART_Main 0E55                        ?_getTemp_AD 0077  
         setLED_Initialization@led 005A                 _Mcu_Initialization 0EBA  
             __end_of_my_MainTimer 07D1             __end_of_LedPointSelect 0F9D  
              setPIRLED_Main@count 005B                ?_Mcu_Initialization 0077  
            __size_of_Lights_Close 0015            __size_of_setPIRLED_Main 0071  
                 ??_setLights_Main 005C                   ??_setLights_Line 0058  
             setLights_Main@lights 005C    getMain_All_Error_Status@command 005C  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0077  
                   __end_of_IO_Set 0F31         __end_of_CDS_Initialization 0DDF  
       ??_setLights_Initialization 0058                  __size_of_LED_Main 0003  
                _setMain_Exception 064A               ??_Mcu_Initialization 0057  
                    ?_WDT_Clearing 0077                 ?_setMain_Exception 0077  
                ?_getLights_Status 0077           setMain_Exception@command 0061  
                     ?_Lights_Main 0077                         ?_UART_Main 0077  
                __size_of_UART_ISR 0035                  __size_of_PIR_Main 01E7  
                __size_of_TMR1_ISR 001C                 ??_getLights_Status 0058  
                __size_of_UART_Set 0019                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 04AF                ??_setMain_Exception 005B  
                     _Lights_Close 0F07                  __size_of_WDT_Main 0011  
              start_initialization 0013                    ?_LedPointSelect 0077  
             setLights_Line@lights 0058                        __end_of_ISR 0EDF  
       __end_of_PIR_Initialization 0EF3    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0056               __end_of_setTemp_Main 03CD  
               _set_TimeoutCleared 0DF2                           ??_IO_Set 0056  
         __size_of_Timeout_Counter 0014                          _VarErrLED 004E  
              __size_of_getTemp_AD 0025             ?_setLED_Initialization 0077  
                __size_of_Fosc_Set 0005          __end_of_setMain_Exception 0689  
                        _Temp_Main 0DD8                    setLights@lights 005B  
              ?_set_TimeoutCleared 0077                     ??_WDT_Clearing 0056  
                  setLights@status 0059                           ??_setLED 0059  
                         ?_ADC_Set 0077                   ??_Lights_Control 0058  
             __end_of_UART_Receive 0DE7   __end_of_getMain_All_Error_Status 06BF  
             __end_of_UART_SetData 07F7                        __pbssCOMMON 0070  
                        ___latbits 0001             __size_of_UART_Transmit 0022  
                    __pcstackBANK0 0056               ??_set_TimeoutCleared 0056  
       __end_of_getAll_Lights_Line 0E85                           ?_WDT_Set 0077  
                  ??_getCDS_Status 0056                      PIR_Main@error 0069  
                        _getCDS_AD 0759                          _getPIR_AD 020F  
      __size_of_LED_Initialization 000C                         ?_Temp_Main 0077  
                 ___lwdiv@dividend 0058             _setTemp_Initialization 0DD1  
                    _PIR_Main$2939 0067                           ?___awdiv 0056  
            __size_of_my_MainTimer 0026                           ?___lwdiv 0056  
                      ??_UART_Main 0059           setLights_Trigger@command 0058  
   __size_of_myMain_Initialization 0001      __end_of_myMain_Initialization 0800  
                   __size_of_getAD 001C                   ___lwdiv@quotient 005B  
                   __size_of_getch 0006                     _setPIRLED_Main 03CD  
                         _CDS_Main 06F4                     __size_of_putch 0008  
      __end_of_Temp_Initialization 0DD8                  interrupt_function 0004  
                       ?_getCDS_AD 0058                           _LED_Main 0DD2  
                        _setLights 05B9                          clear_ram0 07F7  
 __end_of_setLights_Initialization 0DFF         __size_of_setMain_Exception 003F  
                     _my_MainTimer 07AB                         ?_getPIR_AD 005F  
                    _UART_Transmit 0FB9                           _GO_nDONE 00F9  
                ??_Timeout_Counter 0056                           _UART_ISR 06BF  
                         _PIR_Main 0028                           _TMR1_ISR 0F65  
                         _UART_Set 0F31                           _TMR1_Set 0E39  
                     ??_getTemp_AD 0058                           _WDT_Main 0E85  
                 __size_of_ADC_Set 0007               __size_of_Lights_Main 000B  
            __size_of_setTemp_Main 0084             __end_of_setPIRLED_Main 043E  
   getMain_All_Error_Status@status 005D                        getAD@adcon0 0057  
                      getAD@adcon1 0056               __end_of_WDT_Clearing 0004  
                         _Fosc_Set 0DE7                   __size_of_WDT_Set 000E  
          setMain_Exception@status 005E  __size_of_getMain_All_Error_Status 0036  
        ?_getMain_All_Error_Status 0077                         ?_setLights 0059  
               __end_of_getTemp_AD 1000                     ?_UART_Transmit 0077  
                         _SwDetect 0072                        ??_Temp_Main 0060  
    _getMain_All_Error_Status$2245 0058      _getMain_All_Error_Status$2247 005A  
                        setLED@led 0059              __size_of_UART_Receive 0004  
            __size_of_UART_SetData 0026                       _setTemp_Main 0349  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0056                 _CDS_Initialization 0DDB  
            _Lights_Initialization 0DDF      __size_of_getMain_LightsStatus 0031  
                getTemp_AD@channel 005A                    ?_setPIRLED_Main 0077  
                  ___lwdiv@divisor 0056                ?_CDS_Initialization 0077  
                  ___lwdiv@counter 005D                           __ptext10 0EF3  
                         __ptext11 0E85                           __ptext20 0DD5  
                         __ptext12 0002                           __ptext21 0DD1  
                         __ptext13 0E55                           __ptext30 0E47  
                         __ptext22 0028                           __ptext14 0FB9  
                         __ptext31 0F31                           __ptext23 064A  
                         __ptext15 0E0E                           __ptext40 050C  
                         __ptext32 0E39                           __ptext24 0F4A  
                         __ptext16 0DE3                           __ptext41 0F07  
                         __ptext33 0F1C                           __ptext25 0E74  
                         __ptext17 0DD8                           __ptext50 0E96  
                         __ptext42 0728                           __ptext34 0DE7  
                         __ptext26 0689                           __ptext18 0349  
                         __ptext51 043E                           __ptext43 0E63  
                         __ptext35 0DFF                           __ptext27 0E06  
                         __ptext19 04AF                           __ptext52 0F81  
                         __ptext44 0DDF                           __ptext36 0E16  
                         __ptext28 0EDF                           __ptext53 06F4  
                         __ptext45 0DF8                           __ptext37 0783  
                         __ptext29 0EBA                           __ptext54 0DDB  
                         __ptext46 0E2D                           __ptext38 05B9  
                         __ptext55 0ECC                           __ptext47 0DD2  
                         __ptext39 0EA8                           __ptext56 06BF  
                         __ptext48 03CD                           __ptext57 0DEC  
                         __ptext49 0E21                           __ptext58 0F65  
        __size_of_getLights_Status 0011            ??_setLED_Initialization 005A  
                      ??_getCDS_AD 0059                      setLED@command 0058  
                    __size_of_main 0054                       _UART_Receive 0DE3  
                     _UART_SetData 07D1                        ??_getPIR_AD 0060  
               _PIR_Initialization 0EDF               ??_CDS_Initialization 0056  
      __size_of_Mcu_Initialization 0012                ?_PIR_Initialization 0077  
                         main@argc 006A                           main@argv 006C  
__size_of_setLights_Initialization 0007                          putch@byte 0056  
        ?_setLights_Initialization 0077               Lights_Control@lights 005A  
             ??_PIR_Initialization 005A                           intlevel1 0000  
                  ??_UART_Transmit 0057                        ??_setLights 005A  
          ?_setTemp_Initialization 0077            LightsPointSelect@lights 0057  
               _getAll_Lights_Line 0E74            __size_of_setLights_Main 0028  
          __size_of_setLights_Line 0012                ?_getAll_Lights_Line 0077  
           ?_Lights_Initialization 0077              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0058        __size_of_set_TimeoutCleared 0006  
                _LightsPointSelect 0E2D               ??_getAll_Lights_Line 0058  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0077  
                  _Timeout_Counter 0EF3         __end_of_LED_Initialization 0E2D  
            __end_of_getCDS_Status 0E0E     __end_of_setTemp_Initialization 0DD2  
                getCDS_AD@channel1 005D                  getCDS_AD@channel2 0058  
              ??_LightsPointSelect 0056  
